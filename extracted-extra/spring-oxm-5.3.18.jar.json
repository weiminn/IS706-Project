{"spring-oxm-5.3.18.jar": [["org.springframework.oxm.xstream.XStreamMarshaller", "org.springframework.oxm.xstream.XStreamMarshaller()", "public org.springframework.oxm.xstream.XStreamMarshaller()"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setReflectionProvider(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)", "public void setReflectionProvider(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(com.thoughtworks.xstream.io.HierarchicalStreamDriver)", "public void setStreamDriver(com.thoughtworks.xstream.io.HierarchicalStreamDriver)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setMapper(com.thoughtworks.xstream.mapper.Mapper)", "public void setMapper(com.thoughtworks.xstream.mapper.Mapper)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setMapperWrappers(java.lang.Class<? extends com.thoughtworks.xstream.mapper.MapperWrapper>...)", "public void setMapperWrappers(java.lang.Class<? extends com.thoughtworks.xstream.mapper.MapperWrapper>...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup)", "public void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setConverterRegistry(com.thoughtworks.xstream.converters.ConverterRegistry)", "public void setConverterRegistry(com.thoughtworks.xstream.converters.ConverterRegistry)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setConverters(com.thoughtworks.xstream.converters.ConverterMatcher...)", "public void setConverters(com.thoughtworks.xstream.converters.ConverterMatcher...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setTypePermissions(com.thoughtworks.xstream.security.TypePermission...)", "public void setTypePermissions(com.thoughtworks.xstream.security.TypePermission...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy)", "public void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setMode(int)", "public void setMode(int)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setAliases(java.util.Map<java.lang.String, ?>)", "public void setAliases(java.util.Map<java.lang.String, ?>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(java.util.Map<java.lang.String, ?>)", "public void setAliasesByType(java.util.Map<java.lang.String, ?>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(java.util.Map<java.lang.String, java.lang.String>)", "public void setFieldAliases(java.util.Map<java.lang.String, java.lang.String>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(java.lang.Class<?>...)", "public void setUseAttributeForTypes(java.lang.Class<?>...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(java.util.Map<?, ?>)", "public void setUseAttributeFor(java.util.Map<?, ?>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(java.util.Map<java.lang.Class<?>, java.lang.String>)", "public void setImplicitCollections(java.util.Map<java.lang.Class<?>, java.lang.String>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(java.util.Map<java.lang.Class<?>, java.lang.String>)", "public void setOmittedFields(java.util.Map<java.lang.Class<?>, java.lang.String>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(java.lang.Class<?>...)", "public void setAnnotatedClasses(java.lang.Class<?>...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setAutodetectAnnotations(boolean)", "public void setAutodetectAnnotations(boolean)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setEncoding(java.lang.String)", "public void setEncoding(java.lang.String)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setNameCoder(com.thoughtworks.xstream.io.naming.NameCoder)", "public void setNameCoder(com.thoughtworks.xstream.io.naming.NameCoder)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setSupportedClasses(java.lang.Class<?>...)", "public void setSupportedClasses(java.lang.Class<?>...)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.setBeanClassLoader(java.lang.ClassLoader)", "public void setBeanClassLoader(java.lang.ClassLoader)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.afterPropertiesSet()", "public void afterPropertiesSet()"], ["com.thoughtworks.xstream.XStream", "org.springframework.oxm.xstream.XStreamMarshaller.getXStream()", "public final com.thoughtworks.xstream.XStream getXStream()"], ["boolean", "org.springframework.oxm.xstream.XStreamMarshaller.supports(java.lang.Class<?>)", "public boolean supports(java.lang.Class<?>)"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.marshalOutputStream(java.lang.Object, java.io.OutputStream)", "public void marshalOutputStream(java.lang.Object, java.io.OutputStream) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.marshalOutputStream(java.lang.Object, java.io.OutputStream, com.thoughtworks.xstream.converters.DataHolder)", "public void marshalOutputStream(java.lang.Object, java.io.OutputStream, com.thoughtworks.xstream.converters.DataHolder) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.marshalWriter(java.lang.Object, java.io.Writer)", "public void marshalWriter(java.lang.Object, java.io.Writer) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["void", "org.springframework.oxm.xstream.XStreamMarshaller.marshalWriter(java.lang.Object, java.io.Writer, com.thoughtworks.xstream.converters.DataHolder)", "public void marshalWriter(java.lang.Object, java.io.Writer, com.thoughtworks.xstream.converters.DataHolder) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["java.lang.Object", "org.springframework.oxm.xstream.XStreamMarshaller.unmarshalInputStream(java.io.InputStream)", "public java.lang.Object unmarshalInputStream(java.io.InputStream) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["java.lang.Object", "org.springframework.oxm.xstream.XStreamMarshaller.unmarshalInputStream(java.io.InputStream, com.thoughtworks.xstream.converters.DataHolder)", "public java.lang.Object unmarshalInputStream(java.io.InputStream, com.thoughtworks.xstream.converters.DataHolder) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["java.lang.Object", "org.springframework.oxm.xstream.XStreamMarshaller.unmarshalReader(java.io.Reader)", "public java.lang.Object unmarshalReader(java.io.Reader) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["java.lang.Object", "org.springframework.oxm.xstream.XStreamMarshaller.unmarshalReader(java.io.Reader, com.thoughtworks.xstream.converters.DataHolder)", "public java.lang.Object unmarshalReader(java.io.Reader, com.thoughtworks.xstream.converters.DataHolder) throws org.springframework.oxm.XmlMappingException, java.io.IOException"], ["org.springframework.oxm.xstream.CatchAllConverter", "org.springframework.oxm.xstream.CatchAllConverter()", "public org.springframework.oxm.xstream.CatchAllConverter()"], ["boolean", "org.springframework.oxm.xstream.CatchAllConverter.canConvert(java.lang.Class)", "public boolean canConvert(java.lang.Class)"], ["void", "org.springframework.oxm.xstream.CatchAllConverter.marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext)", "public void marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext)"], ["java.lang.Object", "org.springframework.oxm.xstream.CatchAllConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext)", "public java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext)"], ["org.springframework.oxm.MarshallingFailureException", "org.springframework.oxm.MarshallingFailureException(java.lang.String)", "public org.springframework.oxm.MarshallingFailureException(java.lang.String)"], ["org.springframework.oxm.MarshallingFailureException", "org.springframework.oxm.MarshallingFailureException(java.lang.String, java.lang.Throwable)", "public org.springframework.oxm.MarshallingFailureException(java.lang.String, java.lang.Throwable)"], ["org.springframework.oxm.config.OxmNamespaceHandler", "org.springframework.oxm.config.OxmNamespaceHandler()", "public org.springframework.oxm.config.OxmNamespaceHandler()"], ["void", "org.springframework.oxm.config.OxmNamespaceHandler.init()", "public void init()"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setContentHandler(org.xml.sax.ContentHandler)", "public void setContentHandler(org.xml.sax.ContentHandler)"], ["org.xml.sax.ContentHandler", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getContentHandler()", "public org.xml.sax.ContentHandler getContentHandler()"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setDTDHandler(org.xml.sax.DTDHandler)", "public void setDTDHandler(org.xml.sax.DTDHandler)"], ["org.xml.sax.DTDHandler", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getDTDHandler()", "public org.xml.sax.DTDHandler getDTDHandler()"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setEntityResolver(org.xml.sax.EntityResolver)", "public void setEntityResolver(org.xml.sax.EntityResolver)"], ["org.xml.sax.EntityResolver", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getEntityResolver()", "public org.xml.sax.EntityResolver getEntityResolver()"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setErrorHandler(org.xml.sax.ErrorHandler)", "public void setErrorHandler(org.xml.sax.ErrorHandler)"], ["org.xml.sax.ErrorHandler", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getErrorHandler()", "public org.xml.sax.ErrorHandler getErrorHandler()"], ["boolean", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getFeature(java.lang.String)", "public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setFeature(java.lang.String, boolean)", "public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException"], ["java.lang.Object", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.getProperty(java.lang.String)", "public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.setProperty(java.lang.String, java.lang.Object)", "public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.parse(org.xml.sax.InputSource)", "public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException"], ["void", "org.springframework.oxm.support.MarshallingSource$MarshallingXMLReader.parse(java.lang.String)", "public void parse(java.lang.String) throws org.xml.sax.SAXException"], ["org.springframework.oxm.support.SaxResourceUtils", "org.springframework.oxm.support.SaxResourceUtils()", "public org.springframework.oxm.support.SaxResourceUtils()"], ["org.xml.sax.InputSource", "org.springframework.oxm.support.SaxResourceUtils.createInputSource(org.springframework.core.io.Resource)", "public static org.xml.sax.InputSource createInputSource(org.springframework.core.io.Resource) throws java.io.IOException"], ["org.springframework.oxm.support.AbstractMarshaller", "org.springframework.oxm.support.AbstractMarshaller()", "public org.springframework.oxm.support.AbstractMarshaller()"], ["void", "org.springframework.oxm.support.AbstractMarshaller.setSupportDtd(boolean)", "public void setSupportDtd(boolean)"], ["boolean", "org.springframework.oxm.support.AbstractMarshaller.isSupportDtd()", "public boolean isSupportDtd()"], ["void", "org.springframework.oxm.support.AbstractMarshaller.setProcessExternalEntities(boolean)", "public void setProcessExternalEntities(boolean)"], ["boolean", "org.springframework.oxm.support.AbstractMarshaller.isProcessExternalEntities()", "public boolean isProcessExternalEntities()"], ["void", "org.springframework.oxm.support.AbstractMarshaller.marshal(java.lang.Object, javax.xml.transform.Result)", "public final void marshal(java.lang.Object, javax.xml.transform.Result) throws java.io.IOException, org.springframework.oxm.XmlMappingException"], ["java.lang.Object", "org.springframework.oxm.support.AbstractMarshaller.unmarshal(javax.xml.transform.Source)", "public final java.lang.Object unmarshal(javax.xml.transform.Source) throws java.io.IOException, org.springframework.oxm.XmlMappingException"], ["org.springframework.oxm.support.MarshallingSource", "org.springframework.oxm.support.MarshallingSource(org.springframework.oxm.Marshaller, java.lang.Object)", "public org.springframework.oxm.support.MarshallingSource(org.springframework.oxm.Marshaller, java.lang.Object)"], ["org.springframework.oxm.Marshaller", "org.springframework.oxm.support.MarshallingSource.getMarshaller()", "public org.springframework.oxm.Marshaller getMarshaller()"], ["java.lang.Object", "org.springframework.oxm.support.MarshallingSource.getContent()", "public java.lang.Object getContent()"], ["void", "org.springframework.oxm.support.MarshallingSource.setInputSource(org.xml.sax.InputSource)", "public void setInputSource(org.xml.sax.InputSource)"], ["void", "org.springframework.oxm.support.MarshallingSource.setXMLReader(org.xml.sax.XMLReader)", "public void setXMLReader(org.xml.sax.XMLReader)"], ["org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource", "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource(java.lang.String, byte[], int, int)", "public org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource(java.lang.String, byte[], int, int)"], ["java.io.InputStream", "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource.getInputStream()", "public java.io.InputStream getInputStream()"], ["java.io.OutputStream", "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource.getContentType()", "public java.lang.String getContentType()"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller$ByteArrayDataSource.getName()", "public java.lang.String getName()"], ["org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller(org.springframework.oxm.mime.MimeContainer)", "public org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller(org.springframework.oxm.mime.MimeContainer)"], ["byte[]", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller.getAttachmentAsByteArray(java.lang.String)", "public byte[] getAttachmentAsByteArray(java.lang.String)"], ["javax.activation.DataHandler", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller.getAttachmentAsDataHandler(java.lang.String)", "public javax.activation.DataHandler getAttachmentAsDataHandler(java.lang.String)"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller.isXOPPackage()", "public boolean isXOPPackage()"], ["org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller(org.springframework.oxm.mime.MimeContainer)", "public org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller(org.springframework.oxm.mime.MimeContainer)"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller.addMtomAttachment(byte[], int, int, java.lang.String, java.lang.String, java.lang.String)", "public java.lang.String addMtomAttachment(byte[], int, int, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller.addMtomAttachment(javax.activation.DataHandler, java.lang.String, java.lang.String)", "public java.lang.String addMtomAttachment(javax.activation.DataHandler, java.lang.String, java.lang.String)"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller.addSwaRefAttachment(javax.activation.DataHandler)", "public java.lang.String addSwaRefAttachment(javax.activation.DataHandler)"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentMarshaller.isXOPPackage()", "public boolean isXOPPackage()"], ["org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner", "org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner(java.lang.ClassLoader, java.lang.String...)", "public org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner(java.lang.ClassLoader, java.lang.String...)"], ["java.lang.Class<?>[]", "org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner.scanPackages()", "public java.lang.Class<?>[] scanPackages() throws org.springframework.oxm.UncategorizedMappingException"], ["org.springframework.oxm.jaxb.Jaxb2Marshaller", "org.springframework.oxm.jaxb.Jaxb2Marshaller()", "public org.springframework.oxm.jaxb.Jaxb2Marshaller()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setContextPaths(java.lang.String...)", "public void setContextPaths(java.lang.String...)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setContextPath(java.lang.String)", "public void setContextPath(java.lang.String)"], ["java.lang.String", "org.springframework.oxm.jaxb.Jaxb2Marshaller.getContextPath()", "public java.lang.String getContextPath()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setClassesToBeBound(java.lang.Class<?>...)", "public void setClassesToBeBound(java.lang.Class<?>...)"], ["java.lang.Class<?>[]", "org.springframework.oxm.jaxb.Jaxb2Marshaller.getClassesToBeBound()", "public java.lang.Class<?>[] getClassesToBeBound()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setPackagesToScan(java.lang.String...)", "public void setPackagesToScan(java.lang.String...)"], ["java.lang.String[]", "org.springframework.oxm.jaxb.Jaxb2Marshaller.getPackagesToScan()", "public java.lang.String[] getPackagesToScan()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setJaxbContextProperties(java.util.Map<java.lang.String, ?>)", "public void setJaxbContextProperties(java.util.Map<java.lang.String, ?>)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setMarshallerProperties(java.util.Map<java.lang.String, ?>)", "public void setMarshallerProperties(java.util.Map<java.lang.String, ?>)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setUnmarshallerProperties(java.util.Map<java.lang.String, ?>)", "public void setUnmarshallerProperties(java.util.Map<java.lang.String, ?>)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setMarshallerListener(javax.xml.bind.Marshaller$Listener)", "public void setMarshallerListener(javax.xml.bind.Marshaller$Listener)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setUnmarshallerListener(javax.xml.bind.Unmarshaller$Listener)", "public void setUnmarshallerListener(javax.xml.bind.Unmarshaller$Listener)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setValidationEventHandler(javax.xml.bind.ValidationEventHandler)", "public void setValidationEventHandler(javax.xml.bind.ValidationEventHandler)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setAdapters(javax.xml.bind.annotation.adapters.XmlAdapter<?, ?>...)", "public void setAdapters(javax.xml.bind.annotation.adapters.XmlAdapter<?, ?>...)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSchema(org.springframework.core.io.Resource)", "public void setSchema(org.springframework.core.io.Resource)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSchemas(org.springframework.core.io.Resource...)", "public void setSchemas(org.springframework.core.io.Resource...)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSchemaLanguage(java.lang.String)", "public void setSchemaLanguage(java.lang.String)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSchemaResourceResolver(org.w3c.dom.ls.LSResourceResolver)", "public void setSchemaResourceResolver(org.w3c.dom.ls.LSResourceResolver)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setLazyInit(boolean)", "public void setLazyInit(boolean)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setMtomEnabled(boolean)", "public void setMtomEnabled(boolean)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSupportJaxbElementClass(boolean)", "public void setSupportJaxbElementClass(boolean)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setCheckForXmlRootElement(boolean)", "public void setCheckForXmlRootElement(boolean)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setMappedClass(java.lang.Class<?>)", "public void setMappedClass(java.lang.Class<?>)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setSupportDtd(boolean)", "public void setSupportDtd(boolean)"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller.isSupportDtd()", "public boolean isSupportDtd()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setProcessExternalEntities(boolean)", "public void setProcessExternalEntities(boolean)"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller.isProcessExternalEntities()", "public boolean isProcessExternalEntities()"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.setBeanClassLoader(java.lang.ClassLoader)", "public void setBeanClassLoader(java.lang.ClassLoader)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.afterPropertiesSet()", "public void afterPropertiesSet() throws java.lang.Exception"], ["javax.xml.bind.JAXBContext", "org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext()", "public javax.xml.bind.JAXBContext getJaxbContext()"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller.supports(java.lang.Class<?>)", "public boolean supports(java.lang.Class<?>)"], ["boolean", "org.springframework.oxm.jaxb.Jaxb2Marshaller.supports(java.lang.reflect.Type)", "public boolean supports(java.lang.reflect.Type)"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(java.lang.Object, javax.xml.transform.Result)", "public void marshal(java.lang.Object, javax.xml.transform.Result) throws org.springframework.oxm.XmlMappingException"], ["void", "org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(java.lang.Object, javax.xml.transform.Result, org.springframework.oxm.mime.MimeContainer)", "public void marshal(java.lang.Object, javax.xml.transform.Result, org.springframework.oxm.mime.MimeContainer) throws org.springframework.oxm.XmlMappingException"], ["javax.xml.bind.Marshaller", "org.springframework.oxm.jaxb.Jaxb2Marshaller.createMarshaller()", "public javax.xml.bind.Marshaller createMarshaller()"], ["java.lang.Object", "org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(javax.xml.transform.Source)", "public java.lang.Object unmarshal(javax.xml.transform.Source) throws org.springframework.oxm.XmlMappingException"], ["java.lang.Object", "org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer)", "public java.lang.Object unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer) throws org.springframework.oxm.XmlMappingException"], ["javax.xml.bind.Unmarshaller", "org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller()", "public javax.xml.bind.Unmarshaller createUnmarshaller()"], ["org.springframework.oxm.UnmarshallingFailureException", "org.springframework.oxm.UnmarshallingFailureException(java.lang.String)", "public org.springframework.oxm.UnmarshallingFailureException(java.lang.String)"], ["org.springframework.oxm.UnmarshallingFailureException", "org.springframework.oxm.UnmarshallingFailureException(java.lang.String, java.lang.Throwable)", "public org.springframework.oxm.UnmarshallingFailureException(java.lang.String, java.lang.Throwable)"], ["org.springframework.oxm.ValidationFailureException", "org.springframework.oxm.ValidationFailureException(java.lang.String)", "public org.springframework.oxm.ValidationFailureException(java.lang.String)"], ["org.springframework.oxm.ValidationFailureException", "org.springframework.oxm.ValidationFailureException(java.lang.String, java.lang.Throwable)", "public org.springframework.oxm.ValidationFailureException(java.lang.String, java.lang.Throwable)"], ["org.springframework.oxm.XmlMappingException", "org.springframework.oxm.XmlMappingException(java.lang.String)", "public org.springframework.oxm.XmlMappingException(java.lang.String)"], ["org.springframework.oxm.XmlMappingException", "org.springframework.oxm.XmlMappingException(java.lang.String, java.lang.Throwable)", "public org.springframework.oxm.XmlMappingException(java.lang.String, java.lang.Throwable)"], ["org.springframework.oxm.jibx.JibxMarshaller", "org.springframework.oxm.jibx.JibxMarshaller()", "public org.springframework.oxm.jibx.JibxMarshaller()"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setTargetClass(java.lang.Class<?>)", "public void setTargetClass(java.lang.Class<?>)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setTargetPackage(java.lang.String)", "public void setTargetPackage(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setBindingName(java.lang.String)", "public void setBindingName(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setIndent(int)", "public void setIndent(int)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setEncoding(java.lang.String)", "public void setEncoding(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setStandalone(java.lang.Boolean)", "public void setStandalone(java.lang.Boolean)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setDocTypeRootElementName(java.lang.String)", "public void setDocTypeRootElementName(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setDocTypeSystemId(java.lang.String)", "public void setDocTypeSystemId(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setDocTypePublicId(java.lang.String)", "public void setDocTypePublicId(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.setDocTypeInternalSubset(java.lang.String)", "public void setDocTypeInternalSubset(java.lang.String)"], ["void", "org.springframework.oxm.jibx.JibxMarshaller.afterPropertiesSet()", "public void afterPropertiesSet() throws org.jibx.runtime.JiBXException"], ["boolean", "org.springframework.oxm.jibx.JibxMarshaller.supports(java.lang.Class<?>)", "public boolean supports(java.lang.Class<?>)"], ["org.springframework.oxm.XmlMappingException", "org.springframework.oxm.jibx.JibxMarshaller.convertJibxException(org.jibx.runtime.JiBXException, boolean)", "public org.springframework.oxm.XmlMappingException convertJibxException(org.jibx.runtime.JiBXException, boolean)"], ["org.springframework.oxm.UncategorizedMappingException", "org.springframework.oxm.UncategorizedMappingException(java.lang.String, java.lang.Throwable)", "public org.springframework.oxm.UncategorizedMappingException(java.lang.String, java.lang.Throwable)"]]}