{"jetty-util-9.2.22.v20170606.jar": [["boolean", "org.eclipse.jetty.util.AbstractTrie.put(V)"], ["V", "org.eclipse.jetty.util.AbstractTrie.remove(java.lang.String)"], ["V", "org.eclipse.jetty.util.AbstractTrie.get(java.lang.String)"], ["V", "org.eclipse.jetty.util.AbstractTrie.get(java.nio.ByteBuffer)"], ["V", "org.eclipse.jetty.util.AbstractTrie.getBest(java.lang.String)"], ["V", "org.eclipse.jetty.util.AbstractTrie.getBest(byte[], int, int)"], ["boolean", "org.eclipse.jetty.util.AbstractTrie.isCaseInsensitive()"], ["org.eclipse.jetty.util.ArrayQueue", "org.eclipse.jetty.util.ArrayQueue()"], ["org.eclipse.jetty.util.ArrayQueue", "org.eclipse.jetty.util.ArrayQueue(java.lang.Object)"], ["org.eclipse.jetty.util.ArrayQueue", "org.eclipse.jetty.util.ArrayQueue(int)"], ["org.eclipse.jetty.util.ArrayQueue", "org.eclipse.jetty.util.ArrayQueue(int, int)"], ["org.eclipse.jetty.util.ArrayQueue", "org.eclipse.jetty.util.ArrayQueue(int, int, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.ArrayQueue.lock()"], ["int", "org.eclipse.jetty.util.ArrayQueue.getCapacity()"], ["boolean", "org.eclipse.jetty.util.ArrayQueue.add(E)"], ["boolean", "org.eclipse.jetty.util.ArrayQueue.offer(E)"], ["void", "org.eclipse.jetty.util.ArrayQueue.addUnsafe(E)"], ["E", "org.eclipse.jetty.util.ArrayQueue.element()"], ["E", "org.eclipse.jetty.util.ArrayQueue.peek()"], ["E", "org.eclipse.jetty.util.ArrayQueue.peekUnsafe()"], ["E", "org.eclipse.jetty.util.ArrayQueue.poll()"], ["E", "org.eclipse.jetty.util.ArrayQueue.pollUnsafe()"], ["E", "org.eclipse.jetty.util.ArrayQueue.remove()"], ["void", "org.eclipse.jetty.util.ArrayQueue.clear()"], ["boolean", "org.eclipse.jetty.util.ArrayQueue.isEmpty()"], ["int", "org.eclipse.jetty.util.ArrayQueue.size()"], ["E", "org.eclipse.jetty.util.ArrayQueue.get(int)"], ["E", "org.eclipse.jetty.util.ArrayQueue.getUnsafe(int)"], ["E", "org.eclipse.jetty.util.ArrayQueue.remove(int)"], ["E", "org.eclipse.jetty.util.ArrayQueue.set(int, E)"], ["void", "org.eclipse.jetty.util.ArrayQueue.add(int, E)"], ["org.eclipse.jetty.util.ArrayTernaryTrie", "org.eclipse.jetty.util.ArrayTernaryTrie()"], ["org.eclipse.jetty.util.ArrayTernaryTrie", "org.eclipse.jetty.util.ArrayTernaryTrie(boolean)"], ["org.eclipse.jetty.util.ArrayTernaryTrie", "org.eclipse.jetty.util.ArrayTernaryTrie(int)"], ["org.eclipse.jetty.util.ArrayTernaryTrie", "org.eclipse.jetty.util.ArrayTernaryTrie(boolean, int)"], ["org.eclipse.jetty.util.ArrayTernaryTrie", "org.eclipse.jetty.util.ArrayTernaryTrie(org.eclipse.jetty.util.ArrayTernaryTrie<V>, double)"], ["boolean", "org.eclipse.jetty.util.ArrayTernaryTrie.put(java.lang.String, V)"], ["V", "org.eclipse.jetty.util.ArrayTernaryTrie.get(java.lang.String, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTernaryTrie.get(java.nio.ByteBuffer, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTernaryTrie.getBest(java.lang.String)"], ["V", "org.eclipse.jetty.util.ArrayTernaryTrie.getBest(java.lang.String, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTernaryTrie.getBest(java.nio.ByteBuffer, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.ArrayTernaryTrie.toString()"], ["boolean", "org.eclipse.jetty.util.ArrayTernaryTrie.isFull()"], ["int", "org.eclipse.jetty.util.ArrayTernaryTrie.hilo(int)"], ["void", "org.eclipse.jetty.util.ArrayTernaryTrie.dump()"], ["org.eclipse.jetty.util.ArrayTrie", "org.eclipse.jetty.util.ArrayTrie()"], ["org.eclipse.jetty.util.ArrayTrie", "org.eclipse.jetty.util.ArrayTrie(int)"], ["boolean", "org.eclipse.jetty.util.ArrayTrie.put(java.lang.String, V)"], ["V", "org.eclipse.jetty.util.ArrayTrie.get(java.lang.String, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTrie.get(java.nio.ByteBuffer, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTrie.getBest(byte[], int, int)"], ["V", "org.eclipse.jetty.util.ArrayTrie.getBest(java.nio.ByteBuffer, int, int)"], ["V", "org.eclipse.jetty.util.ArrayTrie.getBest(java.lang.String, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.ArrayTrie.toString()"], ["boolean", "org.eclipse.jetty.util.ArrayTrie.isFull()"], ["org.eclipse.jetty.util.ArrayUtil", "org.eclipse.jetty.util.ArrayUtil()"], ["<T> T[]", "org.eclipse.jetty.util.ArrayUtil.removeFromArray(T[], java.lang.Object)"], ["<T> T[]", "org.eclipse.jetty.util.ArrayUtil.addToArray(T[], T, java.lang.Class<?>)"], ["<T> T[]", "org.eclipse.jetty.util.ArrayUtil.prependToArray(T, T[], java.lang.Class<?>)"], ["<E> java.util.List<E>", "org.eclipse.jetty.util.ArrayUtil.asMutableList(E[])"], ["<T> T[]", "org.eclipse.jetty.util.ArrayUtil.removeNulls(T[])"], ["boolean", "org.eclipse.jetty.util.Atomics.updateMin(java.util.concurrent.atomic.AtomicLong, long)"], ["boolean", "org.eclipse.jetty.util.Atomics.updateMax(java.util.concurrent.atomic.AtomicLong, long)"], ["boolean", "org.eclipse.jetty.util.Atomics.updateMin(java.util.concurrent.atomic.AtomicInteger, int)"], ["boolean", "org.eclipse.jetty.util.Atomics.updateMax(java.util.concurrent.atomic.AtomicInteger, int)"], ["org.eclipse.jetty.util.AttributesMap", "org.eclipse.jetty.util.AttributesMap()"], ["org.eclipse.jetty.util.AttributesMap", "org.eclipse.jetty.util.AttributesMap(org.eclipse.jetty.util.AttributesMap)"], ["void", "org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>>", "org.eclipse.jetty.util.AttributesMap.getAttributeEntrySet()"], ["void", "org.eclipse.jetty.util.AttributesMap.clearAttributes()"], ["int", "org.eclipse.jetty.util.AttributesMap.size()"], ["java.lang.String", "org.eclipse.jetty.util.AttributesMap.toString()"], ["void", "org.eclipse.jetty.util.AttributesMap.addAll(org.eclipse.jetty.util.Attributes)"], ["java.lang.String", "org.eclipse.jetty.util.B64Code.encode(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.B64Code.encode(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.B64Code.encode(java.lang.String, java.nio.charset.Charset)"], ["char[]", "org.eclipse.jetty.util.B64Code.encode(byte[])"], ["char[]", "org.eclipse.jetty.util.B64Code.encode(byte[], boolean)"], ["java.lang.String", "org.eclipse.jetty.util.B64Code.decode(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.B64Code.decode(java.lang.String, java.nio.charset.Charset)"], ["byte[]", "org.eclipse.jetty.util.B64Code.decode(char[])"], ["byte[]", "org.eclipse.jetty.util.B64Code.decode(java.lang.String)"], ["void", "org.eclipse.jetty.util.B64Code.decode(java.lang.String, java.io.ByteArrayOutputStream)"], ["void", "org.eclipse.jetty.util.B64Code.encode(int, java.lang.Appendable)"], ["void", "org.eclipse.jetty.util.B64Code.encode(long, java.lang.Appendable)"], ["org.eclipse.jetty.util.BlockingArrayQueue$Itr", "org.eclipse.jetty.util.BlockingArrayQueue$Itr(org.eclipse.jetty.util.BlockingArrayQueue, java.lang.Object[], int)"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.hasNext()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.next()"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.hasPrevious()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.previous()"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.nextIndex()"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.previousIndex()"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.remove()"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.set(E)"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue$Itr.add(E)"], ["org.eclipse.jetty.util.BlockingArrayQueue", "org.eclipse.jetty.util.BlockingArrayQueue()"], ["org.eclipse.jetty.util.BlockingArrayQueue", "org.eclipse.jetty.util.BlockingArrayQueue(int)"], ["org.eclipse.jetty.util.BlockingArrayQueue", "org.eclipse.jetty.util.BlockingArrayQueue(int, int)"], ["org.eclipse.jetty.util.BlockingArrayQueue", "org.eclipse.jetty.util.BlockingArrayQueue(int, int, int)"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue.clear()"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.size()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.poll()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.peek()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.remove()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.element()"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue.offer(E)"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue.add(E)"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue.put(E)"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue.offer(E, long, java.util.concurrent.TimeUnit)"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.take()"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.poll(long, java.util.concurrent.TimeUnit)"], ["boolean", "org.eclipse.jetty.util.BlockingArrayQueue.remove(java.lang.Object)"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.remainingCapacity()"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.drainTo(java.util.Collection<? super E>)"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.drainTo(java.util.Collection<? super E>, int)"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.get(int)"], ["void", "org.eclipse.jetty.util.BlockingArrayQueue.add(int, E)"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.set(int, E)"], ["E", "org.eclipse.jetty.util.BlockingArrayQueue.remove(int)"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.getCapacity()"], ["int", "org.eclipse.jetty.util.BlockingArrayQueue.getMaxCapacity()"], ["org.eclipse.jetty.util.BlockingCallback", "org.eclipse.jetty.util.BlockingCallback()"], ["void", "org.eclipse.jetty.util.BlockingCallback.succeeded()"], ["void", "org.eclipse.jetty.util.BlockingCallback.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.BlockingCallback.block()"], ["java.lang.String", "org.eclipse.jetty.util.BlockingCallback.toString()"], ["org.eclipse.jetty.util.BufferUtil", "org.eclipse.jetty.util.BufferUtil()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.allocate(int)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.allocateDirect(int)"], ["void", "org.eclipse.jetty.util.BufferUtil.clear(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.clearToFill(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.flipToFill(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.flipToFlush(java.nio.ByteBuffer, int)"], ["byte[]", "org.eclipse.jetty.util.BufferUtil.toArray(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.util.BufferUtil.isEmpty(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.util.BufferUtil.hasContent(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.util.BufferUtil.isFull(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.length(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.space(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.util.BufferUtil.compact(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.put(java.nio.ByteBuffer, java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.flipPutFlip(java.nio.ByteBuffer, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.append(java.nio.ByteBuffer, byte[], int, int)"], ["void", "org.eclipse.jetty.util.BufferUtil.append(java.nio.ByteBuffer, byte)"], ["int", "org.eclipse.jetty.util.BufferUtil.append(java.nio.ByteBuffer, java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.fill(java.nio.ByteBuffer, byte[], int, int)"], ["void", "org.eclipse.jetty.util.BufferUtil.readFrom(java.io.File, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.readFrom(java.io.InputStream, int, java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.writeTo(java.nio.ByteBuffer, java.io.OutputStream)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toString(java.nio.ByteBuffer)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toUTF8String(java.nio.ByteBuffer)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toString(java.nio.ByteBuffer, java.nio.charset.Charset)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toString(java.nio.ByteBuffer, int, int, java.nio.charset.Charset)"], ["int", "org.eclipse.jetty.util.BufferUtil.toInt(java.nio.ByteBuffer)"], ["int", "org.eclipse.jetty.util.BufferUtil.takeInt(java.nio.ByteBuffer)"], ["long", "org.eclipse.jetty.util.BufferUtil.toLong(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.putHexInt(java.nio.ByteBuffer, int)"], ["void", "org.eclipse.jetty.util.BufferUtil.putDecInt(java.nio.ByteBuffer, int)"], ["void", "org.eclipse.jetty.util.BufferUtil.putDecLong(java.nio.ByteBuffer, long)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(int)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(long)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(java.lang.String)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toDirectBuffer(java.lang.String)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(java.lang.String, java.nio.charset.Charset)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toDirectBuffer(java.lang.String, java.nio.charset.Charset)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(byte[])"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(byte[], int, int)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toMappedBuffer(java.io.File)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.toBuffer(org.eclipse.jetty.util.resource.Resource, boolean)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toSummaryString(java.nio.ByteBuffer)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toDetailString(java.nio.ByteBuffer[])"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toIDString(java.nio.ByteBuffer)"], ["java.lang.String", "org.eclipse.jetty.util.BufferUtil.toDetailString(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.BufferUtil.putCRLF(java.nio.ByteBuffer)"], ["boolean", "org.eclipse.jetty.util.BufferUtil.isPrefix(java.nio.ByteBuffer, java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.util.BufferUtil.ensureCapacity(java.nio.ByteBuffer, int)"], ["org.eclipse.jetty.util.ByteArrayISO8859Writer", "org.eclipse.jetty.util.ByteArrayISO8859Writer()"], ["org.eclipse.jetty.util.ByteArrayISO8859Writer", "org.eclipse.jetty.util.ByteArrayISO8859Writer(int)"], ["org.eclipse.jetty.util.ByteArrayISO8859Writer", "org.eclipse.jetty.util.ByteArrayISO8859Writer(byte[])"], ["java.lang.Object", "org.eclipse.jetty.util.ByteArrayISO8859Writer.getLock()"], ["int", "org.eclipse.jetty.util.ByteArrayISO8859Writer.size()"], ["int", "org.eclipse.jetty.util.ByteArrayISO8859Writer.capacity()"], ["int", "org.eclipse.jetty.util.ByteArrayISO8859Writer.spareCapacity()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.setLength(int)"], ["byte[]", "org.eclipse.jetty.util.ByteArrayISO8859Writer.getBuf()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.writeTo(java.io.OutputStream)"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.write(char)"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.write(char[])"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.write(char[], int, int)"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.write(java.lang.String)"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.write(java.lang.String, int, int)"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.flush()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.resetWriter()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.close()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.destroy()"], ["void", "org.eclipse.jetty.util.ByteArrayISO8859Writer.ensureSpareCapacity(int)"], ["byte[]", "org.eclipse.jetty.util.ByteArrayISO8859Writer.getByteArray()"], ["org.eclipse.jetty.util.ByteArrayOutputStream2", "org.eclipse.jetty.util.ByteArrayOutputStream2()"], ["org.eclipse.jetty.util.ByteArrayOutputStream2", "org.eclipse.jetty.util.ByteArrayOutputStream2(int)"], ["byte[]", "org.eclipse.jetty.util.ByteArrayOutputStream2.getBuf()"], ["int", "org.eclipse.jetty.util.ByteArrayOutputStream2.getCount()"], ["void", "org.eclipse.jetty.util.ByteArrayOutputStream2.setCount(int)"], ["void", "org.eclipse.jetty.util.ByteArrayOutputStream2.reset(int)"], ["void", "org.eclipse.jetty.util.ByteArrayOutputStream2.writeUnchecked(int)"], ["java.lang.String", "org.eclipse.jetty.util.ByteArrayOutputStream2.toString(java.nio.charset.Charset)"], ["org.eclipse.jetty.util.Callback$Adapter", "org.eclipse.jetty.util.Callback$Adapter()"], ["void", "org.eclipse.jetty.util.Callback$Adapter.succeeded()"], ["void", "org.eclipse.jetty.util.Callback$Adapter.failed(java.lang.Throwable)"], ["org.eclipse.jetty.util.ClassLoadingObjectInputStream", "org.eclipse.jetty.util.ClassLoadingObjectInputStream(java.io.InputStream)"], ["org.eclipse.jetty.util.ClassLoadingObjectInputStream", "org.eclipse.jetty.util.ClassLoadingObjectInputStream()"], ["org.eclipse.jetty.util.CompletableCallback$State[]", "org.eclipse.jetty.util.CompletableCallback$State.values()"], ["org.eclipse.jetty.util.CompletableCallback$State", "org.eclipse.jetty.util.CompletableCallback$State.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.CompletableCallback", "org.eclipse.jetty.util.CompletableCallback()"], ["void", "org.eclipse.jetty.util.CompletableCallback.succeeded()"], ["void", "org.eclipse.jetty.util.CompletableCallback.failed(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.CompletableCallback.tryComplete()"], ["org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener()"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener.lifeCycleFailure(org.eclipse.jetty.util.component.LifeCycle, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener.lifeCycleStarted(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener.lifeCycleStarting(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener.lifeCycleStopped(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle$AbstractLifeCycleListener.lifeCycleStopping(org.eclipse.jetty.util.component.LifeCycle)"], ["org.eclipse.jetty.util.component.AbstractLifeCycle", "org.eclipse.jetty.util.component.AbstractLifeCycle()"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle.start()"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle.stop()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isRunning()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isStarted()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isStarting()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isStopping()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isStopped()"], ["boolean", "org.eclipse.jetty.util.component.AbstractLifeCycle.isFailed()"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle.addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle$Listener)"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle.removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle$Listener)"], ["java.lang.String", "org.eclipse.jetty.util.component.AbstractLifeCycle.getState()"], ["java.lang.String", "org.eclipse.jetty.util.component.AbstractLifeCycle.getState(org.eclipse.jetty.util.component.LifeCycle)"], ["long", "org.eclipse.jetty.util.component.AbstractLifeCycle.getStopTimeout()"], ["void", "org.eclipse.jetty.util.component.AbstractLifeCycle.setStopTimeout(long)"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle$Bean.isManaged()"], ["java.lang.String", "org.eclipse.jetty.util.component.ContainerLifeCycle$Bean.toString()"], ["org.eclipse.jetty.util.component.ContainerLifeCycle$Managed[]", "org.eclipse.jetty.util.component.ContainerLifeCycle$Managed.values()"], ["org.eclipse.jetty.util.component.ContainerLifeCycle$Managed", "org.eclipse.jetty.util.component.ContainerLifeCycle$Managed.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.component.ContainerLifeCycle", "org.eclipse.jetty.util.component.ContainerLifeCycle()"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.destroy()"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.contains(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.isManaged(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(java.lang.Object, boolean)"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.addBean(java.lang.Object, org.eclipse.jetty.util.component.ContainerLifeCycle$Managed)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.addManaged(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.addEventListener(org.eclipse.jetty.util.component.Container$Listener)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.manage(java.lang.Object)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.unmanage(java.lang.Object)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.setBeans(java.util.Collection<java.lang.Object>)"], ["<T> java.util.Collection<T>", "org.eclipse.jetty.util.component.ContainerLifeCycle.getBeans(java.lang.Class<T>)"], ["<T> T", "org.eclipse.jetty.util.component.ContainerLifeCycle.getBean(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.removeBeans()"], ["boolean", "org.eclipse.jetty.util.component.ContainerLifeCycle.removeBean(java.lang.Object)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.removeEventListener(org.eclipse.jetty.util.component.Container$Listener)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.setStopTimeout(long)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.dumpStdErr()"], ["java.lang.String", "org.eclipse.jetty.util.component.ContainerLifeCycle.dump()"], ["java.lang.String", "org.eclipse.jetty.util.component.ContainerLifeCycle.dump(org.eclipse.jetty.util.component.Dumpable)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.dump(java.lang.Appendable)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.dumpObject(java.lang.Appendable, java.lang.Object)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.dump(java.lang.Appendable, java.lang.String, java.util.Collection<?>...)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.updateBean(java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.component.ContainerLifeCycle.updateBeans(java.lang.Object[], java.lang.Object[])"], ["org.eclipse.jetty.util.component.FileDestroyable", "org.eclipse.jetty.util.component.FileDestroyable()"], ["org.eclipse.jetty.util.component.FileDestroyable", "org.eclipse.jetty.util.component.FileDestroyable(java.lang.String)"], ["org.eclipse.jetty.util.component.FileDestroyable", "org.eclipse.jetty.util.component.FileDestroyable(java.io.File)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.addFile(java.lang.String)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.addFile(java.io.File)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.addFiles(java.util.Collection<java.io.File>)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.removeFile(java.lang.String)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.removeFile(java.io.File)"], ["void", "org.eclipse.jetty.util.component.FileDestroyable.destroy()"], ["org.eclipse.jetty.util.component.FileNoticeLifeCycleListener", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener(java.lang.String)"], ["void", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.lifeCycleStarting(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.lifeCycleStarted(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.lifeCycleFailure(org.eclipse.jetty.util.component.LifeCycle, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.lifeCycleStopping(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.component.FileNoticeLifeCycleListener.lifeCycleStopped(org.eclipse.jetty.util.component.LifeCycle)"], ["java.lang.String", "org.eclipse.jetty.util.ConcurrentArrayQueue$1.toString()"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue$2.hasNext()"], ["T", "org.eclipse.jetty.util.ConcurrentArrayQueue$2.next()"], ["void", "org.eclipse.jetty.util.ConcurrentArrayQueue$2.remove()"], ["E", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.peek(int)"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.store(int, E)"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.remove(int, java.lang.Object, boolean)"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.link(org.eclipse.jetty.util.ConcurrentArrayQueue$Block<E>)"], ["int", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.head()"], ["int", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.tail()"], ["java.lang.Object[]", "org.eclipse.jetty.util.ConcurrentArrayQueue$Block.arrayCopy()"], ["org.eclipse.jetty.util.ConcurrentArrayQueue", "org.eclipse.jetty.util.ConcurrentArrayQueue()"], ["org.eclipse.jetty.util.ConcurrentArrayQueue", "org.eclipse.jetty.util.ConcurrentArrayQueue(int)"], ["int", "org.eclipse.jetty.util.ConcurrentArrayQueue.getBlockSize()"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue.offer(T)"], ["T", "org.eclipse.jetty.util.ConcurrentArrayQueue.poll()"], ["T", "org.eclipse.jetty.util.ConcurrentArrayQueue.peek()"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue.remove(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue.removeAll(java.util.Collection<?>)"], ["boolean", "org.eclipse.jetty.util.ConcurrentArrayQueue.retainAll(java.util.Collection<?>)"], ["int", "org.eclipse.jetty.util.ConcurrentArrayQueue.size()"], ["org.eclipse.jetty.util.ConcurrentHashSet", "org.eclipse.jetty.util.ConcurrentHashSet()"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.add(E)"], ["void", "org.eclipse.jetty.util.ConcurrentHashSet.clear()"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.contains(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.containsAll(java.util.Collection<?>)"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.equals(java.lang.Object)"], ["int", "org.eclipse.jetty.util.ConcurrentHashSet.hashCode()"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.isEmpty()"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.remove(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.removeAll(java.util.Collection<?>)"], ["boolean", "org.eclipse.jetty.util.ConcurrentHashSet.retainAll(java.util.Collection<?>)"], ["int", "org.eclipse.jetty.util.ConcurrentHashSet.size()"], ["java.lang.Object[]", "org.eclipse.jetty.util.ConcurrentHashSet.toArray()"], ["<T> T[]", "org.eclipse.jetty.util.ConcurrentHashSet.toArray(T[])"], ["java.lang.String", "org.eclipse.jetty.util.ConcurrentHashSet.toString()"], ["org.eclipse.jetty.util.ConstantThrowable", "org.eclipse.jetty.util.ConstantThrowable()"], ["org.eclipse.jetty.util.ConstantThrowable", "org.eclipse.jetty.util.ConstantThrowable(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ConstantThrowable.toString()"], ["org.eclipse.jetty.util.CountingCallback", "org.eclipse.jetty.util.CountingCallback(org.eclipse.jetty.util.Callback, int)"], ["void", "org.eclipse.jetty.util.CountingCallback.succeeded()"], ["void", "org.eclipse.jetty.util.CountingCallback.failed(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.util.CountingCallback.toString()"], ["org.eclipse.jetty.util.DateCache$Tick", "org.eclipse.jetty.util.DateCache$Tick(long, java.lang.String)"], ["org.eclipse.jetty.util.DateCache", "org.eclipse.jetty.util.DateCache()"], ["org.eclipse.jetty.util.DateCache", "org.eclipse.jetty.util.DateCache(java.lang.String)"], ["org.eclipse.jetty.util.DateCache", "org.eclipse.jetty.util.DateCache(java.lang.String, java.util.Locale)"], ["org.eclipse.jetty.util.DateCache", "org.eclipse.jetty.util.DateCache(java.lang.String, java.util.Locale, java.lang.String)"], ["org.eclipse.jetty.util.DateCache", "org.eclipse.jetty.util.DateCache(java.lang.String, java.util.Locale, java.util.TimeZone)"], ["java.util.TimeZone", "org.eclipse.jetty.util.DateCache.getTimeZone()"], ["java.lang.String", "org.eclipse.jetty.util.DateCache.format(java.util.Date)"], ["java.lang.String", "org.eclipse.jetty.util.DateCache.format(long)"], ["java.lang.String", "org.eclipse.jetty.util.DateCache.formatNow(long)"], ["java.lang.String", "org.eclipse.jetty.util.DateCache.now()"], ["org.eclipse.jetty.util.DateCache$Tick", "org.eclipse.jetty.util.DateCache.tick()"], ["java.lang.String", "org.eclipse.jetty.util.DateCache.getFormatString()"], ["org.eclipse.jetty.util.Fields$Field", "org.eclipse.jetty.util.Fields$Field(java.lang.String, java.lang.String)"], ["boolean", "org.eclipse.jetty.util.Fields$Field.equals(org.eclipse.jetty.util.Fields$Field, boolean)"], ["boolean", "org.eclipse.jetty.util.Fields$Field.equals(java.lang.Object)"], ["int", "org.eclipse.jetty.util.Fields$Field.hashCode()"], ["java.lang.String", "org.eclipse.jetty.util.Fields$Field.getName()"], ["java.lang.String", "org.eclipse.jetty.util.Fields$Field.getValue()"], ["java.lang.Integer", "org.eclipse.jetty.util.Fields$Field.getValueAsInt()"], ["boolean", "org.eclipse.jetty.util.Fields$Field.hasMultipleValues()"], ["java.lang.String", "org.eclipse.jetty.util.Fields$Field.toString()"], ["org.eclipse.jetty.util.Fields", "org.eclipse.jetty.util.Fields()"], ["org.eclipse.jetty.util.Fields", "org.eclipse.jetty.util.Fields(boolean)"], ["org.eclipse.jetty.util.Fields", "org.eclipse.jetty.util.Fields(org.eclipse.jetty.util.Fields, boolean)"], ["boolean", "org.eclipse.jetty.util.Fields.equals(java.lang.Object)"], ["int", "org.eclipse.jetty.util.Fields.hashCode()"], ["org.eclipse.jetty.util.Fields$Field", "org.eclipse.jetty.util.Fields.get(java.lang.String)"], ["void", "org.eclipse.jetty.util.Fields.put(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.util.Fields.put(org.eclipse.jetty.util.Fields$Field)"], ["void", "org.eclipse.jetty.util.Fields.add(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.util.Fields$Field", "org.eclipse.jetty.util.Fields.remove(java.lang.String)"], ["void", "org.eclipse.jetty.util.Fields.clear()"], ["boolean", "org.eclipse.jetty.util.Fields.isEmpty()"], ["int", "org.eclipse.jetty.util.Fields.getSize()"], ["java.lang.String", "org.eclipse.jetty.util.Fields.toString()"], ["org.eclipse.jetty.util.FutureCallback", "org.eclipse.jetty.util.FutureCallback()"], ["org.eclipse.jetty.util.FutureCallback", "org.eclipse.jetty.util.FutureCallback(boolean)"], ["org.eclipse.jetty.util.FutureCallback", "org.eclipse.jetty.util.FutureCallback(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.FutureCallback.succeeded()"], ["void", "org.eclipse.jetty.util.FutureCallback.failed(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.FutureCallback.cancel(boolean)"], ["boolean", "org.eclipse.jetty.util.FutureCallback.isCancelled()"], ["boolean", "org.eclipse.jetty.util.FutureCallback.isDone()"], ["java.lang.Void", "org.eclipse.jetty.util.FutureCallback.get()"], ["java.lang.Void", "org.eclipse.jetty.util.FutureCallback.get(long, java.util.concurrent.TimeUnit)"], ["void", "org.eclipse.jetty.util.FutureCallback.rethrow(java.util.concurrent.ExecutionException)"], ["java.lang.String", "org.eclipse.jetty.util.FutureCallback.toString()"], ["java.lang.Object", "org.eclipse.jetty.util.FutureCallback.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.eclipse.jetty.util.FutureCallback.get()"], ["org.eclipse.jetty.util.FuturePromise", "org.eclipse.jetty.util.FuturePromise()"], ["org.eclipse.jetty.util.FuturePromise", "org.eclipse.jetty.util.FuturePromise(C)"], ["org.eclipse.jetty.util.FuturePromise", "org.eclipse.jetty.util.FuturePromise(C, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.FuturePromise.succeeded(C)"], ["void", "org.eclipse.jetty.util.FuturePromise.failed(java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.FuturePromise.cancel(boolean)"], ["boolean", "org.eclipse.jetty.util.FuturePromise.isCancelled()"], ["boolean", "org.eclipse.jetty.util.FuturePromise.isDone()"], ["C", "org.eclipse.jetty.util.FuturePromise.get()"], ["C", "org.eclipse.jetty.util.FuturePromise.get(long, java.util.concurrent.TimeUnit)"], ["void", "org.eclipse.jetty.util.FuturePromise.rethrow(java.util.concurrent.ExecutionException)"], ["java.lang.String", "org.eclipse.jetty.util.FuturePromise.toString()"], ["org.eclipse.jetty.util.HostMap", "org.eclipse.jetty.util.HostMap()"], ["org.eclipse.jetty.util.HostMap", "org.eclipse.jetty.util.HostMap(int)"], ["TYPE", "org.eclipse.jetty.util.HostMap.put(java.lang.String, TYPE)"], ["TYPE", "org.eclipse.jetty.util.HostMap.get(java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.HostMap.getLazyMatches(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.HostMap.put(java.lang.Object, java.lang.Object)"], ["org.eclipse.jetty.util.HostPort", "org.eclipse.jetty.util.HostPort(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.HostPort.getHost()"], ["int", "org.eclipse.jetty.util.HostPort.getPort()"], ["int", "org.eclipse.jetty.util.HostPort.getPort(int)"], ["java.lang.String", "org.eclipse.jetty.util.HostPort.normalizeHost(java.lang.String)"], ["org.eclipse.jetty.util.HttpCookieStore$Empty", "org.eclipse.jetty.util.HttpCookieStore$Empty()"], ["void", "org.eclipse.jetty.util.HttpCookieStore$Empty.add(java.net.URI, java.net.HttpCookie)"], ["boolean", "org.eclipse.jetty.util.HttpCookieStore$Empty.remove(java.net.URI, java.net.HttpCookie)"], ["boolean", "org.eclipse.jetty.util.HttpCookieStore$Empty.removeAll()"], ["org.eclipse.jetty.util.HttpCookieStore", "org.eclipse.jetty.util.HttpCookieStore()"], ["void", "org.eclipse.jetty.util.HttpCookieStore.add(java.net.URI, java.net.HttpCookie)"], ["boolean", "org.eclipse.jetty.util.HttpCookieStore.remove(java.net.URI, java.net.HttpCookie)"], ["boolean", "org.eclipse.jetty.util.HttpCookieStore.removeAll()"], ["org.eclipse.jetty.util.IncludeExclude", "org.eclipse.jetty.util.IncludeExclude()"], ["<SET extends java.util.Set<ITEM>>", "org.eclipse.jetty.util.IncludeExclude.org.eclipse.jetty.util.IncludeExclude(java.lang.Class<SET>)"], ["<SET extends java.util.Set<ITEM>>", "org.eclipse.jetty.util.IncludeExclude.org.eclipse.jetty.util.IncludeExclude(java.util.Set<ITEM>, org.eclipse.jetty.util.Predicate<ITEM>, java.util.Set<ITEM>, org.eclipse.jetty.util.Predicate<ITEM>)"], ["org.eclipse.jetty.util.IncludeExcludeSet$SetContainsPredicate", "org.eclipse.jetty.util.IncludeExcludeSet$SetContainsPredicate(java.util.Set<T>)"], ["boolean", "org.eclipse.jetty.util.IncludeExcludeSet$SetContainsPredicate.test(T)"], ["org.eclipse.jetty.util.IncludeExcludeSet", "org.eclipse.jetty.util.IncludeExcludeSet()"], ["<SET extends java.util.Set<P>>", "org.eclipse.jetty.util.IncludeExcludeSet.org.eclipse.jetty.util.IncludeExcludeSet(java.lang.Class<SET>)"], ["<SET extends java.util.Set<P>>", "org.eclipse.jetty.util.IncludeExcludeSet.org.eclipse.jetty.util.IncludeExcludeSet(java.util.Set<P>, org.eclipse.jetty.util.Predicate<T>, java.util.Set<P>, org.eclipse.jetty.util.Predicate<T>)"], ["void", "org.eclipse.jetty.util.IncludeExcludeSet.include(P)"], ["void", "org.eclipse.jetty.util.IncludeExcludeSet.include(P...)"], ["void", "org.eclipse.jetty.util.IncludeExcludeSet.exclude(P)"], ["void", "org.eclipse.jetty.util.IncludeExcludeSet.exclude(P...)"], ["boolean", "org.eclipse.jetty.util.IncludeExcludeSet.matches(T)"], ["boolean", "org.eclipse.jetty.util.IncludeExcludeSet.test(T)"], ["int", "org.eclipse.jetty.util.IncludeExcludeSet.size()"], ["void", "org.eclipse.jetty.util.IncludeExcludeSet.clear()"], ["java.lang.String", "org.eclipse.jetty.util.IncludeExcludeSet.toString()"], ["org.eclipse.jetty.util.InetAddressSet$CidrInetRange", "org.eclipse.jetty.util.InetAddressSet$CidrInetRange(java.lang.String, java.net.InetAddress, int)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet$CidrInetRange.test(java.net.InetAddress, byte[])"], ["java.lang.String", "org.eclipse.jetty.util.InetAddressSet$InetPattern.toString()"], ["org.eclipse.jetty.util.InetAddressSet$LegacyInetRange", "org.eclipse.jetty.util.InetAddressSet$LegacyInetRange(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet$LegacyInetRange.test(java.net.InetAddress, byte[])"], ["org.eclipse.jetty.util.InetAddressSet$MinMaxInetRange", "org.eclipse.jetty.util.InetAddressSet$MinMaxInetRange(java.lang.String, java.net.InetAddress, java.net.InetAddress)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet$MinMaxInetRange.test(java.net.InetAddress, byte[])"], ["org.eclipse.jetty.util.InetAddressSet$SingletonInetRange", "org.eclipse.jetty.util.InetAddressSet$SingletonInetRange(java.lang.String, java.net.InetAddress)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet$SingletonInetRange.test(java.net.InetAddress, byte[])"], ["org.eclipse.jetty.util.InetAddressSet", "org.eclipse.jetty.util.InetAddressSet()"], ["boolean", "org.eclipse.jetty.util.InetAddressSet.add(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet.remove(java.lang.Object)"], ["int", "org.eclipse.jetty.util.InetAddressSet.size()"], ["boolean", "org.eclipse.jetty.util.InetAddressSet.test(java.net.InetAddress)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet.add(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.InetAddressSet.test(java.lang.Object)"], ["org.eclipse.jetty.util.IntrospectionUtil", "org.eclipse.jetty.util.IntrospectionUtil()"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.isJavaBeanCompliantSetter(java.lang.reflect.Method)"], ["java.lang.reflect.Method", "org.eclipse.jetty.util.IntrospectionUtil.findMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[], boolean, boolean)"], ["java.lang.reflect.Field", "org.eclipse.jetty.util.IntrospectionUtil.findField(java.lang.Class<?>, java.lang.String, java.lang.Class<?>, boolean, boolean)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.isInheritable(java.lang.Package, java.lang.reflect.Member)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.checkParams(java.lang.Class<?>[], java.lang.Class<?>[], boolean)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.isSameSignature(java.lang.reflect.Method, java.lang.reflect.Method)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.isTypeCompatible(java.lang.Class<?>, java.lang.Class<?>, boolean)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.containsSameMethodSignature(java.lang.reflect.Method, java.lang.Class<?>, boolean)"], ["boolean", "org.eclipse.jetty.util.IntrospectionUtil.containsSameFieldName(java.lang.reflect.Field, java.lang.Class<?>, boolean)"], ["int", "org.eclipse.jetty.util.IO$ClosedIS.read()"], ["void", "org.eclipse.jetty.util.IO$Job.run()"], ["void", "org.eclipse.jetty.util.IO$NullOS.close()"], ["void", "org.eclipse.jetty.util.IO$NullOS.flush()"], ["void", "org.eclipse.jetty.util.IO$NullOS.write(byte[])"], ["void", "org.eclipse.jetty.util.IO$NullOS.write(byte[], int, int)"], ["void", "org.eclipse.jetty.util.IO$NullOS.write(int)"], ["void", "org.eclipse.jetty.util.IO$NullWrite.close()"], ["void", "org.eclipse.jetty.util.IO$NullWrite.flush()"], ["void", "org.eclipse.jetty.util.IO$NullWrite.write(char[])"], ["void", "org.eclipse.jetty.util.IO$NullWrite.write(char[], int, int)"], ["void", "org.eclipse.jetty.util.IO$NullWrite.write(int)"], ["void", "org.eclipse.jetty.util.IO$NullWrite.write(java.lang.String)"], ["void", "org.eclipse.jetty.util.IO$NullWrite.write(java.lang.String, int, int)"], ["org.eclipse.jetty.util.IO", "org.eclipse.jetty.util.IO()"], ["void", "org.eclipse.jetty.util.IO.copy(java.io.InputStream, java.io.OutputStream)"], ["void", "org.eclipse.jetty.util.IO.copy(java.io.Reader, java.io.Writer)"], ["void", "org.eclipse.jetty.util.IO.copy(java.io.InputStream, java.io.OutputStream, long)"], ["void", "org.eclipse.jetty.util.IO.copy(java.io.Reader, java.io.Writer, long)"], ["void", "org.eclipse.jetty.util.IO.copy(java.io.File, java.io.File)"], ["void", "org.eclipse.jetty.util.IO.copyDir(java.io.File, java.io.File)"], ["void", "org.eclipse.jetty.util.IO.copyFile(java.io.File, java.io.File)"], ["java.lang.String", "org.eclipse.jetty.util.IO.toString(java.io.InputStream)"], ["java.lang.String", "org.eclipse.jetty.util.IO.toString(java.io.InputStream, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.IO.toString(java.io.InputStream, java.nio.charset.Charset)"], ["java.lang.String", "org.eclipse.jetty.util.IO.toString(java.io.Reader)"], ["boolean", "org.eclipse.jetty.util.IO.delete(java.io.File)"], ["void", "org.eclipse.jetty.util.IO.close(java.io.InputStream)"], ["void", "org.eclipse.jetty.util.IO.close(java.io.Reader)"], ["void", "org.eclipse.jetty.util.IO.close(java.io.Writer)"], ["byte[]", "org.eclipse.jetty.util.IO.readBytes(java.io.InputStream)"], ["long", "org.eclipse.jetty.util.IO.write(java.nio.channels.GatheringByteChannel, java.nio.ByteBuffer[], int, int)"], ["void", "org.eclipse.jetty.util.IO.close(java.io.OutputStream)"], ["java.io.OutputStream", "org.eclipse.jetty.util.IO.getNullStream()"], ["java.io.InputStream", "org.eclipse.jetty.util.IO.getClosedStream()"], ["java.io.Writer", "org.eclipse.jetty.util.IO.getNullWriter()"], ["java.io.PrintWriter", "org.eclipse.jetty.util.IO.getNullPrintWriter()"], ["org.eclipse.jetty.util.IPAddressMap$IPAddrPattern", "org.eclipse.jetty.util.IPAddressMap$IPAddrPattern(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.IPAddressMap$IPAddrPattern.match(java.lang.String)"], ["org.eclipse.jetty.util.IPAddressMap$OctetPattern", "org.eclipse.jetty.util.IPAddressMap$OctetPattern(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.IPAddressMap$OctetPattern.match(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.IPAddressMap$OctetPattern.match(int)"], ["org.eclipse.jetty.util.IPAddressMap", "org.eclipse.jetty.util.IPAddressMap()"], ["org.eclipse.jetty.util.IPAddressMap", "org.eclipse.jetty.util.IPAddressMap(int)"], ["TYPE", "org.eclipse.jetty.util.IPAddressMap.put(java.lang.String, TYPE)"], ["TYPE", "org.eclipse.jetty.util.IPAddressMap.get(java.lang.Object)"], ["TYPE", "org.eclipse.jetty.util.IPAddressMap.match(java.lang.String)"], ["java.util.Map$Entry<java.lang.String, TYPE>", "org.eclipse.jetty.util.IPAddressMap.getMatch(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.IPAddressMap.getLazyMatches(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.IPAddressMap.put(java.lang.Object, java.lang.Object)"], ["org.eclipse.jetty.util.IteratingCallback$Action[]", "org.eclipse.jetty.util.IteratingCallback$Action.values()"], ["org.eclipse.jetty.util.IteratingCallback$Action", "org.eclipse.jetty.util.IteratingCallback$Action.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.IteratingCallback$State[]", "org.eclipse.jetty.util.IteratingCallback$State.values()"], ["org.eclipse.jetty.util.IteratingCallback$State", "org.eclipse.jetty.util.IteratingCallback$State.valueOf(java.lang.String)"], ["void", "org.eclipse.jetty.util.IteratingCallback.iterate()"], ["void", "org.eclipse.jetty.util.IteratingCallback.succeeded()"], ["void", "org.eclipse.jetty.util.IteratingCallback.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.IteratingCallback.close()"], ["boolean", "org.eclipse.jetty.util.IteratingCallback.isClosed()"], ["boolean", "org.eclipse.jetty.util.IteratingCallback.isFailed()"], ["boolean", "org.eclipse.jetty.util.IteratingCallback.isSucceeded()"], ["boolean", "org.eclipse.jetty.util.IteratingCallback.reset()"], ["java.lang.String", "org.eclipse.jetty.util.IteratingCallback.toString()"], ["org.eclipse.jetty.util.IteratingNestedCallback", "org.eclipse.jetty.util.IteratingNestedCallback(org.eclipse.jetty.util.Callback)"], ["java.lang.String", "org.eclipse.jetty.util.IteratingNestedCallback.toString()"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.add(java.lang.Object, int, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.addCollection(java.lang.Object, java.util.Collection<?>)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.addArray(java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.ensureSize(java.lang.Object, int)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.remove(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.remove(java.lang.Object, int)"], ["<E> java.util.List<E>", "org.eclipse.jetty.util.LazyList.getList(java.lang.Object)"], ["<E> java.util.List<E>", "org.eclipse.jetty.util.LazyList.getList(java.lang.Object, boolean)"], ["boolean", "org.eclipse.jetty.util.LazyList.hasEntry(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.LazyList.isEmpty(java.lang.Object)"], ["java.lang.String[]", "org.eclipse.jetty.util.LazyList.toStringArray(java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.toArray(java.lang.Object, java.lang.Class<?>)"], ["int", "org.eclipse.jetty.util.LazyList.size(java.lang.Object)"], ["<E> E", "org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)"], ["boolean", "org.eclipse.jetty.util.LazyList.contains(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.util.LazyList.clone(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.LazyList.toString(java.lang.Object)"], ["<E> java.util.Iterator<E>", "org.eclipse.jetty.util.LazyList.iterator(java.lang.Object)"], ["<E> java.util.ListIterator<E>", "org.eclipse.jetty.util.LazyList.listIterator(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.LeakDetector$LeakInfo.getResourceDescription()"], ["java.lang.Throwable", "org.eclipse.jetty.util.LeakDetector$LeakInfo.getStackFrames()"], ["java.lang.String", "org.eclipse.jetty.util.LeakDetector$LeakInfo.toString()"], ["org.eclipse.jetty.util.LeakDetector", "org.eclipse.jetty.util.LeakDetector()"], ["boolean", "org.eclipse.jetty.util.LeakDetector.acquired(T)"], ["boolean", "org.eclipse.jetty.util.LeakDetector.released(T)"], ["java.lang.String", "org.eclipse.jetty.util.LeakDetector.id(T)"], ["void", "org.eclipse.jetty.util.LeakDetector.run()"], ["org.eclipse.jetty.util.Loader", "org.eclipse.jetty.util.Loader()"], ["java.net.URL", "org.eclipse.jetty.util.Loader.getResource(java.lang.Class<?>, java.lang.String)"], ["java.lang.Class", "org.eclipse.jetty.util.Loader.loadClass(java.lang.Class, java.lang.String)"], ["java.util.ResourceBundle", "org.eclipse.jetty.util.Loader.getResourceBundle(java.lang.Class<?>, java.lang.String, boolean, java.util.Locale)"], ["java.lang.String", "org.eclipse.jetty.util.Loader.getClassPath(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.log.AbstractLogger", "org.eclipse.jetty.util.log.AbstractLogger()"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.util.log.AbstractLogger.getLogger(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.AbstractLogger.debug(java.lang.String, long)"], ["org.eclipse.jetty.util.log.JavaUtilLog", "org.eclipse.jetty.util.log.JavaUtilLog()"], ["org.eclipse.jetty.util.log.JavaUtilLog", "org.eclipse.jetty.util.log.JavaUtilLog(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.log.JavaUtilLog.getName()"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.warn(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.warn(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.warn(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.info(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.info(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.info(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JavaUtilLog.isDebugEnabled()"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.setDebugEnabled(boolean)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.debug(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.debug(java.lang.String, long)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.debug(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.debug(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.JavaUtilLog.ignore(java.lang.Throwable)"], ["org.eclipse.jetty.util.log.JettyAwareLogger", "org.eclipse.jetty.util.log.JettyAwareLogger(org.slf4j.spi.LocationAwareLogger)"], ["java.lang.String", "org.eclipse.jetty.util.log.JettyAwareLogger.getName()"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isTraceEnabled()"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isTraceEnabled(org.slf4j.Marker)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(org.slf4j.Marker, java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(org.slf4j.Marker, java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isDebugEnabled()"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isDebugEnabled(org.slf4j.Marker)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(org.slf4j.Marker, java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(org.slf4j.Marker, java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isInfoEnabled()"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isInfoEnabled(org.slf4j.Marker)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(org.slf4j.Marker, java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(org.slf4j.Marker, java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(org.slf4j.Marker, java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isWarnEnabled()"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isWarnEnabled(org.slf4j.Marker)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(org.slf4j.Marker, java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(org.slf4j.Marker, java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isErrorEnabled()"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.JettyAwareLogger.isErrorEnabled(org.slf4j.Marker)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(org.slf4j.Marker, java.lang.String)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(org.slf4j.Marker, java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(org.slf4j.Marker, java.lang.String, java.lang.Object[])"], ["void", "org.eclipse.jetty.util.log.JettyAwareLogger.error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.util.log.JettyAwareLogger.toString()"], ["java.lang.Object", "org.eclipse.jetty.util.log.Log$1.run()"], ["org.eclipse.jetty.util.log.Log", "org.eclipse.jetty.util.log.Log()"], ["void", "org.eclipse.jetty.util.log.Log.initialized()"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.util.log.Log.getLog()"], ["void", "org.eclipse.jetty.util.log.Log.setLog(org.eclipse.jetty.util.log.Logger)"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.util.log.Log.getRootLogger()"], ["void", "org.eclipse.jetty.util.log.Log.setLogToParent(java.lang.String)"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.util.log.Log.getLogger(java.lang.Class<?>)"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.util.log.Log.getLogger(java.lang.String)"], ["java.util.Map<java.lang.String, org.eclipse.jetty.util.log.Logger>", "org.eclipse.jetty.util.log.Log.getLoggers()"], ["org.eclipse.jetty.util.log.LoggerLog", "org.eclipse.jetty.util.log.LoggerLog(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.log.LoggerLog.getName()"], ["void", "org.eclipse.jetty.util.log.LoggerLog.warn(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.warn(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.warn(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.info(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.info(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.info(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.LoggerLog.isDebugEnabled()"], ["void", "org.eclipse.jetty.util.log.LoggerLog.setDebugEnabled(boolean)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.debug(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.debug(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.debug(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.debug(java.lang.String, long)"], ["void", "org.eclipse.jetty.util.log.LoggerLog.ignore(java.lang.Throwable)"], ["org.eclipse.jetty.util.log.Slf4jLog", "org.eclipse.jetty.util.log.Slf4jLog()"], ["org.eclipse.jetty.util.log.Slf4jLog", "org.eclipse.jetty.util.log.Slf4jLog(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.log.Slf4jLog.getName()"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.warn(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.warn(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.warn(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.info(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.info(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.info(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.debug(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.debug(java.lang.String, long)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.debug(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.debug(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.Slf4jLog.isDebugEnabled()"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.setDebugEnabled(boolean)"], ["void", "org.eclipse.jetty.util.log.Slf4jLog.ignore(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.util.log.Slf4jLog.toString()"], ["org.eclipse.jetty.util.log.StacklessLogging", "org.eclipse.jetty.util.log.StacklessLogging(java.lang.Class<?>...)"], ["void", "org.eclipse.jetty.util.log.StacklessLogging.close()"], ["org.eclipse.jetty.util.log.StdErrLog", "org.eclipse.jetty.util.log.StdErrLog.getLogger(java.lang.Class<?>)"], ["org.eclipse.jetty.util.log.StdErrLog", "org.eclipse.jetty.util.log.StdErrLog()"], ["org.eclipse.jetty.util.log.StdErrLog", "org.eclipse.jetty.util.log.StdErrLog(java.lang.String)"], ["org.eclipse.jetty.util.log.StdErrLog", "org.eclipse.jetty.util.log.StdErrLog(java.lang.String, java.util.Properties)"], ["int", "org.eclipse.jetty.util.log.StdErrLog.getLoggingLevel(java.util.Properties, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.log.StdErrLog.getLoggingProperty(java.util.Properties, java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.log.StdErrLog.getName()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setPrintLongNames(boolean)"], ["boolean", "org.eclipse.jetty.util.log.StdErrLog.isPrintLongNames()"], ["boolean", "org.eclipse.jetty.util.log.StdErrLog.isHideStacks()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setHideStacks(boolean)"], ["boolean", "org.eclipse.jetty.util.log.StdErrLog.isSource()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setSource(boolean)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.warn(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.warn(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.warn(java.lang.String, java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.info(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.info(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.info(java.lang.String, java.lang.Throwable)"], ["boolean", "org.eclipse.jetty.util.log.StdErrLog.isDebugEnabled()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setDebugEnabled(boolean)"], ["int", "org.eclipse.jetty.util.log.StdErrLog.getLevel()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setLevel(int)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setStdErrStream(java.io.PrintStream)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.debug(java.lang.String, java.lang.Object...)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.debug(java.lang.String, long)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.debug(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.debug(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.util.log.StdErrLog.toString()"], ["void", "org.eclipse.jetty.util.log.StdErrLog.setProperties(java.util.Properties)"], ["void", "org.eclipse.jetty.util.log.StdErrLog.ignore(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.util.MemoryUtils$1.run()"], ["java.lang.Object", "org.eclipse.jetty.util.MemoryUtils$1.run()"], ["int", "org.eclipse.jetty.util.MemoryUtils.getCacheLineBytes()"], ["int", "org.eclipse.jetty.util.MemoryUtils.getIntegersPerCacheLine()"], ["int", "org.eclipse.jetty.util.MemoryUtils.getLongsPerCacheLine()"], ["org.eclipse.jetty.util.MultiException", "org.eclipse.jetty.util.MultiException()"], ["void", "org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)"], ["int", "org.eclipse.jetty.util.MultiException.size()"], ["java.lang.Throwable", "org.eclipse.jetty.util.MultiException.getThrowable(int)"], ["void", "org.eclipse.jetty.util.MultiException.ifExceptionThrow()"], ["void", "org.eclipse.jetty.util.MultiException.ifExceptionThrowRuntime()"], ["void", "org.eclipse.jetty.util.MultiException.ifExceptionThrowMulti()"], ["java.lang.String", "org.eclipse.jetty.util.MultiException.toString()"], ["java.lang.String", "org.eclipse.jetty.util.MultiMap$1.toString()"], ["org.eclipse.jetty.util.MultiMap", "org.eclipse.jetty.util.MultiMap()"], ["org.eclipse.jetty.util.MultiMap", "org.eclipse.jetty.util.MultiMap(java.util.Map<java.lang.String, java.util.List<V>>)"], ["org.eclipse.jetty.util.MultiMap", "org.eclipse.jetty.util.MultiMap(org.eclipse.jetty.util.MultiMap<V>)"], ["V", "org.eclipse.jetty.util.MultiMap.getValue(java.lang.String, int)"], ["java.lang.String", "org.eclipse.jetty.util.MultiMap.getString(java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiMap.putAllValues(java.util.Map<java.lang.String, V>)"], ["void", "org.eclipse.jetty.util.MultiMap.add(java.lang.String, V)"], ["void", "org.eclipse.jetty.util.MultiMap.addValues(java.lang.String, java.util.List<V>)"], ["void", "org.eclipse.jetty.util.MultiMap.addValues(java.lang.String, V[])"], ["boolean", "org.eclipse.jetty.util.MultiMap.addAllValues(org.eclipse.jetty.util.MultiMap<V>)"], ["boolean", "org.eclipse.jetty.util.MultiMap.removeValue(java.lang.String, V)"], ["boolean", "org.eclipse.jetty.util.MultiMap.containsSimpleValue(V)"], ["java.lang.String", "org.eclipse.jetty.util.MultiMap.toString()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.eclipse.jetty.util.MultiMap.toStringArrayMap()"], ["int", "org.eclipse.jetty.util.MultiPartInputStreamParser$1.read()"], ["org.eclipse.jetty.util.MultiPartInputStreamParser$Base64InputStream", "org.eclipse.jetty.util.MultiPartInputStreamParser$Base64InputStream(org.eclipse.jetty.util.ReadLineInputStream)"], ["int", "org.eclipse.jetty.util.MultiPartInputStreamParser$Base64InputStream.read()"], ["org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart(org.eclipse.jetty.util.MultiPartInputStreamParser, java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getContentType()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getHeader(java.lang.String)"], ["java.io.InputStream", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getInputStream()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getSubmittedFileName()"], ["byte[]", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getBytes()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getName()"], ["long", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getSize()"], ["void", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.write(java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.delete()"], ["void", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.cleanUp()"], ["java.io.File", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getFile()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.getContentDispositionFilename()"], ["org.eclipse.jetty.util.MultiPartInputStreamParser", "org.eclipse.jetty.util.MultiPartInputStreamParser(java.io.InputStream, java.lang.String, javax.servlet.MultipartConfigElement, java.io.File)"], ["void", "org.eclipse.jetty.util.MultiPartInputStreamParser.deleteParts()"], ["javax.servlet.http.Part", "org.eclipse.jetty.util.MultiPartInputStreamParser.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiPartInputStreamParser.setDeleteOnExit(boolean)"], ["boolean", "org.eclipse.jetty.util.MultiPartInputStreamParser.isDeleteOnExit()"], ["org.eclipse.jetty.util.MultiPartOutputStream", "org.eclipse.jetty.util.MultiPartOutputStream(java.io.OutputStream)"], ["org.eclipse.jetty.util.MultiPartOutputStream", "org.eclipse.jetty.util.MultiPartOutputStream(java.io.OutputStream, java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiPartOutputStream.close()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartOutputStream.getBoundary()"], ["java.io.OutputStream", "org.eclipse.jetty.util.MultiPartOutputStream.getOut()"], ["void", "org.eclipse.jetty.util.MultiPartOutputStream.startPart(java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiPartOutputStream.startPart(java.lang.String, java.lang.String[])"], ["void", "org.eclipse.jetty.util.MultiPartOutputStream.write(byte[], int, int)"], ["org.eclipse.jetty.util.MultiPartWriter", "org.eclipse.jetty.util.MultiPartWriter(java.io.Writer)"], ["void", "org.eclipse.jetty.util.MultiPartWriter.close()"], ["java.lang.String", "org.eclipse.jetty.util.MultiPartWriter.getBoundary()"], ["void", "org.eclipse.jetty.util.MultiPartWriter.startPart(java.lang.String)"], ["void", "org.eclipse.jetty.util.MultiPartWriter.endPart()"], ["void", "org.eclipse.jetty.util.MultiPartWriter.startPart(java.lang.String, java.lang.String[])"], ["org.eclipse.jetty.util.PatternMatcher", "org.eclipse.jetty.util.PatternMatcher()"], ["void", "org.eclipse.jetty.util.PatternMatcher.match(java.util.regex.Pattern, java.net.URI[], boolean)"], ["void", "org.eclipse.jetty.util.PatternMatcher.matchPatterns(java.util.regex.Pattern, java.net.URI[], boolean)"], ["org.eclipse.jetty.util.preventers.AbstractLeakPreventer", "org.eclipse.jetty.util.preventers.AbstractLeakPreventer()"], ["org.eclipse.jetty.util.preventers.AppContextLeakPreventer", "org.eclipse.jetty.util.preventers.AppContextLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.AppContextLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.AWTLeakPreventer", "org.eclipse.jetty.util.preventers.AWTLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.AWTLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.DOMLeakPreventer", "org.eclipse.jetty.util.preventers.DOMLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.DOMLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.DriverManagerLeakPreventer", "org.eclipse.jetty.util.preventers.DriverManagerLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.DriverManagerLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.GCThreadLeakPreventer", "org.eclipse.jetty.util.preventers.GCThreadLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.GCThreadLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.Java2DLeakPreventer", "org.eclipse.jetty.util.preventers.Java2DLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.Java2DLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.LDAPLeakPreventer", "org.eclipse.jetty.util.preventers.LDAPLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.LDAPLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.LoginConfigurationLeakPreventer", "org.eclipse.jetty.util.preventers.LoginConfigurationLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.LoginConfigurationLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.preventers.SecurityProviderLeakPreventer", "org.eclipse.jetty.util.preventers.SecurityProviderLeakPreventer()"], ["void", "org.eclipse.jetty.util.preventers.SecurityProviderLeakPreventer.prevent(java.lang.ClassLoader)"], ["org.eclipse.jetty.util.Promise$Adapter", "org.eclipse.jetty.util.Promise$Adapter()"], ["void", "org.eclipse.jetty.util.Promise$Adapter.succeeded(C)"], ["void", "org.eclipse.jetty.util.Promise$Adapter.failed(java.lang.Throwable)"], ["org.eclipse.jetty.util.QuotedStringTokenizer", "org.eclipse.jetty.util.QuotedStringTokenizer(java.lang.String, java.lang.String, boolean, boolean)"], ["org.eclipse.jetty.util.QuotedStringTokenizer", "org.eclipse.jetty.util.QuotedStringTokenizer(java.lang.String, java.lang.String, boolean)"], ["org.eclipse.jetty.util.QuotedStringTokenizer", "org.eclipse.jetty.util.QuotedStringTokenizer(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.util.QuotedStringTokenizer", "org.eclipse.jetty.util.QuotedStringTokenizer(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.QuotedStringTokenizer.hasMoreTokens()"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.nextToken()"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.nextToken(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.QuotedStringTokenizer.hasMoreElements()"], ["java.lang.Object", "org.eclipse.jetty.util.QuotedStringTokenizer.nextElement()"], ["int", "org.eclipse.jetty.util.QuotedStringTokenizer.countTokens()"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.quoteIfNeeded(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.String)"], ["void", "org.eclipse.jetty.util.QuotedStringTokenizer.quoteOnly(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.Appendable, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.unquoteOnly(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.unquoteOnly(java.lang.String, boolean)"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.unquote(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.QuotedStringTokenizer.unquote(java.lang.String, boolean)"], ["boolean", "org.eclipse.jetty.util.QuotedStringTokenizer.isQuoted(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.QuotedStringTokenizer.getDouble()"], ["void", "org.eclipse.jetty.util.QuotedStringTokenizer.setDouble(boolean)"], ["boolean", "org.eclipse.jetty.util.QuotedStringTokenizer.getSingle()"], ["void", "org.eclipse.jetty.util.QuotedStringTokenizer.setSingle(boolean)"], ["org.eclipse.jetty.util.ReadLineInputStream", "org.eclipse.jetty.util.ReadLineInputStream(java.io.InputStream)"], ["org.eclipse.jetty.util.ReadLineInputStream", "org.eclipse.jetty.util.ReadLineInputStream(java.io.InputStream, int)"], ["java.lang.String", "org.eclipse.jetty.util.ReadLineInputStream.readLine()"], ["synchronized", "org.eclipse.jetty.util.ReadLineInputStream.int read()"], ["synchronized", "org.eclipse.jetty.util.ReadLineInputStream.int read(byte[], int, int)"], ["org.eclipse.jetty.util.RegexSet", "org.eclipse.jetty.util.RegexSet()"], ["int", "org.eclipse.jetty.util.RegexSet.size()"], ["boolean", "org.eclipse.jetty.util.RegexSet.add(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.RegexSet.remove(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.RegexSet.isEmpty()"], ["void", "org.eclipse.jetty.util.RegexSet.clear()"], ["boolean", "org.eclipse.jetty.util.RegexSet.test(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.RegexSet.matches(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.RegexSet.add(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.RegexSet.test(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.resource.BadResource.exists()"], ["long", "org.eclipse.jetty.util.resource.BadResource.lastModified()"], ["boolean", "org.eclipse.jetty.util.resource.BadResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.BadResource.length()"], ["java.io.File", "org.eclipse.jetty.util.resource.BadResource.getFile()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.BadResource.getInputStream()"], ["boolean", "org.eclipse.jetty.util.resource.BadResource.delete()"], ["boolean", "org.eclipse.jetty.util.resource.BadResource.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.BadResource.list()"], ["void", "org.eclipse.jetty.util.resource.BadResource.copyTo(java.io.File)"], ["java.lang.String", "org.eclipse.jetty.util.resource.BadResource.toString()"], ["boolean", "org.eclipse.jetty.util.resource.EmptyResource.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.EmptyResource.close()"], ["boolean", "org.eclipse.jetty.util.resource.EmptyResource.exists()"], ["boolean", "org.eclipse.jetty.util.resource.EmptyResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.EmptyResource.lastModified()"], ["long", "org.eclipse.jetty.util.resource.EmptyResource.length()"], ["java.net.URL", "org.eclipse.jetty.util.resource.EmptyResource.getURL()"], ["java.io.File", "org.eclipse.jetty.util.resource.EmptyResource.getFile()"], ["java.lang.String", "org.eclipse.jetty.util.resource.EmptyResource.getName()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.EmptyResource.getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.util.resource.EmptyResource.getReadableByteChannel()"], ["boolean", "org.eclipse.jetty.util.resource.EmptyResource.delete()"], ["boolean", "org.eclipse.jetty.util.resource.EmptyResource.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.EmptyResource.list()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.EmptyResource.addPath(java.lang.String)"], ["org.eclipse.jetty.util.resource.FileResource", "org.eclipse.jetty.util.resource.FileResource(java.net.URL)"], ["org.eclipse.jetty.util.resource.FileResource", "org.eclipse.jetty.util.resource.FileResource(java.net.URI)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.FileResource.addPath(java.lang.String)"], ["java.net.URI", "org.eclipse.jetty.util.resource.FileResource.getAlias()"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.exists()"], ["long", "org.eclipse.jetty.util.resource.FileResource.lastModified()"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.FileResource.length()"], ["java.lang.String", "org.eclipse.jetty.util.resource.FileResource.getName()"], ["java.io.File", "org.eclipse.jetty.util.resource.FileResource.getFile()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.FileResource.getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.util.resource.FileResource.getReadableByteChannel()"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.delete()"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.FileResource.list()"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.equals(java.lang.Object)"], ["int", "org.eclipse.jetty.util.resource.FileResource.hashCode()"], ["void", "org.eclipse.jetty.util.resource.FileResource.copyTo(java.io.File)"], ["boolean", "org.eclipse.jetty.util.resource.FileResource.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.FileResource.close()"], ["java.net.URL", "org.eclipse.jetty.util.resource.FileResource.getURL()"], ["java.net.URI", "org.eclipse.jetty.util.resource.FileResource.getURI()"], ["java.lang.String", "org.eclipse.jetty.util.resource.FileResource.toString()"], ["synchronized", "org.eclipse.jetty.util.resource.JarFileResource.void close()"], ["boolean", "org.eclipse.jetty.util.resource.JarFileResource.exists()"], ["boolean", "org.eclipse.jetty.util.resource.JarFileResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.JarFileResource.lastModified()"], ["synchronized", "org.eclipse.jetty.util.resource.JarFileResource.java.lang.String[] list()"], ["long", "org.eclipse.jetty.util.resource.JarFileResource.length()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.JarFileResource.getNonCachingResource(org.eclipse.jetty.util.resource.Resource)"], ["boolean", "org.eclipse.jetty.util.resource.JarFileResource.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.JarResource$1.close()"], ["synchronized", "org.eclipse.jetty.util.resource.JarResource.void close()"], ["boolean", "org.eclipse.jetty.util.resource.JarResource.exists()"], ["java.io.File", "org.eclipse.jetty.util.resource.JarResource.getFile()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.JarResource.getInputStream()"], ["void", "org.eclipse.jetty.util.resource.JarResource.copyTo(java.io.File)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.JarResource.newJarResource(org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.util.resource.PathResource", "org.eclipse.jetty.util.resource.PathResource(java.io.File)"], ["org.eclipse.jetty.util.resource.PathResource", "org.eclipse.jetty.util.resource.PathResource(java.nio.file.Path)"], ["org.eclipse.jetty.util.resource.PathResource", "org.eclipse.jetty.util.resource.PathResource(java.net.URI)"], ["org.eclipse.jetty.util.resource.PathResource", "org.eclipse.jetty.util.resource.PathResource(java.net.URL)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.PathResource.addPath(java.lang.String)"], ["void", "org.eclipse.jetty.util.resource.PathResource.close()"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.delete()"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.equals(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.exists()"], ["java.io.File", "org.eclipse.jetty.util.resource.PathResource.getFile()"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.getFollowLinks()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.PathResource.getInputStream()"], ["java.lang.String", "org.eclipse.jetty.util.resource.PathResource.getName()"], ["java.lang.String", "org.eclipse.jetty.util.resource.PathResource.toString()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.util.resource.PathResource.getReadableByteChannel()"], ["java.net.URI", "org.eclipse.jetty.util.resource.PathResource.getURI()"], ["java.net.URL", "org.eclipse.jetty.util.resource.PathResource.getURL()"], ["int", "org.eclipse.jetty.util.resource.PathResource.hashCode()"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.PathResource.lastModified()"], ["long", "org.eclipse.jetty.util.resource.PathResource.length()"], ["java.net.URI", "org.eclipse.jetty.util.resource.PathResource.getAlias()"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.PathResource.list()"], ["boolean", "org.eclipse.jetty.util.resource.PathResource.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.PathResource.setFollowLinks(boolean)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource()"], ["void", "org.eclipse.jetty.util.resource.Resource.setDefaultUseCaches(boolean)"], ["boolean", "org.eclipse.jetty.util.resource.Resource.getDefaultUseCaches()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newResource(java.net.URI)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newResource(java.net.URL)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String, boolean)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newResource(java.io.File)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newSystemResource(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newClassPathResource(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.newClassPathResource(java.lang.String, boolean, boolean)"], ["boolean", "org.eclipse.jetty.util.resource.Resource.isContainedIn(org.eclipse.jetty.util.resource.Resource, org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.Resource.release()"], ["java.net.URI", "org.eclipse.jetty.util.resource.Resource.getURI()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.Resource.getResource(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.resource.Resource.encode(java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.resource.Resource.getAssociate()"], ["void", "org.eclipse.jetty.util.resource.Resource.setAssociate(java.lang.Object)"], ["java.net.URI", "org.eclipse.jetty.util.resource.Resource.getAlias()"], ["java.lang.String", "org.eclipse.jetty.util.resource.Resource.getListHTML(java.lang.String, boolean)"], ["void", "org.eclipse.jetty.util.resource.Resource.writeTo(java.io.OutputStream, long, long)"], ["void", "org.eclipse.jetty.util.resource.Resource.copyTo(java.io.File)"], ["java.lang.String", "org.eclipse.jetty.util.resource.Resource.getWeakETag()"], ["java.net.URL", "org.eclipse.jetty.util.resource.Resource.toURL(java.io.File)"], ["org.eclipse.jetty.util.resource.ResourceCollection", "org.eclipse.jetty.util.resource.ResourceCollection()"], ["org.eclipse.jetty.util.resource.ResourceCollection", "org.eclipse.jetty.util.resource.ResourceCollection(org.eclipse.jetty.util.resource.Resource...)"], ["org.eclipse.jetty.util.resource.ResourceCollection", "org.eclipse.jetty.util.resource.ResourceCollection(java.lang.String[])"], ["org.eclipse.jetty.util.resource.ResourceCollection", "org.eclipse.jetty.util.resource.ResourceCollection(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource[]", "org.eclipse.jetty.util.resource.ResourceCollection.getResources()"], ["void", "org.eclipse.jetty.util.resource.ResourceCollection.setResources(org.eclipse.jetty.util.resource.Resource[])"], ["void", "org.eclipse.jetty.util.resource.ResourceCollection.setResourcesAsCSV(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.ResourceCollection.addPath(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.resource.ResourceCollection.delete()"], ["boolean", "org.eclipse.jetty.util.resource.ResourceCollection.exists()"], ["java.io.File", "org.eclipse.jetty.util.resource.ResourceCollection.getFile()"], ["java.io.InputStream", "org.eclipse.jetty.util.resource.ResourceCollection.getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.util.resource.ResourceCollection.getReadableByteChannel()"], ["java.lang.String", "org.eclipse.jetty.util.resource.ResourceCollection.getName()"], ["java.net.URL", "org.eclipse.jetty.util.resource.ResourceCollection.getURL()"], ["boolean", "org.eclipse.jetty.util.resource.ResourceCollection.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.ResourceCollection.lastModified()"], ["long", "org.eclipse.jetty.util.resource.ResourceCollection.length()"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.ResourceCollection.list()"], ["void", "org.eclipse.jetty.util.resource.ResourceCollection.close()"], ["boolean", "org.eclipse.jetty.util.resource.ResourceCollection.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.resource.ResourceCollection.copyTo(java.io.File)"], ["java.lang.String", "org.eclipse.jetty.util.resource.ResourceCollection.toString()"], ["boolean", "org.eclipse.jetty.util.resource.ResourceCollection.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["synchronized", "org.eclipse.jetty.util.resource.URLResource.void close()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.exists()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.isDirectory()"], ["long", "org.eclipse.jetty.util.resource.URLResource.lastModified()"], ["long", "org.eclipse.jetty.util.resource.URLResource.length()"], ["java.net.URL", "org.eclipse.jetty.util.resource.URLResource.getURL()"], ["java.io.File", "org.eclipse.jetty.util.resource.URLResource.getFile()"], ["java.lang.String", "org.eclipse.jetty.util.resource.URLResource.getName()"], ["synchronized", "org.eclipse.jetty.util.resource.URLResource.java.io.InputStream getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.util.resource.URLResource.getReadableByteChannel()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.delete()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.renameTo(org.eclipse.jetty.util.resource.Resource)"], ["java.lang.String[]", "org.eclipse.jetty.util.resource.URLResource.list()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.util.resource.URLResource.addPath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.resource.URLResource.toString()"], ["int", "org.eclipse.jetty.util.resource.URLResource.hashCode()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.equals(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.getUseCaches()"], ["boolean", "org.eclipse.jetty.util.resource.URLResource.isContainedIn(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.RolloverFileOutputStream$RollTask.run()"], ["org.eclipse.jetty.util.RolloverFileOutputStream", "org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String)"], ["org.eclipse.jetty.util.RolloverFileOutputStream", "org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean)"], ["org.eclipse.jetty.util.RolloverFileOutputStream", "org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int)"], ["org.eclipse.jetty.util.RolloverFileOutputStream", "org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone)"], ["org.eclipse.jetty.util.RolloverFileOutputStream", "org.eclipse.jetty.util.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone, java.lang.String, java.lang.String)"], ["java.util.Calendar", "org.eclipse.jetty.util.RolloverFileOutputStream.toMidnight(java.util.Calendar)"], ["java.lang.String", "org.eclipse.jetty.util.RolloverFileOutputStream.getFilename()"], ["java.lang.String", "org.eclipse.jetty.util.RolloverFileOutputStream.getDatedFilename()"], ["int", "org.eclipse.jetty.util.RolloverFileOutputStream.getRetainDays()"], ["void", "org.eclipse.jetty.util.RolloverFileOutputStream.write(byte[])"], ["void", "org.eclipse.jetty.util.RolloverFileOutputStream.write(byte[], int, int)"], ["void", "org.eclipse.jetty.util.RolloverFileOutputStream.close()"], ["void", "org.eclipse.jetty.util.Scanner$1.run()"], ["org.eclipse.jetty.util.Scanner$Notification[]", "org.eclipse.jetty.util.Scanner$Notification.values()"], ["org.eclipse.jetty.util.Scanner$Notification", "org.eclipse.jetty.util.Scanner$Notification.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.Scanner$TimeNSize", "org.eclipse.jetty.util.Scanner$TimeNSize(long, long)"], ["int", "org.eclipse.jetty.util.Scanner$TimeNSize.hashCode()"], ["boolean", "org.eclipse.jetty.util.Scanner$TimeNSize.equals(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.Scanner$TimeNSize.toString()"], ["org.eclipse.jetty.util.Scanner", "org.eclipse.jetty.util.Scanner()"], ["synchronized", "org.eclipse.jetty.util.Scanner.int getScanInterval()"], ["synchronized", "org.eclipse.jetty.util.Scanner.void setScanInterval(int)"], ["void", "org.eclipse.jetty.util.Scanner.setScanDirs(java.util.List<java.io.File>)"], ["synchronized", "org.eclipse.jetty.util.Scanner.void addScanDir(java.io.File)"], ["void", "org.eclipse.jetty.util.Scanner.setRecursive(boolean)"], ["boolean", "org.eclipse.jetty.util.Scanner.getRecursive()"], ["int", "org.eclipse.jetty.util.Scanner.getScanDepth()"], ["void", "org.eclipse.jetty.util.Scanner.setScanDepth(int)"], ["void", "org.eclipse.jetty.util.Scanner.setFilenameFilter(java.io.FilenameFilter)"], ["java.io.FilenameFilter", "org.eclipse.jetty.util.Scanner.getFilenameFilter()"], ["void", "org.eclipse.jetty.util.Scanner.setReportExistingFilesOnStartup(boolean)"], ["boolean", "org.eclipse.jetty.util.Scanner.getReportExistingFilesOnStartup()"], ["void", "org.eclipse.jetty.util.Scanner.setReportDirs(boolean)"], ["boolean", "org.eclipse.jetty.util.Scanner.getReportDirs()"], ["synchronized", "org.eclipse.jetty.util.Scanner.void addListener(org.eclipse.jetty.util.Scanner$Listener)"], ["synchronized", "org.eclipse.jetty.util.Scanner.void removeListener(org.eclipse.jetty.util.Scanner$Listener)"], ["synchronized", "org.eclipse.jetty.util.Scanner.void doStart()"], ["java.util.TimerTask", "org.eclipse.jetty.util.Scanner.newTimerTask()"], ["java.util.Timer", "org.eclipse.jetty.util.Scanner.newTimer()"], ["void", "org.eclipse.jetty.util.Scanner.schedule()"], ["synchronized", "org.eclipse.jetty.util.Scanner.void doStop()"], ["boolean", "org.eclipse.jetty.util.Scanner.exists(java.lang.String)"], ["synchronized", "org.eclipse.jetty.util.Scanner.void scan()"], ["synchronized", "org.eclipse.jetty.util.Scanner.void scanFiles()"], ["synchronized", "org.eclipse.jetty.util.Scanner.void reportDifferences(java.util.Map<java.lang.String, org.eclipse.jetty.util.Scanner$TimeNSize>, java.util.Map<java.lang.String, org.eclipse.jetty.util.Scanner$TimeNSize>)"], ["org.eclipse.jetty.util.security.CertificateUtils", "org.eclipse.jetty.util.security.CertificateUtils()"], ["java.security.KeyStore", "org.eclipse.jetty.util.security.CertificateUtils.getKeyStore(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.util.Collection<? extends java.security.cert.CRL>", "org.eclipse.jetty.util.security.CertificateUtils.loadCRL(java.lang.String)"], ["org.eclipse.jetty.util.security.CertificateValidator", "org.eclipse.jetty.util.security.CertificateValidator(java.security.KeyStore, java.util.Collection<? extends java.security.cert.CRL>)"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.validate(java.security.KeyStore)"], ["java.lang.String", "org.eclipse.jetty.util.security.CertificateValidator.validate(java.security.KeyStore, java.lang.String)"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.validate(java.security.KeyStore, java.security.cert.Certificate)"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.validate(java.security.cert.Certificate[])"], ["java.security.KeyStore", "org.eclipse.jetty.util.security.CertificateValidator.getTrustStore()"], ["java.util.Collection<? extends java.security.cert.CRL>", "org.eclipse.jetty.util.security.CertificateValidator.getCrls()"], ["int", "org.eclipse.jetty.util.security.CertificateValidator.getMaxCertPathLength()"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.setMaxCertPathLength(int)"], ["boolean", "org.eclipse.jetty.util.security.CertificateValidator.isEnableCRLDP()"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.setEnableCRLDP(boolean)"], ["boolean", "org.eclipse.jetty.util.security.CertificateValidator.isEnableOCSP()"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.setEnableOCSP(boolean)"], ["java.lang.String", "org.eclipse.jetty.util.security.CertificateValidator.getOcspResponderURL()"], ["void", "org.eclipse.jetty.util.security.CertificateValidator.setOcspResponderURL(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.security.Constraint.validateMethod(java.lang.String)"], ["org.eclipse.jetty.util.security.Constraint", "org.eclipse.jetty.util.security.Constraint()"], ["org.eclipse.jetty.util.security.Constraint", "org.eclipse.jetty.util.security.Constraint(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.security.Constraint.clone()"], ["void", "org.eclipse.jetty.util.security.Constraint.setName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.security.Constraint.getName()"], ["void", "org.eclipse.jetty.util.security.Constraint.setRoles(java.lang.String[])"], ["boolean", "org.eclipse.jetty.util.security.Constraint.isAnyRole()"], ["boolean", "org.eclipse.jetty.util.security.Constraint.isAnyAuth()"], ["java.lang.String[]", "org.eclipse.jetty.util.security.Constraint.getRoles()"], ["boolean", "org.eclipse.jetty.util.security.Constraint.hasRole(java.lang.String)"], ["void", "org.eclipse.jetty.util.security.Constraint.setAuthenticate(boolean)"], ["boolean", "org.eclipse.jetty.util.security.Constraint.getAuthenticate()"], ["boolean", "org.eclipse.jetty.util.security.Constraint.isForbidden()"], ["void", "org.eclipse.jetty.util.security.Constraint.setDataConstraint(int)"], ["int", "org.eclipse.jetty.util.security.Constraint.getDataConstraint()"], ["boolean", "org.eclipse.jetty.util.security.Constraint.hasDataConstraint()"], ["java.lang.String", "org.eclipse.jetty.util.security.Constraint.toString()"], ["boolean", "org.eclipse.jetty.util.security.Credential$Crypt.check(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.security.Credential$Crypt.crypt(java.lang.String, java.lang.String)"], ["byte[]", "org.eclipse.jetty.util.security.Credential$MD5.getDigest()"], ["boolean", "org.eclipse.jetty.util.security.Credential$MD5.check(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.util.security.Credential$MD5.digest(java.lang.String)"], ["org.eclipse.jetty.util.security.Credential", "org.eclipse.jetty.util.security.Credential()"], ["org.eclipse.jetty.util.security.Credential", "org.eclipse.jetty.util.security.Credential.getCredential(java.lang.String)"], ["org.eclipse.jetty.util.security.Password", "org.eclipse.jetty.util.security.Password(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.security.Password.toString()"], ["java.lang.String", "org.eclipse.jetty.util.security.Password.toStarString()"], ["boolean", "org.eclipse.jetty.util.security.Password.check(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.security.Password.equals(java.lang.Object)"], ["int", "org.eclipse.jetty.util.security.Password.hashCode()"], ["java.lang.String", "org.eclipse.jetty.util.security.Password.obfuscate(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.security.Password.deobfuscate(java.lang.String)"], ["org.eclipse.jetty.util.security.Password", "org.eclipse.jetty.util.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.util.security.Password.main(java.lang.String[])"], ["java.lang.String", "org.eclipse.jetty.util.security.UnixCrypt.crypt(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.util.security.UnixCrypt.main(java.lang.String[])"], ["void", "org.eclipse.jetty.util.SharedBlockingCallback$Blocker.succeeded()"], ["void", "org.eclipse.jetty.util.SharedBlockingCallback$Blocker.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.util.SharedBlockingCallback$Blocker.block()"], ["void", "org.eclipse.jetty.util.SharedBlockingCallback$Blocker.close()"], ["java.lang.String", "org.eclipse.jetty.util.SharedBlockingCallback$Blocker.toString()"], ["org.eclipse.jetty.util.SharedBlockingCallback", "org.eclipse.jetty.util.SharedBlockingCallback()"], ["org.eclipse.jetty.util.SharedBlockingCallback$Blocker", "org.eclipse.jetty.util.SharedBlockingCallback.acquire()"], ["void", "org.eclipse.jetty.util.SocketAddressResolver$Async$1$1.run()"], ["void", "org.eclipse.jetty.util.SocketAddressResolver$Async$1.run()"], ["org.eclipse.jetty.util.SocketAddressResolver$Async", "org.eclipse.jetty.util.SocketAddressResolver$Async(java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, long)"], ["java.util.concurrent.Executor", "org.eclipse.jetty.util.SocketAddressResolver$Async.getExecutor()"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.util.SocketAddressResolver$Async.getScheduler()"], ["long", "org.eclipse.jetty.util.SocketAddressResolver$Async.getTimeout()"], ["void", "org.eclipse.jetty.util.SocketAddressResolver$Async.resolve(java.lang.String, int, org.eclipse.jetty.util.Promise<java.net.SocketAddress>)"], ["org.eclipse.jetty.util.SocketAddressResolver$Sync", "org.eclipse.jetty.util.SocketAddressResolver$Sync()"], ["void", "org.eclipse.jetty.util.SocketAddressResolver$Sync.resolve(java.lang.String, int, org.eclipse.jetty.util.Promise<java.net.SocketAddress>)"], ["org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager(java.lang.String, javax.net.ssl.X509KeyManager)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.getClientAliases(java.lang.String, java.security.Principal[])"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.getServerAliases(java.lang.String, java.security.Principal[])"], ["java.security.cert.X509Certificate[]", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.getCertificateChain(java.lang.String)"], ["java.security.PrivateKey", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.getPrivateKey(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)"], ["org.eclipse.jetty.util.ssl.AliasedX509KeyManager", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager(java.lang.String, javax.net.ssl.X509KeyManager)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.getClientAliases(java.lang.String, java.security.Principal[])"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.getServerAliases(java.lang.String, java.security.Principal[])"], ["java.security.cert.X509Certificate[]", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.getCertificateChain(java.lang.String)"], ["java.security.PrivateKey", "org.eclipse.jetty.util.ssl.AliasedX509KeyManager.getPrivateKey(java.lang.String)"], ["java.security.cert.X509Certificate[]", "org.eclipse.jetty.util.ssl.SslContextFactory$1.getAcceptedIssuers()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory$1.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory$1.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["org.eclipse.jetty.util.ssl.SslContextFactory", "org.eclipse.jetty.util.ssl.SslContextFactory()"], ["org.eclipse.jetty.util.ssl.SslContextFactory", "org.eclipse.jetty.util.ssl.SslContextFactory(boolean)"], ["org.eclipse.jetty.util.ssl.SslContextFactory", "org.eclipse.jetty.util.ssl.SslContextFactory(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.dump()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.dump(java.lang.Appendable, java.lang.String)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.getExcludeProtocols()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setExcludeProtocols(java.lang.String...)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.addExcludeProtocols(java.lang.String...)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.getIncludeProtocols()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setIncludeProtocols(java.lang.String...)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.getExcludeCipherSuites()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setExcludeCipherSuites(java.lang.String...)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.addExcludeCipherSuites(java.lang.String...)"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.getIncludeCipherSuites()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setIncludeCipherSuites(java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getKeyStorePath()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStorePath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getKeyStoreProvider()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStoreProvider(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getKeyStoreType()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStoreType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getCertAlias()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setCertAlias(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getTrustStore()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStorePath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getTrustStoreProvider()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStoreProvider(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getTrustStoreType()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStoreType(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.getNeedClientAuth()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setNeedClientAuth(boolean)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.getWantClientAuth()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setWantClientAuth(boolean)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isValidateCerts()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setValidateCerts(boolean)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isValidatePeerCerts()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setValidatePeerCerts(boolean)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStorePassword(java.lang.String)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyManagerPassword(java.lang.String)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStorePassword(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getProvider()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setProvider(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getProtocol()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setProtocol(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getSecureRandomAlgorithm()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSecureRandomAlgorithm(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getSslKeyManagerFactoryAlgorithm()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSslKeyManagerFactoryAlgorithm(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getTrustManagerFactoryAlgorithm()"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isTrustAll()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustAll(boolean)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustManagerFactoryAlgorithm(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isRenegotiationAllowed()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setRenegotiationAllowed(boolean)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getCrlPath()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setCrlPath(java.lang.String)"], ["int", "org.eclipse.jetty.util.ssl.SslContextFactory.getMaxCertPathLength()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setMaxCertPathLength(int)"], ["javax.net.ssl.SSLContext", "org.eclipse.jetty.util.ssl.SslContextFactory.getSslContext()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSslContext(javax.net.ssl.SSLContext)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setEndpointIdentificationAlgorithm(java.lang.String)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.checkKeyStore()"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.selectProtocols(java.lang.String[], java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.util.ssl.SslContextFactory.selectCipherSuites(java.lang.String[], java.lang.String[])"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isEnableCRLDP()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setEnableCRLDP(boolean)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isEnableOCSP()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setEnableOCSP(boolean)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.getOcspResponderURL()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setOcspResponderURL(java.lang.String)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStore(java.security.KeyStore)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStore(java.security.KeyStore)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setKeyStoreResource(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setTrustStoreResource(org.eclipse.jetty.util.resource.Resource)"], ["boolean", "org.eclipse.jetty.util.ssl.SslContextFactory.isSessionCachingEnabled()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSessionCachingEnabled(boolean)"], ["int", "org.eclipse.jetty.util.ssl.SslContextFactory.getSslSessionCacheSize()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSslSessionCacheSize(int)"], ["int", "org.eclipse.jetty.util.ssl.SslContextFactory.getSslSessionTimeout()"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.setSslSessionTimeout(int)"], ["javax.net.ssl.SSLServerSocket", "org.eclipse.jetty.util.ssl.SslContextFactory.newSslServerSocket(java.lang.String, int, int)"], ["javax.net.ssl.SSLSocket", "org.eclipse.jetty.util.ssl.SslContextFactory.newSslSocket()"], ["javax.net.ssl.SSLEngine", "org.eclipse.jetty.util.ssl.SslContextFactory.newSSLEngine()"], ["javax.net.ssl.SSLEngine", "org.eclipse.jetty.util.ssl.SslContextFactory.newSSLEngine(java.lang.String, int)"], ["javax.net.ssl.SSLEngine", "org.eclipse.jetty.util.ssl.SslContextFactory.newSSLEngine(java.net.InetSocketAddress)"], ["void", "org.eclipse.jetty.util.ssl.SslContextFactory.customize(javax.net.ssl.SSLEngine)"], ["java.security.cert.X509Certificate[]", "org.eclipse.jetty.util.ssl.SslContextFactory.getCertChain(javax.net.ssl.SSLSession)"], ["int", "org.eclipse.jetty.util.ssl.SslContextFactory.deduceKeyLength(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslContextFactory.toString()"], ["int", "org.eclipse.jetty.util.ssl.SslSelectionDump$1.compare(java.lang.String, java.lang.String)"], ["int", "org.eclipse.jetty.util.ssl.SslSelectionDump$1.compare(java.lang.Object, java.lang.Object)"], ["org.eclipse.jetty.util.ssl.SslSelectionDump$CaptionedList", "org.eclipse.jetty.util.ssl.SslSelectionDump$CaptionedList(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslSelectionDump$CaptionedList.dump()"], ["void", "org.eclipse.jetty.util.ssl.SslSelectionDump$CaptionedList.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.util.ssl.SslSelectionDump", "org.eclipse.jetty.util.ssl.SslSelectionDump(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[])"], ["java.lang.String", "org.eclipse.jetty.util.ssl.SslSelectionDump.dump()"], ["void", "org.eclipse.jetty.util.ssl.SslSelectionDump.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.util.statistic.CounterStatistic", "org.eclipse.jetty.util.statistic.CounterStatistic()"], ["void", "org.eclipse.jetty.util.statistic.CounterStatistic.reset()"], ["void", "org.eclipse.jetty.util.statistic.CounterStatistic.reset(long)"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.add(long)"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.increment()"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.decrement()"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.getMax()"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.getCurrent()"], ["long", "org.eclipse.jetty.util.statistic.CounterStatistic.getTotal()"], ["java.lang.String", "org.eclipse.jetty.util.statistic.CounterStatistic.toString()"], ["org.eclipse.jetty.util.statistic.SampleStatistic", "org.eclipse.jetty.util.statistic.SampleStatistic()"], ["void", "org.eclipse.jetty.util.statistic.SampleStatistic.reset()"], ["void", "org.eclipse.jetty.util.statistic.SampleStatistic.set(long)"], ["long", "org.eclipse.jetty.util.statistic.SampleStatistic.getMax()"], ["long", "org.eclipse.jetty.util.statistic.SampleStatistic.getTotal()"], ["long", "org.eclipse.jetty.util.statistic.SampleStatistic.getCount()"], ["double", "org.eclipse.jetty.util.statistic.SampleStatistic.getMean()"], ["double", "org.eclipse.jetty.util.statistic.SampleStatistic.getVariance()"], ["double", "org.eclipse.jetty.util.statistic.SampleStatistic.getStdDev()"], ["java.lang.String", "org.eclipse.jetty.util.statistic.SampleStatistic.toString()"], ["org.eclipse.jetty.util.StringUtil$CsvSplitState[]", "org.eclipse.jetty.util.StringUtil$CsvSplitState.values()"], ["org.eclipse.jetty.util.StringUtil$CsvSplitState", "org.eclipse.jetty.util.StringUtil$CsvSplitState.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.StringUtil", "org.eclipse.jetty.util.StringUtil()"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.normalizeCharset(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.normalizeCharset(java.lang.String, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.asciiToLowerCase(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.startsWithIgnoreCase(java.lang.String, java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.endsWithIgnoreCase(java.lang.String, java.lang.String)"], ["int", "org.eclipse.jetty.util.StringUtil.indexFrom(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.replace(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.unquote(java.lang.String)"], ["void", "org.eclipse.jetty.util.StringUtil.append(java.lang.StringBuilder, java.lang.String, int, int)"], ["void", "org.eclipse.jetty.util.StringUtil.append(java.lang.StringBuilder, byte, int)"], ["void", "org.eclipse.jetty.util.StringUtil.append2digits(java.lang.StringBuffer, int)"], ["void", "org.eclipse.jetty.util.StringUtil.append2digits(java.lang.StringBuilder, int)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.nonNull(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.equals(java.lang.String, char[], int, int)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.toUTF8String(byte[], int, int)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.toString(byte[], int, int, java.lang.String)"], ["int", "org.eclipse.jetty.util.StringUtil.indexOfControlChars(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.isBlank(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.isNotBlank(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.StringUtil.isUTF8(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.printable(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.printable(byte[])"], ["byte[]", "org.eclipse.jetty.util.StringUtil.getBytes(java.lang.String)"], ["byte[]", "org.eclipse.jetty.util.StringUtil.getUtf8Bytes(java.lang.String)"], ["byte[]", "org.eclipse.jetty.util.StringUtil.getBytes(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.sidBytesToString(byte[])"], ["byte[]", "org.eclipse.jetty.util.StringUtil.sidStringToBytes(java.lang.String)"], ["int", "org.eclipse.jetty.util.StringUtil.toInt(java.lang.String, int)"], ["long", "org.eclipse.jetty.util.StringUtil.toLong(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.truncate(java.lang.String, int)"], ["java.lang.String[]", "org.eclipse.jetty.util.StringUtil.arrayFromString(java.lang.String)"], ["java.lang.String[]", "org.eclipse.jetty.util.StringUtil.csvSplit(java.lang.String)"], ["java.lang.String[]", "org.eclipse.jetty.util.StringUtil.csvSplit(java.lang.String, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.StringUtil.sanitizeXmlString(java.lang.String)"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool(java.util.concurrent.ExecutorService)"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool()"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool(int)"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool(int, int, long)"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool(int, int, long, java.util.concurrent.TimeUnit)"], ["org.eclipse.jetty.util.thread.ExecutorThreadPool", "org.eclipse.jetty.util.thread.ExecutorThreadPool(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>)"], ["void", "org.eclipse.jetty.util.thread.ExecutorThreadPool.execute(java.lang.Runnable)"], ["boolean", "org.eclipse.jetty.util.thread.ExecutorThreadPool.dispatch(java.lang.Runnable)"], ["int", "org.eclipse.jetty.util.thread.ExecutorThreadPool.getIdleThreads()"], ["int", "org.eclipse.jetty.util.thread.ExecutorThreadPool.getThreads()"], ["boolean", "org.eclipse.jetty.util.thread.ExecutorThreadPool.isLowOnThreads()"], ["void", "org.eclipse.jetty.util.thread.ExecutorThreadPool.join()"], ["boolean", "org.eclipse.jetty.util.thread.NonBlockingThread.isNonBlockingThread()"], ["org.eclipse.jetty.util.thread.NonBlockingThread", "org.eclipse.jetty.util.thread.NonBlockingThread(java.lang.Runnable)"], ["void", "org.eclipse.jetty.util.thread.NonBlockingThread.run()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool$1.run()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool$2.dump(java.lang.Appendable, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.thread.QueuedThreadPool$2.dump()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool$3.run()"], ["org.eclipse.jetty.util.thread.QueuedThreadPool", "org.eclipse.jetty.util.thread.QueuedThreadPool()"], ["org.eclipse.jetty.util.thread.QueuedThreadPool", "org.eclipse.jetty.util.thread.QueuedThreadPool(int)"], ["org.eclipse.jetty.util.thread.QueuedThreadPool", "org.eclipse.jetty.util.thread.QueuedThreadPool(int, int)"], ["org.eclipse.jetty.util.thread.QueuedThreadPool", "org.eclipse.jetty.util.thread.QueuedThreadPool(int, int, int)"], ["org.eclipse.jetty.util.thread.QueuedThreadPool", "org.eclipse.jetty.util.thread.QueuedThreadPool(int, int, int, java.util.concurrent.BlockingQueue<java.lang.Runnable>)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setDaemon(boolean)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setIdleTimeout(int)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setMaxThreads(int)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setMinThreads(int)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setName(java.lang.String)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setThreadsPriority(int)"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getIdleTimeout()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getMaxThreads()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getMinThreads()"], ["java.lang.String", "org.eclipse.jetty.util.thread.QueuedThreadPool.getName()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getThreadsPriority()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getQueueSize()"], ["boolean", "org.eclipse.jetty.util.thread.QueuedThreadPool.isDaemon()"], ["boolean", "org.eclipse.jetty.util.thread.QueuedThreadPool.isDetailedDump()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setDetailedDump(boolean)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.execute(java.lang.Runnable)"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.join()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getThreads()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getIdleThreads()"], ["int", "org.eclipse.jetty.util.thread.QueuedThreadPool.getBusyThreads()"], ["boolean", "org.eclipse.jetty.util.thread.QueuedThreadPool.isLowOnThreads()"], ["java.lang.String", "org.eclipse.jetty.util.thread.QueuedThreadPool.dump()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.dump(java.lang.Appendable, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.thread.QueuedThreadPool.toString()"], ["void", "org.eclipse.jetty.util.thread.QueuedThreadPool.setQueue(java.util.concurrent.BlockingQueue<java.lang.Runnable>)"], ["boolean", "org.eclipse.jetty.util.thread.QueuedThreadPool.interruptThread(long)"], ["java.lang.String", "org.eclipse.jetty.util.thread.QueuedThreadPool.dumpThread(long)"], ["java.lang.Thread", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler$1.newThread(java.lang.Runnable)"], ["boolean", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler$2.cancel()"], ["org.eclipse.jetty.util.thread.ScheduledExecutorScheduler$ScheduledFutureTask", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler$ScheduledFutureTask(java.util.concurrent.ScheduledFuture<?>)"], ["boolean", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler$ScheduledFutureTask.cancel()"], ["org.eclipse.jetty.util.thread.ScheduledExecutorScheduler", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler()"], ["org.eclipse.jetty.util.thread.ScheduledExecutorScheduler", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler(java.lang.String, boolean)"], ["org.eclipse.jetty.util.thread.ScheduledExecutorScheduler", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler(java.lang.String, boolean, java.lang.ClassLoader)"], ["org.eclipse.jetty.util.thread.Scheduler$Task", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)"], ["java.lang.String", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.dump()"], ["void", "org.eclipse.jetty.util.thread.ScheduledExecutorScheduler.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.util.thread.ShutdownThread", "org.eclipse.jetty.util.thread.ShutdownThread.getInstance()"], ["synchronized", "org.eclipse.jetty.util.thread.ShutdownThread.void register(org.eclipse.jetty.util.component.LifeCycle...)"], ["synchronized", "org.eclipse.jetty.util.thread.ShutdownThread.void register(int, org.eclipse.jetty.util.component.LifeCycle...)"], ["synchronized", "org.eclipse.jetty.util.thread.ShutdownThread.void deregister(org.eclipse.jetty.util.component.LifeCycle)"], ["synchronized", "org.eclipse.jetty.util.thread.ShutdownThread.boolean isRegistered(org.eclipse.jetty.util.component.LifeCycle)"], ["void", "org.eclipse.jetty.util.thread.ShutdownThread.run()"], ["org.eclipse.jetty.util.thread.SpinLock$Lock", "org.eclipse.jetty.util.thread.SpinLock$Lock(org.eclipse.jetty.util.thread.SpinLock)"], ["void", "org.eclipse.jetty.util.thread.SpinLock$Lock.close()"], ["org.eclipse.jetty.util.thread.SpinLock", "org.eclipse.jetty.util.thread.SpinLock()"], ["org.eclipse.jetty.util.thread.SpinLock$Lock", "org.eclipse.jetty.util.thread.SpinLock.lock()"], ["boolean", "org.eclipse.jetty.util.thread.SpinLock.isLocked()"], ["boolean", "org.eclipse.jetty.util.thread.SpinLock.isLockedThread()"], ["org.eclipse.jetty.util.thread.Sweeper", "org.eclipse.jetty.util.thread.Sweeper(org.eclipse.jetty.util.thread.Scheduler, long)"], ["int", "org.eclipse.jetty.util.thread.Sweeper.getSize()"], ["boolean", "org.eclipse.jetty.util.thread.Sweeper.offer(org.eclipse.jetty.util.thread.Sweeper$Sweepable)"], ["boolean", "org.eclipse.jetty.util.thread.Sweeper.remove(org.eclipse.jetty.util.thread.Sweeper$Sweepable)"], ["void", "org.eclipse.jetty.util.thread.Sweeper.run()"], ["void", "org.eclipse.jetty.util.thread.TimerScheduler$SimpleTask.run()"], ["java.lang.String", "org.eclipse.jetty.util.thread.TimerScheduler$SimpleTask.toString()"], ["org.eclipse.jetty.util.thread.TimerScheduler", "org.eclipse.jetty.util.thread.TimerScheduler()"], ["org.eclipse.jetty.util.thread.TimerScheduler", "org.eclipse.jetty.util.thread.TimerScheduler(java.lang.String, boolean)"], ["org.eclipse.jetty.util.thread.Scheduler$Task", "org.eclipse.jetty.util.thread.TimerScheduler.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)"], ["void", "org.eclipse.jetty.util.thread.TimerScheduler.run()"], ["org.eclipse.jetty.util.TreeTrie", "org.eclipse.jetty.util.TreeTrie()"], ["boolean", "org.eclipse.jetty.util.TreeTrie.put(java.lang.String, V)"], ["V", "org.eclipse.jetty.util.TreeTrie.get(java.lang.String, int, int)"], ["V", "org.eclipse.jetty.util.TreeTrie.get(java.nio.ByteBuffer, int, int)"], ["V", "org.eclipse.jetty.util.TreeTrie.getBest(byte[], int, int)"], ["V", "org.eclipse.jetty.util.TreeTrie.getBest(java.lang.String, int, int)"], ["V", "org.eclipse.jetty.util.TreeTrie.getBest(java.nio.ByteBuffer, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.TreeTrie.toString()"], ["boolean", "org.eclipse.jetty.util.TreeTrie.isFull()"], ["org.eclipse.jetty.util.TypeUtil", "org.eclipse.jetty.util.TypeUtil()"], ["<T> java.util.List<T>", "org.eclipse.jetty.util.TypeUtil.asList(T[])"], ["java.lang.String", "org.eclipse.jetty.util.TypeUtil.toName(java.lang.Class<?>)"], ["java.lang.Object", "org.eclipse.jetty.util.TypeUtil.valueOf(java.lang.Class<?>, java.lang.String)"], ["java.lang.Object", "org.eclipse.jetty.util.TypeUtil.valueOf(java.lang.String, java.lang.String)"], ["int", "org.eclipse.jetty.util.TypeUtil.parseInt(java.lang.String, int, int, int)"], ["int", "org.eclipse.jetty.util.TypeUtil.parseInt(byte[], int, int, int)"], ["byte[]", "org.eclipse.jetty.util.TypeUtil.parseBytes(java.lang.String, int)"], ["java.lang.String", "org.eclipse.jetty.util.TypeUtil.toString(byte[], int)"], ["byte", "org.eclipse.jetty.util.TypeUtil.convertHexDigit(byte)"], ["int", "org.eclipse.jetty.util.TypeUtil.convertHexDigit(int)"], ["void", "org.eclipse.jetty.util.TypeUtil.toHex(byte, java.lang.Appendable)"], ["void", "org.eclipse.jetty.util.TypeUtil.toHex(int, java.lang.Appendable)"], ["void", "org.eclipse.jetty.util.TypeUtil.toHex(long, java.lang.Appendable)"], ["java.lang.String", "org.eclipse.jetty.util.TypeUtil.toHexString(byte)"], ["java.lang.String", "org.eclipse.jetty.util.TypeUtil.toHexString(byte[])"], ["java.lang.String", "org.eclipse.jetty.util.TypeUtil.toHexString(byte[], int, int)"], ["byte[]", "org.eclipse.jetty.util.TypeUtil.fromHexString(java.lang.String)"], ["void", "org.eclipse.jetty.util.TypeUtil.dump(java.lang.Class<?>)"], ["void", "org.eclipse.jetty.util.TypeUtil.dump(java.lang.ClassLoader)"], ["java.lang.Object", "org.eclipse.jetty.util.TypeUtil.call(java.lang.Class<?>, java.lang.String, java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.eclipse.jetty.util.TypeUtil.construct(java.lang.Class<?>, java.lang.Object[])"], ["java.lang.Object", "org.eclipse.jetty.util.TypeUtil.construct(java.lang.Class<?>, java.lang.Object[], java.util.Map<java.lang.String, java.lang.Object>)"], ["boolean", "org.eclipse.jetty.util.TypeUtil.isTrue(java.lang.Object)"], ["boolean", "org.eclipse.jetty.util.TypeUtil.isFalse(java.lang.Object)"], ["org.eclipse.jetty.util.Uptime$DefaultImpl", "org.eclipse.jetty.util.Uptime$DefaultImpl()"], ["long", "org.eclipse.jetty.util.Uptime$DefaultImpl.getUptime()"], ["org.eclipse.jetty.util.Uptime", "org.eclipse.jetty.util.Uptime.getInstance()"], ["org.eclipse.jetty.util.Uptime$Impl", "org.eclipse.jetty.util.Uptime.getImpl()"], ["void", "org.eclipse.jetty.util.Uptime.setImpl(org.eclipse.jetty.util.Uptime$Impl)"], ["long", "org.eclipse.jetty.util.Uptime.getUptime()"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.encodePath(java.lang.String)"], ["java.lang.StringBuilder", "org.eclipse.jetty.util.URIUtil.encodePath(java.lang.StringBuilder, java.lang.String)"], ["java.lang.StringBuilder", "org.eclipse.jetty.util.URIUtil.encodeString(java.lang.StringBuilder, java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.decodePath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.decodePath(byte[], int, int)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.parentPath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.compactPath(java.lang.String)"], ["boolean", "org.eclipse.jetty.util.URIUtil.hasScheme(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.URIUtil.newURI(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)"], ["java.lang.StringBuilder", "org.eclipse.jetty.util.URIUtil.newURIBuilder(java.lang.String, java.lang.String, int)"], ["void", "org.eclipse.jetty.util.URIUtil.appendSchemeHostPort(java.lang.StringBuilder, java.lang.String, java.lang.String, int)"], ["void", "org.eclipse.jetty.util.URIUtil.appendSchemeHostPort(java.lang.StringBuffer, java.lang.String, java.lang.String, int)"], ["boolean", "org.eclipse.jetty.util.URIUtil.equalsIgnoreEncodings(java.lang.String, java.lang.String)"], ["org.eclipse.jetty.util.UrlEncoded", "org.eclipse.jetty.util.UrlEncoded(org.eclipse.jetty.util.UrlEncoded)"], ["org.eclipse.jetty.util.UrlEncoded", "org.eclipse.jetty.util.UrlEncoded()"], ["org.eclipse.jetty.util.UrlEncoded", "org.eclipse.jetty.util.UrlEncoded(java.lang.String)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decode(java.lang.String)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decode(java.lang.String, java.nio.charset.Charset)"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.encode()"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.encode(java.nio.charset.Charset)"], ["synchronized", "org.eclipse.jetty.util.UrlEncoded.java.lang.String encode(java.nio.charset.Charset, boolean)"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.encode(org.eclipse.jetty.util.MultiMap<java.lang.String>, java.nio.charset.Charset, boolean)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeTo(java.lang.String, org.eclipse.jetty.util.MultiMap<java.lang.String>, java.lang.String, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeTo(java.lang.String, org.eclipse.jetty.util.MultiMap<java.lang.String>, java.nio.charset.Charset, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeUtf8To(byte[], int, int, org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decode88591To(java.io.InputStream, org.eclipse.jetty.util.MultiMap<java.lang.String>, int, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeUtf8To(java.io.InputStream, org.eclipse.jetty.util.MultiMap<java.lang.String>, int, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeUtf16To(java.io.InputStream, org.eclipse.jetty.util.MultiMap<java.lang.String>, int, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeTo(java.io.InputStream, org.eclipse.jetty.util.MultiMap<java.lang.String>, java.lang.String, int, int)"], ["void", "org.eclipse.jetty.util.UrlEncoded.decodeTo(java.io.InputStream, org.eclipse.jetty.util.MultiMap<java.lang.String>, java.nio.charset.Charset, int, int)"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.decodeString(java.lang.String, int, int, java.nio.charset.Charset)"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.encodeString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.util.UrlEncoded.encodeString(java.lang.String, java.nio.charset.Charset)"], ["java.lang.Object", "org.eclipse.jetty.util.UrlEncoded.clone()"], ["org.eclipse.jetty.util.Utf8Appendable$NotUtf8Exception", "org.eclipse.jetty.util.Utf8Appendable$NotUtf8Exception(java.lang.String)"], ["org.eclipse.jetty.util.Utf8Appendable", "org.eclipse.jetty.util.Utf8Appendable(java.lang.Appendable)"], ["void", "org.eclipse.jetty.util.Utf8Appendable.append(byte)"], ["void", "org.eclipse.jetty.util.Utf8Appendable.append(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.util.Utf8Appendable.append(byte[], int, int)"], ["boolean", "org.eclipse.jetty.util.Utf8Appendable.append(byte[], int, int, int)"], ["boolean", "org.eclipse.jetty.util.Utf8Appendable.isUtf8SequenceComplete()"], ["java.lang.String", "org.eclipse.jetty.util.Utf8Appendable.toReplacedString()"], ["org.eclipse.jetty.util.Utf8LineParser$State[]", "org.eclipse.jetty.util.Utf8LineParser$State.values()"], ["org.eclipse.jetty.util.Utf8LineParser$State", "org.eclipse.jetty.util.Utf8LineParser$State.valueOf(java.lang.String)"], ["org.eclipse.jetty.util.Utf8LineParser", "org.eclipse.jetty.util.Utf8LineParser()"], ["java.lang.String", "org.eclipse.jetty.util.Utf8LineParser.parse(java.nio.ByteBuffer)"], ["org.eclipse.jetty.util.Utf8StringBuffer", "org.eclipse.jetty.util.Utf8StringBuffer()"], ["org.eclipse.jetty.util.Utf8StringBuffer", "org.eclipse.jetty.util.Utf8StringBuffer(int)"], ["int", "org.eclipse.jetty.util.Utf8StringBuffer.length()"], ["void", "org.eclipse.jetty.util.Utf8StringBuffer.reset()"], ["java.lang.StringBuffer", "org.eclipse.jetty.util.Utf8StringBuffer.getStringBuffer()"], ["java.lang.String", "org.eclipse.jetty.util.Utf8StringBuffer.toString()"], ["org.eclipse.jetty.util.Utf8StringBuilder", "org.eclipse.jetty.util.Utf8StringBuilder()"], ["org.eclipse.jetty.util.Utf8StringBuilder", "org.eclipse.jetty.util.Utf8StringBuilder(int)"], ["int", "org.eclipse.jetty.util.Utf8StringBuilder.length()"], ["void", "org.eclipse.jetty.util.Utf8StringBuilder.reset()"], ["java.lang.StringBuilder", "org.eclipse.jetty.util.Utf8StringBuilder.getStringBuilder()"], ["java.lang.String", "org.eclipse.jetty.util.Utf8StringBuilder.toString()"]]}