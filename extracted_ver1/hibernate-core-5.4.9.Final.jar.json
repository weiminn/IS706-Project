{"hibernate-core-5.4.9.Final.jar": [["org.hibernate.EntityMode[]", "org.hibernate.EntityMode.values()"], ["org.hibernate.EntityMode", "org.hibernate.EntityMode.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.EntityMode.getExternalName()"], ["java.lang.String", "org.hibernate.EntityMode.toString()"], ["org.hibernate.EntityMode", "org.hibernate.EntityMode.parse(java.lang.String)"], ["org.hibernate.NonUniqueResultException", "org.hibernate.NonUniqueResultException(int)"], ["org.hibernate.LockMode[]", "org.hibernate.LockMode.values()"], ["org.hibernate.LockMode", "org.hibernate.LockMode.valueOf(java.lang.String)"], ["boolean", "org.hibernate.LockMode.greaterThan(org.hibernate.LockMode)"], ["boolean", "org.hibernate.LockMode.lessThan(org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.LockMode.toExternalForm()"], ["org.hibernate.LockMode", "org.hibernate.LockMode.fromExternalForm(java.lang.String)"], ["org.hibernate.tool.schema.SourceType[]", "org.hibernate.tool.schema.SourceType.values()"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.SourceType.valueOf(java.lang.String)"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.SourceType.interpret(java.lang.Object, org.hibernate.tool.schema.SourceType)"], ["org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation", "org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation(org.hibernate.engine.jdbc.env.spi.IdentifierHelper)"], ["void", "org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation.addTableInformation(org.hibernate.tool.schema.extract.spi.TableInformation)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation.getTableInformation(org.hibernate.mapping.Table)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation.getTableInformation(java.lang.String)"], ["default", "org.hibernate.tool.schema.extract.spi.SequenceInformation.int getIncrementSize()"], ["org.hibernate.tool.schema.extract.spi.SchemaExtractionException", "org.hibernate.tool.schema.extract.spi.SchemaExtractionException(java.lang.String)"], ["org.hibernate.tool.schema.extract.spi.SchemaExtractionException", "org.hibernate.tool.schema.extract.spi.SchemaExtractionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getServiceRegistry()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getJdbcEnvironment()"], ["java.sql.Connection", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getJdbcConnection()"], ["java.sql.DatabaseMetaData", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getJdbcDatabaseMetaData()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getDefaultCatalog()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getDefaultSchema()"], ["org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.getDatabaseObjectAccess()"], ["void", "org.hibernate.tool.schema.extract.spi.ExtractionContext$EmptyExtractionContext.cleanup()"], ["org.hibernate.tool.schema.extract.internal.ColumnInformationImpl", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl(org.hibernate.tool.schema.extract.spi.TableInformation, org.hibernate.boot.model.naming.Identifier, int, java.lang.String, int, int, org.hibernate.boot.model.TruthValue)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getContainingTableInformation()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getColumnIdentifier()"], ["int", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getTypeCode()"], ["java.lang.String", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getTypeName()"], ["int", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getColumnSize()"], ["int", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getDecimalDigits()"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.getNullable()"], ["java.lang.String", "org.hibernate.tool.schema.extract.internal.ColumnInformationImpl.toString()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl(org.hibernate.boot.model.relational.QualifiedSequenceName, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long)"], ["org.hibernate.boot.model.relational.QualifiedSequenceName", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl.getSequenceName()"], ["java.lang.Long", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl.getStartValue()"], ["java.lang.Long", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl.getMinValue()"], ["java.lang.Long", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl.getMaxValue()"], ["java.lang.Long", "org.hibernate.tool.schema.extract.internal.SequenceInformationImpl.getIncrementValue()"], ["org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl$ColumnReferenceMappingImpl", "org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl$ColumnReferenceMappingImpl(org.hibernate.tool.schema.extract.spi.ColumnInformation, org.hibernate.tool.schema.extract.spi.ColumnInformation)"], ["org.hibernate.tool.schema.extract.spi.ColumnInformation", "org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl$ColumnReferenceMappingImpl.getReferencingColumnMetadata()"], ["org.hibernate.tool.schema.extract.spi.ColumnInformation", "org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl$ColumnReferenceMappingImpl.getReferencedColumnMetadata()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorSAPDBDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorSAPDBDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl(org.hibernate.service.ServiceRegistry, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.resource.transaction.spi.DdlTransactionIsolator, org.hibernate.boot.model.relational.Namespace$Name)"], ["boolean", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.catalogExists(org.hibernate.boot.model.naming.Identifier)"], ["boolean", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.schemaExists(org.hibernate.boot.model.relational.Namespace$Name)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTableInformation(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTableInformation(org.hibernate.boot.model.relational.Namespace$Name, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTableInformation(org.hibernate.boot.model.relational.QualifiedTableName)"], ["org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(org.hibernate.boot.model.relational.Namespace)"], ["org.hibernate.tool.schema.extract.spi.SequenceInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getSequenceInformation(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.SequenceInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getSequenceInformation(org.hibernate.boot.model.relational.Namespace$Name, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.SequenceInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getSequenceInformation(org.hibernate.boot.model.relational.QualifiedSequenceName)"], ["void", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.cleanup()"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.locateTableInformation(org.hibernate.boot.model.relational.QualifiedTableName)"], ["org.hibernate.tool.schema.extract.spi.SequenceInformation", "org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.locateSequenceInformation(org.hibernate.boot.model.relational.QualifiedSequenceName)"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorCUBRIDDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorCUBRIDDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorH2DatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorH2DatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorIngresDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorIngresDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorNoOpImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorNoOpImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorMariaDBDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorMariaDBDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorInformixDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorInformixDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorDB2DatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorDB2DatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorOracleDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorOracleDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl", "org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl(org.hibernate.boot.model.naming.Identifier, java.util.List<org.hibernate.tool.schema.extract.spi.ForeignKeyInformation$ColumnReferenceMapping>)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl.getForeignKeyIdentifier()"], ["org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilderImpl", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilderImpl(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilder", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilderImpl.addColumnMapping(org.hibernate.tool.schema.extract.spi.ColumnInformation, org.hibernate.tool.schema.extract.spi.ColumnInformation)"], ["org.hibernate.tool.schema.extract.internal.ForeignKeyInformationImpl", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilderImpl.build()"], ["org.hibernate.tool.schema.extract.spi.ForeignKeyInformation", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl$ForeignKeyBuilderImpl.build()"], ["org.hibernate.tool.schema.extract.internal.PrimaryKeyInformationImpl", "org.hibernate.tool.schema.extract.internal.PrimaryKeyInformationImpl(org.hibernate.boot.model.naming.Identifier, java.lang.Iterable<org.hibernate.tool.schema.extract.spi.ColumnInformation>)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.PrimaryKeyInformationImpl.getPrimaryKeyIdentifier()"], ["org.hibernate.tool.schema.extract.internal.TableInformationImpl", "org.hibernate.tool.schema.extract.internal.TableInformationImpl(org.hibernate.tool.schema.extract.spi.InformationExtractor, org.hibernate.engine.jdbc.env.spi.IdentifierHelper, org.hibernate.boot.model.relational.QualifiedTableName, boolean, java.lang.String)"], ["org.hibernate.boot.model.relational.QualifiedTableName", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getName()"], ["boolean", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.isPhysicalTable()"], ["java.lang.String", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getComment()"], ["org.hibernate.tool.schema.extract.spi.ColumnInformation", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getColumn(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.PrimaryKeyInformation", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getPrimaryKey()"], ["org.hibernate.tool.schema.extract.spi.ForeignKeyInformation", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getForeignKey(org.hibernate.boot.model.naming.Identifier)"], ["void", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.addColumn(org.hibernate.tool.schema.extract.spi.ColumnInformation)"], ["org.hibernate.tool.schema.extract.spi.IndexInformation", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.getIndex(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.tool.schema.extract.internal.TableInformationImpl.toString()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorMimerSQLDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorMimerSQLDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.ExtractionContextImpl", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl(org.hibernate.service.ServiceRegistry, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getServiceRegistry()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getJdbcEnvironment()"], ["java.sql.Connection", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getJdbcConnection()"], ["java.sql.DatabaseMetaData", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getJdbcDatabaseMetaData()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getDefaultCatalog()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getDefaultSchema()"], ["org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.getDatabaseObjectAccess()"], ["void", "org.hibernate.tool.schema.extract.internal.ExtractionContextImpl.cleanup()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorHANADatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorHANADatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorTimesTenDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorTimesTenDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorHSQLDBDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorHSQLDBDatabaseImpl()"], ["org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder.addColumn(org.hibernate.tool.schema.extract.spi.ColumnInformation)"], ["org.hibernate.tool.schema.extract.internal.IndexInformationImpl", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder.build()"], ["org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl(org.hibernate.tool.schema.extract.spi.ExtractionContext)"], ["boolean", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.catalogExists(org.hibernate.boot.model.naming.Identifier)"], ["boolean", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.schemaExists(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.TableInformation", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTable(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.NameSpaceTablesInformation", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.spi.PrimaryKeyInformation", "org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getPrimaryKey(org.hibernate.tool.schema.extract.internal.TableInformationImpl)"], ["org.hibernate.tool.schema.extract.internal.SequenceNameExtractorImpl", "org.hibernate.tool.schema.extract.internal.SequenceNameExtractorImpl()"], ["org.hibernate.tool.schema.extract.internal.IndexInformationImpl", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl(org.hibernate.boot.model.naming.Identifier, java.util.List<org.hibernate.tool.schema.extract.spi.ColumnInformation>)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl.getIndexIdentifier()"], ["org.hibernate.tool.schema.extract.internal.IndexInformationImpl$Builder", "org.hibernate.tool.schema.extract.internal.IndexInformationImpl.builder(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorDerbyDatabaseImpl", "org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorDerbyDatabaseImpl()"], ["org.hibernate.tool.schema.TargetType[]", "org.hibernate.tool.schema.TargetType.values()"], ["org.hibernate.tool.schema.TargetType", "org.hibernate.tool.schema.TargetType.valueOf(java.lang.String)"], ["org.hibernate.tool.schema.spi.CommandAcceptanceException", "org.hibernate.tool.schema.spi.CommandAcceptanceException(java.lang.String)"], ["org.hibernate.tool.schema.spi.CommandAcceptanceException", "org.hibernate.tool.schema.spi.CommandAcceptanceException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.tool.schema.spi.ScriptTargetOutput", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$2.getScriptTargetOutput()"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$2.getSourceType()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$2.getScriptSourceInput()"], ["org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator()"], ["void", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry, java.util.Map, org.hibernate.tool.schema.spi.DelayedDropRegistry)"], ["org.hibernate.tool.schema.spi.ExecutionOptions", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.buildExecutionOptions(java.util.Map, org.hibernate.tool.schema.spi.ExceptionHandler)"], ["org.hibernate.tool.schema.spi.DelayedDropRegistryNotAvailableImpl", "org.hibernate.tool.schema.spi.DelayedDropRegistryNotAvailableImpl()"], ["void", "org.hibernate.tool.schema.spi.DelayedDropRegistryNotAvailableImpl.registerOnCloseAction(org.hibernate.tool.schema.spi.DelayedDropAction)"], ["org.hibernate.tool.schema.spi.ScriptTargetOutput", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$3.getScriptTargetOutput()"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$3.getSourceType()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$3.getScriptSourceInput()"], ["org.hibernate.tool.schema.spi.SchemaManagementException", "org.hibernate.tool.schema.spi.SchemaManagementException(java.lang.String)"], ["org.hibernate.tool.schema.spi.SchemaManagementException", "org.hibernate.tool.schema.spi.SchemaManagementException(java.lang.String, java.lang.Throwable)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$MigrateSettingSelector.getSourceTypeSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$MigrateSettingSelector.getScriptSourceSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$MigrateSettingSelector.getScriptTargetSetting(java.util.Map)"], ["boolean", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$1.shouldManageNamespaces()"], ["java.util.Map", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$1.getConfigurationValues()"], ["org.hibernate.tool.schema.spi.ExceptionHandler", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$1.getExceptionHandler()"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$CreateSettingSelector.getSourceTypeSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$CreateSettingSelector.getScriptSourceSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$CreateSettingSelector.getScriptTargetSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$DropSettingSelector.getSourceTypeSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$DropSettingSelector.getScriptSourceSetting(java.util.Map)"], ["java.lang.Object", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$DropSettingSelector.getScriptTargetSetting(java.util.Map)"], ["org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping(org.hibernate.tool.schema.Action, org.hibernate.tool.schema.Action)"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.getDatabaseAction()"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.getScriptAction()"], ["org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping", "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.interpret(java.util.Map)"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$3.getSourceType()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$3.getScriptSourceInput()"], ["org.hibernate.tool.schema.internal.ExceptionHandlerCollectingImpl", "org.hibernate.tool.schema.internal.ExceptionHandlerCollectingImpl()"], ["void", "org.hibernate.tool.schema.internal.ExceptionHandlerCollectingImpl.handleException(org.hibernate.tool.schema.spi.CommandAcceptanceException)"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl.getJdbcConnectionAccess()"], ["org.hibernate.dialect.Dialect", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl.getDialect()"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl.getSqlStatementLogger()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl.getSqlExceptionHelper()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl$JdbcContextDelayedDropImpl.getServiceRegistry()"], ["org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl", "org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["org.hibernate.tool.schema.internal.exec.JdbcContext", "org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl.getJdbcContext()"], ["java.sql.Connection", "org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl.getIsolatedConnection()"], ["void", "org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl.prepare()"], ["void", "org.hibernate.tool.schema.internal.DdlTransactionIsolatorProvidedConnectionImpl.release()"], ["org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromReader", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromReader(java.io.Reader)"], ["java.lang.String", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromReader.toString()"], ["int", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile$1.read(char[], int, int)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile$1.close()"], ["org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile(java.io.File, java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile.release()"], ["org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessConnectionProviderImpl", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessConnectionProviderImpl(org.hibernate.engine.jdbc.connections.spi.ConnectionProvider)"], ["java.sql.Connection", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessConnectionProviderImpl.obtainConnection()"], ["void", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessConnectionProviderImpl.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessConnectionProviderImpl.supportsAggressiveRelease()"], ["org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout", "org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout(java.lang.String)"], ["org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout", "org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout()"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToStdout.release()"], ["org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile(java.io.File, java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile.release()"], ["java.lang.String", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromFile.toString()"], ["org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToWriter", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToWriter(java.io.Writer)"], ["org.hibernate.tool.schema.internal.exec.GenerationTargetToScript", "org.hibernate.tool.schema.internal.exec.GenerationTargetToScript(org.hibernate.tool.schema.spi.ScriptTargetOutput, java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToScript.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToScript.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToScript.release()"], ["org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromUrl", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromUrl(java.net.URL, java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromUrl.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromUrl.release()"], ["java.lang.String", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputFromUrl.toString()"], ["org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl(org.hibernate.service.ServiceRegistry, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.resource.transaction.spi.DdlTransactionIsolator, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getServiceRegistry()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcEnvironment()"], ["java.sql.Connection", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection()"], ["java.sql.DatabaseMetaData", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getDefaultCatalog()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getDefaultSchema()"], ["org.hibernate.tool.schema.extract.spi.ExtractionContext$DatabaseObjectAccess", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getDatabaseObjectAccess()"], ["void", "org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.cleanup()"], ["org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToStdout", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToStdout()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToStdout.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToStdout.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToStdout.release()"], ["org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl.release()"], ["org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase", "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase(org.hibernate.resource.transaction.spi.DdlTransactionIsolator)"], ["org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase", "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase(org.hibernate.resource.transaction.spi.DdlTransactionIsolator, boolean)"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release()"], ["org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessProvidedConnectionImpl", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessProvidedConnectionImpl(java.sql.Connection)"], ["java.sql.Connection", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessProvidedConnectionImpl.obtainConnection()"], ["void", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessProvidedConnectionImpl.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.tool.schema.internal.exec.JdbcConnectionAccessProvidedConnectionImpl.supportsAggressiveRelease()"], ["org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToUrl", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToUrl(java.net.URL, java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToUrl.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToUrl.release()"], ["org.hibernate.tool.schema.internal.exec.AbstractScriptTargetOutput", "org.hibernate.tool.schema.internal.exec.AbstractScriptTargetOutput()"], ["void", "org.hibernate.tool.schema.internal.exec.AbstractScriptTargetOutput.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.AbstractScriptTargetOutput.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.exec.AbstractScriptTargetOutput.release()"], ["org.hibernate.tool.schema.internal.exec.AbstractScriptSourceInput", "org.hibernate.tool.schema.internal.exec.AbstractScriptSourceInput()"], ["void", "org.hibernate.tool.schema.internal.exec.AbstractScriptSourceInput.prepare()"], ["void", "org.hibernate.tool.schema.internal.exec.AbstractScriptSourceInput.release()"], ["org.hibernate.tool.schema.internal.IndividuallySchemaMigratorImpl", "org.hibernate.tool.schema.internal.IndividuallySchemaMigratorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["org.hibernate.tool.schema.internal.SchemaManagementToolInitiator", "org.hibernate.tool.schema.internal.SchemaManagementToolInitiator()"], ["org.hibernate.tool.schema.spi.SchemaManagementTool", "org.hibernate.tool.schema.internal.SchemaManagementToolInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.tool.schema.internal.SchemaManagementToolInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.tool.schema.internal.IndividuallySchemaValidatorImpl", "org.hibernate.tool.schema.internal.IndividuallySchemaValidatorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["boolean", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$1.shouldManageNamespaces()"], ["java.util.Map", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$1.getConfigurationValues()"], ["org.hibernate.tool.schema.spi.ExceptionHandler", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$1.getExceptionHandler()"], ["org.hibernate.tool.schema.internal.HibernateSchemaManagementTool", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool()"], ["void", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.tool.schema.spi.SchemaCreator", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getSchemaCreator(java.util.Map)"], ["org.hibernate.tool.schema.spi.SchemaDropper", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getSchemaDropper(java.util.Map)"], ["org.hibernate.tool.schema.spi.SchemaMigrator", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getSchemaMigrator(java.util.Map)"], ["org.hibernate.tool.schema.spi.SchemaValidator", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getSchemaValidator(java.util.Map)"], ["org.hibernate.resource.transaction.spi.DdlTransactionIsolator", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getDdlTransactionIsolator(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["org.hibernate.tool.schema.internal.exec.JdbcContext", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.resolveJdbcContext(java.util.Map)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool.getServiceRegistry()"], ["org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider", "org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider()"], ["org.hibernate.tool.schema.spi.SchemaFilter", "org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider.getCreateFilter()"], ["org.hibernate.tool.schema.spi.SchemaFilter", "org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider.getDropFilter()"], ["org.hibernate.tool.schema.spi.SchemaFilter", "org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider.getMigrateFilter()"], ["org.hibernate.tool.schema.spi.SchemaFilter", "org.hibernate.tool.schema.internal.DefaultSchemaFilterProvider.getValidateFilter()"], ["org.hibernate.tool.schema.internal.ExceptionHandlerHaltImpl", "org.hibernate.tool.schema.internal.ExceptionHandlerHaltImpl()"], ["void", "org.hibernate.tool.schema.internal.ExceptionHandlerHaltImpl.handleException(org.hibernate.tool.schema.spi.CommandAcceptanceException)"], ["org.hibernate.tool.schema.internal.StandardTableExporter", "org.hibernate.tool.schema.internal.StandardTableExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardTableExporter.getSqlCreateStrings(org.hibernate.mapping.Table, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardTableExporter.getSqlDropStrings(org.hibernate.mapping.Table, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardTableExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardTableExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["boolean", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$2.shouldManageNamespaces()"], ["java.util.Map", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$2.getConfigurationValues()"], ["org.hibernate.tool.schema.spi.ExceptionHandler", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$2.getExceptionHandler()"], ["org.hibernate.tool.schema.internal.SchemaCreatorImpl", "org.hibernate.tool.schema.internal.SchemaCreatorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool)"], ["org.hibernate.tool.schema.internal.SchemaCreatorImpl", "org.hibernate.tool.schema.internal.SchemaCreatorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["org.hibernate.tool.schema.internal.SchemaCreatorImpl", "org.hibernate.tool.schema.internal.SchemaCreatorImpl(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.tool.schema.internal.SchemaCreatorImpl", "org.hibernate.tool.schema.internal.SchemaCreatorImpl(org.hibernate.service.ServiceRegistry, org.hibernate.tool.schema.spi.SchemaFilter)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.spi.SourceDescriptor, org.hibernate.tool.schema.spi.TargetDescriptor)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(org.hibernate.boot.Metadata, org.hibernate.dialect.Dialect, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.spi.SourceDescriptor, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromScript(org.hibernate.tool.schema.spi.ScriptSourceInput, org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor, org.hibernate.engine.jdbc.internal.Formatter, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.dialect.Dialect, org.hibernate.engine.jdbc.internal.Formatter, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(org.hibernate.boot.Metadata, boolean, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry, java.util.Map, boolean, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["org.hibernate.tool.schema.internal.StandardSequenceExporter", "org.hibernate.tool.schema.internal.StandardSequenceExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardSequenceExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Sequence, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardSequenceExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Sequence, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardSequenceExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardSequenceExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["org.hibernate.tool.schema.internal.DefaultSchemaFilter", "org.hibernate.tool.schema.internal.DefaultSchemaFilter()"], ["boolean", "org.hibernate.tool.schema.internal.DefaultSchemaFilter.includeNamespace(org.hibernate.boot.model.relational.Namespace)"], ["boolean", "org.hibernate.tool.schema.internal.DefaultSchemaFilter.includeTable(org.hibernate.mapping.Table)"], ["boolean", "org.hibernate.tool.schema.internal.DefaultSchemaFilter.includeSequence(org.hibernate.boot.model.relational.Sequence)"], ["org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl", "org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl()"], ["void", "org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl.handleException(org.hibernate.tool.schema.spi.CommandAcceptanceException)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl$JournalingGenerationTarget.prepare()"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl$JournalingGenerationTarget.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl$JournalingGenerationTarget.release()"], ["boolean", "org.hibernate.tool.schema.internal.SchemaDropperImpl$2.shouldManageNamespaces()"], ["java.util.Map", "org.hibernate.tool.schema.internal.SchemaDropperImpl$2.getConfigurationValues()"], ["org.hibernate.tool.schema.spi.ExceptionHandler", "org.hibernate.tool.schema.internal.SchemaDropperImpl$2.getExceptionHandler()"], ["org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter", "org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter.getSqlDropStrings(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardAuxiliaryDatabaseObjectExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextImpl.getJdbcConnectionAccess()"], ["org.hibernate.dialect.Dialect", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextImpl.getDialect()"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextImpl.getSqlStatementLogger()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextImpl.getSqlExceptionHelper()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextImpl.getServiceRegistry()"], ["boolean", "org.hibernate.tool.schema.internal.SchemaDropperImpl$1.shouldManageNamespaces()"], ["java.util.Map", "org.hibernate.tool.schema.internal.SchemaDropperImpl$1.getConfigurationValues()"], ["org.hibernate.tool.schema.spi.ExceptionHandler", "org.hibernate.tool.schema.internal.SchemaDropperImpl$1.getExceptionHandler()"], ["org.hibernate.tool.schema.internal.StandardForeignKeyExporter", "org.hibernate.tool.schema.internal.StandardForeignKeyExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardForeignKeyExporter.getSqlCreateStrings(org.hibernate.mapping.ForeignKey, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardForeignKeyExporter.getSqlDropStrings(org.hibernate.mapping.ForeignKey, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardForeignKeyExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardForeignKeyExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["org.hibernate.tool.schema.internal.StandardUniqueKeyExporter", "org.hibernate.tool.schema.internal.StandardUniqueKeyExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardUniqueKeyExporter.getSqlCreateStrings(org.hibernate.mapping.Constraint, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardUniqueKeyExporter.getSqlDropStrings(org.hibernate.mapping.Constraint, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardUniqueKeyExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardUniqueKeyExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextBuilder", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextBuilder(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.tool.schema.internal.exec.JdbcContext", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$JdbcContextBuilder.buildJdbcContext()"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl(java.util.ArrayList<java.lang.String>)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl", "org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl", "org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["org.hibernate.tool.schema.internal.Helper", "org.hibernate.tool.schema.internal.Helper()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.schema.internal.Helper.interpretScriptSourceSetting(java.lang.Object, org.hibernate.boot.registry.classloading.spi.ClassLoaderService, java.lang.String)"], ["org.hibernate.tool.schema.spi.ScriptTargetOutput", "org.hibernate.tool.schema.internal.Helper.interpretScriptTargetSetting(java.lang.Object, org.hibernate.boot.registry.classloading.spi.ClassLoaderService, java.lang.String)"], ["boolean", "org.hibernate.tool.schema.internal.Helper.interpretNamespaceHandling(java.util.Map)"], ["boolean", "org.hibernate.tool.schema.internal.Helper.interpretFormattingEnabled(java.util.Map)"], ["org.hibernate.tool.schema.extract.spi.DatabaseInformation", "org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(org.hibernate.service.ServiceRegistry, org.hibernate.resource.transaction.spi.DdlTransactionIsolator, org.hibernate.boot.model.relational.Namespace$Name)"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool)"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.tool.schema.internal.SchemaDropperImpl", "org.hibernate.tool.schema.internal.SchemaDropperImpl(org.hibernate.service.ServiceRegistry, org.hibernate.tool.schema.spi.SchemaFilter)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.spi.SourceDescriptor, org.hibernate.tool.schema.spi.TargetDescriptor)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.dialect.Dialect, org.hibernate.tool.schema.spi.SourceDescriptor, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["org.hibernate.tool.schema.spi.DelayedDropAction", "org.hibernate.tool.schema.internal.SchemaDropperImpl.buildDelayedAction(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.spi.SourceDescriptor)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(org.hibernate.boot.Metadata, boolean, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["void", "org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry, java.util.Map, boolean, org.hibernate.tool.schema.internal.exec.GenerationTarget...)"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.schema.internal.SchemaDropperImpl$3.getSourceType()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.schema.internal.SchemaDropperImpl$3.getScriptSourceInput()"], ["org.hibernate.tool.schema.internal.AbstractSchemaMigrator", "org.hibernate.tool.schema.internal.AbstractSchemaMigrator(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["void", "org.hibernate.tool.schema.internal.AbstractSchemaMigrator.setUniqueConstraintStrategy(org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy)"], ["void", "org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.tool.schema.spi.TargetDescriptor)"], ["java.lang.String", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDatabaseName()"], ["int", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDatabaseMajorVersion()"], ["int", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDatabaseMinorVersion()"], ["java.lang.String", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDriverName()"], ["int", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDriverMajorVersion()"], ["int", "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool$1.getDriverMinorVersion()"], ["org.hibernate.tool.schema.internal.StandardIndexExporter", "org.hibernate.tool.schema.internal.StandardIndexExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardIndexExporter.getSqlCreateStrings(org.hibernate.mapping.Index, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardIndexExporter.getSqlDropStrings(org.hibernate.mapping.Index, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardIndexExporter.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.tool.schema.internal.StandardIndexExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$JournalingGenerationTarget.prepare()"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$JournalingGenerationTarget.accept(java.lang.String)"], ["void", "org.hibernate.tool.schema.internal.SchemaCreatorImpl$JournalingGenerationTarget.release()"], ["org.hibernate.tool.schema.internal.AbstractSchemaValidator", "org.hibernate.tool.schema.internal.AbstractSchemaValidator(org.hibernate.tool.schema.internal.HibernateSchemaManagementTool, org.hibernate.tool.schema.spi.SchemaFilter)"], ["void", "org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ExecutionOptions)"], ["void", "org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(org.hibernate.boot.Metadata, org.hibernate.tool.schema.extract.spi.DatabaseInformation, org.hibernate.tool.schema.spi.ExecutionOptions, org.hibernate.dialect.Dialect)"], ["org.hibernate.tool.schema.Action[]", "org.hibernate.tool.schema.Action.values()"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.schema.Action.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.tool.schema.Action.toString()"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.schema.Action.interpretJpaSetting(java.lang.Object)"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.schema.Action.interpretHbm2ddlSetting(java.lang.Object)"], ["org.hibernate.tool.schema.JdbcMetadaAccessStrategy[]", "org.hibernate.tool.schema.JdbcMetadaAccessStrategy.values()"], ["org.hibernate.tool.schema.JdbcMetadaAccessStrategy", "org.hibernate.tool.schema.JdbcMetadaAccessStrategy.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.tool.schema.JdbcMetadaAccessStrategy.toString()"], ["org.hibernate.tool.schema.JdbcMetadaAccessStrategy", "org.hibernate.tool.schema.JdbcMetadaAccessStrategy.interpretSetting(java.util.Map)"], ["org.hibernate.tool.schema.JdbcMetadaAccessStrategy", "org.hibernate.tool.schema.JdbcMetadaAccessStrategy.interpretHbm2ddlSetting(java.lang.Object)"], ["org.hibernate.tool.instrument.javassist.InstrumentTask", "org.hibernate.tool.instrument.javassist.InstrumentTask()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getName()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getTypeName()"], ["int", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getColumnSize()"], ["int", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getDecimalDigits()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getNullable()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ColumnMetadata.toString()"], ["int", "org.hibernate.tool.hbm2ddl.ColumnMetadata.getTypeCode()"], ["org.hibernate.tool.hbm2ddl.SchemaValidator$CommandLineArgs", "org.hibernate.tool.hbm2ddl.SchemaValidator$CommandLineArgs.parseCommandLineArgs(java.lang.String[])"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate", "org.hibernate.tool.hbm2ddl.SchemaUpdate()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry)"], ["java.util.List", "org.hibernate.tool.hbm2ddl.SchemaUpdate.getExceptions()"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate", "org.hibernate.tool.hbm2ddl.SchemaUpdate.setHaltOnError(boolean)"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate", "org.hibernate.tool.hbm2ddl.SchemaUpdate.setFormat(boolean)"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate", "org.hibernate.tool.hbm2ddl.SchemaUpdate.setOutputFile(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate", "org.hibernate.tool.hbm2ddl.SchemaUpdate.setDelimiter(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdate.main(java.lang.String[])"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.tool.hbm2ddl.SchemaUpdate.buildMetadataFromMainArgs(java.lang.String[])"], ["org.hibernate.tool.hbm2ddl.DatabaseExporter", "org.hibernate.tool.hbm2ddl.DatabaseExporter(org.hibernate.tool.hbm2ddl.ConnectionHelper, org.hibernate.engine.jdbc.spi.SqlExceptionHelper)"], ["boolean", "org.hibernate.tool.hbm2ddl.DatabaseExporter.acceptsImportScripts()"], ["void", "org.hibernate.tool.hbm2ddl.DatabaseExporter.export(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.DatabaseExporter.release()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.TableMetadata.getName()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.TableMetadata.getCatalog()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.TableMetadata.getSchema()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.TableMetadata.toString()"], ["org.hibernate.tool.hbm2ddl.ColumnMetadata", "org.hibernate.tool.hbm2ddl.TableMetadata.getColumnMetadata(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.ForeignKeyMetadata", "org.hibernate.tool.hbm2ddl.TableMetadata.getForeignKeyMetadata(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.ForeignKeyMetadata", "org.hibernate.tool.hbm2ddl.TableMetadata.getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)"], ["org.hibernate.tool.hbm2ddl.IndexMetadata", "org.hibernate.tool.hbm2ddl.TableMetadata.getIndexMetadata(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.TableMetadata.addColumn(java.sql.ResultSet)"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.IndexMetadata.getName()"], ["org.hibernate.tool.hbm2ddl.ColumnMetadata[]", "org.hibernate.tool.hbm2ddl.IndexMetadata.getColumns()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.IndexMetadata.toString()"], ["org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType[]", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.values()"], ["org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.valueOf(java.lang.String)"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.doCreate()"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.doDrop()"], ["org.hibernate.tool.schema.Action", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.getAction()"], ["org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType", "org.hibernate.tool.hbm2ddl.SchemaExportTask$ExportType.interpret(boolean, boolean)"], ["org.hibernate.tool.hbm2ddl.ImportScriptException", "org.hibernate.tool.hbm2ddl.ImportScriptException(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.ImportScriptException", "org.hibernate.tool.hbm2ddl.ImportScriptException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.tool.hbm2ddl.SchemaExport$TargetDescriptorImpl", "org.hibernate.tool.hbm2ddl.SchemaExport$TargetDescriptorImpl(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.tool.schema.spi.ScriptTargetOutput)"], ["org.hibernate.tool.schema.spi.ScriptTargetOutput", "org.hibernate.tool.hbm2ddl.SchemaExport$TargetDescriptorImpl.getScriptTargetOutput()"], ["org.hibernate.tool.schema.SourceType", "org.hibernate.tool.hbm2ddl.SchemaExport$1.getSourceType()"], ["org.hibernate.tool.schema.spi.ScriptSourceInput", "org.hibernate.tool.hbm2ddl.SchemaExport$1.getScriptSourceInput()"], ["org.hibernate.tool.hbm2ddl.SuppliedConnectionHelper", "org.hibernate.tool.hbm2ddl.SuppliedConnectionHelper(java.sql.Connection, org.hibernate.engine.jdbc.spi.SqlExceptionHelper)"], ["void", "org.hibernate.tool.hbm2ddl.SuppliedConnectionHelper.prepare(boolean)"], ["java.sql.Connection", "org.hibernate.tool.hbm2ddl.SuppliedConnectionHelper.getConnection()"], ["void", "org.hibernate.tool.hbm2ddl.SuppliedConnectionHelper.release()"], ["org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper", "org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper(org.hibernate.engine.jdbc.connections.spi.ConnectionProvider, org.hibernate.engine.jdbc.spi.SqlExceptionHelper)"], ["void", "org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.prepare(boolean)"], ["java.sql.Connection", "org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.getConnection()"], ["void", "org.hibernate.tool.hbm2ddl.SuppliedConnectionProviderConnectionHelper.release()"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport()"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setOutputFile(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setImportFiles(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setDelimiter(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setFormat(boolean)"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setHaltOnError(boolean)"], ["org.hibernate.tool.hbm2ddl.SchemaExport", "org.hibernate.tool.hbm2ddl.SchemaExport.setManageNamespaces(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.drop(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.create(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.createOnly(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.execute(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.tool.hbm2ddl.SchemaExport$Action, org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.execute(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, org.hibernate.tool.hbm2ddl.SchemaExport$Action, org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.doExecution(org.hibernate.tool.hbm2ddl.SchemaExport$Action, boolean, org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry, org.hibernate.tool.schema.spi.TargetDescriptor)"], ["org.hibernate.tool.schema.spi.TargetDescriptor", "org.hibernate.tool.hbm2ddl.SchemaExport.buildTargetDescriptor(java.util.EnumSet<org.hibernate.tool.schema.TargetType>, java.lang.String, org.hibernate.service.ServiceRegistry)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.perform(org.hibernate.tool.hbm2ddl.SchemaExport$Action, org.hibernate.boot.Metadata, org.hibernate.tool.schema.spi.ScriptTargetOutput)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.main(java.lang.String[])"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExport.execute(org.hibernate.tool.hbm2ddl.SchemaExport$CommandLineArgs)"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.tool.hbm2ddl.SchemaExport.buildMetadataFromMainArgs(java.lang.String[])"], ["java.util.List", "org.hibernate.tool.hbm2ddl.SchemaExport.getExceptions()"], ["org.hibernate.tool.hbm2ddl.SchemaExport$CommandLineArgs", "org.hibernate.tool.hbm2ddl.SchemaExport$CommandLineArgs.parseCommandLineArgs(java.lang.String[])"], ["org.hibernate.tool.hbm2ddl.SchemaValidatorTask", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.addFileset(org.apache.tools.ant.types.FileSet)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.setProperties(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.setConfig(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.setNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.setImplicitNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.setPhysicalNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidatorTask.execute()"], ["org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy[]", "org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy.values()"], ["org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy", "org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy.valueOf(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy", "org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy.byName(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy", "org.hibernate.tool.hbm2ddl.UniqueConstraintSchemaUpdateStrategy.interpret(java.lang.Object)"], ["org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper", "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper(java.util.Properties)"], ["void", "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper.prepare(boolean)"], ["java.sql.Connection", "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper.getConnection()"], ["void", "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper.release()"], ["org.hibernate.tool.hbm2ddl.SchemaUpdate$CommandLineArgs", "org.hibernate.tool.hbm2ddl.SchemaUpdate$CommandLineArgs.parseCommandLineArgs(java.lang.String[])"], ["org.hibernate.tool.hbm2ddl.SchemaExport$Action[]", "org.hibernate.tool.hbm2ddl.SchemaExport$Action.values()"], ["org.hibernate.tool.hbm2ddl.SchemaExport$Action", "org.hibernate.tool.hbm2ddl.SchemaExport$Action.valueOf(java.lang.String)"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExport$Action.doCreate()"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExport$Action.doDrop()"], ["org.hibernate.tool.hbm2ddl.SchemaExport$Action", "org.hibernate.tool.hbm2ddl.SchemaExport$Action.parseCommandLineOption(java.lang.String)"], ["org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractorInitiator", "org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractorInitiator()"], ["org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor", "org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractorInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractorInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.tool.hbm2ddl.SchemaUpdateTask", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.addFileset(org.apache.tools.ant.types.FileSet)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setProperties(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setConfig(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setText(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setQuiet(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setImplicitNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setPhysicalNamingStrategy(java.lang.String)"], ["java.io.File", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.getOutputFile()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setOutputFile(java.io.File)"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.isHaltOnError()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setHaltOnError(boolean)"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.getDelimiter()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.setDelimiter(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaUpdateTask.execute()"], ["org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor", "org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor()"], ["java.lang.String[]", "org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor.extractCommands(java.io.Reader)"], ["org.hibernate.tool.hbm2ddl.SchemaUpdateCommand", "org.hibernate.tool.hbm2ddl.SchemaUpdateCommand(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.SchemaUpdateCommand.getSql()"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaUpdateCommand.isQuiet()"], ["org.hibernate.tool.hbm2ddl.SchemaExport$Type[]", "org.hibernate.tool.hbm2ddl.SchemaExport$Type.values()"], ["org.hibernate.tool.hbm2ddl.SchemaExport$Type", "org.hibernate.tool.hbm2ddl.SchemaExport$Type.valueOf(java.lang.String)"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExport$Type.doCreate()"], ["boolean", "org.hibernate.tool.hbm2ddl.SchemaExport$Type.doDrop()"], ["org.hibernate.tool.hbm2ddl.SchemaValidator", "org.hibernate.tool.hbm2ddl.SchemaValidator()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidator.validate(org.hibernate.boot.Metadata)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidator.validate(org.hibernate.boot.Metadata, org.hibernate.service.ServiceRegistry)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaValidator.main(java.lang.String[])"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.tool.hbm2ddl.SchemaValidator.buildMetadataFromMainArgs(java.lang.String[])"], ["org.hibernate.tool.hbm2ddl.SchemaExportTask", "org.hibernate.tool.hbm2ddl.SchemaExportTask()"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.addFileset(org.apache.tools.ant.types.FileSet)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setProperties(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setConfig(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setQuiet(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setText(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setDrop(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setCreate(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setDelimiter(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setOutput(java.io.File)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setImplicitNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setPhysicalNamingStrategy(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.setHaltonerror(boolean)"], ["void", "org.hibernate.tool.hbm2ddl.SchemaExportTask.execute()"], ["org.hibernate.tool.hbm2ddl.SingleLineSqlCommandExtractor", "org.hibernate.tool.hbm2ddl.SingleLineSqlCommandExtractor()"], ["java.lang.String[]", "org.hibernate.tool.hbm2ddl.SingleLineSqlCommandExtractor.extractCommands(java.io.Reader)"], ["org.hibernate.tool.hbm2ddl.Target[]", "org.hibernate.tool.hbm2ddl.Target.values()"], ["org.hibernate.tool.hbm2ddl.Target", "org.hibernate.tool.hbm2ddl.Target.valueOf(java.lang.String)"], ["boolean", "org.hibernate.tool.hbm2ddl.Target.doExport()"], ["boolean", "org.hibernate.tool.hbm2ddl.Target.doScript()"], ["org.hibernate.tool.hbm2ddl.Target", "org.hibernate.tool.hbm2ddl.Target.interpret(boolean, boolean)"], ["boolean", "org.hibernate.tool.hbm2ddl.ScriptExporter.acceptsImportScripts()"], ["void", "org.hibernate.tool.hbm2ddl.ScriptExporter.export(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.ScriptExporter.release()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata.getName()"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata.getReferencedTableName()"], ["boolean", "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata.matches(org.hibernate.mapping.ForeignKey)"], ["java.lang.String", "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata.toString()"], ["org.hibernate.tool.hbm2ddl.TargetTypeHelper", "org.hibernate.tool.hbm2ddl.TargetTypeHelper()"], ["org.hibernate.tool.hbm2ddl.FileExporter", "org.hibernate.tool.hbm2ddl.FileExporter(java.lang.String)"], ["boolean", "org.hibernate.tool.hbm2ddl.FileExporter.acceptsImportScripts()"], ["void", "org.hibernate.tool.hbm2ddl.FileExporter.export(java.lang.String)"], ["void", "org.hibernate.tool.hbm2ddl.FileExporter.release()"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$2.accept(java.io.File)"], ["java.lang.ClassLoader", "org.hibernate.tool.enhance.EnhancementTask$1.getLoadingClassLoader()"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$1.doBiDirectionalAssociationManagement(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$1.doDirtyCheckingInline(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$1.hasLazyLoadableAttributes(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$1.isLazyLoadable(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$1.doExtendedEnhancement(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["org.hibernate.tool.enhance.EnhancementTask", "org.hibernate.tool.enhance.EnhancementTask()"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setBase(java.lang.String)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setDir(java.lang.String)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setFailOnError(boolean)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setEnableLazyInitialization(boolean)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setEnableDirtyTracking(boolean)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setEnableAssociationManagement(boolean)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.setEnableExtendedEnhancement(boolean)"], ["void", "org.hibernate.tool.enhance.EnhancementTask.execute()"], ["boolean", "org.hibernate.tool.enhance.EnhancementTask$3.accept(java.io.File)"], ["default", "org.hibernate.metamodel.model.domain.BasicDomainType.javax.persistence.metamodel.Type$PersistenceType getPersistenceType()"], ["default", "org.hibernate.metamodel.model.domain.BasicDomainType.boolean areEqual(J, J)"], ["default", "org.hibernate.metamodel.model.domain.PersistentAttribute.javax.persistence.metamodel.ManagedType getDeclaringType()"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.metamodel.model.domain.NavigableRole(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.metamodel.model.domain.NavigableRole(java.lang.String)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.metamodel.model.domain.NavigableRole()"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.metamodel.model.domain.NavigableRole.append(java.lang.String)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.metamodel.model.domain.NavigableRole.getParent()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.NavigableRole.getNavigableName()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.NavigableRole.getFullPath()"], ["boolean", "org.hibernate.metamodel.model.domain.NavigableRole.isRoot()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.NavigableRole.toString()"], ["boolean", "org.hibernate.metamodel.model.domain.NavigableRole.equals(java.lang.Object)"], ["int", "org.hibernate.metamodel.model.domain.NavigableRole.hashCode()"], ["<E> javax.persistence.metamodel.CollectionAttribute<J, E>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredCollection(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.SetAttribute<? super J, E>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getSet(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.SetAttribute<J, E>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredSet(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.ListAttribute<? super J, E>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getList(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.ListAttribute<J, E>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredList(java.lang.String, java.lang.Class<E>)"], ["<K, V> javax.persistence.metamodel.MapAttribute<? super J, K, V>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getMap(java.lang.String, java.lang.Class<K>, java.lang.Class<V>)"], ["<K, V> javax.persistence.metamodel.MapAttribute<J, K, V>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredMap(java.lang.String, java.lang.Class<K>, java.lang.Class<V>)"], ["javax.persistence.metamodel.SingularAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getSingularAttribute(java.lang.String)"], ["javax.persistence.metamodel.SingularAttribute<J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredSingularAttribute(java.lang.String)"], ["javax.persistence.metamodel.CollectionAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getCollection(java.lang.String)"], ["javax.persistence.metamodel.CollectionAttribute<J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredCollection(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.SetPersistentAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getSet(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.SetPersistentAttribute<J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredSet(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.ListPersistentAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getList(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.ListPersistentAttribute<J, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredList(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.MapPersistentAttribute<? super J, ?, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getMap(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.MapPersistentAttribute<J, ?, ?>", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.getDeclaredMap(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.MapAttribute getDeclaredMap(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.MapAttribute getMap(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.ListAttribute getDeclaredList(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.ListAttribute getList(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.SetAttribute getDeclaredSet(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.SetAttribute getSet(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.Attribute getDeclaredAttribute(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.Attribute getAttribute(java.lang.String)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.CollectionAttribute getCollection(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.SingularAttribute getDeclaredSingularAttribute(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor.javax.persistence.metamodel.SingularAttribute getSingularAttribute(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor.org.hibernate.metamodel.model.domain.SimpleDomainType getKeyGraphType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor.org.hibernate.metamodel.model.domain.SimpleDomainType getValueGraphType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor.org.hibernate.metamodel.model.domain.ManagedDomainType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor.javax.persistence.metamodel.ManagedType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute.javax.persistence.metamodel.Type getType()"], ["default", "org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute.javax.persistence.metamodel.ManagedType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute.org.hibernate.metamodel.model.domain.SimpleDomainType getValueGraphType()"], ["default", "org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute.org.hibernate.metamodel.model.domain.ManagedDomainType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute.javax.persistence.metamodel.Type getElementType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute.javax.persistence.metamodel.ManagedType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute.org.hibernate.metamodel.model.domain.SimpleDomainType getValueGraphType()"], ["default", "org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute.org.hibernate.metamodel.model.domain.ManagedDomainType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.MapPersistentAttribute.javax.persistence.metamodel.Type getKeyType()"], ["org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super J>", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.getSupertype()"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.Type getIdType()"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.IdentifiableType getSupertype()"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.SingularAttribute getDeclaredVersion(java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.SingularAttribute getVersion(java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.SingularAttribute getDeclaredId(java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.javax.persistence.metamodel.SingularAttribute getId(java.lang.Class)"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor$InFlightAccess getInFlightAccess()"], ["default", "org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor.org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor getSuperType()"], ["org.hibernate.metamodel.model.domain.spi.DomainModelHelper", "org.hibernate.metamodel.model.domain.spi.DomainModelHelper()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.metamodel.model.domain.spi.DomainModelHelper.resolveEntityPersister(org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<?>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["<T, S extends T> org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>", "org.hibernate.metamodel.model.domain.spi.DomainModelHelper.resolveSubType(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<T>, java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["<S> org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>", "org.hibernate.metamodel.model.domain.spi.DomainModelHelper.resolveSubType(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<? super S>, java.lang.Class<S>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["default", "org.hibernate.metamodel.model.domain.spi.BagPersistentAttribute.javax.persistence.metamodel.Type getElementType()"], ["default", "org.hibernate.metamodel.model.domain.spi.BagPersistentAttribute.javax.persistence.metamodel.ManagedType getDeclaringType()"], ["default", "org.hibernate.metamodel.model.domain.spi.BagPersistentAttribute.org.hibernate.metamodel.model.domain.SimpleDomainType getValueGraphType()"], ["default", "org.hibernate.metamodel.model.domain.spi.BagPersistentAttribute.org.hibernate.metamodel.model.domain.ManagedDomainType getDeclaringType()"], ["org.hibernate.metamodel.model.domain.internal.SetAttributeImpl", "org.hibernate.metamodel.model.domain.internal.SetAttributeImpl(org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder<X, java.util.Set<E>, E, ?>)"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.model.domain.internal.SetAttributeImpl.getCollectionType()"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType$InFlightAccessImpl.addAttribute(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<J, ?>)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType$InFlightAccessImpl.finishUp()"], ["java.lang.Object", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$DelayedKeyTypeAccess.get()"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.model.domain.internal.BagAttributeImpl.getCollectionType()"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.model.domain.internal.MapAttributeImpl.getCollectionType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.MapAttributeImpl.getKeyGraphType()"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.MapAttributeImpl.getKeyType()"], ["org.hibernate.metamodel.model.domain.internal.MappedSuperclassTypeImpl", "org.hibernate.metamodel.model.domain.internal.MappedSuperclassTypeImpl(java.lang.Class<X>, org.hibernate.mapping.MappedSuperclass, org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super X>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["javax.persistence.metamodel.Type$PersistenceType", "org.hibernate.metamodel.model.domain.internal.MappedSuperclassTypeImpl.getPersistenceType()"], ["<S extends X> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.metamodel.model.domain.internal.MappedSuperclassTypeImpl.makeSubGraph(java.lang.Class<S>)"], ["javax.persistence.metamodel.Type$PersistenceType", "org.hibernate.metamodel.model.domain.internal.BasicTypeImpl.getPersistenceType()"], ["org.hibernate.metamodel.model.domain.internal.BasicTypeImpl", "org.hibernate.metamodel.model.domain.internal.BasicTypeImpl(java.lang.Class<J>, javax.persistence.metamodel.Type$PersistenceType)"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.BasicTypeImpl.getTypeName()"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType$InFlightAccessImpl.applyIdAttribute(org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<J, ?>)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType$InFlightAccessImpl.applyIdClassAttributes(java.util.Set<org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, ?>>)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType$InFlightAccessImpl.applyVersionAttribute(org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<J, ?>)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType$InFlightAccessImpl.addAttribute(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType$InFlightAccessImpl.finishUp()"], ["org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<D>, java.lang.String, javax.persistence.metamodel.Attribute$PersistentAttributeType, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<J>, java.lang.reflect.Member, boolean, boolean, boolean)"], ["boolean", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.isId()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.isVersion()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.isOptional()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.isAssociation()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.isCollection()"], ["javax.persistence.metamodel.Bindable$BindableType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.getBindableType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.getKeyGraphType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.getValueGraphType()"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl.getType()"], ["org.hibernate.metamodel.model.domain.internal.EmbeddableTypeImpl", "org.hibernate.metamodel.model.domain.internal.EmbeddableTypeImpl(java.lang.Class<J>, org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<?>, org.hibernate.type.ComponentType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["javax.persistence.metamodel.Type$PersistenceType", "org.hibernate.metamodel.model.domain.internal.EmbeddableTypeImpl.getPersistenceType()"], ["org.hibernate.type.ComponentType", "org.hibernate.metamodel.model.domain.internal.EmbeddableTypeImpl.getHibernateType()"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.metamodel.model.domain.internal.EmbeddableTypeImpl.makeSubGraph(java.lang.Class<S>)"], ["org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Version", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Version(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<X>, java.lang.String, javax.persistence.metamodel.Attribute$PersistentAttributeType, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<Y>, java.lang.reflect.Member)"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Version.getType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Version.getKeyGraphType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Version.getValueGraphType()"], ["org.hibernate.metamodel.model.domain.internal.EntityTypeImpl", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl(java.lang.Class, org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super J>, org.hibernate.mapping.PersistentClass, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.getName()"], ["javax.persistence.metamodel.Bindable$BindableType", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.getBindableType()"], ["javax.persistence.metamodel.Type$PersistenceType", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.getPersistenceType()"], ["org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super J>", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.getSuperType()"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.makeSubGraph(java.lang.Class<S>)"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.toString()"], ["org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor", "org.hibernate.metamodel.model.domain.internal.EntityTypeImpl.getSuperType()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.AbstractType.getTypeName()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getName()"], ["org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<? super J>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSuperType()"], ["java.util.Set<javax.persistence.metamodel.Attribute<? super J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttributes()"], ["java.util.Set<javax.persistence.metamodel.Attribute<J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredAttributes()"], ["org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.findDeclaredAttribute(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.findAttribute(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredAttribute(java.lang.String)"], ["java.util.Set<javax.persistence.metamodel.SingularAttribute<? super J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSingularAttributes()"], ["java.util.Set<javax.persistence.metamodel.SingularAttribute<J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSingularAttributes()"], ["javax.persistence.metamodel.SingularAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSingularAttribute(java.lang.String)"], ["javax.persistence.metamodel.SingularAttribute<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSingularAttribute(java.lang.String)"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSingularAttribute(java.lang.String, java.lang.Class<Y>)"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSingularAttribute(java.lang.String, java.lang.Class<Y>)"], ["java.util.Set<javax.persistence.metamodel.PluralAttribute<? super J, ?, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getPluralAttributes()"], ["java.util.Set<javax.persistence.metamodel.PluralAttribute<J, ?, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredPluralAttributes()"], ["javax.persistence.metamodel.CollectionAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getCollection(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute<? super J, ?, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getPluralAttribute(java.lang.String)"], ["javax.persistence.metamodel.CollectionAttribute<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredCollection(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.SetPersistentAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSet(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.SetPersistentAttribute<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSet(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.ListPersistentAttribute<? super J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getList(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.ListPersistentAttribute<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredList(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.MapPersistentAttribute<? super J, ?, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getMap(java.lang.String)"], ["org.hibernate.metamodel.model.domain.spi.MapPersistentAttribute<J, ?, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredMap(java.lang.String)"], ["<E> org.hibernate.metamodel.model.domain.spi.BagPersistentAttribute<? super J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getCollection(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.CollectionAttribute<J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredCollection(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.SetAttribute<? super J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSet(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.SetAttribute<J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSet(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.ListAttribute<? super J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getList(java.lang.String, java.lang.Class<E>)"], ["<E> javax.persistence.metamodel.ListAttribute<J, E>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredList(java.lang.String, java.lang.Class<E>)"], ["<K, V> javax.persistence.metamodel.MapAttribute<? super J, K, V>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getMap(java.lang.String, java.lang.Class<K>, java.lang.Class<V>)"], ["<K, V> javax.persistence.metamodel.MapAttribute<J, K, V>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredMap(java.lang.String, java.lang.Class<K>, java.lang.Class<V>)"], ["<S extends J> org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.findSubType(java.lang.String)"], ["<S extends J> org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.findSubType(java.lang.Class<S>)"], ["javax.persistence.metamodel.MapAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredMap(java.lang.String)"], ["javax.persistence.metamodel.MapAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getMap(java.lang.String)"], ["javax.persistence.metamodel.ListAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredList(java.lang.String)"], ["javax.persistence.metamodel.ListAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getList(java.lang.String)"], ["javax.persistence.metamodel.SetAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSet(java.lang.String)"], ["javax.persistence.metamodel.SetAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSet(java.lang.String)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredAttribute(java.lang.String)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(java.lang.String)"], ["javax.persistence.metamodel.CollectionAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getCollection(java.lang.String, java.lang.Class)"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getDeclaredSingularAttribute(java.lang.String, java.lang.Class)"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getSingularAttribute(java.lang.String, java.lang.Class)"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.model.domain.internal.ListAttributeImpl.getCollectionType()"], ["org.hibernate.metamodel.model.domain.internal.MapMember", "org.hibernate.metamodel.model.domain.internal.MapMember(java.lang.String, java.lang.Class<?>)"], ["int", "org.hibernate.metamodel.model.domain.internal.MapMember.getModifiers()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.MapMember.isSynthetic()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.MapMember.getName()"], ["org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType(java.lang.Class<J>, java.lang.String, org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super J>, boolean, boolean, boolean, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.hasIdClass()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.hasSingleIdAttribute()"], ["org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<? super J>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getSuperType()"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getId(java.lang.Class<Y>)"], ["org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.locateIdAttribute()"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getDeclaredId(java.lang.Class<Y>)"], ["java.util.Set<org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getIdClassAttributesSafely()"], ["java.util.Set<javax.persistence.metamodel.SingularAttribute<? super J, ?>>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getIdClassAttributes()"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.collectIdClassAttributes(java.util.Set<org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, ?>>)"], ["void", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.visitIdClassAttributes(java.util.function.Consumer<org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, ?>>)"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.hasVersionAttribute()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.hasDeclaredVersionAttribute()"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<? super J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getVersion(java.lang.Class<Y>)"], ["org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.locateVersionAttribute()"], ["<Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<J, Y>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getDeclaredVersion(java.lang.Class<Y>)"], ["javax.persistence.metamodel.SingularAttribute<J, ?>", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getDeclaredVersion()"], ["org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor$InFlightAccess", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getInFlightAccess()"], ["org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getSuperType()"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getIdType()"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getDeclaredVersion(java.lang.Class)"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getVersion(java.lang.Class)"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getDeclaredId(java.lang.Class)"], ["javax.persistence.metamodel.SingularAttribute", "org.hibernate.metamodel.model.domain.internal.AbstractIdentifiableType.getId(java.lang.Class)"], ["<X, C, E, K> org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder<X, C, E, K>", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.create(org.hibernate.metamodel.model.domain.internal.AbstractManagedType<X>, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<E>, java.lang.Class<C>, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<K>)"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.isAssociation()"], ["boolean", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.isCollection()"], ["javax.persistence.metamodel.Bindable$BindableType", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.getBindableType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.getKeyGraphType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.getValueGraphType()"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute.getElementType()"], ["org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<D>, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<E>, java.lang.Class<C>, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<K>)"], ["javax.persistence.metamodel.Attribute$PersistentAttributeType", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.getAttributeNature()"], ["org.hibernate.mapping.Property", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.getProperty()"], ["java.lang.reflect.Member", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.getMember()"], ["org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder<D, C, E, K>", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.member(java.lang.reflect.Member)"], ["org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder<D, C, E, K>", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.property(org.hibernate.mapping.Property)"], ["org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder<D, C, E, K>", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.persistentAttributeType(javax.persistence.metamodel.Attribute$PersistentAttributeType)"], ["org.hibernate.metamodel.model.domain.internal.AbstractPluralAttribute<D, C, E>", "org.hibernate.metamodel.model.domain.internal.PluralAttributeBuilder.build()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getName()"], ["java.lang.reflect.Member", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getJavaMember()"], ["javax.persistence.metamodel.Attribute$PersistentAttributeType", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getPersistentAttributeType()"], ["java.lang.String", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.toString()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getValueGraphType()"], ["org.hibernate.metamodel.model.domain.ManagedDomainType", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getDeclaringType()"], ["javax.persistence.metamodel.ManagedType", "org.hibernate.metamodel.model.domain.internal.AbstractAttribute.getDeclaringType()"], ["org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Identifier", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Identifier(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<D>, java.lang.String, org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<J>, java.lang.reflect.Member, javax.persistence.metamodel.Attribute$PersistentAttributeType)"], ["javax.persistence.metamodel.Type", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Identifier.getType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Identifier.getKeyGraphType()"], ["org.hibernate.metamodel.model.domain.SimpleDomainType", "org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl$Identifier.getValueGraphType()"], ["org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl", "org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl(org.hibernate.resource.beans.spi.ManagedBean<javax.persistence.AttributeConverter<O, R>>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<javax.persistence.AttributeConverter<O, R>>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<O>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<R>)"], ["org.hibernate.resource.beans.spi.ManagedBean<javax.persistence.AttributeConverter<O, R>>", "org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl.getConverterBean()"], ["O", "org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl.toDomainValue(R)"], ["R", "org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl.toRelationalValue(O)"], ["org.hibernate.type.descriptor.java.JavaTypeDescriptor<javax.persistence.AttributeConverter<O, R>>", "org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl.getConverterJavaTypeDescriptor()"], ["org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter(org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor<E>)"], ["E", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.toDomainValue(java.lang.Integer)"], ["java.lang.Integer", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.toRelationalValue(E)"], ["int", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.getJdbcTypeCode()"], ["E", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.readValue(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.writeValue(java.sql.PreparedStatement, E, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.toSqlLiteral(java.lang.Object)"], ["java.lang.Object", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.toRelationalValue(java.lang.Object)"], ["java.lang.Object", "org.hibernate.metamodel.model.convert.internal.OrdinalEnumValueConverter.toDomainValue(java.lang.Object)"], ["O", "org.hibernate.metamodel.model.convert.internal.StandardBasicValueConverter.toDomainValue(R)"], ["R", "org.hibernate.metamodel.model.convert.internal.StandardBasicValueConverter.toRelationalValue(O)"], ["org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter(org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor<E>)"], ["E", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.toDomainValue(java.lang.String)"], ["java.lang.String", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.toRelationalValue(E)"], ["int", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.getJdbcTypeCode()"], ["E", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.readValue(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.writeValue(java.sql.PreparedStatement, E, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.toSqlLiteral(java.lang.Object)"], ["java.lang.Object", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.toRelationalValue(java.lang.Object)"], ["java.lang.Object", "org.hibernate.metamodel.model.convert.internal.NamedEnumValueConverter.toDomainValue(java.lang.Object)"], ["<T> java.util.List<javax.persistence.EntityGraph<? super T>>", "org.hibernate.metamodel.spi.MetamodelImplementor.findEntityGraphsByType(java.lang.Class<T>)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor getEntityTypeByName(java.lang.String)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.javax.persistence.metamodel.EntityType entity(java.lang.String)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.javax.persistence.metamodel.EntityType getEntityTypeByName(java.lang.String)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.org.hibernate.SessionFactory getSessionFactory()"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.javax.persistence.metamodel.EmbeddableType embeddable(java.lang.Class)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.javax.persistence.metamodel.ManagedType managedType(java.lang.Class)"], ["default", "org.hibernate.metamodel.spi.MetamodelImplementor.javax.persistence.metamodel.EntityType entity(java.lang.Class)"], ["org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting[]", "org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting.values()"], ["org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting.valueOf(java.lang.String)"], ["org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting.parse(java.lang.String)"], ["org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting.determineJpaMetaModelPopulationSetting(java.util.Map)"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext", "org.hibernate.metamodel.internal.AttributeFactory$SingularAttributeMetadataImpl.getValueContext()"], ["org.hibernate.metamodel.internal.MetadataContext", "org.hibernate.metamodel.internal.MetadataContext(org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Set<org.hibernate.mapping.MappedSuperclass>, org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting)"], ["java.util.Map<java.lang.Class<?>, org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<?>>", "org.hibernate.metamodel.internal.MetadataContext.getEntityTypeMap()"], ["java.util.Map<java.lang.Class<?>, javax.persistence.metamodel.MappedSuperclassType<?>>", "org.hibernate.metamodel.internal.MetadataContext.getMappedSuperclassTypeMap()"], ["<E> org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<E>", "org.hibernate.metamodel.internal.MetadataContext.locateEntityType(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<?>>", "org.hibernate.metamodel.internal.MetadataContext.getEntityTypesByEntityName()"], ["void", "org.hibernate.metamodel.internal.MetadataContext.wrapUp()"], ["void", "org.hibernate.metamodel.internal.MetadataContext.pushEntityWorkedOn(org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.metamodel.internal.MetadataContext.popEntityWorkedOn(org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.metamodel.internal.MetadataContext.getPersistentClassHostingProperties(org.hibernate.metamodel.model.domain.internal.MappedSuperclassTypeImpl<?>)"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$4.resolveMember(org.hibernate.metamodel.internal.AttributeFactory$AttributeContext)"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$5.resolveMember(org.hibernate.metamodel.internal.AttributeFactory$AttributeContext)"], ["org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting[]", "org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting.values()"], ["org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting.valueOf(java.lang.String)"], ["org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting.parse(java.lang.String)"], ["org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting", "org.hibernate.metamodel.internal.JpaStaticMetaModelPopulationSetting.determineJpaMetaModelPopulationSetting(java.util.Map)"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$6.resolveMember(org.hibernate.metamodel.internal.AttributeFactory$AttributeContext)"], ["org.hibernate.mapping.Value", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$2.getHibernateValue()"], ["java.lang.Class", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$2.getJpaBindableType()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$2.getValueClassification()"], ["org.hibernate.metamodel.internal.AttributeFactory$AttributeMetadata", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$2.getAttributeMetadata()"], ["java.lang.String", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.getName()"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.getMember()"], ["java.lang.String", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.getMemberDescription()"], ["java.lang.String", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.determineMemberDescription(java.lang.reflect.Member)"], ["javax.persistence.metamodel.Attribute$PersistentAttributeType", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.getJpaAttributeNature()"], ["boolean", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.isPlural()"], ["org.hibernate.mapping.Property", "org.hibernate.metamodel.internal.AttributeFactory$BaseAttributeMetadata.getPropertyMapping()"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$3.resolveMember(org.hibernate.metamodel.internal.AttributeFactory$AttributeContext)"], ["java.lang.reflect.Member", "org.hibernate.metamodel.internal.AttributeFactory$2.resolveMember(org.hibernate.metamodel.internal.AttributeFactory$AttributeContext)"], ["org.hibernate.mapping.Value", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$1.getHibernateValue()"], ["java.lang.Class", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$1.getJpaBindableType()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$1.getValueClassification()"], ["org.hibernate.metamodel.internal.AttributeFactory$AttributeMetadata", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl$1.getAttributeMetadata()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification[]", "org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification.values()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification", "org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification.valueOf(java.lang.String)"], ["org.hibernate.metamodel.internal.AttributeFactory", "org.hibernate.metamodel.internal.AttributeFactory(org.hibernate.metamodel.internal.MetadataContext)"], ["<X, Y> org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<X, Y>", "org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<X>, org.hibernate.mapping.Property)"], ["<X, Y> org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute<X, Y>", "org.hibernate.metamodel.internal.AttributeFactory.buildIdAttribute(org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<X>, org.hibernate.mapping.Property)"], ["<X, Y> org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl<X, Y>", "org.hibernate.metamodel.internal.AttributeFactory.buildVersionAttribute(org.hibernate.metamodel.model.domain.spi.IdentifiableTypeDescriptor<X>, org.hibernate.mapping.Property)"], ["javax.persistence.metamodel.Attribute$PersistentAttributeType", "org.hibernate.metamodel.internal.AttributeFactory.determineSingularAssociationAttributeType(java.lang.reflect.Member)"], ["java.lang.reflect.ParameterizedType", "org.hibernate.metamodel.internal.AttributeFactory.getSignatureType(java.lang.reflect.Member)"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.internal.AttributeFactory.determineCollectionType(java.lang.Class)"], ["boolean", "org.hibernate.metamodel.internal.AttributeFactory.isManyToMany(java.lang.reflect.Member)"], ["org.hibernate.mapping.Property", "org.hibernate.metamodel.internal.AttributeFactory$1.getPropertyMapping()"], ["org.hibernate.mapping.Value", "org.hibernate.metamodel.internal.AttributeFactory$SingularAttributeMetadataImpl$1.getHibernateValue()"], ["java.lang.Class", "org.hibernate.metamodel.internal.AttributeFactory$SingularAttributeMetadataImpl$1.getJpaBindableType()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext$ValueClassification", "org.hibernate.metamodel.internal.AttributeFactory$SingularAttributeMetadataImpl$1.getValueClassification()"], ["org.hibernate.metamodel.internal.AttributeFactory$AttributeMetadata", "org.hibernate.metamodel.internal.AttributeFactory$SingularAttributeMetadataImpl$1.getAttributeMetadata()"], ["org.hibernate.metamodel.internal.MetamodelImpl", "org.hibernate.metamodel.internal.MetamodelImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.type.spi.TypeConfiguration)"], ["void", "org.hibernate.metamodel.internal.MetamodelImpl.initialize(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.metamodel.internal.JpaMetaModelPopulationSetting)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.metamodel.internal.MetamodelImpl.getTypeConfiguration()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.metamodel.internal.MetamodelImpl.getSessionFactory()"], ["<X> org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<X>", "org.hibernate.metamodel.internal.MetamodelImpl.entity(java.lang.Class<X>)"], ["<X> org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<X>", "org.hibernate.metamodel.internal.MetamodelImpl.managedType(java.lang.Class<X>)"], ["<X> org.hibernate.metamodel.model.domain.spi.EmbeddedTypeDescriptor<X>", "org.hibernate.metamodel.internal.MetamodelImpl.embeddable(java.lang.Class<X>)"], ["<X> org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<X>", "org.hibernate.metamodel.internal.MetamodelImpl.entity(java.lang.String)"], ["java.lang.String", "org.hibernate.metamodel.internal.MetamodelImpl.getImportedClassName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.metamodel.internal.MetamodelImpl.getImplementors(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.entity.EntityPersister>", "org.hibernate.metamodel.internal.MetamodelImpl.entityPersisters()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.metamodel.internal.MetamodelImpl.collectionPersister(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.collection.CollectionPersister>", "org.hibernate.metamodel.internal.MetamodelImpl.collectionPersisters()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.metamodel.internal.MetamodelImpl.entityPersister(java.lang.Class)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.metamodel.internal.MetamodelImpl.entityPersister(java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.metamodel.internal.MetamodelImpl.locateEntityPersister(java.lang.Class)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.metamodel.internal.MetamodelImpl.locateEntityPersister(java.lang.String)"], ["java.lang.String[]", "org.hibernate.metamodel.internal.MetamodelImpl.getAllEntityNames()"], ["java.lang.String[]", "org.hibernate.metamodel.internal.MetamodelImpl.getAllCollectionRoles()"], ["<T> void", "org.hibernate.metamodel.internal.MetamodelImpl.addNamedEntityGraph(java.lang.String, org.hibernate.graph.spi.RootGraphImplementor<T>)"], ["<T> void", "org.hibernate.metamodel.internal.MetamodelImpl.addNamedEntityGraph(java.lang.String, javax.persistence.EntityGraph<T>)"], ["<T> org.hibernate.graph.spi.RootGraphImplementor<T>", "org.hibernate.metamodel.internal.MetamodelImpl.findEntityGraphByName(java.lang.String)"], ["<T> java.util.List<org.hibernate.graph.spi.RootGraphImplementor<? super T>>", "org.hibernate.metamodel.internal.MetamodelImpl.findEntityGraphsByJavaType(java.lang.Class<T>)"], ["void", "org.hibernate.metamodel.internal.MetamodelImpl.close()"], ["javax.persistence.metamodel.EntityType", "org.hibernate.metamodel.internal.MetamodelImpl.entity(java.lang.String)"], ["org.hibernate.SessionFactory", "org.hibernate.metamodel.internal.MetamodelImpl.getSessionFactory()"], ["javax.persistence.metamodel.EmbeddableType", "org.hibernate.metamodel.internal.MetamodelImpl.embeddable(java.lang.Class)"], ["javax.persistence.metamodel.ManagedType", "org.hibernate.metamodel.internal.MetamodelImpl.managedType(java.lang.Class)"], ["javax.persistence.metamodel.EntityType", "org.hibernate.metamodel.internal.MetamodelImpl.entity(java.lang.Class)"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl.getElementValueContext()"], ["javax.persistence.metamodel.PluralAttribute$CollectionType", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl.getAttributeCollectionType()"], ["org.hibernate.metamodel.internal.AttributeFactory$ValueContext", "org.hibernate.metamodel.internal.AttributeFactory$PluralAttributeMetadataImpl.getMapKeyValueContext()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.metamodel.internal.MetamodelImpl$1.getSessionFactory()"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.metamodel.internal.MetamodelImpl$1.getMetadata()"], ["default", "org.hibernate.SharedSessionContract.org.hibernate.Query createQuery(java.lang.String)"], ["default", "org.hibernate.SharedSessionContract.org.hibernate.Query getNamedQuery(java.lang.String)"], ["org.hibernate.StaleStateException", "org.hibernate.StaleStateException(java.lang.String)"], ["org.hibernate.ObjectNotFoundException", "org.hibernate.ObjectNotFoundException(java.io.Serializable, java.lang.String)"], ["org.hibernate.PropertySetterAccessException", "org.hibernate.PropertySetterAccessException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.Class, java.lang.Object, java.lang.Object)"], ["java.lang.String", "org.hibernate.PropertySetterAccessException.toString()"], ["void", "org.hibernate.Hibernate.initialize(java.lang.Object)"], ["boolean", "org.hibernate.Hibernate.isInitialized(java.lang.Object)"], ["java.lang.Class", "org.hibernate.Hibernate.getClass(java.lang.Object)"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.Hibernate.getLobCreator(org.hibernate.Session)"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.Hibernate.getLobCreator(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.Hibernate.getLobCreator(org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.Hibernate.close(java.util.Iterator)"], ["boolean", "org.hibernate.Hibernate.isPropertyInitialized(java.lang.Object, java.lang.String)"], ["java.lang.Object", "org.hibernate.Hibernate.unproxy(java.lang.Object)"], ["<T> T", "org.hibernate.Hibernate.unproxy(T, java.lang.Class<T>)"], ["org.hibernate.PropertyNotFoundException", "org.hibernate.PropertyNotFoundException(java.lang.String)"], ["org.hibernate.QueryParameterException", "org.hibernate.QueryParameterException(java.lang.String)"], ["org.hibernate.QueryParameterException", "org.hibernate.QueryParameterException(java.lang.String, java.lang.String, java.lang.Exception)"], ["java.lang.String", "org.hibernate.boot.xsd.XsdDescriptor.getLocalResourceName()"], ["java.lang.String", "org.hibernate.boot.xsd.XsdDescriptor.getNamespaceUri()"], ["java.lang.String", "org.hibernate.boot.xsd.XsdDescriptor.getVersion()"], ["javax.xml.validation.Schema", "org.hibernate.boot.xsd.XsdDescriptor.getSchema()"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.MappingXsdSupport.latestJpaDescriptor()"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.MappingXsdSupport.jpaXsd(java.lang.String)"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.MappingXsdSupport.hbmXsd()"], ["org.hibernate.boot.xsd.LocalXsdResolver", "org.hibernate.boot.xsd.LocalXsdResolver()"], ["java.lang.String", "org.hibernate.boot.xsd.LocalXsdResolver.latestJpaVerison()"], ["boolean", "org.hibernate.boot.xsd.LocalXsdResolver.isValidJpaVersion(java.lang.String)"], ["java.net.URL", "org.hibernate.boot.xsd.LocalXsdResolver.resolveLocalXsdUrl(java.lang.String)"], ["javax.xml.validation.Schema", "org.hibernate.boot.xsd.LocalXsdResolver.resolveLocalXsdSchema(java.lang.String)"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.LocalXsdResolver.buildXsdDescriptor(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.boot.xsd.ConfigXsdSupport", "org.hibernate.boot.xsd.ConfigXsdSupport()"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.ConfigXsdSupport.latestJpaDescriptor()"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.ConfigXsdSupport.jpaXsd(java.lang.String)"], ["org.hibernate.boot.xsd.XsdDescriptor", "org.hibernate.boot.xsd.ConfigXsdSupport.cfgXsd()"], ["org.hibernate.boot.JaccPermissionDefinition", "org.hibernate.boot.JaccPermissionDefinition(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["int", "org.hibernate.boot.model.naming.NamingHelper$1.compare(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["int", "org.hibernate.boot.model.naming.NamingHelper$1.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl.determineBasicColumnName(org.hibernate.boot.model.naming.ImplicitBasicColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl.determineJoinColumnName(org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl.determineJoinTableName(org.hibernate.boot.model.naming.ImplicitJoinTableNameSource)"], ["int", "org.hibernate.boot.model.naming.NamingHelper$2.compare(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["int", "org.hibernate.boot.model.naming.NamingHelper$2.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.Identifier.toIdentifier(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.Identifier.toIdentifier(java.lang.String, boolean)"], ["boolean", "org.hibernate.boot.model.naming.Identifier.isQuoted(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.Identifier(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.boot.model.naming.Identifier.getText()"], ["boolean", "org.hibernate.boot.model.naming.Identifier.isQuoted()"], ["java.lang.String", "org.hibernate.boot.model.naming.Identifier.render(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.boot.model.naming.Identifier.render()"], ["java.lang.String", "org.hibernate.boot.model.naming.Identifier.getCanonicalName()"], ["java.lang.String", "org.hibernate.boot.model.naming.Identifier.toString()"], ["boolean", "org.hibernate.boot.model.naming.Identifier.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.naming.Identifier.hashCode()"], ["boolean", "org.hibernate.boot.model.naming.Identifier.areEqual(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.Identifier.quote(org.hibernate.boot.model.naming.Identifier)"], ["int", "org.hibernate.boot.model.naming.Identifier.compareTo(org.hibernate.boot.model.naming.Identifier)"], ["int", "org.hibernate.boot.model.naming.Identifier.compareTo(java.lang.Object)"], ["org.hibernate.boot.model.naming.ObjectNameNormalizer", "org.hibernate.boot.model.naming.ObjectNameNormalizer()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ObjectNameNormalizer.normalizeIdentifierQuoting(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ObjectNameNormalizer.normalizeIdentifierQuoting(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.boot.model.naming.ObjectNameNormalizer.normalizeIdentifierQuotingAsString(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.naming.ObjectNameNormalizer.toDatabaseIdentifierText(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ObjectNameNormalizer.determineLogicalName(java.lang.String, org.hibernate.boot.model.naming.NamingStrategyHelper)"], ["java.lang.String", "org.hibernate.boot.model.naming.ObjectNameNormalizer.applyGlobalQuoting(java.lang.String)"], ["org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl.toPhysicalCatalogName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl.toPhysicalSchemaName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl.toPhysicalTableName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl.toPhysicalSequenceName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl.toPhysicalColumnName(org.hibernate.boot.model.naming.Identifier, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determinePrimaryTableName(org.hibernate.boot.model.naming.ImplicitEntityNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineJoinTableName(org.hibernate.boot.model.naming.ImplicitJoinTableNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineCollectionTableName(org.hibernate.boot.model.naming.ImplicitCollectionTableNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineIdentifierColumnName(org.hibernate.boot.model.naming.ImplicitIdentifierColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineDiscriminatorColumnName(org.hibernate.boot.model.naming.ImplicitDiscriminatorColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineTenantIdColumnName(org.hibernate.boot.model.naming.ImplicitTenantIdColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineBasicColumnName(org.hibernate.boot.model.naming.ImplicitBasicColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineJoinColumnName(org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determinePrimaryKeyJoinColumnName(org.hibernate.boot.model.naming.ImplicitPrimaryKeyJoinColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineAnyDiscriminatorColumnName(org.hibernate.boot.model.naming.ImplicitAnyDiscriminatorColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineAnyKeyColumnName(org.hibernate.boot.model.naming.ImplicitAnyKeyColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineMapKeyColumnName(org.hibernate.boot.model.naming.ImplicitMapKeyColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineListIndexColumnName(org.hibernate.boot.model.naming.ImplicitIndexColumnNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineForeignKeyName(org.hibernate.boot.model.naming.ImplicitForeignKeyNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineUniqueKeyName(org.hibernate.boot.model.naming.ImplicitUniqueKeyNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl.determineIndexName(org.hibernate.boot.model.naming.ImplicitIndexNameSource)"], ["org.hibernate.boot.model.naming.DatabaseIdentifier", "org.hibernate.boot.model.naming.DatabaseIdentifier.toIdentifier(java.lang.String)"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl.determineCollectionTableName(org.hibernate.boot.model.naming.ImplicitCollectionTableNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl.determineJoinTableName(org.hibernate.boot.model.naming.ImplicitJoinTableNameSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl.determineJoinColumnName(org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource)"], ["org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature[]", "org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature.values()"], ["org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature", "org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature.valueOf(java.lang.String)"], ["org.hibernate.boot.model.naming.NamingHelper", "org.hibernate.boot.model.naming.NamingHelper.withCharset(java.lang.String)"], ["org.hibernate.boot.model.naming.NamingHelper", "org.hibernate.boot.model.naming.NamingHelper()"], ["java.lang.String", "org.hibernate.boot.model.naming.NamingHelper.generateHashedFkName(java.lang.String, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, java.util.List<org.hibernate.boot.model.naming.Identifier>)"], ["java.lang.String", "org.hibernate.boot.model.naming.NamingHelper.generateHashedFkName(java.lang.String, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier...)"], ["java.lang.String", "org.hibernate.boot.model.naming.NamingHelper.generateHashedConstraintName(java.lang.String, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier...)"], ["java.lang.String", "org.hibernate.boot.model.naming.NamingHelper.generateHashedConstraintName(java.lang.String, org.hibernate.boot.model.naming.Identifier, java.util.List<org.hibernate.boot.model.naming.Identifier>)"], ["java.lang.String", "org.hibernate.boot.model.naming.NamingHelper.hashedName(java.lang.String)"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl", "org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl()"], ["void", "org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl.process(org.hibernate.boot.model.source.spi.AttributePath, java.lang.StringBuilder)"], ["org.hibernate.boot.model.naming.IllegalIdentifierException", "org.hibernate.boot.model.naming.IllegalIdentifierException(java.lang.String)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder()"], ["java.lang.String", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.getName()"], ["void", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.getStrategy()"], ["void", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.setStrategy(java.lang.String)"], ["void", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.addParam(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.addParams(java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder.build()"], ["org.hibernate.boot.model.convert.internal.ClassBasedConverterDescriptor", "org.hibernate.boot.model.convert.internal.ClassBasedConverterDescriptor(java.lang.Class<? extends javax.persistence.AttributeConverter>, org.hibernate.boot.internal.ClassmateContext)"], ["org.hibernate.boot.model.convert.internal.ClassBasedConverterDescriptor", "org.hibernate.boot.model.convert.internal.ClassBasedConverterDescriptor(java.lang.Class<? extends javax.persistence.AttributeConverter>, java.lang.Boolean, org.hibernate.boot.internal.ClassmateContext)"], ["org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorStandardImpl", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorStandardImpl(org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorStandardImpl.getAutoAppliedConverterDescriptorForAttribute(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorStandardImpl.getAutoAppliedConverterDescriptorForCollectionElement(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorStandardImpl.getAutoAppliedConverterDescriptorForMapKey(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor(java.lang.Class<? extends javax.persistence.AttributeConverter>, java.lang.Boolean, org.hibernate.boot.internal.ClassmateContext)"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.getAttributeConverterClass()"], ["com.fasterxml.classmate.ResolvedType", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.getDomainValueResolvedType()"], ["com.fasterxml.classmate.ResolvedType", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.getRelationalValueResolvedType()"], ["org.hibernate.boot.model.convert.spi.AutoApplicableConverterDescriptor", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.getAutoApplyDescriptor()"], ["org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter", "org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.createJpaAttributeConverter(org.hibernate.boot.model.convert.spi.JpaAttributeConverterCreationContext)"], ["org.hibernate.boot.model.convert.internal.AttributeConverterManager$ConversionSite[]", "org.hibernate.boot.model.convert.internal.AttributeConverterManager$ConversionSite.values()"], ["org.hibernate.boot.model.convert.internal.AttributeConverterManager$ConversionSite", "org.hibernate.boot.model.convert.internal.AttributeConverterManager$ConversionSite.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.convert.internal.AttributeConverterManager$ConversionSite.getSiteDescriptor()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorBypassedImpl.getAutoAppliedConverterDescriptorForAttribute(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorBypassedImpl.getAutoAppliedConverterDescriptorForCollectionElement(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AutoApplicableConverterDescriptorBypassedImpl.getAutoAppliedConverterDescriptorForMapKey(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor", "org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor(javax.persistence.AttributeConverter, org.hibernate.boot.internal.ClassmateContext)"], ["org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor", "org.hibernate.boot.model.convert.internal.InstanceBasedConverterDescriptor(javax.persistence.AttributeConverter, java.lang.Boolean, org.hibernate.boot.internal.ClassmateContext)"], ["org.hibernate.boot.model.convert.internal.AttributeConverterManager", "org.hibernate.boot.model.convert.internal.AttributeConverterManager()"], ["void", "org.hibernate.boot.model.convert.internal.AttributeConverterManager.addConverter(org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AttributeConverterManager.findAutoApplyConverterForAttribute(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AttributeConverterManager.findAutoApplyConverterForCollectionElement(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.model.convert.internal.AttributeConverterManager.findAutoApplyConverterForMapKey(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.CustomSql(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.boot.model.CustomSql.getSql()"], ["boolean", "org.hibernate.boot.model.CustomSql.isCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.boot.model.CustomSql.getCheckStyle()"], ["org.hibernate.boot.model.TruthValue[]", "org.hibernate.boot.model.TruthValue.values()"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.boot.model.TruthValue.valueOf(java.lang.String)"], ["boolean", "org.hibernate.boot.model.TruthValue.toBoolean(boolean)"], ["boolean", "org.hibernate.boot.model.TruthValue.toBoolean(org.hibernate.boot.model.TruthValue, boolean)"], ["org.hibernate.boot.model.process.spi.MetadataBuildingProcess", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess()"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(org.hibernate.boot.MetadataSources, org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.boot.model.process.spi.ManagedResources", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess.prepare(org.hibernate.boot.MetadataSources, org.hibernate.boot.spi.BootstrapContext)"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(org.hibernate.boot.model.process.spi.ManagedResources, org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.MetadataBuildingOptions)"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.prepare()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processTypeDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processQueryRenames()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processNamedQueries()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processAuxiliaryDatabaseObjectDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processIdentifierGenerators()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processFilterDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processFetchProfiles()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.prepareForEntityHierarchyProcessing()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.postProcessEntityHierarchies()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processResultSetMappings()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.finishUp()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.prepare()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processTypeDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processQueryRenames()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processNamedQueries()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processAuxiliaryDatabaseObjectDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processIdentifierGenerators()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processFilterDefinitions()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processFetchProfiles()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.prepareForEntityHierarchyProcessing()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processEntityHierarchies(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.postProcessEntityHierarchies()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.processResultSetMappings()"], ["void", "org.hibernate.boot.model.process.spi.NoOpMetadataSourceProcessorImpl.finishUp()"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeType(org.hibernate.type.BasicType)"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeType(org.hibernate.type.BasicType, java.lang.String...)"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeType(org.hibernate.usertype.UserType, java.lang.String[])"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeType(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeJavaTypeDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["void", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.contributeSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.model.process.spi.MetadataBuildingProcess$2.getTypeConfiguration()"], ["org.hibernate.boot.model.process.internal.ManagedResourcesImpl", "org.hibernate.boot.model.process.internal.ManagedResourcesImpl.baseline(org.hibernate.boot.MetadataSources, org.hibernate.boot.spi.BootstrapContext)"], ["void", "org.hibernate.boot.model.process.internal.ScanningCoordinator.coordinateScan(org.hibernate.boot.model.process.internal.ManagedResourcesImpl, org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.XmlMappingBinderAccess)"], ["void", "org.hibernate.boot.model.process.internal.ScanningCoordinator.applyScanResultsToManagedResources(org.hibernate.boot.model.process.internal.ManagedResourcesImpl, org.hibernate.boot.archive.scan.spi.ScanResult, org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.XmlMappingBinderAccess)"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.Caching(org.hibernate.boot.model.TruthValue)"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.Caching(java.lang.String, org.hibernate.cache.spi.access.AccessType, boolean)"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.Caching(java.lang.String, org.hibernate.cache.spi.access.AccessType, boolean, org.hibernate.boot.model.TruthValue)"], ["java.lang.String", "org.hibernate.boot.model.Caching.getRegion()"], ["void", "org.hibernate.boot.model.Caching.setRegion(java.lang.String)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.model.Caching.getAccessType()"], ["void", "org.hibernate.boot.model.Caching.setAccessType(org.hibernate.cache.spi.access.AccessType)"], ["boolean", "org.hibernate.boot.model.Caching.isCacheLazyProperties()"], ["void", "org.hibernate.boot.model.Caching.setCacheLazyProperties(boolean)"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.boot.model.Caching.getRequested()"], ["void", "org.hibernate.boot.model.Caching.setRequested(org.hibernate.boot.model.TruthValue)"], ["void", "org.hibernate.boot.model.Caching.overlay(org.hibernate.boot.CacheRegionDefinition)"], ["void", "org.hibernate.boot.model.Caching.overlay(org.hibernate.boot.model.Caching)"], ["java.lang.String", "org.hibernate.boot.model.Caching.toString()"], ["org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.Namespace, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)"], ["org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.Namespace, java.lang.String[], java.lang.String[], java.util.Set<java.lang.String>)"], ["org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(java.util.Set<java.lang.String>, java.lang.String, java.lang.String, java.lang.String[], java.lang.String[])"], ["java.lang.String[]", "org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["org.hibernate.boot.model.relational.Sequence", "org.hibernate.boot.model.relational.Sequence(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.Sequence", "org.hibernate.boot.model.relational.Sequence(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, int, int)"], ["org.hibernate.boot.model.relational.QualifiedSequenceName", "org.hibernate.boot.model.relational.Sequence.getName()"], ["java.lang.String", "org.hibernate.boot.model.relational.Sequence.getExportIdentifier()"], ["int", "org.hibernate.boot.model.relational.Sequence.getInitialValue()"], ["int", "org.hibernate.boot.model.relational.Sequence.getIncrementSize()"], ["void", "org.hibernate.boot.model.relational.Sequence.validate(int, int)"], ["org.hibernate.boot.model.relational.QualifiedSequenceName", "org.hibernate.boot.model.relational.QualifiedSequenceName(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.QualifiedSequenceName", "org.hibernate.boot.model.relational.QualifiedSequenceName(org.hibernate.boot.model.relational.Namespace$Name, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.QualifiedSequenceName.getSequenceName()"], ["org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject(boolean)"], ["java.lang.String", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject.getExportIdentifier()"], ["void", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject.addDialectScope(java.lang.String)"], ["java.util.Set", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject.getDialectScopes()"], ["boolean", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject.appliesToDialect(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject.beforeTablesOnCreation()"], ["org.hibernate.boot.model.relational.QualifiedTableName", "org.hibernate.boot.model.relational.QualifiedTableName(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.QualifiedTableName", "org.hibernate.boot.model.relational.QualifiedTableName(org.hibernate.boot.model.relational.Namespace$Name, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.QualifiedTableName.getTableName()"], ["org.hibernate.boot.model.relational.Namespace$ComparableHelper", "org.hibernate.boot.model.relational.Namespace$ComparableHelper()"], ["<T extends java.lang.Comparable<T>> int", "org.hibernate.boot.model.relational.Namespace$ComparableHelper.compare(T, T)"], ["org.hibernate.boot.model.relational.QualifiedNameImpl", "org.hibernate.boot.model.relational.QualifiedNameImpl(org.hibernate.boot.model.relational.Namespace$Name, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.QualifiedNameImpl", "org.hibernate.boot.model.relational.QualifiedNameImpl(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.QualifiedNameParser", "org.hibernate.boot.model.relational.QualifiedNameParser()"], ["org.hibernate.boot.model.relational.QualifiedNameParser$NameParts", "org.hibernate.boot.model.relational.QualifiedNameParser.parse(java.lang.String, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.QualifiedNameParser$NameParts", "org.hibernate.boot.model.relational.QualifiedNameParser.parse(java.lang.String)"], ["org.hibernate.boot.model.relational.InitCommand", "org.hibernate.boot.model.relational.InitCommand(java.lang.String...)"], ["java.lang.String[]", "org.hibernate.boot.model.relational.InitCommand.getInitCommands()"], ["org.hibernate.boot.model.relational.QualifiedNameParser$NameParts", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.getCatalogName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.getSchemaName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.getObjectName()"], ["java.lang.String", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.render()"], ["java.lang.String", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.toString()"], ["boolean", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.relational.QualifiedNameParser$NameParts.hashCode()"], ["org.hibernate.boot.model.relational.Namespace", "org.hibernate.boot.model.relational.Namespace(org.hibernate.boot.model.naming.PhysicalNamingStrategy, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.boot.model.relational.Namespace$Name)"], ["org.hibernate.boot.model.relational.Namespace$Name", "org.hibernate.boot.model.relational.Namespace.getName()"], ["org.hibernate.boot.model.relational.Namespace$Name", "org.hibernate.boot.model.relational.Namespace.getPhysicalName()"], ["org.hibernate.mapping.Table", "org.hibernate.boot.model.relational.Namespace.locateTable(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.mapping.Table", "org.hibernate.boot.model.relational.Namespace.createTable(org.hibernate.boot.model.naming.Identifier, boolean)"], ["org.hibernate.mapping.DenormalizedTable", "org.hibernate.boot.model.relational.Namespace.createDenormalizedTable(org.hibernate.boot.model.naming.Identifier, boolean, org.hibernate.mapping.Table)"], ["org.hibernate.boot.model.relational.Sequence", "org.hibernate.boot.model.relational.Namespace.locateSequence(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.Sequence", "org.hibernate.boot.model.relational.Namespace.createSequence(org.hibernate.boot.model.naming.Identifier, int, int)"], ["java.lang.String", "org.hibernate.boot.model.relational.Namespace.toString()"], ["boolean", "org.hibernate.boot.model.relational.Namespace.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.relational.Namespace.hashCode()"], ["org.hibernate.boot.model.relational.Sequence$Name", "org.hibernate.boot.model.relational.Sequence$Name(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.Database", "org.hibernate.boot.model.relational.Database(org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.boot.model.relational.Database", "org.hibernate.boot.model.relational.Database(org.hibernate.boot.spi.MetadataBuildingOptions, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.dialect.Dialect", "org.hibernate.boot.model.relational.Database.getDialect()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.boot.model.relational.Database.getJdbcEnvironment()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.Database.toIdentifier(java.lang.String)"], ["org.hibernate.boot.model.naming.PhysicalNamingStrategy", "org.hibernate.boot.model.relational.Database.getPhysicalNamingStrategy()"], ["org.hibernate.boot.model.relational.Namespace", "org.hibernate.boot.model.relational.Database.getDefaultNamespace()"], ["org.hibernate.boot.model.relational.Namespace", "org.hibernate.boot.model.relational.Database.locateNamespace(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.Namespace", "org.hibernate.boot.model.relational.Database.adjustDefaultNamespace(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.relational.Namespace", "org.hibernate.boot.model.relational.Database.adjustDefaultNamespace(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.model.relational.Database.addAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["void", "org.hibernate.boot.model.relational.Database.addInitCommand(org.hibernate.boot.model.relational.InitCommand)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.boot.model.relational.Database.getServiceRegistry()"], ["org.hibernate.boot.model.relational.NamedAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.NamedAuxiliaryDatabaseObject(java.lang.String, org.hibernate.boot.model.relational.Namespace, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)"], ["org.hibernate.boot.model.relational.NamedAuxiliaryDatabaseObject", "org.hibernate.boot.model.relational.NamedAuxiliaryDatabaseObject(java.lang.String, org.hibernate.boot.model.relational.Namespace, java.lang.String[], java.lang.String[], java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.boot.model.relational.NamedAuxiliaryDatabaseObject.getExportIdentifier()"], ["org.hibernate.boot.model.relational.Namespace$Name", "org.hibernate.boot.model.relational.Namespace$Name(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.Namespace$Name.getCatalog()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.relational.Namespace$Name.getSchema()"], ["java.lang.String", "org.hibernate.boot.model.relational.Namespace$Name.toString()"], ["boolean", "org.hibernate.boot.model.relational.Namespace$Name.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.relational.Namespace$Name.hashCode()"], ["int", "org.hibernate.boot.model.relational.Namespace$Name.compareTo(org.hibernate.boot.model.relational.Namespace$Name)"], ["int", "org.hibernate.boot.model.relational.Namespace$Name.compareTo(java.lang.Object)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.IdentifierGeneratorDefinition(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.IdentifierGeneratorDefinition(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.IdentifierGeneratorDefinition(java.lang.String)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.IdentifierGeneratorDefinition(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.IdentifierGeneratorDefinition.getStrategy()"], ["java.lang.String", "org.hibernate.boot.model.IdentifierGeneratorDefinition.getName()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.IdentifierGeneratorDefinition.getParameters()"], ["boolean", "org.hibernate.boot.model.IdentifierGeneratorDefinition.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.IdentifierGeneratorDefinition.hashCode()"], ["java.lang.String", "org.hibernate.boot.model.IdentifierGeneratorDefinition.toString()"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature[]", "org.hibernate.boot.model.source.spi.PluralAttributeElementNature.values()"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.spi.PluralAttributeElementNature.valueOf(java.lang.String)"], ["boolean", "org.hibernate.boot.model.source.spi.PluralAttributeElementNature.isAssociation()"], ["boolean", "org.hibernate.boot.model.source.spi.PluralAttributeElementNature.isCascadeable()"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature[]", "org.hibernate.boot.model.source.spi.PluralAttributeIndexNature.values()"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.spi.PluralAttributeIndexNature.valueOf(java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.spi.AttributePath()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.spi.AttributePath.append(java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.spi.AttributePath.getParent()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.spi.AttributePath(org.hibernate.boot.model.source.spi.AttributePath, java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.spi.AttributePath.parse(java.lang.String)"], ["org.hibernate.boot.model.source.spi.AbstractAttributeKey", "org.hibernate.boot.model.source.spi.AttributePath.getParent()"], ["org.hibernate.boot.model.source.spi.AbstractAttributeKey", "org.hibernate.boot.model.source.spi.AttributePath.append(java.lang.String)"], ["org.hibernate.boot.model.source.spi.ToolingHint", "org.hibernate.boot.model.source.spi.ToolingHint(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.boot.model.source.spi.ToolingHint.getName()"], ["boolean", "org.hibernate.boot.model.source.spi.ToolingHint.isInheritable()"], ["java.util.List", "org.hibernate.boot.model.source.spi.ToolingHint.getValues()"], ["void", "org.hibernate.boot.model.source.spi.ToolingHint.addValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.source.spi.ToolingHint.getValue()"], ["boolean", "org.hibernate.boot.model.source.spi.ToolingHint.isMultiValued()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.ToolingHint.toString()"], ["org.hibernate.mapping.MetaAttribute", "org.hibernate.boot.model.source.spi.ToolingHint.asMetaAttribute()"], ["org.hibernate.boot.model.source.spi.JdbcDataType", "org.hibernate.boot.model.source.spi.JdbcDataType(int, java.lang.String, java.lang.Class)"], ["int", "org.hibernate.boot.model.source.spi.JdbcDataType.getTypeCode()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.JdbcDataType.getTypeName()"], ["java.lang.Class", "org.hibernate.boot.model.source.spi.JdbcDataType.getJavaType()"], ["int", "org.hibernate.boot.model.source.spi.JdbcDataType.hashCode()"], ["boolean", "org.hibernate.boot.model.source.spi.JdbcDataType.equals(java.lang.Object)"], ["java.lang.String", "org.hibernate.boot.model.source.spi.JdbcDataType.toString()"], ["default", "org.hibernate.boot.model.source.spi.AnyMappingSource.boolean isLazy()"], ["default", "org.hibernate.boot.model.source.spi.PluralAttributeSource.org.hibernate.boot.model.source.spi.FetchCharacteristics getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.spi.AttributeRole(java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.spi.AttributeRole.append(java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.spi.AttributeRole.getParent()"], ["org.hibernate.boot.model.source.spi.AbstractAttributeKey", "org.hibernate.boot.model.source.spi.AttributeRole.getParent()"], ["org.hibernate.boot.model.source.spi.AbstractAttributeKey", "org.hibernate.boot.model.source.spi.AttributeRole.append(java.lang.String)"], ["org.hibernate.boot.model.source.spi.RelationalValueSource$Nature[]", "org.hibernate.boot.model.source.spi.RelationalValueSource$Nature.values()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource$Nature", "org.hibernate.boot.model.source.spi.RelationalValueSource$Nature.valueOf(java.lang.String)"], ["java.lang.Class<? extends org.hibernate.boot.model.source.spi.RelationalValueSource>", "org.hibernate.boot.model.source.spi.RelationalValueSource$Nature.getSpecificContractClass()"], ["org.hibernate.boot.model.source.spi.InheritanceType[]", "org.hibernate.boot.model.source.spi.InheritanceType.values()"], ["org.hibernate.boot.model.source.spi.InheritanceType", "org.hibernate.boot.model.source.spi.InheritanceType.valueOf(java.lang.String)"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability[]", "org.hibernate.boot.model.source.spi.NaturalIdMutability.values()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.spi.NaturalIdMutability.valueOf(java.lang.String)"], ["org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature[]", "org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature.values()"], ["org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature", "org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature.valueOf(java.lang.String)"], ["default", "org.hibernate.boot.model.source.spi.SingularAttributeSourceToOne.org.hibernate.boot.model.source.spi.FetchCharacteristics getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature[]", "org.hibernate.boot.model.source.spi.SingularAttributeNature.values()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.spi.SingularAttributeNature.valueOf(java.lang.String)"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.spi.ToolingHintContext(org.hibernate.boot.model.source.spi.ToolingHintContext)"], ["org.hibernate.boot.model.source.spi.ToolingHint", "org.hibernate.boot.model.source.spi.ToolingHintContext.getToolingHint(java.lang.String)"], ["void", "org.hibernate.boot.model.source.spi.ToolingHintContext.add(org.hibernate.boot.model.source.spi.ToolingHint)"], ["java.util.Map<java.lang.String, org.hibernate.mapping.MetaAttribute>", "org.hibernate.boot.model.source.spi.ToolingHintContext.getMetaAttributeMap()"], ["int", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.getDepth()"], ["org.hibernate.boot.model.source.spi.AbstractAttributeKey", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.getParent()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.getProperty()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.getFullPath()"], ["boolean", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.isRoot()"], ["boolean", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.isCollectionElement()"], ["boolean", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.isPartOfCollectionElement()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.stripCollectionElementMarker()"], ["java.lang.String", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.toString()"], ["boolean", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.source.spi.AbstractAttributeKey.hashCode()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature[]", "org.hibernate.boot.model.source.spi.PluralAttributeNature.values()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.spi.PluralAttributeNature.valueOf(java.lang.String)"], ["boolean", "org.hibernate.boot.model.source.spi.PluralAttributeNature.isIndexed()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl$1.getName()"], ["org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.getSizeSource()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.isNullable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$AbstractColumnsAndFormulasSource.isUnique()"], ["org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceContainer, org.hibernate.boot.model.source.spi.EmbeddableMapping, java.util.List, boolean, boolean, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getTypeDescriptor()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getParentReferenceAttributeName()"], ["java.util.Map<org.hibernate.EntityMode, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getTuplizerClassMap()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.isDynamic()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.isUnique()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getLocalMetadataBuildingContext()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl.getToolingHintContext()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl$1.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$2.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$2.getParent()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl$1.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl$1.isNullable()"], ["org.hibernate.boot.model.source.internal.hbm.MappingDocument", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass.getMappingDocument()"], ["org.hibernate.boot.model.source.spi.PluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass.getPluralAttributeSource()"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass.getCollectionBinding()"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.boot.model.source.internal.hbm.TypeDefinitionBinder", "org.hibernate.boot.model.source.internal.hbm.TypeDefinitionBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.TypeDefinitionBinder.processTypeDefinition(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.getNature()"], ["org.hibernate.boot.model.source.spi.CollectionIdSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.getCollectionIdSource()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.isOrdered()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.getOrder()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$3.getTypeSource()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$3.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$3.getBuildingContext()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getColumnAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getFormulaAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.isNullable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.isUnique()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl$1.getSizeSource()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType, java.lang.String)"], ["org.hibernate.boot.model.source.spi.AnyDiscriminatorSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl.getDiscriminatorSource()"], ["org.hibernate.boot.model.source.spi.AnyKeySource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl.getKeySource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType, org.hibernate.boot.model.source.spi.EntitySource)"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl.isCascadeDeleteEnabled()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl.createForeignKeyConstraint()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl.getDiscriminatorMatchValue()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1$1.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1$1.getParent()"], ["org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder.bindColumnOrFormula(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.RelationalValueSource, org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder$ColumnNamingDelegate)"], ["void", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder.bindColumns(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.util.List<org.hibernate.boot.model.source.spi.ColumnSource>, org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder$ColumnNamingDelegate)"], ["void", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder.bindColumnsAndFormulas(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.util.List<org.hibernate.boot.model.source.spi.RelationalValueSource>, org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder$ColumnNamingDelegate)"], ["void", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder.bindColumn(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.ColumnSource, org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder$ColumnNamingDelegate)"], ["void", "org.hibernate.boot.model.source.internal.hbm.RelationalObjectBinder.bindFormulas(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.util.List<org.hibernate.boot.model.source.spi.DerivedValueSource>, org.hibernate.mapping.OneToOne)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$2.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$2.getParent()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl$1.getName()"], ["org.hibernate.boot.model.source.internal.hbm.IdentifierGeneratorDefinitionBinder", "org.hibernate.boot.model.source.internal.hbm.IdentifierGeneratorDefinitionBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.IdentifierGeneratorDefinitionBinder.processIdentifierGeneratorDefinition(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType)"], ["org.hibernate.boot.model.source.spi.AnyDiscriminatorSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getDiscriminatorSource()"], ["org.hibernate.boot.model.source.spi.AnyKeySource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getKeySource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getMapKeyNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.isReferencedEntityAttribute()"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getNature()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.internal.hbm.FetchProfileBinder", "org.hibernate.boot.model.source.internal.hbm.FetchProfileBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.FetchProfileBinder.processFetchProfile(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.FetchProfileBinder.processFetchProfile(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder(org.hibernate.boot.spi.MappingDefaults)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder.setFetchTiming(org.hibernate.engine.FetchTiming)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder.setFetchStyle(org.hibernate.engine.FetchStyle)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder.setUnwrapProxies(boolean)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl$Builder.createFetchCharacteristics()"], ["org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType)"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getSingularAttributeNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getSourceType()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isSingular()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isCollectionElement()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isVirtualAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isIncludedInOptimisticLocking()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.areValuesNullableByDefault()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getNaturalIdMutability()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getToolingHintContext()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl.getTypeInformation()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$14.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$TypeResolution", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$TypeResolution(java.lang.String, java.util.Properties)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder$2.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource, org.hibernate.mapping.List)"], ["org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass.getPluralAttributeSource()"], ["org.hibernate.mapping.List", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass.getCollectionBinding()"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass.getCollectionBinding()"], ["org.hibernate.boot.model.source.spi.PluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeListSecondPass.getPluralAttributeSource()"], ["org.hibernate.boot.model.source.spi.AttributeSourceContainer", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl$2.getAttributeSourceContainer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceImpl$2.addAttributeSource(org.hibernate.boot.model.source.spi.AttributeSource)"], ["org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getPropertyAccessorName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getCascadeStyleName()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.isUsedInOptimisticLocking()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributePropertySource.isLazy()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeSetSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeSetSecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.mapping.Collection)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$2.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$2.getColumnAttribute()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$2.getSizeSource()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$2.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$10.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.getNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.getExplicitHibernateTypeSource()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.isCollectionElement()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceBasicImpl.getExplicitHibernateTypeSource()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl(org.hibernate.boot.model.source.spi.ColumnSource, org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.source.spi.ColumnSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl.getColumnSource()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl.getGeneratorName()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl.getParameters()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$CollectionIdSourceImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.getSizeSource()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl$1.isNullable()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl(org.hibernate.boot.jaxb.hbm.spi.TypeContainer)"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl(java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl(org.hibernate.boot.model.JavaTypeDescriptor)"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl(java.lang.String, org.hibernate.boot.model.JavaTypeDescriptor)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl.getName()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl.getParameters()"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl.getJavaType()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl.resolveJavaTypeDescriptor(org.hibernate.boot.model.JavaTypeDescriptor)"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource, org.hibernate.mapping.Map)"], ["org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass.getPluralAttributeSource()"], ["org.hibernate.mapping.Map", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass.getCollectionBinding()"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass.getCollectionBinding()"], ["org.hibernate.boot.model.source.spi.PluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeMapSecondPass.getPluralAttributeSource()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$6.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getPropertyAccessorName()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getGenerationTiming()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getNaturalIdMutability()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getSingularAttributeNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isVirtualAttribute()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isUpdatable()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getToolingHintContext()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.isSingular()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularIdentifierAttributeSourceImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceBasicImpl$1.getSizeSource()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$4.getRelationalValueSource()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$4.isShared()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$4.bindAsParameter()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl.addAttributeBinding(org.hibernate.mapping.Property)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl.process()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$2.getSourceName()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$2.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$2.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$2.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$2.getColumnOrFormulaElements()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isSingular()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getSingularAttributeNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isCollectionElement()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getPropertyAccessorName()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getNaturalIdMutability()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isIncludedInOptimisticLocking()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.isVirtualAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getToolingHintContext()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceBasicImpl.getTypeInformation()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$3$1.getEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$3$1.getIdentifierAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$3$1.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.AttributeSourceContainer", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl$2.getAttributeSourceContainer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl$2.addAttributeSource(org.hibernate.boot.model.source.spi.AttributeSource)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$1.getOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$1.getOwningEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$1.getOwningAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$1.getBuildingContext()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$1.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl$1.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.JoinedSubclassEntitySourceImpl$1.isNullable()"], ["org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl(org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl)"], ["org.hibernate.boot.model.source.spi.SingularAttributeSourceEmbedded", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getIdentifierAttributeSource()"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getIndividualAttributeIdGenerator(java.lang.String)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getIdentifierGeneratorDescriptor()"], ["org.hibernate.id.EntityIdentifierNature", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getNature()"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getEmbeddableSource()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl.getToolingHintContext()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$3.isUnique()"], ["org.hibernate.boot.model.source.spi.EmbeddableMapping", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$3.getEmbeddableMapping()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$3.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$3.getAccess()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$13.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.getNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.isSorted()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.getComparatorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.isOrdered()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.getOrder()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceSetImpl.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$1.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$1.getParent()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$1.getName()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$1.getParameters()"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$1.getJavaType()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder", "org.hibernate.boot.model.source.internal.hbm.ModelBinder.prepare(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder", "org.hibernate.boot.model.source.internal.hbm.ModelBinder(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder.finishUp(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindEntityHierarchy(org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindOneToOne(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.SingularAttributeSourceOneToOne, org.hibernate.mapping.OneToOne)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindListOrArrayIndex(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource, org.hibernate.mapping.List)"], ["org.hibernate.boot.model.source.internal.hbm.FilterDefinitionBinder", "org.hibernate.boot.model.source.internal.hbm.FilterDefinitionBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.FilterDefinitionBinder.processFilterDefinition(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl$2.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl$2.getParent()"], ["void", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder$1.doSecondPass(java.util.Map)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$5.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$3.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$3.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl$3.getToolingHintContextBaselineForEmbeddable()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl$1.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl$1.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl$1.getToolingHintContextBaselineForEmbeddable()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$1.getSourceName()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.AttributeSourceContainer", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl$1.getAttributeSourceContainer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl$1.addAttributeSource(org.hibernate.boot.model.source.spi.AttributeSource)"], ["org.hibernate.boot.model.source.internal.hbm.AttributesHelper", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper()"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processAttributes(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, java.util.List, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processCompositeKeySubAttributes(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, java.util.List<?>)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processBasicAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processEmbeddedAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processDynamicComponentAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processManyToOneAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processOneToOneAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processAnyAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processMapAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processListAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processArrayAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processPrimitiveArrayAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processSetAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processBagAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper.processIdBagAttribute(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3$1.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3$1.getParent()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2.getAccess()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2.isUnique()"], ["org.hibernate.boot.model.source.spi.EmbeddableMapping", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2.getEmbeddableMapping()"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl.getPrimaryTable()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl.getDiscriminatorMatchValue()"], ["org.hibernate.boot.model.source.spi.IdentifiableTypeSource", "org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl.getSuperType()"], ["org.hibernate.engine.FetchTiming", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.getFetchTiming()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.getFetchStyle()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.isUnwrapProxies()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.interpretManyToOne(org.hibernate.boot.spi.MappingDefaults, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.interpretManyToManyElement(org.hibernate.boot.spi.MappingDefaults, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl.interpretOneToOne(org.hibernate.boot.spi.MappingDefaults, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum, boolean)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$12.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.AuxiliaryDatabaseObjectBinder", "org.hibernate.boot.model.source.internal.hbm.AuxiliaryDatabaseObjectBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.AuxiliaryDatabaseObjectBinder.processAuxiliaryDatabaseObject(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.createForeignKeyConstraint()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.getReferencedPropertyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.isCascadeDeleteEnabled()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper.buildValueSource(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.lang.String, org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$ColumnsAndFormulasSource)"], ["org.hibernate.boot.model.source.spi.ColumnSource", "org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper.buildColumnSource(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.lang.String, org.hibernate.boot.model.source.internal.hbm.RelationalValueSourceHelper$ColumnsAndFormulasSource)"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$14$1.getPluralAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$14$1.getBuildingContext()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2$1.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$2$1.getParent()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.SingularAttributeSourceManyToOne, org.hibernate.mapping.ManyToOne, java.lang.String)"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder.canProcessImmediately()"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder.doSecondPass(java.util.Map)"], ["org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder$ExtendsQueueEntry", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder$ExtendsQueueEntry(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSubclassEntityBaseDefinition)"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getTypeDescriptor()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getParentReferenceAttributeName()"], ["java.util.Map<org.hibernate.EntityMode, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getTuplizerClassMap()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.isDynamic()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.isUnique()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getLocalMetadataBuildingContext()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdClassSource.getToolingHintContext()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$3.isNullable()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$3.getTypeSource()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$3.getRelationalValueSource()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$3.getValueMappings()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$3.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$3.getBuildingContext()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getName()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isCollectionElement()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getTypeInformation()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.areValuesNullableByDefault()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getPropertyAccessorName()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getNaturalIdMutability()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getSingularAttributeNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isVirtualAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.isSingular()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getUnsavedValue()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getToolingHintContext()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$3.getTypeSource()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$3.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$3.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$12$1.getPluralAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$12$1.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.AttributeSourceContainer", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl$1.getAttributeSourceContainer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl$1.addAttributeSource(org.hibernate.boot.model.source.spi.AttributeSource)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.areValuesNullableByDefault()"], ["int", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.getBase()"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl(org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl)"], ["org.hibernate.boot.model.source.spi.SingularAttributeSource", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl.getIdentifierAttributeSource()"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl.getIdentifierGeneratorDescriptor()"], ["org.hibernate.id.EntityIdentifierNature", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl.getUnsavedValue()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceSimpleImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isCollectionElement()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.areValuesNullableByDefault()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getUnsavedValue()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getNaturalIdMutability()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getSingularAttributeNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isVirtualAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.isSingular()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getXmlNodeName()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.VersionAttributeSourceImpl.getTypeInformation()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl$1.getTableName()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl$1.getBuildingContext()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$NaturalIdUniqueKeyBinderImpl$1.getUserProvidedIdentifier()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$2.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$2.getColumnAttribute()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$2.getSizeSource()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$2.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isIncludedInOptimisticLocking()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getCascadeStyleName()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getSingularAttributeNature()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getFetchCharacteristics()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isVirtualAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getReferencedEntityName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isCascadeDeleteEnabled()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getForeignKeyDirection()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getToolingHintContext()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isConstrained()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getReferencedEntityAttributeName()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.isEmbedXml()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristicsSingularAssociation", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristics", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceOneToOneImpl.getFetchCharacteristics()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl$1.getName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$5.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType, java.lang.String)"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl.getReferencedEntityName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl.isIgnoreNotFound()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceOneToManyImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl$2.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl$2.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl$2.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.SizeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SizeSourceImpl(java.lang.Integer, java.lang.Integer, java.lang.Integer)"], ["java.lang.Integer", "org.hibernate.boot.model.source.internal.hbm.SizeSourceImpl.getLength()"], ["java.lang.Integer", "org.hibernate.boot.model.source.internal.hbm.SizeSourceImpl.getPrecision()"], ["java.lang.Integer", "org.hibernate.boot.model.source.internal.hbm.SizeSourceImpl.getScale()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getAccess()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getClazz()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getParent()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getToolingHintContextBaselineForEmbeddable()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getAttributes()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getXmlNodeName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.isUnique()"], ["org.hibernate.boot.model.source.spi.EmbeddableMapping", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$EmbeddedAttributeMappingAdapterAggregatedCompositeId.getEmbeddableMapping()"], ["org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType, org.hibernate.boot.model.source.spi.NaturalIdMutability, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType, org.hibernate.boot.model.source.spi.NaturalIdMutability, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType, org.hibernate.boot.model.source.spi.NaturalIdMutability, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.getXmlNodeName()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl.getToolingHintContext()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$3.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl(org.hibernate.boot.model.process.spi.ManagedResources, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl(java.util.Collection<org.hibernate.boot.jaxb.spi.Binding>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.prepare()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processTypeDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processQueryRenames()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processNamedQueries()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processAuxiliaryDatabaseObjectDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processFilterDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processFetchProfiles()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processIdentifierGenerators()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.prepareForEntityHierarchyProcessing()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processEntityHierarchies(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.postProcessEntityHierarchies()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.processResultSetMappings()"], ["void", "org.hibernate.boot.model.source.internal.hbm.HbmMetadataSourceProcessorImpl.finishUp()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getReferencedEntityName()"], ["org.hibernate.boot.model.source.spi.FilterSource[]", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getFilterSources()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getReferencedEntityAttributeName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.isIgnoreNotFound()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.isCascadeDeleteEnabled()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getWhere()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristics", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getFetchCharacteristics()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.areValuesNullableByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.isOrdered()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.getOrder()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl.createForeignKeyConstraint()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.SingularAttributeSourceManyToOne, org.hibernate.mapping.ManyToOne, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass.getReferencedEntityName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass.isInPrimaryKey()"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass.doSecondPass(java.util.Map)"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneFkSecondPass.canProcessImmediately()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.isVirtualAttribute()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.isBytecodeLazy()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$4.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.AttributeSourceContainer", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl$2.getAttributeSourceContainer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl$2.addAttributeSource(org.hibernate.boot.model.source.spi.AttributeSource)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl$1.getName()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.getIndexSource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.getXmlNodeName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.isSorted()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl.getComparatorName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$7.getPropertyAccessorName()"], ["org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl(org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl)"], ["org.hibernate.boot.model.source.spi.InheritanceType", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getHierarchyInheritanceType()"], ["org.hibernate.boot.model.source.internal.hbm.RootEntitySourceImpl", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getRoot()"], ["void", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.processSubclass(org.hibernate.boot.model.source.internal.hbm.SubclassEntitySourceImpl)"], ["org.hibernate.boot.model.source.spi.IdentifierSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getIdentifierSource()"], ["org.hibernate.boot.model.source.spi.VersionAttributeSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getVersionAttributeSource()"], ["org.hibernate.EntityMode", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getEntityMode()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.isMutable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.isExplicitPolymorphism()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getWhere()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getRowId()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getOptimisticLockStyle()"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getCaching()"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getNaturalIdCaching()"], ["org.hibernate.boot.model.source.spi.DiscriminatorSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getDiscriminatorSource()"], ["org.hibernate.boot.model.source.spi.MultiTenancySource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getMultiTenancySource()"], ["org.hibernate.boot.model.source.spi.EntitySource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl.getRoot()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$4.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl$2.getName()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSequentialIndexSourceImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource, org.hibernate.mapping.PrimitiveArray)"], ["org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass.getPluralAttributeSource()"], ["org.hibernate.mapping.PrimitiveArray", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass.getCollectionBinding()"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass.getCollectionBinding()"], ["org.hibernate.boot.model.source.spi.PluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributePrimitiveArraySecondPass.getPluralAttributeSource()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$2.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$2.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$2.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$2.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeBagSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeBagSecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.mapping.Collection)"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$2.getTypeSource()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$2.getRelationalValueSource()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$2.getValueMappings()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$2.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToAnyImpl$2.getBuildingContext()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource, org.hibernate.mapping.Array)"], ["org.hibernate.boot.model.source.internal.hbm.IndexedPluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass.getPluralAttributeSource()"], ["org.hibernate.mapping.Array", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass.getCollectionBinding()"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass.getCollectionBinding()"], ["org.hibernate.boot.model.source.spi.PluralAttributeSource", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeArraySecondPass.getPluralAttributeSource()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$4.getTypeSource()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$4.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToAnySourceImpl$4.getBuildingContext()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl(org.hibernate.engine.FetchTiming, org.hibernate.engine.FetchStyle, java.lang.Integer, boolean)"], ["org.hibernate.engine.FetchTiming", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl.getFetchTiming()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl.getFetchStyle()"], ["java.lang.Integer", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl.getBatchSize()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl.isExtraLazy()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl.interpret(org.hibernate.boot.spi.MappingDefaults, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum, int)"], ["org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.getSizeSource()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.isNullable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.BasicAttributeColumnsAndFormulasSource.isUnique()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl.getIndexSource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourcePrimitiveArrayImpl.getElementClass()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceAggregatedCompositeImpl$SingularAttributeSourceAggregatedCompositeIdentifierImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder$2$1.getAttributePath()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder$2$1.isCollectionElement()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder$2$1.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.usesJoinTable()"], ["org.hibernate.boot.model.source.spi.FilterSource[]", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getFilterSources()"], ["org.hibernate.boot.model.source.spi.PluralAttributeKeySource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getKeySource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementSource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getElementSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCascadeStyleName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.isMutable()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getMappedBy()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.inferInLineViewName()"], ["org.hibernate.boot.model.source.spi.CollectionIdSource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCollectionIdSource()"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCollectionTableSpecificationSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCollectionTableComment()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCollectionTableCheck()"], ["java.lang.String[]", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getSynchronizedTableNames()"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCaching()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getWhere()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.isSingular()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.isIncludedInOptimisticLocking()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.isInverse()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomPersisterClassName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomLoaderName()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomSqlInsert()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomSqlUpdate()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomSqlDelete()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getCustomSqlDeleteAll()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristicsPluralAttribute", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristics", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getAttributeRole()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getPropertyAccessorName()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isIgnoreNotFound()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isIncludedInOptimisticLocking()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getCascadeStyleName()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getSingularAttributeNature()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isBytecodeLazy()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getReferencedEntityAttributeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getReferencedEntityName()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isEmbedXml()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.isCascadeDeleteEnabled()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getForeignKeyDirection()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristicsSingularAssociation", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristics", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.getNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.areValuesNullableByDefault()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl.getNature()"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl.getEmbeddableSource()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceEmbeddedImpl.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1.getAccess()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1.isUnique()"], ["org.hibernate.boot.model.source.spi.EmbeddableMapping", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$1.getEmbeddableMapping()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$8.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$4.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.SubclassEntitySourceImpl.getPrimaryTable()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SubclassEntitySourceImpl.getDiscriminatorMatchValue()"], ["org.hibernate.boot.model.source.spi.IdentifiableTypeSource", "org.hibernate.boot.model.source.internal.hbm.SubclassEntitySourceImpl.getSuperType()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3.getAccess()"], ["org.hibernate.boot.model.source.spi.EmbeddableMapping", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceEmbeddedImpl$3.getEmbeddableMapping()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource$Nature", "org.hibernate.boot.model.source.internal.hbm.FormulaImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.FormulaImpl.getExpression()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.FormulaImpl.getContainingTableName()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AbstractPluralAttributeSourceImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.model.source.spi.PluralAttributeElementNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl.getNature()"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl.getEmbeddableSource()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getIdClassSource()"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getIndividualAttributeIdGenerator(java.lang.String)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getIdentifierGeneratorDescriptor()"], ["org.hibernate.id.EntityIdentifierNature", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getNature()"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getTypeDescriptor()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getParentReferenceAttributeName()"], ["java.util.Map<org.hibernate.EntityMode, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getTuplizerClassMap()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.isDynamic()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.isUnique()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getLocalMetadataBuildingContext()"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getEmbeddableSource()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.IdentifierSourceNonAggregatedCompositeImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.getNaturalIdMutability()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.isSingular()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.isVirtualAttribute()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.getGenerationTiming()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.isIgnoreNotFound()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.isMappedBy()"], ["org.hibernate.boot.model.source.spi.AttributeSource", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.getAttributeSource()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractToOneAttributeSourceImpl.createForeignKeyConstraint()"], ["org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl.getCondition()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl.shouldAutoInjectAliases()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl.getAliasToTableMap()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.FilterSourceImpl.getAliasToEntityMap()"], ["org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder.indexMappingDocument(org.hibernate.boot.model.source.internal.hbm.MappingDocument)"], ["org.hibernate.boot.model.source.spi.RelationalValueSource$Nature", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getName()"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.isNullable()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getDefaultValue()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getSqlType()"], ["org.hibernate.boot.model.source.spi.JdbcDataType", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getDatatype()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getSizeSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getReadFragment()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getWriteFragment()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getCheckCondition()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getComment()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnSourceImpl.getContainingTableName()"], ["org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.extractEntityNamingSource(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.EntityInfo)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getLocalMetadataBuildingContext()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getTypeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.FilterSource[]", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getFilterSources()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.inferInLineViewName()"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getOrigin()"], ["org.hibernate.boot.model.source.spi.EntityNamingSource", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getEntityNamingSource()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.isAbstract()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.isLazy()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getProxy()"], ["int", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getBatchSize()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.isDynamicInsert()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.isDynamicUpdate()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.isSelectBeforeUpdate()"], ["java.util.Map<org.hibernate.EntityMode, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getTuplizerClassMap()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getCustomPersisterClassName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getCustomLoaderName()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getCustomSqlInsert()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getCustomSqlUpdate()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getCustomSqlDelete()"], ["java.lang.String[]", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getSynchronizedTableNames()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getToolingHintContext()"], ["void", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.injectHierarchy(org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl)"], ["org.hibernate.boot.model.source.spi.EntityHierarchySource", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getHierarchy()"], ["java.util.Map<java.lang.String, org.hibernate.boot.model.source.spi.SecondaryTableSource>", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.getSecondaryTableMap()"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.boot.model.source.internal.hbm.AbstractEntitySourceImpl.quoteIdentifiersLocalToEntity()"], ["org.hibernate.boot.model.source.internal.hbm.Helper", "org.hibernate.boot.model.source.internal.hbm.Helper()"], ["org.hibernate.boot.model.source.spi.InheritanceType", "org.hibernate.boot.model.source.internal.hbm.Helper.interpretInheritanceType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition)"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.Helper.buildCustomSql(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.source.internal.hbm.Helper.createCaching(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["org.hibernate.boot.model.Caching", "org.hibernate.boot.model.source.internal.hbm.Helper.createNaturalIdCaching(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.Helper.getPropertyAccessorName(java.lang.String, boolean, java.lang.String)"], ["<T> T", "org.hibernate.boot.model.source.internal.hbm.Helper.getValue(T, T)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.Helper.extractParameters(java.util.List<org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType>)"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.Helper.createTableSource(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.TableInformationContainer, org.hibernate.boot.model.source.internal.hbm.Helper$InLineViewNameInferrer)"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.Helper.createTableSource(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.TableInformationContainer, org.hibernate.boot.model.source.internal.hbm.Helper$InLineViewNameInferrer, java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.Helper.interpretSizeSource(java.lang.Integer, java.lang.Integer, java.lang.Integer)"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.Helper.interpretSizeSource(java.lang.Integer, java.lang.String, java.lang.String)"], ["java.lang.Class", "org.hibernate.boot.model.source.internal.hbm.Helper.reflectedPropertyClass(org.hibernate.boot.spi.MetadataBuildingContext, java.lang.String, java.lang.String)"], ["java.lang.Class", "org.hibernate.boot.model.source.internal.hbm.Helper.reflectedPropertyClass(org.hibernate.boot.spi.MetadataBuildingContext, java.lang.Class, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$DelayedPropertyReferenceHandlerImpl", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$DelayedPropertyReferenceHandlerImpl(java.lang.String, java.lang.String, boolean, java.lang.String, org.hibernate.boot.jaxb.Origin)"], ["void", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$DelayedPropertyReferenceHandlerImpl.process(org.hibernate.boot.spi.InFlightMetadataCollector)"], ["org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType, org.hibernate.boot.model.source.spi.EntityNamingSource, org.hibernate.boot.model.source.internal.hbm.Helper$InLineViewNameInferrer)"], ["org.hibernate.boot.model.source.spi.TableSpecificationSource", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getTableSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getLogicalTableNameForContainedColumns()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getComment()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getFetchStyle()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.isInverse()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.isOptional()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.isCascadeDeleteEnabled()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.createForeignKeyConstraint()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getCustomSqlInsert()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getCustomSqlUpdate()"], ["org.hibernate.boot.model.CustomSql", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl.getCustomSqlDelete()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata[]", "org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata.values()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata.getElementName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata.isInherentlySingleColumn()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata.canBeNamed()"], ["org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.isNullable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOneAttributeColumnsAndFormulasSource.isUnique()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$11.getEntityNaming()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$11.getBuildingContext()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.ConfigParameterHelper.extractConfigParameters(org.hibernate.boot.jaxb.hbm.spi.ConfigParameterContainer)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder(org.hibernate.boot.spi.MappingDefaults)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder.setFetchTiming(org.hibernate.engine.FetchTiming)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder.setFetchStyle(org.hibernate.engine.FetchStyle)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder.setBatchSize(java.lang.Integer)"], ["void", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder.setExtraLazy(boolean)"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl", "org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsPluralAttributeImpl$Builder.createPluralAttributeFetchCharacteristics()"], ["org.hibernate.boot.model.source.internal.hbm.MappingDocument", "org.hibernate.boot.model.source.internal.hbm.MappingDocument(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping, org.hibernate.boot.jaxb.Origin, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getDocumentRoot()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getToolingHintContext()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.determineEntityName(org.hibernate.boot.jaxb.hbm.spi.EntityInfo)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.determineEntityName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.qualifyClassName(java.lang.String)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.findEntityBinding(java.lang.String, java.lang.String)"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getOrigin()"], ["org.hibernate.boot.spi.BootstrapContext", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getBootstrapContext()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getBuildingOptions()"], ["org.hibernate.boot.spi.MappingDefaults", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getMappingDefaults()"], ["org.hibernate.boot.spi.InFlightMetadataCollector", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getMetadataCollector()"], ["org.hibernate.boot.spi.ClassLoaderAccess", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getClassLoaderAccess()"], ["org.hibernate.boot.model.naming.ObjectNameNormalizer", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.getObjectNameNormalizer()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.prepare()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processTypeDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processQueryRenames()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processFilterDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processFetchProfiles()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processAuxiliaryDatabaseObjectDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processNamedQueries()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processIdentifierGenerators()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.prepareForEntityHierarchyProcessing()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processEntityHierarchies(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.postProcessEntityHierarchies()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.processResultSetMappings()"], ["void", "org.hibernate.boot.model.source.internal.hbm.MappingDocument.finishUp()"], ["org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeIdBagSecondPass", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$PluralAttributeIdBagSecondPass(org.hibernate.boot.model.source.internal.hbm.ModelBinder, org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource, org.hibernate.mapping.Collection)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$3.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$2.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$1.getSourceName()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.getEntityNaming()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.getBuildingContext()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.getDiscriminatorRelationalValueSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.getExplicitHibernateTypeName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.isForced()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$2.isInserted()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeKeySourceImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType)"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getPropertyAccessorName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getCascadeStyleName()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.isUsedInOptimisticLocking()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ManyToOnePropertySource.isLazy()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource$Nature", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getNature()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getContainingTableName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getName()"], ["org.hibernate.boot.model.TruthValue", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.isNullable()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getDefaultValue()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getSqlType()"], ["org.hibernate.boot.model.source.spi.JdbcDataType", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getDatatype()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getSizeSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getReadFragment()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getWriteFragment()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getCheckCondition()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.ColumnAttributeSourceImpl.getComment()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl$1.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SecondaryTableSourceImpl$1.isNullable()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$ManyToOneColumnBinder$1.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.AttributesHelper$Callback, org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceContainer, java.util.List, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType)"], ["org.hibernate.boot.model.JavaTypeDescriptor", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getTypeDescriptor()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getParentReferenceAttributeName()"], ["java.util.Map<org.hibernate.EntityMode, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getTuplizerClassMap()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.isDynamic()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.isUnique()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getLocalMetadataBuildingContext()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.EmbeddableSourceVirtualImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl.getXmlNodeName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl.isOrdered()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceBagImpl.getOrder()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$1.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$1.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.AttributesHelper$1.getToolingHintContextBaselineForEmbeddable()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.getSourceName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.isUnique()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceManyToManyImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl.getIndexSource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl.getXmlNodeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceArrayImpl.getElementClass()"], ["org.hibernate.boot.model.source.internal.hbm.AbstractPluralAssociationElementSourceImpl", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAssociationElementSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.PluralAttributeSource)"], ["org.hibernate.boot.model.source.spi.AttributeSource", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAssociationElementSourceImpl.getAttributeSource()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractPluralAssociationElementSourceImpl.isMappedBy()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$2.getTypeSource()"], ["org.hibernate.boot.model.source.spi.RelationalValueSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$2.getRelationalValueSource()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$2.getValueMappings()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$2.getAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl$2.getBuildingContext()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeySourceBasicImpl$1.getSizeSource()"], ["org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType, java.lang.String, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getSingularAttributeNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getSourceType()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isSingular()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getAttributePath()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isVirtualAttribute()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getGenerationTiming()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getNaturalIdMutability()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.AnyDiscriminatorSource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getDiscriminatorSource()"], ["org.hibernate.boot.model.source.spi.AnyKeySource", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getKeySource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.getCascadeStyleName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.SingularAttributeSourceAnyImpl.isLazy()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$9.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.AttributeSourceContainer, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType)"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getSingularAttributeNature()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isInsertable()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isUpdatable()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isBytecodeLazy()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getAttributePath()"], ["org.hibernate.boot.model.source.internal.hbm.HibernateTypeSourceImpl", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getPropertyAccessorName()"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getAttributeRole()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isIncludedInOptimisticLocking()"], ["org.hibernate.boot.model.source.internal.hbm.FetchCharacteristicsSingularAssociationImpl", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isVirtualAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.areValuesNullableByDefault()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getReferencedEntityAttributeName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getReferencedEntityName()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isEmbedXml()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isUnique()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getForeignKeyDirection()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getCascadeStyleName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getExplicitForeignKeyName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.isCascadeDeleteEnabled()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getToolingHintContext()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristicsSingularAssociation", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getTypeInformation()"], ["org.hibernate.boot.model.source.spi.FetchCharacteristics", "org.hibernate.boot.model.source.internal.hbm.CompositeIdentifierSingularAttributeSourceManyToOneImpl.getFetchCharacteristics()"], ["org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder()"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.bind(org.hibernate.boot.jaxb.hbm.spi.ResultSetMappingBindingDefinition, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext)"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.bind(org.hibernate.boot.jaxb.hbm.spi.ResultSetMappingBindingDefinition, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, java.lang.String)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.extractReturnDescription(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.extractReturnDescription(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, int)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.extractReturnDescription(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, int)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn", "org.hibernate.boot.model.source.internal.hbm.ResultSetMappingBinder.extractReturnDescription(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType, org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, int)"], ["org.hibernate.boot.model.source.spi.AttributeRole", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl$1.getAttributeRoleBase()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl$1.getAttributePathBase()"], ["org.hibernate.boot.model.source.spi.ToolingHintContext", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeElementSourceEmbeddedImpl$1.getToolingHintContextBaselineForEmbeddable()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$1.getColumnAttribute()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$1.getSizeSource()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceIdBagImpl$1.getColumnOrFormulaElements()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.model.source.internal.hbm.ModelBinder$AbstractPluralAttributeSecondPass$2.determineImplicitName(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext)"], ["org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl.getExplicitSchemaName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl.getExplicitCatalogName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl.getSelectStatement()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl.getLogicalName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.InLineViewSourceImpl.getComment()"], ["org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder()"], ["void", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder.processNamedQuery(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder.processNamedQuery(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType, java.lang.String)"], ["void", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder.processNamedNativeQuery(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType)"], ["void", "org.hibernate.boot.model.source.internal.hbm.NamedQueryBinder.processNamedNativeQuery(org.hibernate.boot.model.source.internal.hbm.HbmLocalMetadataBuildingContext, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType, org.hibernate.boot.model.source.spi.AttributeSourceContainer)"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl.getIndexSource()"], ["org.hibernate.boot.model.source.spi.PluralAttributeNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl.getNature()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceListImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType)"], ["org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.internal.hbm.PluralAttributeSourceMapImpl, org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getReferencedEntityName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getExplicitForeignKeyName()"], ["org.hibernate.boot.model.source.spi.PluralAttributeIndexNature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getNature()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getXmlNodeName()"], ["org.hibernate.boot.model.source.spi.PluralAttributeMapKeySource$Nature", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.getMapKeyNature()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.isReferencedEntityAttribute()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.areValuesIncludedInInsertByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.areValuesIncludedInUpdateByDefault()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.PluralAttributeMapKeyManyToManySourceImpl.areValuesNullableByDefault()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getExplicitCatalogName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getExplicitSchemaName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getExplicitTableName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getRowId()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getComment()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TableSourceImpl.getCheckConstraint()"], ["org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl(org.hibernate.boot.model.source.internal.hbm.MappingDocument, org.hibernate.boot.model.source.spi.EmbeddedAttributeMapping, org.hibernate.boot.model.source.spi.EmbeddableSource, org.hibernate.boot.model.source.spi.NaturalIdMutability)"], ["org.hibernate.boot.model.source.spi.EmbeddableSource", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getEmbeddableSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getName()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.isSingular()"], ["boolean", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.isVirtualAttribute()"], ["org.hibernate.boot.model.source.spi.SingularAttributeNature", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getSingularAttributeNature()"], ["org.hibernate.boot.model.source.spi.HibernateTypeSource", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getTypeInformation()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getPropertyAccessorName()"], ["org.hibernate.boot.model.source.spi.NaturalIdMutability", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getNaturalIdMutability()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.model.source.internal.hbm.AbstractSingularAttributeSourceEmbeddedImpl.getGenerationTiming()"], ["org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl(org.hibernate.mapping.PersistentClass)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl.getEntityName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl.getClassName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl.getJpaEntityName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityNamingSourceImpl.getTypeName()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl$1.getSourceName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl$1.getColumnAttribute()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.TimestampAttributeSourceImpl$1.isNullable()"], ["org.hibernate.boot.model.source.internal.hbm.XmlElementMetadata", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getSourceType()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getSourceName()"], ["org.hibernate.boot.model.source.spi.SizeSource", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getSizeSource()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getFormulaAttribute()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getColumnAttribute()"], ["java.util.List", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.getColumnOrFormulaElements()"], ["java.lang.Boolean", "org.hibernate.boot.model.source.internal.hbm.EntityHierarchySourceImpl$1.isNullable()"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, boolean, org.hibernate.cache.spi.access.AccessType)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitSchemaName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitCatalogName()"], ["boolean", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.shouldImplicitlyQuoteIdentifiers()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitIdColumnName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitTenantIdColumnName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitDiscriminatorColumnName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitPackageName()"], ["boolean", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.isAutoImportEnabled()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitCascadeStyleName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitPropertyAccessorName()"], ["boolean", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.areEntitiesImplicitlyLazy()"], ["boolean", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.areCollectionsImplicitlyLazy()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults.getImplicitCacheAccessType()"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder(org.hibernate.boot.spi.MappingDefaults)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitSchemaName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitCatalogName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitlyQuoteIdentifiers(boolean)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitIdColumnName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitTenantIdColumnName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitDiscriminatorColumnName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitPackageName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setAutoImportEnabled(boolean)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitCascadeStyleName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitPropertyAccessorName(java.lang.String)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setEntitiesImplicitlyLazy(boolean)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setPluralAttributesImplicitlyLazy(boolean)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.setImplicitCacheAccessType(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.boot.model.source.internal.OverriddenMappingDefaults", "org.hibernate.boot.model.source.internal.OverriddenMappingDefaults$Builder.build()"], ["org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$AttributeConverterManager", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$AttributeConverterManager(org.hibernate.boot.internal.MetadataBuildingContextRootImpl)"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$AttributeConverterManager.addAttributeConverter(org.hibernate.boot.AttributeConverterInfo)"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$AttributeConverterManager.addAttributeConverter(org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$AttributeConverterManager.addAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["java.lang.String", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$1.getDefaultSchemaName()"], ["java.lang.String", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$1.getDefaultCatalogName()"], ["boolean", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl$1.shouldImplicitlyQuoteIdentifiers()"], ["org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl(org.hibernate.boot.model.process.spi.ManagedResources, org.hibernate.boot.internal.MetadataBuildingContextRootImpl, org.jboss.jandex.IndexView)"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.prepare()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processTypeDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processQueryRenames()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processNamedQueries()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processAuxiliaryDatabaseObjectDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processIdentifierGenerators()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processFilterDefinitions()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processFetchProfiles()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.prepareForEntityHierarchyProcessing()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.postProcessEntityHierarchies()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processResultSetMappings()"], ["void", "org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.finishUp()"], ["org.hibernate.boot.model.TypeDefinition", "org.hibernate.boot.model.TypeDefinition(java.lang.String, java.lang.Class, java.lang.String[], java.util.Map<java.lang.String, java.lang.String>)"], ["org.hibernate.boot.model.TypeDefinition", "org.hibernate.boot.model.TypeDefinition(java.lang.String, java.lang.Class, java.lang.String[], java.util.Properties)"], ["java.lang.String", "org.hibernate.boot.model.TypeDefinition.getName()"], ["java.lang.Class", "org.hibernate.boot.model.TypeDefinition.getTypeImplementorClass()"], ["java.lang.String[]", "org.hibernate.boot.model.TypeDefinition.getRegistrationKeys()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.model.TypeDefinition.getParameters()"], ["java.util.Properties", "org.hibernate.boot.model.TypeDefinition.getParametersAsProperties()"], ["boolean", "org.hibernate.boot.model.TypeDefinition.equals(java.lang.Object)"], ["int", "org.hibernate.boot.model.TypeDefinition.hashCode()"], ["java.lang.String", "org.hibernate.boot.model.TypeDefinition.toString()"], ["org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder(org.hibernate.boot.SessionFactoryBuilder)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyValidatorFactory(java.lang.Object)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyBeanManager(java.lang.Object)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyName(java.lang.String)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyNameAsJndiName(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyAutoClosing(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyAutoFlushing(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStatisticsSupport(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyInterceptor(org.hibernate.Interceptor)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStatementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.addSessionFactoryObservers(org.hibernate.SessionFactoryObserver...)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyCustomEntityDirtinessStrategy(org.hibernate.CustomEntityDirtinessStrategy)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.addEntityNameResolver(org.hibernate.EntityNameResolver...)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyEntityNotFoundDelegate(org.hibernate.proxy.EntityNotFoundDelegate)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyIdentifierRollbackSupport(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyDefaultEntityMode(org.hibernate.EntityMode)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyNullabilityChecking(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyLazyInitializationOutsideTransaction(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyEntityTuplizerFactory(org.hibernate.tuple.entity.EntityTuplizerFactory)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyEntityTuplizer(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyMultiTableBulkIdStrategy(org.hibernate.hql.spi.id.MultiTableBulkIdStrategy)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyTempTableDdlTransactionHandling(org.hibernate.boot.TempTableDdlTransactionHandling)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyBatchFetchStyle(org.hibernate.loader.BatchFetchStyle)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyDelayedEntityLoaderCreations(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyDefaultBatchFetchSize(int)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyMaximumFetchDepth(int)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyDefaultNullPrecedence(org.hibernate.NullPrecedence)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyOrderingOfInserts(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyOrderingOfUpdates(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyMultiTenancyStrategy(org.hibernate.MultiTenancyStrategy)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyJtaTrackingByThread(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyPreferUserTransactions(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyQuerySubstitutions(java.util.Map)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStrictJpaQueryLanguageCompliance(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyNamedQueryCheckingOnStartup(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applySecondLevelCacheSupport(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyQueryCacheSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyTimestampsCacheFactory(org.hibernate.cache.spi.TimestampsCacheFactory)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyCacheRegionPrefix(java.lang.String)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyMinimalPutsForCaching(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStructuredCacheEntries(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyDirectReferenceCaching(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyAutomaticEvictionOfCollectionCaches(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyJdbcBatchSize(int)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyJdbcBatchingForVersionedEntities(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyScrollableResultsSupport(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyResultSetsWrapping(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyGetGeneratedKeysSupport(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyJdbcFetchSize(int)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyConnectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyConnectionProviderDisablesAutoCommit(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applySqlComments(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.allowOutOfTransactionUpdateOperations(boolean)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.enableReleaseResourcesOnCloseEnabled(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.enableJpaQueryCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.enableJpaTransactionCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.enableJpaListCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.enableJpaClosedCompliance(boolean)"], ["<S extends org.hibernate.boot.SessionFactoryBuilder> S", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.unwrap(java.lang.Class<S>)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStatelessInterceptor(java.util.function.Supplier<? extends org.hibernate.Interceptor>)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyStatelessInterceptor(java.lang.Class<? extends org.hibernate.Interceptor>)"], ["T", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.applyConnectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["org.hibernate.SessionFactory", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilder.build()"], ["org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions(org.hibernate.boot.spi.SessionFactoryOptions)"], ["java.lang.String", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getUuid()"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getServiceRegistry()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isJpaBootstrap()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isJtaTransactionAccessEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isAllowRefreshDetachedEntity()"], ["java.lang.Object", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getBeanManagerReference()"], ["java.lang.Object", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getValidatorFactoryReference()"], ["java.lang.String", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getSessionFactoryName()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isSessionFactoryNameAlsoJndiName()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isFlushBeforeCompletionEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isStatisticsEnabled()"], ["org.hibernate.Interceptor", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getInterceptor()"], ["org.hibernate.resource.jdbc.spi.StatementInspector", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getStatementInspector()"], ["org.hibernate.SessionFactoryObserver[]", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getSessionFactoryObservers()"], ["org.hibernate.cfg.BaselineSessionEventsListenerBuilder", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getBaselineSessionEventsListenerBuilder()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isIdentifierRollbackEnabled()"], ["org.hibernate.EntityMode", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getDefaultEntityMode()"], ["org.hibernate.tuple.entity.EntityTuplizerFactory", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getEntityTuplizerFactory()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isCheckNullability()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isInitializeLazyStateOutsideTransactionsEnabled()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getMultiTableBulkIdStrategy()"], ["org.hibernate.boot.TempTableDdlTransactionHandling", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getTempTableDdlTransactionHandling()"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getBatchFetchStyle()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isDelayBatchFetchLoaderCreationsEnabled()"], ["int", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getDefaultBatchFetchSize()"], ["java.lang.Integer", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getMaximumFetchDepth()"], ["org.hibernate.NullPrecedence", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getDefaultNullPrecedence()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isOrderUpdatesEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isOrderInsertsEnabled()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getMultiTenancyStrategy()"], ["org.hibernate.context.spi.CurrentTenantIdentifierResolver", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getCurrentTenantIdentifierResolver()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isJtaTrackByThread()"], ["java.util.Map", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getQuerySubstitutions()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isNamedQueryStartupCheckingEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isConventionalJavaConstants()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isProcedureParameterNullPassingEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isCollectionJoinSubqueryRewriteEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isAllowOutOfTransactionUpdateOperations()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isReleaseResourcesOnCloseEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isSecondLevelCacheEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isQueryCacheEnabled()"], ["org.hibernate.cache.spi.TimestampsCacheFactory", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getTimestampsCacheFactory()"], ["java.lang.String", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getCacheRegionPrefix()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isMinimalPutsEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isStructuredCacheEntriesEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isDirectReferenceCacheEntriesEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isAutoEvictCollectionCache()"], ["org.hibernate.boot.SchemaAutoTooling", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getSchemaAutoTooling()"], ["int", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getJdbcBatchSize()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isJdbcBatchVersionedData()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isScrollableResultSetsEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isWrapResultSetsEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isGetGeneratedKeysEnabled()"], ["java.lang.Integer", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getJdbcFetchSize()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getPhysicalConnectionHandlingMode()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.doesConnectionProviderDisableAutoCommit()"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getConnectionReleaseMode()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isCommentsEnabled()"], ["org.hibernate.CustomEntityDirtinessStrategy", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getCustomEntityDirtinessStrategy()"], ["org.hibernate.EntityNameResolver[]", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getEntityNameResolvers()"], ["org.hibernate.proxy.EntityNotFoundDelegate", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getEntityNotFoundDelegate()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getCustomSqlFunctionMap()"], ["void", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.setCheckNullability(boolean)"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isPreferUserTransaction()"], ["java.lang.Class<? extends org.hibernate.Interceptor>", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getStatelessInterceptorImplementor()"], ["java.util.function.Supplier<? extends org.hibernate.Interceptor>", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getStatelessInterceptorImplementorSupplier()"], ["java.util.TimeZone", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getJdbcTimeZone()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isQueryParametersValidationEnabled()"], ["org.hibernate.query.criteria.LiteralHandlingMode", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getCriteriaLiteralHandlingMode()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.jdbcStyleParamsZeroBased()"], ["org.hibernate.jpa.spi.JpaCompliance", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getJpaCompliance()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isFailOnPaginationOverCollectionFetchEnabled()"], ["org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getImmutableEntityUpdateQueryHandlingMode()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.inClauseParameterPaddingEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.nativeExceptionHandling51Compliance()"], ["int", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.getQueryStatisticsMaxSize()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.areJPACallbacksEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isEnhancementAsProxyEnabled()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryOptions.isOmitJoinOfSuperclassTablesEnabled()"], ["org.hibernate.boot.spi.ClassLoaderAccessDelegateImpl", "org.hibernate.boot.spi.ClassLoaderAccessDelegateImpl()"], ["<T> java.lang.Class<T>", "org.hibernate.boot.spi.ClassLoaderAccessDelegateImpl.classForName(java.lang.String)"], ["java.net.URL", "org.hibernate.boot.spi.ClassLoaderAccessDelegateImpl.locateResource(java.lang.String)"], ["org.hibernate.boot.spi.BasicTypeRegistration", "org.hibernate.boot.spi.BasicTypeRegistration(org.hibernate.type.BasicType)"], ["org.hibernate.boot.spi.BasicTypeRegistration", "org.hibernate.boot.spi.BasicTypeRegistration(org.hibernate.type.BasicType, java.lang.String[])"], ["org.hibernate.boot.spi.BasicTypeRegistration", "org.hibernate.boot.spi.BasicTypeRegistration(org.hibernate.usertype.UserType, java.lang.String[])"], ["org.hibernate.boot.spi.BasicTypeRegistration", "org.hibernate.boot.spi.BasicTypeRegistration(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["org.hibernate.type.BasicType", "org.hibernate.boot.spi.BasicTypeRegistration.getBasicType()"], ["java.lang.String[]", "org.hibernate.boot.spi.BasicTypeRegistration.getRegistrationKeys()"], ["org.hibernate.boot.spi.MetadataBuilderImplementor", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.getDelegate()"], ["org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor(org.hibernate.boot.spi.MetadataBuilderImplementor)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyImplicitSchemaName(java.lang.String)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyImplicitCatalogName(java.lang.String)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyImplicitNamingStrategy(org.hibernate.boot.model.naming.ImplicitNamingStrategy)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyPhysicalNamingStrategy(org.hibernate.boot.model.naming.PhysicalNamingStrategy)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applySharedCacheMode(javax.persistence.SharedCacheMode)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAccessType(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyIndexView(org.jboss.jandex.IndexView)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyScanOptions(org.hibernate.boot.archive.scan.spi.ScanOptions)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyScanEnvironment(org.hibernate.boot.archive.scan.spi.ScanEnvironment)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyScanner(org.hibernate.boot.archive.scan.spi.Scanner)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyArchiveDescriptorFactory(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.enableNewIdentifierGeneratorSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.enableExplicitDiscriminatorsForJoinedSubclassSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.enableImplicitDiscriminatorsForJoinedSubclassSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.enableImplicitForcingOfDiscriminatorsInSelect(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.enableGlobalNationalizedCharacterDataSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyBasicType(org.hibernate.type.BasicType)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyBasicType(org.hibernate.type.BasicType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyBasicType(org.hibernate.usertype.UserType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyBasicType(org.hibernate.usertype.CompositeUserType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyTypes(org.hibernate.boot.model.TypeContributor)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyCacheRegionDefinition(org.hibernate.boot.CacheRegionDefinition)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyTempClassLoader(java.lang.ClassLoader)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applySourceProcessOrdering(org.hibernate.cfg.MetadataSourceType...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAttributeConverter(org.hibernate.cfg.AttributeConverterDefinition)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>, boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAttributeConverter(javax.persistence.AttributeConverter)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyAttributeConverter(javax.persistence.AttributeConverter, boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.applyIdGenerationTypeInterpreter(org.hibernate.boot.model.IdGeneratorStrategyInterpreter)"], ["<M extends org.hibernate.boot.MetadataBuilder> M", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.unwrap(java.lang.Class<M>)"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.getMetadataBuildingOptions()"], ["org.hibernate.boot.Metadata", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuilderImplementor.build()"], ["org.hibernate.boot.spi.InFlightMetadataCollector$DuplicateSecondaryTableException", "org.hibernate.boot.spi.InFlightMetadataCollector$DuplicateSecondaryTableException(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.spi.XmlMappingBinderAccess", "org.hibernate.boot.spi.XmlMappingBinderAccess(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.boot.jaxb.internal.MappingBinder", "org.hibernate.boot.spi.XmlMappingBinderAccess.getMappingBinder()"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.spi.XmlMappingBinderAccess.bind(java.lang.String)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.spi.XmlMappingBinderAccess.bind(java.io.File)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.spi.XmlMappingBinderAccess.bind(org.hibernate.boot.archive.spi.InputStreamAccess)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.spi.XmlMappingBinderAccess.bind(java.io.InputStream)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.spi.XmlMappingBinderAccess.bind(java.net.URL)"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean isAllowRefreshDetachedEntity()"], ["java.util.function.Supplier<? extends org.hibernate.Interceptor>", "org.hibernate.boot.spi.SessionFactoryOptions.getStatelessInterceptorImplementorSupplier()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean isStrictJpaQueryLanguageCompliance()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean doesConnectionProviderDisableAutoCommit()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean isQueryParametersValidationEnabled()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.org.hibernate.query.criteria.LiteralHandlingMode getCriteriaLiteralHandlingMode()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode getImmutableEntityUpdateQueryHandlingMode()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean inClauseParameterPaddingEnabled()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean nativeExceptionHandling51Compliance()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.int getQueryStatisticsMaxSize()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean isPostInsertIdentifierDelayableEnabled()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean areJPACallbacksEnabled()"], ["default", "org.hibernate.boot.spi.SessionFactoryOptions.boolean isEnhancementAsProxyEnabled()"], ["org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions(org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getServiceRegistry()"], ["org.hibernate.boot.spi.MappingDefaults", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getMappingDefaults()"], ["org.jboss.jandex.IndexView", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getJandexView()"], ["org.hibernate.boot.archive.scan.spi.ScanOptions", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getScanOptions()"], ["org.hibernate.boot.archive.scan.spi.ScanEnvironment", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getScanEnvironment()"], ["java.lang.Object", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getScanner()"], ["org.hibernate.boot.archive.spi.ArchiveDescriptorFactory", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getArchiveDescriptorFactory()"], ["java.lang.ClassLoader", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getTempClassLoader()"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategy", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getImplicitNamingStrategy()"], ["org.hibernate.boot.model.naming.PhysicalNamingStrategy", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getPhysicalNamingStrategy()"], ["org.hibernate.annotations.common.reflection.ReflectionManager", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getReflectionManager()"], ["javax.persistence.SharedCacheMode", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getSharedCacheMode()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getImplicitCacheAccessType()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getMultiTenancyStrategy()"], ["org.hibernate.boot.model.IdGeneratorStrategyInterpreter", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getIdGenerationTypeInterpreter()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.ignoreExplicitDiscriminatorsForJoinedInheritance()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.createImplicitDiscriminatorsForJoinedInheritance()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.shouldImplicitlyForceDiscriminatorInSelect()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.useNationalizedCharacterData()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.isSpecjProprietarySyntaxEnabled()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getSqlFunctions()"], ["void", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.apply(org.hibernate.boot.spi.JpaOrmXmlPersistenceUnitDefaultAware$JpaOrmXmlPersistenceUnitDefaults)"], ["java.lang.String", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.getSchemaCharset()"], ["boolean", "org.hibernate.boot.spi.AbstractDelegatingMetadataBuildingOptions.isXmlMappingEnabled()"], ["org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilderImplementor", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilderImplementor(org.hibernate.boot.spi.SessionFactoryBuilderImplementor)"], ["void", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilderImplementor.disableJtaTransactionAccess()"], ["void", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilderImplementor.enableJdbcStyleParamsZeroBased()"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.boot.spi.AbstractDelegatingSessionFactoryBuilderImplementor.buildSessionFactoryOptions()"], ["default", "org.hibernate.boot.spi.InFlightMetadataCollector.void addAttributeConverter(org.hibernate.cfg.AttributeConverterDefinition)"], ["default", "org.hibernate.boot.spi.MetadataBuildingOptions.java.lang.String getSchemaCharset()"], ["default", "org.hibernate.boot.spi.MetadataBuildingOptions.boolean isXmlMappingEnabled()"], ["default", "org.hibernate.boot.spi.SessionFactoryBuilderImplementor.void disableRefreshDetachedEntity()"], ["org.hibernate.boot.spi.AbstractDelegatingMetadata", "org.hibernate.boot.spi.AbstractDelegatingMetadata(org.hibernate.boot.spi.MetadataImplementor)"], ["org.hibernate.id.factory.IdentifierGeneratorFactory", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getIdentifierGeneratorFactory()"], ["org.hibernate.type.Type", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getIdentifierType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getIdentifierPropertyName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getReferencedPropertyType(java.lang.String, java.lang.String)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getSessionFactoryBuilder()"], ["org.hibernate.SessionFactory", "org.hibernate.boot.spi.AbstractDelegatingMetadata.buildSessionFactory()"], ["java.util.UUID", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getUUID()"], ["org.hibernate.boot.model.relational.Database", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getDatabase()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getEntityBinding(java.lang.String)"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getCollectionBinding(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getImports()"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getNamedQueryDefinition(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getNamedNativeQueryDefinition(java.lang.String)"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getResultSetMapping(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getResultSetMappingDefinitions()"], ["org.hibernate.boot.model.TypeDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getTypeDefinition(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.FilterDefinition>", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getFilterDefinitions()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getFilterDefinition(java.lang.String)"], ["org.hibernate.mapping.FetchProfile", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getFetchProfile(java.lang.String)"], ["org.hibernate.cfg.annotations.NamedEntityGraphDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getNamedEntityGraph(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedEntityGraphDefinition>", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getNamedEntityGraphs()"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getIdentifierGenerator(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getSqlFunctionMap()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getMetadataBuildingOptions()"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getTypeConfiguration()"], ["org.hibernate.type.TypeResolver", "org.hibernate.boot.spi.AbstractDelegatingMetadata.getTypeResolver()"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.boot.spi.AbstractDelegatingMetadata.buildNamedQueryRepository(org.hibernate.internal.SessionFactoryImpl)"], ["void", "org.hibernate.boot.spi.AbstractDelegatingMetadata.validate()"], ["org.hibernate.boot.SchemaAutoTooling[]", "org.hibernate.boot.SchemaAutoTooling.values()"], ["org.hibernate.boot.SchemaAutoTooling", "org.hibernate.boot.SchemaAutoTooling.valueOf(java.lang.String)"], ["org.hibernate.boot.SchemaAutoTooling", "org.hibernate.boot.SchemaAutoTooling.interpret(java.lang.String)"], ["org.hibernate.boot.CacheRegionDefinition$CacheRegionType[]", "org.hibernate.boot.CacheRegionDefinition$CacheRegionType.values()"], ["org.hibernate.boot.CacheRegionDefinition$CacheRegionType", "org.hibernate.boot.CacheRegionDefinition$CacheRegionType.valueOf(java.lang.String)"], ["org.hibernate.boot.InvalidMappingException", "org.hibernate.boot.InvalidMappingException(org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.InvalidMappingException", "org.hibernate.boot.InvalidMappingException(org.hibernate.boot.jaxb.Origin, java.lang.Throwable)"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.InvalidMappingException.getOrigin()"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources()"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.boot.spi.XmlMappingBinderAccess", "org.hibernate.boot.MetadataSources.getXmlMappingBinderAccess()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.boot.MetadataSources.getServiceRegistry()"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.MetadataSources.getMetadataBuilder()"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.MetadataSources.getMetadataBuilder(org.hibernate.boot.registry.StandardServiceRegistry)"], ["org.hibernate.boot.Metadata", "org.hibernate.boot.MetadataSources.buildMetadata()"], ["org.hibernate.boot.Metadata", "org.hibernate.boot.MetadataSources.buildMetadata(org.hibernate.boot.registry.StandardServiceRegistry)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addAnnotatedClass(java.lang.Class)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addAnnotatedClassName(java.lang.String)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addPackage(java.lang.String)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addPackage(java.lang.Package)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addClass(java.lang.Class)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addResource(java.lang.String)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addFile(java.lang.String)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addFile(java.io.File)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addCacheableFile(java.lang.String)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addCacheableFile(java.io.File)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addCacheableFileStrictly(java.io.File)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addInputStream(org.hibernate.boot.archive.spi.InputStreamAccess)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addInputStream(java.io.InputStream)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addURL(java.net.URL)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addDocument(org.w3c.dom.Document)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addJar(java.io.File)"], ["org.hibernate.boot.MetadataSources", "org.hibernate.boot.MetadataSources.addDirectory(java.io.File)"], ["org.hibernate.boot.registry.classloading.spi.ClassLoadingException", "org.hibernate.boot.registry.classloading.spi.ClassLoadingException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.boot.registry.classloading.spi.ClassLoadingException", "org.hibernate.boot.registry.classloading.spi.ClassLoadingException(java.lang.String)"], ["org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl()"], ["org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl(java.lang.ClassLoader)"], ["org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl(java.util.Collection<java.lang.ClassLoader>, org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence)"], ["org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(java.util.Map)"], ["<T> java.lang.Class<T>", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.classForName(java.lang.String)"], ["java.net.URL", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResource(java.lang.String)"], ["java.io.InputStream", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResourceStream(java.lang.String)"], ["<S> java.util.Collection<S>", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.loadJavaServices(java.lang.Class<S>)"], ["<T> T", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.generateProxy(java.lang.reflect.InvocationHandler, java.lang.Class...)"], ["<T> T", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.workWithClassLoader(org.hibernate.boot.registry.classloading.spi.ClassLoaderService$Work<T>)"], ["void", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.stop()"], ["boolean", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$2.hasNext()"], ["java.lang.ClassLoader", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$2.next()"], ["java.lang.Object", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$2.next()"], ["boolean", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$3.hasNext()"], ["java.lang.ClassLoader", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$3.next()"], ["java.lang.Object", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$3.next()"], ["boolean", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$1.hasNext()"], ["java.lang.ClassLoader", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$1.next()"], ["java.lang.Object", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$1.next()"], ["org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence[]", "org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence.values()"], ["org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence", "org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence.valueOf(java.lang.String)"], ["org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader(java.util.LinkedHashSet<java.lang.ClassLoader>, org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence)"], ["org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl$1.run()"], ["java.lang.Object", "org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl$1.run()"], ["boolean", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$4.hasMoreElements()"], ["java.net.URL", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$4.nextElement()"], ["java.lang.Object", "org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$4.nextElement()"], ["void", "org.hibernate.boot.registry.classloading.internal.AggregatedServiceLoader$ClassPathOnlyAggregatedServiceLoader.close()"], ["void", "org.hibernate.boot.registry.classloading.internal.AggregatedServiceLoader$ClassPathAndModulePathAggregatedServiceLoader.close()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.forJpa(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder(org.hibernate.boot.registry.BootstrapServiceRegistry, org.hibernate.boot.cfgxml.spi.LoadedConfig)"], ["org.hibernate.boot.cfgxml.internal.ConfigLoader", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.getConfigLoader()"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.getAggregatedCfgXml()"], ["org.hibernate.boot.registry.BootstrapServiceRegistry", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.getBootstrapServiceRegistry()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.loadProperties(java.lang.String)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.loadProperties(java.io.File)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.configure()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.configure(java.lang.String)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.configure(java.io.File)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.configure(java.net.URL)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.configure(org.hibernate.boot.cfgxml.spi.LoadedConfig)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.applySetting(java.lang.String, java.lang.Object)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.applySettings(java.util.Map)"], ["void", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.clearSettings()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.addInitiator(org.hibernate.boot.registry.StandardServiceInitiator)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.addService(java.lang.Class, org.hibernate.service.Service)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.disableAutoClose()"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.enableAutoClose()"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.build()"], ["java.util.Map", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.getSettings()"], ["void", "org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.boot.registry.internal.StandardServiceRegistryImpl", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl(org.hibernate.boot.registry.BootstrapServiceRegistry, java.util.List<org.hibernate.boot.registry.StandardServiceInitiator>, java.util.List<org.hibernate.service.internal.ProvidedService>, java.util.Map<?, ?>)"], ["org.hibernate.boot.registry.internal.StandardServiceRegistryImpl", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl(boolean, org.hibernate.boot.registry.BootstrapServiceRegistry, java.util.List<org.hibernate.boot.registry.StandardServiceInitiator>, java.util.List<org.hibernate.service.internal.ProvidedService>, java.util.Map<?, ?>)"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(org.hibernate.service.spi.ServiceInitiator<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(org.hibernate.service.spi.ServiceBinding<R>)"], ["synchronized", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.void resetAndReactivate(org.hibernate.boot.registry.BootstrapServiceRegistry, java.util.List<org.hibernate.boot.registry.StandardServiceInitiator>, java.util.List<org.hibernate.service.internal.ProvidedService>, java.util.Map<?, ?>)"], ["synchronized", "org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.void destroy()"], ["org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl()"], ["org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl(org.hibernate.boot.registry.classloading.spi.ClassLoaderService, java.util.LinkedHashSet<org.hibernate.integrator.spi.Integrator>)"], ["org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl(boolean, org.hibernate.boot.registry.classloading.spi.ClassLoaderService, java.util.LinkedHashSet<org.hibernate.integrator.spi.Integrator>)"], ["org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl(org.hibernate.boot.registry.classloading.spi.ClassLoaderService, org.hibernate.boot.registry.selector.spi.StrategySelector, org.hibernate.integrator.spi.IntegratorService)"], ["org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl(boolean, org.hibernate.boot.registry.classloading.spi.ClassLoaderService, org.hibernate.boot.registry.selector.spi.StrategySelector, org.hibernate.integrator.spi.IntegratorService)"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.getService(java.lang.Class<R>)"], ["<R extends org.hibernate.service.Service> org.hibernate.service.spi.ServiceBinding<R>", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.locateServiceBinding(java.lang.Class<R>)"], ["synchronized", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.void destroy()"], ["boolean", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.isActive()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.getParentServiceRegistry()"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.initiateService(org.hibernate.service.spi.ServiceInitiator<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.configureService(org.hibernate.service.spi.ServiceBinding<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.injectDependencies(org.hibernate.service.spi.ServiceBinding<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.startService(org.hibernate.service.spi.ServiceBinding<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.stopService(org.hibernate.service.spi.ServiceBinding<R>)"], ["synchronized", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.void registerChild(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["synchronized", "org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.void deRegisterChild(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder()"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.with(org.hibernate.integrator.spi.Integrator)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyIntegrator(org.hibernate.integrator.spi.Integrator)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.with(java.lang.ClassLoader)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyClassLoader(java.lang.ClassLoader)"], ["void", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyTcclLookupPrecedence(org.hibernate.boot.registry.classloading.internal.TcclLookupPrecedence)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.with(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyClassLoaderService(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["<T> org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.withStrategySelector(java.lang.Class<T>, java.lang.String, java.lang.Class<? extends T>)"], ["<T> org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyStrategySelector(java.lang.Class<T>, java.lang.String, java.lang.Class<? extends T>)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.withStrategySelectors(org.hibernate.boot.registry.selector.StrategyRegistrationProvider)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.applyStrategySelectors(org.hibernate.boot.registry.selector.StrategyRegistrationProvider)"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.disableAutoClose()"], ["org.hibernate.boot.registry.BootstrapServiceRegistryBuilder", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.enableAutoClose()"], ["org.hibernate.boot.registry.BootstrapServiceRegistry", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build()"], ["void", "org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.destroy(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.boot.registry.selector.spi.StrategySelectionException", "org.hibernate.boot.registry.selector.spi.StrategySelectionException(java.lang.String)"], ["org.hibernate.boot.registry.selector.spi.StrategySelectionException", "org.hibernate.boot.registry.selector.spi.StrategySelectionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.boot.registry.selector.SimpleStrategyRegistrationImpl", "org.hibernate.boot.registry.selector.SimpleStrategyRegistrationImpl(java.lang.Class<T>, java.lang.Class<? extends T>, java.lang.Iterable<java.lang.String>)"], ["org.hibernate.boot.registry.selector.SimpleStrategyRegistrationImpl", "org.hibernate.boot.registry.selector.SimpleStrategyRegistrationImpl(java.lang.Class<T>, java.lang.Class<? extends T>, java.lang.String...)"], ["java.lang.Class<? extends T>", "org.hibernate.boot.registry.selector.SimpleStrategyRegistrationImpl.getStrategyImplementation()"], ["org.hibernate.boot.registry.selector.internal.StrategySelectorBuilder", "org.hibernate.boot.registry.selector.internal.StrategySelectorBuilder()"], ["<T> void", "org.hibernate.boot.registry.selector.internal.StrategySelectorBuilder.addExplicitStrategyRegistration(java.lang.Class<T>, java.lang.Class<? extends T>, java.lang.String)"], ["<T> void", "org.hibernate.boot.registry.selector.internal.StrategySelectorBuilder.addExplicitStrategyRegistration(org.hibernate.boot.registry.selector.StrategyRegistration<T>)"], ["org.hibernate.boot.registry.selector.spi.StrategySelector", "org.hibernate.boot.registry.selector.internal.StrategySelectorBuilder.buildSelector(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.boot.registry.selector.internal.StrategySelectorImpl", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["<T> void", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(java.lang.Class<T>, java.lang.String, java.lang.Class<? extends T>)"], ["<T> void", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.unRegisterStrategyImplementor(java.lang.Class<T>, java.lang.Class<? extends T>)"], ["<T> java.lang.Class<? extends T>", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.selectStrategyImplementor(java.lang.Class<T>, java.lang.String)"], ["<T> T", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveStrategy(java.lang.Class<T>, java.lang.Object)"], ["<T> T", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveDefaultableStrategy(java.lang.Class<T>, java.lang.Object, T)"], ["<T> T", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveDefaultableStrategy(java.lang.Class<T>, java.lang.Object, java.util.concurrent.Callable<T>)"], ["<T> T", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveStrategy(java.lang.Class<T>, java.lang.Object, T, org.hibernate.boot.registry.selector.spi.StrategyCreator<T>)"], ["java.util.Collection", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.getRegisteredStrategyImplementors(java.lang.Class)"], ["<T> T", "org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.resolveStrategy(java.lang.Class<T>, java.lang.Object, java.util.concurrent.Callable<T>, org.hibernate.boot.registry.selector.spi.StrategyCreator<T>)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.boot.registry.StandardServiceRegistryBuilder$2.configure(org.hibernate.boot.cfgxml.spi.LoadedConfig)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.spi.LoadedConfig(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getSessionFactoryName()"], ["java.util.Map", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getConfigurationValues()"], ["java.util.Map<java.lang.String, org.hibernate.secure.spi.JaccPermissionDeclarations>", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getJaccPermissionsByContextId()"], ["org.hibernate.secure.spi.JaccPermissionDeclarations", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getJaccPermissions(java.lang.String)"], ["java.util.Map<org.hibernate.event.spi.EventType, java.util.Set<java.lang.String>>", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getEventListenerMap()"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.spi.LoadedConfig.consume(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration)"], ["void", "org.hibernate.boot.cfgxml.spi.LoadedConfig.addCacheRegionDefinition(org.hibernate.boot.CacheRegionDefinition)"], ["void", "org.hibernate.boot.cfgxml.spi.LoadedConfig.addEventListener(org.hibernate.event.spi.EventType, java.lang.String)"], ["org.hibernate.secure.spi.JaccPermissionDeclarations", "org.hibernate.boot.cfgxml.spi.LoadedConfig.getOrCreateJaccPermissions(java.lang.String)"], ["void", "org.hibernate.boot.cfgxml.spi.LoadedConfig.merge(org.hibernate.boot.cfgxml.spi.LoadedConfig)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.spi.LoadedConfig.baseline()"], ["org.hibernate.boot.cfgxml.spi.MappingReference", "org.hibernate.boot.cfgxml.spi.MappingReference(org.hibernate.boot.cfgxml.spi.MappingReference$Type, java.lang.String)"], ["org.hibernate.boot.cfgxml.spi.MappingReference$Type", "org.hibernate.boot.cfgxml.spi.MappingReference.getType()"], ["java.lang.String", "org.hibernate.boot.cfgxml.spi.MappingReference.getReference()"], ["org.hibernate.boot.cfgxml.spi.MappingReference", "org.hibernate.boot.cfgxml.spi.MappingReference.consume(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType)"], ["void", "org.hibernate.boot.cfgxml.spi.MappingReference.apply(org.hibernate.boot.MetadataSources)"], ["org.hibernate.boot.cfgxml.spi.MappingReference$Type[]", "org.hibernate.boot.cfgxml.spi.MappingReference$Type.values()"], ["org.hibernate.boot.cfgxml.spi.MappingReference$Type", "org.hibernate.boot.cfgxml.spi.MappingReference$Type.valueOf(java.lang.String)"], ["org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor", "org.hibernate.boot.cfgxml.internal.ConfigLoader$1.initialize()"], ["java.lang.Object", "org.hibernate.boot.cfgxml.internal.ConfigLoader$1.initialize()"], ["org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor.unmarshal(java.io.InputStream, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceInitiator", "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceInitiator()"], ["org.hibernate.boot.cfgxml.spi.CfgXmlAccessService", "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["boolean", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$ContextProvidingValidationEventHandler.handleEvent(javax.xml.bind.ValidationEvent)"], ["int", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$ContextProvidingValidationEventHandler.getLineNumber()"], ["int", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$ContextProvidingValidationEventHandler.getColumnNumber()"], ["java.lang.String", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$ContextProvidingValidationEventHandler.getMessage()"], ["org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl", "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl(java.util.Map)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl.getAggregatedConfig()"], ["org.hibernate.boot.cfgxml.internal.ConfigLoader", "org.hibernate.boot.cfgxml.internal.ConfigLoader(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.internal.ConfigLoader.loadConfigXmlResource(java.lang.String)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.internal.ConfigLoader.loadConfigXmlFile(java.io.File)"], ["org.hibernate.boot.cfgxml.spi.LoadedConfig", "org.hibernate.boot.cfgxml.internal.ConfigLoader.loadConfigXmlUrl(java.net.URL)"], ["java.util.Properties", "org.hibernate.boot.cfgxml.internal.ConfigLoader.loadProperties(java.lang.String)"], ["java.util.Properties", "org.hibernate.boot.cfgxml.internal.ConfigLoader.loadProperties(java.io.File)"], ["org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader(javax.xml.stream.XMLEventReader, java.lang.String)"], ["org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader(javax.xml.stream.XMLEventReader, javax.xml.stream.XMLEventFactory, java.lang.String)"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader.nextEvent()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor$NamespaceAddingEventReader.peek()"], ["org.hibernate.boot.internal.MetadataBuildingContextRootImpl", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl(org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.MetadataBuildingOptions, org.hibernate.boot.spi.InFlightMetadataCollector)"], ["org.hibernate.boot.spi.BootstrapContext", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getBootstrapContext()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getBuildingOptions()"], ["org.hibernate.boot.spi.MappingDefaults", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getMappingDefaults()"], ["org.hibernate.boot.spi.InFlightMetadataCollector", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getMetadataCollector()"], ["org.hibernate.boot.spi.ClassLoaderAccess", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getClassLoaderAccess()"], ["org.hibernate.boot.model.naming.ObjectNameNormalizer", "org.hibernate.boot.internal.MetadataBuildingContextRootImpl.getObjectNameNormalizer()"], ["org.hibernate.boot.internal.MetadataImpl", "org.hibernate.boot.internal.MetadataImpl(java.util.UUID, org.hibernate.boot.spi.MetadataBuildingOptions, org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory, java.util.Map<java.lang.String, org.hibernate.mapping.PersistentClass>, java.util.Map<java.lang.Class, org.hibernate.mapping.MappedSuperclass>, java.util.Map<java.lang.String, org.hibernate.mapping.Collection>, java.util.Map<java.lang.String, org.hibernate.boot.model.TypeDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.spi.FilterDefinition>, java.util.Map<java.lang.String, org.hibernate.mapping.FetchProfile>, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, org.hibernate.boot.model.IdentifierGeneratorDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition>, java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedProcedureCallDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>, java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedEntityGraphDefinition>, java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>, org.hibernate.boot.model.relational.Database, org.hibernate.boot.spi.BootstrapContext)"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.internal.MetadataImpl.getMetadataBuildingOptions()"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.internal.MetadataImpl.getTypeConfiguration()"], ["org.hibernate.type.TypeResolver", "org.hibernate.boot.internal.MetadataImpl.getTypeResolver()"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.MetadataImpl.getSessionFactoryBuilder()"], ["org.hibernate.SessionFactory", "org.hibernate.boot.internal.MetadataImpl.buildSessionFactory()"], ["java.util.UUID", "org.hibernate.boot.internal.MetadataImpl.getUUID()"], ["org.hibernate.boot.model.relational.Database", "org.hibernate.boot.internal.MetadataImpl.getDatabase()"], ["org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory", "org.hibernate.boot.internal.MetadataImpl.getIdentifierGeneratorFactory()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.boot.internal.MetadataImpl.getEntityBinding(java.lang.String)"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.internal.MetadataImpl.getCollectionBinding(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.internal.MetadataImpl.getImports()"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.boot.internal.MetadataImpl.getNamedQueryDefinition(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.boot.internal.MetadataImpl.getNamedNativeQueryDefinition(java.lang.String)"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.boot.internal.MetadataImpl.getResultSetMapping(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>", "org.hibernate.boot.internal.MetadataImpl.getResultSetMappingDefinitions()"], ["org.hibernate.boot.model.TypeDefinition", "org.hibernate.boot.internal.MetadataImpl.getTypeDefinition(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.FilterDefinition>", "org.hibernate.boot.internal.MetadataImpl.getFilterDefinitions()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.boot.internal.MetadataImpl.getFilterDefinition(java.lang.String)"], ["org.hibernate.mapping.FetchProfile", "org.hibernate.boot.internal.MetadataImpl.getFetchProfile(java.lang.String)"], ["org.hibernate.cfg.annotations.NamedEntityGraphDefinition", "org.hibernate.boot.internal.MetadataImpl.getNamedEntityGraph(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedEntityGraphDefinition>", "org.hibernate.boot.internal.MetadataImpl.getNamedEntityGraphs()"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.internal.MetadataImpl.getIdentifierGenerator(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.internal.MetadataImpl.getSqlFunctionMap()"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.boot.internal.MetadataImpl.buildNamedQueryRepository(org.hibernate.internal.SessionFactoryImpl)"], ["void", "org.hibernate.boot.internal.MetadataImpl.validate()"], ["org.hibernate.type.Type", "org.hibernate.boot.internal.MetadataImpl.getIdentifierType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.MetadataImpl.getIdentifierPropertyName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.boot.internal.MetadataImpl.getReferencedPropertyType(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.mapping.PersistentClass>", "org.hibernate.boot.internal.MetadataImpl.getEntityBindingMap()"], ["java.util.Map<java.lang.String, org.hibernate.mapping.Collection>", "org.hibernate.boot.internal.MetadataImpl.getCollectionBindingMap()"], ["java.util.Map<java.lang.String, org.hibernate.boot.model.TypeDefinition>", "org.hibernate.boot.internal.MetadataImpl.getTypeDefinitionMap()"], ["java.util.Map<java.lang.String, org.hibernate.mapping.FetchProfile>", "org.hibernate.boot.internal.MetadataImpl.getFetchProfileMap()"], ["java.util.Map<java.lang.Class, org.hibernate.mapping.MappedSuperclass>", "org.hibernate.boot.internal.MetadataImpl.getMappedSuperclassMap()"], ["java.util.Map<java.lang.String, org.hibernate.boot.model.IdentifierGeneratorDefinition>", "org.hibernate.boot.internal.MetadataImpl.getIdGeneratorDefinitionMap()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition>", "org.hibernate.boot.internal.MetadataImpl.getNamedQueryMap()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition>", "org.hibernate.boot.internal.MetadataImpl.getNamedNativeQueryMap()"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedProcedureCallDefinition>", "org.hibernate.boot.internal.MetadataImpl.getNamedProcedureCallMap()"], ["java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>", "org.hibernate.boot.internal.MetadataImpl.getSqlResultSetMappingMap()"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedEntityGraphDefinition>", "org.hibernate.boot.internal.MetadataImpl.getNamedEntityGraphMap()"], ["org.hibernate.boot.spi.BootstrapContext", "org.hibernate.boot.internal.MetadataImpl.getBootstrapContext()"], ["org.hibernate.id.factory.IdentifierGeneratorFactory", "org.hibernate.boot.internal.MetadataImpl.getIdentifierGeneratorFactory()"], ["java.lang.String", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$LegacyFallbackInterpreter.determineGeneratorName(javax.persistence.GenerationType, org.hibernate.boot.model.IdGeneratorStrategyInterpreter$GeneratorNameDeterminationContext)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$LegacyFallbackInterpreter.interpretTableGenerator(javax.persistence.TableGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$LegacyFallbackInterpreter.interpretSequenceGenerator(javax.persistence.SequenceGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl(org.hibernate.boot.registry.StandardServiceRegistry)"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getServiceRegistry()"], ["org.hibernate.boot.spi.MappingDefaults", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getMappingDefaults()"], ["org.hibernate.annotations.common.reflection.ReflectionManager", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getReflectionManager()"], ["org.jboss.jandex.IndexView", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getJandexView()"], ["org.hibernate.boot.archive.scan.spi.ScanOptions", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getScanOptions()"], ["org.hibernate.boot.archive.scan.spi.ScanEnvironment", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getScanEnvironment()"], ["java.lang.Object", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getScanner()"], ["org.hibernate.boot.archive.spi.ArchiveDescriptorFactory", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getArchiveDescriptorFactory()"], ["java.lang.ClassLoader", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getTempClassLoader()"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategy", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getImplicitNamingStrategy()"], ["org.hibernate.boot.model.naming.PhysicalNamingStrategy", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getPhysicalNamingStrategy()"], ["javax.persistence.SharedCacheMode", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getSharedCacheMode()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getImplicitCacheAccessType()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getMultiTenancyStrategy()"], ["org.hibernate.boot.model.IdGeneratorStrategyInterpreter", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getIdGenerationTypeInterpreter()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.ignoreExplicitDiscriminatorsForJoinedInheritance()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.createImplicitDiscriminatorsForJoinedInheritance()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.shouldImplicitlyForceDiscriminatorInSelect()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.useNationalizedCharacterData()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.isSpecjProprietarySyntaxEnabled()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getSqlFunctions()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.getSchemaCharset()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.isXmlMappingEnabled()"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.apply(org.hibernate.boot.spi.JpaOrmXmlPersistenceUnitDefaultAware$JpaOrmXmlPersistenceUnitDefaults)"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.setBootstrapContext(org.hibernate.boot.internal.BootstrapContextImpl)"], ["org.hibernate.boot.internal.InFlightMetadataCollectorImpl$DelayedPropertyReferenceHandlerAnnotationImpl", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$DelayedPropertyReferenceHandlerAnnotationImpl(java.lang.String, java.lang.String, boolean)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$DelayedPropertyReferenceHandlerAnnotationImpl.process(org.hibernate.boot.spi.InFlightMetadataCollector)"], ["org.hibernate.boot.internal.BootstrapContextImpl", "org.hibernate.boot.internal.BootstrapContextImpl(org.hibernate.boot.registry.StandardServiceRegistry, org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.internal.BootstrapContextImpl.getServiceRegistry()"], ["org.hibernate.jpa.spi.MutableJpaCompliance", "org.hibernate.boot.internal.BootstrapContextImpl.getJpaCompliance()"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.internal.BootstrapContextImpl.getTypeConfiguration()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.internal.BootstrapContextImpl.getMetadataBuildingOptions()"], ["boolean", "org.hibernate.boot.internal.BootstrapContextImpl.isJpaBootstrap()"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.markAsJpaBootstrap()"], ["java.lang.ClassLoader", "org.hibernate.boot.internal.BootstrapContextImpl.getJpaTempClassLoader()"], ["org.hibernate.boot.spi.ClassLoaderAccess", "org.hibernate.boot.internal.BootstrapContextImpl.getClassLoaderAccess()"], ["org.hibernate.boot.internal.ClassmateContext", "org.hibernate.boot.internal.BootstrapContextImpl.getClassmateContext()"], ["org.hibernate.boot.archive.spi.ArchiveDescriptorFactory", "org.hibernate.boot.internal.BootstrapContextImpl.getArchiveDescriptorFactory()"], ["org.hibernate.boot.archive.scan.spi.ScanOptions", "org.hibernate.boot.internal.BootstrapContextImpl.getScanOptions()"], ["org.hibernate.boot.archive.scan.spi.ScanEnvironment", "org.hibernate.boot.internal.BootstrapContextImpl.getScanEnvironment()"], ["java.lang.Object", "org.hibernate.boot.internal.BootstrapContextImpl.getScanner()"], ["org.hibernate.annotations.common.reflection.ReflectionManager", "org.hibernate.boot.internal.BootstrapContextImpl.getReflectionManager()"], ["org.jboss.jandex.IndexView", "org.hibernate.boot.internal.BootstrapContextImpl.getJandexView()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.internal.BootstrapContextImpl.getSqlFunctions()"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.release()"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.addAttributeConverterInfo(org.hibernate.boot.AttributeConverterInfo)"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.addSqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.addAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["void", "org.hibernate.boot.internal.BootstrapContextImpl.addCacheRegionDefinition(org.hibernate.boot.CacheRegionDefinition)"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$3.getBuildingContext()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$3.getTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$3.getUserProvidedIdentifier()"], ["<T> java.lang.Class<T>", "org.hibernate.boot.internal.BootstrapContextImpl$1.classForName(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$TableColumnNameBinding.addBinding(org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Column)"], ["org.hibernate.boot.internal.MetadataBuilderImpl", "org.hibernate.boot.internal.MetadataBuilderImpl(org.hibernate.boot.MetadataSources)"], ["org.hibernate.boot.internal.MetadataBuilderImpl", "org.hibernate.boot.internal.MetadataBuilderImpl(org.hibernate.boot.MetadataSources, org.hibernate.boot.registry.StandardServiceRegistry)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyImplicitSchemaName(java.lang.String)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyImplicitCatalogName(java.lang.String)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyImplicitNamingStrategy(org.hibernate.boot.model.naming.ImplicitNamingStrategy)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyPhysicalNamingStrategy(org.hibernate.boot.model.naming.PhysicalNamingStrategy)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applySharedCacheMode(javax.persistence.SharedCacheMode)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAccessType(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyIndexView(org.jboss.jandex.IndexView)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyScanOptions(org.hibernate.boot.archive.scan.spi.ScanOptions)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyScanEnvironment(org.hibernate.boot.archive.scan.spi.ScanEnvironment)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyScanner(org.hibernate.boot.archive.scan.spi.Scanner)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyArchiveDescriptorFactory(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.enableExplicitDiscriminatorsForJoinedSubclassSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.enableImplicitDiscriminatorsForJoinedSubclassSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.enableImplicitForcingOfDiscriminatorsInSelect(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.enableGlobalNationalizedCharacterDataSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyBasicType(org.hibernate.type.BasicType)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyBasicType(org.hibernate.type.BasicType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyBasicType(org.hibernate.usertype.UserType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyBasicType(org.hibernate.usertype.CompositeUserType, java.lang.String...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(org.hibernate.boot.model.TypeContributor)"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeType(org.hibernate.type.BasicType)"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeType(org.hibernate.type.BasicType, java.lang.String...)"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeType(org.hibernate.usertype.UserType, java.lang.String[])"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeType(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeJavaTypeDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["void", "org.hibernate.boot.internal.MetadataBuilderImpl.contributeSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.internal.MetadataBuilderImpl.getTypeConfiguration()"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyCacheRegionDefinition(org.hibernate.boot.CacheRegionDefinition)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(java.lang.ClassLoader)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applySourceProcessOrdering(org.hibernate.cfg.MetadataSourceType...)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.allowSpecjSyntax()"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAttributeConverter(org.hibernate.cfg.AttributeConverterDefinition)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>, boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAttributeConverter(javax.persistence.AttributeConverter)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyAttributeConverter(javax.persistence.AttributeConverter, boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.enableNewIdentifierGeneratorSupport(boolean)"], ["org.hibernate.boot.MetadataBuilder", "org.hibernate.boot.internal.MetadataBuilderImpl.applyIdGenerationTypeInterpreter(org.hibernate.boot.model.IdGeneratorStrategyInterpreter)"], ["<T extends org.hibernate.boot.MetadataBuilder> T", "org.hibernate.boot.internal.MetadataBuilderImpl.unwrap(java.lang.Class<T>)"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.boot.internal.MetadataBuilderImpl.build()"], ["org.hibernate.boot.spi.BootstrapContext", "org.hibernate.boot.internal.MetadataBuilderImpl.getBootstrapContext()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.internal.MetadataBuilderImpl.getMetadataBuildingOptions()"], ["org.hibernate.boot.Metadata", "org.hibernate.boot.internal.MetadataBuilderImpl.build()"], ["org.hibernate.boot.internal.ClassLoaderAccessImpl", "org.hibernate.boot.internal.ClassLoaderAccessImpl(java.lang.ClassLoader, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.boot.internal.ClassLoaderAccessImpl", "org.hibernate.boot.internal.ClassLoaderAccessImpl(java.lang.ClassLoader, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.boot.internal.ClassLoaderAccessImpl", "org.hibernate.boot.internal.ClassLoaderAccessImpl(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["void", "org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.hibernate.boot.internal.ClassLoaderAccessImpl.getJpaTempClassLoader()"], ["java.net.URL", "org.hibernate.boot.internal.ClassLoaderAccessImpl.locateResource(java.lang.String)"], ["void", "org.hibernate.boot.internal.ClassLoaderAccessImpl.release()"], ["org.hibernate.boot.internal.SessionFactoryOptionsBuilder", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder(org.hibernate.boot.registry.StandardServiceRegistry, org.hibernate.boot.spi.BootstrapContext)"], ["java.lang.String", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getUuid()"], ["org.hibernate.boot.registry.StandardServiceRegistry", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getServiceRegistry()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isJpaBootstrap()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isJtaTransactionAccessEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isAllowRefreshDetachedEntity()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isAllowOutOfTransactionUpdateOperations()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isReleaseResourcesOnCloseEnabled()"], ["java.lang.Object", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getBeanManagerReference()"], ["java.lang.Object", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getValidatorFactoryReference()"], ["java.lang.String", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getSessionFactoryName()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isSessionFactoryNameAlsoJndiName()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isFlushBeforeCompletionEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isStatisticsEnabled()"], ["org.hibernate.Interceptor", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getInterceptor()"], ["java.lang.Class<? extends org.hibernate.Interceptor>", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getStatelessInterceptorImplementor()"], ["java.util.function.Supplier<? extends org.hibernate.Interceptor>", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getStatelessInterceptorImplementorSupplier()"], ["org.hibernate.resource.jdbc.spi.StatementInspector", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getStatementInspector()"], ["org.hibernate.SessionFactoryObserver[]", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getSessionFactoryObservers()"], ["org.hibernate.cfg.BaselineSessionEventsListenerBuilder", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getBaselineSessionEventsListenerBuilder()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isIdentifierRollbackEnabled()"], ["org.hibernate.EntityMode", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getDefaultEntityMode()"], ["org.hibernate.tuple.entity.EntityTuplizerFactory", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getEntityTuplizerFactory()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isCheckNullability()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isInitializeLazyStateOutsideTransactionsEnabled()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getMultiTableBulkIdStrategy()"], ["org.hibernate.boot.TempTableDdlTransactionHandling", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getTempTableDdlTransactionHandling()"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getBatchFetchStyle()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isDelayBatchFetchLoaderCreationsEnabled()"], ["int", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getDefaultBatchFetchSize()"], ["java.lang.Integer", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getMaximumFetchDepth()"], ["org.hibernate.NullPrecedence", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getDefaultNullPrecedence()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isOrderUpdatesEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isOrderInsertsEnabled()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getMultiTenancyStrategy()"], ["org.hibernate.context.spi.CurrentTenantIdentifierResolver", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getCurrentTenantIdentifierResolver()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isJtaTrackByThread()"], ["java.util.Map", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getQuerySubstitutions()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isNamedQueryStartupCheckingEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isConventionalJavaConstants()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isProcedureParameterNullPassingEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isCollectionJoinSubqueryRewriteEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isSecondLevelCacheEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isQueryCacheEnabled()"], ["org.hibernate.cache.spi.TimestampsCacheFactory", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getTimestampsCacheFactory()"], ["java.lang.String", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getCacheRegionPrefix()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isMinimalPutsEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isStructuredCacheEntriesEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isDirectReferenceCacheEntriesEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isAutoEvictCollectionCache()"], ["org.hibernate.boot.SchemaAutoTooling", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getSchemaAutoTooling()"], ["int", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getJdbcBatchSize()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isJdbcBatchVersionedData()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isScrollableResultSetsEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isWrapResultSetsEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isGetGeneratedKeysEnabled()"], ["java.lang.Integer", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getJdbcFetchSize()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getPhysicalConnectionHandlingMode()"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.setCheckNullability(boolean)"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getConnectionReleaseMode()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.doesConnectionProviderDisableAutoCommit()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isCommentsEnabled()"], ["org.hibernate.CustomEntityDirtinessStrategy", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getCustomEntityDirtinessStrategy()"], ["org.hibernate.EntityNameResolver[]", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getEntityNameResolvers()"], ["org.hibernate.proxy.EntityNotFoundDelegate", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getEntityNotFoundDelegate()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getCustomSqlFunctionMap()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isPreferUserTransaction()"], ["java.util.TimeZone", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getJdbcTimeZone()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isQueryParametersValidationEnabled()"], ["org.hibernate.query.criteria.LiteralHandlingMode", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getCriteriaLiteralHandlingMode()"], ["org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getImmutableEntityUpdateQueryHandlingMode()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.jdbcStyleParamsZeroBased()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isFailOnPaginationOverCollectionFetchEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.inClauseParameterPaddingEnabled()"], ["org.hibernate.jpa.spi.JpaCompliance", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getJpaCompliance()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.nativeExceptionHandling51Compliance()"], ["int", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.getQueryStatisticsMaxSize()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.areJPACallbacksEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isEnhancementAsProxyEnabled()"], ["boolean", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.isOmitJoinOfSuperclassTablesEnabled()"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyBeanManager(java.lang.Object)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyValidatorFactory(java.lang.Object)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applySessionFactoryName(java.lang.String)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableSessionFactoryNameAsJndiName(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableSessionAutoClosing(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableSessionAutoFlushing(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJtaTrackingByThread(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enablePreferUserTransaction(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableStatisticsSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.addSessionFactoryObservers(org.hibernate.SessionFactoryObserver...)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyInterceptor(org.hibernate.Interceptor)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyStatelessInterceptor(java.lang.Class<? extends org.hibernate.Interceptor>)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyStatelessInterceptorSupplier(java.util.function.Supplier<? extends org.hibernate.Interceptor>)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyStatementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyCustomEntityDirtinessStrategy(org.hibernate.CustomEntityDirtinessStrategy)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.addEntityNameResolvers(org.hibernate.EntityNameResolver...)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyEntityNotFoundDelegate(org.hibernate.proxy.EntityNotFoundDelegate)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableIdentifierRollbackSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyDefaultEntityMode(org.hibernate.EntityMode)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableNullabilityChecking(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.allowLazyInitializationOutsideTransaction(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyEntityTuplizerFactory(org.hibernate.tuple.entity.EntityTuplizerFactory)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyEntityTuplizer(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyMultiTableBulkIdStrategy(org.hibernate.hql.spi.id.MultiTableBulkIdStrategy)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyTempTableDdlTransactionHandling(org.hibernate.boot.TempTableDdlTransactionHandling)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyBatchFetchStyle(org.hibernate.loader.BatchFetchStyle)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyDelayedEntityLoaderCreations(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyDefaultBatchFetchSize(int)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyMaximumFetchDepth(int)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyDefaultNullPrecedence(org.hibernate.NullPrecedence)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableOrderingOfInserts(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableOrderingOfUpdates(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableDelayedIdentityInserts(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyMultiTenancyStrategy(org.hibernate.MultiTenancyStrategy)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyQuerySubstitutions(java.util.Map)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableNamedQueryCheckingOnStartup(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableSecondLevelCacheSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableQueryCacheSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyTimestampsCacheFactory(org.hibernate.cache.spi.TimestampsCacheFactory)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyCacheRegionPrefix(java.lang.String)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableMinimalPuts(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enabledStructuredCacheEntries(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.allowDirectReferenceCacheEntries(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableAutoEvictCollectionCaches(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyJdbcBatchSize(int)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJdbcBatchingForVersionedEntities(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableScrollableResultSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableResultSetWrappingSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableGeneratedKeysSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyJdbcFetchSize(int)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyConnectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyConnectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applyConnectionProviderDisablesAutoCommit(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableCommentsSupport(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.allowOutOfTransactionUpdateOperations(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableReleaseResourcesOnClose(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableStrictJpaQueryLanguageCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaQueryCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaTransactionCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaListCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaClosedCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaProxyCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJpaCachingCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.disableRefreshDetachedEntity()"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.disableJtaTransactionAccess()"], ["void", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.enableJdbcStyleParamsZeroBased()"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.boot.internal.SessionFactoryOptionsBuilder.buildOptions()"], ["org.hibernate.boot.internal.IdGeneratorInterpreterImpl", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl()"], ["java.lang.String", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.determineGeneratorName(javax.persistence.GenerationType, org.hibernate.boot.model.IdGeneratorStrategyInterpreter$GeneratorNameDeterminationContext)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.interpretTableGenerator(javax.persistence.TableGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.interpretSequenceGenerator(javax.persistence.SequenceGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.enableLegacyFallback()"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.disableLegacyFallback()"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl.addInterpreterDelegate(org.hibernate.boot.model.IdGeneratorStrategyInterpreter)"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$2.getBuildingContext()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$2.getTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$2.getUserProvidedIdentifier()"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.boot.internal.MetadataBuilderImpl$1.getConverterClass()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.internal.MetadataBuilderImpl$1.toConverterDescriptor(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.internal.StandardEntityNotFoundDelegate", "org.hibernate.boot.internal.StandardEntityNotFoundDelegate()"], ["void", "org.hibernate.boot.internal.StandardEntityNotFoundDelegate.handleEntityNotFound(java.lang.String, java.io.Serializable)"], ["org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl(org.hibernate.boot.registry.StandardServiceRegistry)"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitSchemaName()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitCatalogName()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.shouldImplicitlyQuoteIdentifiers()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitIdColumnName()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitTenantIdColumnName()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitDiscriminatorColumnName()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitPackageName()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.isAutoImportEnabled()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitCascadeStyleName()"], ["java.lang.String", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitPropertyAccessorName()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.areEntitiesImplicitlyLazy()"], ["boolean", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.areCollectionsImplicitlyLazy()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl.getImplicitCacheAccessType()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl$1.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.internal.MetadataBuilderImpl$MappingDefaultsImpl$1.convert(java.lang.Object)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$1.getTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$1.getReferencedTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$1.getUserProvidedIdentifier()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$1.getBuildingContext()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$2.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$2.convert(java.lang.Object)"], ["org.hibernate.boot.internal.InFlightMetadataCollectorImpl", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl(org.hibernate.boot.spi.BootstrapContext, org.hibernate.boot.spi.MetadataBuildingOptions)"], ["java.util.UUID", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getUUID()"], ["org.hibernate.boot.spi.MetadataBuildingOptions", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getMetadataBuildingOptions()"], ["org.hibernate.boot.spi.BootstrapContext", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getBootstrapContext()"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getTypeConfiguration()"], ["org.hibernate.type.TypeResolver", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getTypeResolver()"], ["org.hibernate.boot.model.relational.Database", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase()"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.buildNamedQueryRepository(org.hibernate.internal.SessionFactoryImpl)"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getSqlFunctionMap()"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.validate()"], ["org.hibernate.id.factory.IdentifierGeneratorFactory", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getIdentifierGeneratorFactory()"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getSessionFactoryBuilder()"], ["org.hibernate.SessionFactory", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.buildSessionFactory()"], ["java.util.Map<java.lang.String, org.hibernate.mapping.PersistentClass>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getEntityBindingMap()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getEntityBinding(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Collection", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getCollectionBinding(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addCollectionBinding(org.hibernate.mapping.Collection)"], ["org.hibernate.boot.model.TypeDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getTypeDefinition(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addTypeDefinition(org.hibernate.boot.model.TypeDefinition)"], ["org.hibernate.boot.internal.ClassmateContext", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getClassmateContext()"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addAttributeConverter(org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["org.hibernate.boot.model.convert.spi.ConverterAutoApplyHandler", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getAttributeConverterAutoApplyHandler()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.FilterDefinition>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getFilterDefinitions()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getFilterDefinition(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addFilterDefinition(org.hibernate.engine.spi.FilterDefinition)"], ["org.hibernate.mapping.FetchProfile", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getFetchProfile(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addFetchProfile(org.hibernate.mapping.FetchProfile)"], ["org.hibernate.boot.model.IdentifierGeneratorDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getIdentifierGenerator(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addIdentifierGenerator(org.hibernate.boot.model.IdentifierGeneratorDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDefaultIdentifierGenerator(org.hibernate.boot.model.IdentifierGeneratorDefinition)"], ["org.hibernate.cfg.annotations.NamedEntityGraphDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getNamedEntityGraph(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedEntityGraphDefinition>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getNamedEntityGraphs()"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addNamedEntityGraph(org.hibernate.cfg.annotations.NamedEntityGraphDefinition)"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getNamedQueryDefinition(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addNamedQuery(org.hibernate.engine.spi.NamedQueryDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDefaultQuery(org.hibernate.engine.spi.NamedQueryDefinition)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getNamedNativeQueryDefinition(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addNamedNativeQuery(org.hibernate.engine.spi.NamedSQLQueryDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDefaultNamedNativeQuery(org.hibernate.engine.spi.NamedSQLQueryDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addNamedProcedureCallDefinition(org.hibernate.cfg.annotations.NamedProcedureCallDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDefaultNamedProcedureCallDefinition(org.hibernate.cfg.annotations.NamedProcedureCallDefinition)"], ["java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getResultSetMappingDefinitions()"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getResultSetMapping(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.applyResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDefaultResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getImports()"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(java.lang.String, java.lang.String)"], ["org.hibernate.mapping.Table", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.mapping.Table", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDenormalizedTable(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, org.hibernate.mapping.Table)"], ["org.hibernate.type.Type", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getIdentifierType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getIdentifierPropertyName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getReferencedPropertyType(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addTableNameBinding(org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Table)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addTableNameBinding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getLogicalTableName(org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPhysicalTableName(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPhysicalTableName(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addColumnNameBinding(org.hibernate.mapping.Table, java.lang.String, org.hibernate.mapping.Column)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addColumnNameBinding(org.hibernate.mapping.Table, org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Column)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPhysicalColumnName(org.hibernate.mapping.Table, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPhysicalColumnName(org.hibernate.mapping.Table, org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getLogicalColumnName(org.hibernate.mapping.Table, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getLogicalColumnName(org.hibernate.mapping.Table, org.hibernate.boot.model.naming.Identifier)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["org.hibernate.cfg.AnnotatedClassType", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getClassType(org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.cfg.AnnotatedClassType", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addClassType(org.hibernate.annotations.common.reflection.XClass)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addAnyMetaDef(org.hibernate.annotations.AnyMetaDef)"], ["org.hibernate.annotations.AnyMetaDef", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getAnyMetaDef(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addMappedSuperclass(java.lang.Class, org.hibernate.mapping.MappedSuperclass)"], ["org.hibernate.mapping.MappedSuperclass", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getMappedSuperclass(java.lang.Class)"], ["org.hibernate.cfg.PropertyData", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPropertyAnnotatedWithMapsId(org.hibernate.annotations.common.reflection.XClass, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addPropertyAnnotatedWithMapsId(org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.PropertyData)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addPropertyAnnotatedWithMapsIdSpecj(org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.PropertyData, java.lang.String)"], ["org.hibernate.cfg.PropertyData", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPropertyAnnotatedWithIdAndToOne(org.hibernate.annotations.common.reflection.XClass, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addToOneAndIdProperty(org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.PropertyData)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addMappedBy(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getFromMappedBy(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addPropertyReferencedAssociation(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getPropertyReferencedAssociation(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addPropertyReference(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addDelayedPropertyReferenceHandler(org.hibernate.boot.spi.InFlightMetadataCollector$DelayedPropertyReferenceHandler)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addUniquePropertyReference(java.lang.String, java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addUniqueConstraints(org.hibernate.mapping.Table, java.util.List)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addUniqueConstraintHolders(org.hibernate.mapping.Table, java.util.List<org.hibernate.cfg.UniqueConstraintHolder>)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addJpaIndexHolders(org.hibernate.mapping.Table, java.util.List<org.hibernate.cfg.JPAIndexHolder>)"], ["org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getEntityTableXref(java.lang.String)"], ["org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityTableXref(java.lang.String, org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Table, org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref)"], ["java.util.Map<java.lang.String, org.hibernate.mapping.Join>", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getJoins(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addSecondPass(org.hibernate.cfg.SecondPass)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addSecondPass(org.hibernate.cfg.SecondPass, boolean)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.spi.NaturalIdUniqueKeyBinder", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.locateNaturalIdUniqueKeyBinder(java.lang.String)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.registerNaturalIdUniqueKeyBinder(java.lang.String, org.hibernate.boot.spi.NaturalIdUniqueKeyBinder)"], ["boolean", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.isInSecondPass()"], ["org.hibernate.boot.internal.MetadataImpl", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl.buildMetadataInstance(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.internal.ClassmateContext", "org.hibernate.boot.internal.ClassmateContext()"], ["com.fasterxml.classmate.TypeResolver", "org.hibernate.boot.internal.ClassmateContext.getTypeResolver()"], ["com.fasterxml.classmate.MemberResolver", "org.hibernate.boot.internal.ClassmateContext.getMemberResolver()"], ["void", "org.hibernate.boot.internal.ClassmateContext.release()"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.boot.internal.MetadataBuilderImpl$2.getConverterClass()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.internal.MetadataBuilderImpl$2.toConverterDescriptor(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy", "org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy()"], ["boolean", "org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy.canDirtyCheck(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.Session)"], ["boolean", "org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy.isDirty(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.Session)"], ["void", "org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy.resetDirty(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.Session)"], ["void", "org.hibernate.boot.internal.DefaultCustomEntityDirtinessStrategy.findDirty(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.Session, org.hibernate.CustomEntityDirtinessStrategy$DirtyCheckContext)"], ["java.lang.String", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$FallbackInterpreter.determineGeneratorName(javax.persistence.GenerationType, org.hibernate.boot.model.IdGeneratorStrategyInterpreter$GeneratorNameDeterminationContext)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$FallbackInterpreter.interpretTableGenerator(javax.persistence.TableGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["void", "org.hibernate.boot.internal.IdGeneratorInterpreterImpl$FallbackInterpreter.interpretSequenceGenerator(javax.persistence.SequenceGenerator, org.hibernate.boot.model.IdentifierGeneratorDefinition$Builder)"], ["org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl(org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Table, org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl.addSecondaryTable(org.hibernate.boot.model.source.spi.LocalMetadataBuildingContext, org.hibernate.boot.model.naming.Identifier, org.hibernate.mapping.Join)"], ["void", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl.addSecondaryTable(org.hibernate.boot.model.relational.QualifiedTableName, org.hibernate.mapping.Join)"], ["org.hibernate.mapping.Table", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl.getPrimaryTable()"], ["org.hibernate.mapping.Table", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl.resolveTable(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.mapping.Join", "org.hibernate.boot.internal.InFlightMetadataCollectorImpl$EntityTableXrefImpl.locateJoin(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.boot.internal.MetadataBuilderImpl$3.getConverterClass()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.internal.MetadataBuilderImpl$3.toConverterDescriptor(org.hibernate.boot.spi.MetadataBuildingContext)"], ["javax.persistence.SharedCacheMode", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$1.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$1.convert(java.lang.Object)"], ["org.hibernate.boot.model.naming.ImplicitNamingStrategy", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$3.call()"], ["java.lang.Object", "org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl$3.call()"], ["org.hibernate.boot.internal.SessionFactoryBuilderImpl", "org.hibernate.boot.internal.SessionFactoryBuilderImpl(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.BootstrapContext)"], ["org.hibernate.boot.internal.SessionFactoryBuilderImpl", "org.hibernate.boot.internal.SessionFactoryBuilderImpl(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.internal.SessionFactoryOptionsBuilder)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyBeanManager(java.lang.Object)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyValidatorFactory(java.lang.Object)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyName(java.lang.String)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyNameAsJndiName(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyAutoClosing(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyAutoFlushing(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyJtaTrackingByThread(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyPreferUserTransactions(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStatisticsSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.addSessionFactoryObservers(org.hibernate.SessionFactoryObserver...)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyInterceptor(org.hibernate.Interceptor)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStatelessInterceptor(java.lang.Class<? extends org.hibernate.Interceptor>)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStatelessInterceptor(java.util.function.Supplier<? extends org.hibernate.Interceptor>)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStatementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyCustomEntityDirtinessStrategy(org.hibernate.CustomEntityDirtinessStrategy)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.addEntityNameResolver(org.hibernate.EntityNameResolver...)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyEntityNotFoundDelegate(org.hibernate.proxy.EntityNotFoundDelegate)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyIdentifierRollbackSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyDefaultEntityMode(org.hibernate.EntityMode)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyNullabilityChecking(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyLazyInitializationOutsideTransaction(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyEntityTuplizerFactory(org.hibernate.tuple.entity.EntityTuplizerFactory)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyEntityTuplizer(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyMultiTableBulkIdStrategy(org.hibernate.hql.spi.id.MultiTableBulkIdStrategy)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyTempTableDdlTransactionHandling(org.hibernate.boot.TempTableDdlTransactionHandling)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyBatchFetchStyle(org.hibernate.loader.BatchFetchStyle)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyDelayedEntityLoaderCreations(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyDefaultBatchFetchSize(int)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyMaximumFetchDepth(int)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyDefaultNullPrecedence(org.hibernate.NullPrecedence)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyOrderingOfInserts(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyOrderingOfUpdates(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyMultiTenancyStrategy(org.hibernate.MultiTenancyStrategy)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyQuerySubstitutions(java.util.Map)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyNamedQueryCheckingOnStartup(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applySecondLevelCacheSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyQueryCacheSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyTimestampsCacheFactory(org.hibernate.cache.spi.TimestampsCacheFactory)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyCacheRegionPrefix(java.lang.String)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyMinimalPutsForCaching(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStructuredCacheEntries(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyDirectReferenceCaching(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyAutomaticEvictionOfCollectionCaches(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyJdbcBatchSize(int)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyJdbcBatchingForVersionedEntities(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyScrollableResultsSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyResultSetsWrapping(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyGetGeneratedKeysSupport(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyJdbcFetchSize(int)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyConnectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyConnectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyConnectionProviderDisablesAutoCommit(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applySqlComments(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.allowOutOfTransactionUpdateOperations(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableReleaseResourcesOnCloseEnabled(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.applyStrictJpaQueryLanguageCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableJpaQueryCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableJpaTransactionCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableJpaListCompliance(boolean)"], ["org.hibernate.boot.SessionFactoryBuilder", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableJpaClosedCompliance(boolean)"], ["void", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.disableRefreshDetachedEntity()"], ["void", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.disableJtaTransactionAccess()"], ["void", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.enableJdbcStyleParamsZeroBased()"], ["<T extends org.hibernate.boot.SessionFactoryBuilder> T", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.unwrap(java.lang.Class<T>)"], ["org.hibernate.SessionFactory", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.build()"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.boot.internal.SessionFactoryBuilderImpl.buildSessionFactoryOptions()"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.boot.internal.MetadataBuilderImpl$4.getConverterClass()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.boot.internal.MetadataBuilderImpl$4.toConverterDescriptor(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.CacheRegionDefinition", "org.hibernate.boot.CacheRegionDefinition(org.hibernate.boot.CacheRegionDefinition$CacheRegionType, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.boot.CacheRegionDefinition$CacheRegionType", "org.hibernate.boot.CacheRegionDefinition.getRegionType()"], ["java.lang.String", "org.hibernate.boot.CacheRegionDefinition.getRole()"], ["java.lang.String", "org.hibernate.boot.CacheRegionDefinition.getUsage()"], ["java.lang.String", "org.hibernate.boot.CacheRegionDefinition.getRegion()"], ["boolean", "org.hibernate.boot.CacheRegionDefinition.isCacheLazy()"], ["org.hibernate.boot.TempTableDdlTransactionHandling[]", "org.hibernate.boot.TempTableDdlTransactionHandling.values()"], ["org.hibernate.boot.TempTableDdlTransactionHandling", "org.hibernate.boot.TempTableDdlTransactionHandling.valueOf(java.lang.String)"], ["org.hibernate.boot.MappingException", "org.hibernate.boot.MappingException(java.lang.String, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.MappingException", "org.hibernate.boot.MappingException(java.lang.String, java.lang.Throwable, org.hibernate.boot.jaxb.Origin)"], ["java.lang.String", "org.hibernate.boot.MappingException.getMessage()"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.MappingException.getOrigin()"], ["org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveContextImpl", "org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveContextImpl(boolean, org.hibernate.boot.archive.scan.internal.ScanResultCollector)"], ["boolean", "org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveContextImpl.isRootUrl()"], ["org.hibernate.boot.archive.spi.ArchiveEntryHandler", "org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveContextImpl.obtainArchiveEntryHandler(org.hibernate.boot.archive.spi.ArchiveEntry)"], ["org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveDescriptorInfo", "org.hibernate.boot.archive.scan.spi.AbstractScannerImpl$ArchiveDescriptorInfo(org.hibernate.boot.archive.spi.ArchiveDescriptor, boolean)"], ["org.hibernate.boot.archive.scan.spi.ClassFileArchiveEntryHandler", "org.hibernate.boot.archive.scan.spi.ClassFileArchiveEntryHandler(org.hibernate.boot.archive.scan.internal.ScanResultCollector)"], ["void", "org.hibernate.boot.archive.scan.spi.ClassFileArchiveEntryHandler.handleEntry(org.hibernate.boot.archive.spi.ArchiveEntry, org.hibernate.boot.archive.spi.ArchiveContext)"], ["org.hibernate.boot.archive.scan.spi.NonClassFileArchiveEntryHandler", "org.hibernate.boot.archive.scan.spi.NonClassFileArchiveEntryHandler(org.hibernate.boot.archive.scan.internal.ScanResultCollector)"], ["void", "org.hibernate.boot.archive.scan.spi.NonClassFileArchiveEntryHandler.handleEntry(org.hibernate.boot.archive.spi.ArchiveEntry, org.hibernate.boot.archive.spi.ArchiveContext)"], ["org.hibernate.boot.archive.scan.spi.ScanResult", "org.hibernate.boot.archive.scan.spi.AbstractScannerImpl.scan(org.hibernate.boot.archive.scan.spi.ScanEnvironment, org.hibernate.boot.archive.scan.spi.ScanOptions, org.hibernate.boot.archive.scan.spi.ScanParameters)"], ["org.hibernate.boot.archive.scan.spi.PackageInfoArchiveEntryHandler", "org.hibernate.boot.archive.scan.spi.PackageInfoArchiveEntryHandler(org.hibernate.boot.archive.scan.internal.ScanResultCollector)"], ["void", "org.hibernate.boot.archive.scan.spi.PackageInfoArchiveEntryHandler.handleEntry(org.hibernate.boot.archive.spi.ArchiveEntry, org.hibernate.boot.archive.spi.ArchiveContext)"], ["org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization[]", "org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization.values()"], ["org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization", "org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization.valueOf(java.lang.String)"], ["org.hibernate.boot.archive.scan.internal.DisabledScanner", "org.hibernate.boot.archive.scan.internal.DisabledScanner()"], ["org.hibernate.boot.archive.scan.spi.ScanResult", "org.hibernate.boot.archive.scan.internal.DisabledScanner.scan(org.hibernate.boot.archive.scan.spi.ScanEnvironment, org.hibernate.boot.archive.scan.spi.ScanOptions, org.hibernate.boot.archive.scan.spi.ScanParameters)"], ["org.hibernate.boot.archive.scan.internal.MappingFileDescriptorImpl", "org.hibernate.boot.archive.scan.internal.MappingFileDescriptorImpl(java.lang.String, org.hibernate.boot.archive.spi.InputStreamAccess)"], ["java.lang.String", "org.hibernate.boot.archive.scan.internal.MappingFileDescriptorImpl.getName()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.scan.internal.MappingFileDescriptorImpl.getStreamAccess()"], ["org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl", "org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl(java.lang.String, org.hibernate.boot.archive.spi.InputStreamAccess)"], ["java.lang.String", "org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl.getName()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl.getStreamAccess()"], ["boolean", "org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl.equals(java.lang.Object)"], ["int", "org.hibernate.boot.archive.scan.internal.PackageDescriptorImpl.hashCode()"], ["org.hibernate.boot.archive.scan.internal.ScanResultCollector", "org.hibernate.boot.archive.scan.internal.ScanResultCollector(org.hibernate.boot.archive.scan.spi.ScanEnvironment, org.hibernate.boot.archive.scan.spi.ScanOptions, org.hibernate.boot.archive.scan.spi.ScanParameters)"], ["void", "org.hibernate.boot.archive.scan.internal.ScanResultCollector.handleClass(org.hibernate.boot.archive.scan.spi.ClassDescriptor, boolean)"], ["void", "org.hibernate.boot.archive.scan.internal.ScanResultCollector.handlePackage(org.hibernate.boot.archive.scan.spi.PackageDescriptor, boolean)"], ["void", "org.hibernate.boot.archive.scan.internal.ScanResultCollector.handleMappingFile(org.hibernate.boot.archive.scan.spi.MappingFileDescriptor, boolean)"], ["org.hibernate.boot.archive.scan.spi.ScanResult", "org.hibernate.boot.archive.scan.internal.ScanResultCollector.toScanResult()"], ["org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl(java.lang.String, org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization, org.hibernate.boot.archive.spi.InputStreamAccess)"], ["java.lang.String", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl.getName()"], ["org.hibernate.boot.archive.scan.spi.ClassDescriptor$Categorization", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl.getCategorization()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl.getStreamAccess()"], ["boolean", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl.equals(java.lang.Object)"], ["int", "org.hibernate.boot.archive.scan.internal.ClassDescriptorImpl.hashCode()"], ["org.hibernate.boot.archive.scan.internal.StandardScanner", "org.hibernate.boot.archive.scan.internal.StandardScanner()"], ["org.hibernate.boot.archive.scan.internal.StandardScanner", "org.hibernate.boot.archive.scan.internal.StandardScanner(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory)"], ["org.hibernate.boot.archive.scan.internal.ScanResultImpl", "org.hibernate.boot.archive.scan.internal.ScanResultImpl(java.util.Set<org.hibernate.boot.archive.scan.spi.PackageDescriptor>, java.util.Set<org.hibernate.boot.archive.scan.spi.ClassDescriptor>, java.util.Set<org.hibernate.boot.archive.scan.spi.MappingFileDescriptor>)"], ["org.hibernate.boot.archive.scan.internal.StandardScanOptions", "org.hibernate.boot.archive.scan.internal.StandardScanOptions()"], ["org.hibernate.boot.archive.scan.internal.StandardScanOptions", "org.hibernate.boot.archive.scan.internal.StandardScanOptions(java.lang.String, boolean)"], ["boolean", "org.hibernate.boot.archive.scan.internal.StandardScanOptions.canDetectUnlistedClassesInRoot()"], ["boolean", "org.hibernate.boot.archive.scan.internal.StandardScanOptions.canDetectUnlistedClassesInNonRoot()"], ["boolean", "org.hibernate.boot.archive.scan.internal.StandardScanOptions.canDetectHibernateMappingFiles()"], ["org.hibernate.boot.archive.spi.AbstractArchiveDescriptorFactory", "org.hibernate.boot.archive.spi.AbstractArchiveDescriptorFactory()"], ["org.hibernate.boot.archive.spi.ArchiveDescriptor", "org.hibernate.boot.archive.spi.AbstractArchiveDescriptorFactory.buildArchiveDescriptor(java.net.URL)"], ["java.net.URL", "org.hibernate.boot.archive.spi.AbstractArchiveDescriptorFactory.getJarURLFromURLEntry(java.net.URL, java.lang.String)"], ["java.net.URL", "org.hibernate.boot.archive.spi.AbstractArchiveDescriptorFactory.getURLFromPath(java.lang.String)"], ["org.hibernate.boot.archive.spi.ArchiveException", "org.hibernate.boot.archive.spi.ArchiveException(java.lang.String)"], ["org.hibernate.boot.archive.spi.ArchiveException", "org.hibernate.boot.archive.spi.ArchiveException(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$1.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$1.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$1.getStreamAccess()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$1.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$1.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$1.getStreamAccess()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$1.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$1.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$1.getStreamAccess()"], ["java.net.URL", "org.hibernate.boot.archive.internal.ArchiveHelper.getJarURLFromURLEntry(java.net.URL, java.lang.String)"], ["java.net.URL", "org.hibernate.boot.archive.internal.ArchiveHelper.getURLFromPath(java.lang.String)"], ["byte[]", "org.hibernate.boot.archive.internal.ArchiveHelper.getBytesFromInputStreamSafely(java.io.InputStream)"], ["byte[]", "org.hibernate.boot.archive.internal.ArchiveHelper.getBytesFromInputStream(java.io.InputStream)"], ["org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory()"], ["org.hibernate.boot.archive.spi.ArchiveDescriptor", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory.buildArchiveDescriptor(java.net.URL)"], ["org.hibernate.boot.archive.spi.ArchiveDescriptor", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory.buildArchiveDescriptor(java.net.URL, java.lang.String)"], ["java.net.URL", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory.getJarURLFromURLEntry(java.net.URL, java.lang.String)"], ["java.net.URL", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory.getURLFromPath(java.lang.String)"], ["java.net.URL", "org.hibernate.boot.archive.internal.StandardArchiveDescriptorFactory.adjustJarFileEntryUrl(java.net.URL, java.net.URL)"], ["org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory, java.net.URL, java.lang.String)"], ["void", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor.visitArchive(org.hibernate.boot.archive.spi.ArchiveContext)"], ["org.hibernate.boot.archive.internal.JarProtocolArchiveDescriptor", "org.hibernate.boot.archive.internal.JarProtocolArchiveDescriptor(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory, java.net.URL, java.lang.String)"], ["void", "org.hibernate.boot.archive.internal.JarProtocolArchiveDescriptor.visitArchive(org.hibernate.boot.archive.spi.ArchiveContext)"], ["org.hibernate.boot.archive.internal.FileInputStreamAccess", "org.hibernate.boot.archive.internal.FileInputStreamAccess(java.lang.String, java.io.File)"], ["java.lang.String", "org.hibernate.boot.archive.internal.FileInputStreamAccess.getStreamName()"], ["java.io.InputStream", "org.hibernate.boot.archive.internal.FileInputStreamAccess.accessInputStream()"], ["org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory, java.net.URL, java.lang.String)"], ["void", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor.visitArchive(org.hibernate.boot.archive.spi.ArchiveContext)"], ["java.lang.String", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$2.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$2.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor$2.getStreamAccess()"], ["org.hibernate.boot.archive.internal.UrlInputStreamAccess", "org.hibernate.boot.archive.internal.UrlInputStreamAccess(java.net.URL)"], ["java.lang.String", "org.hibernate.boot.archive.internal.UrlInputStreamAccess.getStreamName()"], ["java.io.InputStream", "org.hibernate.boot.archive.internal.UrlInputStreamAccess.accessInputStream()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$2.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$2.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.JarInputStreamBasedArchiveDescriptor$2.getStreamAccess()"], ["org.hibernate.boot.archive.internal.ByteArrayInputStreamAccess", "org.hibernate.boot.archive.internal.ByteArrayInputStreamAccess(java.lang.String, byte[])"], ["java.lang.String", "org.hibernate.boot.archive.internal.ByteArrayInputStreamAccess.getStreamName()"], ["java.io.InputStream", "org.hibernate.boot.archive.internal.ByteArrayInputStreamAccess.accessInputStream()"], ["org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor(org.hibernate.boot.archive.spi.ArchiveDescriptorFactory, java.net.URL, java.lang.String)"], ["void", "org.hibernate.boot.archive.internal.ExplodedArchiveDescriptor.visitArchive(org.hibernate.boot.archive.spi.ArchiveContext)"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$2.getName()"], ["java.lang.String", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$2.getNameWithinArchive()"], ["org.hibernate.boot.archive.spi.InputStreamAccess", "org.hibernate.boot.archive.internal.JarFileBasedArchiveDescriptor$2.getStreamAccess()"], ["org.hibernate.boot.MappingNotFoundException", "org.hibernate.boot.MappingNotFoundException(java.lang.String, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.MappingNotFoundException", "org.hibernate.boot.MappingNotFoundException(org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.MappingNotFoundException", "org.hibernate.boot.MappingNotFoundException(java.lang.String, java.lang.Throwable, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.MappingNotFoundException", "org.hibernate.boot.MappingNotFoundException(java.lang.Throwable, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.UnsupportedOrmXsdVersionException", "org.hibernate.boot.UnsupportedOrmXsdVersionException(java.lang.String, org.hibernate.boot.jaxb.Origin)"], ["java.lang.String", "org.hibernate.boot.UnsupportedOrmXsdVersionException.getRequestedVersion()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType.setClazz(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.getParent()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.setParent(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSynchronizeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSynchronizeType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSynchronizeType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSynchronizeType.setTable(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setColumnAttribute(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setEmbedXml(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setEntityName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setForeignKey(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setFormulaAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getNotFound()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setNotFound(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getOrderBy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setOrderBy(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getPropertyRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setPropertyRef(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setUnique(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType.setWhere(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping()"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.isAutoImport()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setAutoImport(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.getDefaultAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setDefaultAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.getDefaultCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setDefaultCascade(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.isDefaultLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setDefaultLazy(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.getPackage()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setPackage(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping.setSchema(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType()"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.setInsert(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.getUnsavedValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType.setUnsavedValue(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getGenerator()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setGenerator(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setColumnAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getTypeAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setTypeAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.getUnsavedValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType.setUnsavedValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueVersionEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType()"], ["org.hibernate.CacheMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getCacheMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setCacheMode(org.hibernate.CacheMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getCacheRegion()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setCacheRegion(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.isCacheable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setCacheable(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setComment(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getFetchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setFetchSize(java.lang.Integer)"], ["org.hibernate.FlushMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getFlushMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setFlushMode(org.hibernate.FlushMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setName(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.isReadOnly()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setReadOnly(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.getTimeout()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType.setTimeout(java.lang.Integer)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setFormulaAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setNotNull(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getPrecision()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setPrecision(java.lang.Integer)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getScale()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setScale(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.getTypeAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setTypeAttribute(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType.setUnique(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSubselect(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.isOptional()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setOptional(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType()"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setInsert(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setOptimisticLock(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setUnique(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterContainer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterContainer()"], ["org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoIdBagAdapter", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoIdBagAdapter()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoIdBagAdapter.getOneToMany()"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoIdBagAdapter.isInverse()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setEntityName(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.isAbstract()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setAbstract(java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.isLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setLazy(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getProxy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setProxy(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.isDynamicInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setDynamicInsert(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.isDynamicUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setDynamicUpdate(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.isSelectBeforeUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setSelectBeforeUpdate(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityBaseDefinition.setPersister(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCollectionId()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCollectionId(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getOrderBy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setOrderBy(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setSubselectAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCascade(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setMutable(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType.setPersister(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setComment(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getDefault()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setDefault(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setIndex(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setName(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setNotNull(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getPrecision()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setPrecision(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getRead()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setRead(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getScale()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setScale(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getSqlType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setSqlType(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setUnique(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getUniqueKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setUniqueKey(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.getWrite()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType.setWrite(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator.setColumn(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setCascade(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setColumnAttribute(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setEmbedXml(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setEntityName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setForeignKey(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setFormulaAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setIndex(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setInsert(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getNotFound()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setNotFound(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setNotNull(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setOptimisticLock(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getPropertyRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setPropertyRef(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setUnique(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getUniqueKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setUniqueKey(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.getOnDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType.setOnDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSubselect(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.getAlias()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.setAlias(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.getLockMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.setLockMode(org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.getRole()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType.setRole(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter1", "org.hibernate.boot.jaxb.hbm.spi.Adapter1()"], ["org.hibernate.CacheMode", "org.hibernate.boot.jaxb.hbm.spi.Adapter1.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter1.marshal(org.hibernate.CacheMode)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter1.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter1.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter5", "org.hibernate.boot.jaxb.hbm.spi.Adapter5()"], ["org.hibernate.FlushMode", "org.hibernate.boot.jaxb.hbm.spi.Adapter5.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter5.marshal(org.hibernate.FlushMode)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter5.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter5.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType.getIdType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType.setIdType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType.getMetaType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType.setMetaType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.setValue(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.isCallable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.setCallable(java.lang.Boolean)"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType.setCheck(org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setCascade(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getIdType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setIdType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setIndex(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setInsert(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.isLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setLazy(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getMetaType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setMetaType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setOptimisticLock(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType.setValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setFormulaAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.getTypeAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType.setTypeAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.setValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.setName(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.isInheritable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType.setInheritable(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.getParent()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setParent(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setClazz(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setInsert(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.isLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setLazy(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setOptimisticLock(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setUnique(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setColumn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getFormula()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setFormula(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setColumnAttribute(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.isForce()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setForce(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setFormulaAttribute(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setInsert(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setLength(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setNotNull(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter7", "org.hibernate.boot.jaxb.hbm.spi.Adapter7()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.jaxb.hbm.spi.Adapter7.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter7.marshal(org.hibernate.tuple.GenerationTiming)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter7.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter7.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.getParent()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.setParent(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter8", "org.hibernate.boot.jaxb.hbm.spi.Adapter8()"], ["org.hibernate.LockMode", "org.hibernate.boot.jaxb.hbm.spi.Adapter8.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter8.marshal(org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter8.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter8.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSubclassEntityBaseDefinition", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSubclassEntityBaseDefinition()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSubclassEntityBaseDefinition.getExtends()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSubclassEntityBaseDefinition.setExtends(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter6", "org.hibernate.boot.jaxb.hbm.spi.Adapter6()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.jaxb.hbm.spi.Adapter6.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter6.marshal(org.hibernate.tuple.GenerationTiming)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter6.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter6.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getListIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setListIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getOneToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setOneToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setSubselectAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCascade(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setMutable(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType.setPersister(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setForeignKey(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.getOnDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType.setOnDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType.setColumn(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter3", "org.hibernate.boot.jaxb.hbm.spi.Adapter3()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.boot.jaxb.hbm.spi.Adapter3.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter3.marshal(org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter3.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter3.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType.getCondition()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType.setCondition(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.setEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.setForeignKey(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType.setFormulaAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.setClazz(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.setEmbedXml(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.setEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.getNotFound()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType.setNotFound(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNotFoundEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.ObjectFactory", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryPropertyReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmAuxiliaryDatabaseObjectType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFetchProfileType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmHibernateMapping", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmHibernateMapping()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmToolingHintType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdentifierGeneratorDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmIdentifierGeneratorDefinitionType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmTypeDefinitionType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFilterDefinitionType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmClassRenameType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmRootEntityType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmDiscriminatorSubclassEntityType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmJoinedSubclassEntityType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnionSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmUnionSubclassEntityType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmResultSetMappingType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmResultSetMappingType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedQueryType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNamedQueryType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNamedNativeQueryType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFilterParameterType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmDialectScopeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmQueryParamType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryScalarReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryJoinReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryCollectionLoadReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmSimpleIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmVersionAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmTimestampAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNaturalIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIdBagCollectionType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmIdBagCollectionType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCollectionIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmArrayType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmBagCollectionType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmListType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmMapType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmSetType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmListIndexType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmOneToManyCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmOneToOneType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToOneType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmManyToOneType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmManyToManyCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmMultiTenancyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmEntityDiscriminatorType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyAssociationType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmAnyAssociationType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAnyValueMappingType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmAnyValueMappingType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCacheType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNaturalIdCacheType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmColumnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeAttributeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmDynamicComponentType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmBasicCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFilterType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFilterAliasMappingType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmGeneratorSpecificationType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmIndexType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSecondaryTableType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmSecondaryTableType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmKeyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyManyToOneType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeKeyManyToOneType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeKeyBasicAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmLoaderType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmManyToAnyCollectionElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmMapKeyBasicType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmMapKeyCompositeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmMapKeyManyToManyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCompositeIndexType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmIndexManyToManyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmIndexManyToAnyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNestedCompositeElementType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNestedCompositeElementType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmParentType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmPrimitiveArrayType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPropertiesType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmPropertiesType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmBasicAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSynchronizeType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmSynchronizeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmTuplizerType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmTypeSpecificationType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmConfigParameterType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmCustomSqlDmlType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType$JaxbHbmReturnColumn", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryPropertyReturnTypeJaxbHbmReturnColumn()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmNativeQueryReturnTypeJaxbHbmReturnDiscriminator()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmAuxiliaryDatabaseObjectTypeJaxbHbmDefinition()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch", "org.hibernate.boot.jaxb.hbm.spi.ObjectFactory.createJaxbHbmFetchProfileTypeJaxbHbmFetch()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setColumnAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.getTypeAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeKeyBasicAttributeType.setTypeAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.setEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType.setForeignKey(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.setColumnAttribute(java.lang.String)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.getGenerated()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.setGenerated(org.hibernate.tuple.GenerationTiming)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBaseVersionAttributeType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.getDiscriminatorValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDiscriminatorSubclassEntityType.setDiscriminatorValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.setColumnAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmParentType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.getAssociation()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.setAssociation(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.getEntity()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.setEntity(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.getStyle()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchProfileType$JaxbHbmFetch.setStyle(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintContainer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmToolingHintContainer()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getNaturalIdCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setNaturalIdCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getId()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setId(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSimpleIdType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getCompositeId()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setCompositeId(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getDiscriminator()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setDiscriminator(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmEntityDiscriminatorType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getNaturalId()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setNaturalId(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getVersion()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setVersion(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmVersionAttributeType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getTimestamp()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setTimestamp(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getMultiTenancy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setMultiTenancy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getDiscriminatorValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setDiscriminatorValue(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setMutable(java.lang.Boolean)"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setOptimisticLock(org.hibernate.engine.OptimisticLockStyle)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getPolymorphism()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setPolymorphism(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPolymorphismEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getRowid()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setRowid(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setSubselectAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmRootEntityType.setWhere(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getListIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setListIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getOneToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setOneToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setAccess(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setBatchSize(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCascade(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getElementClass()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setElementClass(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setMutable(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setOptimisticLock(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setPersister(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmArrayType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setType(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setFormulaAttribute(java.lang.String)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getGenerated()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setGenerated(org.hibernate.tuple.GenerationTiming)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setIndex(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setInsert(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setLazy(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setNode(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setNotNull(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getPrecision()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setPrecision(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getScale()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setScale(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getTypeAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setTypeAttribute(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setUnique(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.getUniqueKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setUniqueKey(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicAttributeType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType.setColumn(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType.getIdType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType.setIdType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType.getMetaType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType.setMetaType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType.setClazz(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.setColumn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.getBase()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.setBase(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType.setColumnAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType.setClazz(java.lang.String)"], ["org.hibernate.EntityMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType.getEntityMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTuplizerType.setEntityMode(org.hibernate.EntityMode)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setForeignKey(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.isNotNull()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setNotNull(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.getOnDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setOnDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.getPropertyRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setPropertyRef(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setUnique(java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.getReturnDiscriminator()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.setReturnDiscriminator(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType$JaxbHbmReturnDiscriminator)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.getAlias()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.setAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.setEntityName(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.getLockMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType$JaxbHbmReturnColumn", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType$JaxbHbmReturnColumn()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType$JaxbHbmReturnColumn.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryPropertyReturnType$JaxbHbmReturnColumn.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType.setValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmConfigParameterType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType.getSource()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType.setSource(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampSourceEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType.getUnsavedValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTimestampAttributeType.setUnsavedValue(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueTimestampEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.getColumn()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setColumn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmColumnType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.getFormula()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setFormula(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setColumnAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setFormulaAttribute(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.isShared()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setShared(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.isBindAsParam()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMultiTenancyType.setBindAsParam(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getOneToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setOneToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getOrderBy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setOrderBy(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCascade(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setMutable(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setPersister(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBagCollectionType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter2", "org.hibernate.boot.jaxb.hbm.spi.Adapter2()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.jaxb.hbm.spi.Adapter2.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter2.marshal(org.hibernate.cache.spi.access.AccessType)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter2.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter2.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.getInclude()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.setInclude(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheInclusionEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.getRegion()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.setRegion(java.lang.String)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.getUsage()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType.setUsage(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.getDefinition()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.setDefinition(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.getCreate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.setCreate(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.getDrop()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType.setDrop(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setAccess(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.isInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setInsert(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setOptimisticLock(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.isUnique()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setUnique(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.isUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDynamicComponentType.setUpdate(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType.getParameterName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType.setParameterName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType.getParameterValueTypeName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterParameterType.setParameterValueTypeName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getOneToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setOneToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getOrderBy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setOrderBy(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSort()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSort(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setSubselectAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCascade(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setMutable(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmSetType.setPersister(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmAuxiliaryDatabaseObjectType$JaxbHbmDefinition.setClazz(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType.getQueryRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType.setQueryRef(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter9", "org.hibernate.boot.jaxb.hbm.spi.Adapter9()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.boot.jaxb.hbm.spi.Adapter9.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter9.marshal(org.hibernate.engine.OptimisticLockStyle)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter9.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter9.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.getGenerator()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.setGenerator(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.getColumnAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.setColumnAttribute(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.getLength()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.setLength(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCollectionIdType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType.getRename()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmClassRenameType.setRename(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmResultSetMappingType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmResultSetMappingType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmResultSetMappingType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmResultSetMappingType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmTypeDefinitionType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.Adapter4", "org.hibernate.boot.jaxb.hbm.spi.Adapter4()"], ["org.hibernate.EntityMode", "org.hibernate.boot.jaxb.hbm.spi.Adapter4.unmarshal(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.Adapter4.marshal(org.hibernate.EntityMode)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter4.marshal(java.lang.Object)"], ["java.lang.Object", "org.hibernate.boot.jaxb.hbm.spi.Adapter4.unmarshal(java.lang.Object)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.setValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.getAlias()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.setAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.getEntity()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterAliasMappingType.setEntity(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setCascade(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setClazz(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.isConstrained()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setConstrained(java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setEmbedXml(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getEntityName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setEntityName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getForeignKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setForeignKey(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getFormulaAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setFormulaAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithNoProxyEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getPropertyRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setPropertyRef(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.getOnDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToOneType.setOnDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOnDeleteEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType.getValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType.setValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmDialectScopeType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.getAlias()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.setAlias(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.getLockMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.setLockMode(org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.getProperty()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType.setProperty(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSubselect(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getDiscriminatorValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setDiscriminatorValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmJoinedSubclassEntityType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getMapKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setMapKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyBasicType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCompositeMapKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCompositeMapKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyCompositeType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getMapKeyManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setMapKeyManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapKeyManyToManyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCompositeIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCompositeIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getIndexManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setIndexManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToManyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getIndexManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setIndexManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexManyToAnyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getOneToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setOneToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getManyToMany()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setManyToMany(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCompositeElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCompositeElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getManyToAny()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setManyToAny(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getLazy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setLazy(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setNode(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getOrderBy()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setOrderBy(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSort()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSort(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCascade()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCascade(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setBatchSize(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.isInverse()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setInverse(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setMutable(java.lang.Boolean)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setOptimisticLock(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCollectionType(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setPersister(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmMapType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType.getRegion()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdCacheType.setRegion(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter()"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.isInverse()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLazyWithExtraEnum", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getLazy()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOneToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getOneToMany()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getCompositeElement()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToManyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getManyToMany()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmManyToAnyCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getManyToAny()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.PluralAttributeInfoPrimitiveArrayAdapter.getCascade()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.getCondition()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.setCondition(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.getAutoAliasInjection()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFilterType.setAutoAliasInjection(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType()"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNaturalIdType.setMutable(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSubselect()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSubselect(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getCache()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setCache(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCacheType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setComment(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getKey()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setKey(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmKeyType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getListIndex()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setListIndex(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmListIndexType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getElement()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setElement(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmBasicCollectionElementType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getLoader()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setLoader(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmLoaderType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSqlInsert()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSqlInsert(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSqlUpdate()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSqlUpdate(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSqlDelete()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSqlDelete(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSqlDeleteAll()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSqlDeleteAll(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCustomSqlDmlType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setAccess(java.lang.String)"], ["int", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getBatchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setBatchSize(java.lang.Integer)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getCheck()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setCheck(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getCollectionType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setCollectionType(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.isEmbedXml()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setEmbedXml(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getFetch()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setFetch(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmFetchStyleWithSubselectEnum)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.isMutable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setMutable(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setNode(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.isOptimisticLock()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setOptimisticLock(java.lang.Boolean)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getOuterJoin()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setOuterJoin(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmOuterJoinEnum)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getPersister()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setPersister(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getWhere()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSchema()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getCatalog()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getTable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setTable(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.getSubselectAttribute()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmPrimitiveArrayType.setSubselectAttribute(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum[]", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum.values()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum.value()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType()"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getGenerator()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setGenerator(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmGeneratorSpecificationType)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getAccess()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setAccess(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setClazz(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.isMapped()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setMapped(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getNode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setNode(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.getUnsavedValue()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIdType.setUnsavedValue(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmUnsavedValueCompositeIdEnum)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType.getType()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmQueryParamType.setType(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType()"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType.getClazz()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmCompositeIndexType.setClazz(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType()"], ["org.hibernate.CacheMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getCacheMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setCacheMode(org.hibernate.CacheMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getCacheRegion()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setCacheRegion(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.isCacheable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setCacheable(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getComment()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setComment(java.lang.String)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getFetchSize()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setFetchSize(java.lang.Integer)"], ["org.hibernate.FlushMode", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getFlushMode()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setFlushMode(org.hibernate.FlushMode)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getName()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setName(java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.isReadOnly()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setReadOnly(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getTimeout()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setTimeout(java.lang.Integer)"], ["boolean", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.isCallable()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setCallable(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.getResultsetRef()"], ["void", "org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNamedNativeQueryType.setResultsetRef(java.lang.String)"], ["org.hibernate.boot.jaxb.hbm.internal.CacheModeConverter", "org.hibernate.boot.jaxb.hbm.internal.CacheModeConverter()"], ["org.hibernate.CacheMode", "org.hibernate.boot.jaxb.hbm.internal.CacheModeConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.CacheModeConverter.toXml(org.hibernate.CacheMode)"], ["org.hibernate.boot.jaxb.hbm.internal.OptimisticLockStyleConverter", "org.hibernate.boot.jaxb.hbm.internal.OptimisticLockStyleConverter()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.boot.jaxb.hbm.internal.OptimisticLockStyleConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.OptimisticLockStyleConverter.toXml(org.hibernate.engine.OptimisticLockStyle)"], ["org.hibernate.boot.jaxb.hbm.internal.EntityModeConverter", "org.hibernate.boot.jaxb.hbm.internal.EntityModeConverter()"], ["org.hibernate.EntityMode", "org.hibernate.boot.jaxb.hbm.internal.EntityModeConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.EntityModeConverter.toXml(org.hibernate.EntityMode)"], ["org.hibernate.boot.jaxb.hbm.internal.LockModeConverter", "org.hibernate.boot.jaxb.hbm.internal.LockModeConverter()"], ["org.hibernate.LockMode", "org.hibernate.boot.jaxb.hbm.internal.LockModeConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.LockModeConverter.toXml(org.hibernate.LockMode)"], ["org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition(java.lang.String, java.util.List)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition.getName()"], ["java.util.List", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition.getValueMappingSources()"], ["org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder(java.lang.String)"], ["void", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.addReturn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryScalarReturnType)"], ["void", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.addReturn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryReturnType)"], ["void", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.addReturn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryJoinReturnType)"], ["void", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.addReturn(org.hibernate.boot.jaxb.hbm.spi.JaxbHbmNativeQueryCollectionLoadReturnType)"], ["boolean", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.hasAnyReturns()"], ["org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition", "org.hibernate.boot.jaxb.hbm.internal.ImplicitResultSetMappingDefinition$Builder.build()"], ["org.hibernate.boot.jaxb.hbm.internal.CacheAccessTypeConverter", "org.hibernate.boot.jaxb.hbm.internal.CacheAccessTypeConverter()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.boot.jaxb.hbm.internal.CacheAccessTypeConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.CacheAccessTypeConverter.toXml(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.boot.jaxb.hbm.internal.ExecuteUpdateResultCheckStyleConverter", "org.hibernate.boot.jaxb.hbm.internal.ExecuteUpdateResultCheckStyleConverter()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.boot.jaxb.hbm.internal.ExecuteUpdateResultCheckStyleConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.ExecuteUpdateResultCheckStyleConverter.toXml(org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["org.hibernate.boot.jaxb.hbm.internal.FlushModeConverter", "org.hibernate.boot.jaxb.hbm.internal.FlushModeConverter()"], ["org.hibernate.FlushMode", "org.hibernate.boot.jaxb.hbm.internal.FlushModeConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.FlushModeConverter.toXml(org.hibernate.FlushMode)"], ["org.hibernate.boot.jaxb.hbm.internal.GenerationTimingConverter", "org.hibernate.boot.jaxb.hbm.internal.GenerationTimingConverter()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.boot.jaxb.hbm.internal.GenerationTimingConverter.fromXml(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.hbm.internal.GenerationTimingConverter.toXml(org.hibernate.tuple.GenerationTiming)"], ["org.hibernate.boot.jaxb.SourceType[]", "org.hibernate.boot.jaxb.SourceType.values()"], ["org.hibernate.boot.jaxb.SourceType", "org.hibernate.boot.jaxb.SourceType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.SourceType.getLegacyTypeText()"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.jaxb.spi.XmlSource.getOrigin()"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.spi.Binding(T, org.hibernate.boot.jaxb.Origin)"], ["T", "org.hibernate.boot.jaxb.spi.Binding.getRoot()"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.jaxb.spi.Binding.getOrigin()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.getCollection()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.setCollection(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.getRegion()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.setRegion(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.getUsage()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType.setUsage(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType.getValue()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType.setValue(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType.getName()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.getClazz()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.getInclude()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.setInclude(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.getRegion()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.setRegion(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.getUsage()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType.setUsage(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.getActions()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.setActions(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.getEntityName()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.setEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.getRole()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant.setRole(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity.getContext()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity.setContext(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.ObjectFactory", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgHibernateConfiguration()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgHibernateConfigurationJaxbCfgSecurity()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgHibernateConfigurationJaxbCfgSessionFactory()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgConfigPropertyType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgConfigPropertyType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgMappingReferenceType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEntityCacheType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgEntityCacheType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCollectionCacheType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgCollectionCacheType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerGroupType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgEventListenerGroupType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgEventListenerType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity$JaxbCfgGrant", "org.hibernate.boot.jaxb.cfg.spi.ObjectFactory.createJaxbCfgHibernateConfigurationJaxbCfgSecurityJaxbCfgGrant()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum[]", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum.values()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum.value()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerGroupType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerGroupType()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerGroupType.getType()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerGroupType.setType(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.getClazz()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.setClazz(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.getFile()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.setFile(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.getJar()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.setJar(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.getPackage()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.setPackage(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.getResource()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgMappingReferenceType.setResource(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration.getSessionFactory()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration.setSessionFactory(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration.getSecurity()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration.setSecurity(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSecurity)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum[]", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum.values()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum.value()"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgCacheUsageEnum.fromValue(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory.getName()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgHibernateConfiguration$JaxbCfgSessionFactory.setName(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType()"], ["java.lang.String", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType.getClazz()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType.setClazz(java.lang.String)"], ["org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType.getType()"], ["void", "org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventListenerType.setType(org.hibernate.boot.jaxb.cfg.spi.JaxbCfgEventTypeEnum)"], ["boolean", "org.hibernate.boot.jaxb.internal.AbstractBinder.isValidationEnabled()"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.AbstractBinder.bind(java.io.InputStream, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.AbstractBinder.bind(javax.xml.transform.Source, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.jaxb.internal.JaxpSourceXmlSource", "org.hibernate.boot.jaxb.internal.JaxpSourceXmlSource(org.hibernate.boot.jaxb.Origin, javax.xml.transform.Source)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.JaxpSourceXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["java.net.URL", "org.hibernate.boot.jaxb.internal.stax.LocalSchemaLocator.resolveLocalSchemaUrl(java.lang.String)"], ["javax.xml.validation.Schema", "org.hibernate.boot.jaxb.internal.stax.LocalSchemaLocator.resolveLocalSchema(java.lang.String)"], ["javax.xml.validation.Schema", "org.hibernate.boot.jaxb.internal.stax.LocalSchemaLocator.resolveLocalSchema(java.net.URL)"], ["org.hibernate.boot.jaxb.internal.stax.XmlInfrastructureException", "org.hibernate.boot.jaxb.internal.stax.XmlInfrastructureException(java.lang.String)"], ["org.hibernate.boot.jaxb.internal.stax.XmlInfrastructureException", "org.hibernate.boot.jaxb.internal.stax.XmlInfrastructureException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$DtdMapping", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$DtdMapping(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$DtdMapping.getIdentifierBase()"], ["boolean", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$DtdMapping.matches(java.lang.String, java.lang.String)"], ["java.net.URL", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$DtdMapping.getMappedLocalUrl()"], ["org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader", "org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader(javax.xml.stream.XMLEventReader)"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader.nextEvent()"], ["java.lang.Object", "org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader.next()"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader.getElementText()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.BaseXMLEventReader.nextTag()"], ["org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["java.lang.Object", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.boot.jaxb.internal.stax.LocalSchema[]", "org.hibernate.boot.jaxb.internal.stax.LocalSchema.values()"], ["org.hibernate.boot.jaxb.internal.stax.LocalSchema", "org.hibernate.boot.jaxb.internal.stax.LocalSchema.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.LocalSchema.getNamespaceUri()"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.LocalSchema.getCurrentVersion()"], ["javax.xml.validation.Schema", "org.hibernate.boot.jaxb.internal.stax.LocalSchema.getSchema()"], ["org.hibernate.boot.jaxb.internal.stax.FilteringXMLEventReader", "org.hibernate.boot.jaxb.internal.stax.FilteringXMLEventReader(javax.xml.stream.XMLEventReader)"], ["boolean", "org.hibernate.boot.jaxb.internal.stax.FilteringXMLEventReader.hasNext()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.FilteringXMLEventReader.peek()"], ["org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$NamespaceSchemaMapping", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$NamespaceSchemaMapping(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$NamespaceSchemaMapping.matches(java.lang.String)"], ["java.net.URL", "org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver$NamespaceSchemaMapping.getMappedLocalUrl()"], ["org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader$BadVersionException", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader$BadVersionException(java.lang.String)"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader$BadVersionException.getRequestedVersion()"], ["org.hibernate.boot.jaxb.internal.stax.HbmEventReader", "org.hibernate.boot.jaxb.internal.stax.HbmEventReader(javax.xml.stream.XMLEventReader)"], ["org.hibernate.boot.jaxb.internal.stax.HbmEventReader", "org.hibernate.boot.jaxb.internal.stax.HbmEventReader(javax.xml.stream.XMLEventReader, javax.xml.stream.XMLEventFactory)"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.HbmEventReader.peek()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.HbmEventReader.nextEvent()"], ["org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader(javax.xml.stream.XMLEventReader)"], ["org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader(javax.xml.stream.XMLEventReader, int)"], ["boolean", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.hasNext()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.peek()"], ["void", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.mark()"], ["void", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.mark(int)"], ["void", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.reset()"], ["void", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.close()"], ["int", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.bufferSize()"], ["void", "org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader.remove()"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.stax.XMLStreamConstantsUtils.getEventName(int)"], ["org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader(javax.xml.stream.XMLEventReader)"], ["org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader(javax.xml.stream.XMLEventReader, javax.xml.stream.XMLEventFactory)"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader.peek()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.boot.jaxb.internal.stax.JpaOrmXmlEventReader.nextEvent()"], ["boolean", "org.hibernate.boot.jaxb.internal.ContextProvidingValidationEventHandler.handleEvent(javax.xml.bind.ValidationEvent)"], ["int", "org.hibernate.boot.jaxb.internal.ContextProvidingValidationEventHandler.getLineNumber()"], ["int", "org.hibernate.boot.jaxb.internal.ContextProvidingValidationEventHandler.getColumnNumber()"], ["java.lang.String", "org.hibernate.boot.jaxb.internal.ContextProvidingValidationEventHandler.getMessage()"], ["org.hibernate.boot.jaxb.internal.CacheableFileXmlSource", "org.hibernate.boot.jaxb.internal.CacheableFileXmlSource(org.hibernate.boot.jaxb.Origin, java.io.File, boolean)"], ["java.io.File", "org.hibernate.boot.jaxb.internal.CacheableFileXmlSource.determineCachedFile(java.io.File)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.CacheableFileXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["void", "org.hibernate.boot.jaxb.internal.CacheableFileXmlSource.createSerFile(java.io.File, org.hibernate.boot.jaxb.spi.Binder)"], ["org.hibernate.boot.jaxb.internal.JarFileEntryXmlSource", "org.hibernate.boot.jaxb.internal.JarFileEntryXmlSource(org.hibernate.boot.jaxb.Origin, java.util.jar.JarFile, java.util.zip.ZipEntry)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.JarFileEntryXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["org.hibernate.boot.jaxb.internal.MappingBinder", "org.hibernate.boot.jaxb.internal.MappingBinder(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.boot.jaxb.internal.MappingBinder", "org.hibernate.boot.jaxb.internal.MappingBinder(org.hibernate.boot.registry.classloading.spi.ClassLoaderService, boolean)"], ["org.dom4j.Node", "org.hibernate.boot.jaxb.internal.MappingBinder$1.readNode(javax.xml.stream.XMLEventReader)"], ["org.hibernate.boot.jaxb.internal.FileXmlSource", "org.hibernate.boot.jaxb.internal.FileXmlSource(org.hibernate.boot.jaxb.Origin, java.io.File)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.FileXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.FileXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder, java.io.File, org.hibernate.boot.jaxb.Origin)"], ["org.hibernate.boot.jaxb.internal.InputStreamXmlSource", "org.hibernate.boot.jaxb.internal.InputStreamXmlSource(org.hibernate.boot.jaxb.Origin, java.io.InputStream, boolean)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.InputStreamXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.InputStreamXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder, java.io.InputStream, org.hibernate.boot.jaxb.Origin, boolean)"], ["org.hibernate.boot.jaxb.internal.UrlXmlSource", "org.hibernate.boot.jaxb.internal.UrlXmlSource(org.hibernate.boot.jaxb.Origin, java.net.URL)"], ["org.hibernate.boot.jaxb.spi.Binding", "org.hibernate.boot.jaxb.internal.UrlXmlSource.doBind(org.hibernate.boot.jaxb.spi.Binder)"], ["org.hibernate.boot.jaxb.Origin", "org.hibernate.boot.jaxb.Origin(org.hibernate.boot.jaxb.SourceType, java.lang.String)"], ["org.hibernate.boot.jaxb.SourceType", "org.hibernate.boot.jaxb.Origin.getType()"], ["java.lang.String", "org.hibernate.boot.jaxb.Origin.getName()"], ["boolean", "org.hibernate.boot.jaxb.Origin.equals(java.lang.Object)"], ["int", "org.hibernate.boot.jaxb.Origin.hashCode()"], ["java.lang.String", "org.hibernate.boot.jaxb.Origin.toString()"], ["default", "org.hibernate.boot.SessionFactoryBuilder.org.hibernate.boot.SessionFactoryBuilder applyConnectionProviderDisablesAutoCommit(boolean)"], ["void", "org.hibernate.engine.ResultSetMappingDefinition$1.writeLine(java.lang.String)"], ["org.hibernate.engine.OptimisticLockStyle[]", "org.hibernate.engine.OptimisticLockStyle.values()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.engine.OptimisticLockStyle.valueOf(java.lang.String)"], ["int", "org.hibernate.engine.OptimisticLockStyle.getOldCode()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.engine.OptimisticLockStyle.interpretOldCode(int)"], ["org.hibernate.engine.FetchStyle[]", "org.hibernate.engine.FetchStyle.values()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.engine.FetchStyle.valueOf(java.lang.String)"], ["org.hibernate.engine.profile.FetchProfile", "org.hibernate.engine.profile.FetchProfile(java.lang.String)"], ["void", "org.hibernate.engine.profile.FetchProfile.addFetch(org.hibernate.engine.profile.Association, java.lang.String)"], ["void", "org.hibernate.engine.profile.FetchProfile.addFetch(org.hibernate.engine.profile.Association, org.hibernate.engine.profile.Fetch$Style)"], ["void", "org.hibernate.engine.profile.FetchProfile.addFetch(org.hibernate.engine.profile.Fetch)"], ["java.lang.String", "org.hibernate.engine.profile.FetchProfile.getName()"], ["java.util.Map<java.lang.String, org.hibernate.engine.profile.Fetch>", "org.hibernate.engine.profile.FetchProfile.getFetches()"], ["org.hibernate.engine.profile.Fetch", "org.hibernate.engine.profile.FetchProfile.getFetchByRole(java.lang.String)"], ["boolean", "org.hibernate.engine.profile.FetchProfile.isContainsJoinFetchedCollection()"], ["boolean", "org.hibernate.engine.profile.FetchProfile.isContainsJoinFetchedBag()"], ["org.hibernate.engine.profile.Fetch$Style[]", "org.hibernate.engine.profile.Fetch$Style.values()"], ["org.hibernate.engine.profile.Fetch$Style", "org.hibernate.engine.profile.Fetch$Style.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.profile.Fetch$Style.toString()"], ["org.hibernate.engine.profile.Fetch$Style", "org.hibernate.engine.profile.Fetch$Style.parse(java.lang.String)"], ["org.hibernate.engine.profile.Fetch", "org.hibernate.engine.profile.Fetch(org.hibernate.engine.profile.Association, org.hibernate.engine.profile.Fetch$Style)"], ["org.hibernate.engine.profile.Association", "org.hibernate.engine.profile.Fetch.getAssociation()"], ["org.hibernate.engine.profile.Fetch$Style", "org.hibernate.engine.profile.Fetch.getStyle()"], ["java.lang.String", "org.hibernate.engine.profile.Fetch.toString()"], ["org.hibernate.engine.profile.Association", "org.hibernate.engine.profile.Association(org.hibernate.persister.entity.EntityPersister, java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.profile.Association.getOwner()"], ["java.lang.String", "org.hibernate.engine.profile.Association.getAssociationPath()"], ["java.lang.String", "org.hibernate.engine.profile.Association.getRole()"], ["org.hibernate.engine.spi.CascadeStyles$BaseCascadeStyle", "org.hibernate.engine.spi.CascadeStyles$BaseCascadeStyle()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$BaseCascadeStyle.reallyDoCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$BaseCascadeStyle.hasOrphanDelete()"], ["void", "org.hibernate.engine.spi.ActionQueue$AbstractTransactionCompletionProcessQueue.register(T)"], ["boolean", "org.hibernate.engine.spi.ActionQueue$AbstractTransactionCompletionProcessQueue.hasActions()"], ["void", "org.hibernate.engine.spi.CascadingActions$9.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$9.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$9.deleteOrphans()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$9.toString()"], ["org.hibernate.engine.spi.AbstractDelegatingSessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder(org.hibernate.SessionBuilder)"], ["org.hibernate.Session", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.openSession()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.interceptor(org.hibernate.Interceptor)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.noInterceptor()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.statementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.connection(java.sql.Connection)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.autoJoinTransactions(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.autoClose(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.flushBeforeCompletion(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.tenantIdentifier(java.lang.String)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.eventListeners(org.hibernate.SessionEventListener...)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.clearEventListeners()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.jdbcTimeZone(java.util.TimeZone)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.setQueryParameterValidation(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.connectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.autoClear(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilder.flushMode(org.hibernate.FlushMode)"], ["org.hibernate.engine.spi.CacheInitiator", "org.hibernate.engine.spi.CacheInitiator()"], ["org.hibernate.cache.spi.CacheImplementor", "org.hibernate.engine.spi.CacheInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.spi.CacheInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.engine.spi.EntityKey(java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["boolean", "org.hibernate.engine.spi.EntityKey.isBatchLoadable()"], ["java.io.Serializable", "org.hibernate.engine.spi.EntityKey.getIdentifier()"], ["java.lang.String", "org.hibernate.engine.spi.EntityKey.getEntityName()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.spi.EntityKey.getPersister()"], ["boolean", "org.hibernate.engine.spi.EntityKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.spi.EntityKey.hashCode()"], ["java.lang.String", "org.hibernate.engine.spi.EntityKey.toString()"], ["void", "org.hibernate.engine.spi.EntityKey.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.engine.spi.EntityKey.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["default", "org.hibernate.engine.spi.PersistentAttributeInterceptor.void attributeInitialized(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.engine.spi.VersionValue$1.isUnsaved(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.VersionValue$1.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.VersionValue$1.toString()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$3.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$3.toString()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$1.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$1.hasOrphanDelete()"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$1.toString()"], ["void", "org.hibernate.engine.spi.CascadingActions$4.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$4.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$4.deleteOrphans()"], ["boolean", "org.hibernate.engine.spi.CascadingActions$4.performOnLazyProperty()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$4.toString()"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.spi.CollectionEntry(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.spi.CollectionEntry(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, boolean)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.spi.CollectionEntry(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.spi.CollectionEntry(org.hibernate.collection.spi.PersistentCollection, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.engine.spi.CollectionEntry.preFlush(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.spi.CollectionEntry.postInitialize(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.spi.CollectionEntry.postFlush(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.spi.CollectionEntry.afterAction(org.hibernate.collection.spi.PersistentCollection)"], ["java.io.Serializable", "org.hibernate.engine.spi.CollectionEntry.getKey()"], ["java.lang.String", "org.hibernate.engine.spi.CollectionEntry.getRole()"], ["java.io.Serializable", "org.hibernate.engine.spi.CollectionEntry.getSnapshot()"], ["void", "org.hibernate.engine.spi.CollectionEntry.resetStoredSnapshot(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.wasDereferenced()"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isReached()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setReached(boolean)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isProcessed()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setProcessed(boolean)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isDoupdate()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setDoupdate(boolean)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isDoremove()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setDoremove(boolean)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isDorecreate()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setDorecreate(boolean)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isIgnore()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.engine.spi.CollectionEntry.getCurrentPersister()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setCurrentPersister(org.hibernate.persister.collection.CollectionPersister)"], ["java.io.Serializable", "org.hibernate.engine.spi.CollectionEntry.getCurrentKey()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setCurrentKey(java.io.Serializable)"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.engine.spi.CollectionEntry.getLoadedPersister()"], ["java.io.Serializable", "org.hibernate.engine.spi.CollectionEntry.getLoadedKey()"], ["void", "org.hibernate.engine.spi.CollectionEntry.setRole(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.CollectionEntry.toString()"], ["java.util.Collection", "org.hibernate.engine.spi.CollectionEntry.getOrphans(java.lang.String, org.hibernate.collection.spi.PersistentCollection)"], ["boolean", "org.hibernate.engine.spi.CollectionEntry.isSnapshotEmpty(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.spi.CollectionEntry.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.spi.CollectionEntry.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.engine.spi.IdentifierValue", "org.hibernate.engine.spi.IdentifierValue(java.io.Serializable)"], ["java.lang.Boolean", "org.hibernate.engine.spi.IdentifierValue.isUnsaved(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.IdentifierValue.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.IdentifierValue.toString()"], ["java.lang.Object", "org.hibernate.engine.spi.IdentifierValue.getDefaultValue(java.lang.Object)"], ["void", "org.hibernate.engine.spi.CascadingActions$8.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$8.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$8.deleteOrphans()"], ["boolean", "org.hibernate.engine.spi.CascadingActions$8.requiresNoCascadeChecking()"], ["void", "org.hibernate.engine.spi.CascadingActions$8.noCascade(org.hibernate.event.spi.EventSource, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.type.Type, int)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$8.performOnLazyProperty()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$8.toString()"], ["void", "org.hibernate.engine.spi.CascadingActions$7.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$7.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$7.deleteOrphans()"], ["boolean", "org.hibernate.engine.spi.CascadingActions$7.performOnLazyProperty()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$7.toString()"], ["void", "org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue.beforeTransactionCompletion()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$5.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$5.toString()"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinition(java.lang.String, java.lang.String, org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[], java.util.List<java.lang.String>, boolean, java.lang.String, java.lang.Integer, java.lang.Integer, org.hibernate.FlushMode, org.hibernate.CacheMode, boolean, java.lang.String, java.util.Map, boolean)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinition(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>, boolean, java.lang.String, java.lang.Integer, java.lang.Integer, org.hibernate.FlushMode, org.hibernate.CacheMode, boolean, java.lang.String, java.util.Map, boolean)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.engine.spi.NamedSQLQueryDefinition.getQueryReturns()"], ["boolean", "org.hibernate.engine.spi.NamedSQLQueryDefinition.isCallable()"], ["java.lang.String", "org.hibernate.engine.spi.NamedSQLQueryDefinition.getResultSetRef()"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinition.makeCopy(java.lang.String)"], ["void", "org.hibernate.engine.spi.NamedSQLQueryDefinition.addQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[])"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinition.makeCopy(java.lang.String)"], ["org.hibernate.engine.spi.AbstractDelegatingSessionBuilderImplementor", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilderImplementor(org.hibernate.engine.spi.SessionBuilderImplementor)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilderImplementor.owner(org.hibernate.engine.spi.SessionOwner)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSessionBuilderImplementor.owner(org.hibernate.engine.spi.SessionOwner)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions.getAllElementsIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions.getLoadedElementsIterator(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.type.CollectionType, java.lang.Object)"], ["org.hibernate.engine.spi.EntityUniqueKey", "org.hibernate.engine.spi.EntityUniqueKey(java.lang.String, java.lang.String, java.lang.Object, org.hibernate.type.Type, org.hibernate.EntityMode, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.engine.spi.EntityUniqueKey.getEntityName()"], ["java.lang.Object", "org.hibernate.engine.spi.EntityUniqueKey.getKey()"], ["java.lang.String", "org.hibernate.engine.spi.EntityUniqueKey.getUniqueKeyName()"], ["int", "org.hibernate.engine.spi.EntityUniqueKey.generateHashCode(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.engine.spi.EntityUniqueKey.hashCode()"], ["boolean", "org.hibernate.engine.spi.EntityUniqueKey.equals(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.EntityUniqueKey.toString()"], ["void", "org.hibernate.engine.spi.EntityUniqueKey.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.spi.EntityUniqueKey", "org.hibernate.engine.spi.EntityUniqueKey.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["java.lang.Boolean", "org.hibernate.engine.spi.IdentifierValue$3.isUnsaved(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.IdentifierValue$3.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.IdentifierValue$3.toString()"], ["java.lang.Object", "org.hibernate.engine.spi.IdentifierValue$3.getDefaultValue(java.lang.Object)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder()"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setName(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setQuery(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setCacheable(boolean)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setCacheRegion(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setTimeout(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setFetchSize(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setReadOnly(boolean)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setComment(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.addParameterType(java.lang.String, java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setParameterTypes(java.util.Map)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setFirstResult(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.setMaxResults(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedQueryDefinitionBuilder.createNamedQueryDefinition()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$6.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$6.toString()"], ["java.lang.Boolean", "org.hibernate.engine.spi.IdentifierValue$1.isUnsaved(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.IdentifierValue$1.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.IdentifierValue$1.toString()"], ["java.lang.Object", "org.hibernate.engine.spi.IdentifierValue$1.getDefaultValue(java.lang.Object)"], ["void", "org.hibernate.engine.spi.CascadingActions$2.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$2.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$2.deleteOrphans()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$2.toString()"], ["org.hibernate.engine.spi.AssociationKey", "org.hibernate.engine.spi.AssociationKey(org.hibernate.engine.spi.EntityKey, java.lang.String)"], ["boolean", "org.hibernate.engine.spi.AssociationKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.spi.AssociationKey.hashCode()"], ["org.hibernate.engine.spi.BatchFetchQueue", "org.hibernate.engine.spi.BatchFetchQueue(org.hibernate.engine.spi.PersistenceContext)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.clear()"], ["org.hibernate.engine.spi.SubselectFetch", "org.hibernate.engine.spi.BatchFetchQueue.getSubselect(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.addSubselect(org.hibernate.engine.spi.EntityKey, org.hibernate.engine.spi.SubselectFetch)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.removeSubselect(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.addBatchLoadableEntityKey(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.removeBatchLoadableEntityKey(org.hibernate.engine.spi.EntityKey)"], ["boolean", "org.hibernate.engine.spi.BatchFetchQueue.containsEntityKey(org.hibernate.engine.spi.EntityKey)"], ["java.io.Serializable[]", "org.hibernate.engine.spi.BatchFetchQueue.getEntityBatch(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, int, org.hibernate.EntityMode)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.addBatchLoadableCollection(org.hibernate.collection.spi.PersistentCollection, org.hibernate.engine.spi.CollectionEntry)"], ["void", "org.hibernate.engine.spi.BatchFetchQueue.removeBatchLoadableCollection(org.hibernate.engine.spi.CollectionEntry)"], ["java.io.Serializable[]", "org.hibernate.engine.spi.BatchFetchQueue.getCollectionBatch(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, int)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$10.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$10.toString()"], ["org.hibernate.engine.spi.SessionFactoryDelegatingImpl", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getSessionFactoryOptions()"], ["org.hibernate.engine.spi.SessionBuilderImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.withOptions()"], ["org.hibernate.Session", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.openSession()"], ["org.hibernate.Session", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCurrentSession()"], ["org.hibernate.StatelessSessionBuilder", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.withStatelessOptions()"], ["org.hibernate.StatelessSession", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.openStatelessSession()"], ["org.hibernate.StatelessSession", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.openStatelessSession(java.sql.Connection)"], ["org.hibernate.metadata.ClassMetadata", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getClassMetadata(java.lang.Class)"], ["org.hibernate.metadata.ClassMetadata", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getClassMetadata(java.lang.String)"], ["org.hibernate.metadata.CollectionMetadata", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCollectionMetadata(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.metadata.ClassMetadata>", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getAllClassMetadata()"], ["java.util.Map", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getAllCollectionMetadata()"], ["org.hibernate.stat.spi.StatisticsImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getStatistics()"], ["void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.close()"], ["boolean", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.isClosed()"], ["org.hibernate.cache.spi.CacheImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCache()"], ["javax.persistence.PersistenceUnitUtil", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getPersistenceUnitUtil()"], ["void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.addNamedQuery(java.lang.String, javax.persistence.Query)"], ["<T> T", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.unwrap(java.lang.Class<T>)"], ["<T> void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.addNamedEntityGraph(java.lang.String, javax.persistence.EntityGraph<T>)"], ["java.util.Set", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getDefinedFilterNames()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getFilterDefinition(java.lang.String)"], ["boolean", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.containsFetchProfileDefinition(java.lang.String)"], ["org.hibernate.TypeHelper", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getTypeHelper()"], ["org.hibernate.type.TypeResolver", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getTypeResolver()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getProperties()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getEntityPersister(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.entity.EntityPersister>", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getEntityPersisters()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCollectionPersister(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.collection.CollectionPersister>", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCollectionPersisters()"], ["org.hibernate.engine.jdbc.spi.JdbcServices", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getJdbcServices()"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getDialect()"], ["org.hibernate.Interceptor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getInterceptor()"], ["org.hibernate.engine.query.spi.QueryPlanCache", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getQueryPlanCache()"], ["org.hibernate.type.Type[]", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getReturnTypes(java.lang.String)"], ["java.lang.String[]", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getReturnAliases(java.lang.String)"], ["java.lang.String[]", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getImplementors(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getImportedClassName(java.lang.String)"], ["org.hibernate.graph.spi.RootGraphImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.findEntityGraphByName(java.lang.String)"], ["org.hibernate.stat.spi.StatisticsImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getStatisticsImplementor()"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getNamedQuery(java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.registerNamedQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getNamedSQLQuery(java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.registerNamedSQLQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition)"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getResultSetMapping(java.lang.String)"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getIdentifierGenerator(java.lang.String)"], ["org.hibernate.exception.spi.SQLExceptionConverter", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getSQLExceptionConverter()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getSQLExceptionHelper()"], ["org.hibernate.cfg.Settings", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getSettings()"], ["org.hibernate.Session", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.openTemporarySession()"], ["org.hibernate.proxy.EntityNotFoundDelegate", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getEntityNotFoundDelegate()"], ["org.hibernate.dialect.function.SQLFunctionRegistry", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getSqlFunctionRegistry()"], ["org.hibernate.engine.profile.FetchProfile", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getFetchProfile(java.lang.String)"], ["org.hibernate.service.spi.ServiceRegistryImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getServiceRegistry()"], ["void", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.addObserver(org.hibernate.SessionFactoryObserver)"], ["org.hibernate.CustomEntityDirtinessStrategy", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCustomEntityDirtinessStrategy()"], ["org.hibernate.context.spi.CurrentTenantIdentifierResolver", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCurrentTenantIdentifierResolver()"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getNamedQueryRepository()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.locateEntityPersister(java.lang.Class)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.locateEntityPersister(java.lang.String)"], ["org.hibernate.engine.spi.SessionFactoryImplementor$DeserializationResolver", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getDeserializationResolver()"], ["org.hibernate.id.factory.IdentifierGeneratorFactory", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getIdentifierGeneratorFactory()"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getIdentifierType(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getIdentifierPropertyName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getReferencedPropertyType(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getUuid()"], ["java.lang.String", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getName()"], ["javax.naming.Reference", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getReference()"], ["<T> java.util.List<org.hibernate.graph.spi.RootGraphImplementor<? super T>>", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.findEntityGraphsByJavaType(java.lang.Class<T>)"], ["javax.persistence.EntityManager", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.createEntityManager()"], ["javax.persistence.EntityManager", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.createEntityManager(java.util.Map)"], ["javax.persistence.EntityManager", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.createEntityManager(javax.persistence.SynchronizationType)"], ["javax.persistence.EntityManager", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.createEntityManager(javax.persistence.SynchronizationType, java.util.Map)"], ["javax.persistence.criteria.CriteriaBuilder", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCriteriaBuilder()"], ["org.hibernate.metamodel.spi.MetamodelImplementor", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getMetamodel()"], ["boolean", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.isOpen()"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.resolveParameterBindType(java.lang.Object)"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.resolveParameterBindType(java.lang.Class)"], ["org.hibernate.Cache", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCache()"], ["org.hibernate.stat.Statistics", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getStatistics()"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.withOptions()"], ["javax.persistence.Cache", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getCache()"], ["javax.persistence.metamodel.Metamodel", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getMetamodel()"], ["org.hibernate.Metamodel", "org.hibernate.engine.spi.SessionFactoryDelegatingImpl.getMetamodel()"], ["org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier.getParent()"], ["void", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier.setParent(org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier)"], ["boolean", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier.equals(java.lang.Object)"], ["int", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter$BatchIdentifier.hashCode()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$8.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$8.toString()"], ["org.hibernate.engine.spi.SessionDelegatorBaseImpl", "org.hibernate.engine.spi.SessionDelegatorBaseImpl(org.hibernate.engine.spi.SessionImplementor, org.hibernate.Session)"], ["org.hibernate.engine.spi.SessionDelegatorBaseImpl", "org.hibernate.engine.spi.SessionDelegatorBaseImpl(org.hibernate.engine.spi.SessionImplementor)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.execute(org.hibernate.engine.jdbc.LobCreationContext$Callback<T>)"], ["java.lang.String", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTenantIdentifier()"], ["java.util.UUID", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getSessionIdentifier()"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcConnectionAccess()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.generateEntityKey(java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.Interceptor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getInterceptor()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setAutoClear(boolean)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isTransactionInProgress()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.checkTransactionNeededForUpdateOperation(java.lang.String)"], ["org.hibernate.LockOptions", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getLockRequest(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["org.hibernate.LockOptions", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.buildLockOptions(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String, java.lang.Class<T>, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.initializeCollection(org.hibernate.collection.spi.PersistentCollection, boolean)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.internalLoad(java.lang.String, java.io.Serializable, boolean, boolean)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.immediateLoad(java.lang.String, java.io.Serializable)"], ["long", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTimestamp()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getFactory()"], ["java.util.List", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.list(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.iterate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.scroll(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.scroll(org.hibernate.Criteria, org.hibernate.ScrollMode)"], ["java.util.List", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.list(org.hibernate.Criteria)"], ["java.util.List", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.listFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.iterateFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityPersister(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityUsingInterceptor(org.hibernate.engine.spi.EntityKey)"], ["java.io.Serializable", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getContextEntityIdentifier(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.bestGuessEntityName(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.guessEntityName(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.instantiate(java.lang.String, java.io.Serializable)"], ["java.util.List", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.listCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.scrollCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["java.util.List", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.list(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.scroll(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["int", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getDontFlushFromFind()"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getPersistenceContext()"], ["int", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.executeUpdate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["int", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.executeNativeUpdate(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.CacheMode", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getCacheMode()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setCacheMode(org.hibernate.CacheMode)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isOpen()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isConnected()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.checkOpen(boolean)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.markForRollbackOnly()"], ["long", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTransactionStartTimestamp()"], ["javax.persistence.FlushModeType", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getFlushMode()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setFlushMode(javax.persistence.FlushModeType)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.FlushMode", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getHibernateFlushMode()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setFlushMode(org.hibernate.FlushMode)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.lock(java.lang.Object, javax.persistence.LockModeType)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.lock(java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["java.sql.Connection", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.connection()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.flush()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isEventSource()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.afterScrollOperation()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTransactionCoordinator()"], ["org.hibernate.engine.jdbc.spi.JdbcCoordinator", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcCoordinator()"], ["org.hibernate.engine.jdbc.spi.JdbcServices", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcServices()"], ["org.hibernate.resource.jdbc.spi.JdbcSessionContext", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcSessionContext()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isClosed()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.checkOpen()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isOpenOrWaitingForAutoClose()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.shouldAutoClose()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isQueryParametersValidationEnabled()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.shouldAutoJoinTransaction()"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getLoadQueryInfluencers()"], ["org.hibernate.engine.spi.ExceptionConverter", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getExceptionConverter()"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getPersistenceContextInternal()"], ["org.hibernate.engine.spi.SessionEventListenerManager", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEventListenerManager()"], ["org.hibernate.Transaction", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.accessTransaction()"], ["org.hibernate.Transaction", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.beginTransaction()"], ["org.hibernate.Transaction", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTransaction()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.startTransactionBoundary()"], ["org.hibernate.cache.spi.CacheTransactionSynchronization", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getCacheTransactionSynchronization()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.afterTransactionBegin()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.beforeTransactionCompletion()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.afterTransactionCompletion(boolean, boolean)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.flushBeforeTransactionCompletion()"], ["javax.persistence.EntityManagerFactory", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityManagerFactory()"], ["javax.persistence.criteria.CriteriaBuilder", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getCriteriaBuilder()"], ["javax.persistence.metamodel.Metamodel", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getMetamodel()"], ["<T> org.hibernate.graph.spi.RootGraphImplementor<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createEntityGraph(java.lang.Class<T>)"], ["<T> java.util.List<javax.persistence.EntityGraph<? super T>>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityGraphs(java.lang.Class<T>)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedSQLQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedNativeQuery(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String, java.lang.Class<T>)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaQuery<T>)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String, java.lang.Class<T>)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.String)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedStoredProcedureQuery(java.lang.String)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureQuery(java.lang.String)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureQuery(java.lang.String, java.lang.Class...)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureQuery(java.lang.String, java.lang.String...)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.joinTransaction()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isJoinedToTransaction()"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.unwrap(java.lang.Class<T>)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getDelegate()"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createSQLQuery(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedProcedureCall(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureCall(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureCall(java.lang.String, java.lang.Class...)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createStoredProcedureCall(java.lang.String, java.lang.String...)"], ["org.hibernate.Criteria", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createCriteria(java.lang.Class)"], ["org.hibernate.Criteria", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createCriteria(java.lang.Class, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createCriteria(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.sessionWithOptions()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getSessionFactory()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.close()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.cancelQuery()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isDirty()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isDefaultReadOnly()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setDefaultReadOnly(boolean)"], ["java.io.Serializable", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getIdentifier(java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.contains(java.lang.String, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.contains(java.lang.Object)"], ["javax.persistence.LockModeType", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getLockMode(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setProperty(java.lang.String, java.lang.Object)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getProperties()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.evict(java.lang.Object)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockMode)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.String, java.io.Serializable, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.String, java.io.Serializable, org.hibernate.LockOptions)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.Class<T>, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.load(java.lang.Object, java.io.Serializable)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.replicate(java.lang.Object, org.hibernate.ReplicationMode)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)"], ["java.io.Serializable", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.save(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.save(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.saveOrUpdate(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.saveOrUpdate(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.update(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.update(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.merge(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.merge(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.persist(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.remove(java.lang.Object)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.find(java.lang.Class<T>, java.lang.Object)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.find(java.lang.Class<T>, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.find(java.lang.Class<T>, java.lang.Object, javax.persistence.LockModeType)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.find(java.lang.Class<T>, java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getReference(java.lang.Class<T>, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.persist(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.delete(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.delete(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.lock(java.lang.Object, org.hibernate.LockMode)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.lock(java.lang.String, java.lang.Object, org.hibernate.LockMode)"], ["org.hibernate.Session$LockRequest", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.buildLockRequest(org.hibernate.LockOptions)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object, javax.persistence.LockModeType)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object, org.hibernate.LockMode)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.Object, org.hibernate.LockOptions)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.String, java.lang.Object, org.hibernate.LockOptions)"], ["org.hibernate.LockMode", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getCurrentLockMode(java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createFilter(java.lang.Object, java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.clear()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.detach(java.lang.Object)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.Class<T>, java.io.Serializable)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockMode)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.String, java.io.Serializable, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.get(java.lang.String, java.io.Serializable, org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityName(java.lang.Object)"], ["org.hibernate.IdentifierLoadAccess", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byId(java.lang.String)"], ["<T> org.hibernate.MultiIdentifierLoadAccess<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byMultipleIds(java.lang.Class<T>)"], ["org.hibernate.MultiIdentifierLoadAccess", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byMultipleIds(java.lang.String)"], ["<T> org.hibernate.IdentifierLoadAccess<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byId(java.lang.Class<T>)"], ["org.hibernate.NaturalIdLoadAccess", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byNaturalId(java.lang.String)"], ["<T> org.hibernate.NaturalIdLoadAccess<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.byNaturalId(java.lang.Class<T>)"], ["org.hibernate.SimpleNaturalIdLoadAccess", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.bySimpleNaturalId(java.lang.String)"], ["<T> org.hibernate.SimpleNaturalIdLoadAccess<T>", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.bySimpleNaturalId(java.lang.Class<T>)"], ["org.hibernate.Filter", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.enableFilter(java.lang.String)"], ["org.hibernate.Filter", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEnabledFilter(java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.disableFilter(java.lang.String)"], ["org.hibernate.stat.SessionStatistics", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getStatistics()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isReadOnly(java.lang.Object)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setReadOnly(java.lang.Object, boolean)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.doWork(org.hibernate.jdbc.Work)"], ["<T> T", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.doReturningWork(org.hibernate.jdbc.ReturningWork<T>)"], ["java.sql.Connection", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.disconnect()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.reconnect(java.sql.Connection)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isFetchProfileEnabled(java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.enableFetchProfile(java.lang.String)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.disableFetchProfile(java.lang.String)"], ["org.hibernate.TypeHelper", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTypeHelper()"], ["org.hibernate.LobHelper", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getLobHelper()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.addEventListeners(org.hibernate.SessionEventListener...)"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.isFlushBeforeCompletionEnabled()"], ["org.hibernate.engine.spi.ActionQueue", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getActionQueue()"], ["java.lang.Object", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.instantiate(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.forceFlush(org.hibernate.engine.spi.EntityEntry)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.merge(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.persist(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.persistOnFlush(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.refresh(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.delete(java.lang.String, java.lang.Object, boolean, java.util.Set)"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.removeOrphanBeforeUpdates(java.lang.String, java.lang.Object)"], ["org.hibernate.engine.spi.SessionImplementor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getSession()"], ["boolean", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.useStreamForLobBinding()"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getLobCreator()"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.remapSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["java.lang.Integer", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcBatchSize()"], ["void", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.setJdbcBatchSize(java.lang.Integer)"], ["java.util.TimeZone", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getJdbcTimeZone()"], ["org.hibernate.query.NativeQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createSQLQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaQuery)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.graph.RootGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityGraph(java.lang.String)"], ["org.hibernate.graph.RootGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createEntityGraph(java.lang.String)"], ["org.hibernate.graph.RootGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createEntityGraph(java.lang.Class)"], ["org.hibernate.SessionFactory", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getSessionFactory()"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedNativeQuery(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedSQLQuery(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.NativeQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createSQLQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getNamedQuery(java.lang.String)"], ["javax.persistence.EntityGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getEntityGraph(java.lang.String)"], ["javax.persistence.EntityGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createEntityGraph(java.lang.String)"], ["javax.persistence.EntityGraph", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createEntityGraph(java.lang.Class)"], ["javax.persistence.EntityTransaction", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getTransaction()"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.String)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNativeQuery(java.lang.String)"], ["javax.persistence.TypedQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createNamedQuery(java.lang.String)"], ["javax.persistence.TypedQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["javax.persistence.TypedQuery", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(javax.persistence.criteria.CriteriaQuery)"], ["javax.persistence.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String)"], ["org.hibernate.Session", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getSession()"], ["org.hibernate.query.Query", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.createQuery(java.lang.String, java.lang.Class, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions)"], ["org.hibernate.jpa.HibernateEntityManagerFactory", "org.hibernate.engine.spi.SessionDelegatorBaseImpl.getFactory()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$12.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$12.toString()"], ["java.lang.Boolean", "org.hibernate.engine.spi.VersionValue$3.isUnsaved(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.VersionValue$3.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.VersionValue$3.toString()"], ["java.lang.Boolean", "org.hibernate.engine.spi.IdentifierValue$2.isUnsaved(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.IdentifierValue$2.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.IdentifierValue$2.toString()"], ["java.lang.Object", "org.hibernate.engine.spi.IdentifierValue$2.getDefaultValue(java.lang.Object)"], ["java.lang.Boolean", "org.hibernate.engine.spi.VersionValue$2.isUnsaved(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.VersionValue$2.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.VersionValue$2.toString()"], ["void", "org.hibernate.engine.spi.CascadingActions$6.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$6.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$6.deleteOrphans()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$6.toString()"], ["org.hibernate.engine.spi.VersionValue", "org.hibernate.engine.spi.VersionValue(java.lang.Object)"], ["java.lang.Boolean", "org.hibernate.engine.spi.VersionValue.isUnsaved(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.spi.VersionValue.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.VersionValue.toString()"], ["org.hibernate.engine.spi.SubselectFetch", "org.hibernate.engine.spi.SubselectFetch(java.lang.String, org.hibernate.persister.entity.Loadable, org.hibernate.engine.spi.QueryParameters, java.util.Set, java.util.Map)"], ["org.hibernate.engine.spi.SubselectFetch", "org.hibernate.engine.spi.SubselectFetch(java.lang.String, java.lang.String, org.hibernate.persister.entity.Loadable, org.hibernate.engine.spi.QueryParameters, java.util.Set, java.util.Map)"], ["java.lang.String", "org.hibernate.engine.spi.SubselectFetch.createSubselectFetchQueryFragment(org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.SubselectFetch.getQueryParameters()"], ["java.util.Set", "org.hibernate.engine.spi.SubselectFetch.getResult()"], ["java.lang.String", "org.hibernate.engine.spi.SubselectFetch.toSubselectString(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.SubselectFetch.toString()"], ["java.util.Map", "org.hibernate.engine.spi.SubselectFetch.getNamedParameterLocMap()"], ["org.hibernate.engine.spi.ActionQueue", "org.hibernate.engine.spi.ActionQueue(org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.engine.spi.ActionQueue.clear()"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.EntityInsertAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.EntityIdentityInsertAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.EntityDeleteAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.OrphanRemovalAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.EntityUpdateAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.CollectionRecreateAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.CollectionRemoveAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.CollectionUpdateAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.QueuedOperationCollectionAction)"], ["void", "org.hibernate.engine.spi.ActionQueue.addAction(org.hibernate.action.internal.BulkOperationCleanupAction)"], ["boolean", "org.hibernate.engine.spi.ActionQueue.hasUnresolvedEntityInsertActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.checkNoUnresolvedActionsAfterOperation()"], ["void", "org.hibernate.engine.spi.ActionQueue.registerProcess(org.hibernate.action.spi.AfterTransactionCompletionProcess)"], ["void", "org.hibernate.engine.spi.ActionQueue.registerProcess(org.hibernate.action.spi.BeforeTransactionCompletionProcess)"], ["void", "org.hibernate.engine.spi.ActionQueue.executeInserts()"], ["void", "org.hibernate.engine.spi.ActionQueue.executeActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.prepareActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.afterTransactionCompletion(boolean)"], ["void", "org.hibernate.engine.spi.ActionQueue.beforeTransactionCompletion()"], ["boolean", "org.hibernate.engine.spi.ActionQueue.areInsertionsOrDeletionsQueued()"], ["boolean", "org.hibernate.engine.spi.ActionQueue.areTablesToBeUpdated(java.util.Set)"], ["<E extends org.hibernate.action.spi.Executable & java.lang.Comparable<?>> void", "org.hibernate.engine.spi.ActionQueue.execute(E)"], ["java.lang.String", "org.hibernate.engine.spi.ActionQueue.toString()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfCollectionRemovals()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfCollectionUpdates()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfCollectionCreations()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfDeletions()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfUpdates()"], ["int", "org.hibernate.engine.spi.ActionQueue.numberOfInsertions()"], ["org.hibernate.engine.spi.ActionQueue$TransactionCompletionProcesses", "org.hibernate.engine.spi.ActionQueue.getTransactionCompletionProcesses()"], ["void", "org.hibernate.engine.spi.ActionQueue.setTransactionCompletionProcesses(org.hibernate.engine.spi.ActionQueue$TransactionCompletionProcesses, boolean)"], ["void", "org.hibernate.engine.spi.ActionQueue.sortCollectionActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.sortActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.clearFromFlushNeededCheck(int)"], ["boolean", "org.hibernate.engine.spi.ActionQueue.hasAfterTransactionActions()"], ["boolean", "org.hibernate.engine.spi.ActionQueue.hasBeforeTransactionActions()"], ["boolean", "org.hibernate.engine.spi.ActionQueue.hasAnyQueuedActions()"], ["void", "org.hibernate.engine.spi.ActionQueue.unScheduleDeletion(org.hibernate.engine.spi.EntityEntry, java.lang.Object)"], ["void", "org.hibernate.engine.spi.ActionQueue.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.spi.ActionQueue", "org.hibernate.engine.spi.ActionQueue.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.engine.spi.CascadingActions$5.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$5.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$5.deleteOrphans()"], ["boolean", "org.hibernate.engine.spi.CascadingActions$5.performOnLazyProperty()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$5.toString()"], ["org.hibernate.engine.spi.CascadingActions$BaseCascadingAction", "org.hibernate.engine.spi.CascadingActions$BaseCascadingAction()"], ["boolean", "org.hibernate.engine.spi.CascadingActions$BaseCascadingAction.requiresNoCascadeChecking()"], ["void", "org.hibernate.engine.spi.CascadingActions$BaseCascadingAction.noCascade(org.hibernate.event.spi.EventSource, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.type.Type, int)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$BaseCascadingAction.performOnLazyProperty()"], ["java.lang.Integer", "org.hibernate.engine.spi.TypedValue$1.initialize()"], ["java.lang.Object", "org.hibernate.engine.spi.TypedValue$1.initialize()"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList()"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList(int)"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList(boolean)"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList(int, boolean)"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList(org.hibernate.engine.spi.ExecutableList$Sorter<E>)"], ["org.hibernate.engine.spi.ExecutableList", "org.hibernate.engine.spi.ExecutableList(int, org.hibernate.engine.spi.ExecutableList$Sorter<E>)"], ["boolean", "org.hibernate.engine.spi.ExecutableList.isEmpty()"], ["E", "org.hibernate.engine.spi.ExecutableList.remove(int)"], ["void", "org.hibernate.engine.spi.ExecutableList.clear()"], ["void", "org.hibernate.engine.spi.ExecutableList.removeLastN(int)"], ["boolean", "org.hibernate.engine.spi.ExecutableList.add(E)"], ["void", "org.hibernate.engine.spi.ExecutableList.sort()"], ["int", "org.hibernate.engine.spi.ExecutableList.size()"], ["E", "org.hibernate.engine.spi.ExecutableList.get(int)"], ["void", "org.hibernate.engine.spi.ExecutableList.writeExternal(java.io.ObjectOutput)"], ["void", "org.hibernate.engine.spi.ExecutableList.readExternal(java.io.ObjectInput)"], ["void", "org.hibernate.engine.spi.ExecutableList.afterDeserialize(org.hibernate.engine.spi.SessionImplementor)"], ["java.lang.String", "org.hibernate.engine.spi.ExecutableList.toString()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$4.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$4.toString()"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.NativeQuery createSQLQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createNamedQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaDelete)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaQuery)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.graph.RootGraph getEntityGraph(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.graph.RootGraph createEntityGraph(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.graph.RootGraph createEntityGraph(java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.SessionFactory getSessionFactory()"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query getNamedQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.NativeQuery getNamedNativeQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.Query getNamedSQLQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.SQLQuery createSQLQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createNamedQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.Query createQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.Query getNamedQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.EntityGraph getEntityGraph(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.EntityGraph createEntityGraph(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.EntityGraph createEntityGraph(java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createNativeQuery(java.lang.String, java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createNativeQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createNativeQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.TypedQuery createNamedQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createNamedQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.TypedQuery createQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaDelete)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.TypedQuery createQuery(javax.persistence.criteria.CriteriaQuery)"], ["default", "org.hibernate.engine.spi.SessionImplementor.javax.persistence.Query createQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionImplementor.org.hibernate.query.Query createQuery(java.lang.String, java.lang.Class, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions)"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedQueryDefinition(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.Integer, java.lang.Integer, org.hibernate.FlushMode, org.hibernate.CacheMode, boolean, java.lang.String, java.util.Map)"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedQueryDefinition(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, org.hibernate.FlushMode, org.hibernate.CacheMode, boolean, java.lang.String, java.util.Map)"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.getName()"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.getQueryString()"], ["boolean", "org.hibernate.engine.spi.NamedQueryDefinition.isCacheable()"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.getCacheRegion()"], ["java.lang.Integer", "org.hibernate.engine.spi.NamedQueryDefinition.getFetchSize()"], ["java.lang.Integer", "org.hibernate.engine.spi.NamedQueryDefinition.getTimeout()"], ["org.hibernate.FlushMode", "org.hibernate.engine.spi.NamedQueryDefinition.getFlushMode()"], ["java.util.Map", "org.hibernate.engine.spi.NamedQueryDefinition.getParameterTypes()"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.getQuery()"], ["org.hibernate.CacheMode", "org.hibernate.engine.spi.NamedQueryDefinition.getCacheMode()"], ["boolean", "org.hibernate.engine.spi.NamedQueryDefinition.isReadOnly()"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.getComment()"], ["org.hibernate.LockOptions", "org.hibernate.engine.spi.NamedQueryDefinition.getLockOptions()"], ["java.lang.Integer", "org.hibernate.engine.spi.NamedQueryDefinition.getFirstResult()"], ["java.lang.Integer", "org.hibernate.engine.spi.NamedQueryDefinition.getMaxResults()"], ["java.lang.String", "org.hibernate.engine.spi.NamedQueryDefinition.toString()"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedQueryDefinition.makeCopy(java.lang.String)"], ["org.hibernate.engine.spi.RowSelection", "org.hibernate.engine.spi.RowSelection()"], ["void", "org.hibernate.engine.spi.RowSelection.setFirstRow(java.lang.Integer)"], ["void", "org.hibernate.engine.spi.RowSelection.setFirstRow(int)"], ["java.lang.Integer", "org.hibernate.engine.spi.RowSelection.getFirstRow()"], ["void", "org.hibernate.engine.spi.RowSelection.setMaxRows(java.lang.Integer)"], ["void", "org.hibernate.engine.spi.RowSelection.setMaxRows(int)"], ["java.lang.Integer", "org.hibernate.engine.spi.RowSelection.getMaxRows()"], ["void", "org.hibernate.engine.spi.RowSelection.setTimeout(java.lang.Integer)"], ["void", "org.hibernate.engine.spi.RowSelection.setTimeout(int)"], ["java.lang.Integer", "org.hibernate.engine.spi.RowSelection.getTimeout()"], ["java.lang.Integer", "org.hibernate.engine.spi.RowSelection.getFetchSize()"], ["void", "org.hibernate.engine.spi.RowSelection.setFetchSize(java.lang.Integer)"], ["void", "org.hibernate.engine.spi.RowSelection.setFetchSize(int)"], ["boolean", "org.hibernate.engine.spi.RowSelection.definesLimits()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$7.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$7.toString()"], ["org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder(org.hibernate.SharedSessionBuilder)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.delegate()"], ["org.hibernate.Session", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.openSession()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.interceptor()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connection()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionReleaseMode()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionHandlingMode()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoJoinTransactions()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoClose()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushBeforeCompletion()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.interceptor(org.hibernate.Interceptor)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.noInterceptor()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.statementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connection(java.sql.Connection)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoJoinTransactions(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoClose(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushBeforeCompletion(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.tenantIdentifier(java.lang.String)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.eventListeners(org.hibernate.SessionEventListener...)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.clearEventListeners()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoClear(boolean)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushMode(org.hibernate.FlushMode)"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushMode()"], ["T", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.jdbcTimeZone(java.util.TimeZone)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushBeforeCompletion(boolean)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoClose(boolean)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.jdbcTimeZone(java.util.TimeZone)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.clearEventListeners()"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.eventListeners(org.hibernate.SessionEventListener[])"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.tenantIdentifier(java.lang.String)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.flushMode(org.hibernate.FlushMode)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoClear(boolean)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.autoJoinTransactions(boolean)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.connection(java.sql.Connection)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.statementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.noInterceptor()"], ["org.hibernate.SessionBuilder", "org.hibernate.engine.spi.AbstractDelegatingSharedSessionBuilder.interceptor(org.hibernate.Interceptor)"], ["org.hibernate.engine.spi.TypedValue", "org.hibernate.engine.spi.TypedValue(org.hibernate.type.Type, java.lang.Object)"], ["org.hibernate.engine.spi.TypedValue", "org.hibernate.engine.spi.TypedValue(org.hibernate.type.Type, java.lang.Object, org.hibernate.EntityMode)"], ["java.lang.Object", "org.hibernate.engine.spi.TypedValue.getValue()"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.TypedValue.getType()"], ["java.lang.String", "org.hibernate.engine.spi.TypedValue.toString()"], ["int", "org.hibernate.engine.spi.TypedValue.hashCode()"], ["boolean", "org.hibernate.engine.spi.TypedValue.equals(java.lang.Object)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.type.Type[] getReturnTypes(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.java.lang.String[] getReturnAliases(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.stat.spi.StatisticsImplementor getStatisticsImplementor()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.engine.spi.NamedQueryDefinition getNamedQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.void registerNamedQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.engine.spi.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.void registerNamedSQLQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.dialect.Dialect getDialect()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.exception.spi.SQLExceptionConverter getSQLExceptionConverter()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.engine.jdbc.spi.SqlExceptionHelper getSQLExceptionHelper()"], ["<T> java.util.List<javax.persistence.EntityGraph<? super T>>", "org.hibernate.engine.spi.SessionFactoryImplementor.findEntityGraphsByType(java.lang.Class<T>)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.entity.EntityPersister>", "org.hibernate.engine.spi.SessionFactoryImplementor.getEntityPersisters()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.persister.collection.CollectionPersister>", "org.hibernate.engine.spi.SessionFactoryImplementor.getCollectionPersisters()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.Class)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.java.lang.String[] getImplementors(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.java.lang.String getImportedClassName(java.lang.String)"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.Cache getCache()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.stat.Statistics getStatistics()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.SessionBuilder withOptions()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.javax.persistence.Cache getCache()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.javax.persistence.metamodel.Metamodel getMetamodel()"], ["default", "org.hibernate.engine.spi.SessionFactoryImplementor.org.hibernate.Metamodel getMetamodel()"], ["org.hibernate.engine.spi.EffectiveEntityGraph", "org.hibernate.engine.spi.EffectiveEntityGraph()"], ["org.hibernate.engine.spi.EffectiveEntityGraph", "org.hibernate.engine.spi.EffectiveEntityGraph(boolean)"], ["org.hibernate.graph.GraphSemantic", "org.hibernate.engine.spi.EffectiveEntityGraph.getSemantic()"], ["void", "org.hibernate.engine.spi.EffectiveEntityGraph.applyGraph(org.hibernate.graph.spi.RootGraphImplementor<?>, org.hibernate.graph.GraphSemantic)"], ["void", "org.hibernate.engine.spi.EffectiveEntityGraph.applyConfiguredGraph(java.util.Map<java.lang.String, ?>)"], ["void", "org.hibernate.engine.spi.EffectiveEntityGraph.clear()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$2.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$2.toString()"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$11.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$11.reallyDoCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$11.hasOrphanDelete()"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$11.toString()"], ["default", "org.hibernate.engine.spi.CacheImplementor.void evictQueries()"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.cache.spi.UpdateTimestampsCache getUpdateTimestampsCache()"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getQueryCache()"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getDefaultQueryCache()"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getQueryCache(java.lang.String)"], ["default", "org.hibernate.engine.spi.CacheImplementor.java.lang.String unqualifyRegionName(java.lang.String)"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.cache.spi.Region getRegionByLegacyName(java.lang.String)"], ["default", "org.hibernate.engine.spi.CacheImplementor.org.hibernate.SessionFactory getSessionFactory()"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.engine.spi.CascadeStyles.getCascadeStyle(java.lang.String)"], ["void", "org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(java.lang.String, org.hibernate.engine.spi.CascadeStyles$BaseCascadeStyle)"], ["void", "org.hibernate.engine.spi.CascadingActions$1.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$1.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$1.deleteOrphans()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$1.toString()"], ["org.hibernate.engine.spi.CachedNaturalIdValueSource[]", "org.hibernate.engine.spi.CachedNaturalIdValueSource.values()"], ["org.hibernate.engine.spi.CachedNaturalIdValueSource", "org.hibernate.engine.spi.CachedNaturalIdValueSource.valueOf(java.lang.String)"], ["void", "org.hibernate.engine.spi.CascadingActions$3.cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean)"], ["java.util.Iterator", "org.hibernate.engine.spi.CascadingActions$3.getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.CascadingActions$3.deleteOrphans()"], ["java.lang.String", "org.hibernate.engine.spi.CascadingActions$3.toString()"], ["org.hibernate.engine.spi.Status[]", "org.hibernate.engine.spi.Status.values()"], ["org.hibernate.engine.spi.Status", "org.hibernate.engine.spi.Status.valueOf(java.lang.String)"], ["org.hibernate.engine.spi.ActionQueue$InsertActionSorter", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter()"], ["void", "org.hibernate.engine.spi.ActionQueue$InsertActionSorter.sort(java.util.List<org.hibernate.action.internal.AbstractEntityInsertAction>)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$9.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$9.toString()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle[]", "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle.values()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle.externalName()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle.fromExternalName(java.lang.String)"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle.determineDefault(java.lang.String, boolean)"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.engine.spi.LoadQueryInfluencers()"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.engine.spi.LoadQueryInfluencers(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.engine.spi.LoadQueryInfluencers.getSessionFactory()"], ["java.lang.String", "org.hibernate.engine.spi.LoadQueryInfluencers.getInternalFetchProfile()"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.setInternalFetchProfile(java.lang.String)"], ["boolean", "org.hibernate.engine.spi.LoadQueryInfluencers.hasEnabledFilters()"], ["java.util.Map<java.lang.String, org.hibernate.Filter>", "org.hibernate.engine.spi.LoadQueryInfluencers.getEnabledFilters()"], ["org.hibernate.Filter", "org.hibernate.engine.spi.LoadQueryInfluencers.getEnabledFilter(java.lang.String)"], ["org.hibernate.Filter", "org.hibernate.engine.spi.LoadQueryInfluencers.enableFilter(java.lang.String)"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.disableFilter(java.lang.String)"], ["java.lang.Object", "org.hibernate.engine.spi.LoadQueryInfluencers.getFilterParameterValue(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.LoadQueryInfluencers.getFilterParameterType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.engine.spi.LoadQueryInfluencers.parseFilterParameterName(java.lang.String)"], ["boolean", "org.hibernate.engine.spi.LoadQueryInfluencers.hasEnabledFetchProfiles()"], ["boolean", "org.hibernate.engine.spi.LoadQueryInfluencers.isFetchProfileEnabled(java.lang.String)"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.enableFetchProfile(java.lang.String)"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.disableFetchProfile(java.lang.String)"], ["org.hibernate.engine.spi.EffectiveEntityGraph", "org.hibernate.engine.spi.LoadQueryInfluencers.getEffectiveEntityGraph()"], ["javax.persistence.EntityGraph", "org.hibernate.engine.spi.LoadQueryInfluencers.getFetchGraph()"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.setFetchGraph(javax.persistence.EntityGraph)"], ["javax.persistence.EntityGraph", "org.hibernate.engine.spi.LoadQueryInfluencers.getLoadGraph()"], ["void", "org.hibernate.engine.spi.LoadQueryInfluencers.setLoadGraph(javax.persistence.EntityGraph)"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.boolean isOpenOrWaitingForAutoClose()"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.void checkOpen()"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.long getTimestamp()"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.void checkTransactionNeededForUpdateOperation(java.lang.String)"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.boolean isQueryParametersValidationEnabled()"], ["default", "org.hibernate.engine.spi.SharedSessionContractImplementor.java.lang.Integer getConfiguredJdbcBatchSize()"], ["java.lang.Boolean", "org.hibernate.engine.spi.IdentifierValue$4.isUnsaved(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.spi.IdentifierValue$4.getDefaultValue(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.spi.IdentifierValue$4.toString()"], ["java.lang.Object", "org.hibernate.engine.spi.IdentifierValue$4.getDefaultValue(java.lang.Object)"], ["org.hibernate.engine.spi.CollectionKey", "org.hibernate.engine.spi.CollectionKey(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["org.hibernate.engine.spi.CollectionKey", "org.hibernate.engine.spi.CollectionKey(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, org.hibernate.EntityMode)"], ["java.lang.String", "org.hibernate.engine.spi.CollectionKey.getRole()"], ["java.io.Serializable", "org.hibernate.engine.spi.CollectionKey.getKey()"], ["java.lang.String", "org.hibernate.engine.spi.CollectionKey.toString()"], ["boolean", "org.hibernate.engine.spi.CollectionKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.spi.CollectionKey.hashCode()"], ["void", "org.hibernate.engine.spi.CollectionKey.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.spi.CollectionKey", "org.hibernate.engine.spi.CollectionKey.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle", "org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle(org.hibernate.engine.spi.CascadeStyle[])"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle.doCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle.reallyDoCascade(org.hibernate.engine.spi.CascadingAction)"], ["boolean", "org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle.hasOrphanDelete()"], ["java.lang.String", "org.hibernate.engine.spi.CascadeStyles$MultipleCascadeStyle.toString()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.engine.spi.FilterDefinition(java.lang.String, java.lang.String, java.util.Map<java.lang.String, org.hibernate.type.Type>)"], ["java.lang.String", "org.hibernate.engine.spi.FilterDefinition.getFilterName()"], ["org.hibernate.type.Type", "org.hibernate.engine.spi.FilterDefinition.getParameterType(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.spi.FilterDefinition.getDefaultFilterCondition()"], ["java.util.Map<java.lang.String, org.hibernate.type.Type>", "org.hibernate.engine.spi.FilterDefinition.getParameterTypes()"], ["org.hibernate.engine.spi.ValueInclusion[]", "org.hibernate.engine.spi.ValueInclusion.values()"], ["org.hibernate.engine.spi.ValueInclusion", "org.hibernate.engine.spi.ValueInclusion.valueOf(java.lang.String)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters()"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type, java.lang.Object)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], java.lang.Object, java.lang.String, java.io.Serializable)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[])"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], java.io.Serializable[])"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>, java.io.Serializable[])"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], org.hibernate.LockOptions, org.hibernate.engine.spi.RowSelection, boolean, boolean, boolean, java.lang.String, java.lang.String, java.util.List<java.lang.String>, boolean, org.hibernate.transform.ResultTransformer)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>, org.hibernate.LockOptions, org.hibernate.engine.spi.RowSelection, boolean, boolean, boolean, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.io.Serializable[], org.hibernate.transform.ResultTransformer)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.type.Type[], java.lang.Object[], java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>, org.hibernate.LockOptions, org.hibernate.engine.spi.RowSelection, boolean, boolean, boolean, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.io.Serializable[], java.lang.Object, java.lang.String, java.io.Serializable, org.hibernate.transform.ResultTransformer)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters(org.hibernate.query.spi.QueryParameterBindings, org.hibernate.LockOptions, org.hibernate.engine.spi.RowSelection, boolean, boolean, boolean, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.io.Serializable[], java.lang.Object, java.lang.String, java.io.Serializable, org.hibernate.transform.ResultTransformer)"], ["boolean", "org.hibernate.engine.spi.QueryParameters.hasRowSelection()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>", "org.hibernate.engine.spi.QueryParameters.getNamedParameters()"], ["org.hibernate.type.Type[]", "org.hibernate.engine.spi.QueryParameters.getPositionalParameterTypes()"], ["java.lang.Object[]", "org.hibernate.engine.spi.QueryParameters.getPositionalParameterValues()"], ["org.hibernate.engine.spi.RowSelection", "org.hibernate.engine.spi.QueryParameters.getRowSelection()"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.engine.spi.QueryParameters.getResultTransformer()"], ["void", "org.hibernate.engine.spi.QueryParameters.setNamedParameters(java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>)"], ["void", "org.hibernate.engine.spi.QueryParameters.setPositionalParameterTypes(org.hibernate.type.Type[])"], ["void", "org.hibernate.engine.spi.QueryParameters.setPositionalParameterValues(java.lang.Object[])"], ["void", "org.hibernate.engine.spi.QueryParameters.setRowSelection(org.hibernate.engine.spi.RowSelection)"], ["org.hibernate.LockOptions", "org.hibernate.engine.spi.QueryParameters.getLockOptions()"], ["void", "org.hibernate.engine.spi.QueryParameters.setLockOptions(org.hibernate.LockOptions)"], ["void", "org.hibernate.engine.spi.QueryParameters.traceParameters(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isCacheable()"], ["void", "org.hibernate.engine.spi.QueryParameters.setCacheable(boolean)"], ["java.lang.String", "org.hibernate.engine.spi.QueryParameters.getCacheRegion()"], ["void", "org.hibernate.engine.spi.QueryParameters.setCacheRegion(java.lang.String)"], ["void", "org.hibernate.engine.spi.QueryParameters.validateParameters()"], ["java.lang.String", "org.hibernate.engine.spi.QueryParameters.getComment()"], ["void", "org.hibernate.engine.spi.QueryParameters.setComment(java.lang.String)"], ["void", "org.hibernate.engine.spi.QueryParameters.setQueryHints(java.util.List<java.lang.String>)"], ["org.hibernate.ScrollMode", "org.hibernate.engine.spi.QueryParameters.getScrollMode()"], ["void", "org.hibernate.engine.spi.QueryParameters.setScrollMode(org.hibernate.ScrollMode)"], ["java.io.Serializable[]", "org.hibernate.engine.spi.QueryParameters.getCollectionKeys()"], ["void", "org.hibernate.engine.spi.QueryParameters.setCollectionKeys(java.io.Serializable[])"], ["java.lang.String", "org.hibernate.engine.spi.QueryParameters.getOptionalEntityName()"], ["void", "org.hibernate.engine.spi.QueryParameters.setOptionalEntityName(java.lang.String)"], ["java.io.Serializable", "org.hibernate.engine.spi.QueryParameters.getOptionalId()"], ["void", "org.hibernate.engine.spi.QueryParameters.setOptionalId(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.engine.spi.QueryParameters.getOptionalObject()"], ["void", "org.hibernate.engine.spi.QueryParameters.setOptionalObject(java.lang.Object)"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isReadOnlyInitialized()"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isReadOnly()"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isReadOnly(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.spi.QueryParameters.setReadOnly(boolean)"], ["void", "org.hibernate.engine.spi.QueryParameters.setCallable(boolean)"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isCallable()"], ["boolean", "org.hibernate.engine.spi.QueryParameters.hasAutoDiscoverScalarTypes()"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isPassDistinctThrough()"], ["void", "org.hibernate.engine.spi.QueryParameters.setPassDistinctThrough(boolean)"], ["void", "org.hibernate.engine.spi.QueryParameters.processFilters(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.spi.QueryParameters.processFilters(java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.engine.spi.QueryParameters.getFilteredSQL()"], ["java.lang.Object[]", "org.hibernate.engine.spi.QueryParameters.getFilteredPositionalParameterValues()"], ["org.hibernate.type.Type[]", "org.hibernate.engine.spi.QueryParameters.getFilteredPositionalParameterTypes()"], ["boolean", "org.hibernate.engine.spi.QueryParameters.isNaturalKeyLookup()"], ["void", "org.hibernate.engine.spi.QueryParameters.setNaturalKeyLookup(boolean)"], ["void", "org.hibernate.engine.spi.QueryParameters.setAutoDiscoverScalarTypes(boolean)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.engine.spi.QueryParameters.createCopyUsing(org.hibernate.engine.spi.RowSelection)"], ["org.hibernate.engine.query.spi.HQLQueryPlan", "org.hibernate.engine.spi.QueryParameters.getQueryPlan()"], ["void", "org.hibernate.engine.spi.QueryParameters.setQueryPlan(org.hibernate.engine.query.spi.HQLQueryPlan)"], ["void", "org.hibernate.engine.spi.QueryParameters.bindDynamicParameter(org.hibernate.type.Type, java.lang.Object)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder()"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[])"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQueryReturns(java.util.List<org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn>)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQuerySpaces(java.util.List<java.lang.String>)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQuerySpaces(java.util.Collection<java.lang.String>)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setResultSetRef(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCallable(boolean)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setName(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQuery(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheable(boolean)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheRegion(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setTimeout(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFetchSize(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setReadOnly(boolean)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setComment(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.addParameterType(java.lang.String, java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setParameterTypes(java.util.Map)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFirstResult(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setMaxResults(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.createNamedQueryDefinition()"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.createNamedQueryDefinition()"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setMaxResults(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFirstResult(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setParameterTypes(java.util.Map)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.addParameterType(java.lang.String, java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setComment(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setReadOnly(boolean)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setFetchSize(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setTimeout(java.lang.Integer)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheRegion(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setCacheable(boolean)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setQuery(java.lang.String)"], ["org.hibernate.engine.spi.NamedQueryDefinitionBuilder", "org.hibernate.engine.spi.NamedSQLQueryDefinitionBuilder.setName(java.lang.String)"], ["void", "org.hibernate.engine.spi.ActionQueue$AfterTransactionCompletionProcessQueue.addSpaceToInvalidate(java.lang.String)"], ["void", "org.hibernate.engine.spi.ActionQueue$AfterTransactionCompletionProcessQueue.afterTransactionCompletion(boolean)"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.engine.FetchStrategy(org.hibernate.engine.FetchTiming, org.hibernate.engine.FetchStyle)"], ["org.hibernate.engine.FetchTiming", "org.hibernate.engine.FetchStrategy.getTiming()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.engine.FetchStrategy.getStyle()"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.engine.ResultSetMappingDefinition(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.ResultSetMappingDefinition.getName()"], ["void", "org.hibernate.engine.ResultSetMappingDefinition.addQueryReturn(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.engine.ResultSetMappingDefinition.getQueryReturns()"], ["java.lang.String", "org.hibernate.engine.ResultSetMappingDefinition.traceLoggableFormat()"], ["java.lang.String", "org.hibernate.engine.config.spi.StandardConverters$2.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.config.spi.StandardConverters$2.convert(java.lang.Object)"], ["java.lang.Boolean", "org.hibernate.engine.config.spi.StandardConverters$1.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.config.spi.StandardConverters$1.convert(java.lang.Object)"], ["org.hibernate.engine.config.internal.ConfigurationServiceInitiator", "org.hibernate.engine.config.internal.ConfigurationServiceInitiator()"], ["org.hibernate.engine.config.spi.ConfigurationService", "org.hibernate.engine.config.internal.ConfigurationServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.config.internal.ConfigurationServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.config.internal.ConfigurationServiceImpl", "org.hibernate.engine.config.internal.ConfigurationServiceImpl(java.util.Map)"], ["java.util.Map", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.getSettings()"], ["void", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["<T> T", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.getSetting(java.lang.String, org.hibernate.engine.config.spi.ConfigurationService$Converter<T>)"], ["<T> T", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.getSetting(java.lang.String, org.hibernate.engine.config.spi.ConfigurationService$Converter<T>, T)"], ["<T> T", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.getSetting(java.lang.String, java.lang.Class<T>, T)"], ["<T> T", "org.hibernate.engine.config.internal.ConfigurationServiceImpl.cast(java.lang.Class<T>, java.lang.Object)"], ["java.sql.ResultSet", "org.hibernate.engine.loading.internal.LoadingCollectionEntry.getResultSet()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.engine.loading.internal.LoadingCollectionEntry.getPersister()"], ["java.io.Serializable", "org.hibernate.engine.loading.internal.LoadingCollectionEntry.getKey()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.loading.internal.LoadingCollectionEntry.getCollection()"], ["java.lang.String", "org.hibernate.engine.loading.internal.LoadingCollectionEntry.toString()"], ["org.hibernate.engine.loading.internal.EntityLoadContext", "org.hibernate.engine.loading.internal.EntityLoadContext(org.hibernate.engine.loading.internal.LoadContexts, java.sql.ResultSet)"], ["java.lang.String", "org.hibernate.engine.loading.internal.EntityLoadContext.toString()"], ["org.hibernate.engine.loading.internal.LoadContexts", "org.hibernate.engine.loading.internal.LoadContexts(org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.engine.loading.internal.LoadContexts.getPersistenceContext()"], ["void", "org.hibernate.engine.loading.internal.LoadContexts.cleanup(java.sql.ResultSet)"], ["void", "org.hibernate.engine.loading.internal.LoadContexts.cleanup()"], ["boolean", "org.hibernate.engine.loading.internal.LoadContexts.hasLoadingCollectionEntries()"], ["boolean", "org.hibernate.engine.loading.internal.LoadContexts.hasRegisteredLoadingCollectionEntries()"], ["org.hibernate.engine.loading.internal.CollectionLoadContext", "org.hibernate.engine.loading.internal.LoadContexts.getCollectionLoadContext(java.sql.ResultSet)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.loading.internal.LoadContexts.locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.CollectionKey)"], ["org.hibernate.engine.loading.internal.EntityLoadContext", "org.hibernate.engine.loading.internal.LoadContexts.getEntityLoadContext(java.sql.ResultSet)"], ["org.hibernate.engine.loading.internal.CollectionLoadContext", "org.hibernate.engine.loading.internal.CollectionLoadContext(org.hibernate.engine.loading.internal.LoadContexts, java.sql.ResultSet)"], ["java.sql.ResultSet", "org.hibernate.engine.loading.internal.CollectionLoadContext.getResultSet()"], ["org.hibernate.engine.loading.internal.LoadContexts", "org.hibernate.engine.loading.internal.CollectionLoadContext.getLoadContext()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.loading.internal.CollectionLoadContext.getLoadingCollection(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["void", "org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.String", "org.hibernate.engine.loading.internal.CollectionLoadContext.toString()"], ["org.hibernate.engine.internal.AbstractEntityEntry", "org.hibernate.engine.internal.AbstractEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, org.hibernate.EntityMode, java.lang.String, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.internal.AbstractEntityEntry", "org.hibernate.engine.internal.AbstractEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.LockMode", "org.hibernate.engine.internal.AbstractEntityEntry.getLockMode()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.engine.spi.Status", "org.hibernate.engine.internal.AbstractEntityEntry.getStatus()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.setStatus(org.hibernate.engine.spi.Status)"], ["java.io.Serializable", "org.hibernate.engine.internal.AbstractEntityEntry.getId()"], ["java.lang.Object[]", "org.hibernate.engine.internal.AbstractEntityEntry.getLoadedState()"], ["java.lang.Object[]", "org.hibernate.engine.internal.AbstractEntityEntry.getDeletedState()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.setDeletedState(java.lang.Object[])"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.isExistsInDatabase()"], ["java.lang.Object", "org.hibernate.engine.internal.AbstractEntityEntry.getVersion()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.internal.AbstractEntityEntry.getPersister()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.engine.internal.AbstractEntityEntry.getEntityKey()"], ["java.lang.String", "org.hibernate.engine.internal.AbstractEntityEntry.getEntityName()"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.isBeingReplicated()"], ["java.lang.Object", "org.hibernate.engine.internal.AbstractEntityEntry.getRowId()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.postUpdate(java.lang.Object, java.lang.Object[], java.lang.Object)"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.postDelete()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.postInsert(java.lang.Object[])"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.isNullifiable(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.engine.internal.AbstractEntityEntry.getLoadedValue(java.lang.String)"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.overwriteLoadedStateCollectionValue(java.lang.String, org.hibernate.collection.spi.PersistentCollection)"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.requiresDirtyCheck(java.lang.Object)"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.isModifiableEntity()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.forceLocked(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.engine.internal.AbstractEntityEntry.isReadOnly()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.setReadOnly(boolean, java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.internal.AbstractEntityEntry.toString()"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.serialize(java.io.ObjectOutputStream)"], ["void", "org.hibernate.engine.internal.AbstractEntityEntry.addExtraState(org.hibernate.engine.spi.EntityEntryExtraState)"], ["<T extends org.hibernate.engine.spi.EntityEntryExtraState> T", "org.hibernate.engine.internal.AbstractEntityEntry.getExtraState(java.lang.Class<T>)"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.engine.internal.AbstractEntityEntry.getPersistenceContext()"], ["org.hibernate.engine.internal.SessionEventListenerManagerImpl", "org.hibernate.engine.internal.SessionEventListenerManagerImpl(org.hibernate.SessionEventListener...)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.addListener(org.hibernate.SessionEventListener...)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.transactionCompletion(boolean)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcConnectionAcquisitionStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcConnectionAcquisitionEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcConnectionReleaseStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcConnectionReleaseEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcPrepareStatementStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcPrepareStatementEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcExecuteStatementStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcExecuteStatementEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcExecuteBatchStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.jdbcExecuteBatchEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.cachePutStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.cachePutEnd()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.cacheGetStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.cacheGetEnd(boolean)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.flushStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.flushEnd(int, int)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.partialFlushStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.partialFlushEnd(int, int)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.dirtyCalculationStart()"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.dirtyCalculationEnd(boolean)"], ["void", "org.hibernate.engine.internal.SessionEventListenerManagerImpl.end()"], ["int", "org.hibernate.engine.internal.ParameterBinder.bindQueryParameters(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, int, org.hibernate.engine.internal.ParameterBinder$NamedParameterSource, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.getPersister()"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.sameAsCached(java.io.Serializable, java.lang.Object[])"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.cache(java.io.Serializable, java.lang.Object[])"], ["void", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.stashInvalidNaturalIdReference(java.lang.Object[])"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.containsInvalidNaturalIdReference(java.lang.Object[])"], ["void", "org.hibernate.engine.internal.NaturalIdXrefDelegate$NaturalIdResolutionCache.unStashInvalidNaturalIdReferences()"], ["org.hibernate.engine.internal.ImmutableEntityEntry", "org.hibernate.engine.internal.ImmutableEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, org.hibernate.EntityMode, java.lang.String, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.internal.ImmutableEntityEntry", "org.hibernate.engine.internal.ImmutableEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["void", "org.hibernate.engine.internal.ImmutableEntityEntry.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.ImmutableEntityEntry.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.engine.internal.ImmutableEntityEntry.getPersistenceContext()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.cacheNaturalIdCrossReferenceFromLoad(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.manageLocalNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[], java.lang.Object[], org.hibernate.engine.spi.CachedNaturalIdValueSource)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.manageSharedNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[], java.lang.Object[], org.hibernate.engine.spi.CachedNaturalIdValueSource)"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext$1.removeLocalNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.removeSharedNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext$1.findCachedNaturalId(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.engine.internal.StatefulPersistenceContext$1.findCachedNaturalIdResolution(org.hibernate.persister.entity.EntityPersister, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext$1.extractNaturalIdValues(java.lang.Object[], org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext$1.extractNaturalIdValues(java.lang.Object, org.hibernate.persister.entity.EntityPersister)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.handleSynchronization(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.cleanupFromSynchronizations()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1.handleEviction(java.lang.Object, org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.getFromPart()"], ["void", "org.hibernate.engine.internal.JoinSequence.applyTreatAsDeclarations(java.util.Set<java.lang.String>)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.copy()"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.addJoin(org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[])"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.addJoin(org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[][])"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.addJoin(org.hibernate.hql.internal.ast.tree.ImpliedFromElement)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.engine.internal.JoinSequence.toJoinFragment()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.engine.internal.JoinSequence.toJoinFragment(java.util.Map, boolean)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.engine.internal.JoinSequence.toJoinFragment(java.util.Map, boolean, java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.engine.internal.JoinSequence.toJoinFragment(java.util.Map, boolean, boolean, java.lang.String)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.addCondition(java.lang.String)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.addCondition(java.lang.String, java.lang.String[], java.lang.String)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.setRoot(org.hibernate.persister.entity.Joinable, java.lang.String)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.setNext(org.hibernate.engine.internal.JoinSequence)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.setSelector(org.hibernate.engine.internal.JoinSequence$Selector)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.setUseThetaStyle(boolean)"], ["boolean", "org.hibernate.engine.internal.JoinSequence.isThetaStyle()"], ["void", "org.hibernate.engine.internal.JoinSequence.setQueryReferencedTables(java.util.Set<java.lang.String>)"], ["org.hibernate.engine.internal.JoinSequence$Join", "org.hibernate.engine.internal.JoinSequence.getFirstJoin()"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.engine.internal.JoinSequence.copyForCollectionProperty()"], ["java.lang.String", "org.hibernate.engine.internal.JoinSequence.toString()"], ["org.hibernate.engine.internal.StatisticalLoggingSessionEventListener", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener()"], ["boolean", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.isLoggingEnabled()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcConnectionAcquisitionStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcConnectionAcquisitionEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcConnectionReleaseStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcConnectionReleaseEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcPrepareStatementStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcPrepareStatementEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcExecuteStatementStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcExecuteStatementEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcExecuteBatchStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.jdbcExecuteBatchEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.cachePutStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.cachePutEnd()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.cacheGetStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.cacheGetEnd(boolean)"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.flushStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.flushEnd(int, int)"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.partialFlushStart()"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.partialFlushEnd(int, int)"], ["void", "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.end()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1$1.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.internal.AbstractEntityEntry$BooleanState[]", "org.hibernate.engine.internal.AbstractEntityEntry$BooleanState.values()"], ["org.hibernate.engine.internal.AbstractEntityEntry$BooleanState", "org.hibernate.engine.internal.AbstractEntityEntry$BooleanState.valueOf(java.lang.String)"], ["org.hibernate.engine.internal.NonNullableTransientDependencies", "org.hibernate.engine.internal.NonNullableTransientDependencies()"], ["boolean", "org.hibernate.engine.internal.NonNullableTransientDependencies.isEmpty()"], ["void", "org.hibernate.engine.internal.NonNullableTransientDependencies.resolveNonNullableTransientEntity(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.internal.NonNullableTransientDependencies.toLoggableString(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext$1$2.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.Cascade.cascade(org.hibernate.engine.spi.CascadingAction, org.hibernate.engine.internal.CascadePoint, org.hibernate.event.spi.EventSource, org.hibernate.persister.entity.EntityPersister, java.lang.Object)"], ["void", "org.hibernate.engine.internal.Cascade.cascade(org.hibernate.engine.spi.CascadingAction, org.hibernate.engine.internal.CascadePoint, org.hibernate.event.spi.EventSource, org.hibernate.persister.entity.EntityPersister, java.lang.Object, java.lang.Object)"], ["org.hibernate.engine.internal.NaturalIdXrefDelegate$CachedNaturalId", "org.hibernate.engine.internal.NaturalIdXrefDelegate$CachedNaturalId(org.hibernate.persister.entity.EntityPersister, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.engine.internal.NaturalIdXrefDelegate$CachedNaturalId.getValues()"], ["int", "org.hibernate.engine.internal.NaturalIdXrefDelegate$CachedNaturalId.hashCode()"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate$CachedNaturalId.equals(java.lang.Object)"], ["org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_getEntityInstance()"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_getEntityEntry()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_setEntityEntry(org.hibernate.engine.spi.EntityEntry)"], ["org.hibernate.engine.spi.ManagedEntity", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_getNextManagedEntity()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_setNextManagedEntity(org.hibernate.engine.spi.ManagedEntity)"], ["org.hibernate.engine.spi.ManagedEntity", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_getPreviousManagedEntity()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ManagedEntityImpl.$$_hibernate_setPreviousManagedEntity(org.hibernate.engine.spi.ManagedEntity)"], ["org.hibernate.engine.internal.EntityEntryExtraStateHolder", "org.hibernate.engine.internal.EntityEntryExtraStateHolder()"], ["java.lang.Object[]", "org.hibernate.engine.internal.EntityEntryExtraStateHolder.getDeletedState()"], ["void", "org.hibernate.engine.internal.EntityEntryExtraStateHolder.setDeletedState(java.lang.Object[])"], ["void", "org.hibernate.engine.internal.EntityEntryExtraStateHolder.addExtraState(org.hibernate.engine.spi.EntityEntryExtraState)"], ["<T extends org.hibernate.engine.spi.EntityEntryExtraState> T", "org.hibernate.engine.internal.EntityEntryExtraStateHolder.getExtraState(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.engine.internal.JoinSequence$Join.getAlias()"], ["org.hibernate.type.AssociationType", "org.hibernate.engine.internal.JoinSequence$Join.getAssociationType()"], ["org.hibernate.persister.entity.Joinable", "org.hibernate.engine.internal.JoinSequence$Join.getJoinable()"], ["org.hibernate.sql.JoinType", "org.hibernate.engine.internal.JoinSequence$Join.getJoinType()"], ["java.lang.String[][]", "org.hibernate.engine.internal.JoinSequence$Join.getLHSColumns()"], ["java.lang.String", "org.hibernate.engine.internal.JoinSequence$Join.toString()"], ["java.lang.String[]", "org.hibernate.engine.internal.JoinHelper.getAliasedLHSColumnNames(org.hibernate.type.AssociationType, java.lang.String, int, org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.Mapping)"], ["java.lang.String[]", "org.hibernate.engine.internal.JoinHelper.getLHSColumnNames(org.hibernate.type.AssociationType, int, org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.Mapping)"], ["java.lang.String[]", "org.hibernate.engine.internal.JoinHelper.getAliasedLHSColumnNames(org.hibernate.type.AssociationType, java.lang.String, int, int, org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.Mapping)"], ["java.lang.String[]", "org.hibernate.engine.internal.JoinHelper.getLHSColumnNames(org.hibernate.type.AssociationType, int, int, org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.engine.internal.JoinHelper.getLHSTableName(org.hibernate.type.AssociationType, int, org.hibernate.persister.entity.OuterJoinLoadable)"], ["java.lang.String[]", "org.hibernate.engine.internal.JoinHelper.getRHSColumnNames(org.hibernate.type.AssociationType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.ImmutableEntityEntryFactory.createEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.internal.Nullability$NullabilityCheckType[]", "org.hibernate.engine.internal.Nullability$NullabilityCheckType.values()"], ["org.hibernate.engine.internal.Nullability$NullabilityCheckType", "org.hibernate.engine.internal.Nullability$NullabilityCheckType.valueOf(java.lang.String)"], ["org.hibernate.engine.internal.StatefulPersistenceContext", "org.hibernate.engine.internal.StatefulPersistenceContext(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isStateless()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.engine.internal.StatefulPersistenceContext.getSession()"], ["org.hibernate.engine.loading.internal.LoadContexts", "org.hibernate.engine.internal.StatefulPersistenceContext.getLoadContexts()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addUnownedCollection(org.hibernate.engine.spi.CollectionKey, org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.internal.StatefulPersistenceContext.useUnownedCollection(org.hibernate.engine.spi.CollectionKey)"], ["org.hibernate.engine.spi.BatchFetchQueue", "org.hibernate.engine.internal.StatefulPersistenceContext.getBatchFetchQueue()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.clear()"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isDefaultReadOnly()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.setDefaultReadOnly(boolean)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.hasNonReadOnlyEntities()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.setEntryStatus(org.hibernate.engine.spi.EntityEntry, org.hibernate.engine.spi.Status)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.afterTransactionCompletion()"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext.getDatabaseSnapshot(java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext.getNaturalIdSnapshot(java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object[]", "org.hibernate.engine.internal.StatefulPersistenceContext.getCachedDatabaseSnapshot(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addEntity(org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getEntity(org.hibernate.engine.spi.EntityKey)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.containsEntity(org.hibernate.engine.spi.EntityKey)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.removeEntity(org.hibernate.engine.spi.EntityKey)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getEntity(org.hibernate.engine.spi.EntityUniqueKey)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addEntity(org.hibernate.engine.spi.EntityUniqueKey, java.lang.Object)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.getEntry(java.lang.Object)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.removeEntry(java.lang.Object)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isEntryFor(java.lang.Object)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionEntry(org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.addEntity(java.lang.Object, org.hibernate.engine.spi.Status, java.lang.Object[], org.hibernate.engine.spi.EntityKey, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.addEntry(java.lang.Object, org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.addReferenceEntry(java.lang.Object, org.hibernate.engine.spi.Status)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.containsCollection(org.hibernate.collection.spi.PersistentCollection)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.containsProxy(java.lang.Object)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.reassociateIfUninitializedProxy(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.reassociateProxy(java.lang.Object, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.unproxy(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.unproxyAndReassociate(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.checkUniqueness(org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.narrowProxy(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.proxyFor(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.proxyFor(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addEnhancedProxy(org.hibernate.engine.spi.EntityKey, org.hibernate.engine.spi.PersistentAttributeInterceptable)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionOwner(java.io.Serializable, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getLoadedCollectionOwnerOrNull(org.hibernate.collection.spi.PersistentCollection)"], ["java.io.Serializable", "org.hibernate.engine.internal.StatefulPersistenceContext.getLoadedCollectionOwnerIdOrNull(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addUninitializedCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, java.io.Serializable)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addUninitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addNewCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addInitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.addInitializedCollection(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, java.io.Serializable)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollection(org.hibernate.engine.spi.CollectionKey)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addNonLazyCollection(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionHolder(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addCollectionHolder(org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.internal.StatefulPersistenceContext.removeCollectionHolder(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.engine.internal.StatefulPersistenceContext.getSnapshot(org.hibernate.collection.spi.PersistentCollection)"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionEntryOrNull(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getProxy(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addProxy(org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.removeProxy(org.hibernate.engine.spi.EntityKey)"], ["java.util.HashSet", "org.hibernate.engine.internal.StatefulPersistenceContext.getNullifiableEntityKeys()"], ["java.util.Map", "org.hibernate.engine.internal.StatefulPersistenceContext.getEntitiesByKey()"], ["java.util.Iterator", "org.hibernate.engine.internal.StatefulPersistenceContext.managedEntitiesIterator()"], ["int", "org.hibernate.engine.internal.StatefulPersistenceContext.getNumberOfManagedEntities()"], ["java.util.Map", "org.hibernate.engine.internal.StatefulPersistenceContext.getEntityEntries()"], ["java.util.Map", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionEntries()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.forEachCollectionEntry(java.util.function.BiConsumer<org.hibernate.collection.spi.PersistentCollection, org.hibernate.engine.spi.CollectionEntry>, boolean)"], ["java.util.Map", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionsByKey()"], ["int", "org.hibernate.engine.internal.StatefulPersistenceContext.getCascadeLevel()"], ["int", "org.hibernate.engine.internal.StatefulPersistenceContext.incrementCascadeLevel()"], ["int", "org.hibernate.engine.internal.StatefulPersistenceContext.decrementCascadeLevel()"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isFlushing()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.setFlushing(boolean)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isRemovingOrphanBeforeUpates()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.beginRemoveOrphanBeforeUpdates()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.endRemoveOrphanBeforeUpdates()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.beforeLoad()"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.afterLoad()"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isLoadFinished()"], ["java.lang.String", "org.hibernate.engine.internal.StatefulPersistenceContext.toString()"], ["java.util.Map$Entry<java.lang.Object, org.hibernate.engine.spi.EntityEntry>[]", "org.hibernate.engine.internal.StatefulPersistenceContext.reentrantSafeEntityEntries()"], ["java.io.Serializable", "org.hibernate.engine.internal.StatefulPersistenceContext.getOwnerId(java.lang.String, java.lang.String, java.lang.Object, java.util.Map)"], ["java.lang.Object", "org.hibernate.engine.internal.StatefulPersistenceContext.getIndexInOwner(java.lang.String, java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addNullProperty(org.hibernate.engine.spi.EntityKey, java.lang.String)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isPropertyNull(org.hibernate.engine.spi.EntityKey, java.lang.String)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isReadOnly(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.setReadOnly(java.lang.Object, boolean)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.spi.EntityKey, java.io.Serializable)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.internal.StatefulPersistenceContext", "org.hibernate.engine.internal.StatefulPersistenceContext.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.addChildParent(java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.removeChildParent(java.lang.Object)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.registerInsertedKey(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.wasInsertedDuringTransaction(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.containsNullifiableEntityKey(java.util.function.Supplier<org.hibernate.engine.spi.EntityKey>)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.registerNullifiableEntityKey(org.hibernate.engine.spi.EntityKey)"], ["boolean", "org.hibernate.engine.internal.StatefulPersistenceContext.isNullifiableEntityKeysEmpty()"], ["int", "org.hibernate.engine.internal.StatefulPersistenceContext.getCollectionEntriesSize()"], ["org.hibernate.engine.spi.CollectionEntry", "org.hibernate.engine.internal.StatefulPersistenceContext.removeCollectionEntry(org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.clearCollectionsByKey()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.engine.internal.StatefulPersistenceContext.addCollectionByKey(org.hibernate.engine.spi.CollectionKey, org.hibernate.collection.spi.PersistentCollection)"], ["void", "org.hibernate.engine.internal.StatefulPersistenceContext.removeCollectionByKey(org.hibernate.engine.spi.CollectionKey)"], ["org.hibernate.engine.spi.PersistenceContext$NaturalIdHelper", "org.hibernate.engine.internal.StatefulPersistenceContext.getNaturalIdHelper()"], ["org.hibernate.engine.internal.MutableEntityEntry", "org.hibernate.engine.internal.MutableEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, org.hibernate.EntityMode, java.lang.String, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.internal.MutableEntityEntry", "org.hibernate.engine.internal.MutableEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.MutableEntityEntry.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.PersistenceContext)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.postHydrate(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[], java.lang.Object, java.lang.Object, org.hibernate.LockMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(java.lang.Object, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.event.spi.PreLoadEvent)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(java.lang.Object, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.event.spi.PreLoadEvent, java.lang.Iterable<org.hibernate.event.spi.PreLoadEventListener>)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.afterInitialize(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.postLoad(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.event.spi.PostLoadEvent, java.lang.Iterable<org.hibernate.event.spi.PostLoadEventListener>)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.postLoad(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.event.spi.PostLoadEvent)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.addUninitializedEntity(org.hibernate.engine.spi.EntityKey, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.LockMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.TwoPhaseLoad.addUninitializedCachedEntity(org.hibernate.engine.spi.EntityKey, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.LockMode, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder(org.hibernate.engine.spi.ManagedEntity)"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_getEntityInstance()"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_getEntityEntry()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_setEntityEntry(org.hibernate.engine.spi.EntityEntry)"], ["org.hibernate.engine.spi.ManagedEntity", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_getPreviousManagedEntity()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_setPreviousManagedEntity(org.hibernate.engine.spi.ManagedEntity)"], ["org.hibernate.engine.spi.ManagedEntity", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_getNextManagedEntity()"], ["void", "org.hibernate.engine.internal.EntityEntryContext$ImmutableManagedEntityHolder.$$_hibernate_setNextManagedEntity(org.hibernate.engine.spi.ManagedEntity)"], ["org.hibernate.engine.internal.Nullability", "org.hibernate.engine.internal.Nullability(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.Nullability.checkNullability(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, boolean)"], ["void", "org.hibernate.engine.internal.Nullability.checkNullability(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.internal.Nullability$NullabilityCheckType)"], ["java.io.Serializable", "org.hibernate.engine.internal.CacheHelper.fromSharedCache(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.CachedDomainDataAccess)"], ["org.hibernate.engine.internal.CascadePoint[]", "org.hibernate.engine.internal.CascadePoint.values()"], ["org.hibernate.engine.internal.CascadePoint", "org.hibernate.engine.internal.CascadePoint.valueOf(java.lang.String)"], ["boolean", "org.hibernate.engine.internal.ForeignKeys.isNotTransient(java.lang.String, java.lang.Object, java.lang.Boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.engine.internal.ForeignKeys.isTransient(java.lang.String, java.lang.Object, java.lang.Boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.engine.internal.ForeignKeys.getEntityIdentifierIfNotUnsaved(java.lang.String, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.internal.NonNullableTransientDependencies", "org.hibernate.engine.internal.ForeignKeys.findNonNullableTransientEntities(java.lang.String, java.lang.Object, java.lang.Object[], boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.internal.EntityEntryContext", "org.hibernate.engine.internal.EntityEntryContext(org.hibernate.engine.spi.PersistenceContext)"], ["void", "org.hibernate.engine.internal.EntityEntryContext.addEntityEntry(java.lang.Object, org.hibernate.engine.spi.EntityEntry)"], ["boolean", "org.hibernate.engine.internal.EntityEntryContext.hasEntityEntry(java.lang.Object)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext.getEntityEntry(java.lang.Object)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext.removeEntityEntry(java.lang.Object)"], ["java.util.Map$Entry<java.lang.Object, org.hibernate.engine.spi.EntityEntry>[]", "org.hibernate.engine.internal.EntityEntryContext.reentrantSafeEntityEntries()"], ["void", "org.hibernate.engine.internal.EntityEntryContext.clear()"], ["void", "org.hibernate.engine.internal.EntityEntryContext.downgradeLocks()"], ["void", "org.hibernate.engine.internal.EntityEntryContext.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.internal.EntityEntryContext", "org.hibernate.engine.internal.EntityEntryContext.deserialize(java.io.ObjectInputStream, org.hibernate.engine.internal.StatefulPersistenceContext)"], ["int", "org.hibernate.engine.internal.EntityEntryContext.getNumberOfManagedEntities()"], ["void", "org.hibernate.engine.internal.BatchFetchQueueHelper.removeNotFoundBatchLoadableEntityKeys(java.io.Serializable[], java.util.List<?>, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.BatchFetchQueueHelper.removeBatchLoadableEntityKey(java.io.Serializable, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.getEntity()"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.getEntityEntry()"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.getKey()"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.getValue()"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.setValue(org.hibernate.engine.spi.EntityEntry)"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.setValue(java.lang.Object)"], ["java.lang.Object", "org.hibernate.engine.internal.EntityEntryContext$EntityEntryCrossRefImpl.getValue()"], ["boolean", "org.hibernate.engine.internal.Versioning.seedVersion(java.lang.Object[], int, org.hibernate.type.VersionType, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.engine.internal.Versioning.increment(java.lang.Object, org.hibernate.type.VersionType, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.engine.internal.Versioning.setVersion(java.lang.Object[], java.lang.Object, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object", "org.hibernate.engine.internal.Versioning.getVersion(java.lang.Object[], org.hibernate.persister.entity.EntityPersister)"], ["boolean", "org.hibernate.engine.internal.Versioning.isVersionIncrementRequired(int[], boolean, boolean[])"], ["org.hibernate.engine.internal.ForeignKeys$Nullifier", "org.hibernate.engine.internal.ForeignKeys$Nullifier(java.lang.Object, boolean, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.entity.EntityPersister)"], ["void", "org.hibernate.engine.internal.ForeignKeys$Nullifier.nullifyTransientReferences(java.lang.Object[])"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.engine.internal.MutableEntityEntryFactory.createEntityEntry(org.hibernate.engine.spi.Status, java.lang.Object[], java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.LockMode, boolean, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.PersistenceContext)"], ["void", "org.hibernate.engine.internal.Collections.processUnreachableCollection(org.hibernate.collection.spi.PersistentCollection, org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.engine.internal.Collections.processReachableCollection(org.hibernate.collection.spi.PersistentCollection, org.hibernate.type.CollectionType, java.lang.Object, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.engine.spi.IdentifierValue", "org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(java.lang.String, org.hibernate.property.access.spi.Getter, org.hibernate.type.Type, java.lang.reflect.Constructor)"], ["org.hibernate.engine.spi.VersionValue", "org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedVersionValue(java.lang.String, org.hibernate.property.access.spi.Getter, org.hibernate.type.VersionType, java.lang.reflect.Constructor)"], ["org.hibernate.engine.internal.NaturalIdXrefDelegate", "org.hibernate.engine.internal.NaturalIdXrefDelegate(org.hibernate.engine.internal.StatefulPersistenceContext)"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate.cacheNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.engine.internal.NaturalIdXrefDelegate.removeNaturalIdCrossReference(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["boolean", "org.hibernate.engine.internal.NaturalIdXrefDelegate.sameAsCached(org.hibernate.persister.entity.EntityPersister, java.io.Serializable, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.engine.internal.NaturalIdXrefDelegate.findCachedNaturalId(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.engine.internal.NaturalIdXrefDelegate.findCachedNaturalIdResolution(org.hibernate.persister.entity.EntityPersister, java.lang.Object[])"], ["void", "org.hibernate.engine.internal.NaturalIdXrefDelegate.stashInvalidNaturalIdReference(org.hibernate.persister.entity.EntityPersister, java.lang.Object[])"], ["void", "org.hibernate.engine.internal.NaturalIdXrefDelegate.unStashInvalidNaturalIdReferences()"], ["void", "org.hibernate.engine.internal.NaturalIdXrefDelegate.clear()"], ["java.lang.Object", "org.hibernate.engine.jdbc.ClobProxy.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ClobProxy.generateProxy(java.lang.String)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ClobProxy.generateProxy(java.io.Reader, long)"], ["java.sql.Blob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createBlob(byte[])"], ["java.sql.Blob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createBlob(java.io.InputStream, long)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createClob(java.lang.String)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createClob(java.io.Reader, long)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createNClob(java.lang.String)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.NonContextualLobCreator.createNClob(java.io.Reader, long)"], ["long", "org.hibernate.engine.jdbc.StreamUtils.copy(java.io.InputStream, java.io.OutputStream)"], ["long", "org.hibernate.engine.jdbc.StreamUtils.copy(java.io.InputStream, java.io.OutputStream, int)"], ["long", "org.hibernate.engine.jdbc.StreamUtils.copy(java.io.Reader, java.io.Writer)"], ["long", "org.hibernate.engine.jdbc.StreamUtils.copy(java.io.Reader, java.io.Writer, int)"], ["org.hibernate.engine.jdbc.BinaryStream", "org.hibernate.engine.jdbc.BlobProxy.getUnderlyingStream()"], ["java.sql.Blob", "org.hibernate.engine.jdbc.BlobProxy.generateProxy(byte[])"], ["java.sql.Blob", "org.hibernate.engine.jdbc.BlobProxy.generateProxy(java.io.InputStream, long)"], ["long", "org.hibernate.engine.jdbc.BlobProxy.length()"], ["byte[]", "org.hibernate.engine.jdbc.BlobProxy.getBytes(long, int)"], ["java.io.InputStream", "org.hibernate.engine.jdbc.BlobProxy.getBinaryStream()"], ["long", "org.hibernate.engine.jdbc.BlobProxy.position(byte[], long)"], ["long", "org.hibernate.engine.jdbc.BlobProxy.position(java.sql.Blob, long)"], ["int", "org.hibernate.engine.jdbc.BlobProxy.setBytes(long, byte[])"], ["int", "org.hibernate.engine.jdbc.BlobProxy.setBytes(long, byte[], int, int)"], ["java.io.OutputStream", "org.hibernate.engine.jdbc.BlobProxy.setBinaryStream(long)"], ["void", "org.hibernate.engine.jdbc.BlobProxy.truncate(long)"], ["void", "org.hibernate.engine.jdbc.BlobProxy.free()"], ["java.io.InputStream", "org.hibernate.engine.jdbc.BlobProxy.getBinaryStream(long, long)"], ["org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.getAnyConnection()"], ["void", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.releaseAnyConnection(java.sql.Connection)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.getConnection(java.lang.String)"], ["void", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.releaseConnection(java.lang.String, java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.supportsAggressiveRelease()"], ["boolean", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.isUnwrappableAs(java.lang.Class)"], ["<T> T", "org.hibernate.engine.jdbc.connections.spi.AbstractMultiTenantConnectionProvider.unwrap(java.lang.Class<T>)"], ["org.hibernate.engine.jdbc.connections.spi.DataSourceBasedMultiTenantConnectionProviderImpl", "org.hibernate.engine.jdbc.connections.spi.DataSourceBasedMultiTenantConnectionProviderImpl()"], ["void", "org.hibernate.engine.jdbc.connections.spi.DataSourceBasedMultiTenantConnectionProviderImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.jdbc.connections.spi.DataSourceBasedMultiTenantConnectionProviderImpl.stop()"], ["org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.getAnyConnection()"], ["void", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.releaseAnyConnection(java.sql.Connection)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.getConnection(java.lang.String)"], ["void", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.releaseConnection(java.lang.String, java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.supportsAggressiveRelease()"], ["boolean", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.isUnwrappableAs(java.lang.Class)"], ["<T> T", "org.hibernate.engine.jdbc.connections.spi.AbstractDataSourceBasedMultiTenantConnectionProviderImpl.unwrap(java.lang.Class<T>)"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1$1.getViolatedConstraintNameExtracter()"], ["org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl()"], ["javax.sql.DataSource", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getDataSource()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.setDataSource(javax.sql.DataSource)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.setJndiService(org.hibernate.engine.jndi.spi.JndiService)"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.isUnwrappableAs(java.lang.Class)"], ["<T> T", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.unwrap(java.lang.Class<T>)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.configure(java.util.Map)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.stop()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.supportsAggressiveRelease()"], ["java.lang.Thread", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$ValidationThreadFactory.newThread(java.lang.Runnable)"], ["org.hibernate.JDBCException", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1.initialize()"], ["java.lang.Object", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1.initialize()"], ["org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator", "org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator()"], ["org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider", "org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl()"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.isUnwrappableAs(java.lang.Class)"], ["<T> T", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.unwrap(java.lang.Class<T>)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.getConnection()"], ["void", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.closeConnection(java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.UserSuppliedConnectionProviderImpl.supportsAggressiveRelease()"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionCreator", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionCreator(org.hibernate.service.spi.ServiceRegistryImplementor, java.lang.String, java.util.Properties, java.lang.Boolean, java.lang.Integer)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator$1.processBeanInfo(java.beans.BeanInfo)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState(org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections, long)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.stop()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.getConnection()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.closeConnection(java.sql.Connection)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(java.util.Map)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.closeConnection(java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.supportsAggressiveRelease()"], ["boolean", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.isUnwrappableAs(java.lang.Class)"], ["<T> T", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.unwrap(java.lang.Class<T>)"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop()"], ["java.util.Properties", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnectionProperties()"], ["org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.setDriver(java.sql.Driver)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.setUrl(java.lang.String)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.setConnectionProps(java.util.Properties)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.setAutoCommit(boolean)"], ["void", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.setIsolation(java.lang.Integer)"], ["org.hibernate.engine.jdbc.connections.internal.ConnectionCreator", "org.hibernate.engine.jdbc.connections.internal.ConnectionCreatorBuilder.build()"], ["org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator()"], ["org.hibernate.engine.jdbc.connections.spi.ConnectionProvider", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["java.util.Properties", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.getConnectionProperties(java.util.Map<?, ?>)"], ["java.lang.Integer", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.extractIsolation(java.util.Map)"], ["java.lang.Integer", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.interpretIsolation(java.lang.Object)"], ["java.lang.String", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.toIsolationConnectionConstantName(java.lang.Integer)"], ["java.lang.String", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.toIsolationNiceName(java.lang.Integer)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder(org.hibernate.engine.jdbc.connections.internal.ConnectionCreator, boolean)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.initialSize(int)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.minSize(int)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.maxSize(int)"], ["org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build()"], ["org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator(org.hibernate.service.spi.ServiceRegistryImplementor, java.lang.String, java.util.Properties, boolean, java.lang.Integer)"], ["java.lang.String", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.getUrl()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection()"], ["java.util.Properties", "org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.getConnectionProperties()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.validate()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.add(java.sql.Connection)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.poll()"], ["void", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.close()"], ["int", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.size()"], ["java.lang.String", "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.getUrl()"], ["org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator", "org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator(java.sql.Driver, org.hibernate.service.spi.ServiceRegistryImplementor, java.lang.String, java.util.Properties, java.lang.Boolean, java.lang.Integer)"], ["org.hibernate.engine.jdbc.ReaderInputStream", "org.hibernate.engine.jdbc.ReaderInputStream(java.io.Reader)"], ["int", "org.hibernate.engine.jdbc.ReaderInputStream.read()"], ["java.sql.Blob", "org.hibernate.engine.jdbc.SerializableBlobProxy.getWrappedBlob()"], ["java.lang.Object", "org.hibernate.engine.jdbc.SerializableBlobProxy.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["java.sql.Blob", "org.hibernate.engine.jdbc.SerializableBlobProxy.generateProxy(java.sql.Blob)"], ["java.lang.ClassLoader", "org.hibernate.engine.jdbc.SerializableBlobProxy.getProxyClassLoader()"], ["org.hibernate.engine.jdbc.ContextualLobCreator", "org.hibernate.engine.jdbc.ContextualLobCreator(org.hibernate.engine.jdbc.LobCreationContext)"], ["java.sql.Blob", "org.hibernate.engine.jdbc.ContextualLobCreator.createBlob()"], ["java.sql.Blob", "org.hibernate.engine.jdbc.ContextualLobCreator.createBlob(byte[])"], ["java.sql.Blob", "org.hibernate.engine.jdbc.ContextualLobCreator.createBlob(java.io.InputStream, long)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ContextualLobCreator.createClob()"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ContextualLobCreator.createClob(java.lang.String)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ContextualLobCreator.createClob(java.io.Reader, long)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.ContextualLobCreator.createNClob()"], ["java.sql.NClob", "org.hibernate.engine.jdbc.ContextualLobCreator.createNClob(java.lang.String)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.ContextualLobCreator.createNClob(java.io.Reader, long)"], ["org.hibernate.engine.jdbc.spi.TypeNullability[]", "org.hibernate.engine.jdbc.spi.TypeNullability.values()"], ["org.hibernate.engine.jdbc.spi.TypeNullability", "org.hibernate.engine.jdbc.spi.TypeNullability.valueOf(java.lang.String)"], ["org.hibernate.engine.jdbc.spi.TypeNullability", "org.hibernate.engine.jdbc.spi.TypeNullability.interpret(short)"], ["org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter", "org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter()"], ["void", "org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter.physicalConnectionObtained(java.sql.Connection)"], ["void", "org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter.physicalConnectionReleased()"], ["void", "org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter.logicalConnectionClosed()"], ["void", "org.hibernate.engine.jdbc.spi.ConnectionObserverAdapter.statementPrepared()"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.engine.jdbc.spi.SqlStatementLogger()"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.engine.jdbc.spi.SqlStatementLogger(boolean, boolean)"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.engine.jdbc.spi.SqlStatementLogger(boolean, boolean, long)"], ["boolean", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.isLogToStdout()"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.setLogToStdout(boolean)"], ["boolean", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.isFormat()"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.setFormat(boolean)"], ["long", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.getLogSlowQuery()"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(java.lang.String)"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(java.lang.String, org.hibernate.engine.jdbc.internal.Formatter)"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.logSlowQuery(java.sql.Statement, long)"], ["void", "org.hibernate.engine.jdbc.spi.SqlStatementLogger.logSlowQuery(java.lang.String, long)"], ["org.hibernate.engine.jdbc.spi.TypeSearchability[]", "org.hibernate.engine.jdbc.spi.TypeSearchability.values()"], ["org.hibernate.engine.jdbc.spi.TypeSearchability", "org.hibernate.engine.jdbc.spi.TypeSearchability.valueOf(java.lang.String)"], ["org.hibernate.engine.jdbc.spi.TypeSearchability", "org.hibernate.engine.jdbc.spi.TypeSearchability.interpret(short)"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper(boolean)"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper(org.hibernate.exception.spi.SQLExceptionConverter, boolean)"], ["org.hibernate.exception.spi.SQLExceptionConverter", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.getSqlExceptionConverter()"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.setSqlExceptionConverter(org.hibernate.exception.spi.SQLExceptionConverter)"], ["org.hibernate.JDBCException", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, java.lang.String)"], ["org.hibernate.JDBCException", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(java.sql.SQLException, java.lang.String)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.walkWarnings(java.sql.SQLWarning, org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandler)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(java.sql.Connection)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(java.sql.Statement)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(java.sql.Connection, org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandler)"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(java.sql.Statement, org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandler)"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandlerLoggingSupport", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandlerLoggingSupport()"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$WarningHandlerLoggingSupport.handleWarning(java.sql.SQLWarning)"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler(java.lang.String)"], ["boolean", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler.doProcess()"], ["void", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$StandardWarningHandler.prepare(java.sql.SQLWarning)"], ["java.lang.String", "org.hibernate.engine.jdbc.spi.TypeInfo.getTypeName()"], ["int", "org.hibernate.engine.jdbc.spi.TypeInfo.getJdbcTypeCode()"], ["java.lang.String[]", "org.hibernate.engine.jdbc.spi.TypeInfo.getCreateParams()"], ["boolean", "org.hibernate.engine.jdbc.spi.TypeInfo.isUnsigned()"], ["int", "org.hibernate.engine.jdbc.spi.TypeInfo.getPrecision()"], ["short", "org.hibernate.engine.jdbc.spi.TypeInfo.getMinimumScale()"], ["short", "org.hibernate.engine.jdbc.spi.TypeInfo.getMaximumScale()"], ["boolean", "org.hibernate.engine.jdbc.spi.TypeInfo.isFixedPrecisionScale()"], ["java.lang.String", "org.hibernate.engine.jdbc.spi.TypeInfo.getLiteralPrefix()"], ["java.lang.String", "org.hibernate.engine.jdbc.spi.TypeInfo.getLiteralSuffix()"], ["boolean", "org.hibernate.engine.jdbc.spi.TypeInfo.isCaseSensitive()"], ["org.hibernate.engine.jdbc.spi.TypeSearchability", "org.hibernate.engine.jdbc.spi.TypeInfo.getSearchability()"], ["org.hibernate.engine.jdbc.spi.TypeNullability", "org.hibernate.engine.jdbc.spi.TypeInfo.getNullability()"], ["java.lang.String", "org.hibernate.engine.jdbc.spi.SqlExceptionHelper$1.extractConstraintName(java.sql.SQLException)"], ["default", "org.hibernate.engine.jdbc.spi.JdbcCoordinator.org.hibernate.ConnectionReleaseMode getConnectionReleaseMode()"], ["default", "org.hibernate.engine.jdbc.spi.JdbcCoordinator.org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode getConnectionHandlingMode()"], ["default", "org.hibernate.engine.jdbc.spi.JdbcCoordinator.org.hibernate.resource.jdbc.ResourceRegistry getResourceRegistry()"], ["org.hibernate.engine.jdbc.AbstractLobCreator", "org.hibernate.engine.jdbc.AbstractLobCreator()"], ["java.sql.Blob", "org.hibernate.engine.jdbc.AbstractLobCreator.wrap(java.sql.Blob)"], ["java.sql.Clob", "org.hibernate.engine.jdbc.AbstractLobCreator.wrap(java.sql.Clob)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.AbstractLobCreator.wrap(java.sql.NClob)"], ["org.hibernate.engine.jdbc.batch.internal.BasicBatchKey", "org.hibernate.engine.jdbc.batch.internal.BasicBatchKey(java.lang.String, org.hibernate.jdbc.Expectation)"], ["org.hibernate.jdbc.Expectation", "org.hibernate.engine.jdbc.batch.internal.BasicBatchKey.getExpectation()"], ["int", "org.hibernate.engine.jdbc.batch.internal.BasicBatchKey.getBatchedStatementCount()"], ["boolean", "org.hibernate.engine.jdbc.batch.internal.BasicBatchKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.jdbc.batch.internal.BasicBatchKey.hashCode()"], ["org.hibernate.engine.jdbc.batch.spi.BatchKey", "org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.getKey()"], ["void", "org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.addObserver(org.hibernate.engine.jdbc.batch.spi.BatchObserver)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.getBatchStatement(java.lang.String, boolean)"], ["void", "org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.execute()"], ["void", "org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.release()"], ["org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl()"], ["org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl(int)"], ["void", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl.configure(java.util.Map)"], ["int", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl.getJdbcBatchSize()"], ["void", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl.setJdbcBatchSize(int)"], ["org.hibernate.engine.jdbc.batch.spi.Batch", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl.buildBatch(org.hibernate.engine.jdbc.batch.spi.BatchKey, org.hibernate.engine.jdbc.spi.JdbcCoordinator)"], ["org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator()"], ["org.hibernate.engine.jdbc.batch.spi.BatchBuilder", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.batch.internal.BatchingBatch", "org.hibernate.engine.jdbc.batch.internal.BatchingBatch(org.hibernate.engine.jdbc.batch.spi.BatchKey, org.hibernate.engine.jdbc.spi.JdbcCoordinator, int)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.batch.internal.BatchingBatch.getBatchStatement(java.lang.String, boolean)"], ["void", "org.hibernate.engine.jdbc.batch.internal.BatchingBatch.addToBatch()"], ["void", "org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch()"], ["java.sql.Blob", "org.hibernate.engine.jdbc.ContextualLobCreator$1.executeOnConnection(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.engine.jdbc.ContextualLobCreator$1.executeOnConnection(java.sql.Connection)"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size()"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size(int, int, long, org.hibernate.engine.jdbc.Size$LobMultiplier)"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size.precision(int)"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size.precision(int, int)"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size.length(long)"], ["org.hibernate.engine.jdbc.Size", "org.hibernate.engine.jdbc.Size.length(long, org.hibernate.engine.jdbc.Size$LobMultiplier)"], ["int", "org.hibernate.engine.jdbc.Size.getPrecision()"], ["int", "org.hibernate.engine.jdbc.Size.getScale()"], ["long", "org.hibernate.engine.jdbc.Size.getLength()"], ["org.hibernate.engine.jdbc.Size$LobMultiplier", "org.hibernate.engine.jdbc.Size.getLobMultiplier()"], ["void", "org.hibernate.engine.jdbc.Size.initialize(org.hibernate.engine.jdbc.Size)"], ["void", "org.hibernate.engine.jdbc.Size.setPrecision(int)"], ["void", "org.hibernate.engine.jdbc.Size.setScale(int)"], ["void", "org.hibernate.engine.jdbc.Size.setLength(long)"], ["void", "org.hibernate.engine.jdbc.Size.setLobMultiplier(org.hibernate.engine.jdbc.Size$LobMultiplier)"], ["org.hibernate.engine.jdbc.env.spi.AnsiSqlKeywords", "org.hibernate.engine.jdbc.env.spi.AnsiSqlKeywords()"], ["org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy[]", "org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy.values()"], ["org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy", "org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy.valueOf(java.lang.String)"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.from(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyReservedWords(java.sql.DatabaseMetaData)"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(java.sql.DatabaseMetaData)"], ["boolean", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.isGloballyQuoteIdentifiers()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setGloballyQuoteIdentifiers(boolean)"], ["boolean", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.isSkipGlobalQuotingForColumnDefinitions()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setSkipGlobalQuotingForColumnDefinitions(boolean)"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setAutoQuoteKeywords(boolean)"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.getNameQualifierSupport()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setNameQualifierSupport(org.hibernate.engine.jdbc.env.spi.NameQualifierSupport)"], ["org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.getUnquotedCaseStrategy()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setUnquotedCaseStrategy(org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy)"], ["org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.getQuotedCaseStrategy()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setQuotedCaseStrategy(org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy)"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.clearReservedWords()"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyReservedWords(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.setReservedWords(java.util.Set<java.lang.String>)"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelper", "org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build()"], ["org.hibernate.engine.jdbc.env.spi.SQLStateType[]", "org.hibernate.engine.jdbc.env.spi.SQLStateType.values()"], ["org.hibernate.engine.jdbc.env.spi.SQLStateType", "org.hibernate.engine.jdbc.env.spi.SQLStateType.valueOf(java.lang.String)"], ["org.hibernate.engine.jdbc.env.spi.SQLStateType", "org.hibernate.engine.jdbc.env.spi.SQLStateType.interpretReportedSQLStateType(int)"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport[]", "org.hibernate.engine.jdbc.env.spi.NameQualifierSupport.values()"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.engine.jdbc.env.spi.NameQualifierSupport.valueOf(java.lang.String)"], ["boolean", "org.hibernate.engine.jdbc.env.spi.NameQualifierSupport.supportsCatalogs()"], ["boolean", "org.hibernate.engine.jdbc.env.spi.NameQualifierSupport.supportsSchemas()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsRefCursors()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.getJdbcEnvironment()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsNamedParameters()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsScrollableResults()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsGetGeneratedKeys()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsBatchUpdates()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.supportsDataDefinitionInTransaction()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.doesDataDefinitionCauseTransactionCommit()"], ["org.hibernate.engine.jdbc.env.spi.SQLStateType", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.getSqlStateType()"], ["boolean", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.doesLobLocatorUpdateCopy()"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.getConnectionCatalogName()"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl.getConnectionSchemaName()"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(java.sql.Connection, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$NameCatalogFormat", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$NameCatalogFormat(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$NameCatalogFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.apply(java.sql.DatabaseMetaData)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setConnectionSchemaName(java.lang.String)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setConnectionCatalogName(java.lang.String)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setExtraKeywords(java.util.Set<java.lang.String>)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.addExtraKeyword(java.lang.String)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setTypeInfoSet(java.util.LinkedHashSet<org.hibernate.engine.jdbc.spi.TypeInfo>)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.addTypeInfo(org.hibernate.engine.jdbc.spi.TypeInfo)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsRefCursors(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsNamedParameters(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsScrollableResults(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsGetGeneratedKeys(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsBatchUpdates(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSupportsDataDefinitionInTransaction(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setDoesDataDefinitionCauseTransactionCommit(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSqlStateType(org.hibernate.engine.jdbc.env.spi.SQLStateType)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setLobLocatorUpdateCopy(boolean)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.setSequenceInformationList(java.util.List<org.hibernate.tool.schema.extract.spi.SequenceInformation>)"], ["org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl", "org.hibernate.engine.jdbc.env.internal.ExtractedDatabaseMetaDataImpl$Builder.build()"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl(org.hibernate.engine.jdbc.env.spi.NameQualifierSupport, java.lang.String, boolean)"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl(org.hibernate.engine.jdbc.env.spi.NameQualifierSupport)"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl(org.hibernate.engine.jdbc.env.spi.NameQualifierSupport, java.sql.DatabaseMetaData)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl.format(org.hibernate.boot.model.relational.QualifiedTableName, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl.format(org.hibernate.boot.model.relational.QualifiedSequenceName, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl.format(org.hibernate.boot.model.relational.QualifiedName, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess(org.hibernate.engine.jdbc.connections.spi.ConnectionProvider)"], ["org.hibernate.engine.jdbc.connections.spi.ConnectionProvider", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.getConnectionProvider()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection()"], ["void", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.supportsAggressiveRelease()"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogNameFormat", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogNameFormat(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogNameFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.engine.jdbc.env.spi.NameQualifierSupport, boolean, boolean, boolean, java.util.Set<java.lang.String>, org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy, org.hibernate.engine.jdbc.env.spi.IdentifierCaseStrategy)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.toIdentifier(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.toIdentifier(java.lang.String, boolean)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.applyGlobalQuoting(java.lang.String)"], ["boolean", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.isReservedWord(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.toMetaDataCatalogName(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.toMetaDataSchemaName(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.toMetaDataObjectName(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildBootstrapJdbcConnectionAccess(org.hibernate.MultiTenancyStrategy, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$NoQualifierSupportFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$SchemaNameFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl", "org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(org.hibernate.dialect.Dialect, java.util.Map, java.sql.Connection)"], ["org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl", "org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder()"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.buildLobCreator(org.hibernate.engine.jdbc.LobCreationContext)"], ["java.sql.Connection", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl$1.getJdbcConnection()"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl$1.getJdbcEnvironment()"], ["org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverJava17Delegate", "org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverJava17Delegate()"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverJava17Delegate.resolveSchemaName(java.sql.Connection, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$SchemaNameCatalogFormat", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$SchemaNameCatalogFormat(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$SchemaNameCatalogFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess(org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider)"], ["org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess.getConnectionProvider()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess.obtainConnection()"], ["void", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$MultiTenantConnectionProviderJdbcConnectionAccess.supportsAggressiveRelease()"], ["org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.getDialectResolutionInfo()"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl(org.hibernate.service.spi.ServiceRegistryImplementor, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl(java.sql.DatabaseMetaData, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl(org.hibernate.service.spi.ServiceRegistryImplementor, org.hibernate.dialect.Dialect, java.sql.DatabaseMetaData)"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getDialect()"], ["org.hibernate.engine.jdbc.env.spi.ExtractedDatabaseMetaData", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getExtractedDatabaseMetaData()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getCurrentCatalog()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getCurrentSchema()"], ["org.hibernate.engine.jdbc.env.spi.QualifiedObjectNameFormatter", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getQualifiedObjectNameFormatter()"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelper", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getIdentifierHelper()"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getNameQualifierSupport()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getSqlExceptionHelper()"], ["org.hibernate.engine.jdbc.env.spi.LobCreatorBuilder", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getLobCreatorBuilder()"], ["org.hibernate.engine.jdbc.spi.TypeInfo", "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.getTypeInfoForJdbcCode(int)"], ["org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogSchemaNameFormat", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogSchemaNameFormat(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.QualifiedObjectNameFormatterStandardImpl$CatalogSchemaNameFormat.format(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.dialect.Dialect)"], ["org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate", "org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate()"], ["java.lang.String", "org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(java.sql.Connection, org.hibernate.dialect.Dialect)"], ["default", "org.hibernate.engine.jdbc.WrappedNClob.java.sql.Clob getWrappedClob()"], ["org.hibernate.engine.jdbc.Size$LobMultiplier[]", "org.hibernate.engine.jdbc.Size$LobMultiplier.values()"], ["org.hibernate.engine.jdbc.Size$LobMultiplier", "org.hibernate.engine.jdbc.Size$LobMultiplier.valueOf(java.lang.String)"], ["long", "org.hibernate.engine.jdbc.Size$LobMultiplier.getFactor()"], ["void", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$QueryStatementPreparationTemplate.postProcess(java.sql.PreparedStatement)"], ["org.hibernate.engine.jdbc.internal.LobCreatorBuilder", "org.hibernate.engine.jdbc.internal.LobCreatorBuilder(java.util.Map, java.sql.Connection)"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.engine.jdbc.internal.LobCreatorBuilder.buildLobCreator(org.hibernate.engine.jdbc.LobCreationContext)"], ["org.hibernate.engine.jdbc.internal.JdbcServicesImpl", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(java.util.Map)"], ["org.hibernate.engine.jdbc.env.spi.JdbcEnvironment", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getJdbcEnvironment()"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getBootstrapJdbcConnectionAccess()"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getDialect()"], ["org.hibernate.engine.jdbc.spi.SqlStatementLogger", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getSqlStatementLogger()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getSqlExceptionHelper()"], ["org.hibernate.engine.jdbc.env.spi.ExtractedDatabaseMetaData", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getExtractedMetaDataSupport()"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getLobCreator(org.hibernate.engine.jdbc.LobCreationContext)"], ["org.hibernate.engine.jdbc.spi.ResultSetWrapper", "org.hibernate.engine.jdbc.internal.JdbcServicesImpl.getResultSetWrapper()"], ["org.hibernate.engine.jdbc.internal.ResultSetReturnImpl", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl(org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.engine.jdbc.spi.JdbcServices)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(java.sql.PreparedStatement)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(java.sql.CallableStatement)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(java.sql.Statement, java.lang.String)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(java.sql.PreparedStatement)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(java.sql.Statement, java.lang.String)"], ["int", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(java.sql.PreparedStatement)"], ["int", "org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(java.sql.Statement, java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.FormatStyle$NoFormatImpl.format(java.lang.String)"], ["org.hibernate.engine.jdbc.internal.JdbcServicesInitiator", "org.hibernate.engine.jdbc.internal.JdbcServicesInitiator()"], ["org.hibernate.engine.jdbc.spi.JdbcServices", "org.hibernate.engine.jdbc.internal.JdbcServicesInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.internal.JdbcServicesInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$3.doPrepare()"], ["org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl(java.sql.Connection, org.hibernate.resource.jdbc.spi.JdbcSessionOwner, org.hibernate.engine.jdbc.spi.JdbcServices)"], ["org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getLogicalConnection()"], ["org.hibernate.engine.jdbc.spi.SqlExceptionHelper", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.sqlExceptionHelper()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.flushBeginning()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.flushEnding()"], ["java.sql.Connection", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close()"], ["org.hibernate.engine.jdbc.batch.spi.Batch", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getBatch(org.hibernate.engine.jdbc.batch.spi.BatchKey)"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.abortBatch()"], ["org.hibernate.engine.jdbc.spi.StatementPreparer", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getStatementPreparer()"], ["org.hibernate.engine.jdbc.spi.ResultSetReturn", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getResultSetReturn()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.setTransactionTimeOut(int)"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.flushBeforeTransactionCompletion()"], ["int", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.determineRemainingTransactionTimeOutPeriod()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterTransaction()"], ["<T> T", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.coordinateWork(org.hibernate.jdbc.WorkExecutorVisitable<T>)"], ["boolean", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.isReadyForSerialization()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.registerLastQuery(java.sql.Statement)"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.cancelLastQuery()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.enableReleases()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.disableReleases()"], ["boolean", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.isActive()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterTransactionBegin()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterTransactionCompletion(boolean, boolean)"], ["org.hibernate.resource.jdbc.spi.JdbcSessionOwner", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getJdbcSessionOwner()"], ["org.hibernate.resource.transaction.backend.jdbc.spi.JdbcResourceTransaction", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.getResourceLocalTransaction()"], ["void", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl", "org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.deserialize(java.io.ObjectInputStream, org.hibernate.resource.jdbc.spi.JdbcSessionOwner)"], ["org.hibernate.engine.jdbc.internal.BasicFormatterImpl", "org.hibernate.engine.jdbc.internal.BasicFormatterImpl()"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.BasicFormatterImpl.format(java.lang.String)"], ["org.hibernate.engine.jdbc.internal.ResultSetWrapperImpl", "org.hibernate.engine.jdbc.internal.ResultSetWrapperImpl(org.hibernate.service.ServiceRegistry)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.internal.ResultSetWrapperImpl.wrap(java.sql.ResultSet, org.hibernate.engine.jdbc.ColumnNameCache)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare()"], ["org.hibernate.engine.jdbc.internal.BinaryStreamImpl", "org.hibernate.engine.jdbc.internal.BinaryStreamImpl(byte[])"], ["java.io.InputStream", "org.hibernate.engine.jdbc.internal.BinaryStreamImpl.getInputStream()"], ["byte[]", "org.hibernate.engine.jdbc.internal.BinaryStreamImpl.getBytes()"], ["long", "org.hibernate.engine.jdbc.internal.BinaryStreamImpl.getLength()"], ["void", "org.hibernate.engine.jdbc.internal.BinaryStreamImpl.release()"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement()"], ["void", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.postProcess(java.sql.PreparedStatement)"], ["java.sql.Statement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.createStatement()"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(java.lang.String)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(java.lang.String, boolean)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(java.lang.String, int)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(java.lang.String, java.lang.String[])"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(java.lang.String, boolean, org.hibernate.ScrollMode)"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$2.doPrepare()"], ["org.hibernate.engine.jdbc.internal.FormatStyle[]", "org.hibernate.engine.jdbc.internal.FormatStyle.values()"], ["org.hibernate.engine.jdbc.internal.FormatStyle", "org.hibernate.engine.jdbc.internal.FormatStyle.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.FormatStyle.getName()"], ["org.hibernate.engine.jdbc.internal.Formatter", "org.hibernate.engine.jdbc.internal.FormatStyle.getFormatter()"], ["java.sql.PreparedStatement", "org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare()"], ["org.hibernate.engine.jdbc.internal.CharacterStreamImpl", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl(java.lang.String)"], ["org.hibernate.engine.jdbc.internal.CharacterStreamImpl", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl(java.io.Reader, long)"], ["java.io.Reader", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl.asReader()"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl.asString()"], ["long", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl.getLength()"], ["void", "org.hibernate.engine.jdbc.internal.CharacterStreamImpl.release()"], ["org.hibernate.engine.jdbc.internal.DDLFormatterImpl", "org.hibernate.engine.jdbc.internal.DDLFormatterImpl()"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.DDLFormatterImpl.format(java.lang.String)"], ["org.hibernate.engine.jdbc.internal.BasicFormatterImpl$FormatProcess", "org.hibernate.engine.jdbc.internal.BasicFormatterImpl$FormatProcess(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.jdbc.internal.BasicFormatterImpl$FormatProcess.perform()"], ["java.sql.NClob", "org.hibernate.engine.jdbc.NClobProxy.generateProxy(java.lang.String)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.NClobProxy.generateProxy(java.io.Reader, long)"], ["java.io.InputStream", "org.hibernate.engine.jdbc.BlobProxy$StreamBackedBinaryStream.getInputStream()"], ["byte[]", "org.hibernate.engine.jdbc.BlobProxy$StreamBackedBinaryStream.getBytes()"], ["long", "org.hibernate.engine.jdbc.BlobProxy$StreamBackedBinaryStream.getLength()"], ["void", "org.hibernate.engine.jdbc.BlobProxy$StreamBackedBinaryStream.release()"], ["java.sql.Clob", "org.hibernate.engine.jdbc.SerializableClobProxy.getWrappedClob()"], ["java.lang.Object", "org.hibernate.engine.jdbc.SerializableClobProxy.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["java.sql.Clob", "org.hibernate.engine.jdbc.SerializableClobProxy.generateProxy(java.sql.Clob)"], ["java.lang.ClassLoader", "org.hibernate.engine.jdbc.SerializableClobProxy.getProxyClassLoader()"], ["java.sql.Clob", "org.hibernate.engine.jdbc.ContextualLobCreator$2.executeOnConnection(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.engine.jdbc.ContextualLobCreator$2.executeOnConnection(java.sql.Connection)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.ContextualLobCreator$3.executeOnConnection(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.engine.jdbc.ContextualLobCreator$3.executeOnConnection(java.sql.Connection)"], ["org.hibernate.engine.jdbc.ColumnNameCache", "org.hibernate.engine.jdbc.ColumnNameCache(int)"], ["java.lang.Integer", "org.hibernate.engine.jdbc.ColumnNameCache.getIndexForColumnName(java.lang.String, java.sql.ResultSet)"], ["org.hibernate.engine.jdbc.ResultSetWrapperProxy$ResultSetMethodKey", "org.hibernate.engine.jdbc.ResultSetWrapperProxy$ResultSetMethodKey(java.lang.String, java.lang.Class<?>[])"], ["int", "org.hibernate.engine.jdbc.ResultSetWrapperProxy$ResultSetMethodKey.hashCode()"], ["boolean", "org.hibernate.engine.jdbc.ResultSetWrapperProxy$ResultSetMethodKey.equals(java.lang.Object)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.ResultSetWrapperProxy.generateProxy(java.sql.ResultSet, org.hibernate.engine.jdbc.ColumnNameCache, org.hibernate.service.ServiceRegistry)"], ["java.lang.Object", "org.hibernate.engine.jdbc.ResultSetWrapperProxy.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["org.hibernate.engine.jdbc.dialect.spi.BasicSQLExceptionConverter", "org.hibernate.engine.jdbc.dialect.spi.BasicSQLExceptionConverter()"], ["org.hibernate.JDBCException", "org.hibernate.engine.jdbc.dialect.spi.BasicSQLExceptionConverter.convert(java.sql.SQLException)"], ["java.lang.String", "org.hibernate.engine.jdbc.dialect.spi.BasicSQLExceptionConverter$ConstraintNameExtracter.extractConstraintName(java.sql.SQLException)"], ["org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver", "org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver(java.lang.String, java.lang.Class)"], ["org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver", "org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver(java.lang.String, int, java.lang.Class)"], ["org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver", "org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver(java.lang.String, int, int, java.lang.Class)"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.dialect.spi.BasicDialectResolver.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter(java.sql.DatabaseMetaData)"], ["java.lang.String", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDatabaseName()"], ["int", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDatabaseMajorVersion()"], ["int", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDatabaseMinorVersion()"], ["java.lang.String", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDriverName()"], ["int", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDriverMajorVersion()"], ["int", "org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter.getDriverMinorVersion()"], ["org.hibernate.engine.jdbc.dialect.internal.DialectFactoryInitiator", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryInitiator()"], ["org.hibernate.engine.jdbc.dialect.spi.DialectFactory", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.dialect.internal.StandardDialectResolver", "org.hibernate.engine.jdbc.dialect.internal.StandardDialectResolver()"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.dialect.internal.StandardDialectResolver.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet()"], ["org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet(java.util.List<org.hibernate.engine.jdbc.dialect.spi.DialectResolver>)"], ["org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet(org.hibernate.engine.jdbc.dialect.spi.DialectResolver...)"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["void", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet.addResolver(org.hibernate.engine.jdbc.dialect.spi.DialectResolver)"], ["void", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet.addResolverAtFirst(org.hibernate.engine.jdbc.dialect.spi.DialectResolver)"], ["org.hibernate.engine.jdbc.dialect.internal.DialectResolverInitiator", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverInitiator()"], ["org.hibernate.engine.jdbc.dialect.spi.DialectResolver", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.dialect.internal.DialectResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl()"], ["void", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.setDialectResolver(org.hibernate.engine.jdbc.dialect.spi.DialectResolver)"], ["org.hibernate.dialect.Dialect", "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(java.util.Map, org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfoSource)"], ["boolean", "org.hibernate.engine.jdbc.SerializableNClobProxy.isNClob(java.sql.Clob)"], ["java.sql.NClob", "org.hibernate.engine.jdbc.SerializableNClobProxy.generateProxy(java.sql.NClob)"], ["java.lang.ClassLoader", "org.hibernate.engine.jdbc.SerializableNClobProxy.getProxyClassLoader()"], ["org.hibernate.engine.jdbc.cursor.internal.RefCursorSupportInitiator", "org.hibernate.engine.jdbc.cursor.internal.RefCursorSupportInitiator()"], ["org.hibernate.engine.jdbc.cursor.spi.RefCursorSupport", "org.hibernate.engine.jdbc.cursor.internal.RefCursorSupportInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jdbc.cursor.internal.RefCursorSupportInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport()"], ["void", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.injectJdbcServices(org.hibernate.engine.jdbc.spi.JdbcServices)"], ["void", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.registerRefCursorParameter(java.sql.CallableStatement, int)"], ["void", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.registerRefCursorParameter(java.sql.CallableStatement, java.lang.String)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.getResultSet(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.getResultSet(java.sql.CallableStatement, java.lang.String)"], ["boolean", "org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(java.sql.DatabaseMetaData)"], ["default", "org.hibernate.engine.transaction.spi.TransactionImplementor.void invalidate()"], ["org.hibernate.engine.transaction.spi.JoinStatus[]", "org.hibernate.engine.transaction.spi.JoinStatus.values()"], ["org.hibernate.engine.transaction.spi.JoinStatus", "org.hibernate.engine.transaction.spi.JoinStatus.valueOf(java.lang.String)"], ["org.hibernate.engine.transaction.internal.SynchronizationRegistryImpl", "org.hibernate.engine.transaction.internal.SynchronizationRegistryImpl()"], ["void", "org.hibernate.engine.transaction.internal.SynchronizationRegistryImpl.registerSynchronization(javax.transaction.Synchronization)"], ["void", "org.hibernate.engine.transaction.internal.SynchronizationRegistryImpl.notifySynchronizationsBeforeTransactionCompletion()"], ["void", "org.hibernate.engine.transaction.internal.SynchronizationRegistryImpl.notifySynchronizationsAfterTransactionCompletion(int)"], ["org.hibernate.engine.transaction.internal.NullSynchronizationException", "org.hibernate.engine.transaction.internal.NullSynchronizationException()"], ["org.hibernate.engine.transaction.internal.NullSynchronizationException", "org.hibernate.engine.transaction.internal.NullSynchronizationException(java.lang.String)"], ["org.hibernate.engine.transaction.internal.TransactionImpl", "org.hibernate.engine.transaction.internal.TransactionImpl(org.hibernate.resource.transaction.spi.TransactionCoordinator, org.hibernate.internal.AbstractSharedSessionContract)"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.begin()"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.commit()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver", "org.hibernate.engine.transaction.internal.TransactionImpl.internalGetTransactionDriverControl()"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.rollback()"], ["boolean", "org.hibernate.engine.transaction.internal.TransactionImpl.isActive()"], ["boolean", "org.hibernate.engine.transaction.internal.TransactionImpl.isActive(boolean)"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.engine.transaction.internal.TransactionImpl.getStatus()"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.registerSynchronization(javax.transaction.Synchronization)"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.setTimeout(int)"], ["int", "org.hibernate.engine.transaction.internal.TransactionImpl.getTimeout()"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly()"], ["void", "org.hibernate.engine.transaction.internal.TransactionImpl.setRollbackOnly()"], ["boolean", "org.hibernate.engine.transaction.internal.TransactionImpl.getRollbackOnly()"], ["int", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.getStatus(javax.transaction.UserTransaction)"], ["int", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.getStatus(javax.transaction.TransactionManager)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isActive(int)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isActive(javax.transaction.UserTransaction)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isActive(javax.transaction.TransactionManager)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isRollback(int)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isRollback(javax.transaction.UserTransaction)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isRollback(javax.transaction.TransactionManager)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isCommitted(int)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isCommitted(javax.transaction.UserTransaction)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isCommitted(javax.transaction.TransactionManager)"], ["boolean", "org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.isMarkedForRollback(int)"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformException", "org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformException(java.lang.String)"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformException", "org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform()"], ["java.lang.Object", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform()"], ["java.lang.Object", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform.getTransactionIdentifier(javax.transaction.Transaction)"], ["org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform(java.lang.Class, org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment)"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform()"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform.canRegisterSynchronization()"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform.getCurrentStatus()"], ["java.lang.Object", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform.getTransactionIdentifier(javax.transaction.Transaction)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform.registerSynchronization(javax.transaction.Synchronization)"], ["org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator()"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator()"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.SynchronizationRegistryBasedSynchronizationStrategy", "org.hibernate.engine.transaction.jta.platform.internal.SynchronizationRegistryBasedSynchronizationStrategy(org.hibernate.engine.transaction.jta.platform.internal.SynchronizationRegistryAccess)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.SynchronizationRegistryBasedSynchronizationStrategy.registerSynchronization(javax.transaction.Synchronization)"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.SynchronizationRegistryBasedSynchronizationStrategy.canRegisterSynchronization()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.registerSynchronization(javax.transaction.Synchronization)"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.hashCode()"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.equals(java.lang.Object)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.commit()"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.delistResource(javax.transaction.xa.XAResource, int)"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.enlistResource(javax.transaction.xa.XAResource)"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.getStatus()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.rollback()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter$TransactionAdapter.setRollbackOnly()"], ["org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.begin()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.commit()"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.getStatus()"], ["javax.transaction.Transaction", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.getTransaction()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.resume(javax.transaction.Transaction)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.rollback()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.setRollbackOnly()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.setTransactionTimeout(int)"], ["javax.transaction.Transaction", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform$TransactionManagerAdapter.suspend()"], ["org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform()"], ["javax.transaction.TransactionManager", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.retrieveTransactionManager()"], ["javax.transaction.UserTransaction", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.retrieveUserTransaction()"], ["java.lang.Object", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.getTransactionIdentifier(javax.transaction.Transaction)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.registerSynchronization(javax.transaction.Synchronization)"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.canRegisterSynchronization()"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform.getCurrentStatus()"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment[]", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment.values()"], ["org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment.getWebSphereVersion()"], ["java.lang.String", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment.getTmAccessClassName()"], ["java.lang.String", "org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform$WebSphereEnvironment.getUtName()"], ["org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform()"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.configure(java.util.Map)"], ["javax.transaction.TransactionManager", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.retrieveTransactionManager()"], ["javax.transaction.TransactionManager", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.getTransactionManager()"], ["javax.transaction.UserTransaction", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.retrieveUserTransaction()"], ["java.lang.Object", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.getTransactionIdentifier(javax.transaction.Transaction)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.registerSynchronization(javax.transaction.Synchronization)"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.canRegisterSynchronization()"], ["int", "org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform.getCurrentStatus()"], ["org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver", "org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver()"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform", "org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform()"], ["org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy", "org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy(org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess)"], ["void", "org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy.registerSynchronization(javax.transaction.Synchronization)"], ["boolean", "org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy.canRegisterSynchronization()"], ["org.hibernate.engine.query.spi.AbstractParameterDescriptor", "org.hibernate.engine.query.spi.AbstractParameterDescriptor(int[], org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getName()"], ["java.lang.Integer", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getPosition()"], ["java.lang.Class", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getParameterType()"], ["org.hibernate.type.Type", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getHibernateType()"], ["int[]", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getSourceLocations()"], ["org.hibernate.type.Type", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.getExpectedType()"], ["void", "org.hibernate.engine.query.spi.AbstractParameterDescriptor.resetExpectedType(org.hibernate.type.Type)"], ["org.hibernate.engine.query.spi.EntityGraphQueryHint", "org.hibernate.engine.query.spi.EntityGraphQueryHint(java.lang.String, javax.persistence.EntityGraph<?>)"], ["org.hibernate.engine.query.spi.EntityGraphQueryHint", "org.hibernate.engine.query.spi.EntityGraphQueryHint(org.hibernate.graph.spi.RootGraphImplementor<?>, org.hibernate.graph.GraphSemantic)"], ["org.hibernate.graph.GraphSemantic", "org.hibernate.engine.query.spi.EntityGraphQueryHint.getSemantic()"], ["org.hibernate.graph.GraphSemantic", "org.hibernate.engine.query.spi.EntityGraphQueryHint.getGraphSemantic()"], ["java.lang.String", "org.hibernate.engine.query.spi.EntityGraphQueryHint.getHintName()"], ["org.hibernate.engine.query.spi.QueryPlanCache", "org.hibernate.engine.query.spi.QueryPlanCache(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.query.ParameterMetadata", "org.hibernate.engine.query.spi.QueryPlanCache.getSQLParameterMetadata(java.lang.String, boolean)"], ["org.hibernate.engine.query.spi.HQLQueryPlan", "org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(java.lang.String, boolean, java.util.Map<java.lang.String, org.hibernate.Filter>)"], ["org.hibernate.engine.query.spi.FilterQueryPlan", "org.hibernate.engine.query.spi.QueryPlanCache.getFilterQueryPlan(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, org.hibernate.Filter>)"], ["org.hibernate.engine.query.spi.NativeSQLQueryPlan", "org.hibernate.engine.query.spi.QueryPlanCache.getNativeSQLQueryPlan(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification)"], ["void", "org.hibernate.engine.query.spi.QueryPlanCache.cleanup()"], ["org.hibernate.engine.query.spi.NativeQueryInterpreter", "org.hibernate.engine.query.spi.QueryPlanCache.getNativeQueryInterpreter()"], ["java.lang.String[]", "org.hibernate.engine.query.spi.ReturnMetadata.getReturnAliases()"], ["org.hibernate.type.Type[]", "org.hibernate.engine.query.spi.ReturnMetadata.getReturnTypes()"], ["default", "org.hibernate.engine.query.spi.NativeQueryInterpreter.org.hibernate.loader.custom.CustomLoader createCustomLoader(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.query.spi.OrdinalParameterDescriptor", "org.hibernate.engine.query.spi.OrdinalParameterDescriptor(int, int, org.hibernate.type.Type, int[])"], ["java.lang.Integer", "org.hibernate.engine.query.spi.OrdinalParameterDescriptor.getPosition()"], ["int", "org.hibernate.engine.query.spi.OrdinalParameterDescriptor.getValuePosition()"], ["void", "org.hibernate.engine.query.spi.ParameterParser.parse(java.lang.String, org.hibernate.engine.query.spi.ParameterParser$Recognizer)"], ["boolean", "org.hibernate.engine.query.spi.ParameterParser.startsWithEscapeCallTemplate(java.lang.String)"], ["boolean", "org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey.hashCode()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String[]>, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn.getReturnEntityName()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn.hashCode()"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.getAlias()"], ["org.hibernate.LockMode", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.getLockMode()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.getPropertyResultsMap()"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.hashCode()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.equals(java.lang.Object)"], ["void", "org.hibernate.engine.query.spi.sql.NativeSQLQueryNonScalarReturn.traceLog(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn$TraceLogger)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn(java.lang.String, java.lang.String, java.lang.String, java.util.Map, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn.getOwnerEntityName()"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn.getOwnerProperty()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn.hashCode()"], ["void", "org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn$1.writeLine(java.lang.String)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn(java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn.getColumnAlias()"], ["org.hibernate.type.Type", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn.getType()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn.hashCode()"], ["void", "org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn.traceLog(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn$TraceLogger)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification(java.lang.String, org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[], java.util.Collection)"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification.getQueryString()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification.getQueryReturns()"], ["java.util.Set", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification.getQuerySpaces()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification.hashCode()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn(java.lang.String, java.lang.String, java.lang.String, java.util.Map, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn.getOwnerAlias()"], ["java.lang.String", "org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn.getOwnerProperty()"], ["boolean", "org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn.hashCode()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn", "org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn(java.lang.Class, java.util.List<org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn>)"], ["java.lang.Class", "org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn.getTargetClass()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn[]", "org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn.getColumnReturns()"], ["void", "org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn.traceLog(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn$TraceLogger)"], ["org.hibernate.engine.query.spi.FilterQueryPlan", "org.hibernate.engine.query.spi.FilterQueryPlan(java.lang.String, java.lang.String, boolean, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.engine.query.spi.FilterQueryPlan.getCollectionRole()"], ["org.hibernate.engine.query.spi.NativeSQLQueryPlan", "org.hibernate.engine.query.spi.NativeSQLQueryPlan(java.lang.String, org.hibernate.loader.custom.CustomQuery)"], ["java.lang.String", "org.hibernate.engine.query.spi.NativeSQLQueryPlan.getSourceQuery()"], ["org.hibernate.loader.custom.CustomQuery", "org.hibernate.engine.query.spi.NativeSQLQueryPlan.getCustomQuery()"], ["int", "org.hibernate.engine.query.spi.NativeSQLQueryPlan.performExecuteUpdate(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.query.spi.NamedParameterDescriptor", "org.hibernate.engine.query.spi.NamedParameterDescriptor(java.lang.String, org.hibernate.type.Type, int[])"], ["java.lang.String", "org.hibernate.engine.query.spi.NamedParameterDescriptor.getName()"], ["boolean", "org.hibernate.engine.query.spi.NamedParameterDescriptor.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.NamedParameterDescriptor.hashCode()"], ["org.hibernate.engine.query.spi.QueryPlanCache$ParameterMetadataKey", "org.hibernate.engine.query.spi.QueryPlanCache$ParameterMetadataKey(java.lang.String, boolean)"], ["boolean", "org.hibernate.engine.query.spi.QueryPlanCache$ParameterMetadataKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.QueryPlanCache$ParameterMetadataKey.hashCode()"], ["org.hibernate.engine.query.spi.HQLQueryPlan", "org.hibernate.engine.query.spi.HQLQueryPlan(java.lang.String, boolean, java.util.Map<java.lang.String, org.hibernate.Filter>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.query.spi.HQLQueryPlan", "org.hibernate.engine.query.spi.HQLQueryPlan(java.lang.String, boolean, java.util.Map<java.lang.String, org.hibernate.Filter>, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.query.spi.EntityGraphQueryHint)"], ["java.lang.String", "org.hibernate.engine.query.spi.HQLQueryPlan.getSourceQuery()"], ["java.util.Set", "org.hibernate.engine.query.spi.HQLQueryPlan.getQuerySpaces()"], ["org.hibernate.query.internal.ParameterMetadataImpl", "org.hibernate.engine.query.spi.HQLQueryPlan.getParameterMetadata()"], ["org.hibernate.engine.query.spi.ReturnMetadata", "org.hibernate.engine.query.spi.HQLQueryPlan.getReturnMetadata()"], ["java.util.Set", "org.hibernate.engine.query.spi.HQLQueryPlan.getEnabledFilterNames()"], ["java.lang.String[]", "org.hibernate.engine.query.spi.HQLQueryPlan.getSqlStrings()"], ["java.util.Set", "org.hibernate.engine.query.spi.HQLQueryPlan.getUtilizedFilterNames()"], ["boolean", "org.hibernate.engine.query.spi.HQLQueryPlan.isShallow()"], ["java.util.List", "org.hibernate.engine.query.spi.HQLQueryPlan.performList(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.Iterator", "org.hibernate.engine.query.spi.HQLQueryPlan.performIterate(org.hibernate.engine.spi.QueryParameters, org.hibernate.event.spi.EventSource)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.engine.query.spi.HQLQueryPlan.performScroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.engine.query.spi.HQLQueryPlan.performExecuteUpdate(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.hql.spi.QueryTranslator[]", "org.hibernate.engine.query.spi.HQLQueryPlan.getTranslators()"], ["java.lang.Class", "org.hibernate.engine.query.spi.HQLQueryPlan.getDynamicInstantiationResultType()"], ["boolean", "org.hibernate.engine.query.spi.HQLQueryPlan.isSelect()"], ["boolean", "org.hibernate.engine.query.spi.HQLQueryPlan.isUpdate()"], ["org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey", "org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey(java.lang.String, boolean, java.util.Map)"], ["boolean", "org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey.hashCode()"], ["org.hibernate.engine.query.spi.QueryPlanCache$FilterQueryPlanKey", "org.hibernate.engine.query.spi.QueryPlanCache$FilterQueryPlanKey(java.lang.String, java.lang.String, boolean, java.util.Map)"], ["boolean", "org.hibernate.engine.query.spi.QueryPlanCache$FilterQueryPlanKey.equals(java.lang.Object)"], ["int", "org.hibernate.engine.query.spi.QueryPlanCache$FilterQueryPlanKey.hashCode()"], ["org.hibernate.engine.query.spi.ParamLocationRecognizer", "org.hibernate.engine.query.spi.ParamLocationRecognizer(int)"], ["org.hibernate.engine.query.spi.ParamLocationRecognizer", "org.hibernate.engine.query.spi.ParamLocationRecognizer.parseLocations(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.complete()"], ["java.util.Map<java.lang.String, org.hibernate.engine.query.spi.NamedParameterDescriptor>", "org.hibernate.engine.query.spi.ParamLocationRecognizer.getNamedParameterDescriptionMap()"], ["java.util.Map<java.lang.Integer, org.hibernate.engine.query.spi.OrdinalParameterDescriptor>", "org.hibernate.engine.query.spi.ParamLocationRecognizer.getOrdinalParameterDescriptionMap()"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.ordinalParameter(int)"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.namedParameter(java.lang.String, int)"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.jpaPositionalParameter(int, int)"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.other(char)"], ["void", "org.hibernate.engine.query.spi.ParamLocationRecognizer.outParameter(int)"], ["org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator", "org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator()"], ["org.hibernate.engine.query.spi.NativeQueryInterpreter", "org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.engine.query.spi.NativeQueryInterpreter", "org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["org.hibernate.service.Service", "org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.query.spi.NativeQueryInterpreterInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl", "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.query.internal.ParameterMetadataImpl", "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl.getParameterMetadata(java.lang.String)"], ["org.hibernate.engine.query.spi.NativeSQLQueryPlan", "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl.createQueryPlan(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.query.ParameterRecognitionException", "org.hibernate.engine.query.ParameterRecognitionException(java.lang.String)"], ["org.hibernate.engine.query.ParameterRecognitionException", "org.hibernate.engine.query.ParameterRecognitionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.engine.FetchTiming[]", "org.hibernate.engine.FetchTiming.values()"], ["org.hibernate.engine.FetchTiming", "org.hibernate.engine.FetchTiming.valueOf(java.lang.String)"], ["org.hibernate.engine.jndi.JndiException", "org.hibernate.engine.jndi.JndiException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.engine.jndi.JndiNameException", "org.hibernate.engine.jndi.JndiNameException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.engine.jndi.internal.JndiServiceImpl", "org.hibernate.engine.jndi.internal.JndiServiceImpl(java.util.Map)"], ["java.util.Properties", "org.hibernate.engine.jndi.internal.JndiServiceImpl.extractJndiProperties(java.util.Map)"], ["java.lang.Object", "org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(java.lang.String)"], ["void", "org.hibernate.engine.jndi.internal.JndiServiceImpl.bind(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.engine.jndi.internal.JndiServiceImpl.unbind(java.lang.String)"], ["void", "org.hibernate.engine.jndi.internal.JndiServiceImpl.addListener(java.lang.String, javax.naming.event.NamespaceChangeListener)"], ["org.hibernate.engine.jndi.internal.JndiServiceInitiator", "org.hibernate.engine.jndi.internal.JndiServiceInitiator()"], ["org.hibernate.engine.jndi.spi.JndiService", "org.hibernate.engine.jndi.internal.JndiServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.engine.jndi.internal.JndiServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["default", "org.hibernate.metadata.ClassMetadata.java.lang.Object[] getPropertyValuesToInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SessionImplementor)"], ["default", "org.hibernate.metadata.ClassMetadata.java.lang.Object instantiate(java.io.Serializable, org.hibernate.engine.spi.SessionImplementor)"], ["default", "org.hibernate.metadata.ClassMetadata.java.io.Serializable getIdentifier(java.lang.Object, org.hibernate.engine.spi.SessionImplementor)"], ["default", "org.hibernate.metadata.ClassMetadata.void setIdentifier(java.lang.Object, java.io.Serializable, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.integrator.internal.IntegratorServiceImpl", "org.hibernate.integrator.internal.IntegratorServiceImpl(java.util.LinkedHashSet<org.hibernate.integrator.spi.Integrator>, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.PropertyValueException", "org.hibernate.PropertyValueException(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.PropertyValueException.getEntityName()"], ["java.lang.String", "org.hibernate.PropertyValueException.getPropertyName()"], ["java.lang.String", "org.hibernate.PropertyValueException.getMessage()"], ["default", "org.hibernate.Query.java.lang.Integer getHibernateFirstResult()"], ["default", "org.hibernate.Query.org.hibernate.Query setHibernateFirstResult(int)"], ["default", "org.hibernate.Query.java.lang.Integer getHibernateMaxResults()"], ["default", "org.hibernate.Query.org.hibernate.Query setHibernateMaxResults(int)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setFirstResult(int)"], ["default", "org.hibernate.Query.javax.persistence.TypedQuery setMaxResults(int)"], ["default", "org.hibernate.Query.javax.persistence.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.Query.javax.persistence.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.Query.javax.persistence.Query setFirstResult(int)"], ["default", "org.hibernate.Query.javax.persistence.Query setMaxResults(int)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setReadOnly(boolean)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setFetchSize(int)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setTimeout(int)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setCacheRegion(java.lang.String)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setCacheable(boolean)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.Query.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["boolean", "org.hibernate.event.spi.LoadEventListener$LoadType.isAllowNulls()"], ["boolean", "org.hibernate.event.spi.LoadEventListener$LoadType.isNakedEntityReturned()"], ["boolean", "org.hibernate.event.spi.LoadEventListener$LoadType.isCheckDeleted()"], ["boolean", "org.hibernate.event.spi.LoadEventListener$LoadType.isAllowProxyCreation()"], ["java.lang.String", "org.hibernate.event.spi.LoadEventListener$LoadType.getName()"], ["java.lang.String", "org.hibernate.event.spi.LoadEventListener$LoadType.toString()"], ["org.hibernate.event.spi.PostCollectionRemoveEvent", "org.hibernate.event.spi.PostCollectionRemoveEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource, java.lang.Object)"], ["org.hibernate.event.spi.PreLoadEvent", "org.hibernate.event.spi.PreLoadEvent(org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.PreLoadEvent.getEntity()"], ["java.io.Serializable", "org.hibernate.event.spi.PreLoadEvent.getId()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.PreLoadEvent.getPersister()"], ["java.lang.Object[]", "org.hibernate.event.spi.PreLoadEvent.getState()"], ["org.hibernate.event.spi.PreLoadEvent", "org.hibernate.event.spi.PreLoadEvent.setEntity(java.lang.Object)"], ["org.hibernate.event.spi.PreLoadEvent", "org.hibernate.event.spi.PreLoadEvent.setId(java.io.Serializable)"], ["org.hibernate.event.spi.PreLoadEvent", "org.hibernate.event.spi.PreLoadEvent.setPersister(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.spi.PreLoadEvent", "org.hibernate.event.spi.PreLoadEvent.setState(java.lang.Object[])"], ["java.lang.String", "org.hibernate.event.spi.PreLoadEvent.getEntityName()"], ["java.io.Serializable", "org.hibernate.event.spi.PreLoadEvent.getIdentifier()"], ["org.hibernate.event.spi.LoadEvent", "org.hibernate.event.spi.LoadEvent(java.io.Serializable, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LoadEvent", "org.hibernate.event.spi.LoadEvent(java.io.Serializable, java.lang.String, org.hibernate.LockMode, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LoadEvent", "org.hibernate.event.spi.LoadEvent(java.io.Serializable, java.lang.String, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LoadEvent", "org.hibernate.event.spi.LoadEvent(java.io.Serializable, java.lang.String, boolean, org.hibernate.event.spi.EventSource)"], ["boolean", "org.hibernate.event.spi.LoadEvent.isAssociationFetch()"], ["java.io.Serializable", "org.hibernate.event.spi.LoadEvent.getEntityId()"], ["void", "org.hibernate.event.spi.LoadEvent.setEntityId(java.io.Serializable)"], ["java.lang.String", "org.hibernate.event.spi.LoadEvent.getEntityClassName()"], ["void", "org.hibernate.event.spi.LoadEvent.setEntityClassName(java.lang.String)"], ["java.lang.Object", "org.hibernate.event.spi.LoadEvent.getInstanceToLoad()"], ["void", "org.hibernate.event.spi.LoadEvent.setInstanceToLoad(java.lang.Object)"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LoadEvent.getLockOptions()"], ["org.hibernate.LockMode", "org.hibernate.event.spi.LoadEvent.getLockMode()"], ["void", "org.hibernate.event.spi.LoadEvent.setLockMode(org.hibernate.LockMode)"], ["void", "org.hibernate.event.spi.LoadEvent.setLockTimeout(int)"], ["int", "org.hibernate.event.spi.LoadEvent.getLockTimeout()"], ["void", "org.hibernate.event.spi.LoadEvent.setLockScope(boolean)"], ["boolean", "org.hibernate.event.spi.LoadEvent.getLockScope()"], ["java.lang.Object", "org.hibernate.event.spi.LoadEvent.getResult()"], ["void", "org.hibernate.event.spi.LoadEvent.setResult(java.lang.Object)"], ["org.hibernate.event.spi.PostLoadEvent", "org.hibernate.event.spi.LoadEvent.getPostLoadEvent()"], ["void", "org.hibernate.event.spi.LoadEvent.setPostLoadEvent(org.hibernate.event.spi.PostLoadEvent)"], ["org.hibernate.event.spi.PreDeleteEvent", "org.hibernate.event.spi.PreDeleteEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.lang.Object[]", "org.hibernate.event.spi.PreDeleteEvent.getDeletedState()"], ["org.hibernate.event.spi.PreCollectionUpdateEvent", "org.hibernate.event.spi.PreCollectionUpdateEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.PreInsertEvent", "org.hibernate.event.spi.PreInsertEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.lang.Object[]", "org.hibernate.event.spi.PreInsertEvent.getState()"], ["org.hibernate.event.spi.RefreshEvent", "org.hibernate.event.spi.RefreshEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.RefreshEvent", "org.hibernate.event.spi.RefreshEvent(java.lang.String, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.RefreshEvent", "org.hibernate.event.spi.RefreshEvent(java.lang.Object, org.hibernate.LockMode, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.RefreshEvent", "org.hibernate.event.spi.RefreshEvent(java.lang.Object, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.RefreshEvent", "org.hibernate.event.spi.RefreshEvent(java.lang.String, java.lang.Object, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.RefreshEvent.getObject()"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.RefreshEvent.getLockOptions()"], ["org.hibernate.LockMode", "org.hibernate.event.spi.RefreshEvent.getLockMode()"], ["java.lang.String", "org.hibernate.event.spi.RefreshEvent.getEntityName()"], ["void", "org.hibernate.event.spi.RefreshEvent.setEntityName(java.lang.String)"], ["int", "org.hibernate.event.spi.RefreshEvent.getLockTimeout()"], ["boolean", "org.hibernate.event.spi.RefreshEvent.getLockScope()"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LoadEvent$1.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LoadEvent$1.setAliasSpecificLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LoadEvent$1.setTimeOut(int)"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LoadEvent$1.setScope(boolean)"], ["org.hibernate.event.spi.PostDeleteEvent", "org.hibernate.event.spi.PostDeleteEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.io.Serializable", "org.hibernate.event.spi.PostDeleteEvent.getId()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.PostDeleteEvent.getPersister()"], ["java.lang.Object", "org.hibernate.event.spi.PostDeleteEvent.getEntity()"], ["java.lang.Object[]", "org.hibernate.event.spi.PostDeleteEvent.getDeletedState()"], ["org.hibernate.event.spi.SaveOrUpdateEvent", "org.hibernate.event.spi.SaveOrUpdateEvent(java.lang.String, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.SaveOrUpdateEvent", "org.hibernate.event.spi.SaveOrUpdateEvent(java.lang.String, java.lang.Object, java.io.Serializable, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.SaveOrUpdateEvent", "org.hibernate.event.spi.SaveOrUpdateEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.SaveOrUpdateEvent.getObject()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setObject(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.event.spi.SaveOrUpdateEvent.getRequestedId()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setRequestedId(java.io.Serializable)"], ["java.lang.String", "org.hibernate.event.spi.SaveOrUpdateEvent.getEntityName()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setEntityName(java.lang.String)"], ["java.lang.Object", "org.hibernate.event.spi.SaveOrUpdateEvent.getEntity()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setEntity(java.lang.Object)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.event.spi.SaveOrUpdateEvent.getEntry()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setEntry(org.hibernate.engine.spi.EntityEntry)"], ["java.io.Serializable", "org.hibernate.event.spi.SaveOrUpdateEvent.getResultId()"], ["void", "org.hibernate.event.spi.SaveOrUpdateEvent.setResultId(java.io.Serializable)"], ["org.hibernate.event.spi.FlushEntityEvent", "org.hibernate.event.spi.FlushEntityEvent(org.hibernate.event.spi.EventSource, java.lang.Object, org.hibernate.engine.spi.EntityEntry)"], ["org.hibernate.engine.spi.EntityEntry", "org.hibernate.event.spi.FlushEntityEvent.getEntityEntry()"], ["java.lang.Object[]", "org.hibernate.event.spi.FlushEntityEvent.getDatabaseSnapshot()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setDatabaseSnapshot(java.lang.Object[])"], ["boolean", "org.hibernate.event.spi.FlushEntityEvent.hasDatabaseSnapshot()"], ["boolean", "org.hibernate.event.spi.FlushEntityEvent.isDirtyCheckHandledByInterceptor()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setDirtyCheckHandledByInterceptor(boolean)"], ["boolean", "org.hibernate.event.spi.FlushEntityEvent.isDirtyCheckPossible()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setDirtyCheckPossible(boolean)"], ["int[]", "org.hibernate.event.spi.FlushEntityEvent.getDirtyProperties()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setDirtyProperties(int[])"], ["boolean", "org.hibernate.event.spi.FlushEntityEvent.hasDirtyCollection()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setHasDirtyCollection(boolean)"], ["java.lang.Object[]", "org.hibernate.event.spi.FlushEntityEvent.getPropertyValues()"], ["void", "org.hibernate.event.spi.FlushEntityEvent.setPropertyValues(java.lang.Object[])"], ["java.lang.Object", "org.hibernate.event.spi.FlushEntityEvent.getEntity()"], ["org.hibernate.event.spi.DeleteEvent", "org.hibernate.event.spi.DeleteEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.DeleteEvent", "org.hibernate.event.spi.DeleteEvent(java.lang.String, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.DeleteEvent", "org.hibernate.event.spi.DeleteEvent(java.lang.String, java.lang.Object, boolean, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.DeleteEvent", "org.hibernate.event.spi.DeleteEvent(java.lang.String, java.lang.Object, boolean, boolean, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.DeleteEvent.getObject()"], ["java.lang.String", "org.hibernate.event.spi.DeleteEvent.getEntityName()"], ["boolean", "org.hibernate.event.spi.DeleteEvent.isCascadeDeleteEnabled()"], ["boolean", "org.hibernate.event.spi.DeleteEvent.isOrphanRemovalBeforeUpdates()"], ["org.hibernate.event.spi.PostCollectionUpdateEvent", "org.hibernate.event.spi.PostCollectionUpdateEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.ReplicateEvent", "org.hibernate.event.spi.ReplicateEvent(java.lang.Object, org.hibernate.ReplicationMode, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.ReplicateEvent", "org.hibernate.event.spi.ReplicateEvent(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.ReplicateEvent.getObject()"], ["void", "org.hibernate.event.spi.ReplicateEvent.setObject(java.lang.Object)"], ["org.hibernate.ReplicationMode", "org.hibernate.event.spi.ReplicateEvent.getReplicationMode()"], ["void", "org.hibernate.event.spi.ReplicateEvent.setReplicationMode(org.hibernate.ReplicationMode)"], ["java.lang.String", "org.hibernate.event.spi.ReplicateEvent.getEntityName()"], ["void", "org.hibernate.event.spi.ReplicateEvent.setEntityName(java.lang.String)"], ["org.hibernate.event.spi.ResolveNaturalIdEvent", "org.hibernate.event.spi.ResolveNaturalIdEvent(java.util.Map<java.lang.String, java.lang.Object>, org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.ResolveNaturalIdEvent", "org.hibernate.event.spi.ResolveNaturalIdEvent(java.util.Map<java.lang.String, java.lang.Object>, org.hibernate.persister.entity.EntityPersister, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.event.spi.ResolveNaturalIdEvent.getNaturalIdValues()"], ["java.lang.Object[]", "org.hibernate.event.spi.ResolveNaturalIdEvent.getOrderedNaturalIdValues()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.ResolveNaturalIdEvent.getEntityPersister()"], ["java.lang.String", "org.hibernate.event.spi.ResolveNaturalIdEvent.getEntityName()"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.ResolveNaturalIdEvent.getLockOptions()"], ["java.io.Serializable", "org.hibernate.event.spi.ResolveNaturalIdEvent.getEntityId()"], ["void", "org.hibernate.event.spi.ResolveNaturalIdEvent.setEntityId(java.io.Serializable)"], ["org.hibernate.event.spi.AbstractPreDatabaseOperationEvent", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent(org.hibernate.event.spi.EventSource, java.lang.Object, java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getEntity()"], ["java.io.Serializable", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getId()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getPersister()"], ["org.hibernate.event.spi.EventSource", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getSource()"], ["java.lang.String", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getEntityName()"], ["java.io.Serializable", "org.hibernate.event.spi.AbstractPreDatabaseOperationEvent.getIdentifier()"], ["org.hibernate.event.spi.EventType", "org.hibernate.event.spi.EventType.resolveEventTypeByName(java.lang.String)"], ["java.lang.String", "org.hibernate.event.spi.EventType.eventName()"], ["java.lang.Class", "org.hibernate.event.spi.EventType.baseListenerInterface()"], ["java.lang.String", "org.hibernate.event.spi.EventType.toString()"], ["int", "org.hibernate.event.spi.EventType.ordinal()"], ["org.hibernate.event.spi.PreCollectionRecreateEvent", "org.hibernate.event.spi.PreCollectionRecreateEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.PersistEvent", "org.hibernate.event.spi.PersistEvent(java.lang.String, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.PersistEvent", "org.hibernate.event.spi.PersistEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.PersistEvent.getObject()"], ["void", "org.hibernate.event.spi.PersistEvent.setObject(java.lang.Object)"], ["java.lang.String", "org.hibernate.event.spi.PersistEvent.getEntityName()"], ["void", "org.hibernate.event.spi.PersistEvent.setEntityName(java.lang.String)"], ["org.hibernate.event.spi.EvictEvent", "org.hibernate.event.spi.EvictEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.EvictEvent.getObject()"], ["void", "org.hibernate.event.spi.EvictEvent.setObject(java.lang.Object)"], ["org.hibernate.event.spi.PostInsertEvent", "org.hibernate.event.spi.PostInsertEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.PostInsertEvent.getEntity()"], ["java.io.Serializable", "org.hibernate.event.spi.PostInsertEvent.getId()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.PostInsertEvent.getPersister()"], ["java.lang.Object[]", "org.hibernate.event.spi.PostInsertEvent.getState()"], ["org.hibernate.event.spi.PostCollectionRecreateEvent", "org.hibernate.event.spi.PostCollectionRecreateEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource)"], ["java.util.Map<java.lang.String, org.hibernate.event.spi.EventType>", "org.hibernate.event.spi.EventType$1.run()"], ["java.lang.Object", "org.hibernate.event.spi.EventType$1.run()"], ["org.hibernate.event.spi.AutoFlushEvent", "org.hibernate.event.spi.AutoFlushEvent(java.util.Set, org.hibernate.event.spi.EventSource)"], ["java.util.Set", "org.hibernate.event.spi.AutoFlushEvent.getQuerySpaces()"], ["void", "org.hibernate.event.spi.AutoFlushEvent.setQuerySpaces(java.util.Set)"], ["boolean", "org.hibernate.event.spi.AutoFlushEvent.isFlushRequired()"], ["void", "org.hibernate.event.spi.AutoFlushEvent.setFlushRequired(boolean)"], ["org.hibernate.event.spi.InitializeCollectionEvent", "org.hibernate.event.spi.InitializeCollectionEvent(org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.AbstractEvent", "org.hibernate.event.spi.AbstractEvent(org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.EventSource", "org.hibernate.event.spi.AbstractEvent.getSession()"], ["org.hibernate.event.spi.DirtyCheckEvent", "org.hibernate.event.spi.DirtyCheckEvent(org.hibernate.event.spi.EventSource)"], ["boolean", "org.hibernate.event.spi.DirtyCheckEvent.isDirty()"], ["void", "org.hibernate.event.spi.DirtyCheckEvent.setDirty(boolean)"], ["org.hibernate.event.spi.MergeEvent", "org.hibernate.event.spi.MergeEvent(java.lang.String, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.MergeEvent", "org.hibernate.event.spi.MergeEvent(java.lang.String, java.lang.Object, java.io.Serializable, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.MergeEvent", "org.hibernate.event.spi.MergeEvent(java.lang.Object, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.MergeEvent.getOriginal()"], ["void", "org.hibernate.event.spi.MergeEvent.setOriginal(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.event.spi.MergeEvent.getRequestedId()"], ["void", "org.hibernate.event.spi.MergeEvent.setRequestedId(java.io.Serializable)"], ["java.lang.String", "org.hibernate.event.spi.MergeEvent.getEntityName()"], ["void", "org.hibernate.event.spi.MergeEvent.setEntityName(java.lang.String)"], ["java.lang.Object", "org.hibernate.event.spi.MergeEvent.getEntity()"], ["void", "org.hibernate.event.spi.MergeEvent.setEntity(java.lang.Object)"], ["java.lang.Object", "org.hibernate.event.spi.MergeEvent.getResult()"], ["void", "org.hibernate.event.spi.MergeEvent.setResult(java.lang.Object)"], ["org.hibernate.event.spi.FlushEvent", "org.hibernate.event.spi.FlushEvent(org.hibernate.event.spi.EventSource)"], ["int", "org.hibernate.event.spi.FlushEvent.getNumberOfEntitiesProcessed()"], ["void", "org.hibernate.event.spi.FlushEvent.setNumberOfEntitiesProcessed(int)"], ["int", "org.hibernate.event.spi.FlushEvent.getNumberOfCollectionsProcessed()"], ["void", "org.hibernate.event.spi.FlushEvent.setNumberOfCollectionsProcessed(int)"], ["org.hibernate.event.spi.LockEvent", "org.hibernate.event.spi.LockEvent(java.lang.String, java.lang.Object, org.hibernate.LockMode, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LockEvent", "org.hibernate.event.spi.LockEvent(java.lang.String, java.lang.Object, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LockEvent", "org.hibernate.event.spi.LockEvent(java.lang.Object, org.hibernate.LockMode, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.LockEvent", "org.hibernate.event.spi.LockEvent(java.lang.Object, org.hibernate.LockOptions, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.LockEvent.getObject()"], ["void", "org.hibernate.event.spi.LockEvent.setObject(java.lang.Object)"], ["org.hibernate.LockOptions", "org.hibernate.event.spi.LockEvent.getLockOptions()"], ["org.hibernate.LockMode", "org.hibernate.event.spi.LockEvent.getLockMode()"], ["void", "org.hibernate.event.spi.LockEvent.setLockMode(org.hibernate.LockMode)"], ["void", "org.hibernate.event.spi.LockEvent.setLockTimeout(int)"], ["int", "org.hibernate.event.spi.LockEvent.getLockTimeout()"], ["void", "org.hibernate.event.spi.LockEvent.setLockScope(boolean)"], ["boolean", "org.hibernate.event.spi.LockEvent.getLockScope()"], ["java.lang.String", "org.hibernate.event.spi.LockEvent.getEntityName()"], ["void", "org.hibernate.event.spi.LockEvent.setEntityName(java.lang.String)"], ["org.hibernate.event.spi.PostLoadEvent", "org.hibernate.event.spi.PostLoadEvent(org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.PostLoadEvent.getEntity()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.PostLoadEvent.getPersister()"], ["java.io.Serializable", "org.hibernate.event.spi.PostLoadEvent.getId()"], ["org.hibernate.event.spi.PostLoadEvent", "org.hibernate.event.spi.PostLoadEvent.setEntity(java.lang.Object)"], ["org.hibernate.event.spi.PostLoadEvent", "org.hibernate.event.spi.PostLoadEvent.setId(java.io.Serializable)"], ["org.hibernate.event.spi.PostLoadEvent", "org.hibernate.event.spi.PostLoadEvent.setPersister(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.spi.AbstractCollectionEvent", "org.hibernate.event.spi.AbstractCollectionEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource, java.lang.Object, java.io.Serializable)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.event.spi.AbstractCollectionEvent.getCollection()"], ["java.lang.Object", "org.hibernate.event.spi.AbstractCollectionEvent.getAffectedOwnerOrNull()"], ["java.io.Serializable", "org.hibernate.event.spi.AbstractCollectionEvent.getAffectedOwnerIdOrNull()"], ["java.lang.String", "org.hibernate.event.spi.AbstractCollectionEvent.getAffectedOwnerEntityName()"], ["default", "org.hibernate.event.spi.PostActionEventListener.boolean requiresPostCommitHandling(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.spi.PreUpdateEvent", "org.hibernate.event.spi.PreUpdateEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.lang.Object[]", "org.hibernate.event.spi.PreUpdateEvent.getState()"], ["java.lang.Object[]", "org.hibernate.event.spi.PreUpdateEvent.getOldState()"], ["org.hibernate.event.spi.PreCollectionRemoveEvent", "org.hibernate.event.spi.PreCollectionRemoveEvent(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, org.hibernate.event.spi.EventSource, java.lang.Object)"], ["org.hibernate.event.spi.ClearEvent", "org.hibernate.event.spi.ClearEvent(org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.spi.PostUpdateEvent", "org.hibernate.event.spi.PostUpdateEvent(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], int[], org.hibernate.persister.entity.EntityPersister, org.hibernate.event.spi.EventSource)"], ["java.lang.Object", "org.hibernate.event.spi.PostUpdateEvent.getEntity()"], ["java.io.Serializable", "org.hibernate.event.spi.PostUpdateEvent.getId()"], ["java.lang.Object[]", "org.hibernate.event.spi.PostUpdateEvent.getOldState()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.spi.PostUpdateEvent.getPersister()"], ["java.lang.Object[]", "org.hibernate.event.spi.PostUpdateEvent.getState()"], ["int[]", "org.hibernate.event.spi.PostUpdateEvent.getDirtyProperties()"], ["org.hibernate.event.service.spi.EventListenerRegistrationException", "org.hibernate.event.service.spi.EventListenerRegistrationException(java.lang.String)"], ["org.hibernate.event.service.spi.EventListenerRegistrationException", "org.hibernate.event.service.spi.EventListenerRegistrationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.event.service.spi.DuplicationStrategy$Action[]", "org.hibernate.event.service.spi.DuplicationStrategy$Action.values()"], ["org.hibernate.event.service.spi.DuplicationStrategy$Action", "org.hibernate.event.service.spi.DuplicationStrategy$Action.valueOf(java.lang.String)"], ["org.hibernate.event.service.internal.EventListenerServiceInitiator", "org.hibernate.event.service.internal.EventListenerServiceInitiator()"], ["org.hibernate.event.service.spi.EventListenerRegistry", "org.hibernate.event.service.internal.EventListenerServiceInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.event.service.spi.EventListenerRegistry", "org.hibernate.event.service.internal.EventListenerServiceInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["org.hibernate.service.Service", "org.hibernate.event.service.internal.EventListenerServiceInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.event.service.internal.EventListenerServiceInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.prepare(org.hibernate.boot.spi.MetadataImplementor)"], ["<T> org.hibernate.event.service.internal.EventListenerGroupImpl<T>", "org.hibernate.event.service.internal.EventListenerRegistryImpl.getEventListenerGroup(org.hibernate.event.spi.EventType<T>)"], ["void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.addDuplicationStrategy(org.hibernate.event.service.spi.DuplicationStrategy)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.setListeners(org.hibernate.event.spi.EventType<T>, java.lang.Class<? extends T>...)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.setListeners(org.hibernate.event.spi.EventType<T>, T...)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.appendListeners(org.hibernate.event.spi.EventType<T>, java.lang.Class<? extends T>...)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.appendListeners(org.hibernate.event.spi.EventType<T>, T...)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.prependListeners(org.hibernate.event.spi.EventType<T>, java.lang.Class<? extends T>...)"], ["<T> void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.prependListeners(org.hibernate.event.spi.EventType<T>, T...)"], ["void", "org.hibernate.event.service.internal.EventListenerRegistryImpl.stop()"], ["org.hibernate.event.service.spi.EventListenerGroup", "org.hibernate.event.service.internal.EventListenerRegistryImpl.getEventListenerGroup(org.hibernate.event.spi.EventType)"], ["org.hibernate.event.service.internal.PostCommitEventListenerGroupImpl", "org.hibernate.event.service.internal.PostCommitEventListenerGroupImpl(org.hibernate.event.spi.EventType<T>, org.hibernate.event.service.internal.EventListenerRegistryImpl)"], ["void", "org.hibernate.event.service.internal.PostCommitEventListenerGroupImpl.appendListener(T)"], ["void", "org.hibernate.event.service.internal.PostCommitEventListenerGroupImpl.prependListener(T)"], ["boolean", "org.hibernate.event.service.internal.EventListenerGroupImpl$1.areMatch(java.lang.Object, java.lang.Object)"], ["org.hibernate.event.service.spi.DuplicationStrategy$Action", "org.hibernate.event.service.internal.EventListenerGroupImpl$1.getAction()"], ["org.hibernate.event.service.internal.EventListenerGroupImpl", "org.hibernate.event.service.internal.EventListenerGroupImpl(org.hibernate.event.spi.EventType<T>, org.hibernate.event.service.internal.EventListenerRegistryImpl)"], ["boolean", "org.hibernate.event.service.internal.EventListenerGroupImpl.isEmpty()"], ["int", "org.hibernate.event.service.internal.EventListenerGroupImpl.count()"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.clear()"], ["<U> void", "org.hibernate.event.service.internal.EventListenerGroupImpl.fireLazyEventOnEachListener(java.util.function.Supplier<U>, java.util.function.BiConsumer<T, U>)"], ["<U> void", "org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(U, java.util.function.BiConsumer<T, U>)"], ["<U, X> void", "org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(U, X, org.hibernate.event.service.spi.EventActionWithParameter<T, U, X>)"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.addDuplicationStrategy(org.hibernate.event.service.spi.DuplicationStrategy)"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.appendListeners(T...)"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.appendListener(T)"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.prependListeners(T...)"], ["void", "org.hibernate.event.service.internal.EventListenerGroupImpl.prependListener(T)"], ["org.hibernate.event.internal.DefaultEvictEventListener", "org.hibernate.event.internal.DefaultEvictEventListener()"], ["void", "org.hibernate.event.internal.DefaultEvictEventListener.onEvict(org.hibernate.event.spi.EvictEvent)"], ["org.hibernate.event.internal.PostUpdateEventListenerStandardImpl", "org.hibernate.event.internal.PostUpdateEventListenerStandardImpl()"], ["void", "org.hibernate.event.internal.PostUpdateEventListenerStandardImpl.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.PostUpdateEventListenerStandardImpl.onPostUpdate(org.hibernate.event.spi.PostUpdateEvent)"], ["boolean", "org.hibernate.event.internal.PostUpdateEventListenerStandardImpl.requiresPostCommitHanding(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.internal.DefaultFlushEventListener", "org.hibernate.event.internal.DefaultFlushEventListener()"], ["void", "org.hibernate.event.internal.DefaultFlushEventListener.onFlush(org.hibernate.event.spi.FlushEvent)"], ["org.hibernate.event.internal.OnLockVisitor", "org.hibernate.event.internal.OnLockVisitor(org.hibernate.event.spi.EventSource, java.io.Serializable, java.lang.Object)"], ["java.lang.Object", "org.hibernate.event.internal.OnLockVisitor.processCollection(java.lang.Object, org.hibernate.type.CollectionType)"], ["org.hibernate.event.internal.DefaultResolveNaturalIdEventListener", "org.hibernate.event.internal.DefaultResolveNaturalIdEventListener()"], ["void", "org.hibernate.event.internal.DefaultResolveNaturalIdEventListener.onResolveNaturalId(org.hibernate.event.spi.ResolveNaturalIdEvent)"], ["void", "org.hibernate.event.internal.EntityCopyAllowedLoggedObserver.entityCopyDetected(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["void", "org.hibernate.event.internal.EntityCopyAllowedLoggedObserver.clear()"], ["void", "org.hibernate.event.internal.EntityCopyAllowedLoggedObserver.topLevelMergeComplete(org.hibernate.event.spi.EventSource)"], ["void", "org.hibernate.event.internal.DefaultFlushEntityEventListener$1DirtyCheckContextImpl.doDirtyChecking(org.hibernate.CustomEntityDirtinessStrategy$AttributeChecker)"], ["org.hibernate.event.internal.PostDeleteEventListenerStandardImpl", "org.hibernate.event.internal.PostDeleteEventListenerStandardImpl()"], ["void", "org.hibernate.event.internal.PostDeleteEventListenerStandardImpl.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.PostDeleteEventListenerStandardImpl.onPostDelete(org.hibernate.event.spi.PostDeleteEvent)"], ["boolean", "org.hibernate.event.internal.PostDeleteEventListenerStandardImpl.requiresPostCommitHanding(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.internal.AbstractLockUpgradeEventListener", "org.hibernate.event.internal.AbstractLockUpgradeEventListener()"], ["org.hibernate.event.internal.AbstractSaveEventListener", "org.hibernate.event.internal.AbstractSaveEventListener()"], ["void", "org.hibernate.event.internal.AbstractSaveEventListener.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["org.hibernate.event.internal.DefaultPersistEventListener", "org.hibernate.event.internal.DefaultPersistEventListener()"], ["void", "org.hibernate.event.internal.DefaultPersistEventListener.onPersist(org.hibernate.event.spi.PersistEvent)"], ["void", "org.hibernate.event.internal.DefaultPersistEventListener.onPersist(org.hibernate.event.spi.PersistEvent, java.util.Map)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getContainingPersister()"], ["int", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getAttributeIndex()"], ["java.lang.String", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getName()"], ["org.hibernate.type.Type", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getType()"], ["java.lang.Object", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getCurrentValue()"], ["java.lang.Object", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.getLoadedValue()"], ["int[]", "org.hibernate.event.internal.DefaultFlushEntityEventListener$DirtyCheckAttributeInfoImpl.visitAttributes(org.hibernate.CustomEntityDirtinessStrategy$AttributeChecker)"], ["void", "org.hibernate.event.internal.EntityCopyNotAllowedObserver.entityCopyDetected(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["void", "org.hibernate.event.internal.EntityCopyNotAllowedObserver.clear()"], ["void", "org.hibernate.event.internal.EntityCopyNotAllowedObserver.topLevelMergeComplete(org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.internal.DefaultFlushEntityEventListener", "org.hibernate.event.internal.DefaultFlushEntityEventListener()"], ["void", "org.hibernate.event.internal.DefaultFlushEntityEventListener.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(java.lang.Object, org.hibernate.persister.entity.EntityPersister, java.io.Serializable, org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(org.hibernate.event.spi.FlushEntityEvent)"], ["org.hibernate.event.internal.DefaultLoadEventListener", "org.hibernate.event.internal.DefaultLoadEventListener()"], ["void", "org.hibernate.event.internal.DefaultLoadEventListener.onLoad(org.hibernate.event.spi.LoadEvent, org.hibernate.event.spi.LoadEventListener$LoadType)"], ["java.lang.Object", "org.hibernate.event.internal.OnReplicateVisitor.processCollection(java.lang.Object, org.hibernate.type.CollectionType)"], ["org.hibernate.event.internal.DefaultDeleteEventListener", "org.hibernate.event.internal.DefaultDeleteEventListener()"], ["void", "org.hibernate.event.internal.DefaultDeleteEventListener.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.DefaultDeleteEventListener.wasJpaBootstrap(boolean)"], ["void", "org.hibernate.event.internal.DefaultDeleteEventListener.onDelete(org.hibernate.event.spi.DeleteEvent)"], ["void", "org.hibernate.event.internal.DefaultDeleteEventListener.onDelete(org.hibernate.event.spi.DeleteEvent, java.util.Set)"], ["org.hibernate.event.internal.DefaultDirtyCheckEventListener", "org.hibernate.event.internal.DefaultDirtyCheckEventListener()"], ["void", "org.hibernate.event.internal.DefaultDirtyCheckEventListener.onDirtyCheck(org.hibernate.event.spi.DirtyCheckEvent)"], ["org.hibernate.event.internal.DefaultRefreshEventListener", "org.hibernate.event.internal.DefaultRefreshEventListener()"], ["void", "org.hibernate.event.internal.DefaultRefreshEventListener.onRefresh(org.hibernate.event.spi.RefreshEvent)"], ["void", "org.hibernate.event.internal.DefaultRefreshEventListener.onRefresh(org.hibernate.event.spi.RefreshEvent, java.util.Map)"], ["org.hibernate.event.internal.AbstractReassociateEventListener", "org.hibernate.event.internal.AbstractReassociateEventListener()"], ["org.hibernate.event.internal.AbstractSaveEventListener$EntityState[]", "org.hibernate.event.internal.AbstractSaveEventListener$EntityState.values()"], ["org.hibernate.event.internal.AbstractSaveEventListener$EntityState", "org.hibernate.event.internal.AbstractSaveEventListener$EntityState.valueOf(java.lang.String)"], ["void", "org.hibernate.event.internal.MergeContext.clear()"], ["boolean", "org.hibernate.event.internal.MergeContext.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.event.internal.MergeContext.containsValue(java.lang.Object)"], ["java.util.Set", "org.hibernate.event.internal.MergeContext.entrySet()"], ["java.lang.Object", "org.hibernate.event.internal.MergeContext.get(java.lang.Object)"], ["boolean", "org.hibernate.event.internal.MergeContext.isEmpty()"], ["java.util.Set", "org.hibernate.event.internal.MergeContext.keySet()"], ["java.lang.Object", "org.hibernate.event.internal.MergeContext.put(java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.event.internal.MergeContext.putAll(java.util.Map)"], ["java.lang.Object", "org.hibernate.event.internal.MergeContext.remove(java.lang.Object)"], ["int", "org.hibernate.event.internal.MergeContext.size()"], ["java.util.Collection", "org.hibernate.event.internal.MergeContext.values()"], ["boolean", "org.hibernate.event.internal.MergeContext.isOperatedOn(java.lang.Object)"], ["java.util.Map", "org.hibernate.event.internal.MergeContext.invertMap()"], ["org.hibernate.event.internal.AbstractFlushingEventListener", "org.hibernate.event.internal.AbstractFlushingEventListener()"], ["void", "org.hibernate.event.internal.AbstractFlushingEventListener.wasJpaBootstrap(boolean)"], ["org.hibernate.event.internal.DefaultAutoFlushEventListener", "org.hibernate.event.internal.DefaultAutoFlushEventListener()"], ["void", "org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(org.hibernate.event.spi.AutoFlushEvent)"], ["void", "org.hibernate.event.internal.EvictVisitor.evictCollection(java.lang.Object, org.hibernate.type.CollectionType)"], ["org.hibernate.event.internal.ProxyVisitor", "org.hibernate.event.internal.ProxyVisitor(org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.internal.DefaultInitializeCollectionEventListener", "org.hibernate.event.internal.DefaultInitializeCollectionEventListener()"], ["void", "org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(org.hibernate.event.spi.InitializeCollectionEvent)"], ["void", "org.hibernate.event.internal.EntityCopyAllowedObserver.entityCopyDetected(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.event.spi.EventSource)"], ["void", "org.hibernate.event.internal.EntityCopyAllowedObserver.clear()"], ["void", "org.hibernate.event.internal.EntityCopyAllowedObserver.topLevelMergeComplete(org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.internal.DefaultPostLoadEventListener", "org.hibernate.event.internal.DefaultPostLoadEventListener()"], ["void", "org.hibernate.event.internal.DefaultPostLoadEventListener.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.DefaultPostLoadEventListener.onPostLoad(org.hibernate.event.spi.PostLoadEvent)"], ["org.hibernate.event.internal.DefaultSaveEventListener", "org.hibernate.event.internal.DefaultSaveEventListener()"], ["org.hibernate.event.internal.DefaultMergeEventListener", "org.hibernate.event.internal.DefaultMergeEventListener()"], ["void", "org.hibernate.event.internal.DefaultMergeEventListener.onMerge(org.hibernate.event.spi.MergeEvent)"], ["void", "org.hibernate.event.internal.DefaultMergeEventListener.onMerge(org.hibernate.event.spi.MergeEvent, java.util.Map)"], ["org.hibernate.event.internal.DefaultPreLoadEventListener", "org.hibernate.event.internal.DefaultPreLoadEventListener()"], ["void", "org.hibernate.event.internal.DefaultPreLoadEventListener.onPreLoad(org.hibernate.event.spi.PreLoadEvent)"], ["void", "org.hibernate.event.internal.AbstractVisitor.processEntityPropertyValues(java.lang.Object[], org.hibernate.type.Type[])"], ["org.hibernate.event.internal.DefaultLockEventListener", "org.hibernate.event.internal.DefaultLockEventListener()"], ["void", "org.hibernate.event.internal.DefaultLockEventListener.onLock(org.hibernate.event.spi.LockEvent)"], ["org.hibernate.event.internal.EntityCopyObserverFactoryInitiator$EntityObserversFactoryFromClass", "org.hibernate.event.internal.EntityCopyObserverFactoryInitiator$EntityObserversFactoryFromClass(java.lang.Class)"], ["org.hibernate.event.spi.EntityCopyObserver", "org.hibernate.event.internal.EntityCopyObserverFactoryInitiator$EntityObserversFactoryFromClass.createEntityCopyObserver()"], ["org.hibernate.event.internal.PostInsertEventListenerStandardImpl", "org.hibernate.event.internal.PostInsertEventListenerStandardImpl()"], ["void", "org.hibernate.event.internal.PostInsertEventListenerStandardImpl.injectCallbackRegistry(org.hibernate.jpa.event.spi.CallbackRegistry)"], ["void", "org.hibernate.event.internal.PostInsertEventListenerStandardImpl.onPostInsert(org.hibernate.event.spi.PostInsertEvent)"], ["boolean", "org.hibernate.event.internal.PostInsertEventListenerStandardImpl.requiresPostCommitHanding(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.event.internal.ReattachVisitor", "org.hibernate.event.internal.ReattachVisitor(org.hibernate.event.spi.EventSource, java.io.Serializable, java.lang.Object)"], ["org.hibernate.event.internal.WrapVisitor", "org.hibernate.event.internal.WrapVisitor(java.lang.Object, java.io.Serializable, org.hibernate.event.spi.EventSource)"], ["org.hibernate.event.internal.DefaultPersistOnFlushEventListener", "org.hibernate.event.internal.DefaultPersistOnFlushEventListener()"], ["org.hibernate.event.internal.EntityCopyObserverFactoryInitiator", "org.hibernate.event.internal.EntityCopyObserverFactoryInitiator()"], ["org.hibernate.event.spi.EntityCopyObserverFactory", "org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.event.internal.DefaultUpdateEventListener", "org.hibernate.event.internal.DefaultUpdateEventListener()"], ["org.hibernate.event.internal.DefaultSaveOrUpdateEventListener", "org.hibernate.event.internal.DefaultSaveOrUpdateEventListener()"], ["void", "org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(org.hibernate.event.spi.SaveOrUpdateEvent)"], ["org.hibernate.event.internal.DefaultReplicateEventListener", "org.hibernate.event.internal.DefaultReplicateEventListener()"], ["void", "org.hibernate.event.internal.DefaultReplicateEventListener.onReplicate(org.hibernate.event.spi.ReplicateEvent)"], ["org.hibernate.NullPrecedence[]", "org.hibernate.NullPrecedence.values()"], ["org.hibernate.NullPrecedence", "org.hibernate.NullPrecedence.valueOf(java.lang.String)"], ["org.hibernate.NullPrecedence", "org.hibernate.NullPrecedence.parse(java.lang.String)"], ["org.hibernate.NullPrecedence", "org.hibernate.NullPrecedence.parse(java.lang.String, org.hibernate.NullPrecedence)"], ["org.hibernate.bytecode.spi.InstrumentedClassLoader", "org.hibernate.bytecode.spi.InstrumentedClassLoader(java.lang.ClassLoader, org.hibernate.bytecode.spi.ClassTransformer)"], ["java.lang.Class", "org.hibernate.bytecode.spi.InstrumentedClassLoader.loadClass(java.lang.String)"], ["org.hibernate.bytecode.spi.NotInstrumentedException", "org.hibernate.bytecode.spi.NotInstrumentedException(java.lang.String)"], ["org.hibernate.bytecode.spi.ClassLoadingStrategyHelper", "org.hibernate.bytecode.spi.ClassLoadingStrategyHelper()"], ["byte[]", "org.hibernate.bytecode.spi.ByteCodeHelper.readByteCode(java.io.InputStream)"], ["byte[]", "org.hibernate.bytecode.spi.ByteCodeHelper.readByteCode(java.io.File)"], ["byte[]", "org.hibernate.bytecode.spi.ByteCodeHelper.readByteCode(java.util.zip.ZipInputStream)"], ["default", "org.hibernate.bytecode.spi.BytecodeProvider.void resetCaches()"], ["void", "org.hibernate.bytecode.internal.none.DisallowedProxyFactory.postInstantiate(java.lang.String, java.lang.Class, java.util.Set<java.lang.Class>, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.bytecode.internal.none.DisallowedProxyFactory.getProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.proxy.ProxyFactory", "org.hibernate.bytecode.internal.none.NoProxyFactoryFactory.buildProxyFactory(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.bytecode.spi.BasicProxyFactory", "org.hibernate.bytecode.internal.none.NoProxyFactoryFactory.buildBasicProxyFactory(java.lang.Class, java.lang.Class[])"], ["org.hibernate.bytecode.internal.none.NoneBasicProxyFactory", "org.hibernate.bytecode.internal.none.NoneBasicProxyFactory(java.lang.Class, java.lang.Class[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.none.NoneBasicProxyFactory.getProxy()"], ["org.hibernate.bytecode.internal.none.BytecodeProviderImpl", "org.hibernate.bytecode.internal.none.BytecodeProviderImpl()"], ["org.hibernate.bytecode.spi.ProxyFactoryFactory", "org.hibernate.bytecode.internal.none.BytecodeProviderImpl.getProxyFactoryFactory()"], ["org.hibernate.bytecode.spi.ReflectionOptimizer", "org.hibernate.bytecode.internal.none.BytecodeProviderImpl.getReflectionOptimizer(java.lang.Class, java.lang.String[], java.lang.String[], java.lang.Class[])"], ["org.hibernate.bytecode.enhance.spi.Enhancer", "org.hibernate.bytecode.internal.none.BytecodeProviderImpl.getEnhancer(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["boolean", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$1.isHandled(java.lang.reflect.Method)"], ["org.hibernate.bytecode.internal.javassist.AccessOptimizerAdapter", "org.hibernate.bytecode.internal.javassist.AccessOptimizerAdapter(org.hibernate.bytecode.internal.javassist.BulkAccessor, java.lang.Class)"], ["java.lang.String[]", "org.hibernate.bytecode.internal.javassist.AccessOptimizerAdapter.getPropertyNames()"], ["java.lang.Object[]", "org.hibernate.bytecode.internal.javassist.AccessOptimizerAdapter.getPropertyValues(java.lang.Object)"], ["void", "org.hibernate.bytecode.internal.javassist.AccessOptimizerAdapter.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl()"], ["org.hibernate.proxy.ProxyFactory", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl.buildProxyFactory(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.bytecode.spi.BasicProxyFactory", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl.buildBasicProxyFactory(java.lang.Class, java.lang.Class[])"], ["org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$BasicProxyFactoryImpl", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$BasicProxyFactoryImpl(java.lang.Class, java.lang.Class[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$BasicProxyFactoryImpl.getProxy()"], ["boolean", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$BasicProxyFactoryImpl.isInstance(java.lang.Object)"], ["org.hibernate.bytecode.internal.javassist.ReflectionOptimizerImpl", "org.hibernate.bytecode.internal.javassist.ReflectionOptimizerImpl(org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer, org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer)"], ["org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer", "org.hibernate.bytecode.internal.javassist.ReflectionOptimizerImpl.getInstantiationOptimizer()"], ["org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer", "org.hibernate.bytecode.internal.javassist.ReflectionOptimizerImpl.getAccessOptimizer()"], ["org.hibernate.bytecode.internal.javassist.FastClass", "org.hibernate.bytecode.internal.javassist.FastClass.create(java.lang.Class)"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.FastClass.invoke(java.lang.String, java.lang.Class[], java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.FastClass.invoke(int, java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.FastClass.newInstance()"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.FastClass.newInstance(java.lang.Class[], java.lang.Object[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.FastClass.newInstance(int, java.lang.Object[])"], ["int", "org.hibernate.bytecode.internal.javassist.FastClass.getIndex(java.lang.String, java.lang.Class[])"], ["int", "org.hibernate.bytecode.internal.javassist.FastClass.getIndex(java.lang.Class[])"], ["java.lang.String", "org.hibernate.bytecode.internal.javassist.FastClass.getName()"], ["java.lang.Class", "org.hibernate.bytecode.internal.javassist.FastClass.getJavaClass()"], ["java.lang.String", "org.hibernate.bytecode.internal.javassist.FastClass.toString()"], ["int", "org.hibernate.bytecode.internal.javassist.FastClass.hashCode()"], ["boolean", "org.hibernate.bytecode.internal.javassist.FastClass.equals(java.lang.Object)"], ["org.hibernate.bytecode.internal.javassist.BulkAccessorException", "org.hibernate.bytecode.internal.javassist.BulkAccessorException(java.lang.String)"], ["org.hibernate.bytecode.internal.javassist.BulkAccessorException", "org.hibernate.bytecode.internal.javassist.BulkAccessorException(java.lang.String, int)"], ["org.hibernate.bytecode.internal.javassist.BulkAccessorException", "org.hibernate.bytecode.internal.javassist.BulkAccessorException(java.lang.String, java.lang.Exception)"], ["org.hibernate.bytecode.internal.javassist.BulkAccessorException", "org.hibernate.bytecode.internal.javassist.BulkAccessorException(java.lang.String, int, java.lang.Exception)"], ["int", "org.hibernate.bytecode.internal.javassist.BulkAccessorException.getIndex()"], ["org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$PassThroughHandler", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$PassThroughHandler(java.lang.Object, java.lang.String)"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.ProxyFactoryFactoryImpl$PassThroughHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object[])"], ["org.hibernate.bytecode.internal.javassist.BytecodeProviderImpl", "org.hibernate.bytecode.internal.javassist.BytecodeProviderImpl()"], ["org.hibernate.bytecode.spi.ProxyFactoryFactory", "org.hibernate.bytecode.internal.javassist.BytecodeProviderImpl.getProxyFactoryFactory()"], ["org.hibernate.bytecode.spi.ReflectionOptimizer", "org.hibernate.bytecode.internal.javassist.BytecodeProviderImpl.getReflectionOptimizer(java.lang.Class, java.lang.String[], java.lang.String[], java.lang.Class[])"], ["org.hibernate.bytecode.enhance.spi.Enhancer", "org.hibernate.bytecode.internal.javassist.BytecodeProviderImpl.getEnhancer(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["org.hibernate.bytecode.internal.javassist.InstantiationOptimizerAdapter", "org.hibernate.bytecode.internal.javassist.InstantiationOptimizerAdapter(org.hibernate.bytecode.internal.javassist.FastClass)"], ["java.lang.Object", "org.hibernate.bytecode.internal.javassist.InstantiationOptimizerAdapter.newInstance()"], ["java.lang.Object[]", "org.hibernate.bytecode.internal.javassist.BulkAccessor.getPropertyValues(java.lang.Object)"], ["java.lang.Class[]", "org.hibernate.bytecode.internal.javassist.BulkAccessor.getPropertyTypes()"], ["java.lang.String[]", "org.hibernate.bytecode.internal.javassist.BulkAccessor.getGetters()"], ["java.lang.String[]", "org.hibernate.bytecode.internal.javassist.BulkAccessor.getSetters()"], ["org.hibernate.bytecode.internal.javassist.BulkAccessor", "org.hibernate.bytecode.internal.javassist.BulkAccessor.create(java.lang.Class, java.lang.String[], java.lang.String[], java.lang.Class[])"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$3.run()"], ["java.lang.reflect.Method", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$GetDeclaredMethodAction.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$GetDeclaredMethodAction.run()"], ["org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$GetPropertyValues", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$GetPropertyValues(java.lang.Class, java.lang.reflect.Method[])"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$GetPropertyValues.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["net.bytebuddy.implementation.FieldAccessor$PropertyConfigurable", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers$2.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers$2.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$SecurityManagerClassContextGetCallerStackAction.run()"], ["java.lang.reflect.Method", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$1.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$1.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$StackWalkerGetCallerStackAction.run()"], ["byte[]", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState.rewrite(net.bytebuddy.pool.TypePool, java.lang.String, java.util.function.Function<net.bytebuddy.ByteBuddy, net.bytebuddy.dynamic.DynamicType$Builder<?>>)"], ["org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState.getProxyDefinitionHelpers()"], ["org.hibernate.bytecode.internal.bytebuddy.BasicProxyFactoryImpl", "org.hibernate.bytecode.internal.bytebuddy.BasicProxyFactoryImpl(java.lang.Class, java.lang.Class[], org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState)"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.BasicProxyFactoryImpl.getProxy()"], ["boolean", "org.hibernate.bytecode.internal.bytebuddy.BasicProxyFactoryImpl.isInstance(java.lang.Object)"], ["net.bytebuddy.implementation.MethodDelegation", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers$1.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers$1.run()"], ["org.hibernate.bytecode.internal.bytebuddy.PassThroughInterceptor", "org.hibernate.bytecode.internal.bytebuddy.PassThroughInterceptor(java.lang.String)"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.PassThroughInterceptor.intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["void", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$StandardClassRewriter.installReflectionMethodVisitors(net.bytebuddy.dynamic.DynamicType$Builder<?>)"], ["void", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$StandardClassRewriter.registerAuthorizedClass(net.bytebuddy.dynamic.DynamicType$Unloaded<?>)"], ["java.lang.reflect.Method", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$2.run()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$2.run()"], ["org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl", "org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl(org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState, org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper)"], ["org.hibernate.proxy.ProxyFactory", "org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl.buildProxyFactory(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.bytecode.spi.BasicProxyFactory", "org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl.buildBasicProxyFactory(java.lang.Class, java.lang.Class[])"], ["org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher()"], ["java.lang.reflect.Method", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher.getDeclaredMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])"], ["java.lang.reflect.Method", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher.getMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])"], ["org.hibernate.bytecode.internal.bytebuddy.ReflectionOptimizerImpl", "org.hibernate.bytecode.internal.bytebuddy.ReflectionOptimizerImpl(org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer, org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer)"], ["org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer", "org.hibernate.bytecode.internal.bytebuddy.ReflectionOptimizerImpl.getInstantiationOptimizer()"], ["org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer", "org.hibernate.bytecode.internal.bytebuddy.ReflectionOptimizerImpl.getAccessOptimizer()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$StackWalkerGetCallerStackAction$1.apply(java.util.stream.Stream)"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$StackWalkerGetCallerStackAction$1.apply(java.lang.Object)"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.HibernateMethodLookupDispatcher$StackWalkerGetCallerStackAction$2.apply(java.lang.Object)"], ["org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException", "org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException(java.lang.String)"], ["org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException", "org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException(java.lang.String, int)"], ["org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException", "org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException(java.lang.String, java.lang.Exception)"], ["org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException", "org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException(java.lang.String, int, java.lang.Exception)"], ["int", "org.hibernate.bytecode.internal.bytebuddy.BulkAccessorException.getIndex()"], ["org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl()"], ["org.hibernate.bytecode.spi.ProxyFactoryFactory", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getProxyFactoryFactory()"], ["org.hibernate.bytecode.spi.ReflectionOptimizer", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(java.lang.Class, java.lang.String[], java.lang.String[], java.lang.Class[])"], ["org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getByteBuddyProxyHelper()"], ["org.hibernate.bytecode.enhance.spi.Enhancer", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getEnhancer(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["void", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.resetCaches()"], ["net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.getGroovyGetMetaClassFilter()"], ["net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.getVirtualNotFinalizerFilter()"], ["net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.getHibernateGeneratedMethodFilter()"], ["net.bytebuddy.implementation.MethodDelegation", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.getDelegateToInterceptorDispatcherMethodDelegation()"], ["net.bytebuddy.implementation.FieldAccessor$PropertyConfigurable", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.getInterceptorFieldAccessor()"], ["void", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$SecurityManagerClassRewriter.installReflectionMethodVisitors(net.bytebuddy.dynamic.DynamicType$Builder<?>)"], ["void", "org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$SecurityManagerClassRewriter.registerAuthorizedClass(net.bytebuddy.dynamic.DynamicType$Unloaded<?>)"], ["org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$SetPropertyValues", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$SetPropertyValues(java.lang.Class, java.lang.reflect.Method[])"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$SetPropertyValues.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["java.lang.String[]", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$CloningPropertyCall.call()"], ["java.lang.Object", "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl$CloningPropertyCall.call()"], ["org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper(org.hibernate.bytecode.enhance.spi.EnhancementContext, java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.getLoadingClassLoader()"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isEntityClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isCompositeClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isMappedSuperclassClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.doBiDirectionalAssociationManagement(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.doDirtyCheckingInline(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.doExtendedEnhancement(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.hasLazyLoadableAttributes(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isPersistentField(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["org.hibernate.bytecode.enhance.spi.UnloadedField[]", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.order(org.hibernate.bytecode.enhance.spi.UnloadedField[])"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isLazyLoadable(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.bytecode.enhance.spi.EnhancementContextWrapper.isMappedCollection(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext()"], ["java.lang.ClassLoader", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.getLoadingClassLoader()"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isEntityClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isCompositeClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isMappedSuperclassClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.doBiDirectionalAssociationManagement(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.doDirtyCheckingInline(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.doExtendedEnhancement(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.hasLazyLoadableAttributes(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isLazyLoadable(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isPersistentField(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.isMappedCollection(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["org.hibernate.bytecode.enhance.spi.UnloadedField[]", "org.hibernate.bytecode.enhance.spi.DefaultEnhancementContext.order(org.hibernate.bytecode.enhance.spi.UnloadedField[])"], ["org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor(java.lang.String)"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.getEntityName()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.getLinkedSession()"], ["void", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.setSession(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.unsetSession()"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.allowLoadOutsideTransaction()"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.getSessionFactoryUuid()"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readBoolean(java.lang.Object, java.lang.String, boolean)"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeBoolean(java.lang.Object, java.lang.String, boolean, boolean)"], ["byte", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readByte(java.lang.Object, java.lang.String, byte)"], ["byte", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeByte(java.lang.Object, java.lang.String, byte, byte)"], ["char", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readChar(java.lang.Object, java.lang.String, char)"], ["char", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeChar(java.lang.Object, java.lang.String, char, char)"], ["short", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readShort(java.lang.Object, java.lang.String, short)"], ["short", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeShort(java.lang.Object, java.lang.String, short, short)"], ["int", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readInt(java.lang.Object, java.lang.String, int)"], ["int", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeInt(java.lang.Object, java.lang.String, int, int)"], ["float", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readFloat(java.lang.Object, java.lang.String, float)"], ["float", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeFloat(java.lang.Object, java.lang.String, float, float)"], ["double", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readDouble(java.lang.Object, java.lang.String, double)"], ["double", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeDouble(java.lang.Object, java.lang.String, double, double)"], ["long", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readLong(java.lang.Object, java.lang.String, long)"], ["long", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeLong(java.lang.Object, java.lang.String, long, long)"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.readObject(java.lang.Object, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor.writeObject(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object)"], ["org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor(java.lang.String, java.util.Set<java.lang.String>, org.hibernate.type.CompositeType, org.hibernate.engine.spi.EntityKey, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor.getEntityKey()"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor.forceInitialize(java.lang.Object, java.lang.String)"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor.forceInitialize(java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, boolean)"], ["void", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor.attributeInitialized(java.lang.String)"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementAsProxyLazinessInterceptor.getIdentifier()"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.from(org.hibernate.mapping.Property, int, int)"], ["int", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.getAttributeIndex()"], ["int", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.getLazyIndex()"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.getName()"], ["org.hibernate.type.Type", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.getType()"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor.getFetchGroupName()"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor(java.lang.String, java.lang.Object, java.util.Set<java.lang.String>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.getIdentifier()"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.fetchAttribute(java.lang.Object, java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.isAttributeLoaded(java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.hasAnyUninitializedAttributes()"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.toString()"], ["void", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor.attributeInitialized(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.from(org.hibernate.mapping.PersistentClass, boolean, boolean)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.nonEnhanced(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata(java.lang.String, java.util.Map<java.lang.String, org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeDescriptor>, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>)"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.getEntityName()"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.hasLazyAttributes()"], ["int", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.lazyAttributeCount()"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.isLazyAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata.getFetchGroupName(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper()"], ["boolean", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(org.hibernate.mapping.Property, boolean, boolean)"], ["<T> T", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.performWork(org.hibernate.bytecode.enhance.spi.interceptor.BytecodeLazyAttributeInterceptor, java.util.function.BiFunction<org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Boolean, T>, java.lang.String, java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.AbstractLazyLoadInterceptor", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractLazyLoadInterceptor(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.AbstractLazyLoadInterceptor", "org.hibernate.bytecode.enhance.spi.interceptor.AbstractLazyLoadInterceptor(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper$Cause[]", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper$Cause.values()"], ["org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper$Cause", "org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper$Cause.valueOf(java.lang.String)"], ["default", "org.hibernate.bytecode.enhance.spi.LazyPropertyInitializer$InterceptorImplementor.void attributeInitialized(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.EnhancementException", "org.hibernate.bytecode.enhance.spi.EnhancementException(java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.EnhancementException", "org.hibernate.bytecode.enhance.spi.EnhancementException(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.hibernate.bytecode.enhance.spi.LazyPropertyInitializer$1.toString()"], ["java.lang.Object", "org.hibernate.bytecode.enhance.spi.LazyPropertyInitializer$1.readResolve()"], ["javassist.CtMethod", "org.hibernate.bytecode.enhance.internal.javassist.MethodWriter.write(javassist.CtClass, java.lang.String, java.lang.Object...)"], ["javassist.CtMethod", "org.hibernate.bytecode.enhance.internal.javassist.MethodWriter.addGetter(javassist.CtClass, java.lang.String, java.lang.String)"], ["javassist.CtMethod", "org.hibernate.bytecode.enhance.internal.javassist.MethodWriter.addSetter(javassist.CtClass, java.lang.String, java.lang.String)"], ["int", "org.hibernate.bytecode.enhance.internal.javassist.MethodWriter.addMethod(javassist.bytecode.ConstPool, javassist.CtMethod)"], ["org.hibernate.bytecode.enhance.internal.javassist.EnhancerImpl", "org.hibernate.bytecode.enhance.internal.javassist.EnhancerImpl(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["synchronized", "org.hibernate.bytecode.enhance.internal.javassist.EnhancerImpl.byte[] enhance(java.lang.String, byte[])"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.hasAnnotation(javassist.CtField, java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.hasAnnotation(javassist.CtClass, java.lang.String, java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["<T extends java.lang.annotation.Annotation> T", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.getAnnotation(javassist.CtField, java.lang.Class<T>)"], ["<T extends java.lang.annotation.Annotation> T", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.getAnnotation(javassist.CtClass, java.lang.String, java.lang.Class<T>)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.isPossibleBiDirectionalAssociation(javassist.CtField)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.getMappedBy(javassist.CtField, javassist.CtClass, org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext)"], ["javassist.CtClass", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.getTargetEntityClass(javassist.CtClass, javassist.CtField)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.isAssignable(javassist.CtClass, java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesHelper.isAssignable(javassist.CtField, java.lang.String)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor.buildInLineDirtyCheckingBodyFragment(org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext, javassist.CtField)"], ["org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor.resolve(javassist.CtClass, javassist.CtField)"], ["org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtField", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtField(javassist.CtField)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtField.hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtField.toString()"], ["org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesEnhancer", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesEnhancer(org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesEnhancer.enhance(javassist.CtClass)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.PersistentAttributesEnhancer.extendedEnhancement(javassist.CtClass)"], ["org.hibernate.bytecode.enhance.internal.javassist.EntityEnhancer", "org.hibernate.bytecode.enhance.internal.javassist.EntityEnhancer(org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.EntityEnhancer.enhance(javassist.CtClass)"], ["org.hibernate.bytecode.enhance.internal.javassist.MappedSuperclassEnhancer", "org.hibernate.bytecode.enhance.internal.javassist.MappedSuperclassEnhancer(org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.MappedSuperclassEnhancer.enhance(javassist.CtClass)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$ObjectAttributeTypeDescriptor.buildReadInterceptionBodyFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$ObjectAttributeTypeDescriptor.buildWriteInterceptionBodyFragment(java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata(boolean, boolean, java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata.isInherited()"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata.isVisible()"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata.getReaderName()"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$InheritanceMetadata.getWriterName()"], ["org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["java.lang.ClassLoader", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.getLoadingClassLoader()"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isEntityClass(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isCompositeClass(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isMappedSuperclassClass(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.doBiDirectionalAssociationManagement(javassist.CtField)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.doDirtyCheckingInline(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.doExtendedEnhancement(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.hasLazyLoadableAttributes(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isPersistentField(javassist.CtField)"], ["javassist.CtField[]", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.order(javassist.CtField[])"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isLazyLoadable(javassist.CtField)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext.isMappedCollection(javassist.CtField)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.FieldWriter.addField(javassist.CtClass, javassist.CtClass, java.lang.String)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.FieldWriter.addFieldWithGetterAndSetter(javassist.CtClass, javassist.CtClass, java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtClass", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtClass(javassist.CtClass)"], ["boolean", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtClass.hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.UnloadedCtClass.getName()"], ["org.hibernate.bytecode.enhance.internal.javassist.CompositeEnhancer", "org.hibernate.bytecode.enhance.internal.javassist.CompositeEnhancer(org.hibernate.bytecode.enhance.internal.javassist.JavassistEnhancementContext)"], ["void", "org.hibernate.bytecode.enhance.internal.javassist.CompositeEnhancer.enhance(javassist.CtClass)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$PrimitiveAttributeTypeDescriptor.buildReadInterceptionBodyFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.javassist.AttributeTypeDescriptor$PrimitiveAttributeTypeDescriptor.buildWriteInterceptionBodyFragment(java.lang.String)"], ["java.lang.ClassLoader", "org.hibernate.bytecode.enhance.internal.javassist.EnhancerImpl$1.getClassLoader()"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer$FieldMethodWriter.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription.hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription.toString()"], ["org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl", "org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl(org.hibernate.bytecode.enhance.spi.EnhancementContext, org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState)"], ["byte[]", "org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl.enhance(java.lang.String, byte[])"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.UnloadedTypeDescription.hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["java.lang.String", "org.hibernate.bytecode.enhance.internal.bytebuddy.UnloadedTypeDescription.getName()"], ["java.lang.ClassLoader", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.getLoadingClassLoader()"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isEntityClass(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isCompositeClass(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isMappedSuperclassClass(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.doDirtyCheckingInline(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.doExtendedEnhancement(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.hasLazyLoadableAttributes(net.bytebuddy.description.type.TypeDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isPersistentField(org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription)"], ["org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription[]", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.order(org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription[])"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isLazyLoadable(org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.isMappedCollection(org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext.doBiDirectionalAssociationManagement(org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender", "org.hibernate.bytecode.enhance.internal.bytebuddy.InlineDirtyCheckingHandler.appender(net.bytebuddy.implementation.Implementation$Target)"], ["net.bytebuddy.dynamic.scaffold.InstrumentedType", "org.hibernate.bytecode.enhance.internal.bytebuddy.InlineDirtyCheckingHandler.prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.InlineDirtyCheckingHandler.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.InlineDirtyCheckingHandler.equals(java.lang.Object)"], ["int", "org.hibernate.bytecode.enhance.internal.bytebuddy.InlineDirtyCheckingHandler.hashCode()"], ["org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer.collectPersistentFields(net.bytebuddy.description.type.TypeDescription, org.hibernate.bytecode.enhance.internal.bytebuddy.ByteBuddyEnhancementContext, net.bytebuddy.pool.TypePool)"], ["net.bytebuddy.jar.asm.MethodVisitor", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.description.method.MethodDescription, net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer.equals(java.lang.Object)"], ["int", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer.hashCode()"], ["net.bytebuddy.jar.asm.MethodVisitor", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldAccessEnhancer.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.description.method.MethodDescription, net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldAccessEnhancer.equals(java.lang.Object)"], ["int", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldAccessEnhancer.hashCode()"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer$FieldMethodReader.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler$WrappingAppender.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["void", "org.hibernate.bytecode.enhance.internal.bytebuddy.PersistentAttributeTransformer$1.visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)"], ["net.bytebuddy.description.type.TypeDescription", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler.getTargetEntityClass(net.bytebuddy.description.type.TypeDescription, org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$AnnotatedFieldDescription)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler.appender(net.bytebuddy.implementation.Implementation$Target)"], ["net.bytebuddy.dynamic.scaffold.InstrumentedType", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler.prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler.equals(java.lang.Object)"], ["int", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler.hashCode()"], ["void", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldAccessEnhancer$1.visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldWriterAppender.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["net.bytebuddy.implementation.bytecode.ByteCodeAppender$Size", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldReaderAppender.apply(net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.description.method.MethodDescription)"], ["boolean", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldReaderAppender.equals(java.lang.Object)"], ["int", "org.hibernate.bytecode.enhance.internal.bytebuddy.FieldReaderAppender.hashCode()"], ["void", "org.hibernate.bytecode.enhance.internal.bytebuddy.BiDirectionalAssociationHandler$WrappingAppender$1.visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["net.bytebuddy.dynamic.ClassFileLocator$Resolution", "org.hibernate.bytecode.enhance.internal.bytebuddy.EnhancerImpl$EnhancerClassFileLocator.locate(java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.tracker.NoopCollectionTracker", "org.hibernate.bytecode.enhance.internal.tracker.NoopCollectionTracker()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.NoopCollectionTracker.add(java.lang.String, int)"], ["int", "org.hibernate.bytecode.enhance.internal.tracker.NoopCollectionTracker.getSize(java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.add(java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.contains(java.lang.String)"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.clear()"], ["boolean", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.isEmpty()"], ["java.lang.String[]", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.get()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SortedFieldTracker.suspend(boolean)"], ["org.hibernate.bytecode.enhance.internal.tracker.SimpleCollectionTracker", "org.hibernate.bytecode.enhance.internal.tracker.SimpleCollectionTracker()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SimpleCollectionTracker.add(java.lang.String, int)"], ["int", "org.hibernate.bytecode.enhance.internal.tracker.SimpleCollectionTracker.getSize(java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.tracker.CompositeOwnerTracker", "org.hibernate.bytecode.enhance.internal.tracker.CompositeOwnerTracker()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.CompositeOwnerTracker.add(java.lang.String, org.hibernate.engine.spi.CompositeOwner)"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.CompositeOwnerTracker.callOwner(java.lang.String)"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.CompositeOwnerTracker.removeOwner(java.lang.String)"], ["org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.add(java.lang.String)"], ["boolean", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.contains(java.lang.String)"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.clear()"], ["boolean", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.isEmpty()"], ["java.lang.String[]", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.get()"], ["void", "org.hibernate.bytecode.enhance.internal.tracker.SimpleFieldTracker.suspend(boolean)"], ["org.hibernate.ConnectionReleaseMode[]", "org.hibernate.ConnectionReleaseMode.values()"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.ConnectionReleaseMode.valueOf(java.lang.String)"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.ConnectionReleaseMode.parse(java.lang.String)"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.ConnectionReleaseMode.interpret(java.lang.Object)"], ["org.hibernate.CacheMode[]", "org.hibernate.CacheMode.values()"], ["org.hibernate.CacheMode", "org.hibernate.CacheMode.valueOf(java.lang.String)"], ["boolean", "org.hibernate.CacheMode.isGetEnabled()"], ["boolean", "org.hibernate.CacheMode.isPutEnabled()"], ["org.hibernate.CacheMode", "org.hibernate.CacheMode.interpretExternalSetting(java.lang.String)"], ["org.hibernate.MultiTenancyStrategy[]", "org.hibernate.MultiTenancyStrategy.values()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.MultiTenancyStrategy.valueOf(java.lang.String)"], ["boolean", "org.hibernate.MultiTenancyStrategy.requiresMultiTenantConnectionProvider()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.MultiTenancyStrategy.determineMultiTenancyStrategy(java.util.Map)"], ["org.hibernate.FlushMode[]", "org.hibernate.FlushMode.values()"], ["org.hibernate.FlushMode", "org.hibernate.FlushMode.valueOf(java.lang.String)"], ["boolean", "org.hibernate.FlushMode.lessThan(org.hibernate.FlushMode)"], ["boolean", "org.hibernate.FlushMode.isManualFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.FlushMode", "org.hibernate.FlushMode.interpretExternalSetting(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setProperties(java.util.Map)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setComment(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setReadOnly(boolean)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setFetchSize(int)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setTimeout(int)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setCacheable(boolean)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.SQLQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setReadOnly(boolean)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setFetchSize(int)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setTimeout(int)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setCacheRegion(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setCacheable(boolean)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.SQLQuery.org.hibernate.SynchronizeableQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.SQLQuery.org.hibernate.SynchronizeableQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.SQLQuery.org.hibernate.SynchronizeableQuery addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.InvalidMappingException", "org.hibernate.InvalidMappingException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"], ["org.hibernate.InvalidMappingException", "org.hibernate.InvalidMappingException(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.InvalidMappingException", "org.hibernate.InvalidMappingException(java.lang.String, org.hibernate.boot.jaxb.Origin)"], ["java.lang.String", "org.hibernate.InvalidMappingException.getType()"], ["java.lang.String", "org.hibernate.InvalidMappingException.getPath()"], ["org.hibernate.LazyInitializationException", "org.hibernate.LazyInitializationException(java.lang.String)"], ["org.hibernate.id.SequenceGenerator", "org.hibernate.id.SequenceGenerator()"], ["java.lang.Object", "org.hibernate.id.SequenceGenerator.generatorKey()"], ["java.lang.String", "org.hibernate.id.SequenceGenerator.getSequenceName()"], ["void", "org.hibernate.id.SequenceGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.SequenceGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.String[]", "org.hibernate.id.SequenceGenerator.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.SequenceGenerator.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.id.SequenceGenerator.supportsBulkInsertionIdentifierGeneration()"], ["java.lang.String", "org.hibernate.id.SequenceGenerator.determineBulkInsertionIdentifierGenerationSelectFragment(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.id.SequenceGenerator.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.id.ExportableColumn", "org.hibernate.id.ExportableColumn(org.hibernate.boot.model.relational.Database, org.hibernate.mapping.Table, java.lang.String, org.hibernate.type.BasicType)"], ["org.hibernate.id.ExportableColumn", "org.hibernate.id.ExportableColumn(org.hibernate.boot.model.relational.Database, org.hibernate.mapping.Table, java.lang.String, org.hibernate.type.BasicType, java.lang.String)"], ["org.hibernate.id.ExportableColumn$ColumnIterator", "org.hibernate.id.ExportableColumn$ColumnIterator(org.hibernate.id.ExportableColumn)"], ["boolean", "org.hibernate.id.ExportableColumn$ColumnIterator.hasNext()"], ["org.hibernate.id.ExportableColumn", "org.hibernate.id.ExportableColumn$ColumnIterator.next()"], ["void", "org.hibernate.id.ExportableColumn$ColumnIterator.remove()"], ["java.lang.Object", "org.hibernate.id.ExportableColumn$ColumnIterator.next()"], ["org.hibernate.id.EntityIdentifierNature[]", "org.hibernate.id.EntityIdentifierNature.values()"], ["org.hibernate.id.EntityIdentifierNature", "org.hibernate.id.EntityIdentifierNature.valueOf(java.lang.String)"], ["org.hibernate.id.AbstractUUIDGenerator", "org.hibernate.id.AbstractUUIDGenerator()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.TableGenerator$1$1.execute(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.id.enhanced.TableGenerator$1$1.execute(java.sql.Connection)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.TableStructure$1$1.execute(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.id.enhanced.TableStructure$1$1.execute(java.sql.Connection)"], ["org.hibernate.id.enhanced.NoopOptimizer", "org.hibernate.id.enhanced.NoopOptimizer(java.lang.Class, int)"], ["java.io.Serializable", "org.hibernate.id.enhanced.NoopOptimizer.generate(org.hibernate.id.enhanced.AccessCallback)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.NoopOptimizer.getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.NoopOptimizer.applyIncrementSizeToSourceValues()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.TableStructure$1.getNextValue()"], ["java.lang.String", "org.hibernate.id.enhanced.TableStructure$1.getTenantIdentifier()"], ["org.hibernate.id.enhanced.PooledOptimizer", "org.hibernate.id.enhanced.PooledOptimizer(java.lang.Class, int)"], ["synchronized", "org.hibernate.id.enhanced.PooledOptimizer.java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.PooledOptimizer.getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.PooledOptimizer.applyIncrementSizeToSourceValues()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.PooledOptimizer.getLastValue()"], ["void", "org.hibernate.id.enhanced.PooledOptimizer.injectInitialValue(long)"], ["java.lang.Class", "org.hibernate.id.enhanced.AbstractOptimizer.getReturnClass()"], ["int", "org.hibernate.id.enhanced.AbstractOptimizer.getIncrementSize()"], ["org.hibernate.id.enhanced.SequenceStructure", "org.hibernate.id.enhanced.SequenceStructure(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.boot.model.relational.QualifiedName, int, int, java.lang.Class)"], ["java.lang.String", "org.hibernate.id.enhanced.SequenceStructure.getName()"], ["int", "org.hibernate.id.enhanced.SequenceStructure.getIncrementSize()"], ["int", "org.hibernate.id.enhanced.SequenceStructure.getTimesAccessed()"], ["int", "org.hibernate.id.enhanced.SequenceStructure.getInitialValue()"], ["org.hibernate.id.enhanced.AccessCallback", "org.hibernate.id.enhanced.SequenceStructure.buildCallback(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.id.enhanced.SequenceStructure.prepare(org.hibernate.id.enhanced.Optimizer)"], ["void", "org.hibernate.id.enhanced.SequenceStructure.registerExportables(org.hibernate.boot.model.relational.Database)"], ["java.lang.String[]", "org.hibernate.id.enhanced.SequenceStructure.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.enhanced.SequenceStructure.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.id.enhanced.SequenceStructure.isPhysicalSequence()"], ["org.hibernate.id.enhanced.StandardOptimizerDescriptor[]", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.values()"], ["org.hibernate.id.enhanced.StandardOptimizerDescriptor", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.getExternalName()"], ["java.lang.Class<? extends org.hibernate.id.enhanced.Optimizer>", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.getOptimizerClass()"], ["boolean", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.isPooled()"], ["org.hibernate.id.enhanced.StandardOptimizerDescriptor", "org.hibernate.id.enhanced.StandardOptimizerDescriptor.fromExternalName(java.lang.String)"], ["org.hibernate.id.enhanced.SequenceStyleGenerator", "org.hibernate.id.enhanced.SequenceStyleGenerator()"], ["org.hibernate.id.enhanced.DatabaseStructure", "org.hibernate.id.enhanced.SequenceStyleGenerator.getDatabaseStructure()"], ["org.hibernate.id.enhanced.Optimizer", "org.hibernate.id.enhanced.SequenceStyleGenerator.getOptimizer()"], ["org.hibernate.type.Type", "org.hibernate.id.enhanced.SequenceStyleGenerator.getIdentifierType()"], ["void", "org.hibernate.id.enhanced.SequenceStyleGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.enhanced.SequenceStyleGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.id.enhanced.SequenceStyleGenerator.generatorKey()"], ["java.lang.String[]", "org.hibernate.id.enhanced.SequenceStyleGenerator.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.enhanced.SequenceStyleGenerator.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.id.enhanced.SequenceStyleGenerator.supportsBulkInsertionIdentifierGeneration()"], ["java.lang.String", "org.hibernate.id.enhanced.SequenceStyleGenerator.determineBulkInsertionIdentifierGenerationSelectFragment(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.id.enhanced.SequenceStyleGenerator.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.TableGenerator$1.getNextValue()"], ["java.lang.String", "org.hibernate.id.enhanced.TableGenerator$1.getTenantIdentifier()"], ["org.hibernate.id.enhanced.HiLoOptimizer", "org.hibernate.id.enhanced.HiLoOptimizer(java.lang.Class, int)"], ["synchronized", "org.hibernate.id.enhanced.HiLoOptimizer.java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"], ["synchronized", "org.hibernate.id.enhanced.HiLoOptimizer.org.hibernate.id.IntegralDataTypeHolder getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.HiLoOptimizer.applyIncrementSizeToSourceValues()"], ["synchronized", "org.hibernate.id.enhanced.HiLoOptimizer.org.hibernate.id.IntegralDataTypeHolder getLastValue()"], ["synchronized", "org.hibernate.id.enhanced.HiLoOptimizer.org.hibernate.id.IntegralDataTypeHolder getHiValue()"], ["org.hibernate.id.enhanced.TableGenerator", "org.hibernate.id.enhanced.TableGenerator()"], ["java.lang.Object", "org.hibernate.id.enhanced.TableGenerator.generatorKey()"], ["org.hibernate.type.Type", "org.hibernate.id.enhanced.TableGenerator.getIdentifierType()"], ["java.lang.String", "org.hibernate.id.enhanced.TableGenerator.getTableName()"], ["java.lang.String", "org.hibernate.id.enhanced.TableGenerator.getSegmentColumnName()"], ["java.lang.String", "org.hibernate.id.enhanced.TableGenerator.getSegmentValue()"], ["int", "org.hibernate.id.enhanced.TableGenerator.getSegmentValueLength()"], ["java.lang.String", "org.hibernate.id.enhanced.TableGenerator.getValueColumnName()"], ["int", "org.hibernate.id.enhanced.TableGenerator.getInitialValue()"], ["int", "org.hibernate.id.enhanced.TableGenerator.getIncrementSize()"], ["org.hibernate.id.enhanced.Optimizer", "org.hibernate.id.enhanced.TableGenerator.getOptimizer()"], ["long", "org.hibernate.id.enhanced.TableGenerator.getTableAccessCount()"], ["void", "org.hibernate.id.enhanced.TableGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.enhanced.TableGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.String[]", "org.hibernate.id.enhanced.TableGenerator.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.enhanced.TableGenerator.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.id.enhanced.TableGenerator.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.SequenceStructure$1.getNextValue()"], ["java.lang.String", "org.hibernate.id.enhanced.SequenceStructure$1.getTenantIdentifier()"], ["boolean", "org.hibernate.id.enhanced.OptimizerFactory.isPooledOptimizer(java.lang.String)"], ["org.hibernate.id.enhanced.Optimizer", "org.hibernate.id.enhanced.OptimizerFactory.buildOptimizer(java.lang.String, java.lang.Class, int)"], ["org.hibernate.id.enhanced.Optimizer", "org.hibernate.id.enhanced.OptimizerFactory.buildOptimizer(java.lang.String, java.lang.Class, int, long)"], ["java.lang.String", "org.hibernate.id.enhanced.OptimizerFactory.determineImplicitOptimizerName(int, java.util.Properties)"], ["org.hibernate.id.enhanced.PooledLoOptimizer", "org.hibernate.id.enhanced.PooledLoOptimizer(java.lang.Class, int)"], ["synchronized", "org.hibernate.id.enhanced.PooledLoOptimizer.java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.PooledLoOptimizer.getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.PooledLoOptimizer.applyIncrementSizeToSourceValues()"], ["org.hibernate.id.enhanced.PooledLoThreadLocalOptimizer", "org.hibernate.id.enhanced.PooledLoThreadLocalOptimizer(java.lang.Class, int)"], ["java.io.Serializable", "org.hibernate.id.enhanced.PooledLoThreadLocalOptimizer.generate(org.hibernate.id.enhanced.AccessCallback)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.enhanced.PooledLoThreadLocalOptimizer.getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.PooledLoThreadLocalOptimizer.applyIncrementSizeToSourceValues()"], ["org.hibernate.id.enhanced.TableStructure", "org.hibernate.id.enhanced.TableStructure(org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, org.hibernate.boot.model.relational.QualifiedName, org.hibernate.boot.model.naming.Identifier, int, int, java.lang.Class)"], ["java.lang.String", "org.hibernate.id.enhanced.TableStructure.getName()"], ["int", "org.hibernate.id.enhanced.TableStructure.getInitialValue()"], ["int", "org.hibernate.id.enhanced.TableStructure.getIncrementSize()"], ["int", "org.hibernate.id.enhanced.TableStructure.getTimesAccessed()"], ["void", "org.hibernate.id.enhanced.TableStructure.prepare(org.hibernate.id.enhanced.Optimizer)"], ["org.hibernate.id.enhanced.AccessCallback", "org.hibernate.id.enhanced.TableStructure.buildCallback(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String[]", "org.hibernate.id.enhanced.TableStructure.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.enhanced.TableStructure.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.id.enhanced.TableStructure.isPhysicalSequence()"], ["void", "org.hibernate.id.enhanced.TableStructure.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer", "org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer(java.lang.Class, int)"], ["synchronized", "org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer.java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"], ["synchronized", "org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer.org.hibernate.id.IntegralDataTypeHolder getLastSourceValue()"], ["boolean", "org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer.applyIncrementSizeToSourceValues()"], ["synchronized", "org.hibernate.id.enhanced.LegacyHiLoAlgorithmOptimizer.org.hibernate.id.IntegralDataTypeHolder getLastValue()"], ["org.hibernate.id.IdentifierGenerationException", "org.hibernate.id.IdentifierGenerationException(java.lang.String)"], ["org.hibernate.id.IdentifierGenerationException", "org.hibernate.id.IdentifierGenerationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.id.AbstractPostInsertGenerator", "org.hibernate.id.AbstractPostInsertGenerator()"], ["java.io.Serializable", "org.hibernate.id.AbstractPostInsertGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.id.AbstractPostInsertGenerator.supportsBulkInsertionIdentifierGeneration()"], ["java.lang.String", "org.hibernate.id.AbstractPostInsertGenerator.determineBulkInsertionIdentifierGenerationSelectFragment(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.id.AbstractPostInsertGenerator.supportsJdbcBatchInserts()"], ["org.hibernate.id.CompositeNestedGeneratedValueGenerator", "org.hibernate.id.CompositeNestedGeneratedValueGenerator(org.hibernate.id.CompositeNestedGeneratedValueGenerator$GenerationContextLocator)"], ["void", "org.hibernate.id.CompositeNestedGeneratedValueGenerator.addGeneratedValuePlan(org.hibernate.id.CompositeNestedGeneratedValueGenerator$GenerationPlan)"], ["java.io.Serializable", "org.hibernate.id.CompositeNestedGeneratedValueGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.id.CompositeNestedGeneratedValueGenerator.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.initialize(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.initialize(java.sql.ResultSet, long)"], ["void", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.bind(java.sql.PreparedStatement, int)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.increment()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.add(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.decrement()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.subtract(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.multiplyBy(org.hibernate.id.IntegralDataTypeHolder)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.multiplyBy(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.eq(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.eq(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.lt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.lt(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.gt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.gt(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.copy()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.makeValue()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.makeValueThenIncrement()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.makeValueThenAdd(long)"], ["java.lang.String", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.toString()"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.equals(java.lang.Object)"], ["int", "org.hibernate.id.IdentifierGeneratorHelper$BigIntegerHolder.hashCode()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.MultipleHiLoPerTableGenerator$1.execute(java.sql.Connection)"], ["java.lang.Object", "org.hibernate.id.MultipleHiLoPerTableGenerator$1.execute(java.sql.Connection)"], ["default", "org.hibernate.id.IdentifierGenerator.boolean supportsJdbcBatchInserts()"], ["org.hibernate.id.SelectGenerator", "org.hibernate.id.SelectGenerator()"], ["void", "org.hibernate.id.SelectGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.id.insert.InsertGeneratedIdentifierDelegate", "org.hibernate.id.SelectGenerator.getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect, boolean)"], ["org.hibernate.id.SequenceIdentityGenerator$NoCommentsInsert", "org.hibernate.id.SequenceIdentityGenerator$NoCommentsInsert(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.Insert", "org.hibernate.id.SequenceIdentityGenerator$NoCommentsInsert.setComment(java.lang.String)"], ["org.hibernate.id.SequenceIdentityGenerator", "org.hibernate.id.SequenceIdentityGenerator()"], ["java.io.Serializable", "org.hibernate.id.SequenceIdentityGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.id.insert.InsertGeneratedIdentifierDelegate", "org.hibernate.id.SequenceIdentityGenerator.getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect, boolean)"], ["void", "org.hibernate.id.SequenceIdentityGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.initialize(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.initialize(java.sql.ResultSet, long)"], ["void", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.bind(java.sql.PreparedStatement, int)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.increment()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.add(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.decrement()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.subtract(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.multiplyBy(org.hibernate.id.IntegralDataTypeHolder)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.multiplyBy(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.eq(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.eq(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.lt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.lt(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.gt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.gt(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.copy()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.makeValue()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.makeValueThenIncrement()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.makeValueThenAdd(long)"], ["java.lang.String", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.toString()"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.equals(java.lang.Object)"], ["int", "org.hibernate.id.IdentifierGeneratorHelper$BigDecimalHolder.hashCode()"], ["org.hibernate.id.IdentityGenerator", "org.hibernate.id.IdentityGenerator()"], ["org.hibernate.id.insert.InsertGeneratedIdentifierDelegate", "org.hibernate.id.IdentityGenerator.getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect, boolean)"], ["org.hibernate.id.GUIDGenerator", "org.hibernate.id.GUIDGenerator()"], ["java.io.Serializable", "org.hibernate.id.GUIDGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.id.factory.internal.MutableIdentifierGeneratorFactoryInitiator", "org.hibernate.id.factory.internal.MutableIdentifierGeneratorFactoryInitiator()"], ["org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory", "org.hibernate.id.factory.internal.MutableIdentifierGeneratorFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.id.factory.internal.MutableIdentifierGeneratorFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory()"], ["void", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(java.lang.String, java.lang.Class)"], ["org.hibernate.dialect.Dialect", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.getDialect()"], ["void", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(org.hibernate.dialect.Dialect)"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.createIdentifierGenerator(java.lang.String, org.hibernate.type.Type, java.util.Properties)"], ["java.lang.Class", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.getIdentifierGeneratorClass(java.lang.String)"], ["void", "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.SequenceHiLoGenerator$1.getNextValue()"], ["java.lang.String", "org.hibernate.id.SequenceHiLoGenerator$1.getTenantIdentifier()"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate.prepareIdentifierGeneratingInsert()"], ["org.hibernate.id.SequenceHiLoGenerator", "org.hibernate.id.SequenceHiLoGenerator()"], ["void", "org.hibernate.id.SequenceHiLoGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["synchronized", "org.hibernate.id.SequenceHiLoGenerator.java.io.Serializable generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(java.sql.ResultSet, java.lang.String, org.hibernate.type.Type, org.hibernate.dialect.Dialect)"], ["java.io.Serializable", "org.hibernate.id.IdentifierGeneratorHelper.get(java.sql.ResultSet, java.lang.String, org.hibernate.type.Type, org.hibernate.dialect.Dialect)"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper.createNumber(long, java.lang.Class)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper.getIntegralDataTypeHolder(java.lang.Class)"], ["long", "org.hibernate.id.IdentifierGeneratorHelper.extractLong(org.hibernate.id.IntegralDataTypeHolder)"], ["java.math.BigInteger", "org.hibernate.id.IdentifierGeneratorHelper.extractBigInteger(org.hibernate.id.IntegralDataTypeHolder)"], ["java.math.BigDecimal", "org.hibernate.id.IdentifierGeneratorHelper.extractBigDecimal(org.hibernate.id.IntegralDataTypeHolder)"], ["org.hibernate.id.SequenceIdentityGenerator$Delegate", "org.hibernate.id.SequenceIdentityGenerator$Delegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect, java.lang.String)"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.id.SequenceIdentityGenerator$Delegate.prepareIdentifierGeneratingInsert()"], ["java.lang.String", "org.hibernate.id.IdentifierGeneratorHelper$2.toString()"], ["org.hibernate.id.UUIDHexGenerator", "org.hibernate.id.UUIDHexGenerator()"], ["void", "org.hibernate.id.UUIDHexGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.UUIDHexGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.id.IdentifierGeneratorHelper$BasicHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder(java.lang.Class)"], ["long", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.getActualLongValue()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.initialize(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.initialize(java.sql.ResultSet, long)"], ["void", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.bind(java.sql.PreparedStatement, int)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.increment()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.add(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.decrement()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.subtract(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.multiplyBy(org.hibernate.id.IntegralDataTypeHolder)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.multiplyBy(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.eq(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.eq(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.lt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.lt(long)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.gt(org.hibernate.id.IntegralDataTypeHolder)"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.gt(long)"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.copy()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.makeValue()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.makeValueThenIncrement()"], ["java.lang.Number", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.makeValueThenAdd(long)"], ["java.lang.String", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.toString()"], ["boolean", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.equals(java.lang.Object)"], ["int", "org.hibernate.id.IdentifierGeneratorHelper$BasicHolder.hashCode()"], ["org.hibernate.id.uuid.StandardRandomStrategy", "org.hibernate.id.uuid.StandardRandomStrategy()"], ["int", "org.hibernate.id.uuid.StandardRandomStrategy.getGeneratedVersion()"], ["java.util.UUID", "org.hibernate.id.uuid.StandardRandomStrategy.generateUUID(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["byte[]", "org.hibernate.id.uuid.Helper.getAddressBytes()"], ["int", "org.hibernate.id.uuid.Helper.getAddressInt()"], ["java.lang.String", "org.hibernate.id.uuid.Helper.getAddressHexString()"], ["byte[]", "org.hibernate.id.uuid.Helper.getJvmIdentifierBytes()"], ["int", "org.hibernate.id.uuid.Helper.getJvmIdentifierInt()"], ["java.lang.String", "org.hibernate.id.uuid.Helper.getJvmIdentifierHexString()"], ["short", "org.hibernate.id.uuid.Helper.getCountShort()"], ["byte[]", "org.hibernate.id.uuid.Helper.getCountBytes()"], ["java.lang.String", "org.hibernate.id.uuid.Helper.format(int)"], ["java.lang.String", "org.hibernate.id.uuid.Helper.format(short)"], ["java.lang.String", "org.hibernate.id.uuid.LocalObjectUuidHelper.generateLocalObjectUuid()"], ["int", "org.hibernate.id.uuid.CustomVersionOneStrategy.getGeneratedVersion()"], ["org.hibernate.id.uuid.CustomVersionOneStrategy", "org.hibernate.id.uuid.CustomVersionOneStrategy()"], ["java.util.UUID", "org.hibernate.id.uuid.CustomVersionOneStrategy.generateUUID(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["long", "org.hibernate.id.uuid.CustomVersionOneStrategy.getMostSignificantBits()"], ["long", "org.hibernate.id.uuid.CustomVersionOneStrategy.generateLeastSignificantBits(long)"], ["void", "org.hibernate.id.uuid.CustomVersionOneStrategy.main(java.lang.String[])"], ["org.hibernate.id.ExportableColumn$ValueImpl", "org.hibernate.id.ExportableColumn$ValueImpl(org.hibernate.id.ExportableColumn, org.hibernate.mapping.Table, org.hibernate.type.BasicType, org.hibernate.boot.model.relational.Database)"], ["int", "org.hibernate.id.ExportableColumn$ValueImpl.getColumnSpan()"], ["org.hibernate.type.Type", "org.hibernate.id.ExportableColumn$ValueImpl.getType()"], ["org.hibernate.FetchMode", "org.hibernate.id.ExportableColumn$ValueImpl.getFetchMode()"], ["org.hibernate.mapping.Table", "org.hibernate.id.ExportableColumn$ValueImpl.getTable()"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.hasFormula()"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.isAlternateUniqueKey()"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.isNullable()"], ["boolean[]", "org.hibernate.id.ExportableColumn$ValueImpl.getColumnUpdateability()"], ["boolean[]", "org.hibernate.id.ExportableColumn$ValueImpl.getColumnInsertability()"], ["void", "org.hibernate.id.ExportableColumn$ValueImpl.createForeignKey()"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.isSimpleValue()"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.isValid(org.hibernate.engine.spi.Mapping)"], ["void", "org.hibernate.id.ExportableColumn$ValueImpl.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.id.ExportableColumn$ValueImpl.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.id.ExportableColumn$ValueImpl.isSame(org.hibernate.mapping.Value)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.id.ExportableColumn$ValueImpl.getServiceRegistry()"], ["org.hibernate.id.ForeignGenerator", "org.hibernate.id.ForeignGenerator()"], ["java.lang.String", "org.hibernate.id.ForeignGenerator.getEntityName()"], ["java.lang.String", "org.hibernate.id.ForeignGenerator.getPropertyName()"], ["java.lang.String", "org.hibernate.id.ForeignGenerator.getRole()"], ["void", "org.hibernate.id.ForeignGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.ForeignGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.String", "org.hibernate.id.IdentifierGeneratorHelper$1.toString()"], ["org.hibernate.id.MultipleHiLoPerTableGenerator", "org.hibernate.id.MultipleHiLoPerTableGenerator()"], ["synchronized", "org.hibernate.id.MultipleHiLoPerTableGenerator.java.io.Serializable generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.id.MultipleHiLoPerTableGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["void", "org.hibernate.id.MultipleHiLoPerTableGenerator.registerExportables(org.hibernate.boot.model.relational.Database)"], ["java.lang.String[]", "org.hibernate.id.MultipleHiLoPerTableGenerator.sqlCreateStrings(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.id.MultipleHiLoPerTableGenerator.sqlDropStrings(org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.id.MultipleHiLoPerTableGenerator.generatorKey()"], ["org.hibernate.id.Assigned", "org.hibernate.id.Assigned()"], ["java.io.Serializable", "org.hibernate.id.Assigned.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.id.Assigned.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.id.insert.AbstractReturningDelegate", "org.hibernate.id.insert.AbstractReturningDelegate(org.hibernate.id.PostInsertIdentityPersister)"], ["java.io.Serializable", "org.hibernate.id.insert.AbstractReturningDelegate.performInsert(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.id.insert.Binder)"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.id.insert.IdentifierGeneratingInsert(org.hibernate.dialect.Dialect)"], ["java.io.Serializable", "org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.id.insert.Binder)"], ["org.hibernate.id.insert.InsertSelectIdentityInsert", "org.hibernate.id.insert.InsertSelectIdentityInsert(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.id.insert.InsertSelectIdentityInsert.toStatementString()"], ["org.hibernate.id.IntegralDataTypeHolder", "org.hibernate.id.MultipleHiLoPerTableGenerator$2.getNextValue()"], ["java.lang.String", "org.hibernate.id.MultipleHiLoPerTableGenerator$2.getTenantIdentifier()"], ["org.hibernate.id.UUIDGenerator", "org.hibernate.id.UUIDGenerator()"], ["org.hibernate.id.UUIDGenerator", "org.hibernate.id.UUIDGenerator.buildSessionFactoryUniqueIdentifierGenerator()"], ["void", "org.hibernate.id.UUIDGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["java.io.Serializable", "org.hibernate.id.UUIDGenerator.generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.id.IdentityGenerator$BasicDelegate", "org.hibernate.id.IdentityGenerator$BasicDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.id.IdentityGenerator$BasicDelegate.prepareIdentifierGeneratingInsert()"], ["org.hibernate.id.SequenceMismatchStrategy[]", "org.hibernate.id.SequenceMismatchStrategy.values()"], ["org.hibernate.id.SequenceMismatchStrategy", "org.hibernate.id.SequenceMismatchStrategy.valueOf(java.lang.String)"], ["org.hibernate.id.SequenceMismatchStrategy", "org.hibernate.id.SequenceMismatchStrategy.interpret(java.lang.Object)"], ["org.hibernate.id.IdentityGenerator$InsertSelectDelegate", "org.hibernate.id.IdentityGenerator$InsertSelectDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.id.IdentityGenerator$InsertSelectDelegate.prepareIdentifierGeneratingInsert()"], ["java.io.Serializable", "org.hibernate.id.IdentityGenerator$InsertSelectDelegate.executeAndExtract(java.sql.PreparedStatement, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.id.IdentityGenerator$InsertSelectDelegate.determineGeneratedIdentifier(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.id.IncrementGenerator", "org.hibernate.id.IncrementGenerator()"], ["synchronized", "org.hibernate.id.IncrementGenerator.java.io.Serializable generate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.id.IncrementGenerator.configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.WrongClassException", "org.hibernate.WrongClassException(java.lang.String, java.io.Serializable, java.lang.String)"], ["java.lang.String", "org.hibernate.WrongClassException.getEntityName()"], ["java.io.Serializable", "org.hibernate.WrongClassException.getIdentifier()"], ["org.hibernate.ObjectDeletedException", "org.hibernate.ObjectDeletedException(java.lang.String, java.io.Serializable, java.lang.String)"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.service.ServiceRegistry.requireService(java.lang.Class<R>)"], ["default", "org.hibernate.service.spi.OptionallyManageable.java.lang.Object getManagementBean()"], ["org.hibernate.service.spi.ServiceException", "org.hibernate.service.spi.ServiceException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.service.spi.ServiceException", "org.hibernate.service.spi.ServiceException(java.lang.String)"], ["default", "org.hibernate.service.spi.SessionFactoryServiceInitiator.R initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["default", "org.hibernate.service.spi.ServiceRegistryImplementor.void close()"], ["default", "org.hibernate.service.spi.Manageable.java.lang.String getManagementDomain()"], ["default", "org.hibernate.service.spi.Manageable.java.lang.String getManagementServiceType()"], ["default", "org.hibernate.service.spi.Manageable.java.lang.Object getManagementBean()"], ["org.hibernate.service.spi.ServiceBinding", "org.hibernate.service.spi.ServiceBinding(org.hibernate.service.spi.ServiceBinding$ServiceLifecycleOwner, java.lang.Class<R>, R)"], ["org.hibernate.service.spi.ServiceBinding", "org.hibernate.service.spi.ServiceBinding(org.hibernate.service.spi.ServiceBinding$ServiceLifecycleOwner, org.hibernate.service.spi.ServiceInitiator<R>)"], ["org.hibernate.service.spi.ServiceBinding$ServiceLifecycleOwner", "org.hibernate.service.spi.ServiceBinding.getLifecycleOwner()"], ["R", "org.hibernate.service.spi.ServiceBinding.getService()"], ["void", "org.hibernate.service.spi.ServiceBinding.setService(R)"], ["org.hibernate.service.NullServiceException", "org.hibernate.service.NullServiceException(java.lang.Class)"], ["java.lang.Class", "org.hibernate.service.NullServiceException.getServiceRole()"], ["org.hibernate.service.internal.SessionFactoryServiceRegistryBuilderImpl", "org.hibernate.service.internal.SessionFactoryServiceRegistryBuilderImpl(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.spi.SessionFactoryServiceRegistryBuilder", "org.hibernate.service.internal.SessionFactoryServiceRegistryBuilderImpl.addInitiator(org.hibernate.service.spi.SessionFactoryServiceInitiator)"], ["org.hibernate.service.spi.SessionFactoryServiceRegistryBuilder", "org.hibernate.service.internal.SessionFactoryServiceRegistryBuilderImpl.addService(java.lang.Class, org.hibernate.service.Service)"], ["org.hibernate.service.spi.SessionFactoryServiceRegistry", "org.hibernate.service.internal.SessionFactoryServiceRegistryBuilderImpl.buildSessionFactoryServiceRegistry(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.service.internal.SessionFactoryServiceRegistryImpl", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl(org.hibernate.service.spi.ServiceRegistryImplementor, java.util.List<org.hibernate.service.spi.SessionFactoryServiceInitiator>, java.util.List<org.hibernate.service.internal.ProvidedService>, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.initiateService(org.hibernate.service.spi.ServiceInitiator<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.configureService(org.hibernate.service.spi.ServiceBinding<R>)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getSessionFactory()"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getSessionFactoryOptions()"], ["org.hibernate.service.spi.ServiceRegistryImplementor", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getServiceRegistry()"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(java.lang.Class<R>)"], ["synchronized", "org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.void destroy()"], ["org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryInitiator", "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryInitiator()"], ["org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl", "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.internal.ServiceProxyGenerationException", "org.hibernate.service.internal.ServiceProxyGenerationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.service.internal.ServiceProxyGenerationException", "org.hibernate.service.internal.ServiceProxyGenerationException(java.lang.Throwable)"], ["org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl", "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.spi.SessionFactoryServiceRegistry", "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl.buildServiceRegistry(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.service.internal.ServiceDependencyException", "org.hibernate.service.internal.ServiceDependencyException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.service.internal.ServiceDependencyException", "org.hibernate.service.internal.ServiceDependencyException(java.lang.String)"], ["org.hibernate.service.internal.ProvidedService", "org.hibernate.service.internal.ProvidedService(java.lang.Class<R>, R)"], ["R", "org.hibernate.service.internal.ProvidedService.getService()"], ["org.hibernate.service.internal.AbstractServiceRegistryImpl", "org.hibernate.service.internal.AbstractServiceRegistryImpl(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["org.hibernate.service.internal.AbstractServiceRegistryImpl", "org.hibernate.service.internal.AbstractServiceRegistryImpl(org.hibernate.boot.registry.BootstrapServiceRegistry, boolean)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.service.internal.AbstractServiceRegistryImpl.getParentServiceRegistry()"], ["<R extends org.hibernate.service.Service> org.hibernate.service.spi.ServiceBinding<R>", "org.hibernate.service.internal.AbstractServiceRegistryImpl.locateServiceBinding(java.lang.Class<R>)"], ["<R extends org.hibernate.service.Service> R", "org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(java.lang.Class<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(org.hibernate.service.spi.ServiceBinding<R>)"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.service.internal.AbstractServiceRegistryImpl.startService(org.hibernate.service.spi.ServiceBinding<R>)"], ["boolean", "org.hibernate.service.internal.AbstractServiceRegistryImpl.isActive()"], ["synchronized", "org.hibernate.service.internal.AbstractServiceRegistryImpl.void destroy()"], ["<R extends org.hibernate.service.Service> void", "org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(org.hibernate.service.spi.ServiceBinding<R>)"], ["synchronized", "org.hibernate.service.internal.AbstractServiceRegistryImpl.void registerChild(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["synchronized", "org.hibernate.service.internal.AbstractServiceRegistryImpl.void deRegisterChild(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["synchronized", "org.hibernate.service.internal.AbstractServiceRegistryImpl.void resetParent(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["synchronized", "org.hibernate.service.internal.AbstractServiceRegistryImpl.void reactivate()"], ["org.hibernate.service.UnknownUnwrapTypeException", "org.hibernate.service.UnknownUnwrapTypeException(java.lang.Class)"], ["org.hibernate.service.UnknownUnwrapTypeException", "org.hibernate.service.UnknownUnwrapTypeException(java.lang.Class, java.lang.Throwable)"], ["org.hibernate.service.UnknownServiceException", "org.hibernate.service.UnknownServiceException(java.lang.Class)"], ["java.lang.Class", "org.hibernate.service.UnknownServiceException.getServiceRole()"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder()"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setLazy(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setInsertable(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setUpdateable(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setValueGenerationStrategy(org.hibernate.tuple.ValueGeneration)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setNullable(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setDirtyCheckable(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setVersionable(boolean)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setCascadeStyle(org.hibernate.engine.spi.CascadeStyle)"], ["org.hibernate.tuple.BaselineAttributeInformation$Builder", "org.hibernate.tuple.BaselineAttributeInformation$Builder.setFetchMode(org.hibernate.FetchMode)"], ["org.hibernate.tuple.BaselineAttributeInformation", "org.hibernate.tuple.BaselineAttributeInformation$Builder.createInformation()"], ["org.hibernate.tuple.IdentifierProperty", "org.hibernate.tuple.IdentifierProperty(java.lang.String, org.hibernate.type.Type, boolean, org.hibernate.engine.spi.IdentifierValue, org.hibernate.id.IdentifierGenerator)"], ["org.hibernate.tuple.IdentifierProperty", "org.hibernate.tuple.IdentifierProperty(org.hibernate.type.Type, boolean, boolean, org.hibernate.engine.spi.IdentifierValue, org.hibernate.id.IdentifierGenerator)"], ["boolean", "org.hibernate.tuple.IdentifierProperty.isVirtual()"], ["boolean", "org.hibernate.tuple.IdentifierProperty.isEmbedded()"], ["org.hibernate.engine.spi.IdentifierValue", "org.hibernate.tuple.IdentifierProperty.getUnsavedValue()"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.tuple.IdentifierProperty.getIdentifierGenerator()"], ["boolean", "org.hibernate.tuple.IdentifierProperty.isIdentifierAssignedByInsert()"], ["boolean", "org.hibernate.tuple.IdentifierProperty.hasIdentifierMapper()"], ["java.lang.String", "org.hibernate.tuple.IdentifierProperty.toString()"], ["org.hibernate.tuple.VmValueGeneration", "org.hibernate.tuple.VmValueGeneration()"], ["void", "org.hibernate.tuple.VmValueGeneration.initialize(org.hibernate.annotations.GeneratorType, java.lang.Class<?>)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.VmValueGeneration.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.VmValueGeneration.referenceColumnInSql()"], ["java.lang.String", "org.hibernate.tuple.VmValueGeneration.getDatabaseGeneratedReferencedColumnValue()"], ["void", "org.hibernate.tuple.VmValueGeneration.initialize(java.lang.annotation.Annotation, java.lang.Class)"], ["org.hibernate.tuple.GeneratedValueGeneration", "org.hibernate.tuple.GeneratedValueGeneration()"], ["org.hibernate.tuple.GeneratedValueGeneration", "org.hibernate.tuple.GeneratedValueGeneration(org.hibernate.tuple.GenerationTiming)"], ["void", "org.hibernate.tuple.GeneratedValueGeneration.initialize(org.hibernate.annotations.Generated, java.lang.Class<?>)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.GeneratedValueGeneration.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.GeneratedValueGeneration.referenceColumnInSql()"], ["java.lang.String", "org.hibernate.tuple.GeneratedValueGeneration.getDatabaseGeneratedReferencedColumnValue()"], ["void", "org.hibernate.tuple.GeneratedValueGeneration.initialize(java.lang.annotation.Annotation, java.lang.Class)"], ["org.hibernate.tuple.UpdateTimestampGeneration", "org.hibernate.tuple.UpdateTimestampGeneration()"], ["void", "org.hibernate.tuple.UpdateTimestampGeneration.initialize(org.hibernate.annotations.UpdateTimestamp, java.lang.Class<?>)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.UpdateTimestampGeneration.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.UpdateTimestampGeneration.referenceColumnInSql()"], ["java.lang.String", "org.hibernate.tuple.UpdateTimestampGeneration.getDatabaseGeneratedReferencedColumnValue()"], ["void", "org.hibernate.tuple.UpdateTimestampGeneration.initialize(java.lang.annotation.Annotation, java.lang.Class)"], ["org.hibernate.tuple.PropertyFactory$NonIdentifierAttributeNature[]", "org.hibernate.tuple.PropertyFactory$NonIdentifierAttributeNature.values()"], ["org.hibernate.tuple.PropertyFactory$NonIdentifierAttributeNature", "org.hibernate.tuple.PropertyFactory$NonIdentifierAttributeNature.valueOf(java.lang.String)"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.tuple.AbstractNonIdentifierAttribute.getSource()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isLazy()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isInsertable()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isUpdateable()"], ["org.hibernate.tuple.ValueGeneration", "org.hibernate.tuple.AbstractNonIdentifierAttribute.getValueGenerationStrategy()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isNullable()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isDirtyCheckable()"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isDirtyCheckable(boolean)"], ["boolean", "org.hibernate.tuple.AbstractNonIdentifierAttribute.isVersionable()"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.tuple.AbstractNonIdentifierAttribute.getCascadeStyle()"], ["org.hibernate.FetchMode", "org.hibernate.tuple.AbstractNonIdentifierAttribute.getFetchMode()"], ["java.lang.String", "org.hibernate.tuple.AbstractNonIdentifierAttribute.toString()"], ["org.hibernate.tuple.GenerationTiming[]", "org.hibernate.tuple.GenerationTiming.values()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.GenerationTiming.valueOf(java.lang.String)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.GenerationTiming.parseFromName(java.lang.String)"], ["org.hibernate.tuple.BaselineAttributeInformation", "org.hibernate.tuple.BaselineAttributeInformation(boolean, boolean, boolean, org.hibernate.tuple.ValueGeneration, boolean, boolean, boolean, org.hibernate.engine.spi.CascadeStyle, org.hibernate.FetchMode)"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isLazy()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isInsertable()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isUpdateable()"], ["org.hibernate.tuple.ValueGeneration", "org.hibernate.tuple.BaselineAttributeInformation.getValueGenerationStrategy()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isNullable()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isDirtyCheckable()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isVersionable()"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.tuple.BaselineAttributeInformation.getCascadeStyle()"], ["org.hibernate.FetchMode", "org.hibernate.tuple.BaselineAttributeInformation.getFetchMode()"], ["boolean", "org.hibernate.tuple.BaselineAttributeInformation.isCheckable()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.entity.EntityMetamodel$NoInDatabaseValueGenerationStrategy.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel$NoInDatabaseValueGenerationStrategy.referenceColumnsInSql()"], ["java.lang.String[]", "org.hibernate.tuple.entity.EntityMetamodel$NoInDatabaseValueGenerationStrategy.getReferencedColumnValues()"], ["org.hibernate.EntityMode", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.getEntityMode()"], ["java.lang.Class", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.getMappedClass()"], ["java.lang.Class", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.getConcreteProxyClass()"], ["org.hibernate.EntityNameResolver[]", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.getEntityNameResolvers()"], ["java.lang.String", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.determineConcreteSubclassEntityName(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer.extractEmbeddedEntityName(java.util.Map)"], ["org.hibernate.tuple.entity.EntityMetamodel$ValueGenerationStrategyException", "org.hibernate.tuple.entity.EntityMetamodel$ValueGenerationStrategyException(java.lang.String)"], ["org.hibernate.tuple.entity.EntityMetamodel", "org.hibernate.tuple.entity.EntityMetamodel(org.hibernate.mapping.PersistentClass, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl", "org.hibernate.tuple.entity.EntityMetamodel.create(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.mapping.Property, org.hibernate.tuple.ValueGeneration)"], ["org.hibernate.tuple.entity.EntityTuplizer", "org.hibernate.tuple.entity.EntityMetamodel.getTuplizer()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isNaturalIdentifierInsertGenerated()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isVersionGenerated()"], ["int[]", "org.hibernate.tuple.entity.EntityMetamodel.getNaturalIdentifierProperties()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasNaturalIdentifier()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isNaturalIdentifierCached()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasImmutableNaturalId()"], ["java.util.Set", "org.hibernate.tuple.entity.EntityMetamodel.getSubclassEntityNames()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.tuple.entity.EntityMetamodel.getSessionFactory()"], ["java.lang.String", "org.hibernate.tuple.entity.EntityMetamodel.getName()"], ["java.lang.String", "org.hibernate.tuple.entity.EntityMetamodel.getRootName()"], ["org.hibernate.type.EntityType", "org.hibernate.tuple.entity.EntityMetamodel.getEntityType()"], ["org.hibernate.tuple.IdentifierProperty", "org.hibernate.tuple.entity.EntityMetamodel.getIdentifierProperty()"], ["int", "org.hibernate.tuple.entity.EntityMetamodel.getPropertySpan()"], ["int", "org.hibernate.tuple.entity.EntityMetamodel.getVersionPropertyIndex()"], ["org.hibernate.tuple.entity.VersionProperty", "org.hibernate.tuple.entity.EntityMetamodel.getVersionProperty()"], ["org.hibernate.tuple.NonIdentifierAttribute[]", "org.hibernate.tuple.entity.EntityMetamodel.getProperties()"], ["int", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyIndex(java.lang.String)"], ["java.lang.Integer", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyIndexOrNull(java.lang.String)"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasCollections()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasMutableProperties()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasNonIdentifierPropertyNamedId()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasLazyProperties()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasCascades()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isMutable()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isSelectBeforeUpdate()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isDynamicUpdate()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isDynamicInsert()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.tuple.entity.EntityMetamodel.getOptimisticLockStyle()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isPolymorphic()"], ["java.lang.String", "org.hibernate.tuple.entity.EntityMetamodel.getSuperclass()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isExplicitPolymorphism()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isInherited()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasSubclasses()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isLazy()"], ["void", "org.hibernate.tuple.entity.EntityMetamodel.setLazy(boolean)"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isVersioned()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isAbstract()"], ["java.lang.String", "org.hibernate.tuple.entity.EntityMetamodel.findEntityNameByEntityClass(java.lang.Class)"], ["java.lang.String", "org.hibernate.tuple.entity.EntityMetamodel.toString()"], ["java.lang.String[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyNames()"], ["org.hibernate.type.Type[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyTypes()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyLaziness()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyUpdateability()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyCheckability()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getNonlazyPropertyUpdateability()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyInsertability()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyNullability()"], ["boolean[]", "org.hibernate.tuple.entity.EntityMetamodel.getPropertyVersionability()"], ["org.hibernate.engine.spi.CascadeStyle[]", "org.hibernate.tuple.entity.EntityMetamodel.getCascadeStyles()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasPreInsertGeneratedValues()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasPreUpdateGeneratedValues()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasInsertGeneratedValues()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.hasUpdateGeneratedValues()"], ["org.hibernate.tuple.InMemoryValueGenerationStrategy[]", "org.hibernate.tuple.entity.EntityMetamodel.getInMemoryValueGenerationStrategies()"], ["org.hibernate.tuple.InDatabaseValueGenerationStrategy[]", "org.hibernate.tuple.entity.EntityMetamodel.getInDatabaseValueGenerationStrategies()"], ["org.hibernate.EntityMode", "org.hibernate.tuple.entity.EntityMetamodel.getEntityMode()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel.isInstrumented()"], ["org.hibernate.bytecode.spi.BytecodeEnhancementMetadata", "org.hibernate.tuple.entity.EntityMetamodel.getBytecodeEnhancementMetadata()"], ["org.hibernate.tuple.entity.EntityBasedAssociationAttribute", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.AssociationType, org.hibernate.tuple.BaselineAttributeInformation)"], ["org.hibernate.type.AssociationType", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.getType()"], ["org.hibernate.persister.walking.spi.AssociationKey", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.getAssociationKey()"], ["org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.getAssociationNature()"], ["org.hibernate.persister.walking.spi.AnyMappingDefinition", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.toAnyDefinition()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.toEntityDefinition()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.toCollectionDefinition()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.determineFetchPlan(org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.loader.PropertyPath)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.determineCascadeStyle()"], ["org.hibernate.persister.spi.HydratedCompoundValueHandler", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.getHydratedCompoundValueExtractor()"], ["org.hibernate.type.Type", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute.getType()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.entity.EntityMetamodel$NoInMemoryValueGenerationStrategy.getGenerationTiming()"], ["org.hibernate.tuple.ValueGenerator", "org.hibernate.tuple.entity.EntityMetamodel$NoInMemoryValueGenerationStrategy.getValueGenerator()"], ["org.hibernate.tuple.entity.PojoEntityInstantiator", "org.hibernate.tuple.entity.PojoEntityInstantiator(org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass, org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer)"], ["boolean", "org.hibernate.tuple.entity.PojoEntityInstantiator.isInstance(java.lang.Object)"], ["org.hibernate.tuple.entity.PojoEntityTuplizer", "org.hibernate.tuple.entity.PojoEntityTuplizer(org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.tuple.entity.PojoEntityTuplizer.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.tuple.entity.PojoEntityTuplizer.getPropertyValues(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.tuple.entity.PojoEntityTuplizer.getPropertyValuesToInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.EntityMode", "org.hibernate.tuple.entity.PojoEntityTuplizer.getEntityMode()"], ["java.lang.Class", "org.hibernate.tuple.entity.PojoEntityTuplizer.getMappedClass()"], ["boolean", "org.hibernate.tuple.entity.PojoEntityTuplizer.isLifecycleImplementor()"], ["java.lang.Class", "org.hibernate.tuple.entity.PojoEntityTuplizer.getConcreteProxyClass()"], ["void", "org.hibernate.tuple.entity.PojoEntityTuplizer.afterInitialize(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.tuple.entity.PojoEntityTuplizer.determineConcreteSubclassEntityName(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.EntityNameResolver[]", "org.hibernate.tuple.entity.PojoEntityTuplizer.getEntityNameResolvers()"], ["org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl(java.lang.String)"], ["java.lang.String", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.getEntityName()"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.isEnhancedForLazyLoading()"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.getLazyAttributesMetadata()"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.injectInterceptor(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.injectInterceptor(java.lang.Object, org.hibernate.engine.spi.PersistentAttributeInterceptor, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.injectEnhancedEntityAsProxyInterceptor(java.lang.Object, org.hibernate.engine.spi.EntityKey, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.PersistentAttributeInterceptable", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.createEnhancedProxy(org.hibernate.engine.spi.EntityKey, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.extractInterceptor(java.lang.Object)"], ["org.hibernate.bytecode.enhance.spi.interceptor.BytecodeLazyAttributeInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.extractLazyInterceptor(java.lang.Object)"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.hasUnFetchedAttributes(java.lang.Object)"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataNonPojoImpl.isAttributeLoaded(java.lang.Object, java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.tuple.entity.AbstractEntityBasedAttribute.getSource()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.tuple.entity.AbstractEntityBasedAttribute.getSource()"], ["org.hibernate.bytecode.spi.BytecodeEnhancementMetadata", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.from(org.hibernate.mapping.PersistentClass, java.util.Set<java.lang.String>, org.hibernate.type.CompositeType, boolean)"], ["java.lang.String", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.getEntityName()"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.isEnhancedForLazyLoading()"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributesMetadata", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.getLazyAttributesMetadata()"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.hasUnFetchedAttributes(java.lang.Object)"], ["boolean", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.isAttributeLoaded(java.lang.Object, java.lang.String)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.extractInterceptor(java.lang.Object)"], ["org.hibernate.engine.spi.PersistentAttributeInterceptable", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.createEnhancedProxy(org.hibernate.engine.spi.EntityKey, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.bytecode.enhance.spi.interceptor.LazyAttributeLoadingInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.injectInterceptor(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.injectEnhancedEntityAsProxyInterceptor(java.lang.Object, org.hibernate.engine.spi.EntityKey, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.injectInterceptor(java.lang.Object, org.hibernate.engine.spi.PersistentAttributeInterceptor, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.bytecode.enhance.spi.interceptor.BytecodeLazyAttributeInterceptor", "org.hibernate.tuple.entity.BytecodeEnhancementMetadataPojoImpl.extractLazyInterceptor(java.lang.Object)"], ["org.hibernate.type.Type", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getIdentifierMapperType()"], ["org.hibernate.tuple.entity.AbstractEntityTuplizer", "org.hibernate.tuple.entity.AbstractEntityTuplizer(org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass)"], ["java.io.Serializable", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getIdentifier(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getIdentifier(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.setIdentifier(java.lang.Object, java.io.Serializable)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.setIdentifier(java.lang.Object, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.resetIdentifier(java.lang.Object, java.io.Serializable, java.lang.Object)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.resetIdentifier(java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getVersion(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getPropertyValues(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getPropertyValuesToInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getPropertyValue(java.lang.Object, int)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getPropertyValue(java.lang.Object, java.lang.String)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValue(java.lang.Object, int, java.lang.Object)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.setPropertyValue(java.lang.Object, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.instantiate(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.instantiate(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.instantiate()"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer.afterInitialize(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.tuple.entity.AbstractEntityTuplizer.isInstance(java.lang.Object)"], ["boolean", "org.hibernate.tuple.entity.AbstractEntityTuplizer.hasProxy()"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer.createProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.tuple.entity.AbstractEntityTuplizer.isLifecycleImplementor()"], ["org.hibernate.proxy.ProxyFactory", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getProxyFactory()"], ["java.lang.String", "org.hibernate.tuple.entity.AbstractEntityTuplizer.toString()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getIdentifierGetter()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getVersionGetter()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.tuple.entity.AbstractEntityTuplizer.getGetter(int)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer$IncrediblySillyJpaMapsIdMappedIdentifierValueMarshaller.getIdentifier(java.lang.Object, org.hibernate.EntityMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer$IncrediblySillyJpaMapsIdMappedIdentifierValueMarshaller.setIdentifier(java.lang.Object, java.io.Serializable, org.hibernate.EntityMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.tuple.entity.EntityTuplizerFactory", "org.hibernate.tuple.entity.EntityTuplizerFactory()"], ["void", "org.hibernate.tuple.entity.EntityTuplizerFactory.registerDefaultTuplizerClass(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>)"], ["org.hibernate.tuple.entity.EntityTuplizer", "org.hibernate.tuple.entity.EntityTuplizerFactory.constructTuplizer(java.lang.String, org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.tuple.entity.EntityTuplizer", "org.hibernate.tuple.entity.EntityTuplizerFactory.constructTuplizer(java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>, org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.tuple.entity.EntityTuplizer", "org.hibernate.tuple.entity.EntityTuplizerFactory.constructDefaultTuplizer(org.hibernate.EntityMode, org.hibernate.tuple.entity.EntityMetamodel, org.hibernate.mapping.PersistentClass)"], ["java.lang.Object", "org.hibernate.tuple.entity.AbstractEntityTuplizer$NormalMappedIdentifierValueMarshaller.getIdentifier(java.lang.Object, org.hibernate.EntityMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.tuple.entity.AbstractEntityTuplizer$NormalMappedIdentifierValueMarshaller.setIdentifier(java.lang.Object, java.io.Serializable, org.hibernate.EntityMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy", "org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy.create(org.hibernate.tuple.ValueGeneration)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy.getGenerationTiming()"], ["org.hibernate.tuple.ValueGenerator", "org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy.getValueGenerator()"], ["org.hibernate.tuple.entity.EntityBasedCompositionAttribute", "org.hibernate.tuple.entity.EntityBasedCompositionAttribute(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.CompositeType, org.hibernate.tuple.BaselineAttributeInformation)"], ["org.hibernate.tuple.entity.EntityMetamodel$CompositeGenerationStrategyPairBuilder", "org.hibernate.tuple.entity.EntityMetamodel$CompositeGenerationStrategyPairBuilder(org.hibernate.mapping.Property)"], ["void", "org.hibernate.tuple.entity.EntityMetamodel$CompositeGenerationStrategyPairBuilder.addPair(org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair)"], ["org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair", "org.hibernate.tuple.entity.EntityMetamodel$CompositeGenerationStrategyPairBuilder.buildPair()"], ["org.hibernate.tuple.entity.VersionProperty", "org.hibernate.tuple.entity.VersionProperty(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.Type, org.hibernate.tuple.BaselineAttributeInformation, org.hibernate.engine.spi.VersionValue)"], ["org.hibernate.engine.spi.VersionValue", "org.hibernate.tuple.entity.VersionProperty.getUnsavedValue()"], ["org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair()"], ["org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair(org.hibernate.tuple.entity.EntityMetamodel$FullInMemoryValueGenerationStrategy)"], ["org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair(org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl)"], ["org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair(org.hibernate.tuple.InMemoryValueGenerationStrategy, org.hibernate.tuple.InDatabaseValueGenerationStrategy)"], ["org.hibernate.tuple.InMemoryValueGenerationStrategy", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair.getInMemoryStrategy()"], ["org.hibernate.tuple.InDatabaseValueGenerationStrategy", "org.hibernate.tuple.entity.EntityMetamodel$GenerationStrategyPair.getInDatabaseStrategy()"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl.referenceColumnsInSql()"], ["java.lang.String[]", "org.hibernate.tuple.entity.EntityMetamodel$InDatabaseValueGenerationStrategyImpl.getReferencedColumnValues()"], ["java.lang.Object", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute$1.extract(java.lang.Object)"], ["void", "org.hibernate.tuple.entity.EntityBasedAssociationAttribute$1.inject(java.lang.Object, java.lang.Object)"], ["org.hibernate.tuple.entity.EntityBasedBasicAttribute", "org.hibernate.tuple.entity.EntityBasedBasicAttribute(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.Type, org.hibernate.tuple.BaselineAttributeInformation)"], ["default", "org.hibernate.tuple.entity.EntityTuplizer.org.hibernate.proxy.ProxyFactory getProxyFactory()"], ["org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver()"], ["java.lang.String", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver.resolveEntityName(java.lang.Object)"], ["boolean", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver.equals(java.lang.Object)"], ["int", "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver.hashCode()"], ["boolean", "org.hibernate.tuple.GenerationTiming$3.includesInsert()"], ["boolean", "org.hibernate.tuple.GenerationTiming$3.includesUpdate()"], ["org.hibernate.tuple.StandardProperty", "org.hibernate.tuple.StandardProperty(java.lang.String, org.hibernate.type.Type, boolean, boolean, boolean, org.hibernate.tuple.ValueGeneration, boolean, boolean, boolean, org.hibernate.engine.spi.CascadeStyle, org.hibernate.FetchMode)"], ["org.hibernate.tuple.PojoInstantiator", "org.hibernate.tuple.PojoInstantiator(java.lang.Class, org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer, boolean)"], ["org.hibernate.tuple.PojoInstantiator", "org.hibernate.tuple.PojoInstantiator(org.hibernate.mapping.Component, org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer)"], ["org.hibernate.tuple.PojoInstantiator", "org.hibernate.tuple.PojoInstantiator(java.lang.Class, org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer)"], ["java.lang.Object", "org.hibernate.tuple.PojoInstantiator.instantiate()"], ["java.lang.Object", "org.hibernate.tuple.PojoInstantiator.instantiate(java.io.Serializable)"], ["boolean", "org.hibernate.tuple.PojoInstantiator.isInstance(java.lang.Object)"], ["org.hibernate.tuple.IdentifierProperty", "org.hibernate.tuple.PropertyFactory.buildIdentifierAttribute(org.hibernate.mapping.PersistentClass, org.hibernate.id.IdentifierGenerator)"], ["org.hibernate.tuple.entity.VersionProperty", "org.hibernate.tuple.PropertyFactory.buildVersionProperty(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, org.hibernate.mapping.Property, boolean)"], ["org.hibernate.tuple.NonIdentifierAttribute", "org.hibernate.tuple.PropertyFactory.buildEntityBasedAttribute(org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, int, org.hibernate.mapping.Property, boolean)"], ["org.hibernate.tuple.StandardProperty", "org.hibernate.tuple.PropertyFactory.buildStandardProperty(org.hibernate.mapping.Property, boolean)"], ["boolean", "org.hibernate.tuple.GenerationTiming$2.includesInsert()"], ["boolean", "org.hibernate.tuple.GenerationTiming$2.includesUpdate()"], ["org.hibernate.tuple.DynamicMapInstantiator", "org.hibernate.tuple.DynamicMapInstantiator()"], ["org.hibernate.tuple.DynamicMapInstantiator", "org.hibernate.tuple.DynamicMapInstantiator(org.hibernate.mapping.PersistentClass)"], ["java.lang.Object", "org.hibernate.tuple.DynamicMapInstantiator.instantiate(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.tuple.DynamicMapInstantiator.instantiate()"], ["boolean", "org.hibernate.tuple.DynamicMapInstantiator.isInstance(java.lang.Object)"], ["org.hibernate.tuple.component.CompositeBasedAssociationAttribute", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute(org.hibernate.tuple.component.AbstractCompositionAttribute, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.AssociationType, org.hibernate.tuple.BaselineAttributeInformation, int, org.hibernate.persister.walking.spi.AssociationKey)"], ["org.hibernate.type.AssociationType", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getType()"], ["org.hibernate.tuple.component.AbstractCompositionAttribute", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getSource()"], ["org.hibernate.persister.walking.spi.AssociationKey", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getAssociationKey()"], ["org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getAssociationNature()"], ["org.hibernate.persister.walking.spi.AnyMappingDefinition", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.toAnyDefinition()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.toEntityDefinition()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.toCollectionDefinition()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.determineFetchPlan(org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.loader.PropertyPath)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.determineCascadeStyle()"], ["org.hibernate.persister.spi.HydratedCompoundValueHandler", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getHydratedCompoundValueExtractor()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getSource()"], ["org.hibernate.type.Type", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute.getType()"], ["java.lang.Object", "org.hibernate.tuple.component.AbstractComponentTuplizer.getPropertyValue(java.lang.Object, int)"], ["java.lang.Object[]", "org.hibernate.tuple.component.AbstractComponentTuplizer.getPropertyValues(java.lang.Object)"], ["boolean", "org.hibernate.tuple.component.AbstractComponentTuplizer.isInstance(java.lang.Object)"], ["void", "org.hibernate.tuple.component.AbstractComponentTuplizer.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.hibernate.tuple.component.AbstractComponentTuplizer.instantiate()"], ["java.lang.Object", "org.hibernate.tuple.component.AbstractComponentTuplizer.getParent(java.lang.Object)"], ["boolean", "org.hibernate.tuple.component.AbstractComponentTuplizer.hasParentProperty()"], ["boolean", "org.hibernate.tuple.component.AbstractComponentTuplizer.isMethodOf(java.lang.reflect.Method)"], ["void", "org.hibernate.tuple.component.AbstractComponentTuplizer.setParent(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.tuple.component.AbstractComponentTuplizer.getGetter(int)"], ["org.hibernate.type.CompositeType", "org.hibernate.tuple.component.AbstractCompositionAttribute.getType()"], ["org.hibernate.type.Type", "org.hibernate.tuple.component.AbstractCompositionAttribute.getType()"], ["org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator", "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator(java.lang.Class)"], ["java.lang.Object", "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator.instantiate(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator.instantiate()"], ["boolean", "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator.isInstance(java.lang.Object)"], ["org.hibernate.tuple.component.PojoComponentTuplizer", "org.hibernate.tuple.component.PojoComponentTuplizer(org.hibernate.mapping.Component)"], ["java.lang.Class", "org.hibernate.tuple.component.PojoComponentTuplizer.getMappedClass()"], ["java.lang.Object[]", "org.hibernate.tuple.component.PojoComponentTuplizer.getPropertyValues(java.lang.Object)"], ["void", "org.hibernate.tuple.component.PojoComponentTuplizer.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["java.lang.Object", "org.hibernate.tuple.component.PojoComponentTuplizer.getParent(java.lang.Object)"], ["boolean", "org.hibernate.tuple.component.PojoComponentTuplizer.hasParentProperty()"], ["boolean", "org.hibernate.tuple.component.PojoComponentTuplizer.isMethodOf(java.lang.reflect.Method)"], ["void", "org.hibernate.tuple.component.PojoComponentTuplizer.setParent(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.tuple.component.AbstractCompositionAttribute$1$1.hasNext()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.tuple.component.AbstractCompositionAttribute$1$1.next()"], ["void", "org.hibernate.tuple.component.AbstractCompositionAttribute$1$1.remove()"], ["java.lang.Object", "org.hibernate.tuple.component.AbstractCompositionAttribute$1$1.next()"], ["org.hibernate.tuple.component.ComponentMetamodel", "org.hibernate.tuple.component.ComponentMetamodel(org.hibernate.mapping.Component, org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.tuple.component.ComponentMetamodel", "org.hibernate.tuple.component.ComponentMetamodel(org.hibernate.mapping.Component, org.hibernate.boot.spi.BootstrapContext)"], ["boolean", "org.hibernate.tuple.component.ComponentMetamodel.isKey()"], ["int", "org.hibernate.tuple.component.ComponentMetamodel.getPropertySpan()"], ["org.hibernate.tuple.StandardProperty[]", "org.hibernate.tuple.component.ComponentMetamodel.getProperties()"], ["org.hibernate.tuple.StandardProperty", "org.hibernate.tuple.component.ComponentMetamodel.getProperty(int)"], ["int", "org.hibernate.tuple.component.ComponentMetamodel.getPropertyIndex(java.lang.String)"], ["org.hibernate.tuple.StandardProperty", "org.hibernate.tuple.component.ComponentMetamodel.getProperty(java.lang.String)"], ["org.hibernate.EntityMode", "org.hibernate.tuple.component.ComponentMetamodel.getEntityMode()"], ["org.hibernate.tuple.component.ComponentTuplizer", "org.hibernate.tuple.component.ComponentMetamodel.getComponentTuplizer()"], ["boolean", "org.hibernate.tuple.component.ComponentMetamodel.isCreateEmptyCompositesEnabled()"], ["org.hibernate.tuple.component.ComponentTuplizerFactory", "org.hibernate.tuple.component.ComponentTuplizerFactory(org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.tuple.component.ComponentTuplizerFactory", "org.hibernate.tuple.component.ComponentTuplizerFactory(org.hibernate.boot.spi.BootstrapContext)"], ["void", "org.hibernate.tuple.component.ComponentTuplizerFactory.registerDefaultTuplizerClass(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.component.ComponentTuplizer>)"], ["org.hibernate.tuple.component.ComponentTuplizer", "org.hibernate.tuple.component.ComponentTuplizerFactory.constructTuplizer(java.lang.String, org.hibernate.mapping.Component)"], ["org.hibernate.tuple.component.ComponentTuplizer", "org.hibernate.tuple.component.ComponentTuplizerFactory.constructTuplizer(java.lang.Class<? extends org.hibernate.tuple.component.ComponentTuplizer>, org.hibernate.mapping.Component)"], ["org.hibernate.tuple.component.ComponentTuplizer", "org.hibernate.tuple.component.ComponentTuplizerFactory.constructDefaultTuplizer(org.hibernate.EntityMode, org.hibernate.mapping.Component)"], ["java.lang.Object", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute$1.extract(java.lang.Object)"], ["void", "org.hibernate.tuple.component.CompositeBasedAssociationAttribute$1.inject(java.lang.Object, java.lang.Object)"], ["org.hibernate.tuple.component.CompositionBasedCompositionAttribute", "org.hibernate.tuple.component.CompositionBasedCompositionAttribute(org.hibernate.tuple.component.AbstractCompositionAttribute, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.CompositeType, int, org.hibernate.tuple.BaselineAttributeInformation)"], ["java.lang.Class", "org.hibernate.tuple.component.DynamicMapComponentTuplizer.getMappedClass()"], ["org.hibernate.tuple.component.DynamicMapComponentTuplizer", "org.hibernate.tuple.component.DynamicMapComponentTuplizer(org.hibernate.mapping.Component)"], ["<T> org.hibernate.tuple.ValueGenerator<T>", "org.hibernate.tuple.TimestampGenerators.get(java.lang.Class<T>)"], ["boolean", "org.hibernate.tuple.GenerationTiming$1.includesInsert()"], ["boolean", "org.hibernate.tuple.GenerationTiming$1.includesUpdate()"], ["org.hibernate.tuple.CreationTimestampGeneration", "org.hibernate.tuple.CreationTimestampGeneration()"], ["void", "org.hibernate.tuple.CreationTimestampGeneration.initialize(org.hibernate.annotations.CreationTimestamp, java.lang.Class<?>)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.tuple.CreationTimestampGeneration.getGenerationTiming()"], ["boolean", "org.hibernate.tuple.CreationTimestampGeneration.referenceColumnInSql()"], ["java.lang.String", "org.hibernate.tuple.CreationTimestampGeneration.getDatabaseGeneratedReferencedColumnValue()"], ["void", "org.hibernate.tuple.CreationTimestampGeneration.initialize(java.lang.annotation.Annotation, java.lang.Class)"], ["java.lang.String", "org.hibernate.tuple.AbstractAttribute.getNode()"], ["java.lang.String", "org.hibernate.tuple.AbstractAttribute.getName()"], ["org.hibernate.type.Type", "org.hibernate.tuple.AbstractAttribute.getType()"], ["org.hibernate.StaleObjectStateException", "org.hibernate.StaleObjectStateException(java.lang.String, java.io.Serializable)"], ["java.lang.String", "org.hibernate.StaleObjectStateException.getEntityName()"], ["java.io.Serializable", "org.hibernate.StaleObjectStateException.getIdentifier()"], ["java.lang.String", "org.hibernate.StaleObjectStateException.getMessage()"], ["default", "org.hibernate.Cache.void evictAll()"], ["default", "org.hibernate.Cache.void evictAllRegions()"], ["default", "org.hibernate.Cache.void evictEntity(java.lang.Class, java.io.Serializable)"], ["default", "org.hibernate.Cache.void evictEntity(java.lang.String, java.io.Serializable)"], ["default", "org.hibernate.Cache.void evictEntityRegion(java.lang.Class)"], ["default", "org.hibernate.Cache.void evictEntityRegion(java.lang.String)"], ["default", "org.hibernate.Cache.void evictEntityRegions()"], ["default", "org.hibernate.Cache.void evictNaturalIdRegion(java.lang.Class)"], ["default", "org.hibernate.Cache.void evictNaturalIdRegion(java.lang.String)"], ["default", "org.hibernate.Cache.void evictNaturalIdRegions()"], ["default", "org.hibernate.Cache.void evictCollection(java.lang.String, java.io.Serializable)"], ["default", "org.hibernate.Cache.void evictCollectionRegion(java.lang.String)"], ["default", "org.hibernate.Cache.void evictCollectionRegions()"], ["org.hibernate.result.NoMoreReturnsException", "org.hibernate.result.NoMoreReturnsException(java.lang.String)"], ["org.hibernate.result.NoMoreReturnsException", "org.hibernate.result.NoMoreReturnsException()"], ["org.hibernate.result.internal.OutputsImpl", "org.hibernate.result.internal.OutputsImpl(org.hibernate.result.spi.ResultContext, java.sql.PreparedStatement)"], ["org.hibernate.result.Output", "org.hibernate.result.internal.OutputsImpl.getCurrent()"], ["boolean", "org.hibernate.result.internal.OutputsImpl.goToNext()"], ["void", "org.hibernate.result.internal.OutputsImpl.release()"], ["org.hibernate.result.internal.ResultSetOutputImpl", "org.hibernate.result.internal.ResultSetOutputImpl(java.util.List)"], ["org.hibernate.result.internal.ResultSetOutputImpl", "org.hibernate.result.internal.ResultSetOutputImpl(java.util.function.Supplier<java.util.List>)"], ["boolean", "org.hibernate.result.internal.ResultSetOutputImpl.isResultSet()"], ["java.util.List", "org.hibernate.result.internal.ResultSetOutputImpl.getResultList()"], ["java.lang.Object", "org.hibernate.result.internal.ResultSetOutputImpl.getSingleResult()"], ["boolean", "org.hibernate.result.internal.OutputsImpl$CurrentReturnState.indicatesMoreOutputs()"], ["boolean", "org.hibernate.result.internal.OutputsImpl$CurrentReturnState.isResultSet()"], ["int", "org.hibernate.result.internal.OutputsImpl$CurrentReturnState.getUpdateCount()"], ["org.hibernate.result.Output", "org.hibernate.result.internal.OutputsImpl$CurrentReturnState.getOutput()"], ["org.hibernate.result.internal.OutputsImpl$CustomLoaderExtension", "org.hibernate.result.internal.OutputsImpl$CustomLoaderExtension(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.List", "org.hibernate.result.internal.OutputsImpl$CustomLoaderExtension.processResultSet(java.sql.ResultSet)"], ["org.hibernate.result.internal.UpdateCountOutputImpl", "org.hibernate.result.internal.UpdateCountOutputImpl(int)"], ["int", "org.hibernate.result.internal.UpdateCountOutputImpl.getUpdateCount()"], ["boolean", "org.hibernate.result.internal.UpdateCountOutputImpl.isResultSet()"], ["java.lang.String", "org.hibernate.result.internal.OutputsImpl$1.getSQL()"], ["org.hibernate.procedure.NamedParametersNotSupportedException", "org.hibernate.procedure.NamedParametersNotSupportedException(java.lang.String)"], ["default", "org.hibernate.procedure.ProcedureCallMemento.org.hibernate.procedure.ProcedureCall makeProcedureCall(org.hibernate.Session)"], ["default", "org.hibernate.procedure.ProcedureCallMemento.org.hibernate.procedure.ProcedureCall makeProcedureCall(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.procedure.NoSuchParameterException", "org.hibernate.procedure.NoSuchParameterException(java.lang.String)"], ["org.hibernate.procedure.spi.ParameterStrategy[]", "org.hibernate.procedure.spi.ParameterStrategy.values()"], ["org.hibernate.procedure.spi.ParameterStrategy", "org.hibernate.procedure.spi.ParameterStrategy.valueOf(java.lang.String)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.R getSingleResult()"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery registerStoredProcedureParameter(java.lang.String, java.lang.Class, javax.persistence.ParameterMode)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery registerStoredProcedureParameter(int, java.lang.Class, javax.persistence.ParameterMode)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.StoredProcedureQuery setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.query.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.javax.persistence.TypedQuery setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.ProcedureCallImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.procedure.spi.CallableStatementSupport.java.lang.String renderCallableStatement(java.lang.String, org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.spi.ParameterRegistrationImplementor<?>>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.procedure.spi.CallableStatementSupport.java.lang.String renderCallableStatement(java.lang.String, org.hibernate.query.procedure.internal.ProcedureParameterMetadata, org.hibernate.query.procedure.internal.ProcedureParamBindings, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.procedure.ProcedureCall.org.hibernate.SynchronizeableQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.procedure.ProcedureCall.org.hibernate.SynchronizeableQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.procedure.ProcedureCall.org.hibernate.SynchronizeableQuery addSynchronizedQuerySpace(java.lang.String)"], ["<T> T", "org.hibernate.procedure.internal.ProcedureOutputsImpl.getOutputParameterValue(org.hibernate.procedure.ParameterRegistration<T>)"], ["java.lang.Object", "org.hibernate.procedure.internal.ProcedureOutputsImpl.getOutputParameterValue(java.lang.String)"], ["java.lang.Object", "org.hibernate.procedure.internal.ProcedureOutputsImpl.getOutputParameterValue(int)"], ["org.hibernate.procedure.internal.PostgresCallableStatementSupport", "org.hibernate.procedure.internal.PostgresCallableStatementSupport()"], ["java.lang.String", "org.hibernate.procedure.internal.PostgresCallableStatementSupport.renderCallableStatement(java.lang.String, org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.spi.ParameterRegistrationImplementor<?>>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.procedure.internal.PostgresCallableStatementSupport.registerParameters(java.lang.String, java.sql.CallableStatement, org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.spi.ParameterRegistrationImplementor<?>>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl$2.getSessionFactory()"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.procedure.internal.ProcedureCallImpl$2.findResultSetMapping(java.lang.String)"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$2.addQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn...)"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$2.addQuerySpaces(java.lang.String...)"], ["org.hibernate.procedure.internal.ProcedureCallMementoImpl", "org.hibernate.procedure.internal.ProcedureCallMementoImpl(java.lang.String, org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[], org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento>, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallMementoImpl.makeProcedureCall(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.procedure.internal.ProcedureCallMementoImpl.getProcedureName()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.procedure.internal.ProcedureCallMementoImpl.getQueryReturns()"], ["org.hibernate.procedure.spi.ParameterStrategy", "org.hibernate.procedure.internal.ProcedureCallMementoImpl.getParameterStrategy()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.procedure.internal.ProcedureCallMementoImpl.getHintsMap()"], ["org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento(int, java.lang.String, javax.persistence.ParameterMode, java.lang.Class, org.hibernate.type.Type, boolean)"], ["java.lang.Integer", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.getPosition()"], ["java.lang.String", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.getName()"], ["javax.persistence.ParameterMode", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.getMode()"], ["java.lang.Class", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.getType()"], ["org.hibernate.type.Type", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.getHibernateType()"], ["boolean", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.isPassNullsEnabled()"], ["org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento", "org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento.fromRegistration(org.hibernate.procedure.spi.ParameterRegistrationImplementor)"], ["org.hibernate.procedure.internal.ProcedureCallImpl", "org.hibernate.procedure.internal.ProcedureCallImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.String)"], ["org.hibernate.procedure.internal.ProcedureCallImpl", "org.hibernate.procedure.internal.ProcedureCallImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.String, java.lang.Class...)"], ["org.hibernate.procedure.internal.ProcedureCallImpl", "org.hibernate.procedure.internal.ProcedureCallImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.String, java.lang.String...)"], ["org.hibernate.query.procedure.internal.ProcedureParameterMetadata", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterMetadata()"], ["org.hibernate.query.spi.QueryParameterBindings", "org.hibernate.procedure.internal.ProcedureCallImpl.getQueryParameterBindings()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.getSession()"], ["org.hibernate.procedure.spi.ParameterStrategy", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterStrategy()"], ["java.lang.String", "org.hibernate.procedure.internal.ProcedureCallImpl.getProcedureName()"], ["java.lang.String", "org.hibernate.procedure.internal.ProcedureCallImpl.getSql()"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.procedure.internal.ProcedureCallImpl.getQueryReturns()"], ["<T> org.hibernate.procedure.ParameterRegistration<T>", "org.hibernate.procedure.internal.ProcedureCallImpl.registerParameter(int, java.lang.Class<T>, javax.persistence.ParameterMode)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallImpl.registerParameter0(int, java.lang.Class, javax.persistence.ParameterMode)"], ["org.hibernate.procedure.spi.ParameterRegistrationImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterRegistration(int)"], ["<T> org.hibernate.procedure.ParameterRegistration<T>", "org.hibernate.procedure.internal.ProcedureCallImpl.registerParameter(java.lang.String, java.lang.Class<T>, javax.persistence.ParameterMode)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallImpl.registerParameter0(java.lang.String, java.lang.Class, javax.persistence.ParameterMode)"], ["org.hibernate.procedure.spi.ParameterRegistrationImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterRegistration(java.lang.String)"], ["java.util.List", "org.hibernate.procedure.internal.ProcedureCallImpl.getRegisteredParameters()"], ["org.hibernate.procedure.ProcedureOutputs", "org.hibernate.procedure.internal.ProcedureCallImpl.getOutputs()"], ["java.lang.String", "org.hibernate.procedure.internal.ProcedureCallImpl.getQueryString()"], ["java.lang.String[]", "org.hibernate.procedure.internal.ProcedureCallImpl.getReturnAliases()"], ["org.hibernate.type.Type[]", "org.hibernate.procedure.internal.ProcedureCallImpl.getReturnTypes()"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.procedure.internal.ProcedureCallImpl.getQueryParameters()"], ["org.hibernate.procedure.spi.ParameterRegistrationImplementor[]", "org.hibernate.procedure.internal.ProcedureCallImpl.collectRefCursorParameters()"], ["org.hibernate.procedure.ProcedureCallMemento", "org.hibernate.procedure.internal.ProcedureCallImpl.extractMemento(java.util.Map<java.lang.String, java.lang.Object>)"], ["org.hibernate.procedure.ProcedureCallMemento", "org.hibernate.procedure.internal.ProcedureCallImpl.extractMemento()"], ["boolean", "org.hibernate.procedure.internal.ProcedureCallImpl.execute()"], ["int", "org.hibernate.procedure.internal.ProcedureCallImpl.executeUpdate()"], ["java.lang.Object", "org.hibernate.procedure.internal.ProcedureCallImpl.getOutputParameterValue(int)"], ["java.lang.Object", "org.hibernate.procedure.internal.ProcedureCallImpl.getOutputParameterValue(java.lang.String)"], ["boolean", "org.hibernate.procedure.internal.ProcedureCallImpl.hasMoreResults()"], ["int", "org.hibernate.procedure.internal.ProcedureCallImpl.getUpdateCount()"], ["R", "org.hibernate.procedure.internal.ProcedureCallImpl.getSingleResult()"], ["<T> T", "org.hibernate.procedure.internal.ProcedureCallImpl.unwrap(java.lang.Class<T>)"], ["javax.persistence.LockModeType", "org.hibernate.procedure.internal.ProcedureCallImpl.getLockMode()"], ["<P> org.hibernate.procedure.spi.ProcedureCallImplementor<R>", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter<P>, P)"], ["<P> org.hibernate.procedure.spi.ProcedureCallImplementor<R>", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter<P>, P)"], ["<P> org.hibernate.procedure.spi.ProcedureCallImplementor<R>", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter<P>, P, org.hibernate.type.Type)"], ["<P> org.hibernate.procedure.spi.ProcedureCallImplementor<R>", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter<P>, P, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.ParameterMetadata", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterMetadata()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.procedure.ParameterRegistration", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterRegistration(java.lang.String)"], ["org.hibernate.procedure.ParameterRegistration", "org.hibernate.procedure.internal.ProcedureCallImpl.getParameterRegistration(int)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedEntityClass(java.lang.Class)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedEntityName(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedEntityClass(java.lang.Class)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedEntityName(java.lang.String)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.addSynchronizedQuerySpace(java.lang.String)"], ["java.util.Collection", "org.hibernate.procedure.internal.ProcedureCallImpl.getSynchronizedQuerySpaces()"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.registerStoredProcedureParameter(java.lang.String, java.lang.Class, javax.persistence.ParameterMode)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.registerStoredProcedureParameter(int, java.lang.Class, javax.persistence.ParameterMode)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(int, java.lang.Object)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.procedure.internal.ProcedureCallImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[]", "org.hibernate.procedure.internal.Util.copy(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[])"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.procedure.internal.Util.copy(java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.procedure.internal.Util.resolveResultSetMappings(org.hibernate.procedure.internal.Util$ResultSetMappingResolutionContext, java.lang.String...)"], ["void", "org.hibernate.procedure.internal.Util.resolveResultClasses(org.hibernate.procedure.internal.Util$ResultClassesResolutionContext, java.lang.Class...)"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$3.accept(org.hibernate.query.QueryParameter)"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$3.accept(java.lang.Object)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.procedure.internal.ProcedureCallImpl$1.getSessionFactory()"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$1.addQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn...)"], ["void", "org.hibernate.procedure.internal.ProcedureCallImpl$1.addQuerySpaces(java.lang.String...)"], ["org.hibernate.procedure.internal.ParameterBindImpl", "org.hibernate.procedure.internal.ParameterBindImpl(org.hibernate.query.procedure.spi.ProcedureParameterImplementor, org.hibernate.query.procedure.internal.ProcedureParamBindings)"], ["T", "org.hibernate.procedure.internal.ParameterBindImpl.getValue()"], ["javax.persistence.TemporalType", "org.hibernate.procedure.internal.ParameterBindImpl.getExplicitTemporalType()"], ["boolean", "org.hibernate.procedure.internal.ParameterBindImpl.isBound()"], ["void", "org.hibernate.procedure.internal.ParameterBindImpl.setBindValue(T)"], ["void", "org.hibernate.procedure.internal.ParameterBindImpl.setBindValue(T, org.hibernate.type.Type)"], ["void", "org.hibernate.procedure.internal.ParameterBindImpl.setBindValue(T, javax.persistence.TemporalType)"], ["T", "org.hibernate.procedure.internal.ParameterBindImpl.getBindValue()"], ["org.hibernate.type.Type", "org.hibernate.procedure.internal.ParameterBindImpl.getBindType()"], ["org.hibernate.procedure.internal.StandardCallableStatementSupport", "org.hibernate.procedure.internal.StandardCallableStatementSupport(boolean)"], ["java.lang.String", "org.hibernate.procedure.internal.StandardCallableStatementSupport.renderCallableStatement(java.lang.String, org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.spi.ParameterRegistrationImplementor<?>>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.procedure.internal.StandardCallableStatementSupport.registerParameters(java.lang.String, java.sql.CallableStatement, org.hibernate.procedure.spi.ParameterStrategy, java.util.List<org.hibernate.procedure.spi.ParameterRegistrationImplementor<?>>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.procedure.internal.ProcedureOutputsImpl$ProcedureCurrentReturnState.indicatesMoreOutputs()"], ["org.hibernate.procedure.ParameterStrategyException", "org.hibernate.procedure.ParameterStrategyException(java.lang.String)"], ["org.hibernate.procedure.ParameterMisuseException", "org.hibernate.procedure.ParameterMisuseException(java.lang.String)"], ["org.hibernate.procedure.UnknownSqlResultSetMappingException", "org.hibernate.procedure.UnknownSqlResultSetMappingException(java.lang.String)"], ["java.lang.String", "org.hibernate.procedure.UnknownSqlResultSetMappingException.getUnknownSqlResultSetMappingName()"], ["org.hibernate.CallbackException", "org.hibernate.CallbackException(java.lang.Exception)"], ["org.hibernate.CallbackException", "org.hibernate.CallbackException(java.lang.String)"], ["org.hibernate.CallbackException", "org.hibernate.CallbackException(java.lang.String, java.lang.Exception)"], ["default", "org.hibernate.StatelessSession.org.hibernate.SQLQuery createSQLQuery(java.lang.String)"], ["org.hibernate.UnsupportedLockAttemptException", "org.hibernate.UnsupportedLockAttemptException(java.lang.String)"], ["org.hibernate.UnsupportedLockAttemptException", "org.hibernate.UnsupportedLockAttemptException(java.lang.Throwable)"], ["org.hibernate.UnsupportedLockAttemptException", "org.hibernate.UnsupportedLockAttemptException(java.lang.String, java.lang.Throwable)"], ["boolean", "org.hibernate.ReplicationMode$2.shouldOverwriteCurrentVersion(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.type.VersionType)"], ["java.lang.String", "org.hibernate.criterion.InExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.InExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.InExpression.toString()"], ["org.hibernate.criterion.ProjectionList", "org.hibernate.criterion.ProjectionList.create()"], ["org.hibernate.criterion.ProjectionList", "org.hibernate.criterion.ProjectionList.add(org.hibernate.criterion.Projection)"], ["org.hibernate.criterion.ProjectionList", "org.hibernate.criterion.ProjectionList.add(org.hibernate.criterion.Projection, java.lang.String)"], ["boolean", "org.hibernate.criterion.ProjectionList.isGrouped()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.ProjectionList.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.ProjectionList.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.ProjectionList.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.ProjectionList.getColumnAliases(int)"], ["java.lang.String[]", "org.hibernate.criterion.ProjectionList.getColumnAliases(int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.ProjectionList.getColumnAliases(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.criterion.ProjectionList.getColumnAliases(java.lang.String, int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.ProjectionList.getTypes(java.lang.String, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.ProjectionList.getAliases()"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.ProjectionList.getProjection(int)"], ["int", "org.hibernate.criterion.ProjectionList.getLength()"], ["java.lang.String", "org.hibernate.criterion.ProjectionList.toString()"], ["java.lang.String", "org.hibernate.criterion.IlikeExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.IlikeExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.IlikeExpression.toString()"], ["java.lang.String", "org.hibernate.criterion.SQLProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.SQLProjection.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.SQLProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.SQLProjection.toString()"], ["java.lang.String[]", "org.hibernate.criterion.SQLProjection.getAliases()"], ["java.lang.String[]", "org.hibernate.criterion.SQLProjection.getColumnAliases(int)"], ["boolean", "org.hibernate.criterion.SQLProjection.isGrouped()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.SQLProjection.getTypes(java.lang.String, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.SQLProjection.getColumnAliases(java.lang.String, int)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.SimpleSubqueryExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.create(java.lang.Object)"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.setEscapeCharacter(java.lang.Character)"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.enableLike()"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.enableLike(org.hibernate.criterion.MatchMode)"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.ignoreCase()"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.setPropertySelector(org.hibernate.criterion.Example$PropertySelector)"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.excludeZeroes()"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.excludeNone()"], ["org.hibernate.criterion.Example", "org.hibernate.criterion.Example.excludeProperty(java.lang.String)"], ["java.lang.String", "org.hibernate.criterion.Example.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.Example.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.Example.toString()"], ["org.hibernate.criterion.RowCountProjection", "org.hibernate.criterion.RowCountProjection()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.RowCountProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.RowCountProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.RowCountProjection.toString()"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.exists(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.notExists(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyEqAll(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGtAll(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLtAll(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGeAll(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLeAll(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGtSome(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLtSome(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGeSome(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLeSome(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyIn(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyNotIn(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyEq(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyNe(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGt(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLt(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyGe(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertyLe(java.lang.String, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertiesEq(java.lang.String[], org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertiesNotEq(java.lang.String[], org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertiesIn(java.lang.String[], org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.propertiesNotIn(java.lang.String[], org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.eqAll(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.gtAll(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.ltAll(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.geAll(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.leAll(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.gtSome(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.ltSome(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.geSome(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.leSome(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.in(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.notIn(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.eq(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.ne(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.gt(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.lt(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.ge(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Subqueries.le(java.lang.Object, org.hibernate.criterion.DetachedCriteria)"], ["java.lang.String", "org.hibernate.criterion.MatchMode$3.toMatchString(java.lang.String)"], ["org.hibernate.criterion.PropertyProjection", "org.hibernate.criterion.Projections.property(java.lang.String)"], ["org.hibernate.criterion.PropertyProjection", "org.hibernate.criterion.Projections.groupProperty(java.lang.String)"], ["org.hibernate.criterion.IdentifierProjection", "org.hibernate.criterion.Projections.id()"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.Projections.distinct(org.hibernate.criterion.Projection)"], ["org.hibernate.criterion.ProjectionList", "org.hibernate.criterion.Projections.projectionList()"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.Projections.rowCount()"], ["org.hibernate.criterion.CountProjection", "org.hibernate.criterion.Projections.count(java.lang.String)"], ["org.hibernate.criterion.CountProjection", "org.hibernate.criterion.Projections.countDistinct(java.lang.String)"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Projections.max(java.lang.String)"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Projections.min(java.lang.String)"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Projections.avg(java.lang.String)"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Projections.sum(java.lang.String)"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.Projections.alias(org.hibernate.criterion.Projection, java.lang.String)"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.Projections.sqlProjection(java.lang.String, java.lang.String[], org.hibernate.type.Type[])"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.Projections.sqlGroupProjection(java.lang.String, java.lang.String, java.lang.String[], org.hibernate.type.Type[])"], ["java.lang.String", "org.hibernate.criterion.BetweenExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.BetweenExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.BetweenExpression.toString()"], ["java.lang.String", "org.hibernate.criterion.AliasedProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.AliasedProjection.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.AliasedProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.AliasedProjection.getColumnAliases(int)"], ["java.lang.String[]", "org.hibernate.criterion.AliasedProjection.getColumnAliases(int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.AliasedProjection.getTypes(java.lang.String, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.AliasedProjection.getColumnAliases(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.criterion.AliasedProjection.getColumnAliases(java.lang.String, int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.AliasedProjection.getAliases()"], ["boolean", "org.hibernate.criterion.AliasedProjection.isGrouped()"], ["java.lang.String", "org.hibernate.criterion.AliasedProjection.toString()"], ["java.lang.String", "org.hibernate.criterion.SubqueryExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.SubqueryExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.AggregateProjection.getFunctionName()"], ["java.lang.String", "org.hibernate.criterion.AggregateProjection.getPropertyName()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.AggregateProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.AggregateProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.AggregateProjection.toString()"], ["java.lang.String", "org.hibernate.criterion.AbstractEmptinessExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.AbstractEmptinessExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.AbstractEmptinessExpression.toString()"], ["org.hibernate.criterion.SimpleProjection", "org.hibernate.criterion.SimpleProjection()"], ["org.hibernate.criterion.Projection", "org.hibernate.criterion.SimpleProjection.as(java.lang.String)"], ["java.lang.String[]", "org.hibernate.criterion.SimpleProjection.getColumnAliases(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.criterion.SimpleProjection.getColumnAliases(java.lang.String, int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.SimpleProjection.getTypes(java.lang.String, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.SimpleProjection.getColumnAliases(int)"], ["int", "org.hibernate.criterion.SimpleProjection.getColumnCount(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.SimpleProjection.getColumnAliases(int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.SimpleProjection.getAliases()"], ["java.lang.String", "org.hibernate.criterion.SimpleProjection.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["boolean", "org.hibernate.criterion.SimpleProjection.isGrouped()"], ["org.hibernate.criterion.Example$NotNullOrZeroPropertySelector", "org.hibernate.criterion.Example$NotNullOrZeroPropertySelector()"], ["boolean", "org.hibernate.criterion.Example$NotNullOrZeroPropertySelector.include(java.lang.Object, java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.criterion.NotExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.NotExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.NotExpression.toString()"], ["java.lang.String", "org.hibernate.criterion.NullExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.NullExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.NullExpression.toString()"], ["java.lang.String", "org.hibernate.criterion.SimpleExpression.getPropertyName()"], ["java.lang.Object", "org.hibernate.criterion.SimpleExpression.getValue()"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.SimpleExpression.ignoreCase()"], ["java.lang.String", "org.hibernate.criterion.SimpleExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.SimpleExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.SimpleExpression.toString()"], ["org.hibernate.criterion.NaturalIdentifier", "org.hibernate.criterion.NaturalIdentifier()"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.NaturalIdentifier.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.NaturalIdentifier.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.criterion.NaturalIdentifier.getNaturalIdValues()"], ["org.hibernate.criterion.NaturalIdentifier", "org.hibernate.criterion.NaturalIdentifier.set(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.Conjunction", "org.hibernate.criterion.Conjunction()"], ["org.hibernate.criterion.MatchMode[]", "org.hibernate.criterion.MatchMode.values()"], ["org.hibernate.criterion.MatchMode", "org.hibernate.criterion.MatchMode.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.criterion.SizeExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.SizeExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.SizeExpression.toString()"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Expression.sql(java.lang.String, java.lang.Object[], org.hibernate.type.Type[])"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Expression.sql(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Expression.sql(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.criterion.DetachedCriteria.getExecutableCriteria(org.hibernate.Session)"], ["java.lang.String", "org.hibernate.criterion.DetachedCriteria.getAlias()"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.forEntityName(java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.forEntityName(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.forClass(java.lang.Class)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.forClass(java.lang.Class, java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.add(org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.addOrder(org.hibernate.criterion.Order)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setFetchMode(java.lang.String, org.hibernate.FetchMode)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setProjection(org.hibernate.criterion.Projection)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createAlias(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createAlias(java.lang.String, java.lang.String, int)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createAlias(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, int)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, java.lang.String, int)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.createCriteria(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setComment(java.lang.String)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.criterion.DetachedCriteria", "org.hibernate.criterion.DetachedCriteria.setTimeout(int)"], ["java.lang.String", "org.hibernate.criterion.DetachedCriteria.toString()"], ["org.hibernate.criterion.Junction", "org.hibernate.criterion.Junction.add(org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.Junction$Nature", "org.hibernate.criterion.Junction.getNature()"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.Junction.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.Junction.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.Junction.toString()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.IdentifierProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.IdentifierProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["boolean", "org.hibernate.criterion.IdentifierProjection.isGrouped()"], ["java.lang.String", "org.hibernate.criterion.IdentifierProjection.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.IdentifierProjection.toString()"], ["java.lang.String", "org.hibernate.criterion.NotNullExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.NotNullExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.NotNullExpression.toString()"], ["java.lang.String", "org.hibernate.criterion.SQLCriterion.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.SQLCriterion.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.SQLCriterion.toString()"], ["boolean", "org.hibernate.criterion.PropertyProjection.isGrouped()"], ["java.lang.String", "org.hibernate.criterion.PropertyProjection.getPropertyName()"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.PropertyProjection.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.PropertyProjection.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.PropertyProjection.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.PropertyProjection.toString()"], ["java.lang.String", "org.hibernate.criterion.IdentifierEqExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.IdentifierEqExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.IdentifierEqExpression.toString()"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.LogicalExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.LogicalExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.LogicalExpression.getOp()"], ["java.lang.String", "org.hibernate.criterion.LogicalExpression.toString()"], ["org.hibernate.criterion.Distinct", "org.hibernate.criterion.Distinct(org.hibernate.criterion.Projection)"], ["java.lang.String", "org.hibernate.criterion.Distinct.toSqlString(org.hibernate.Criteria, int, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.Distinct.toGroupSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.Distinct.getTypes(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.type.Type[]", "org.hibernate.criterion.Distinct.getTypes(java.lang.String, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.Distinct.getColumnAliases(int)"], ["java.lang.String[]", "org.hibernate.criterion.Distinct.getColumnAliases(int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.Distinct.getColumnAliases(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.criterion.Distinct.getColumnAliases(java.lang.String, int, org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String[]", "org.hibernate.criterion.Distinct.getAliases()"], ["boolean", "org.hibernate.criterion.Distinct.isGrouped()"], ["java.lang.String", "org.hibernate.criterion.Distinct.toString()"], ["java.lang.String", "org.hibernate.criterion.MatchMode$1.toMatchString(java.lang.String)"], ["org.hibernate.criterion.Example$NotNullPropertySelector", "org.hibernate.criterion.Example$NotNullPropertySelector()"], ["boolean", "org.hibernate.criterion.Example$NotNullPropertySelector.include(java.lang.Object, java.lang.String, org.hibernate.type.Type)"], ["org.hibernate.criterion.Example$AllPropertySelector", "org.hibernate.criterion.Example$AllPropertySelector()"], ["boolean", "org.hibernate.criterion.Example$AllPropertySelector.include(java.lang.Object, java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.criterion.MatchMode$2.toMatchString(java.lang.String)"], ["java.lang.String", "org.hibernate.criterion.LikeExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.LikeExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.criterion.AvgProjection", "org.hibernate.criterion.AvgProjection(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.idEq(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.eq(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.eqOrIsNull(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.ne(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.neOrIsNotNull(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.like(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.like(java.lang.String, java.lang.String, org.hibernate.criterion.MatchMode)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.ilike(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.ilike(java.lang.String, java.lang.String, org.hibernate.criterion.MatchMode)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.gt(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.lt(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.le(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Restrictions.ge(java.lang.String, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.between(java.lang.String, java.lang.Object, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.in(java.lang.String, java.lang.Object...)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.in(java.lang.String, java.util.Collection)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.isNull(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.isNotNull(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.eqProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.neProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.ltProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.leProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.gtProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Restrictions.geProperty(java.lang.String, java.lang.String)"], ["org.hibernate.criterion.LogicalExpression", "org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Criterion, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.Conjunction", "org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Criterion...)"], ["org.hibernate.criterion.LogicalExpression", "org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Criterion, org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.Disjunction", "org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Criterion...)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.not(org.hibernate.criterion.Criterion)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sqlRestriction(java.lang.String, java.lang.Object[], org.hibernate.type.Type[])"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sqlRestriction(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sqlRestriction(java.lang.String)"], ["org.hibernate.criterion.Conjunction", "org.hibernate.criterion.Restrictions.conjunction()"], ["org.hibernate.criterion.Conjunction", "org.hibernate.criterion.Restrictions.conjunction(org.hibernate.criterion.Criterion...)"], ["org.hibernate.criterion.Disjunction", "org.hibernate.criterion.Restrictions.disjunction()"], ["org.hibernate.criterion.Disjunction", "org.hibernate.criterion.Restrictions.disjunction(org.hibernate.criterion.Criterion...)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.allEq(java.util.Map<java.lang.String, ?>)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.isEmpty(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.isNotEmpty(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeEq(java.lang.String, int)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeNe(java.lang.String, int)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeGt(java.lang.String, int)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeLt(java.lang.String, int)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeGe(java.lang.String, int)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Restrictions.sizeLe(java.lang.String, int)"], ["org.hibernate.criterion.NaturalIdentifier", "org.hibernate.criterion.Restrictions.naturalId()"], ["java.lang.String", "org.hibernate.criterion.PropertyExpression.getOp()"], ["java.lang.String", "org.hibernate.criterion.PropertyExpression.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.engine.spi.TypedValue[]", "org.hibernate.criterion.PropertyExpression.getTypedValues(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.PropertyExpression.toString()"], ["org.hibernate.criterion.CountProjection", "org.hibernate.criterion.CountProjection.setDistinct()"], ["java.lang.String", "org.hibernate.criterion.CountProjection.toString()"], ["org.hibernate.criterion.Property", "org.hibernate.criterion.Property.forName(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.between(java.lang.Object, java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.in(java.util.Collection)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.in(java.lang.Object...)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.like(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.like(java.lang.String, org.hibernate.criterion.MatchMode)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.eq(java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.eqOrIsNull(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.ne(java.lang.Object)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.neOrIsNotNull(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.gt(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.lt(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.le(java.lang.Object)"], ["org.hibernate.criterion.SimpleExpression", "org.hibernate.criterion.Property.ge(java.lang.Object)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.eqProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.eqProperty(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.neProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.neProperty(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.leProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.leProperty(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.geProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.geProperty(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.ltProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.ltProperty(java.lang.String)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.gtProperty(org.hibernate.criterion.Property)"], ["org.hibernate.criterion.PropertyExpression", "org.hibernate.criterion.Property.gtProperty(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.isNull()"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.isNotNull()"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.isEmpty()"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.isNotEmpty()"], ["org.hibernate.criterion.CountProjection", "org.hibernate.criterion.Property.count()"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Property.max()"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Property.min()"], ["org.hibernate.criterion.AggregateProjection", "org.hibernate.criterion.Property.avg()"], ["org.hibernate.criterion.PropertyProjection", "org.hibernate.criterion.Property.group()"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Property.asc()"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Property.desc()"], ["org.hibernate.criterion.Property", "org.hibernate.criterion.Property.getProperty(java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.eq(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.ne(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.lt(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.le(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.gt(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.ge(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.notIn(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.in(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.eqAll(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.gtAll(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.ltAll(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.leAll(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.geAll(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.gtSome(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.ltSome(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.leSome(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Criterion", "org.hibernate.criterion.Property.geSome(org.hibernate.criterion.DetachedCriteria)"], ["org.hibernate.criterion.Junction$Nature[]", "org.hibernate.criterion.Junction$Nature.values()"], ["org.hibernate.criterion.Junction$Nature", "org.hibernate.criterion.Junction$Nature.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.criterion.Junction$Nature.getOperator()"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Order.asc(java.lang.String)"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Order.desc(java.lang.String)"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Order.ignoreCase()"], ["org.hibernate.criterion.Order", "org.hibernate.criterion.Order.nulls(org.hibernate.NullPrecedence)"], ["java.lang.String", "org.hibernate.criterion.Order.getPropertyName()"], ["boolean", "org.hibernate.criterion.Order.isAscending()"], ["boolean", "org.hibernate.criterion.Order.isIgnoreCase()"], ["java.lang.String", "org.hibernate.criterion.Order.toSqlString(org.hibernate.Criteria, org.hibernate.criterion.CriteriaQuery)"], ["java.lang.String", "org.hibernate.criterion.Order.toString()"], ["java.lang.String", "org.hibernate.criterion.MatchMode$4.toMatchString(java.lang.String)"], ["org.hibernate.PessimisticLockException", "org.hibernate.PessimisticLockException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.DuplicateMappingException$Type[]", "org.hibernate.DuplicateMappingException$Type.values()"], ["org.hibernate.DuplicateMappingException$Type", "org.hibernate.DuplicateMappingException$Type.valueOf(java.lang.String)"], ["org.hibernate.graph.GraphSemantic[]", "org.hibernate.graph.GraphSemantic.values()"], ["org.hibernate.graph.GraphSemantic", "org.hibernate.graph.GraphSemantic.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.graph.GraphSemantic.getJpaHintName()"], ["org.hibernate.graph.GraphSemantic", "org.hibernate.graph.GraphSemantic.fromJpaHintName(java.lang.String)"], ["org.hibernate.graph.CannotBecomeEntityGraphException", "org.hibernate.graph.CannotBecomeEntityGraphException(java.lang.String)"], ["default", "org.hibernate.graph.spi.RootGraphImplementor.boolean appliesTo(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<? super J>)"], ["default", "org.hibernate.graph.spi.RootGraphImplementor.org.hibernate.graph.SubGraph makeSubGraph(boolean)"], ["default", "org.hibernate.graph.spi.RootGraphImplementor.org.hibernate.graph.RootGraph makeRootGraph(java.lang.String, boolean)"], ["default", "org.hibernate.graph.spi.GraphNodeImplementor.org.hibernate.graph.GraphNode makeCopy(boolean)"], ["org.hibernate.graph.spi.GraphHelper", "org.hibernate.graph.spi.GraphHelper()"], ["<J> org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<J>", "org.hibernate.graph.spi.GraphHelper.resolveKeyTypeDescriptor(org.hibernate.metamodel.model.domain.spi.SingularPersistentAttribute)"], ["<J> org.hibernate.metamodel.model.domain.spi.SimpleTypeDescriptor<J>", "org.hibernate.graph.spi.GraphHelper.resolveKeyTypeDescriptor(org.hibernate.metamodel.model.domain.spi.PluralPersistentAttribute)"], ["default", "org.hibernate.graph.spi.GraphImplementor.void visitAttributeNodes(java.util.function.Consumer<org.hibernate.graph.spi.AttributeNodeImplementor<?>>)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.findAttributeNode(javax.persistence.metamodel.Attribute<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addAttributeNode(javax.persistence.metamodel.Attribute<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.findOrCreateAttributeNode(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(java.lang.String, java.lang.Class<AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>, java.lang.Class<AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(javax.persistence.metamodel.Attribute<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.SubGraph<? extends AJ>", "org.hibernate.graph.spi.GraphImplementor.addSubGraph(javax.persistence.metamodel.Attribute<? extends J, AJ>, java.lang.Class<? extends AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(java.lang.String, java.lang.Class<AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(javax.persistence.metamodel.Attribute<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<? extends AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>, java.lang.Class<? extends AJ>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<? extends AJ>", "org.hibernate.graph.spi.GraphImplementor.addKeySubGraph(javax.persistence.metamodel.Attribute<? extends J, AJ>, java.lang.Class<? extends AJ>)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addKeySubGraph(javax.persistence.metamodel.Attribute, java.lang.Class)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addKeySubGraph(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addKeySubGraph(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addKeySubGraph(java.lang.String)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addSubGraph(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addSubGraph(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph addSubGraph(java.lang.String)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.AttributeNode addAttributeNode(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.AttributeNode addAttributeNode(java.lang.String)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.AttributeNode findAttributeNode(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.AttributeNode findAttributeNode(java.lang.String)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.Graph makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.SubGraph makeSubGraph(boolean)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.RootGraph makeRootGraph(java.lang.String, boolean)"], ["default", "org.hibernate.graph.spi.GraphImplementor.javax.persistence.metamodel.ManagedType getGraphedType()"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.GraphNode makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.GraphImplementor.org.hibernate.graph.spi.GraphNodeImplementor makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.void visitSubGraphs(java.util.function.BiConsumer<java.lang.Class<?>, org.hibernate.graph.spi.SubGraphImplementor<?>>)"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.void visitKeySubGraphs(java.util.function.BiConsumer<java.lang.Class<?>, org.hibernate.graph.spi.SubGraphImplementor<?>>)"], ["java.util.Map<java.lang.Class<? extends J>, org.hibernate.graph.SubGraph<? extends J>>", "org.hibernate.graph.spi.AttributeNodeImplementor.getSubGraphs()"], ["java.util.Map<java.lang.Class<? extends J>, org.hibernate.graph.SubGraph<? extends J>>", "org.hibernate.graph.spi.AttributeNodeImplementor.getKeySubGraphs()"], ["java.util.Map<java.lang.Class, javax.persistence.Subgraph>", "org.hibernate.graph.spi.AttributeNodeImplementor.getSubgraphs()"], ["java.util.Map<java.lang.Class, javax.persistence.Subgraph>", "org.hibernate.graph.spi.AttributeNodeImplementor.getKeySubgraphs()"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.SubGraph makeKeySubGraph(java.lang.Class)"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.SubGraph makeSubGraph(java.lang.Class)"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.SubGraph makeKeySubGraph()"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.SubGraph makeSubGraph()"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.javax.persistence.metamodel.Attribute getAttributeDescriptor()"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.GraphNode makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.AttributeNodeImplementor.org.hibernate.graph.spi.GraphNodeImplementor makeCopy(boolean)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<? extends AJ>", "org.hibernate.graph.spi.SubGraphImplementor.addKeySubGraph(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>, java.lang.Class<? extends AJ>)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.SubGraph addKeySubGraph(java.lang.String)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.AttributeNode addAttributeNode(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.Graph makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.SubGraph makeSubGraph(boolean)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.RootGraph makeRootGraph(java.lang.String, boolean)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.GraphNode makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.spi.GraphImplementor makeCopy(boolean)"], ["default", "org.hibernate.graph.spi.SubGraphImplementor.org.hibernate.graph.spi.GraphNodeImplementor makeCopy(boolean)"], ["default", "org.hibernate.graph.SubGraph.void addAttributeNodes(java.lang.String...)"], ["default", "org.hibernate.graph.SubGraph.void addAttributeNodes(javax.persistence.metamodel.Attribute<J, ?>...)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addSubgraph(javax.persistence.metamodel.Attribute<J, X>)"], ["<X> org.hibernate.graph.SubGraph<? extends X>", "org.hibernate.graph.SubGraph.addSubgraph(javax.persistence.metamodel.Attribute<J, X>, java.lang.Class<? extends X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addSubgraph(java.lang.String)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addSubgraph(java.lang.String, java.lang.Class<X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addKeySubgraph(javax.persistence.metamodel.Attribute<J, X>)"], ["<X> org.hibernate.graph.SubGraph<? extends X>", "org.hibernate.graph.SubGraph.addKeySubgraph(javax.persistence.metamodel.Attribute<J, X>, java.lang.Class<? extends X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addKeySubgraph(java.lang.String)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.SubGraph.addKeySubgraph(java.lang.String, java.lang.Class<X>)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addKeySubgraph(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addKeySubgraph(java.lang.String)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addKeySubgraph(javax.persistence.metamodel.Attribute, java.lang.Class)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addKeySubgraph(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addSubgraph(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addSubgraph(java.lang.String)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addSubgraph(javax.persistence.metamodel.Attribute, java.lang.Class)"], ["default", "org.hibernate.graph.SubGraph.javax.persistence.Subgraph addSubgraph(javax.persistence.metamodel.Attribute)"], ["org.hibernate.graph.EntityGraphs", "org.hibernate.graph.EntityGraphs()"], ["<T> javax.persistence.EntityGraph<T>", "org.hibernate.graph.EntityGraphs.merge(javax.persistence.EntityManager, java.lang.Class<T>, javax.persistence.EntityGraph<T>...)"], ["<T> javax.persistence.EntityGraph<T>", "org.hibernate.graph.EntityGraphs.merge(org.hibernate.Session, java.lang.Class<T>, org.hibernate.graph.Graph<T>...)"], ["<T> javax.persistence.EntityGraph<T>", "org.hibernate.graph.EntityGraphs.merge(org.hibernate.engine.spi.SessionImplementor, java.lang.Class<T>, org.hibernate.graph.spi.GraphImplementor<T>...)"], ["java.util.List", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.Query, javax.persistence.EntityGraph, org.hibernate.graph.GraphSemantic)"], ["<R> java.util.List<R>", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.TypedQuery<R>, javax.persistence.EntityGraph<R>, org.hibernate.graph.GraphSemantic)"], ["java.util.List", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.Query, javax.persistence.EntityGraph, java.lang.String)"], ["<R> java.util.List<R>", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.TypedQuery<R>, javax.persistence.EntityGraph<R>, java.lang.String)"], ["java.util.List", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.Query, javax.persistence.EntityGraph)"], ["<R> java.util.List<R>", "org.hibernate.graph.EntityGraphs.executeList(javax.persistence.TypedQuery<R>, javax.persistence.EntityGraph<R>)"], ["<T> boolean", "org.hibernate.graph.EntityGraphs.areEqual(javax.persistence.EntityGraph<T>, javax.persistence.EntityGraph<T>)"], ["boolean", "org.hibernate.graph.EntityGraphs.areEqual(javax.persistence.AttributeNode<?>, javax.persistence.AttributeNode<?>)"], ["boolean", "org.hibernate.graph.EntityGraphs.areEqual(java.util.Map<java.lang.Class, javax.persistence.Subgraph>, java.util.Map<java.lang.Class, javax.persistence.Subgraph>)"], ["boolean", "org.hibernate.graph.EntityGraphs.areEqual(javax.persistence.Subgraph, javax.persistence.Subgraph)"], ["org.hibernate.graph.internal.SubGraphImpl", "org.hibernate.graph.internal.SubGraphImpl(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<J>, boolean, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.graph.internal.SubGraphImpl", "org.hibernate.graph.internal.SubGraphImpl(boolean, org.hibernate.graph.internal.AbstractGraph<J>)"], ["<AJ> org.hibernate.graph.spi.SubGraphImplementor<AJ>", "org.hibernate.graph.internal.SubGraphImpl.addKeySubGraph(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.SubGraphImpl.addAttributeNode(javax.persistence.metamodel.Attribute<? extends J, AJ>)"], ["boolean", "org.hibernate.graph.internal.SubGraphImpl.appliesTo(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<? super J>)"], ["boolean", "org.hibernate.graph.internal.SubGraphImpl.appliesTo(java.lang.Class<? super J>)"], ["org.hibernate.graph.spi.GraphImplementor", "org.hibernate.graph.internal.SubGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.SubGraphImpl.addKeySubGraph(java.lang.String)"], ["org.hibernate.graph.AttributeNode", "org.hibernate.graph.internal.SubGraphImpl.addAttributeNode(javax.persistence.metamodel.Attribute)"], ["org.hibernate.graph.Graph", "org.hibernate.graph.internal.SubGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.SubGraphImpl.makeSubGraph(boolean)"], ["org.hibernate.graph.GraphNode", "org.hibernate.graph.internal.SubGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.spi.GraphNodeImplementor", "org.hibernate.graph.internal.SubGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.internal.AbstractGraph", "org.hibernate.graph.internal.AbstractGraph(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<J>, boolean, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.graph.internal.AbstractGraph.sessionFactory()"], ["void", "org.hibernate.graph.internal.AbstractGraph.merge(org.hibernate.graph.spi.GraphImplementor<J>...)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.AbstractGraph.findAttributeNode(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.AbstractGraph.findAttributeNode(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.AbstractGraph.addAttributeNode(java.lang.String)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.AbstractGraph.addAttributeNode(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>)"], ["<AJ> org.hibernate.graph.spi.AttributeNodeImplementor<AJ>", "org.hibernate.graph.internal.AbstractGraph.findOrCreateAttributeNode(org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<? extends J, AJ>)"], ["org.hibernate.graph.AttributeNode", "org.hibernate.graph.internal.AbstractGraph.addAttributeNode(java.lang.String)"], ["org.hibernate.graph.AttributeNode", "org.hibernate.graph.internal.AbstractGraph.findAttributeNode(java.lang.String)"], ["org.hibernate.graph.RootGraph", "org.hibernate.graph.internal.AbstractGraph.makeRootGraph(java.lang.String, boolean)"], ["javax.persistence.metamodel.ManagedType", "org.hibernate.graph.internal.AbstractGraph.getGraphedType()"], ["org.hibernate.graph.internal.AbstractGraphNode", "org.hibernate.graph.internal.AbstractGraphNode(boolean, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.graph.internal.AbstractGraphNode.isMutable()"], ["org.hibernate.graph.internal.RootGraphImpl", "org.hibernate.graph.internal.RootGraphImpl(java.lang.String, org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<J>, boolean, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.graph.internal.RootGraphImpl", "org.hibernate.graph.internal.RootGraphImpl(java.lang.String, org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<J>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.graph.internal.RootGraphImpl", "org.hibernate.graph.internal.RootGraphImpl(java.lang.String, boolean, org.hibernate.graph.spi.GraphImplementor<J>)"], ["java.lang.String", "org.hibernate.graph.internal.RootGraphImpl.getName()"], ["<T1> org.hibernate.graph.SubGraph<? extends T1>", "org.hibernate.graph.internal.RootGraphImpl.addSubclassSubgraph(java.lang.Class<? extends T1>)"], ["boolean", "org.hibernate.graph.internal.RootGraphImpl.appliesTo(org.hibernate.metamodel.model.domain.spi.EntityTypeDescriptor<? super J>)"], ["boolean", "org.hibernate.graph.internal.RootGraphImpl.appliesTo(java.lang.String)"], ["boolean", "org.hibernate.graph.internal.RootGraphImpl.appliesTo(java.lang.Class)"], ["org.hibernate.graph.spi.GraphImplementor", "org.hibernate.graph.internal.RootGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.Graph", "org.hibernate.graph.internal.RootGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.RootGraphImpl.makeSubGraph(boolean)"], ["org.hibernate.graph.RootGraph", "org.hibernate.graph.internal.RootGraphImpl.makeRootGraph(java.lang.String, boolean)"], ["org.hibernate.graph.GraphNode", "org.hibernate.graph.internal.RootGraphImpl.makeCopy(boolean)"], ["org.hibernate.graph.spi.GraphNodeImplementor", "org.hibernate.graph.internal.RootGraphImpl.makeCopy(boolean)"], ["javax.persistence.Subgraph", "org.hibernate.graph.internal.RootGraphImpl.addSubclassSubgraph(java.lang.Class)"], ["java.lang.String", "org.hibernate.graph.internal.AttributeNodeImpl.getAttributeName()"], ["org.hibernate.metamodel.model.domain.spi.PersistentAttributeDescriptor<?, J>", "org.hibernate.graph.internal.AttributeNodeImpl.getAttributeDescriptor()"], ["java.util.Map<java.lang.Class<? extends J>, org.hibernate.graph.spi.SubGraphImplementor<? extends J>>", "org.hibernate.graph.internal.AttributeNodeImpl.getSubGraphMap()"], ["java.util.Map<java.lang.Class<? extends J>, org.hibernate.graph.spi.SubGraphImplementor<? extends J>>", "org.hibernate.graph.internal.AttributeNodeImpl.getKeySubGraphMap()"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.graph.internal.AttributeNodeImpl.makeSubGraph(java.lang.Class<S>)"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.graph.internal.AttributeNodeImpl.makeSubGraph(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>)"], ["<S extends J> void", "org.hibernate.graph.internal.AttributeNodeImpl.addSubGraph(java.lang.Class<S>, org.hibernate.graph.SubGraph<S>)"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.graph.internal.AttributeNodeImpl.makeKeySubGraph(java.lang.Class<S>)"], ["<S extends J> org.hibernate.graph.spi.SubGraphImplementor<S>", "org.hibernate.graph.internal.AttributeNodeImpl.makeKeySubGraph(org.hibernate.metamodel.model.domain.spi.ManagedTypeDescriptor<S>)"], ["<S extends J> void", "org.hibernate.graph.internal.AttributeNodeImpl.addKeySubGraph(java.lang.Class<S>, org.hibernate.graph.SubGraph<S>)"], ["void", "org.hibernate.graph.internal.AttributeNodeImpl.merge(org.hibernate.graph.spi.AttributeNodeImplementor<?>)"], ["org.hibernate.graph.spi.GraphNodeImplementor", "org.hibernate.graph.internal.AttributeNodeImpl.makeCopy(boolean)"], ["org.hibernate.graph.GraphNode", "org.hibernate.graph.internal.AttributeNodeImpl.makeCopy(boolean)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.AttributeNodeImpl.makeKeySubGraph(java.lang.Class)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.AttributeNodeImpl.makeSubGraph(java.lang.Class)"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.AttributeNodeImpl.makeKeySubGraph()"], ["org.hibernate.graph.SubGraph", "org.hibernate.graph.internal.AttributeNodeImpl.makeSubGraph()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.graph.internal.AttributeNodeImpl.getAttributeDescriptor()"], ["org.hibernate.graph.internal.parse.GraphLexer", "org.hibernate.graph.internal.parse.GraphLexer(java.io.InputStream)"], ["org.hibernate.graph.internal.parse.GraphLexer", "org.hibernate.graph.internal.parse.GraphLexer(java.io.Reader)"], ["org.hibernate.graph.internal.parse.GraphLexer", "org.hibernate.graph.internal.parse.GraphLexer(antlr.InputBuffer)"], ["org.hibernate.graph.internal.parse.GraphLexer", "org.hibernate.graph.internal.parse.GraphLexer(antlr.LexerSharedInputState)"], ["antlr.Token", "org.hibernate.graph.internal.parse.GraphLexer.nextToken()"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mCOLON(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mCOMMA(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mDOT(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mLPAREN(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mRPAREN(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mWHITESPACE(boolean)"], ["void", "org.hibernate.graph.internal.parse.GraphLexer.mNAME(boolean)"], ["org.hibernate.graph.internal.parse.PathQualifierType[]", "org.hibernate.graph.internal.parse.PathQualifierType.values()"], ["org.hibernate.graph.internal.parse.PathQualifierType", "org.hibernate.graph.internal.parse.PathQualifierType.valueOf(java.lang.String)"], ["org.hibernate.graph.internal.parse.SubGraphGenerator", "org.hibernate.graph.internal.parse.PathQualifierType.getSubGraphCreator()"], ["void", "org.hibernate.graph.internal.parse.GraphParser.parseInto(org.hibernate.graph.spi.GraphImplementor<?>, java.lang.CharSequence, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.graph.internal.parse.GeneratedGraphParser", "org.hibernate.graph.internal.parse.GeneratedGraphParser(antlr.TokenBuffer)"], ["org.hibernate.graph.internal.parse.GeneratedGraphParser", "org.hibernate.graph.internal.parse.GeneratedGraphParser(antlr.TokenStream)"], ["org.hibernate.graph.internal.parse.GeneratedGraphParser", "org.hibernate.graph.internal.parse.GeneratedGraphParser(antlr.ParserSharedInputState)"], ["void", "org.hibernate.graph.internal.parse.GeneratedGraphParser.graph()"], ["void", "org.hibernate.graph.internal.parse.GeneratedGraphParser.attributeNode()"], ["void", "org.hibernate.graph.internal.parse.GeneratedGraphParser.attributePath()"], ["void", "org.hibernate.graph.internal.parse.GeneratedGraphParser.subGraph()"], ["org.hibernate.graph.InvalidGraphException", "org.hibernate.graph.InvalidGraphException(java.lang.String)"], ["org.hibernate.graph.CannotContainSubGraphException", "org.hibernate.graph.CannotContainSubGraphException(java.lang.String)"], ["org.hibernate.graph.GraphParser", "org.hibernate.graph.GraphParser()"], ["<T> org.hibernate.graph.RootGraph<T>", "org.hibernate.graph.GraphParser.parse(java.lang.Class<T>, java.lang.CharSequence, javax.persistence.EntityManager)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(org.hibernate.graph.Graph<T>, java.lang.CharSequence, javax.persistence.EntityManager)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(javax.persistence.EntityGraph<T>, java.lang.CharSequence, javax.persistence.EntityManager)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(javax.persistence.Subgraph<T>, java.lang.CharSequence, javax.persistence.EntityManager)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(org.hibernate.graph.Graph<T>, java.lang.CharSequence, javax.persistence.EntityManagerFactory)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(javax.persistence.EntityGraph<T>, java.lang.CharSequence, javax.persistence.EntityManagerFactory)"], ["<T> void", "org.hibernate.graph.GraphParser.parseInto(javax.persistence.Subgraph<T>, java.lang.CharSequence, javax.persistence.EntityManagerFactory)"], ["default", "org.hibernate.graph.Graph.org.hibernate.graph.GraphNode makeCopy(boolean)"], ["java.util.Map<java.lang.Class, javax.persistence.Subgraph>", "org.hibernate.graph.AttributeNode.getSubgraphs()"], ["java.util.Map<java.lang.Class, javax.persistence.Subgraph>", "org.hibernate.graph.AttributeNode.getKeySubgraphs()"], ["default", "org.hibernate.graph.RootGraph.void addAttributeNodes(java.lang.String...)"], ["default", "org.hibernate.graph.RootGraph.void addAttributeNodes(javax.persistence.metamodel.Attribute<J, ?>...)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.RootGraph.addSubgraph(javax.persistence.metamodel.Attribute<J, X>)"], ["<X> org.hibernate.graph.SubGraph<? extends X>", "org.hibernate.graph.RootGraph.addSubgraph(javax.persistence.metamodel.Attribute<J, X>, java.lang.Class<? extends X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.RootGraph.addSubgraph(java.lang.String)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.RootGraph.addSubgraph(java.lang.String, java.lang.Class<X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.RootGraph.addKeySubgraph(javax.persistence.metamodel.Attribute<J, X>)"], ["<X> org.hibernate.graph.SubGraph<? extends X>", "org.hibernate.graph.RootGraph.addKeySubgraph(javax.persistence.metamodel.Attribute<J, X>, java.lang.Class<? extends X>)"], ["<X> org.hibernate.graph.SubGraph<X>", "org.hibernate.graph.RootGraph.addKeySubgraph(java.lang.String)"], ["<X> javax.persistence.Subgraph<X>", "org.hibernate.graph.RootGraph.addKeySubgraph(java.lang.String, java.lang.Class<X>)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addSubclassSubgraph(java.lang.Class)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addKeySubgraph(java.lang.String)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addKeySubgraph(javax.persistence.metamodel.Attribute, java.lang.Class)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addKeySubgraph(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addSubgraph(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addSubgraph(java.lang.String)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addSubgraph(javax.persistence.metamodel.Attribute, java.lang.Class)"], ["default", "org.hibernate.graph.RootGraph.javax.persistence.Subgraph addSubgraph(javax.persistence.metamodel.Attribute)"], ["default", "org.hibernate.Transaction.void markRollbackOnly()"], ["org.hibernate.ResourceClosedException", "org.hibernate.ResourceClosedException(java.lang.String)"], ["org.hibernate.QueryTimeoutException", "org.hibernate.QueryTimeoutException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.ConnectionAcquisitionMode[]", "org.hibernate.ConnectionAcquisitionMode.values()"], ["org.hibernate.ConnectionAcquisitionMode", "org.hibernate.ConnectionAcquisitionMode.valueOf(java.lang.String)"], ["org.hibernate.ConnectionAcquisitionMode", "org.hibernate.ConnectionAcquisitionMode.interpret(java.lang.String)"], ["org.hibernate.ConnectionAcquisitionMode", "org.hibernate.ConnectionAcquisitionMode.interpret(java.lang.Object)"], ["org.hibernate.sql.Alias", "org.hibernate.sql.Alias(int, java.lang.String)"], ["org.hibernate.sql.Alias", "org.hibernate.sql.Alias(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Alias.toAliasString(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Alias.toUnquotedAliasString(java.lang.String)"], ["java.lang.String[]", "org.hibernate.sql.Alias.toUnquotedAliasStrings(java.lang.String[])"], ["java.lang.String[]", "org.hibernate.sql.Alias.toAliasStrings(java.lang.String[])"], ["org.hibernate.sql.CacheJoinFragment", "org.hibernate.sql.CacheJoinFragment()"], ["void", "org.hibernate.sql.CacheJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["org.hibernate.sql.SelectValues", "org.hibernate.sql.SelectValues(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.SelectValues", "org.hibernate.sql.SelectValues.addColumns(java.lang.String, java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.SelectValues", "org.hibernate.sql.SelectValues.addColumn(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.sql.SelectValues", "org.hibernate.sql.SelectValues.addParameter(int, int)"], ["org.hibernate.sql.SelectValues", "org.hibernate.sql.SelectValues.addParameter(int, int, int)"], ["java.lang.String", "org.hibernate.sql.SelectValues.render()"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect.setTableName(java.lang.String)"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect.setComment(java.lang.String)"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect.addColumn(java.lang.String)"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect.addColumns(java.lang.String[])"], ["org.hibernate.sql.InsertSelect", "org.hibernate.sql.InsertSelect.setSelect(org.hibernate.sql.Select)"], ["java.lang.String", "org.hibernate.sql.InsertSelect.toStatementString()"], ["org.hibernate.sql.QueryJoinFragment", "org.hibernate.sql.QueryJoinFragment(org.hibernate.dialect.Dialect, boolean)"], ["void", "org.hibernate.sql.QueryJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.sql.QueryJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.sql.QueryJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.sql.QueryJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["java.lang.String", "org.hibernate.sql.QueryJoinFragment.toFromFragmentString()"], ["java.lang.String", "org.hibernate.sql.QueryJoinFragment.toWhereFragmentString()"], ["void", "org.hibernate.sql.QueryJoinFragment.addJoins(java.lang.String, java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.QueryJoinFragment.copy()"], ["void", "org.hibernate.sql.QueryJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String)"], ["void", "org.hibernate.sql.QueryJoinFragment.addCrossJoin(java.lang.String, java.lang.String)"], ["void", "org.hibernate.sql.QueryJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String[])"], ["void", "org.hibernate.sql.QueryJoinFragment.addCondition(java.lang.String, java.lang.String[][], java.lang.String[])"], ["boolean", "org.hibernate.sql.QueryJoinFragment.addCondition(java.lang.String)"], ["void", "org.hibernate.sql.QueryJoinFragment.addFromFragmentString(java.lang.String)"], ["void", "org.hibernate.sql.QueryJoinFragment.clearWherePart()"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment()"], ["java.lang.String", "org.hibernate.sql.SelectFragment.getExtraSelectList()"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.setUsedAliases(java.lang.String[])"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.setExtraSelectList(java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.setExtraSelectList(org.hibernate.sql.CaseFragment, java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.setSuffix(java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumn(java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumns(java.lang.String[])"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumn(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumns(java.lang.String, java.lang.String[])"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumns(java.lang.String, java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addFormulas(java.lang.String, java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addFormula(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumnTemplate(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.sql.SelectFragment.addColumnTemplates(java.lang.String, java.lang.String[], java.lang.String[])"], ["java.lang.String", "org.hibernate.sql.SelectFragment.toFragmentString()"], ["org.hibernate.sql.ast.Clause[]", "org.hibernate.sql.ast.Clause.values()"], ["org.hibernate.sql.ast.Clause", "org.hibernate.sql.ast.Clause.valueOf(java.lang.String)"], ["org.hibernate.sql.ConditionFragment", "org.hibernate.sql.ConditionFragment()"], ["org.hibernate.sql.ConditionFragment", "org.hibernate.sql.ConditionFragment.setOp(java.lang.String)"], ["org.hibernate.sql.ConditionFragment", "org.hibernate.sql.ConditionFragment.setTableAlias(java.lang.String)"], ["org.hibernate.sql.ConditionFragment", "org.hibernate.sql.ConditionFragment.setCondition(java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.ConditionFragment", "org.hibernate.sql.ConditionFragment.setCondition(java.lang.String[], java.lang.String)"], ["java.lang.String", "org.hibernate.sql.ConditionFragment.toFragmentString()"], ["org.hibernate.sql.ForUpdateFragment", "org.hibernate.sql.ForUpdateFragment(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.ForUpdateFragment", "org.hibernate.sql.ForUpdateFragment(org.hibernate.dialect.Dialect, org.hibernate.LockOptions, java.util.Map<java.lang.String, java.lang.String[]>)"], ["org.hibernate.sql.ForUpdateFragment", "org.hibernate.sql.ForUpdateFragment.addTableAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.ForUpdateFragment.toFragmentString()"], ["org.hibernate.sql.ForUpdateFragment", "org.hibernate.sql.ForUpdateFragment.setNowaitEnabled(boolean)"], ["org.hibernate.sql.ForUpdateFragment", "org.hibernate.sql.ForUpdateFragment.setSkipLockedEnabled(boolean)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addColumns(java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addColumns(java.lang.String[], java.lang.String[], boolean[])"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addColumns(java.lang.String[])"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addColumn(java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.setTableName(java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addWhereToken(java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addCondition(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addCondition(java.lang.String, java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addCondition(java.lang.String[], java.lang.String, java.lang.String[])"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.addCondition(java.lang.String[], java.lang.String)"], ["java.lang.String", "org.hibernate.sql.SimpleSelect.toStatementString()"], ["java.lang.String", "org.hibernate.sql.SimpleSelect.toWhereClause()"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.setOrderBy(java.lang.String)"], ["org.hibernate.sql.SimpleSelect", "org.hibernate.sql.SimpleSelect.setComment(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Template$1.resolveTableAlias(java.lang.String)"], ["org.hibernate.sql.HSQLCaseFragment", "org.hibernate.sql.HSQLCaseFragment()"], ["java.lang.String", "org.hibernate.sql.HSQLCaseFragment.toFragmentString()"], ["org.hibernate.sql.DisjunctionFragment", "org.hibernate.sql.DisjunctionFragment()"], ["org.hibernate.sql.DisjunctionFragment", "org.hibernate.sql.DisjunctionFragment.addCondition(org.hibernate.sql.ConditionFragment)"], ["org.hibernate.sql.DisjunctionFragment", "org.hibernate.sql.DisjunctionFragment.addCondition(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.DisjunctionFragment.toFragmentString()"], ["java.lang.String", "org.hibernate.sql.Template.renderTransformerReadFragment(java.lang.String, java.lang.String...)"], ["java.lang.String", "org.hibernate.sql.Template.renderWhereStringTemplate(java.lang.String, org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["java.lang.String", "org.hibernate.sql.Template.renderWhereStringTemplate(java.lang.String, java.lang.String, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.sql.Template.renderWhereStringTemplate(java.lang.String, java.lang.String, org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["java.lang.String", "org.hibernate.sql.Template.renderOrderByStringTemplate(java.lang.String, org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["java.lang.String", "org.hibernate.sql.Template.renderOrderByStringTemplate(java.lang.String, org.hibernate.sql.ordering.antlr.ColumnMapper, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["org.hibernate.sql.ordering.antlr.OrderByTranslation", "org.hibernate.sql.Template.translateOrderBy(java.lang.String, org.hibernate.sql.ordering.antlr.ColumnMapper, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["org.hibernate.sql.QuerySelect", "org.hibernate.sql.QuerySelect(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.QuerySelect.getJoinFragment()"], ["void", "org.hibernate.sql.QuerySelect.addSelectFragmentString(java.lang.String)"], ["void", "org.hibernate.sql.QuerySelect.addSelectColumn(java.lang.String, java.lang.String)"], ["void", "org.hibernate.sql.QuerySelect.setDistinct(boolean)"], ["void", "org.hibernate.sql.QuerySelect.setWhereTokens(java.util.Iterator)"], ["void", "org.hibernate.sql.QuerySelect.prependWhereConditions(java.lang.String)"], ["void", "org.hibernate.sql.QuerySelect.setGroupByTokens(java.util.Iterator)"], ["void", "org.hibernate.sql.QuerySelect.setOrderByTokens(java.util.Iterator)"], ["void", "org.hibernate.sql.QuerySelect.setHavingTokens(java.util.Iterator)"], ["void", "org.hibernate.sql.QuerySelect.addOrderBy(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.QuerySelect.toQueryString()"], ["void", "org.hibernate.sql.QuerySelect.setComment(java.lang.String)"], ["org.hibernate.sql.QuerySelect", "org.hibernate.sql.QuerySelect.copy()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.JoinFragment()"], ["void", "org.hibernate.sql.JoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.sql.JoinFragment.addFragment(org.hibernate.sql.JoinFragment)"], ["boolean", "org.hibernate.sql.JoinFragment.hasFilterCondition()"], ["void", "org.hibernate.sql.JoinFragment.setHasFilterCondition(boolean)"], ["boolean", "org.hibernate.sql.JoinFragment.hasThetaJoins()"], ["void", "org.hibernate.sql.JoinFragment.setHasThetaJoins(boolean)"], ["org.hibernate.sql.ordering.antlr.CollationSpecification", "org.hibernate.sql.ordering.antlr.CollationSpecification()"], ["org.hibernate.sql.ordering.antlr.OrderByFragment", "org.hibernate.sql.ordering.antlr.OrderByFragment()"], ["org.hibernate.sql.ordering.antlr.OrderByFragmentParser", "org.hibernate.sql.ordering.antlr.OrderByFragmentParser(antlr.TokenStream, org.hibernate.sql.ordering.antlr.TranslationContext)"], ["void", "org.hibernate.sql.ordering.antlr.OrderByFragmentParser.traceIn(java.lang.String)"], ["void", "org.hibernate.sql.ordering.antlr.OrderByFragmentParser.traceOut(java.lang.String)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser(antlr.TokenBuffer)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser(antlr.TokenStream)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser(antlr.ParserSharedInputState)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.orderByFragment()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.sortSpecification()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.sortKey()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.collationSpecification()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.orderingSpecification()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.nullOrdering()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.expression()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.functionCall()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.simplePropertyPath()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.functionCallCheck()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.functionName()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.functionParameterList()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.functionParameter()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.collationName()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentParser.nullPrecedence()"], ["org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator$StandardOrderByTranslationImpl", "org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator$StandardOrderByTranslationImpl(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator$StandardOrderByTranslationImpl.injectAliases(org.hibernate.sql.ordering.antlr.OrderByAliasResolver)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer(java.io.InputStream)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer(java.io.Reader)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer(antlr.InputBuffer)"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer(antlr.LexerSharedInputState)"], ["antlr.Token", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.nextToken()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mOPEN_PAREN(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mCLOSE_PAREN(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mCOMMA(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mHARD_QUOTE(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mIDENT(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mQUOTED_STRING(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mNUM_INT(boolean)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByLexer.mWS(boolean)"], ["org.hibernate.sql.ordering.antlr.SortKey", "org.hibernate.sql.ordering.antlr.SortKey()"], ["org.hibernate.sql.ordering.antlr.SortSpecification", "org.hibernate.sql.ordering.antlr.SortSpecification()"], ["org.hibernate.sql.ordering.antlr.SortKey", "org.hibernate.sql.ordering.antlr.SortSpecification.getSortKey()"], ["org.hibernate.sql.ordering.antlr.CollationSpecification", "org.hibernate.sql.ordering.antlr.SortSpecification.getCollation()"], ["org.hibernate.sql.ordering.antlr.OrderingSpecification", "org.hibernate.sql.ordering.antlr.SortSpecification.getOrdering()"], ["org.hibernate.sql.ordering.antlr.Factory", "org.hibernate.sql.ordering.antlr.Factory()"], ["java.lang.Class", "org.hibernate.sql.ordering.antlr.Factory.getASTNodeType(int)"], ["org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator", "org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator()"], ["org.hibernate.sql.ordering.antlr.OrderByTranslation", "org.hibernate.sql.ordering.antlr.OrderByFragmentTranslator.translate(org.hibernate.sql.ordering.antlr.TranslationContext, java.lang.String)"], ["org.hibernate.sql.ordering.antlr.NodeSupport", "org.hibernate.sql.ordering.antlr.NodeSupport()"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.NodeSupport.getDebugText()"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.NodeSupport.getRenderableText()"], ["org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer()"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.orderByFragment(antlr.collections.AST)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.sortSpecification(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.sortKeySpecification(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.collationSpecification(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.orderingSpecification(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.nullOrdering(antlr.collections.AST)"], ["void", "org.hibernate.sql.ordering.antlr.GeneratedOrderByFragmentRenderer.sortKey(antlr.collections.AST)"], ["org.hibernate.sql.ordering.antlr.OrderByFragmentRenderer", "org.hibernate.sql.ordering.antlr.OrderByFragmentRenderer(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.sql.ordering.antlr.OrderByFragmentRenderer.traceIn(java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.sql.ordering.antlr.OrderByFragmentRenderer.traceOut(java.lang.String, antlr.collections.AST)"], ["org.hibernate.sql.ordering.antlr.OrderingSpecification", "org.hibernate.sql.ordering.antlr.OrderingSpecification()"], ["org.hibernate.sql.ordering.antlr.OrderingSpecification$Ordering", "org.hibernate.sql.ordering.antlr.OrderingSpecification.getOrdering()"], ["java.lang.String", "org.hibernate.sql.ordering.antlr.OrderingSpecification.getRenderableText()"], ["org.hibernate.sql.MckoiCaseFragment", "org.hibernate.sql.MckoiCaseFragment()"], ["java.lang.String", "org.hibernate.sql.MckoiCaseFragment.toFragmentString()"], ["org.hibernate.sql.ANSIJoinFragment", "org.hibernate.sql.ANSIJoinFragment()"], ["void", "org.hibernate.sql.ANSIJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.sql.ANSIJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.sql.ANSIJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["java.lang.String", "org.hibernate.sql.ANSIJoinFragment.toFromFragmentString()"], ["java.lang.String", "org.hibernate.sql.ANSIJoinFragment.toWhereFragmentString()"], ["void", "org.hibernate.sql.ANSIJoinFragment.addJoins(java.lang.String, java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.ANSIJoinFragment.copy()"], ["void", "org.hibernate.sql.ANSIJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String)"], ["void", "org.hibernate.sql.ANSIJoinFragment.addCrossJoin(java.lang.String, java.lang.String)"], ["void", "org.hibernate.sql.ANSIJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String[])"], ["boolean", "org.hibernate.sql.ANSIJoinFragment.addCondition(java.lang.String)"], ["void", "org.hibernate.sql.ANSIJoinFragment.addFromFragmentString(java.lang.String)"], ["org.hibernate.sql.Sybase11JoinFragment", "org.hibernate.sql.Sybase11JoinFragment()"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType)"], ["java.lang.String", "org.hibernate.sql.Sybase11JoinFragment.toFromFragmentString()"], ["java.lang.String", "org.hibernate.sql.Sybase11JoinFragment.toWhereFragmentString()"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addJoins(java.lang.String, java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.Sybase11JoinFragment.copy()"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addCrossJoin(java.lang.String, java.lang.String)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String[])"], ["boolean", "org.hibernate.sql.Sybase11JoinFragment.addCondition(java.lang.String)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addFromFragmentString(java.lang.String)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.sql.Sybase11JoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.sql.Update.getTableName()"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.appendAssignmentFragment(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.setTableName(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.setPrimaryKeyColumnNames(java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addPrimaryKeyColumns(java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addPrimaryKeyColumns(java.lang.String[], boolean[], java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addPrimaryKeyColumns(java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addPrimaryKeyColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.setVersionColumnName(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.setComment(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumns(java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumns(java.lang.String[], boolean[], java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumns(java.lang.String[], java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumn(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addColumn(java.lang.String, java.lang.Object, org.hibernate.type.LiteralType)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addWhereColumns(java.lang.String[])"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addWhereColumns(java.lang.String[], java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addWhereColumn(java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.addWhereColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Update", "org.hibernate.sql.Update.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Update.toStatementString()"], ["org.hibernate.sql.DecodeCaseFragment", "org.hibernate.sql.DecodeCaseFragment()"], ["java.lang.String", "org.hibernate.sql.DecodeCaseFragment.toFragmentString()"], ["org.hibernate.sql.JoinType[]", "org.hibernate.sql.JoinType.values()"], ["org.hibernate.sql.JoinType", "org.hibernate.sql.JoinType.valueOf(java.lang.String)"], ["int", "org.hibernate.sql.JoinType.getJoinTypeValue()"], ["org.hibernate.sql.JoinType", "org.hibernate.sql.JoinType.parse(int)"], ["org.hibernate.sql.CaseFragment", "org.hibernate.sql.CaseFragment()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.sql.CaseFragment.setReturnColumnName(java.lang.String)"], ["org.hibernate.sql.CaseFragment", "org.hibernate.sql.CaseFragment.setReturnColumnName(java.lang.String, java.lang.String)"], ["org.hibernate.sql.CaseFragment", "org.hibernate.sql.CaseFragment.addWhenColumnNotNull(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.sql.Template$2.getSessionFactory()"], ["org.hibernate.dialect.Dialect", "org.hibernate.sql.Template$2.getDialect()"], ["org.hibernate.dialect.function.SQLFunctionRegistry", "org.hibernate.sql.Template$2.getSqlFunctionRegistry()"], ["org.hibernate.sql.ordering.antlr.ColumnMapper", "org.hibernate.sql.Template$2.getColumnMapper()"], ["org.hibernate.sql.ANSICaseFragment", "org.hibernate.sql.ANSICaseFragment()"], ["java.lang.String", "org.hibernate.sql.ANSICaseFragment.toFragmentString()"], ["org.hibernate.sql.OracleJoinFragment", "org.hibernate.sql.OracleJoinFragment()"], ["void", "org.hibernate.sql.OracleJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.sql.OracleJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType)"], ["java.lang.String", "org.hibernate.sql.OracleJoinFragment.toFromFragmentString()"], ["java.lang.String", "org.hibernate.sql.OracleJoinFragment.toWhereFragmentString()"], ["void", "org.hibernate.sql.OracleJoinFragment.addJoins(java.lang.String, java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.sql.OracleJoinFragment.copy()"], ["void", "org.hibernate.sql.OracleJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String)"], ["void", "org.hibernate.sql.OracleJoinFragment.addCrossJoin(java.lang.String, java.lang.String)"], ["void", "org.hibernate.sql.OracleJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String[])"], ["boolean", "org.hibernate.sql.OracleJoinFragment.addCondition(java.lang.String)"], ["void", "org.hibernate.sql.OracleJoinFragment.addFromFragmentString(java.lang.String)"], ["void", "org.hibernate.sql.OracleJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.sql.OracleJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment()"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment.addValue(java.lang.Object)"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment.addValues(java.lang.Object[])"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment.setColumn(java.lang.String)"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment.setColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.InFragment", "org.hibernate.sql.InFragment.setFormula(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.sql.InFragment.toFragmentString()"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete()"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.setComment(java.lang.String)"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.setTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Delete.toStatementString()"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.setWhere(java.lang.String)"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.addWhereFragment(java.lang.String)"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.setPrimaryKeyColumnNames(java.lang.String[])"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.addPrimaryKeyColumns(java.lang.String[])"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.addPrimaryKeyColumns(java.lang.String[], boolean[], java.lang.String[])"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.addPrimaryKeyColumns(java.lang.String[], java.lang.String[])"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.addPrimaryKeyColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Delete", "org.hibernate.sql.Delete.setVersionColumnName(java.lang.String)"], ["org.hibernate.sql.DerbyCaseFragment", "org.hibernate.sql.DerbyCaseFragment()"], ["java.lang.String", "org.hibernate.sql.DerbyCaseFragment.toFragmentString()"], ["org.hibernate.sql.Template$NoOpColumnMapper", "org.hibernate.sql.Template$NoOpColumnMapper()"], ["org.hibernate.sql.ordering.antlr.SqlValueReference[]", "org.hibernate.sql.Template$NoOpColumnMapper.map(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.sql.Select.toStatementString()"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setFromClause(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setFromClause(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setOrderByClause(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setGroupByClause(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setOuterJoins(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setSelectClause(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setSelectClause(org.hibernate.sql.SelectFragment)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setWhereClause(java.lang.String)"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setComment(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.sql.Select.getLockMode()"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.LockOptions", "org.hibernate.sql.Select.getLockOptions()"], ["org.hibernate.sql.Select", "org.hibernate.sql.Select.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert(org.hibernate.dialect.Dialect)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.setComment(java.lang.String)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumn(java.lang.String)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumns(java.lang.String[])"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumns(java.lang.String[], boolean[])"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumns(java.lang.String[], boolean[], java.lang.String[])"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumn(java.lang.String, java.lang.String)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addColumn(java.lang.String, java.lang.Object, org.hibernate.type.LiteralType)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.addIdentityColumn(java.lang.String)"], ["org.hibernate.sql.Insert", "org.hibernate.sql.Insert.setTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.sql.Insert.toStatementString()"], ["org.hibernate.cfg.SecondaryTableSecondPass", "org.hibernate.cfg.SecondaryTableSecondPass(org.hibernate.cfg.annotations.EntityBinder, org.hibernate.cfg.PropertyHolder, org.hibernate.annotations.common.reflection.XAnnotatedElement)"], ["void", "org.hibernate.cfg.SecondaryTableSecondPass.doSecondPass(java.util.Map)"], ["java.lang.String", "org.hibernate.cfg.PropertyInferredData.toString()"], ["org.hibernate.cfg.PropertyInferredData", "org.hibernate.cfg.PropertyInferredData(org.hibernate.annotations.common.reflection.XClass, org.hibernate.annotations.common.reflection.XProperty, java.lang.String, org.hibernate.annotations.common.reflection.ReflectionManager)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.PropertyInferredData.getDefaultAccess()"], ["java.lang.String", "org.hibernate.cfg.PropertyInferredData.getPropertyName()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyInferredData.getPropertyClass()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyInferredData.getClassOrElement()"], ["java.lang.String", "org.hibernate.cfg.PropertyInferredData.getClassOrElementName()"], ["java.lang.String", "org.hibernate.cfg.PropertyInferredData.getTypeName()"], ["org.hibernate.annotations.common.reflection.XProperty", "org.hibernate.cfg.PropertyInferredData.getProperty()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyInferredData.getDeclaringClass()"], ["org.hibernate.cfg.FkSecondPass", "org.hibernate.cfg.FkSecondPass(org.hibernate.mapping.SimpleValue, org.hibernate.cfg.Ejb3JoinColumn[])"], ["int", "org.hibernate.cfg.FkSecondPass.getUniqueCounter()"], ["org.hibernate.mapping.Value", "org.hibernate.cfg.FkSecondPass.getValue()"], ["boolean", "org.hibernate.cfg.FkSecondPass.equals(java.lang.Object)"], ["int", "org.hibernate.cfg.FkSecondPass.hashCode()"], ["org.hibernate.cfg.VerifyFetchProfileReferenceSecondPass", "org.hibernate.cfg.VerifyFetchProfileReferenceSecondPass(java.lang.String, org.hibernate.annotations.FetchProfile$FetchOverride, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.VerifyFetchProfileReferenceSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration(org.hibernate.boot.registry.BootstrapServiceRegistry)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration(org.hibernate.boot.MetadataSources)"], ["java.util.Properties", "org.hibernate.cfg.Configuration.getProperties()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.setProperties(java.util.Properties)"], ["java.lang.String", "org.hibernate.cfg.Configuration.getProperty(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.setProperty(java.lang.String, java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addProperties(java.util.Properties)"], ["void", "org.hibernate.cfg.Configuration.setImplicitNamingStrategy(org.hibernate.boot.model.naming.ImplicitNamingStrategy)"], ["void", "org.hibernate.cfg.Configuration.setPhysicalNamingStrategy(org.hibernate.boot.model.naming.PhysicalNamingStrategy)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.configure()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.configure(java.lang.String)"], ["org.hibernate.boot.registry.StandardServiceRegistryBuilder", "org.hibernate.cfg.Configuration.getStandardServiceRegistryBuilder()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.configure(java.net.URL)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.configure(java.io.File)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.configure(org.w3c.dom.Document)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.registerTypeContributor(org.hibernate.boot.model.TypeContributor)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.registerTypeOverride(org.hibernate.type.BasicType)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.registerTypeOverride(org.hibernate.usertype.UserType, java.lang.String[])"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.registerTypeOverride(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addFile(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addFile(java.io.File)"], ["void", "org.hibernate.cfg.Configuration.add(org.hibernate.internal.util.xml.XmlDocument)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addCacheableFile(java.io.File)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addCacheableFileStrictly(java.io.File)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addCacheableFile(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addXML(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addURL(java.net.URL)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addDocument(org.w3c.dom.Document)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addInputStream(java.io.InputStream)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addResource(java.lang.String, java.lang.ClassLoader)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addResource(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addClass(java.lang.Class)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addAnnotatedClass(java.lang.Class)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addPackage(java.lang.String)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addJar(java.io.File)"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.addDirectory(java.io.File)"], ["org.hibernate.Interceptor", "org.hibernate.cfg.Configuration.getInterceptor()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.setInterceptor(org.hibernate.Interceptor)"], ["org.hibernate.tuple.entity.EntityTuplizerFactory", "org.hibernate.cfg.Configuration.getEntityTuplizerFactory()"], ["org.hibernate.proxy.EntityNotFoundDelegate", "org.hibernate.cfg.Configuration.getEntityNotFoundDelegate()"], ["void", "org.hibernate.cfg.Configuration.setEntityNotFoundDelegate(org.hibernate.proxy.EntityNotFoundDelegate)"], ["org.hibernate.SessionFactoryObserver", "org.hibernate.cfg.Configuration.getSessionFactoryObserver()"], ["void", "org.hibernate.cfg.Configuration.setSessionFactoryObserver(org.hibernate.SessionFactoryObserver)"], ["org.hibernate.context.spi.CurrentTenantIdentifierResolver", "org.hibernate.cfg.Configuration.getCurrentTenantIdentifierResolver()"], ["void", "org.hibernate.cfg.Configuration.setCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)"], ["org.hibernate.SessionFactory", "org.hibernate.cfg.Configuration.buildSessionFactory(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.SessionFactory", "org.hibernate.cfg.Configuration.buildSessionFactory()"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.cfg.Configuration.getSqlFunctions()"], ["void", "org.hibernate.cfg.Configuration.addSqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction)"], ["void", "org.hibernate.cfg.Configuration.addAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.AuxiliaryDatabaseObject)"], ["void", "org.hibernate.cfg.Configuration.addAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>, boolean)"], ["void", "org.hibernate.cfg.Configuration.addAttributeConverter(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["void", "org.hibernate.cfg.Configuration.addAttributeConverter(javax.persistence.AttributeConverter)"], ["void", "org.hibernate.cfg.Configuration.addAttributeConverter(javax.persistence.AttributeConverter, boolean)"], ["void", "org.hibernate.cfg.Configuration.addAttributeConverter(org.hibernate.cfg.AttributeConverterDefinition)"], ["void", "org.hibernate.cfg.Configuration.setSharedCacheMode(javax.persistence.SharedCacheMode)"], ["java.util.Map", "org.hibernate.cfg.Configuration.getNamedSQLQueries()"], ["java.util.Map", "org.hibernate.cfg.Configuration.getSqlResultSetMappings()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition>", "org.hibernate.cfg.Configuration.getNamedQueries()"], ["java.util.Map<java.lang.String, org.hibernate.cfg.annotations.NamedProcedureCallDefinition>", "org.hibernate.cfg.Configuration.getNamedProcedureCallMap()"], ["void", "org.hibernate.cfg.Configuration.buildMappings()"], ["org.hibernate.cfg.Configuration", "org.hibernate.cfg.Configuration.mergeProperties(java.util.Properties)"], ["org.hibernate.cfg.PropertyPreloadedData", "org.hibernate.cfg.PropertyPreloadedData(org.hibernate.cfg.AccessType, java.lang.String, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.PropertyPreloadedData.getDefaultAccess()"], ["java.lang.String", "org.hibernate.cfg.PropertyPreloadedData.getPropertyName()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyPreloadedData.getClassOrElement()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyPreloadedData.getPropertyClass()"], ["java.lang.String", "org.hibernate.cfg.PropertyPreloadedData.getClassOrElementName()"], ["java.lang.String", "org.hibernate.cfg.PropertyPreloadedData.getTypeName()"], ["org.hibernate.annotations.common.reflection.XProperty", "org.hibernate.cfg.PropertyPreloadedData.getProperty()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyPreloadedData.getDeclaringClass()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.Ejb3Column$1.getAttributePath()"], ["boolean", "org.hibernate.cfg.Ejb3Column$1.isCollectionElement()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.Ejb3Column$1.getBuildingContext()"], ["org.hibernate.cfg.IndexColumn", "org.hibernate.cfg.IndexColumn(boolean, java.lang.String, int, int, int, java.lang.String, boolean, boolean, boolean, boolean, java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["int", "org.hibernate.cfg.IndexColumn.getBase()"], ["void", "org.hibernate.cfg.IndexColumn.setBase(int)"], ["org.hibernate.cfg.IndexColumn", "org.hibernate.cfg.IndexColumn.buildColumnFromAnnotation(javax.persistence.OrderColumn, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.IndexColumn", "org.hibernate.cfg.IndexColumn.buildColumnFromAnnotation(org.hibernate.annotations.IndexColumn, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.EJB3DTDEntityResolver", "org.hibernate.cfg.EJB3DTDEntityResolver()"], ["boolean", "org.hibernate.cfg.EJB3DTDEntityResolver.isResolved()"], ["org.xml.sax.InputSource", "org.hibernate.cfg.EJB3DTDEntityResolver.resolveEntity(java.lang.String, java.lang.String)"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.WrappedInferredData.getClassOrElement()"], ["java.lang.String", "org.hibernate.cfg.WrappedInferredData.getClassOrElementName()"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.WrappedInferredData.getDefaultAccess()"], ["org.hibernate.annotations.common.reflection.XProperty", "org.hibernate.cfg.WrappedInferredData.getProperty()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.WrappedInferredData.getDeclaringClass()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.WrappedInferredData.getPropertyClass()"], ["java.lang.String", "org.hibernate.cfg.WrappedInferredData.getPropertyName()"], ["java.lang.String", "org.hibernate.cfg.WrappedInferredData.getTypeName()"], ["org.hibernate.cfg.WrappedInferredData", "org.hibernate.cfg.WrappedInferredData(org.hibernate.cfg.PropertyData, java.lang.String)"], ["org.hibernate.cfg.IdGeneratorResolverSecondPass", "org.hibernate.cfg.IdGeneratorResolverSecondPass(org.hibernate.mapping.SimpleValue, org.hibernate.annotations.common.reflection.XProperty, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.IdGeneratorResolverSecondPass", "org.hibernate.cfg.IdGeneratorResolverSecondPass(org.hibernate.mapping.SimpleValue, org.hibernate.annotations.common.reflection.XProperty, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.boot.model.IdentifierGeneratorDefinition)"], ["void", "org.hibernate.cfg.IdGeneratorResolverSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.ToOneFkSecondPass", "org.hibernate.cfg.ToOneFkSecondPass(org.hibernate.mapping.ToOne, org.hibernate.cfg.Ejb3JoinColumn[], boolean, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.ToOneFkSecondPass.getReferencedEntityName()"], ["boolean", "org.hibernate.cfg.ToOneFkSecondPass.isInPrimaryKey()"], ["void", "org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.AttributeConverterDefinition", "org.hibernate.cfg.AttributeConverterDefinition.from(java.lang.Class<? extends javax.persistence.AttributeConverter>, boolean)"], ["org.hibernate.cfg.AttributeConverterDefinition", "org.hibernate.cfg.AttributeConverterDefinition.from(java.lang.Class<? extends javax.persistence.AttributeConverter>)"], ["org.hibernate.cfg.AttributeConverterDefinition", "org.hibernate.cfg.AttributeConverterDefinition.from(javax.persistence.AttributeConverter)"], ["org.hibernate.cfg.AttributeConverterDefinition", "org.hibernate.cfg.AttributeConverterDefinition.from(javax.persistence.AttributeConverter, boolean)"], ["org.hibernate.cfg.AttributeConverterDefinition", "org.hibernate.cfg.AttributeConverterDefinition(javax.persistence.AttributeConverter, boolean)"], ["javax.persistence.AttributeConverter", "org.hibernate.cfg.AttributeConverterDefinition.getAttributeConverter()"], ["boolean", "org.hibernate.cfg.AttributeConverterDefinition.isAutoApply()"], ["java.lang.Class", "org.hibernate.cfg.AttributeConverterDefinition.getEntityAttributeType()"], ["java.lang.Class", "org.hibernate.cfg.AttributeConverterDefinition.getDatabaseColumnType()"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.cfg.AttributeConverterDefinition.getConverterClass()"], ["java.lang.String", "org.hibernate.cfg.AttributeConverterDefinition.toString()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.cfg.AttributeConverterDefinition.toConverterDescriptor(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.ColumnsBuilder", "org.hibernate.cfg.ColumnsBuilder(org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.annotations.Nullability, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.cfg.PropertyData, org.hibernate.cfg.annotations.EntityBinder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.Ejb3Column[]", "org.hibernate.cfg.ColumnsBuilder.getColumns()"], ["org.hibernate.cfg.Ejb3JoinColumn[]", "org.hibernate.cfg.ColumnsBuilder.getJoinColumns()"], ["org.hibernate.cfg.ColumnsBuilder", "org.hibernate.cfg.ColumnsBuilder.extractMetadata()"], ["org.hibernate.cfg.IndexOrUniqueKeySecondPass", "org.hibernate.cfg.IndexOrUniqueKeySecondPass(org.hibernate.mapping.Table, java.lang.String, java.lang.String[], org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.IndexOrUniqueKeySecondPass", "org.hibernate.cfg.IndexOrUniqueKeySecondPass(java.lang.String, org.hibernate.cfg.Ejb3Column, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.IndexOrUniqueKeySecondPass", "org.hibernate.cfg.IndexOrUniqueKeySecondPass(java.lang.String, org.hibernate.cfg.Ejb3Column, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.IndexOrUniqueKeySecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.Ejb3DiscriminatorColumn", "org.hibernate.cfg.Ejb3DiscriminatorColumn()"], ["java.lang.String", "org.hibernate.cfg.Ejb3DiscriminatorColumn.getDiscriminatorTypeName()"], ["void", "org.hibernate.cfg.Ejb3DiscriminatorColumn.setDiscriminatorTypeName(java.lang.String)"], ["org.hibernate.cfg.Ejb3DiscriminatorColumn", "org.hibernate.cfg.Ejb3DiscriminatorColumn.buildDiscriminatorColumn(javax.persistence.DiscriminatorType, javax.persistence.DiscriminatorColumn, org.hibernate.annotations.DiscriminatorFormula, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.Ejb3DiscriminatorColumn.toString()"], ["org.hibernate.cfg.JPAIndexHolder", "org.hibernate.cfg.JPAIndexHolder(javax.persistence.Index)"], ["java.lang.String[]", "org.hibernate.cfg.JPAIndexHolder.getColumns()"], ["java.lang.String", "org.hibernate.cfg.JPAIndexHolder.getName()"], ["java.lang.String[]", "org.hibernate.cfg.JPAIndexHolder.getOrdering()"], ["boolean", "org.hibernate.cfg.JPAIndexHolder.isUnique()"], ["org.hibernate.cfg.CollectionSecondPass", "org.hibernate.cfg.CollectionSecondPass(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Collection, java.util.Map)"], ["org.hibernate.cfg.CollectionSecondPass", "org.hibernate.cfg.CollectionSecondPass(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Collection)"], ["void", "org.hibernate.cfg.CollectionSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.JoinedSubclassFkSecondPass", "org.hibernate.cfg.JoinedSubclassFkSecondPass(org.hibernate.mapping.JoinedSubclass, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.SimpleValue, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.JoinedSubclassFkSecondPass.getReferencedEntityName()"], ["boolean", "org.hibernate.cfg.JoinedSubclassFkSecondPass.isInPrimaryKey()"], ["void", "org.hibernate.cfg.JoinedSubclassFkSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.beanvalidation.HibernateTraversableResolver", "org.hibernate.cfg.beanvalidation.HibernateTraversableResolver(org.hibernate.persister.entity.EntityPersister, java.util.concurrent.ConcurrentHashMap<org.hibernate.persister.entity.EntityPersister, java.util.Set<java.lang.String>>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.cfg.beanvalidation.HibernateTraversableResolver.isReachable(java.lang.Object, javax.validation.Path$Node, java.lang.Class<?>, javax.validation.Path, java.lang.annotation.ElementType)"], ["boolean", "org.hibernate.cfg.beanvalidation.HibernateTraversableResolver.isCascadable(java.lang.Object, javax.validation.Path$Node, java.lang.Class<?>, javax.validation.Path, java.lang.annotation.ElementType)"], ["org.hibernate.cfg.beanvalidation.DuplicationStrategyImpl", "org.hibernate.cfg.beanvalidation.DuplicationStrategyImpl()"], ["boolean", "org.hibernate.cfg.beanvalidation.DuplicationStrategyImpl.areMatch(java.lang.Object, java.lang.Object)"], ["org.hibernate.event.service.spi.DuplicationStrategy$Action", "org.hibernate.cfg.beanvalidation.DuplicationStrategyImpl.getAction()"], ["org.hibernate.cfg.beanvalidation.ValidationMode[]", "org.hibernate.cfg.beanvalidation.ValidationMode.values()"], ["org.hibernate.cfg.beanvalidation.ValidationMode", "org.hibernate.cfg.beanvalidation.ValidationMode.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.beanvalidation.ValidationMode.loggable(java.util.Set<org.hibernate.cfg.beanvalidation.ValidationMode>)"], ["org.hibernate.boot.Metadata", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator$1.getMetadata()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator$1.getSessionFactory()"], ["org.hibernate.service.spi.SessionFactoryServiceRegistry", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator$1.getServiceRegistry()"], ["void", "org.hibernate.cfg.beanvalidation.TypeSafeActivator.validateSuppliedFactory(java.lang.Object)"], ["void", "org.hibernate.cfg.beanvalidation.TypeSafeActivator.activate(org.hibernate.cfg.beanvalidation.ActivationContext)"], ["void", "org.hibernate.cfg.beanvalidation.TypeSafeActivator.applyCallbackListeners(javax.validation.ValidatorFactory, org.hibernate.cfg.beanvalidation.ActivationContext)"], ["void", "org.hibernate.cfg.beanvalidation.TypeSafeActivator.applyRelationalConstraints(javax.validation.ValidatorFactory, java.util.Collection<org.hibernate.mapping.PersistentClass>, java.util.Map, org.hibernate.dialect.Dialect, org.hibernate.boot.spi.ClassLoaderAccess)"], ["org.hibernate.cfg.beanvalidation.GroupsPerOperation", "org.hibernate.cfg.beanvalidation.GroupsPerOperation.from(java.util.Map, org.hibernate.boot.spi.ClassLoaderAccess)"], ["org.hibernate.cfg.beanvalidation.BeanValidationEventListener", "org.hibernate.cfg.beanvalidation.BeanValidationEventListener(javax.validation.ValidatorFactory, java.util.Map, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["void", "org.hibernate.cfg.beanvalidation.BeanValidationEventListener.initialize(java.util.Map, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["boolean", "org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(org.hibernate.event.spi.PreInsertEvent)"], ["boolean", "org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreUpdate(org.hibernate.event.spi.PreUpdateEvent)"], ["boolean", "org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreDelete(org.hibernate.event.spi.PreDeleteEvent)"], ["org.hibernate.cfg.beanvalidation.IntegrationException", "org.hibernate.cfg.beanvalidation.IntegrationException(java.lang.String)"], ["org.hibernate.cfg.beanvalidation.IntegrationException", "org.hibernate.cfg.beanvalidation.IntegrationException(java.lang.String, java.lang.Throwable)"], ["javax.validation.ValidatorFactory", "org.hibernate.cfg.beanvalidation.TypeSafeActivator$1.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cfg.beanvalidation.TypeSafeActivator$1.convert(java.lang.Object)"], ["org.hibernate.cfg.beanvalidation.BeanValidationIntegrator", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator()"], ["void", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator.validateFactory(java.lang.Object)"], ["void", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator.integrate(org.hibernate.boot.Metadata, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["void", "org.hibernate.cfg.beanvalidation.BeanValidationIntegrator.disintegrate(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation[]", "org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation.values()"], ["org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation", "org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation.getName()"], ["java.lang.String", "org.hibernate.cfg.beanvalidation.GroupsPerOperation$Operation.getGroupPropertyName()"], ["org.hibernate.cfg.ClassPropertyHolder", "org.hibernate.cfg.ClassPropertyHolder(org.hibernate.mapping.PersistentClass, org.hibernate.annotations.common.reflection.XClass, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.cfg.ClassPropertyHolder", "org.hibernate.cfg.ClassPropertyHolder(org.hibernate.mapping.PersistentClass, org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.annotations.EntityBinder, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["void", "org.hibernate.cfg.ClassPropertyHolder.startingProperty(org.hibernate.annotations.common.reflection.XProperty)"], ["java.lang.String", "org.hibernate.cfg.ClassPropertyHolder.getEntityName()"], ["void", "org.hibernate.cfg.ClassPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.cfg.Ejb3Column[], org.hibernate.annotations.common.reflection.XClass)"], ["void", "org.hibernate.cfg.ClassPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Join", "org.hibernate.cfg.ClassPropertyHolder.addJoin(javax.persistence.JoinTable, boolean)"], ["java.lang.String", "org.hibernate.cfg.ClassPropertyHolder.getClassName()"], ["java.lang.String", "org.hibernate.cfg.ClassPropertyHolder.getEntityOwnerClassName()"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.ClassPropertyHolder.getTable()"], ["boolean", "org.hibernate.cfg.ClassPropertyHolder.isComponent()"], ["boolean", "org.hibernate.cfg.ClassPropertyHolder.isEntity()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.cfg.ClassPropertyHolder.getPersistentClass()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.cfg.ClassPropertyHolder.getIdentifier()"], ["boolean", "org.hibernate.cfg.ClassPropertyHolder.isOrWithinEmbeddedId()"], ["boolean", "org.hibernate.cfg.ClassPropertyHolder.isWithinElementCollection()"], ["java.lang.String", "org.hibernate.cfg.ClassPropertyHolder.toString()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyContainer.getEntityAtStake()"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.PropertyContainer.getDeclaringClass()"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.PropertyContainer.getClassLevelAccessType()"], ["org.hibernate.cfg.Settings", "org.hibernate.cfg.Settings(org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.cfg.Settings", "org.hibernate.cfg.Settings(org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.boot.Metadata)"], ["org.hibernate.cfg.Settings", "org.hibernate.cfg.Settings(org.hibernate.boot.spi.SessionFactoryOptions, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Settings.getDefaultSchemaName()"], ["java.lang.String", "org.hibernate.cfg.Settings.getDefaultCatalogName()"], ["java.lang.String", "org.hibernate.cfg.Settings.getSessionFactoryName()"], ["boolean", "org.hibernate.cfg.Settings.isSessionFactoryNameAlsoJndiName()"], ["boolean", "org.hibernate.cfg.Settings.isFlushBeforeCompletionEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isStatisticsEnabled()"], ["org.hibernate.cfg.BaselineSessionEventsListenerBuilder", "org.hibernate.cfg.Settings.getBaselineSessionEventsListenerBuilder()"], ["boolean", "org.hibernate.cfg.Settings.isIdentifierRollbackEnabled()"], ["org.hibernate.EntityMode", "org.hibernate.cfg.Settings.getDefaultEntityMode()"], ["org.hibernate.tuple.entity.EntityTuplizerFactory", "org.hibernate.cfg.Settings.getEntityTuplizerFactory()"], ["boolean", "org.hibernate.cfg.Settings.isCheckNullability()"], ["boolean", "org.hibernate.cfg.Settings.isInitializeLazyStateOutsideTransactionsEnabled()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.cfg.Settings.getMultiTableBulkIdStrategy()"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.cfg.Settings.getBatchFetchStyle()"], ["int", "org.hibernate.cfg.Settings.getDefaultBatchFetchSize()"], ["java.lang.Integer", "org.hibernate.cfg.Settings.getMaximumFetchDepth()"], ["org.hibernate.NullPrecedence", "org.hibernate.cfg.Settings.getDefaultNullPrecedence()"], ["boolean", "org.hibernate.cfg.Settings.isOrderUpdatesEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isOrderInsertsEnabled()"], ["org.hibernate.MultiTenancyStrategy", "org.hibernate.cfg.Settings.getMultiTenancyStrategy()"], ["boolean", "org.hibernate.cfg.Settings.isJtaTrackByThread()"], ["boolean", "org.hibernate.cfg.Settings.isStrictJPAQLCompliance()"], ["java.util.Map", "org.hibernate.cfg.Settings.getQuerySubstitutions()"], ["boolean", "org.hibernate.cfg.Settings.isNamedQueryStartupCheckingEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isSecondLevelCacheEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isQueryCacheEnabled()"], ["org.hibernate.cache.spi.TimestampsCacheFactory", "org.hibernate.cfg.Settings.getTimestampsCacheFactory()"], ["java.lang.String", "org.hibernate.cfg.Settings.getCacheRegionPrefix()"], ["boolean", "org.hibernate.cfg.Settings.isMinimalPutsEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isStructuredCacheEntriesEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isDirectReferenceCacheEntriesEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isAutoEvictCollectionCache()"], ["boolean", "org.hibernate.cfg.Settings.isAutoCreateSchema()"], ["boolean", "org.hibernate.cfg.Settings.isAutoDropSchema()"], ["boolean", "org.hibernate.cfg.Settings.isAutoUpdateSchema()"], ["boolean", "org.hibernate.cfg.Settings.isAutoValidateSchema()"], ["int", "org.hibernate.cfg.Settings.getJdbcBatchSize()"], ["boolean", "org.hibernate.cfg.Settings.isJdbcBatchVersionedData()"], ["java.lang.Integer", "org.hibernate.cfg.Settings.getJdbcFetchSize()"], ["boolean", "org.hibernate.cfg.Settings.isScrollableResultSetsEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isWrapResultSetsEnabled()"], ["boolean", "org.hibernate.cfg.Settings.isGetGeneratedKeysEnabled()"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.cfg.Settings.getConnectionReleaseMode()"], ["boolean", "org.hibernate.cfg.Settings.isCommentsEnabled()"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cfg.Settings.getRegionFactory()"], ["org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform", "org.hibernate.cfg.Settings.getJtaPlatform()"], ["org.hibernate.hql.spi.QueryTranslatorFactory", "org.hibernate.cfg.Settings.getQueryTranslatorFactory()"], ["void", "org.hibernate.cfg.Settings.setCheckNullability(boolean)"], ["boolean", "org.hibernate.cfg.Settings.isPreferUserTransaction()"], ["org.hibernate.cfg.RecoverableException", "org.hibernate.cfg.RecoverableException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.cfg.RecoverableException", "org.hibernate.cfg.RecoverableException(java.lang.String)"], ["void", "org.hibernate.cfg.Environment.verifyProperties(java.util.Map<?, ?>)"], ["boolean", "org.hibernate.cfg.Environment.jvmHasTimestampBug()"], ["boolean", "org.hibernate.cfg.Environment.useStreamsForBinary()"], ["boolean", "org.hibernate.cfg.Environment.useReflectionOptimizer()"], ["org.hibernate.bytecode.spi.BytecodeProvider", "org.hibernate.cfg.Environment.getBytecodeProvider()"], ["boolean", "org.hibernate.cfg.Environment.useLegacyProxyClassnames()"], ["java.util.Properties", "org.hibernate.cfg.Environment.getProperties()"], ["java.lang.String", "org.hibernate.cfg.Environment.isolationLevelToString(int)"], ["org.hibernate.bytecode.spi.BytecodeProvider", "org.hibernate.cfg.Environment.buildBytecodeProvider(java.util.Properties)"], ["org.hibernate.cfg.CopyIdentifierComponentSecondPass", "org.hibernate.cfg.CopyIdentifierComponentSecondPass(org.hibernate.mapping.Component, java.lang.String, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.CopyIdentifierComponentSecondPass.doSecondPass(java.util.Map)"], ["boolean", "org.hibernate.cfg.CopyIdentifierComponentSecondPass.dependentUpon(org.hibernate.cfg.CopyIdentifierComponentSecondPass)"], ["org.hibernate.cfg.MetadataSourceType[]", "org.hibernate.cfg.MetadataSourceType.values()"], ["org.hibernate.cfg.MetadataSourceType", "org.hibernate.cfg.MetadataSourceType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.MetadataSourceType.toString()"], ["org.hibernate.cfg.MetadataSourceType", "org.hibernate.cfg.MetadataSourceType.parsePrecedence(java.lang.String)"], ["int", "org.hibernate.cfg.InheritanceState$ElementsToProcess.getIdPropertyCount()"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.BinderHelper.shallowCopy(org.hibernate.mapping.Property)"], ["void", "org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.PersistentClass, org.hibernate.mapping.PersistentClass, org.hibernate.mapping.Value, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.BinderHelper.findPropertyByName(org.hibernate.mapping.PersistentClass, java.lang.String)"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.BinderHelper.findPropertyByName(org.hibernate.mapping.Component, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.BinderHelper.getRelativePath(org.hibernate.cfg.PropertyHolder, java.lang.String)"], ["java.lang.Object", "org.hibernate.cfg.BinderHelper.findColumnOwner(org.hibernate.mapping.PersistentClass, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.BinderHelper.makeIdGenerator(org.hibernate.mapping.SimpleValue, org.hibernate.annotations.common.reflection.XProperty, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<java.lang.String, org.hibernate.boot.model.IdentifierGeneratorDefinition>)"], ["void", "org.hibernate.cfg.BinderHelper.makeIdGenerator(org.hibernate.mapping.SimpleValue, org.hibernate.annotations.common.reflection.XProperty, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.boot.model.IdentifierGeneratorDefinition)"], ["boolean", "org.hibernate.cfg.BinderHelper.isEmptyAnnotationValue(java.lang.String)"], ["boolean", "org.hibernate.cfg.BinderHelper.isEmptyOrNullAnnotationValue(java.lang.String)"], ["org.hibernate.mapping.Any", "org.hibernate.cfg.BinderHelper.buildAnyValue(java.lang.String, org.hibernate.cfg.Ejb3JoinColumn[], javax.persistence.Column, org.hibernate.cfg.PropertyData, boolean, boolean, org.hibernate.cfg.annotations.Nullability, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.annotations.EntityBinder, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.BinderHelper.bindAnyMetaDefs(org.hibernate.annotations.common.reflection.XAnnotatedElement, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.MappedSuperclass", "org.hibernate.cfg.BinderHelper.getMappedSuperclassOrNull(org.hibernate.annotations.common.reflection.XClass, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.BinderHelper.getPath(org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.cfg.BinderHelper.toAliasTableMap(org.hibernate.annotations.SqlFragmentAlias[])"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.cfg.BinderHelper.toAliasEntityMap(org.hibernate.annotations.SqlFragmentAlias[])"], ["org.hibernate.cfg.ExternalSessionFactoryConfig", "org.hibernate.cfg.ExternalSessionFactoryConfig()"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getMapResources()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setMapResources(java.lang.String)"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.addMapResource(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getDialect()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setDialect(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getDefaultSchema()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setDefaultSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getDefaultCatalog()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setDefaultCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getMaximumFetchDepth()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setMaximumFetchDepth(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getJdbcFetchSize()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setJdbcFetchSize(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getJdbcBatchSize()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setJdbcBatchSize(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getBatchVersionedDataEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setBatchVersionedDataEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getJdbcScrollableResultSetEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setJdbcScrollableResultSetEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getGetGeneratedKeysEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setGetGeneratedKeysEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getStreamsForBinaryEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setStreamsForBinaryEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getReflectionOptimizationEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setReflectionOptimizationEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getQuerySubstitutions()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setQuerySubstitutions(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getShowSqlEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setShowSqlEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getCommentsEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setCommentsEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getSecondLevelCacheEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setSecondLevelCacheEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getCacheRegionFactory()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setCacheRegionFactory(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getCacheProviderConfig()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setCacheProviderConfig(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getCacheRegionPrefix()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setCacheRegionPrefix(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getMinimalPutsEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setMinimalPutsEnabled(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ExternalSessionFactoryConfig.getQueryCacheEnabled()"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.setQueryCacheEnabled(java.lang.String)"], ["void", "org.hibernate.cfg.ExternalSessionFactoryConfig.addAdditionalProperty(java.lang.String, java.lang.String)"], ["org.hibernate.cfg.AttributeConversionInfo", "org.hibernate.cfg.AttributeConversionInfo(java.lang.Class<? extends javax.persistence.AttributeConverter>, boolean, java.lang.String, org.hibernate.annotations.common.reflection.XAnnotatedElement)"], ["org.hibernate.cfg.AttributeConversionInfo", "org.hibernate.cfg.AttributeConversionInfo(javax.persistence.Convert, org.hibernate.annotations.common.reflection.XAnnotatedElement)"], ["java.lang.Class<? extends javax.persistence.AttributeConverter>", "org.hibernate.cfg.AttributeConversionInfo.getConverterClass()"], ["boolean", "org.hibernate.cfg.AttributeConversionInfo.isConversionDisabled()"], ["java.lang.String", "org.hibernate.cfg.AttributeConversionInfo.getAttributeName()"], ["org.hibernate.annotations.common.reflection.XAnnotatedElement", "org.hibernate.cfg.AttributeConversionInfo.getSource()"], ["void", "org.hibernate.cfg.AnnotationBinder.bindDefaults(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.AnnotationBinder.bindPackage(java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.AnnotationBinder.bindClass(org.hibernate.annotations.common.reflection.XClass, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.AnnotationBinder.generatorType(javax.persistence.GeneratedValue, org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Component", "org.hibernate.cfg.AnnotationBinder.fillComponent(org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, org.hibernate.cfg.AccessType, boolean, org.hibernate.cfg.annotations.EntityBinder, boolean, boolean, boolean, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.mapping.Component", "org.hibernate.cfg.AnnotationBinder.fillComponent(org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, org.hibernate.cfg.PropertyData, org.hibernate.cfg.AccessType, boolean, org.hibernate.cfg.annotations.EntityBinder, boolean, boolean, boolean, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.mapping.Component", "org.hibernate.cfg.AnnotationBinder.createComponent(org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, boolean, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.FetchMode", "org.hibernate.cfg.AnnotationBinder.getFetchMode(javax.persistence.FetchType)"], ["void", "org.hibernate.cfg.AnnotationBinder.bindForeignKeyNameAndDefinition(org.hibernate.mapping.SimpleValue, org.hibernate.annotations.common.reflection.XProperty, javax.persistence.ForeignKey, javax.persistence.JoinColumn, javax.persistence.JoinColumns)"], ["boolean", "org.hibernate.cfg.AnnotationBinder.isDefault(org.hibernate.annotations.common.reflection.XClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>", "org.hibernate.cfg.AnnotationBinder.buildInheritanceStates(java.util.List<org.hibernate.annotations.common.reflection.XClass>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.InheritanceState", "org.hibernate.cfg.InheritanceState(org.hibernate.annotations.common.reflection.XClass, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.InheritanceState", "org.hibernate.cfg.InheritanceState.getInheritanceStateOfSuperEntity(org.hibernate.annotations.common.reflection.XClass, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.cfg.InheritanceState", "org.hibernate.cfg.InheritanceState.getSuperclassInheritanceState(org.hibernate.annotations.common.reflection.XClass, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.InheritanceState.getClazz()"], ["void", "org.hibernate.cfg.InheritanceState.setClazz(org.hibernate.annotations.common.reflection.XClass)"], ["boolean", "org.hibernate.cfg.InheritanceState.hasSiblings()"], ["void", "org.hibernate.cfg.InheritanceState.setHasSiblings(boolean)"], ["boolean", "org.hibernate.cfg.InheritanceState.hasParents()"], ["void", "org.hibernate.cfg.InheritanceState.setHasParents(boolean)"], ["javax.persistence.InheritanceType", "org.hibernate.cfg.InheritanceState.getType()"], ["void", "org.hibernate.cfg.InheritanceState.setType(javax.persistence.InheritanceType)"], ["boolean", "org.hibernate.cfg.InheritanceState.isEmbeddableSuperclass()"], ["void", "org.hibernate.cfg.InheritanceState.setEmbeddableSuperclass(boolean)"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.InheritanceState.getClassWithIdClass(boolean)"], ["java.lang.Boolean", "org.hibernate.cfg.InheritanceState.hasIdClassOrEmbeddedId()"], ["org.hibernate.cfg.InheritanceState$ElementsToProcess", "org.hibernate.cfg.InheritanceState.getElementsToProcess()"], ["java.lang.Class", "org.hibernate.cfg.BinderHelper$3.getIdType()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$3.getGeneratedValueGeneratorName()"], ["org.hibernate.cfg.EJB3NamingStrategy", "org.hibernate.cfg.EJB3NamingStrategy()"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.classToTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.propertyToColumnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.tableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.columnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.collectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.joinKeyColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.foreignKeyColumnName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.logicalColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.logicalCollectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.EJB3NamingStrategy.logicalCollectionColumnName(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.Class", "org.hibernate.cfg.AnnotationBinder$1.getIdType()"], ["java.lang.String", "org.hibernate.cfg.AnnotationBinder$1.getGeneratedValueGeneratorName()"], ["org.hibernate.cfg.OneToOneSecondPass", "org.hibernate.cfg.OneToOneSecondPass(java.lang.String, java.lang.String, java.lang.String, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, org.hibernate.annotations.common.reflection.XClass, boolean, boolean, boolean, java.lang.String, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.OneToOneSecondPass.doSecondPass(java.util.Map)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$2$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$2$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$2$1.getJpaEntityName()"], ["org.hibernate.cfg.SetSimpleValueTypeSecondPass", "org.hibernate.cfg.SetSimpleValueTypeSecondPass(org.hibernate.cfg.annotations.SimpleValueBinder)"], ["void", "org.hibernate.cfg.SetSimpleValueTypeSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature", "org.hibernate.cfg.Ejb3JoinColumn$2.getNature()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.Ejb3JoinColumn$2.getEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.Ejb3JoinColumn$2.getAttributePath()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$2.getReferencedTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$2.getReferencedColumnName()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.Ejb3JoinColumn$2.getBuildingContext()"], ["org.hibernate.cfg.ToOneBinder", "org.hibernate.cfg.ToOneBinder()"], ["java.lang.String", "org.hibernate.cfg.ToOneBinder.getReferenceEntityName(org.hibernate.cfg.PropertyData, org.hibernate.annotations.common.reflection.XClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.ToOneBinder.getReferenceEntityName(org.hibernate.cfg.PropertyData, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.annotations.common.reflection.XClass", "org.hibernate.cfg.ToOneBinder.getTargetEntity(org.hibernate.cfg.PropertyData, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.PkDrivenByDefaultMapsIdSecondPass", "org.hibernate.cfg.PkDrivenByDefaultMapsIdSecondPass(java.lang.String, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.SimpleValue)"], ["void", "org.hibernate.cfg.PkDrivenByDefaultMapsIdSecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.AnnotatedClassType[]", "org.hibernate.cfg.AnnotatedClassType.values()"], ["org.hibernate.cfg.AnnotatedClassType", "org.hibernate.cfg.AnnotatedClassType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$1.name()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$1.sequenceName()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$1.catalog()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$1.schema()"], ["int", "org.hibernate.cfg.BinderHelper$1.initialValue()"], ["int", "org.hibernate.cfg.BinderHelper$1.allocationSize()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.BinderHelper$1.annotationType()"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setJPA2ElementCollection(boolean)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn.getManyToManyOwnerSideEntityName()"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setManyToManyOwnerSideEntityName(java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setReferencedColumn(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn.getMappedBy()"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setMappedBy(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn.getReferencedColumn()"], ["org.hibernate.cfg.Ejb3JoinColumn[]", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinColumnsOrFormulas(org.hibernate.annotations.JoinColumnOrFormula[], java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.Ejb3JoinColumn", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinFormula(org.hibernate.annotations.JoinFormula, java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.Ejb3JoinColumn[]", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinColumns(javax.persistence.JoinColumn[], java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.Ejb3JoinColumn[]", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinColumnsWithDefaultColumnSuffix(javax.persistence.JoinColumn[], java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setJoinAnnotation(javax.persistence.JoinColumn, java.lang.String)"], ["org.hibernate.cfg.Ejb3JoinColumn", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinColumn(javax.persistence.PrimaryKeyJoinColumn, javax.persistence.JoinColumn, org.hibernate.mapping.Value, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setPersistentClass(org.hibernate.mapping.PersistentClass, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.checkIfJoinColumn(java.lang.Object, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.copyReferencedStructureAndCreateDefaultJoinColumns(org.hibernate.mapping.PersistentClass, java.util.Iterator, org.hibernate.mapping.SimpleValue)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.linkValueUsingDefaultColumnNaming(org.hibernate.mapping.Column, org.hibernate.mapping.PersistentClass, org.hibernate.mapping.SimpleValue)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.addDefaultJoinColumnName(org.hibernate.mapping.PersistentClass, java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.linkValueUsingAColumnCopy(org.hibernate.mapping.Column, org.hibernate.mapping.SimpleValue)"], ["int", "org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.overrideFromReferencedColumnIfNecessary(org.hibernate.mapping.Column)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.redefineColumnName(java.lang.String, java.lang.String, boolean)"], ["org.hibernate.cfg.Ejb3JoinColumn[]", "org.hibernate.cfg.Ejb3JoinColumn.buildJoinTableJoinColumns(javax.persistence.JoinColumn[], java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.cfg.PropertyHolder, java.lang.String, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3JoinColumn.setMappedBy(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn.toString()"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(org.hibernate.annotations.common.reflection.XProperty)"], ["boolean", "org.hibernate.cfg.AbstractPropertyHolder.isInIdClass()"], ["void", "org.hibernate.cfg.AbstractPropertyHolder.setInIdClass(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.cfg.AbstractPropertyHolder.getPath()"], ["javax.persistence.Column[]", "org.hibernate.cfg.AbstractPropertyHolder.getOverriddenColumn(java.lang.String)"], ["javax.persistence.JoinColumn[]", "org.hibernate.cfg.AbstractPropertyHolder.getOverriddenJoinColumn(java.lang.String)"], ["javax.persistence.ForeignKey", "org.hibernate.cfg.AbstractPropertyHolder.getOverriddenForeignKey(java.lang.String)"], ["javax.persistence.JoinTable", "org.hibernate.cfg.AbstractPropertyHolder.getJoinTable(org.hibernate.annotations.common.reflection.XProperty)"], ["javax.persistence.JoinTable", "org.hibernate.cfg.AbstractPropertyHolder.getOverriddenJoinTable(java.lang.String)"], ["void", "org.hibernate.cfg.AbstractPropertyHolder.setParentProperty(java.lang.String)"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.Ejb3JoinColumn$3.getBuildingContext()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$3.getReferencedTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$3.getReferencedPrimaryKeyColumnName()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$2.getSessionFactory()"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$2.findResultSetMapping(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$2.addQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn...)"], ["void", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$2.addQuerySpaces(java.lang.String...)"], ["org.hibernate.cfg.annotations.CustomizableColumns", "org.hibernate.cfg.annotations.CustomizableColumns(javax.persistence.Column[])"], ["javax.persistence.Column[]", "org.hibernate.cfg.annotations.CustomizableColumns.columns()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.annotations.CustomizableColumns.annotationType()"], ["void", "org.hibernate.cfg.annotations.ListBinder$1.secondPass(java.util.Map, java.util.Map)"], ["boolean", "org.hibernate.cfg.annotations.EntityBinder.wrapIdsInEmbeddedComponents()"], ["org.hibernate.cfg.annotations.EntityBinder", "org.hibernate.cfg.annotations.EntityBinder()"], ["org.hibernate.cfg.annotations.EntityBinder", "org.hibernate.cfg.annotations.EntityBinder(javax.persistence.Entity, org.hibernate.annotations.Entity, org.hibernate.annotations.common.reflection.XClass, org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["boolean", "org.hibernate.cfg.annotations.EntityBinder.isPropertyDefinedInSuperHierarchy(java.lang.String)"], ["boolean", "org.hibernate.cfg.annotations.EntityBinder.isRootEntity()"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setDiscriminatorValue(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setForceDiscriminator(boolean)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setInsertableDiscriminator(boolean)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.bindEntity()"], ["void", "org.hibernate.cfg.annotations.EntityBinder.bindDiscriminatorValue()"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setBatchSize(org.hibernate.annotations.BatchSize)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setProxy(org.hibernate.annotations.Proxy)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setWhere(org.hibernate.annotations.Where)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setWrapIdsInEmbeddedComponents(boolean)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.applyCaching(org.hibernate.annotations.common.reflection.XClass, javax.persistence.SharedCacheMode, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.bindTableForDiscriminatedSubclass(org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.bindTable(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.hibernate.cfg.UniqueConstraintHolder>, java.lang.String, org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref)"], ["finalSecondaryTableBinding(org.hibernate.cfg.PropertyHolder)", "org.hibernate.cfg.annotations.EntityBinder."], ["void", "org.hibernate.cfg.annotations.EntityBinder.firstLevelSecondaryTablesBinding(javax.persistence.SecondaryTable, javax.persistence.SecondaryTables)"], ["org.hibernate.mapping.Join", "org.hibernate.cfg.annotations.EntityBinder.addJoin(javax.persistence.JoinTable, org.hibernate.cfg.PropertyHolder, boolean)"], ["java.util.Map<java.lang.String, org.hibernate.mapping.Join>", "org.hibernate.cfg.annotations.EntityBinder.getSecondaryTables()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder.getCacheConcurrencyStrategy(org.hibernate.annotations.CacheConcurrencyStrategy)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.addFilter(org.hibernate.annotations.Filter)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setInheritanceState(org.hibernate.cfg.InheritanceState)"], ["boolean", "org.hibernate.cfg.annotations.EntityBinder.isIgnoreIdAnnotations()"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setIgnoreIdAnnotations(boolean)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.processComplementaryTableDefinitions(javax.persistence.Table)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.processComplementaryTableDefinitions(org.hibernate.annotations.Table)"], ["void", "org.hibernate.cfg.annotations.EntityBinder.processComplementaryTableDefinitions(org.hibernate.annotations.Tables)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.annotations.EntityBinder.getPropertyAccessType()"], ["void", "org.hibernate.cfg.annotations.EntityBinder.setPropertyAccessType(org.hibernate.cfg.AccessType)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.annotations.EntityBinder.getPropertyAccessor(org.hibernate.annotations.common.reflection.XAnnotatedElement)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.annotations.EntityBinder.getExplicitAccessType(org.hibernate.annotations.common.reflection.XAnnotatedElement)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$1$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$1$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$1$1.getJpaEntityName()"], ["org.hibernate.cfg.annotations.ResultsetMappingSecondPass", "org.hibernate.cfg.annotations.ResultsetMappingSecondPass(javax.persistence.SqlResultSetMapping, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.ResultsetMappingSecondPass.doSecondPass(java.util.Map)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$2$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$2$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$2$1.getJpaEntityName()"], ["org.hibernate.cfg.annotations.HCANNHelper", "org.hibernate.cfg.annotations.HCANNHelper()"], ["java.lang.String", "org.hibernate.cfg.annotations.HCANNHelper.annotatedElementSignature(org.hibernate.annotations.common.reflection.XProperty)"], ["java.lang.reflect.Member", "org.hibernate.cfg.annotations.HCANNHelper.getUnderlyingMember(org.hibernate.annotations.common.reflection.XProperty)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$SecondaryTableNamingStrategyHelper.determineImplicitName(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$SecondaryTableNamingStrategyHelper.handleExplicitName(java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$SecondaryTableNamingStrategyHelper.toPhysicalName(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.annotations.QueryBinder", "org.hibernate.cfg.annotations.QueryBinder()"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindQuery(javax.persistence.NamedQuery, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindNativeQuery(javax.persistence.NamedNativeQuery, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindNativeQuery(org.hibernate.annotations.NamedNativeQuery, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindQueries(javax.persistence.NamedQueries, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindNativeQueries(javax.persistence.NamedNativeQueries, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindNativeQueries(org.hibernate.annotations.NamedNativeQueries, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindQuery(org.hibernate.annotations.NamedQuery, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindQueries(org.hibernate.annotations.NamedQueries, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindNamedStoredProcedureQuery(javax.persistence.NamedStoredProcedureQuery, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindSqlResultSetMappings(javax.persistence.SqlResultSetMappings, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["void", "org.hibernate.cfg.annotations.QueryBinder.bindSqlResultSetMapping(javax.persistence.SqlResultSetMapping, org.hibernate.boot.spi.MetadataBuildingContext, boolean)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.TableBinder$1$1.getOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$1$1.getOwningEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.annotations.TableBinder$1$1.getOwningAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.annotations.TableBinder$1$1.getBuildingContext()"], ["org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator(javax.persistence.MapKeyJoinColumn)"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.name()"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.referencedColumnName()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.unique()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.nullable()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.insertable()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.updatable()"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.columnDefinition()"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.table()"], ["javax.persistence.ForeignKey", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.foreignKey()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator.annotationType()"], ["org.hibernate.cfg.annotations.ArrayBinder", "org.hibernate.cfg.annotations.ArrayBinder()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$1.getJpaEntityName()"], ["org.hibernate.cfg.annotations.IdBagBinder", "org.hibernate.cfg.annotations.IdBagBinder()"], ["org.hibernate.cfg.annotations.TableBinder", "org.hibernate.cfg.annotations.TableBinder()"], ["void", "org.hibernate.cfg.annotations.TableBinder.setBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setSchema(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder.getName()"], ["void", "org.hibernate.cfg.annotations.TableBinder.setName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setAbstract(boolean)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setUniqueConstraints(javax.persistence.UniqueConstraint[])"], ["void", "org.hibernate.cfg.annotations.TableBinder.setJpaIndex(javax.persistence.Index[])"], ["void", "org.hibernate.cfg.annotations.TableBinder.setConstraints(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setJPA2ElementCollection(boolean)"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.annotations.TableBinder.bind()"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.annotations.TableBinder.buildAndFillTable(java.lang.String, java.lang.String, org.hibernate.cfg.ObjectNameSource, org.hibernate.boot.model.naming.NamingStrategyHelper, boolean, java.util.List<org.hibernate.cfg.UniqueConstraintHolder>, java.util.List<org.hibernate.cfg.JPAIndexHolder>, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext, java.lang.String, org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref)"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.annotations.TableBinder.buildAndFillTable(java.lang.String, java.lang.String, org.hibernate.boot.model.naming.Identifier, boolean, java.util.List<org.hibernate.cfg.UniqueConstraintHolder>, java.util.List<org.hibernate.cfg.JPAIndexHolder>, java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext, java.lang.String, org.hibernate.boot.spi.InFlightMetadataCollector$EntityTableXref)"], ["void", "org.hibernate.cfg.annotations.TableBinder.bindFk(org.hibernate.mapping.PersistentClass, org.hibernate.mapping.PersistentClass, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.TableBinder.linkJoinColumnWithValueOverridingNameIfImplicit(org.hibernate.mapping.PersistentClass, java.util.Iterator, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.SimpleValue)"], ["void", "org.hibernate.cfg.annotations.TableBinder.createUniqueConstraint(org.hibernate.mapping.Value)"], ["void", "org.hibernate.cfg.annotations.TableBinder.addIndexes(org.hibernate.mapping.Table, org.hibernate.annotations.Index[], org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.TableBinder.addIndexes(org.hibernate.mapping.Table, javax.persistence.Index[], org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.TableBinder.setDefaultName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$EntityTableObjectNameSource.getExplicitName()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$EntityTableObjectNameSource.getLogicalName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.TableBinder$1.determineImplicitName(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.TableBinder$1.handleExplicitName(java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.TableBinder$1.toPhysicalName(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.procedure.spi.ParameterStrategy", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$ParameterDefinitions.getParameterStrategy()"], ["org.hibernate.cfg.annotations.MapBinder", "org.hibernate.cfg.annotations.MapBinder(boolean)"], ["boolean", "org.hibernate.cfg.annotations.MapBinder.isMap()"], ["org.hibernate.cfg.SecondPass", "org.hibernate.cfg.annotations.MapBinder.getSecondPass(org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3JoinColumn[], boolean, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass, boolean, boolean, org.hibernate.cfg.annotations.TableBinder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.annotations.BagBinder", "org.hibernate.cfg.annotations.BagBinder()"], ["org.hibernate.cfg.annotations.QueryHintDefinition", "org.hibernate.cfg.annotations.QueryHintDefinition(javax.persistence.QueryHint[])"], ["org.hibernate.CacheMode", "org.hibernate.cfg.annotations.QueryHintDefinition.getCacheMode(java.lang.String)"], ["org.hibernate.FlushMode", "org.hibernate.cfg.annotations.QueryHintDefinition.getFlushMode(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.cfg.annotations.QueryHintDefinition.getLockMode(java.lang.String)"], ["boolean", "org.hibernate.cfg.annotations.QueryHintDefinition.getBoolean(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.annotations.QueryHintDefinition.getString(java.lang.String, java.lang.String)"], ["java.lang.Integer", "org.hibernate.cfg.annotations.QueryHintDefinition.getInteger(java.lang.String, java.lang.String)"], ["java.lang.Integer", "org.hibernate.cfg.annotations.QueryHintDefinition.getTimeout(java.lang.String)"], ["org.hibernate.LockOptions", "org.hibernate.cfg.annotations.QueryHintDefinition.determineLockOptions(javax.persistence.NamedQuery)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.cfg.annotations.QueryHintDefinition.getHintsMap()"], ["org.hibernate.cfg.annotations.MapKeyColumnDelegator", "org.hibernate.cfg.annotations.MapKeyColumnDelegator(javax.persistence.MapKeyColumn)"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.name()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.unique()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.nullable()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.insertable()"], ["boolean", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.updatable()"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.columnDefinition()"], ["java.lang.String", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.table()"], ["int", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.length()"], ["int", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.precision()"], ["int", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.scale()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.annotations.MapKeyColumnDelegator.annotationType()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$1.getJpaEntityName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.TableBinder$2.getOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$2.getOwningEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.annotations.TableBinder$2.getOwningAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.annotations.TableBinder$2.getBuildingContext()"], ["org.hibernate.cfg.annotations.Nullability[]", "org.hibernate.cfg.annotations.Nullability.values()"], ["org.hibernate.cfg.annotations.Nullability", "org.hibernate.cfg.annotations.Nullability.valueOf(java.lang.String)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.cfg.annotations.PropertyBinder$NoValueGeneration.getGenerationTiming()"], ["boolean", "org.hibernate.cfg.annotations.PropertyBinder$NoValueGeneration.referenceColumnInSql()"], ["java.lang.String", "org.hibernate.cfg.annotations.PropertyBinder$NoValueGeneration.getDatabaseGeneratedReferencedColumnValue()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3.getOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$3.getOwningEntityNaming()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3.getNonOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$3.getNonOwningEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.annotations.TableBinder$3.getAssociationOwningAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.annotations.TableBinder$3.getBuildingContext()"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["boolean", "org.hibernate.cfg.annotations.CollectionBinder.isMap()"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setUpdatable(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setInheritanceStatePerClass(java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setInsertable(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setCascadeStrategy(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setAccessType(org.hibernate.cfg.AccessType)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setInverseJoinColumns(org.hibernate.cfg.Ejb3JoinColumn[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setJoinColumns(org.hibernate.cfg.Ejb3JoinColumn[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setPropertyHolder(org.hibernate.cfg.PropertyHolder)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setBatchSize(org.hibernate.annotations.BatchSize)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setJpaOrderBy(javax.persistence.OrderBy)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setSqlOrderBy(org.hibernate.annotations.OrderBy)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setSort(org.hibernate.annotations.Sort)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setNaturalSort(org.hibernate.annotations.SortNatural)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setComparatorSort(org.hibernate.annotations.SortComparator)"], ["org.hibernate.cfg.annotations.CollectionBinder", "org.hibernate.cfg.annotations.CollectionBinder.getCollectionBinder(java.lang.String, org.hibernate.annotations.common.reflection.XProperty, boolean, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setMappedBy(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setTableBinder(org.hibernate.cfg.annotations.TableBinder)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setCollectionType(org.hibernate.annotations.common.reflection.XClass)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setTargetEntity(org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Collection", "org.hibernate.cfg.annotations.CollectionBinder.getCollection()"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setPropertyName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setDeclaringClass(org.hibernate.annotations.common.reflection.XClass)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.bind()"], ["org.hibernate.cfg.SecondPass", "org.hibernate.cfg.annotations.CollectionBinder.getSecondPass(org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3JoinColumn[], boolean, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass, boolean, boolean, org.hibernate.cfg.annotations.TableBinder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setCache(org.hibernate.annotations.Cache)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setOneToMany(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setIndexColumn(org.hibernate.cfg.IndexColumn)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setMapKey(javax.persistence.MapKey)"], ["java.lang.String", "org.hibernate.cfg.annotations.CollectionBinder.adjustUserSuppliedValueCollectionOrderingFragment(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setCascadeDeleteEnabled(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.bindManytoManyInverseFk(org.hibernate.mapping.PersistentClass, org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.mapping.SimpleValue, boolean, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setFkJoinColumns(org.hibernate.cfg.Ejb3JoinColumn[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setExplicitAssociationTable(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setElementColumns(org.hibernate.cfg.Ejb3Column[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setEmbedded(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setProperty(org.hibernate.annotations.common.reflection.XProperty)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setIgnoreNotFound(boolean)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setMapKeyColumns(org.hibernate.cfg.Ejb3Column[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setMapKeyManyToManyColumns(org.hibernate.cfg.Ejb3JoinColumn[])"], ["void", "org.hibernate.cfg.annotations.CollectionBinder.setLocalGenerators(java.util.HashMap<java.lang.String, org.hibernate.boot.model.IdentifierGeneratorDefinition>)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$2.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$2.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$3$2.getJpaEntityName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper.determineImplicitName(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper.handleExplicitName(java.lang.String, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper.toPhysicalName(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.annotations.PrimitiveArrayBinder", "org.hibernate.cfg.annotations.PrimitiveArrayBinder()"], ["org.hibernate.cfg.annotations.SimpleValueBinder", "org.hibernate.cfg.annotations.SimpleValueBinder()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setReferencedEntityName(java.lang.String)"], ["boolean", "org.hibernate.cfg.annotations.SimpleValueBinder.isVersion()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setVersion(boolean)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setTimestampVersionType(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setPropertyName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setReturnedClassName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setTable(org.hibernate.mapping.Table)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setColumns(org.hibernate.cfg.Ejb3Column[])"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setPersistentClassName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setType(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass, java.lang.String, org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setExplicitType(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setExplicitType(org.hibernate.annotations.Type)"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.SimpleValue", "org.hibernate.cfg.annotations.SimpleValueBinder.make()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.linkWithValue()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setKey(boolean)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.annotations.SimpleValueBinder.getAccessType()"], ["void", "org.hibernate.cfg.annotations.SimpleValueBinder.setAccessType(org.hibernate.cfg.AccessType)"], ["org.hibernate.cfg.annotations.SetBinder", "org.hibernate.cfg.annotations.SetBinder(boolean)"], ["void", "org.hibernate.cfg.annotations.SetBinder.setSqlOrderBy(org.hibernate.annotations.OrderBy)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$AssociationTableNameSource.getExplicitName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$AssociationTableNameSource.getLogicalName()"], ["org.hibernate.procedure.internal.ProcedureCallMementoImpl$ParameterMemento", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$ParameterDefinition.toMemento(org.hibernate.internal.SessionFactoryImpl)"], ["org.hibernate.cfg.annotations.NamedEntityGraphDefinition", "org.hibernate.cfg.annotations.NamedEntityGraphDefinition(javax.persistence.NamedEntityGraph, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.annotations.NamedEntityGraphDefinition.getRegisteredName()"], ["java.lang.String", "org.hibernate.cfg.annotations.NamedEntityGraphDefinition.getJpaEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.NamedEntityGraphDefinition.getEntityName()"], ["javax.persistence.NamedEntityGraph", "org.hibernate.cfg.annotations.NamedEntityGraphDefinition.getAnnotation()"], ["org.hibernate.cfg.annotations.PropertyBinder", "org.hibernate.cfg.annotations.PropertyBinder()"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setReferencedEntityName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setEmbedded(boolean)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setEntityBinder(org.hibernate.cfg.annotations.EntityBinder)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setInsertable(boolean)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setUpdatable(boolean)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setReturnedClassName(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setLazy(boolean)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setLazyGroup(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setAccessType(org.hibernate.cfg.AccessType)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setColumns(org.hibernate.cfg.Ejb3Column[])"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setHolder(org.hibernate.cfg.PropertyHolder)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setValue(org.hibernate.mapping.Value)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setCascade(java.lang.String)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setDeclaringClass(org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndBind()"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.annotations.PropertyBinder.makePropertyValueAndBind()"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setXToMany(boolean)"], ["org.hibernate.mapping.Property", "org.hibernate.cfg.annotations.PropertyBinder.makeProperty()"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setProperty(org.hibernate.annotations.common.reflection.XProperty)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setReturnedClass(org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.cfg.annotations.SimpleValueBinder", "org.hibernate.cfg.annotations.PropertyBinder.getSimpleValueBinder()"], ["org.hibernate.mapping.Value", "org.hibernate.cfg.annotations.PropertyBinder.getValue()"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setId(boolean)"], ["void", "org.hibernate.cfg.annotations.PropertyBinder.setInheritanceStatePerClass(java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["void", "org.hibernate.cfg.annotations.MapBinder$1.secondPass(java.util.Map, java.util.Map)"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper$1$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper$1$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper$1$1.getJpaEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$2.getClassName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$2.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2$2.getJpaEntityName()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$1.getSessionFactory()"], ["void", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$1.addQueryReturns(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn...)"], ["void", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition$1.addQuerySpaces(java.lang.String...)"], ["java.lang.String", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition.getRegisteredName()"], ["java.lang.String", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition.getProcedureName()"], ["org.hibernate.procedure.ProcedureCallMemento", "org.hibernate.cfg.annotations.NamedProcedureCallDefinition.toMemento(org.hibernate.internal.SessionFactoryImpl, java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>)"], ["void", "org.hibernate.cfg.annotations.CollectionBinder$1.secondPass(java.util.Map, java.util.Map)"], ["org.hibernate.cfg.annotations.ListBinder", "org.hibernate.cfg.annotations.ListBinder()"], ["void", "org.hibernate.cfg.annotations.ListBinder.setSqlOrderBy(org.hibernate.annotations.OrderBy)"], ["void", "org.hibernate.cfg.annotations.ListBinder.setSort(org.hibernate.annotations.Sort)"], ["org.hibernate.cfg.SecondPass", "org.hibernate.cfg.annotations.ListBinder.getSecondPass(org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3JoinColumn[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3Column[], org.hibernate.cfg.Ejb3JoinColumn[], boolean, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass, boolean, boolean, org.hibernate.cfg.annotations.TableBinder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2.getOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$1$2.getOwningEntityNaming()"], ["java.lang.String", "org.hibernate.cfg.annotations.TableBinder$1$2.getNonOwningPhysicalTableName()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.TableBinder$1$2.getNonOwningEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.annotations.TableBinder$1$2.getAssociationOwningAttributePath()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.annotations.TableBinder$1$2.getBuildingContext()"], ["org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.cfg.annotations.EntityBinder$LocalCacheAnnotationStub.usage()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$LocalCacheAnnotationStub.region()"], ["java.lang.String", "org.hibernate.cfg.annotations.EntityBinder$LocalCacheAnnotationStub.include()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.annotations.EntityBinder$LocalCacheAnnotationStub.annotationType()"], ["org.hibernate.cfg.annotations.reflection.ClassLoaderAccessLazyImpl", "org.hibernate.cfg.annotations.reflection.ClassLoaderAccessLazyImpl(org.hibernate.boot.spi.MetadataBuildingOptions)"], ["<T> java.lang.Class<T>", "org.hibernate.cfg.annotations.reflection.ClassLoaderAccessLazyImpl.classForName(java.lang.String)"], ["java.net.URL", "org.hibernate.cfg.annotations.reflection.ClassLoaderAccessLazyImpl.locateResource(java.lang.String)"], ["org.hibernate.cfg.annotations.reflection.XMLContext", "org.hibernate.cfg.annotations.reflection.XMLContext(org.hibernate.boot.spi.ClassLoaderAccess)"], ["org.hibernate.cfg.annotations.reflection.XMLContext", "org.hibernate.cfg.annotations.reflection.XMLContext(org.hibernate.boot.spi.BootstrapContext)"], ["java.lang.String", "org.hibernate.cfg.annotations.reflection.XMLContext.buildSafeClassName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.annotations.reflection.XMLContext.buildSafeClassName(java.lang.String, org.hibernate.cfg.annotations.reflection.XMLContext$Default)"], ["org.hibernate.cfg.annotations.reflection.XMLContext$Default", "org.hibernate.cfg.annotations.reflection.XMLContext.getDefault(java.lang.String)"], ["org.dom4j.Element", "org.hibernate.cfg.annotations.reflection.XMLContext.getXMLTree(java.lang.String)"], ["boolean", "org.hibernate.cfg.annotations.reflection.XMLContext.hasContext()"], ["void", "org.hibernate.cfg.annotations.reflection.XMLContext.applyDiscoveredAttributeConverters(org.hibernate.cfg.annotations.reflection.AttributeConverterDefinitionCollector)"], ["org.hibernate.cfg.annotations.reflection.PersistentAttributeFilter", "org.hibernate.cfg.annotations.reflection.PersistentAttributeFilter()"], ["boolean", "org.hibernate.cfg.annotations.reflection.PersistentAttributeFilter.returnStatic()"], ["boolean", "org.hibernate.cfg.annotations.reflection.PersistentAttributeFilter.returnTransient()"], ["org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader$PropertyType[]", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader$PropertyType.values()"], ["org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader$PropertyType", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader$PropertyType.valueOf(java.lang.String)"], ["org.hibernate.cfg.annotations.reflection.XMLContext$Default", "org.hibernate.cfg.annotations.reflection.XMLContext$Default()"], ["javax.persistence.AccessType", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getAccess()"], ["java.lang.String", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getCatalog()"], ["java.lang.String", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getPackageName()"], ["java.lang.String", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getSchema()"], ["java.lang.Boolean", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getMetadataComplete()"], ["boolean", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.canUseJavaAnnotations()"], ["java.lang.Boolean", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getCascadePersist()"], ["void", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.override(org.hibernate.cfg.annotations.reflection.XMLContext$Default)"], ["void", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.setDelimitedIdentifiers(java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.cfg.annotations.reflection.XMLContext$Default.getDelimitedIdentifier()"], ["org.hibernate.cfg.annotations.reflection.JPAMetadataProvider", "org.hibernate.cfg.annotations.reflection.JPAMetadataProvider(org.hibernate.boot.spi.MetadataBuildingOptions)"], ["org.hibernate.cfg.annotations.reflection.JPAMetadataProvider", "org.hibernate.cfg.annotations.reflection.JPAMetadataProvider(org.hibernate.boot.spi.BootstrapContext)"], ["org.hibernate.annotations.common.reflection.AnnotationReader", "org.hibernate.cfg.annotations.reflection.JPAMetadataProvider.getAnnotationReader(java.lang.reflect.AnnotatedElement)"], ["java.util.Map<java.lang.Object, java.lang.Object>", "org.hibernate.cfg.annotations.reflection.JPAMetadataProvider.getDefaults()"], ["org.hibernate.cfg.annotations.reflection.XMLContext", "org.hibernate.cfg.annotations.reflection.JPAMetadataProvider.getXMLContext()"], ["org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader(java.lang.reflect.AnnotatedElement, org.hibernate.cfg.annotations.reflection.XMLContext, org.hibernate.boot.spi.ClassLoaderAccess)"], ["org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader(java.lang.reflect.AnnotatedElement, org.hibernate.cfg.annotations.reflection.XMLContext, org.hibernate.boot.spi.BootstrapContext)"], ["<T extends java.lang.annotation.Annotation> T", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.getAnnotation(java.lang.Class<T>)"], ["<T extends java.lang.annotation.Annotation> boolean", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.isAnnotationPresent(java.lang.Class<T>)"], ["java.lang.annotation.Annotation[]", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.getAnnotations()"], ["java.util.List", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.buildNamedQueries(org.dom4j.Element, boolean, org.hibernate.cfg.annotations.reflection.XMLContext$Default, org.hibernate.boot.spi.ClassLoaderAccess)"], ["javax.persistence.TableGenerator", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.buildTableGeneratorAnnotation(org.dom4j.Element, org.hibernate.cfg.annotations.reflection.XMLContext$Default)"], ["javax.persistence.SequenceGenerator", "org.hibernate.cfg.annotations.reflection.JPAOverriddenAnnotationReader.buildSequenceGeneratorAnnotation(org.dom4j.Element)"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper$1.getEntityNaming()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.annotations.EntityBinder$EntityTableNamingStrategyHelper$1.getBuildingContext()"], ["org.hibernate.cfg.AccessType[]", "org.hibernate.cfg.AccessType.values()"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.AccessType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.AccessType.getType()"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.AccessType.getAccessStrategy(java.lang.String)"], ["org.hibernate.cfg.AccessType", "org.hibernate.cfg.AccessType.getAccessStrategy(javax.persistence.AccessType)"], ["default", "org.hibernate.cfg.PropertyHolder.javax.persistence.ForeignKey getOverriddenForeignKey(java.lang.String)"], ["org.hibernate.cfg.CollectionPropertyHolder", "org.hibernate.cfg.CollectionPropertyHolder(org.hibernate.mapping.Collection, java.lang.String, org.hibernate.annotations.common.reflection.XClass, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.Collection", "org.hibernate.cfg.CollectionPropertyHolder.getCollectionBinding()"], ["void", "org.hibernate.cfg.CollectionPropertyHolder.startingProperty(org.hibernate.annotations.common.reflection.XProperty)"], ["java.lang.String", "org.hibernate.cfg.CollectionPropertyHolder.getClassName()"], ["java.lang.String", "org.hibernate.cfg.CollectionPropertyHolder.getEntityOwnerClassName()"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.CollectionPropertyHolder.getTable()"], ["void", "org.hibernate.cfg.CollectionPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.cfg.CollectionPropertyHolder.getIdentifier()"], ["boolean", "org.hibernate.cfg.CollectionPropertyHolder.isOrWithinEmbeddedId()"], ["boolean", "org.hibernate.cfg.CollectionPropertyHolder.isWithinElementCollection()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.cfg.CollectionPropertyHolder.getPersistentClass()"], ["boolean", "org.hibernate.cfg.CollectionPropertyHolder.isComponent()"], ["boolean", "org.hibernate.cfg.CollectionPropertyHolder.isEntity()"], ["java.lang.String", "org.hibernate.cfg.CollectionPropertyHolder.getEntityName()"], ["void", "org.hibernate.cfg.CollectionPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.cfg.Ejb3Column[], org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Join", "org.hibernate.cfg.CollectionPropertyHolder.addJoin(javax.persistence.JoinTable, boolean)"], ["java.lang.String", "org.hibernate.cfg.CollectionPropertyHolder.toString()"], ["void", "org.hibernate.cfg.CollectionPropertyHolder.prepare(org.hibernate.annotations.common.reflection.XProperty)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.cfg.CollectionPropertyHolder.resolveElementAttributeConverterDescriptor(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.boot.model.convert.spi.ConverterDescriptor", "org.hibernate.cfg.CollectionPropertyHolder.mapKeyAttributeConverterDescriptor(org.hibernate.annotations.common.reflection.XProperty, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.cfg.UniqueConstraintHolder", "org.hibernate.cfg.UniqueConstraintHolder()"], ["java.lang.String", "org.hibernate.cfg.UniqueConstraintHolder.getName()"], ["org.hibernate.cfg.UniqueConstraintHolder", "org.hibernate.cfg.UniqueConstraintHolder.setName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.cfg.UniqueConstraintHolder.getColumns()"], ["org.hibernate.cfg.UniqueConstraintHolder", "org.hibernate.cfg.UniqueConstraintHolder.setColumns(java.lang.String[])"], ["org.hibernate.cfg.NotYetImplementedException", "org.hibernate.cfg.NotYetImplementedException()"], ["org.hibernate.cfg.NotYetImplementedException", "org.hibernate.cfg.NotYetImplementedException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.cfg.NotYetImplementedException", "org.hibernate.cfg.NotYetImplementedException(java.lang.Throwable)"], ["org.hibernate.cfg.NotYetImplementedException", "org.hibernate.cfg.NotYetImplementedException(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.name()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.table()"], ["int", "org.hibernate.cfg.BinderHelper$2.initialValue()"], ["int", "org.hibernate.cfg.BinderHelper$2.allocationSize()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.catalog()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.schema()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.pkColumnName()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.valueColumnName()"], ["java.lang.String", "org.hibernate.cfg.BinderHelper$2.pkColumnValue()"], ["javax.persistence.UniqueConstraint[]", "org.hibernate.cfg.BinderHelper$2.uniqueConstraints()"], ["javax.persistence.Index[]", "org.hibernate.cfg.BinderHelper$2.indexes()"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.cfg.BinderHelper$2.annotationType()"], ["void", "org.hibernate.cfg.Ejb3Column.setTable(org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getLogicalColumnName()"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getSqlType()"], ["int", "org.hibernate.cfg.Ejb3Column.getLength()"], ["int", "org.hibernate.cfg.Ejb3Column.getPrecision()"], ["int", "org.hibernate.cfg.Ejb3Column.getScale()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isUnique()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isFormula()"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getFormulaString()"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getExplicitTableName()"], ["void", "org.hibernate.cfg.Ejb3Column.setExplicitTableName(java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3Column.setFormula(java.lang.String)"], ["boolean", "org.hibernate.cfg.Ejb3Column.isImplicit()"], ["void", "org.hibernate.cfg.Ejb3Column.setInsertable(boolean)"], ["void", "org.hibernate.cfg.Ejb3Column.setUpdatable(boolean)"], ["void", "org.hibernate.cfg.Ejb3Column.setBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3Column.setImplicit(boolean)"], ["void", "org.hibernate.cfg.Ejb3Column.setSqlType(java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3Column.setLength(int)"], ["void", "org.hibernate.cfg.Ejb3Column.setPrecision(int)"], ["void", "org.hibernate.cfg.Ejb3Column.setScale(int)"], ["void", "org.hibernate.cfg.Ejb3Column.setLogicalColumnName(java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3Column.setPropertyName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getPropertyName()"], ["void", "org.hibernate.cfg.Ejb3Column.setUnique(boolean)"], ["boolean", "org.hibernate.cfg.Ejb3Column.isNullable()"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getDefaultValue()"], ["void", "org.hibernate.cfg.Ejb3Column.setDefaultValue(java.lang.String)"], ["org.hibernate.cfg.Ejb3Column", "org.hibernate.cfg.Ejb3Column()"], ["void", "org.hibernate.cfg.Ejb3Column.bind()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isNameDeferred()"], ["void", "org.hibernate.cfg.Ejb3Column.redefineColumnName(java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.getName()"], ["org.hibernate.mapping.Column", "org.hibernate.cfg.Ejb3Column.getMappingColumn()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isInsertable()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isUpdatable()"], ["void", "org.hibernate.cfg.Ejb3Column.setNullable(boolean)"], ["void", "org.hibernate.cfg.Ejb3Column.setJoins(java.util.Map<java.lang.String, org.hibernate.mapping.Join>)"], ["org.hibernate.cfg.PropertyHolder", "org.hibernate.cfg.Ejb3Column.getPropertyHolder()"], ["void", "org.hibernate.cfg.Ejb3Column.setPropertyHolder(org.hibernate.cfg.PropertyHolder)"], ["void", "org.hibernate.cfg.Ejb3Column.linkWithValue(org.hibernate.mapping.SimpleValue)"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.Ejb3Column.getTable()"], ["boolean", "org.hibernate.cfg.Ejb3Column.isSecondary()"], ["org.hibernate.mapping.Join", "org.hibernate.cfg.Ejb3Column.getJoin()"], ["void", "org.hibernate.cfg.Ejb3Column.forceNotNull()"], ["org.hibernate.cfg.Ejb3Column[]", "org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(javax.persistence.Column[], org.hibernate.annotations.Formula, org.hibernate.cfg.annotations.Nullability, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.Ejb3Column[]", "org.hibernate.cfg.Ejb3Column.buildColumnFromAnnotation(javax.persistence.Column[], org.hibernate.annotations.Formula, org.hibernate.cfg.annotations.Nullability, org.hibernate.cfg.PropertyHolder, org.hibernate.cfg.PropertyData, java.lang.String, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.Ejb3Column.checkPropertyConsistency(org.hibernate.cfg.Ejb3Column[], java.lang.String)"], ["void", "org.hibernate.cfg.Ejb3Column.addIndex(org.hibernate.annotations.Index, boolean)"], ["java.lang.String", "org.hibernate.cfg.Ejb3Column.toString()"], ["org.hibernate.cfg.ImprovedNamingStrategy", "org.hibernate.cfg.ImprovedNamingStrategy()"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.classToTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.propertyToColumnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.tableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.columnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.collectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.joinKeyColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.foreignKeyColumnName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.logicalColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.logicalCollectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ImprovedNamingStrategy.logicalCollectionColumnName(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.cfg.CannotForceNonNullableException", "org.hibernate.cfg.CannotForceNonNullableException(java.lang.String)"], ["org.hibernate.cfg.ComponentPropertyHolder", "org.hibernate.cfg.ComponentPropertyHolder(org.hibernate.mapping.Component, java.lang.String, org.hibernate.cfg.PropertyData, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["void", "org.hibernate.cfg.ComponentPropertyHolder.startingProperty(org.hibernate.annotations.common.reflection.XProperty)"], ["java.lang.String", "org.hibernate.cfg.ComponentPropertyHolder.getEntityName()"], ["void", "org.hibernate.cfg.ComponentPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.cfg.Ejb3Column[], org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.Join", "org.hibernate.cfg.ComponentPropertyHolder.addJoin(javax.persistence.JoinTable, boolean)"], ["java.lang.String", "org.hibernate.cfg.ComponentPropertyHolder.getClassName()"], ["java.lang.String", "org.hibernate.cfg.ComponentPropertyHolder.getEntityOwnerClassName()"], ["org.hibernate.mapping.Table", "org.hibernate.cfg.ComponentPropertyHolder.getTable()"], ["void", "org.hibernate.cfg.ComponentPropertyHolder.addProperty(org.hibernate.mapping.Property, org.hibernate.annotations.common.reflection.XClass)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.cfg.ComponentPropertyHolder.getIdentifier()"], ["boolean", "org.hibernate.cfg.ComponentPropertyHolder.isOrWithinEmbeddedId()"], ["boolean", "org.hibernate.cfg.ComponentPropertyHolder.isWithinElementCollection()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.cfg.ComponentPropertyHolder.getPersistentClass()"], ["boolean", "org.hibernate.cfg.ComponentPropertyHolder.isComponent()"], ["boolean", "org.hibernate.cfg.ComponentPropertyHolder.isEntity()"], ["void", "org.hibernate.cfg.ComponentPropertyHolder.setParentProperty(java.lang.String)"], ["javax.persistence.Column[]", "org.hibernate.cfg.ComponentPropertyHolder.getOverriddenColumn(java.lang.String)"], ["javax.persistence.JoinColumn[]", "org.hibernate.cfg.ComponentPropertyHolder.getOverriddenJoinColumn(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.ComponentPropertyHolder.toString()"], ["org.hibernate.boot.model.naming.ImplicitJoinColumnNameSource$Nature", "org.hibernate.cfg.Ejb3JoinColumn$1.getNature()"], ["org.hibernate.boot.model.naming.EntityNaming", "org.hibernate.cfg.Ejb3JoinColumn$1.getEntityNaming()"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.Ejb3JoinColumn$1.getAttributePath()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$1.getReferencedTableName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.cfg.Ejb3JoinColumn$1.getReferencedColumnName()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.Ejb3JoinColumn$1.getBuildingContext()"], ["org.hibernate.cfg.CreateKeySecondPass", "org.hibernate.cfg.CreateKeySecondPass(org.hibernate.mapping.RootClass)"], ["org.hibernate.cfg.CreateKeySecondPass", "org.hibernate.cfg.CreateKeySecondPass(org.hibernate.mapping.JoinedSubclass)"], ["void", "org.hibernate.cfg.CreateKeySecondPass.doSecondPass(java.util.Map)"], ["org.hibernate.cfg.BaselineSessionEventsListenerBuilder", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder(boolean, java.lang.Class<? extends org.hibernate.SessionEventListener>)"], ["boolean", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder.isLogSessionMetrics()"], ["void", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder.setLogSessionMetrics(boolean)"], ["java.lang.Class<? extends org.hibernate.SessionEventListener>", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder.getAutoListener()"], ["void", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder.setAutoListener(java.lang.Class<? extends org.hibernate.SessionEventListener>)"], ["org.hibernate.SessionEventListener[]", "org.hibernate.cfg.BaselineSessionEventsListenerBuilder.buildBaseline()"], ["org.hibernate.cfg.DefaultNamingStrategy", "org.hibernate.cfg.DefaultNamingStrategy()"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.classToTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.propertyToColumnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.tableName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.columnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.collectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.joinKeyColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.foreignKeyColumnName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.logicalColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.logicalCollectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultNamingStrategy.logicalCollectionColumnName(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$1$1.getClassName()"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$1$1.getEntityName()"], ["java.lang.String", "org.hibernate.cfg.Ejb3JoinColumn$1$1.getJpaEntityName()"], ["org.hibernate.cfg.DefaultComponentSafeNamingStrategy", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy()"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.propertyToColumnName(java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.collectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.foreignKeyColumnName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.logicalColumnName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.logicalCollectionTableName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.cfg.DefaultComponentSafeNamingStrategy.logicalCollectionColumnName(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.boot.model.source.spi.AttributePath", "org.hibernate.cfg.Ejb3Column$2.getAttributePath()"], ["boolean", "org.hibernate.cfg.Ejb3Column$2.isCollectionElement()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.cfg.Ejb3Column$2.getBuildingContext()"], ["org.hibernate.cfg.PropertyHolder", "org.hibernate.cfg.PropertyHolderBuilder.buildPropertyHolder(org.hibernate.annotations.common.reflection.XClass, org.hibernate.mapping.PersistentClass, org.hibernate.cfg.annotations.EntityBinder, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["org.hibernate.cfg.PropertyHolder", "org.hibernate.cfg.PropertyHolderBuilder.buildPropertyHolder(org.hibernate.mapping.Component, java.lang.String, org.hibernate.cfg.PropertyData, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.CollectionPropertyHolder", "org.hibernate.cfg.PropertyHolderBuilder.buildPropertyHolder(org.hibernate.mapping.Collection, java.lang.String, org.hibernate.annotations.common.reflection.XClass, org.hibernate.annotations.common.reflection.XProperty, org.hibernate.cfg.PropertyHolder, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.cfg.PropertyHolder", "org.hibernate.cfg.PropertyHolderBuilder.buildPropertyHolder(org.hibernate.mapping.PersistentClass, java.util.Map<java.lang.String, org.hibernate.mapping.Join>, org.hibernate.boot.spi.MetadataBuildingContext, java.util.Map<org.hibernate.annotations.common.reflection.XClass, org.hibernate.cfg.InheritanceState>)"], ["java.lang.reflect.Type[]", "org.hibernate.cfg.AttributeConverterDefinition$1.getActualTypeArguments()"], ["java.lang.reflect.Type", "org.hibernate.cfg.AttributeConverterDefinition$1.getRawType()"], ["java.lang.reflect.Type", "org.hibernate.cfg.AttributeConverterDefinition$1.getOwnerType()"], ["org.hibernate.type.NClobType", "org.hibernate.type.NClobType()"], ["java.lang.String", "org.hibernate.type.NClobType.getName()"], ["org.hibernate.type.CompositeCustomType", "org.hibernate.type.CompositeCustomType(org.hibernate.usertype.CompositeUserType)"], ["org.hibernate.type.CompositeCustomType", "org.hibernate.type.CompositeCustomType(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["java.lang.String", "org.hibernate.type.CompositeCustomType.getName()"], ["java.lang.Class", "org.hibernate.type.CompositeCustomType.getReturnedClass()"], ["boolean", "org.hibernate.type.CompositeCustomType.isMutable()"], ["java.lang.String[]", "org.hibernate.type.CompositeCustomType.getRegistrationKeys()"], ["org.hibernate.usertype.CompositeUserType", "org.hibernate.type.CompositeCustomType.getUserType()"], ["boolean", "org.hibernate.type.CompositeCustomType.isMethodOf(java.lang.reflect.Method)"], ["org.hibernate.type.Type[]", "org.hibernate.type.CompositeCustomType.getSubtypes()"], ["java.lang.String[]", "org.hibernate.type.CompositeCustomType.getPropertyNames()"], ["int", "org.hibernate.type.CompositeCustomType.getPropertyIndex(java.lang.String)"], ["java.lang.Object[]", "org.hibernate.type.CompositeCustomType.getPropertyValues(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.type.CompositeCustomType.getPropertyValues(java.lang.Object, org.hibernate.EntityMode)"], ["void", "org.hibernate.type.CompositeCustomType.setPropertyValues(java.lang.Object, java.lang.Object[], org.hibernate.EntityMode)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.getPropertyValue(java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.getPropertyValue(java.lang.Object, int)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.type.CompositeCustomType.getCascadeStyle(int)"], ["org.hibernate.FetchMode", "org.hibernate.type.CompositeCustomType.getFetchMode(int)"], ["boolean", "org.hibernate.type.CompositeCustomType.isComponentType()"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.CompositeCustomType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["boolean", "org.hibernate.type.CompositeCustomType.isEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.CompositeCustomType.getHashCode(java.lang.Object)"], ["int", "org.hibernate.type.CompositeCustomType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CompositeCustomType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.CompositeCustomType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.CompositeCustomType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.type.CompositeCustomType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CompositeCustomType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CompositeCustomType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.type.CompositeCustomType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean[]", "org.hibernate.type.CompositeCustomType.getPropertyNullability()"], ["boolean[]", "org.hibernate.type.CompositeCustomType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.CompositeCustomType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CompositeCustomType.isEmbedded()"], ["boolean", "org.hibernate.type.CompositeCustomType.hasNotNullProperty()"], ["org.hibernate.type.CurrencyType", "org.hibernate.type.CurrencyType()"], ["java.lang.String", "org.hibernate.type.CurrencyType.getName()"], ["java.lang.String", "org.hibernate.type.CurrencyType.objectToSQLString(java.util.Currency, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.CurrencyType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.DurationType", "org.hibernate.type.DurationType()"], ["java.lang.String", "org.hibernate.type.DurationType.objectToSQLString(java.time.Duration, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.DurationType.getName()"], ["java.lang.String", "org.hibernate.type.DurationType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.ShortType", "org.hibernate.type.ShortType()"], ["java.lang.String", "org.hibernate.type.ShortType.getName()"], ["java.lang.String[]", "org.hibernate.type.ShortType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.ShortType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.ShortType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.ShortType.objectToSQLString(java.lang.Short, org.hibernate.dialect.Dialect)"], ["java.lang.Short", "org.hibernate.type.ShortType.stringToObject(java.lang.String)"], ["java.lang.Short", "org.hibernate.type.ShortType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Short", "org.hibernate.type.ShortType.next(java.lang.Short, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.ShortType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.ShortType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.ShortType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ShortType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.LocalDateTimeType", "org.hibernate.type.LocalDateTimeType()"], ["java.lang.String", "org.hibernate.type.LocalDateTimeType.getName()"], ["java.lang.String", "org.hibernate.type.LocalDateTimeType.objectToSQLString(java.time.LocalDateTime, org.hibernate.dialect.Dialect)"], ["java.time.LocalDateTime", "org.hibernate.type.LocalDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.time.LocalDateTime", "org.hibernate.type.LocalDateTimeType.next(java.time.LocalDateTime, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.LocalDateTimeType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.LocalDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.LocalDateTimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.CalendarType", "org.hibernate.type.CalendarType()"], ["java.lang.String", "org.hibernate.type.CalendarType.getName()"], ["java.lang.String[]", "org.hibernate.type.CalendarType.getRegistrationKeys()"], ["java.util.Calendar", "org.hibernate.type.CalendarType.next(java.util.Calendar, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.Calendar", "org.hibernate.type.CalendarType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CalendarType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CalendarType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.PostgresUUIDType", "org.hibernate.type.PostgresUUIDType()"], ["java.lang.String", "org.hibernate.type.PostgresUUIDType.getName()"], ["org.hibernate.type.AbstractStandardBasicType", "org.hibernate.type.AbstractStandardBasicType(org.hibernate.type.descriptor.sql.SqlTypeDescriptor, org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>)"], ["T", "org.hibernate.type.AbstractStandardBasicType.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.AbstractStandardBasicType.toString(T)"], ["T", "org.hibernate.type.AbstractStandardBasicType.fromStringValue(java.lang.String)"], ["boolean[]", "org.hibernate.type.AbstractStandardBasicType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["java.lang.String[]", "org.hibernate.type.AbstractStandardBasicType.getRegistrationKeys()"], ["void", "org.hibernate.type.AbstractStandardBasicType.setJavaTypeDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.type.AbstractStandardBasicType.getSqlTypeDescriptor()"], ["void", "org.hibernate.type.AbstractStandardBasicType.setSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["java.lang.Class", "org.hibernate.type.AbstractStandardBasicType.getReturnedClass()"], ["int", "org.hibernate.type.AbstractStandardBasicType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["int[]", "org.hibernate.type.AbstractStandardBasicType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.AbstractStandardBasicType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.AbstractStandardBasicType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isAssociationType()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isCollectionType()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isComponentType()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isEntityType()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isAnyType()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isXMLElement()"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isSame(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isEqual(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.AbstractStandardBasicType.getHashCode(java.lang.Object)"], ["int", "org.hibernate.type.AbstractStandardBasicType.getHashCode(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.type.AbstractStandardBasicType.compare(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["T", "org.hibernate.type.AbstractStandardBasicType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.get(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.AbstractStandardBasicType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.AbstractStandardBasicType.set(java.sql.PreparedStatement, T, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.AbstractStandardBasicType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.isMutable()"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.io.Serializable", "org.hibernate.type.AbstractStandardBasicType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.AbstractStandardBasicType.beforeAssemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.type.Type", "org.hibernate.type.AbstractStandardBasicType.getSemiResolvedType(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["java.lang.Object", "org.hibernate.type.AbstractStandardBasicType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.canDoExtraction()"], ["T", "org.hibernate.type.AbstractStandardBasicType.extract(java.sql.CallableStatement, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["T", "org.hibernate.type.AbstractStandardBasicType.extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.AbstractStandardBasicType.nullSafeSet(java.sql.CallableStatement, java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.AbstractStandardBasicType.canDoSetting()"], ["org.hibernate.type.CustomType", "org.hibernate.type.CustomType(org.hibernate.usertype.UserType)"], ["org.hibernate.type.CustomType", "org.hibernate.type.CustomType(org.hibernate.usertype.UserType, java.lang.String[])"], ["org.hibernate.usertype.UserType", "org.hibernate.type.CustomType.getUserType()"], ["java.lang.String[]", "org.hibernate.type.CustomType.getRegistrationKeys()"], ["int[]", "org.hibernate.type.CustomType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CustomType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CustomType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["int", "org.hibernate.type.CustomType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["java.lang.Class", "org.hibernate.type.CustomType.getReturnedClass()"], ["boolean", "org.hibernate.type.CustomType.isEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.CustomType.getHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.CustomType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.type.CustomType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.CustomType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.CustomType.toXMLString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.CustomType.fromXMLString(java.lang.String, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.type.CustomType.getName()"], ["java.lang.Object", "org.hibernate.type.CustomType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.CustomType.isMutable()"], ["java.lang.Object", "org.hibernate.type.CustomType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.CustomType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.util.Comparator", "org.hibernate.type.CustomType.getComparator()"], ["java.lang.Object", "org.hibernate.type.CustomType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CustomType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.CustomType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean[]", "org.hibernate.type.CustomType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.CustomType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.CustomType.toString(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomType.fromStringValue(java.lang.String)"], ["boolean", "org.hibernate.type.CustomType.canDoSetting()"], ["void", "org.hibernate.type.CustomType.nullSafeSet(java.sql.CallableStatement, java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CustomType.canDoExtraction()"], ["java.lang.Object", "org.hibernate.type.CustomType.extract(java.sql.CallableStatement, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CustomType.extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.type.CustomType.hashCode()"], ["boolean", "org.hibernate.type.CustomType.equals(java.lang.Object)"], ["org.hibernate.type.CalendarDateType", "org.hibernate.type.CalendarDateType()"], ["java.lang.String", "org.hibernate.type.CalendarDateType.getName()"], ["org.hibernate.type.BagType", "org.hibernate.type.BagType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.BagType", "org.hibernate.type.BagType(java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.BagType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.BagType.getReturnedClass()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.BagType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.BagType.instantiate(int)"], ["org.hibernate.type.CustomCollectionType", "org.hibernate.type.CustomCollectionType(org.hibernate.type.TypeFactory$TypeScope, java.lang.Class, java.lang.String, java.lang.String)"], ["org.hibernate.type.CustomCollectionType", "org.hibernate.type.CustomCollectionType(java.lang.Class, java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.CustomCollectionType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.CustomCollectionType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Class", "org.hibernate.type.CustomCollectionType.getReturnedClass()"], ["java.lang.Object", "org.hibernate.type.CustomCollectionType.instantiate(int)"], ["java.util.Iterator", "org.hibernate.type.CustomCollectionType.getElementsIterator(java.lang.Object)"], ["boolean", "org.hibernate.type.CustomCollectionType.contains(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CustomCollectionType.indexOf(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CustomCollectionType.replaceElements(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.usertype.UserCollectionType", "org.hibernate.type.CustomCollectionType.getUserType()"], ["org.hibernate.type.AdaptedImmutableType", "org.hibernate.type.AdaptedImmutableType(org.hibernate.type.AbstractStandardBasicType<T>)"], ["java.lang.String", "org.hibernate.type.AdaptedImmutableType.getName()"], ["org.hibernate.type.IdentifierBagType", "org.hibernate.type.IdentifierBagType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.IdentifierBagType", "org.hibernate.type.IdentifierBagType(java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.IdentifierBagType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.type.IdentifierBagType.instantiate(int)"], ["java.lang.Class", "org.hibernate.type.IdentifierBagType.getReturnedClass()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.IdentifierBagType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.type.OrderedSetType", "org.hibernate.type.OrderedSetType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.OrderedSetType", "org.hibernate.type.OrderedSetType(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.type.OrderedSetType.instantiate(int)"], ["boolean", "org.hibernate.type.ForeignKeyDirection$2.cascadeNow(org.hibernate.engine.internal.CascadePoint)"], ["org.hibernate.type.CharacterType", "org.hibernate.type.CharacterType()"], ["java.lang.String", "org.hibernate.type.CharacterType.getName()"], ["java.lang.String[]", "org.hibernate.type.CharacterType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.CharacterType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.CharacterType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.CharacterType.objectToSQLString(java.lang.Character, org.hibernate.dialect.Dialect)"], ["java.lang.Character", "org.hibernate.type.CharacterType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.CharacterType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.CharacterType.stringToObject(java.lang.String)"], ["void", "org.hibernate.type.TypeHelper.deepCopy(java.lang.Object[], org.hibernate.type.Type[], boolean[], java.lang.Object[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.TypeHelper.beforeAssemble(java.io.Serializable[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.type.TypeHelper.assemble(java.io.Serializable[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable[]", "org.hibernate.type.TypeHelper.disassemble(java.lang.Object[], org.hibernate.type.Type[], boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.type.TypeHelper.replace(java.lang.Object[], java.lang.Object[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["java.lang.Object[]", "org.hibernate.type.TypeHelper.replace(java.lang.Object[], java.lang.Object[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection)"], ["java.lang.Object[]", "org.hibernate.type.TypeHelper.replaceAssociations(java.lang.Object[], java.lang.Object[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection)"], ["int[]", "org.hibernate.type.TypeHelper.findDirty(org.hibernate.tuple.NonIdentifierAttribute[], java.lang.Object[], java.lang.Object[], boolean[][], boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.type.TypeHelper.findDirty(org.hibernate.tuple.NonIdentifierAttribute[], java.lang.Object[], java.lang.Object[], boolean[][], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.type.TypeHelper.findModified(org.hibernate.tuple.NonIdentifierAttribute[], java.lang.Object[], java.lang.Object[], boolean[][], boolean[], boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.type.TypeHelper.findModified(org.hibernate.tuple.NonIdentifierAttribute[], java.lang.Object[], java.lang.Object[], boolean[][], boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.CharacterNCharType", "org.hibernate.type.CharacterNCharType()"], ["java.lang.String", "org.hibernate.type.CharacterNCharType.getName()"], ["java.io.Serializable", "org.hibernate.type.CharacterNCharType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.CharacterNCharType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.CharacterNCharType.objectToSQLString(java.lang.Character, org.hibernate.dialect.Dialect)"], ["java.lang.Character", "org.hibernate.type.CharacterNCharType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.CharacterNCharType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.CharacterNCharType.stringToObject(java.lang.String)"], ["org.hibernate.type.SerializableToBlobType", "org.hibernate.type.SerializableToBlobType()"], ["java.lang.String", "org.hibernate.type.SerializableToBlobType.getName()"], ["void", "org.hibernate.type.SerializableToBlobType.setParameterValues(java.util.Properties)"], ["org.hibernate.type.OneToOneType", "org.hibernate.type.OneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.OneToOneType", "org.hibernate.type.OneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.OneToOneType", "org.hibernate.type.OneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.type.OneToOneType", "org.hibernate.type.OneToOneType(org.hibernate.type.OneToOneType, java.lang.String)"], ["java.lang.String", "org.hibernate.type.OneToOneType.getPropertyName()"], ["boolean", "org.hibernate.type.OneToOneType.isNull(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.type.OneToOneType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["int[]", "org.hibernate.type.OneToOneType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.OneToOneType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.OneToOneType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["boolean[]", "org.hibernate.type.OneToOneType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["void", "org.hibernate.type.OneToOneType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.OneToOneType.isOneToOne()"], ["boolean", "org.hibernate.type.OneToOneType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.OneToOneType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.OneToOneType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.type.OneToOneType.getForeignKeyDirection()"], ["java.lang.Object", "org.hibernate.type.OneToOneType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.OneToOneType.isNullable()"], ["boolean", "org.hibernate.type.OneToOneType.useLHSPrimaryKey()"], ["java.io.Serializable", "org.hibernate.type.OneToOneType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.OneToOneType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.OneToOneType.isAlwaysDirtyChecked()"], ["org.hibernate.type.WrapperBinaryType", "org.hibernate.type.WrapperBinaryType()"], ["java.lang.String[]", "org.hibernate.type.WrapperBinaryType.getRegistrationKeys()"], ["java.lang.String", "org.hibernate.type.WrapperBinaryType.getName()"], ["org.hibernate.type.DbTimestampType", "org.hibernate.type.DbTimestampType()"], ["java.lang.String", "org.hibernate.type.DbTimestampType.getName()"], ["java.lang.String[]", "org.hibernate.type.DbTimestampType.getRegistrationKeys()"], ["java.util.Date", "org.hibernate.type.DbTimestampType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.DbTimestampType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.type.spi.TypeConfiguration$Scope.getMetadataBuildingContext()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.type.spi.TypeConfiguration$Scope.getServiceRegistry()"], ["void", "org.hibernate.type.spi.TypeConfiguration$Scope.setMetadataBuildingContext(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.type.spi.TypeConfiguration$Scope.getSessionFactory()"], ["void", "org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory(org.hibernate.SessionFactory)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.type.spi.TypeConfiguration()"], ["java.lang.String", "org.hibernate.type.spi.TypeConfiguration.getUuid()"], ["org.hibernate.type.TypeResolver", "org.hibernate.type.spi.TypeConfiguration.getTypeResolver()"], ["org.hibernate.type.BasicTypeRegistry", "org.hibernate.type.spi.TypeConfiguration.getBasicTypeRegistry()"], ["org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry", "org.hibernate.type.spi.TypeConfiguration.getJavaTypeDescriptorRegistry()"], ["org.hibernate.type.descriptor.sql.spi.SqlTypeDescriptorRegistry", "org.hibernate.type.spi.TypeConfiguration.getSqlTypeDescriptorRegistry()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.type.spi.TypeConfiguration.getImportMap()"], ["java.util.Map<java.lang.Integer, java.util.Set<java.lang.String>>", "org.hibernate.type.spi.TypeConfiguration.getJdbcToHibernateTypeContributionMap()"], ["org.hibernate.boot.spi.MetadataBuildingContext", "org.hibernate.type.spi.TypeConfiguration.getMetadataBuildingContext()"], ["void", "org.hibernate.type.spi.TypeConfiguration.scope(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.metamodel.spi.MetamodelImplementor", "org.hibernate.type.spi.TypeConfiguration.scope(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.type.spi.TypeConfiguration.getSessionFactory()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.type.spi.TypeConfiguration.getServiceRegistry()"], ["void", "org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated(org.hibernate.SessionFactory)"], ["void", "org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed(org.hibernate.SessionFactory)"], ["void", "org.hibernate.type.spi.TypeConfiguration.addBasicTypeRegistrationContributions(java.util.List<org.hibernate.boot.spi.BasicTypeRegistration>)"], ["void", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$1.bind(java.sql.PreparedStatement, X, int, org.hibernate.type.descriptor.WrapperOptions)"], ["void", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$1.bind(java.sql.CallableStatement, X, java.lang.String, org.hibernate.type.descriptor.WrapperOptions)"], ["org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter(java.lang.String, java.lang.String, org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter<? extends T, ?>, org.hibernate.type.descriptor.sql.SqlTypeDescriptor, java.lang.Class, java.lang.Class, org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>)"], ["java.lang.String", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.getName()"], ["java.lang.Class", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.getModelType()"], ["java.lang.Class", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.getJdbcType()"], ["org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter<? extends T, ?>", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.getAttributeConverter()"], ["java.lang.String", "org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.toString()"], ["X", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$2.extract(java.sql.ResultSet, java.lang.String, org.hibernate.type.descriptor.WrapperOptions)"], ["X", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$2.extract(java.sql.CallableStatement, int, org.hibernate.type.descriptor.WrapperOptions)"], ["X", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter$2.extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.type.descriptor.WrapperOptions)"], ["org.hibernate.type.descriptor.converter.AttributeConverterMutabilityPlanImpl", "org.hibernate.type.descriptor.converter.AttributeConverterMutabilityPlanImpl(org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter)"], ["org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter(org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter, org.hibernate.type.descriptor.sql.SqlTypeDescriptor, org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["int", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.converter.AttributeConverterSqlTypeDescriptorAdapter.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["default", "org.hibernate.type.descriptor.WrapperOptionsContext.org.hibernate.type.descriptor.WrapperOptions getWrapperOptions()"], ["default", "org.hibernate.type.descriptor.spi.JdbcRecommendedSqlTypeMappingContext.boolean isNationalized()"], ["default", "org.hibernate.type.descriptor.spi.JdbcRecommendedSqlTypeMappingContext.boolean isLob()"], ["default", "org.hibernate.type.descriptor.spi.JdbcRecommendedSqlTypeMappingContext.javax.persistence.EnumType getEnumeratedType()"], ["default", "org.hibernate.type.descriptor.spi.JdbcRecommendedSqlTypeMappingContext.int getPreferredSqlTypeCodeForBoolean()"], ["boolean", "org.hibernate.type.descriptor.sql.LobTypeMappings.hasCorrespondingLobCode(int)"], ["int", "org.hibernate.type.descriptor.sql.LobTypeMappings.getCorrespondingLobCode(int)"], ["boolean", "org.hibernate.type.descriptor.sql.LobTypeMappings.isMappedToKnownLobCode(int)"], ["int", "org.hibernate.type.descriptor.sql.LobTypeMappings.getLobCodeTypeMapping(int)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor$4.getClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.BinaryTypeDescriptor", "org.hibernate.type.descriptor.sql.BinaryTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.BinaryTypeDescriptor.getSqlType()"], ["org.hibernate.type.descriptor.sql.BitTypeDescriptor", "org.hibernate.type.descriptor.sql.BitTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.BitTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.BitTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.BitTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.BitTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.type.descriptor.sql.BasicBinder.getSqlDescriptor()"], ["org.hibernate.type.descriptor.sql.BasicBinder", "org.hibernate.type.descriptor.sql.BasicBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>, org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["void", "org.hibernate.type.descriptor.sql.BasicBinder.bind(java.sql.PreparedStatement, J, int, org.hibernate.type.descriptor.WrapperOptions)"], ["void", "org.hibernate.type.descriptor.sql.BasicBinder.bind(java.sql.CallableStatement, J, java.lang.String, org.hibernate.type.descriptor.WrapperOptions)"], ["org.hibernate.type.descriptor.sql.LongNVarcharTypeDescriptor", "org.hibernate.type.descriptor.sql.LongNVarcharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.LongNVarcharTypeDescriptor.getSqlType()"], ["int", "org.hibernate.type.descriptor.sql.JdbcTypeJavaClassMappings.determineJdbcTypeCodeForJavaClass(java.lang.Class)"], ["java.lang.Class", "org.hibernate.type.descriptor.sql.JdbcTypeJavaClassMappings.determineJavaClassForJdbcTypeCode(java.lang.Integer)"], ["java.lang.Class", "org.hibernate.type.descriptor.sql.JdbcTypeJavaClassMappings.determineJavaClassForJdbcTypeCode(int)"], ["org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor", "org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.NVarcharTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.spi.SqlTypeDescriptorRegistry", "org.hibernate.type.descriptor.sql.spi.SqlTypeDescriptorRegistry(org.hibernate.type.spi.TypeConfiguration)"], ["void", "org.hibernate.type.descriptor.sql.spi.SqlTypeDescriptorRegistry.addDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.type.descriptor.sql.spi.SqlTypeDescriptorRegistry.getDescriptor(int)"], ["org.hibernate.type.descriptor.sql.BasicExtractor", "org.hibernate.type.descriptor.sql.BasicExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>, org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.type.descriptor.sql.BasicExtractor.getSqlDescriptor()"], ["J", "org.hibernate.type.descriptor.sql.BasicExtractor.extract(java.sql.ResultSet, java.lang.String, org.hibernate.type.descriptor.WrapperOptions)"], ["J", "org.hibernate.type.descriptor.sql.BasicExtractor.extract(java.sql.CallableStatement, int, org.hibernate.type.descriptor.WrapperOptions)"], ["J", "org.hibernate.type.descriptor.sql.BasicExtractor.extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.type.descriptor.WrapperOptions)"], ["int", "org.hibernate.type.descriptor.sql.NationalizedTypeMappings.toNationalizedTypeCode(int)"], ["int", "org.hibernate.type.descriptor.sql.NationalizedTypeMappings.getCorrespondingNationalizedCode(int)"], ["org.hibernate.type.descriptor.sql.ClobTypeDescriptor", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor$3.getNClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.CharTypeDescriptor", "org.hibernate.type.descriptor.sql.CharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.CharTypeDescriptor.getSqlType()"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$3.getBlobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$3.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$2.getBlobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$2.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.NumericTypeDescriptor", "org.hibernate.type.descriptor.sql.NumericTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.NumericTypeDescriptor.getSqlType()"], ["org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor", "org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.VarbinaryTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.DecimalTypeDescriptor", "org.hibernate.type.descriptor.sql.DecimalTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.DecimalTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.DecimalTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.DecimalTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.DecimalTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.LongVarbinaryTypeDescriptor", "org.hibernate.type.descriptor.sql.LongVarbinaryTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.LongVarbinaryTypeDescriptor.getSqlType()"], ["<T> org.hibernate.type.descriptor.java.BasicJavaDescriptor<T>", "org.hibernate.type.descriptor.sql.SqlTypeDescriptor.getJdbcRecommendedJavaTypeMapping(org.hibernate.type.spi.TypeConfiguration)"], ["org.hibernate.type.descriptor.sql.TimestampTypeDescriptor", "org.hibernate.type.descriptor.sql.TimestampTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.TimestampTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.TimestampTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.TimestampTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.TimestampTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["void", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry.addDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry.getDescriptor(int)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor$2.getClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.DateTypeDescriptor", "org.hibernate.type.descriptor.sql.DateTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.DateTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.DateTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.DateTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.DateTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor$2.getNClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor$3.getClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor(int)"], ["int", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueExtractor", "org.hibernate.type.descriptor.sql.SqlTypeDescriptorRegistry$ObjectSqlTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.IntegerTypeDescriptor", "org.hibernate.type.descriptor.sql.IntegerTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.IntegerTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.IntegerTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.IntegerTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.IntegerTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor", "org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.TinyIntTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family[]", "org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family.values()"], ["org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family", "org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family.valueOf(java.lang.String)"], ["int[]", "org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family.getTypeCodes()"], ["org.hibernate.type.descriptor.sql.NCharTypeDescriptor", "org.hibernate.type.descriptor.sql.NCharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.NCharTypeDescriptor.getSqlType()"], ["org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor", "org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.SmallIntTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.TimeTypeDescriptor", "org.hibernate.type.descriptor.sql.TimeTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.TimeTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.TimeTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.TimeTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.TimeTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["int", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.BigIntTypeDescriptor", "org.hibernate.type.descriptor.sql.BigIntTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.BigIntTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.BigIntTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.BigIntTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.BigIntTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$4.getBlobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$4.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["void", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$3$1.doBind(java.sql.PreparedStatement, X, int, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor$5.getClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.ClobTypeDescriptor$5.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.RealTypeDescriptor", "org.hibernate.type.descriptor.sql.RealTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.RealTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.RealTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.RealTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.RealTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.DoubleTypeDescriptor", "org.hibernate.type.descriptor.sql.DoubleTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.DoubleTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.DoubleTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.DoubleTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.DoubleTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$5.getBlobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.type.descriptor.sql.BlobTypeDescriptor$5.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.type.descriptor.sql.LongVarcharTypeDescriptor", "org.hibernate.type.descriptor.sql.LongVarcharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.LongVarcharTypeDescriptor.getSqlType()"], ["org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation", "org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation()"], ["org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation$Family", "org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation.locateJdbcTypeFamilyByTypeCode(int)"], ["org.hibernate.type.descriptor.sql.FloatTypeDescriptor", "org.hibernate.type.descriptor.sql.FloatTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.FloatTypeDescriptor.getSqlType()"], ["org.hibernate.type.descriptor.sql.VarcharTypeDescriptor", "org.hibernate.type.descriptor.sql.VarcharTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.VarcharTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.VarcharTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.VarcharTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.VarcharTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.NClobTypeDescriptor", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.type.descriptor.sql.NClobTypeDescriptor$4.getNClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.sql.BooleanTypeDescriptor", "org.hibernate.type.descriptor.sql.BooleanTypeDescriptor()"], ["int", "org.hibernate.type.descriptor.sql.BooleanTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.descriptor.sql.BooleanTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.descriptor.sql.BooleanTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.descriptor.sql.BooleanTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.toString(java.util.Date)"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.areEqual(java.util.Date, java.util.Date)"], ["int", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.extractHashCode(java.util.Date)"], ["<X> X", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.unwrap(java.util.Date, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor.toString(java.lang.Object)"], ["default", "org.hibernate.type.descriptor.java.JavaTypeDescriptor.int extractHashCode(T)"], ["default", "org.hibernate.type.descriptor.java.JavaTypeDescriptor.boolean areEqual(T, T)"], ["default", "org.hibernate.type.descriptor.java.JavaTypeDescriptor.java.lang.String extractLoggableRepresentation(T)"], ["default", "org.hibernate.type.descriptor.java.JavaTypeDescriptor.java.lang.String toString(T)"], ["org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.toString(T)"], ["T", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.unwrap(T, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> T", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["<E extends java.lang.Enum> java.lang.Integer", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.toOrdinal(E)"], ["<E extends java.lang.Enum> E", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.fromOrdinal(java.lang.Integer)"], ["T", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.fromName(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.toName(T)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.EnumJavaTypeDescriptor.toString(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.toString(char[])"], ["char[]", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.areEqual(char[], char[])"], ["int", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.extractHashCode(char[])"], ["<X> X", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.unwrap(char[], java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> char[]", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveCharacterArrayTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.UUIDTypeDescriptor$PassThroughTransformer", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$PassThroughTransformer()"], ["java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$PassThroughTransformer.transform(java.util.UUID)"], ["java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$PassThroughTransformer.parse(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$PassThroughTransformer.transform(java.util.UUID)"], ["org.hibernate.type.descriptor.java.ImmutableMutabilityPlan", "org.hibernate.type.descriptor.java.ImmutableMutabilityPlan()"], ["boolean", "org.hibernate.type.descriptor.java.ImmutableMutabilityPlan.isMutable()"], ["T", "org.hibernate.type.descriptor.java.ImmutableMutabilityPlan.deepCopy(T)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.ImmutableMutabilityPlan.disassemble(T)"], ["T", "org.hibernate.type.descriptor.java.ImmutableMutabilityPlan.assemble(java.io.Serializable)"], ["org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.toString(java.time.LocalTime)"], ["java.time.LocalTime", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.unwrap(java.time.LocalTime, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.LocalTime", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalTimeJavaDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.UUIDTypeDescriptor", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.toString(java.util.UUID)"], ["java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.unwrap(java.util.UUID, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor.toString(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.toString(java.util.Calendar)"], ["java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.areEqual(java.util.Calendar, java.util.Calendar)"], ["int", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.extractHashCode(java.util.Calendar)"], ["<X> X", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.unwrap(java.util.Calendar, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarDateTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ShortTypeDescriptor", "org.hibernate.type.descriptor.java.ShortTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.toString(java.lang.Short)"], ["java.lang.Short", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.unwrap(java.lang.Short, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Short", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ShortTypeDescriptor.toString(java.lang.Object)"], ["default", "org.hibernate.type.descriptor.java.BasicJavaDescriptor.org.hibernate.type.descriptor.sql.SqlTypeDescriptor getJdbcRecommendedSqlType(org.hibernate.type.descriptor.spi.JdbcRecommendedSqlTypeMappingContext)"], ["org.hibernate.type.descriptor.java.IncomparableComparator", "org.hibernate.type.descriptor.java.IncomparableComparator()"], ["int", "org.hibernate.type.descriptor.java.IncomparableComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.toString(java.time.OffsetDateTime)"], ["java.time.OffsetDateTime", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.unwrap(java.time.OffsetDateTime, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.OffsetDateTime", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.OffsetDateTimeJavaDescriptor.toString(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.DataHelper.isNClob(java.lang.Class)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DataHelper.extractString(java.io.Reader)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DataHelper.extractString(java.io.Reader, int)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DataHelper.subStream(java.io.Reader, long, int)"], ["byte[]", "org.hibernate.type.descriptor.java.DataHelper.extractBytes(java.io.InputStream)"], ["byte[]", "org.hibernate.type.descriptor.java.DataHelper.extractBytes(java.io.InputStream, long, int)"], ["java.io.InputStream", "org.hibernate.type.descriptor.java.DataHelper.subStream(java.io.InputStream, long, int)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DataHelper.extractString(java.sql.Clob)"], ["S", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor$SerializableMutabilityPlan.deepCopyNotNull(S)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor$SerializableMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["<J> org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>", "org.hibernate.type.descriptor.java.spi.RegistryHelper.resolveDescriptor(java.util.Map<java.lang.Class, org.hibernate.type.descriptor.java.JavaTypeDescriptor>, java.lang.Class<J>, java.util.function.Supplier<org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>>)"], ["org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry", "org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry(org.hibernate.type.spi.TypeConfiguration)"], ["<T> org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>", "org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry.getDescriptor(java.lang.Class<T>)"], ["void", "org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry.addDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.type.descriptor.java.ClobTypeDescriptor", "org.hibernate.type.descriptor.java.ClobTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.extractLoggableRepresentation(java.sql.Clob)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.toString(java.sql.Clob)"], ["java.sql.Clob", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.fromString(java.lang.String)"], ["int", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.extractHashCode(java.sql.Clob)"], ["boolean", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.areEqual(java.sql.Clob, java.sql.Clob)"], ["<X> X", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.unwrap(java.sql.Clob, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.sql.Clob", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.extractLoggableRepresentation(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClobTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.RowVersionTypeDescriptor", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor()"], ["boolean", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.areEqual(byte[], byte[])"], ["int", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.extractHashCode(byte[])"], ["java.lang.String", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.toString(byte[])"], ["java.lang.String", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.extractLoggableRepresentation(byte[])"], ["byte[]", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.unwrap(byte[], java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> byte[]", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.String", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.extractLoggableRepresentation(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.RowVersionTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.LocalDateJavaDescriptor", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.toString(java.time.LocalDate)"], ["java.time.LocalDate", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.unwrap(java.time.LocalDate, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.LocalDate", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalDateJavaDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.CurrencyTypeDescriptor", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.toString(java.util.Currency)"], ["java.util.Currency", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.unwrap(java.util.Currency, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Currency", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CurrencyTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor$DateMutabilityPlan", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor$DateMutabilityPlan()"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor$DateMutabilityPlan.deepCopyNotNull(java.util.Date)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor$DateMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.toString(java.util.Calendar)"], ["java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.areEqual(java.util.Calendar, java.util.Calendar)"], ["int", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.extractHashCode(java.util.Calendar)"], ["<X> X", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.unwrap(java.util.Calendar, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarTimeTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToStringTransformer", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToStringTransformer()"], ["java.lang.String", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToStringTransformer.transform(java.util.UUID)"], ["java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToStringTransformer.parse(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToStringTransformer.transform(java.util.UUID)"], ["org.hibernate.type.descriptor.java.LocaleTypeDescriptor", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.toString(java.util.Locale)"], ["java.util.Locale", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.unwrap(java.util.Locale, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Locale", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.toString(java.util.Date)"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.fromString(java.lang.String)"], ["int", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.extractHashCode(java.util.Date)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.areEqual(java.util.Date, java.util.Date)"], ["<X> X", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.unwrap(java.util.Date, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToBytesTransformer", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToBytesTransformer()"], ["byte[]", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToBytesTransformer.transform(java.util.UUID)"], ["java.util.UUID", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToBytesTransformer.parse(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.UUIDTypeDescriptor$ToBytesTransformer.transform(java.util.UUID)"], ["org.hibernate.type.descriptor.java.UrlTypeDescriptor", "org.hibernate.type.descriptor.java.UrlTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.toString(java.net.URL)"], ["java.net.URL", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.unwrap(java.net.URL, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.net.URL", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.UrlTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ClassTypeDescriptor", "org.hibernate.type.descriptor.java.ClassTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.toString(java.lang.Class)"], ["java.lang.Class", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.unwrap(java.lang.Class, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Class", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ClassTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.SerializableTypeDescriptor", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.toString(T)"], ["T", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.areEqual(T, T)"], ["int", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.extractHashCode(T)"], ["<X> X", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.unwrap(T, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> T", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.SerializableTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ByteTypeDescriptor", "org.hibernate.type.descriptor.java.ByteTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.toString(java.lang.Byte)"], ["java.lang.Byte", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.unwrap(java.lang.Byte, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Byte", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ByteTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.LongTypeDescriptor", "org.hibernate.type.descriptor.java.LongTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.LongTypeDescriptor.toString(java.lang.Long)"], ["java.lang.Long", "org.hibernate.type.descriptor.java.LongTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.LongTypeDescriptor.unwrap(java.lang.Long, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Long", "org.hibernate.type.descriptor.java.LongTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LongTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LongTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LongTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.LongTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.DateTypeDescriptor", "org.hibernate.type.descriptor.java.DateTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.DateTypeDescriptor.toString(java.util.Date)"], ["java.util.Date", "org.hibernate.type.descriptor.java.DateTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.DateTypeDescriptor.areEqual(java.util.Date, java.util.Date)"], ["int", "org.hibernate.type.descriptor.java.DateTypeDescriptor.extractHashCode(java.util.Date)"], ["<X> X", "org.hibernate.type.descriptor.java.DateTypeDescriptor.unwrap(java.util.Date, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Date", "org.hibernate.type.descriptor.java.DateTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.DateTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.DateTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DateTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DateTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DateTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DateTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.toString(java.util.TimeZone)"], ["java.util.TimeZone", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.unwrap(java.util.TimeZone, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.TimeZone", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.toString(java.time.OffsetTime)"], ["java.time.OffsetTime", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.unwrap(java.time.OffsetTime, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.OffsetTime", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.OffsetTimeJavaDescriptor.toString(java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.AbstractTypeDescriptor.extractHashCode(T)"], ["boolean", "org.hibernate.type.descriptor.java.AbstractTypeDescriptor.areEqual(T, T)"], ["java.lang.String", "org.hibernate.type.descriptor.java.AbstractTypeDescriptor.extractLoggableRepresentation(T)"], ["org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor$TimeZoneComparator", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor$TimeZoneComparator()"], ["int", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor$TimeZoneComparator.compare(java.util.TimeZone, java.util.TimeZone)"], ["int", "org.hibernate.type.descriptor.java.TimeZoneTypeDescriptor$TimeZoneComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.type.descriptor.java.IntegerTypeDescriptor", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.toString(java.lang.Integer)"], ["java.lang.Integer", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.unwrap(java.lang.Integer, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Integer", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.IntegerTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan()"], ["boolean", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.isMutable()"], ["java.sql.NClob", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.deepCopy(java.sql.NClob)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.disassemble(java.sql.NClob)"], ["java.sql.NClob", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.assemble(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.assemble(java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.disassemble(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.NClobTypeDescriptor$NClobMutabilityPlan.deepCopy(java.lang.Object)"], ["org.hibernate.type.descriptor.java.BlobTypeDescriptor", "org.hibernate.type.descriptor.java.BlobTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.extractLoggableRepresentation(java.sql.Blob)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.toString(java.sql.Blob)"], ["java.sql.Blob", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.fromString(java.lang.String)"], ["int", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.extractHashCode(java.sql.Blob)"], ["boolean", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.areEqual(java.sql.Blob, java.sql.Blob)"], ["<X> X", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.unwrap(java.sql.Blob, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.sql.Blob", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.extractLoggableRepresentation(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BlobTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan()"], ["boolean", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.isMutable()"], ["java.sql.Clob", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.deepCopy(java.sql.Clob)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.disassemble(java.sql.Clob)"], ["java.sql.Clob", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.assemble(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.assemble(java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.disassemble(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ClobTypeDescriptor$ClobMutabilityPlan.deepCopy(java.lang.Object)"], ["org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.toString(java.lang.Character[])"], ["java.lang.Character[]", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.areEqual(java.lang.Character[], java.lang.Character[])"], ["int", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.extractHashCode(java.lang.Character[])"], ["<X> X", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.unwrap(java.lang.Character[], java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Character[]", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CharacterArrayTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.CharacterTypeDescriptor", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.toString(java.lang.Character)"], ["java.lang.Character", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.unwrap(java.lang.Character, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Character", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CharacterTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.CalendarTypeDescriptor$CalendarMutabilityPlan", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor$CalendarMutabilityPlan()"], ["java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor$CalendarMutabilityPlan.deepCopyNotNull(java.util.Calendar)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor$CalendarMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["org.hibernate.type.descriptor.java.DurationJavaDescriptor", "org.hibernate.type.descriptor.java.DurationJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.toString(java.time.Duration)"], ["java.time.Duration", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.unwrap(java.time.Duration, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.Duration", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DurationJavaDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.toString(java.math.BigDecimal)"], ["java.math.BigDecimal", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.areEqual(java.math.BigDecimal, java.math.BigDecimal)"], ["int", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.extractHashCode(java.math.BigDecimal)"], ["<X> X", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.unwrap(java.math.BigDecimal, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.math.BigDecimal", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BigDecimalTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ArrayMutabilityPlan", "org.hibernate.type.descriptor.java.ArrayMutabilityPlan()"], ["T", "org.hibernate.type.descriptor.java.ArrayMutabilityPlan.deepCopyNotNull(T)"], ["org.hibernate.type.descriptor.java.LocaleTypeDescriptor$LocaleComparator", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor$LocaleComparator()"], ["int", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor$LocaleComparator.compare(java.util.Locale, java.util.Locale)"], ["int", "org.hibernate.type.descriptor.java.LocaleTypeDescriptor$LocaleComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.type.descriptor.java.DoubleTypeDescriptor", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.toString(java.lang.Double)"], ["java.lang.Double", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.unwrap(java.lang.Double, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Double", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.DoubleTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.toString(java.time.LocalDateTime)"], ["java.time.LocalDateTime", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.unwrap(java.time.LocalDateTime, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.LocalDateTime", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.LocalDateTimeJavaDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.DateTypeDescriptor$DateMutabilityPlan", "org.hibernate.type.descriptor.java.DateTypeDescriptor$DateMutabilityPlan()"], ["java.util.Date", "org.hibernate.type.descriptor.java.DateTypeDescriptor$DateMutabilityPlan.deepCopyNotNull(java.util.Date)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.DateTypeDescriptor$DateMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan()"], ["boolean", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.isMutable()"], ["java.sql.Blob", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.deepCopy(java.sql.Blob)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.disassemble(java.sql.Blob)"], ["java.sql.Blob", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.assemble(java.io.Serializable)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.assemble(java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.disassemble(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BlobTypeDescriptor$BlobMutabilityPlan.deepCopy(java.lang.Object)"], ["org.hibernate.type.descriptor.java.FloatTypeDescriptor", "org.hibernate.type.descriptor.java.FloatTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.toString(java.lang.Float)"], ["java.lang.Float", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.unwrap(java.lang.Float, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Float", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.FloatTypeDescriptor.toString(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry$FallbackJavaTypeDescriptor.toString(T)"], ["T", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry$FallbackJavaTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry$FallbackJavaTypeDescriptor.unwrap(T, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> T", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry$FallbackJavaTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["org.hibernate.type.descriptor.java.StringTypeDescriptor", "org.hibernate.type.descriptor.java.StringTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.StringTypeDescriptor.toString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.StringTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.StringTypeDescriptor.unwrap(java.lang.String, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.String", "org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.StringTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.StringTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.StringTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.StringTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor()"], ["boolean", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.areEqual(java.lang.Byte[], java.lang.Byte[])"], ["int", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.extractHashCode(java.lang.Byte[])"], ["java.lang.String", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.toString(java.lang.Byte[])"], ["java.lang.Byte[]", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.unwrap(java.lang.Byte[], java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Byte[]", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ByteArrayTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor()"], ["boolean", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.areEqual(byte[], byte[])"], ["int", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.extractHashCode(byte[])"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.toString(byte[])"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.extractLoggableRepresentation(byte[])"], ["byte[]", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.unwrap(byte[], java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> byte[]", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.extractLoggableRepresentation(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.InstantJavaDescriptor", "org.hibernate.type.descriptor.java.InstantJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.toString(java.time.Instant)"], ["java.time.Instant", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.unwrap(java.time.Instant, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.Instant", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.InstantJavaDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor$TimeMutabilityPlan", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor$TimeMutabilityPlan()"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor$TimeMutabilityPlan.deepCopyNotNull(java.util.Date)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimeTypeDescriptor$TimeMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.toString(java.util.Calendar)"], ["java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.areEqual(java.util.Calendar, java.util.Calendar)"], ["int", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.extractHashCode(java.util.Calendar)"], ["<X> X", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.unwrap(java.util.Calendar, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Calendar", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.CalendarTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.NClobTypeDescriptor", "org.hibernate.type.descriptor.java.NClobTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.extractLoggableRepresentation(java.sql.NClob)"], ["java.lang.String", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.toString(java.sql.NClob)"], ["java.sql.NClob", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.fromString(java.lang.String)"], ["int", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.extractHashCode(java.sql.NClob)"], ["boolean", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.areEqual(java.sql.NClob, java.sql.NClob)"], ["<X> X", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.unwrap(java.sql.NClob, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.sql.NClob", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.String", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.extractLoggableRepresentation(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.NClobTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry()"], ["void", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry.addDescriptor(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["<J> org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>", "org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry.getDescriptor(java.lang.Class<J>)"], ["org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor$TimestampMutabilityPlan", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor$TimestampMutabilityPlan()"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor$TimestampMutabilityPlan.deepCopyNotNull(java.util.Date)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcTimestampTypeDescriptor$TimestampMutabilityPlan.deepCopyNotNull(java.lang.Object)"], ["org.hibernate.type.descriptor.java.MutableMutabilityPlan", "org.hibernate.type.descriptor.java.MutableMutabilityPlan()"], ["boolean", "org.hibernate.type.descriptor.java.MutableMutabilityPlan.isMutable()"], ["java.io.Serializable", "org.hibernate.type.descriptor.java.MutableMutabilityPlan.disassemble(T)"], ["T", "org.hibernate.type.descriptor.java.MutableMutabilityPlan.assemble(java.io.Serializable)"], ["T", "org.hibernate.type.descriptor.java.MutableMutabilityPlan.deepCopy(T)"], ["org.hibernate.type.descriptor.java.BooleanTypeDescriptor", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor()"], ["org.hibernate.type.descriptor.java.BooleanTypeDescriptor", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor(char, char)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toString(java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.unwrap(java.lang.Boolean, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.lang.Boolean", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["int", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toInt(java.lang.Boolean)"], ["java.lang.Byte", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toByte(java.lang.Boolean)"], ["java.lang.Short", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toShort(java.lang.Boolean)"], ["java.lang.Integer", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toInteger(java.lang.Boolean)"], ["java.lang.Long", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toLong(java.lang.Boolean)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BooleanTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.toString(java.util.Date)"], ["java.util.Date", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.fromString(java.lang.String)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.areEqual(java.util.Date, java.util.Date)"], ["int", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.extractHashCode(java.util.Date)"], ["<X> X", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.unwrap(java.util.Date, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.util.Date", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.JdbcDateTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.toString(java.math.BigInteger)"], ["java.math.BigInteger", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.fromString(java.lang.String)"], ["int", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.extractHashCode(java.math.BigInteger)"], ["boolean", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.areEqual(java.math.BigInteger, java.math.BigInteger)"], ["<X> X", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.unwrap(java.math.BigInteger, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.math.BigInteger", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["boolean", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.areEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.extractHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor.toString(java.lang.Object)"], ["org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor()"], ["java.lang.String", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.toString(java.time.ZonedDateTime)"], ["java.time.ZonedDateTime", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.fromString(java.lang.String)"], ["<X> X", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.unwrap(java.time.ZonedDateTime, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions)"], ["<X> java.time.ZonedDateTime", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.wrap(X, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions)"], ["java.lang.Object", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.fromString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.descriptor.java.ZonedDateTimeJavaDescriptor.toString(java.lang.Object)"], ["boolean", "org.hibernate.type.descriptor.JdbcTypeNameMapper.isStandardTypeCode(int)"], ["boolean", "org.hibernate.type.descriptor.JdbcTypeNameMapper.isStandardTypeCode(java.lang.Integer)"], ["java.lang.String", "org.hibernate.type.descriptor.JdbcTypeNameMapper.getTypeName(java.lang.Integer)"], ["default", "org.hibernate.type.Type.java.lang.Object resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Boolean)"], ["org.hibernate.type.SortedMapType", "org.hibernate.type.SortedMapType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.type.SortedMapType", "org.hibernate.type.SortedMapType(java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SortedMapType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.SortedMapType.getReturnedClass()"], ["java.lang.Object", "org.hibernate.type.SortedMapType.instantiate(int)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SortedMapType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.type.SerializationException", "org.hibernate.type.SerializationException(java.lang.String, java.lang.Exception)"], ["org.hibernate.type.ByteType", "org.hibernate.type.ByteType()"], ["java.lang.String", "org.hibernate.type.ByteType.getName()"], ["java.lang.String[]", "org.hibernate.type.ByteType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.ByteType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.ByteType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.ByteType.objectToSQLString(java.lang.Byte, org.hibernate.dialect.Dialect)"], ["java.lang.Byte", "org.hibernate.type.ByteType.stringToObject(java.lang.String)"], ["java.lang.Byte", "org.hibernate.type.ByteType.fromStringValue(java.lang.String)"], ["java.lang.Byte", "org.hibernate.type.ByteType.next(java.lang.Byte, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Byte", "org.hibernate.type.ByteType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ByteType.fromStringValue(java.lang.String)"], ["java.lang.String", "org.hibernate.type.ByteType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.ByteType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.ByteType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ByteType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.ListType", "org.hibernate.type.ListType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.ListType", "org.hibernate.type.ListType(java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.ListType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.ListType.getReturnedClass()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.ListType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ListType.instantiate(int)"], ["java.lang.Object", "org.hibernate.type.ListType.indexOf(java.lang.Object, java.lang.Object)"], ["org.hibernate.type.StringType", "org.hibernate.type.StringType()"], ["java.lang.String", "org.hibernate.type.StringType.getName()"], ["java.lang.String", "org.hibernate.type.StringType.objectToSQLString(java.lang.String, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.StringType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringType.toString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringType.toString(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.StringType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.AnyType", "org.hibernate.type.AnyType(org.hibernate.type.TypeFactory$TypeScope, org.hibernate.type.Type, org.hibernate.type.Type, boolean)"], ["org.hibernate.type.Type", "org.hibernate.type.AnyType.getIdentifierType()"], ["org.hibernate.type.Type", "org.hibernate.type.AnyType.getDiscriminatorType()"], ["java.lang.String", "org.hibernate.type.AnyType.getName()"], ["java.lang.Class", "org.hibernate.type.AnyType.getReturnedClass()"], ["int[]", "org.hibernate.type.AnyType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.AnyType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.AnyType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["java.lang.Object[]", "org.hibernate.type.AnyType.getPropertyValues(java.lang.Object, org.hibernate.EntityMode)"], ["boolean", "org.hibernate.type.AnyType.isAnyType()"], ["boolean", "org.hibernate.type.AnyType.isAssociationType()"], ["boolean", "org.hibernate.type.AnyType.isComponentType()"], ["boolean", "org.hibernate.type.AnyType.isEmbedded()"], ["boolean", "org.hibernate.type.AnyType.isMutable()"], ["java.lang.Object", "org.hibernate.type.AnyType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.type.AnyType.compare(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.AnyType.isSame(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.AnyType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean[]", "org.hibernate.type.AnyType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.AnyType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.type.AnyType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["java.lang.Object", "org.hibernate.type.AnyType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AnyType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AnyType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.AnyType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.AnyType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.AnyType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.AnyType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.AnyType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AnyType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["java.lang.Object", "org.hibernate.type.AnyType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AnyType.semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.AnyType.isMethodOf(java.lang.reflect.Method)"], ["java.lang.String[]", "org.hibernate.type.AnyType.getPropertyNames()"], ["int", "org.hibernate.type.AnyType.getPropertyIndex(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.AnyType.getPropertyValue(java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.type.AnyType.getPropertyValues(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.AnyType.setPropertyValues(java.lang.Object, java.lang.Object[], org.hibernate.EntityMode)"], ["boolean[]", "org.hibernate.type.AnyType.getPropertyNullability()"], ["boolean", "org.hibernate.type.AnyType.hasNotNullProperty()"], ["org.hibernate.type.Type[]", "org.hibernate.type.AnyType.getSubtypes()"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.type.AnyType.getCascadeStyle(int)"], ["org.hibernate.FetchMode", "org.hibernate.type.AnyType.getFetchMode(int)"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.type.AnyType.getForeignKeyDirection()"], ["boolean", "org.hibernate.type.AnyType.useLHSPrimaryKey()"], ["java.lang.String", "org.hibernate.type.AnyType.getLHSPropertyName()"], ["boolean", "org.hibernate.type.AnyType.isReferenceToPrimaryKey()"], ["java.lang.String", "org.hibernate.type.AnyType.getRHSUniqueKeyPropertyName()"], ["boolean", "org.hibernate.type.AnyType.isAlwaysDirtyChecked()"], ["org.hibernate.persister.entity.Joinable", "org.hibernate.type.AnyType.getAssociatedJoinable(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.AnyType.getAssociatedEntityName(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.AnyType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map)"], ["java.lang.String", "org.hibernate.type.AnyType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map, java.util.Set<java.lang.String>)"], ["org.hibernate.type.SetType", "org.hibernate.type.SetType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.SetType", "org.hibernate.type.SetType(java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SetType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.SetType.getReturnedClass()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SetType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.SetType.instantiate(int)"], ["org.hibernate.type.TypeResolver", "org.hibernate.type.TypeResolver(org.hibernate.type.spi.TypeConfiguration, org.hibernate.type.TypeFactory)"], ["void", "org.hibernate.type.TypeResolver.registerTypeOverride(org.hibernate.type.BasicType)"], ["void", "org.hibernate.type.TypeResolver.registerTypeOverride(org.hibernate.usertype.UserType, java.lang.String[])"], ["void", "org.hibernate.type.TypeResolver.registerTypeOverride(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["org.hibernate.type.TypeFactory", "org.hibernate.type.TypeResolver.getTypeFactory()"], ["org.hibernate.type.BasicType", "org.hibernate.type.TypeResolver.basic(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.type.TypeResolver.heuristicType(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.type.TypeResolver.heuristicType(java.lang.String, java.util.Properties)"], ["org.hibernate.type.SerializableType", "org.hibernate.type.SerializableType(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.type.SerializableType.getName()"], ["org.hibernate.type.EmbeddedComponentType", "org.hibernate.type.EmbeddedComponentType(org.hibernate.type.TypeFactory$TypeScope, org.hibernate.tuple.component.ComponentMetamodel)"], ["org.hibernate.type.EmbeddedComponentType", "org.hibernate.type.EmbeddedComponentType(org.hibernate.tuple.component.ComponentMetamodel)"], ["boolean", "org.hibernate.type.EmbeddedComponentType.isEmbedded()"], ["boolean", "org.hibernate.type.EmbeddedComponentType.isMethodOf(java.lang.reflect.Method)"], ["java.lang.Object", "org.hibernate.type.EmbeddedComponentType.instantiate(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.LongType", "org.hibernate.type.LongType()"], ["java.lang.String", "org.hibernate.type.LongType.getName()"], ["java.lang.String[]", "org.hibernate.type.LongType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.LongType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.LongType.getPrimitiveClass()"], ["java.lang.Long", "org.hibernate.type.LongType.stringToObject(java.lang.String)"], ["java.lang.Long", "org.hibernate.type.LongType.next(java.lang.Long, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Long", "org.hibernate.type.LongType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.LongType.objectToSQLString(java.lang.Long, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.LongType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.LongType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.LongType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.LongType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.ForeignKeyDirection$1.cascadeNow(org.hibernate.engine.internal.CascadePoint)"], ["org.hibernate.type.TrueFalseType", "org.hibernate.type.TrueFalseType()"], ["java.lang.String", "org.hibernate.type.TrueFalseType.getName()"], ["java.lang.Class", "org.hibernate.type.TrueFalseType.getPrimitiveClass()"], ["java.lang.Boolean", "org.hibernate.type.TrueFalseType.stringToObject(java.lang.String)"], ["java.io.Serializable", "org.hibernate.type.TrueFalseType.getDefaultValue()"], ["java.lang.String", "org.hibernate.type.TrueFalseType.objectToSQLString(java.lang.Boolean, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.TrueFalseType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.TrueFalseType.stringToObject(java.lang.String)"], ["org.hibernate.type.BigIntegerType", "org.hibernate.type.BigIntegerType()"], ["java.lang.String", "org.hibernate.type.BigIntegerType.getName()"], ["java.lang.String", "org.hibernate.type.BigIntegerType.objectToSQLString(java.math.BigInteger, org.hibernate.dialect.Dialect)"], ["java.math.BigInteger", "org.hibernate.type.BigIntegerType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.BigIntegerType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.BigIntegerType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.RowVersionType.getName()"], ["org.hibernate.type.RowVersionType", "org.hibernate.type.RowVersionType()"], ["java.lang.String[]", "org.hibernate.type.RowVersionType.getRegistrationKeys()"], ["byte[]", "org.hibernate.type.RowVersionType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["byte[]", "org.hibernate.type.RowVersionType.next(byte[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.RowVersionType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.RowVersionType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.LocalTimeType", "org.hibernate.type.LocalTimeType()"], ["java.lang.String", "org.hibernate.type.LocalTimeType.getName()"], ["java.lang.String", "org.hibernate.type.LocalTimeType.objectToSQLString(java.time.LocalTime, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.LocalTimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.LocalDateType", "org.hibernate.type.LocalDateType()"], ["java.lang.String", "org.hibernate.type.LocalDateType.getName()"], ["java.lang.String", "org.hibernate.type.LocalDateType.objectToSQLString(java.time.LocalDate, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.LocalDateType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor()"], ["int", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor.canBeRemapped()"], ["org.hibernate.type.descriptor.java.BasicJavaDescriptor", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor.getJdbcRecommendedJavaTypeMapping(org.hibernate.type.spi.TypeConfiguration)"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.type.PostgresUUIDType$PostgresUUIDSqlTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["org.hibernate.type.OrderedMapType", "org.hibernate.type.OrderedMapType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.OrderedMapType", "org.hibernate.type.OrderedMapType(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.type.OrderedMapType.instantiate(int)"], ["org.hibernate.type.OffsetDateTimeType", "org.hibernate.type.OffsetDateTimeType()"], ["java.lang.String", "org.hibernate.type.OffsetDateTimeType.objectToSQLString(java.time.OffsetDateTime, org.hibernate.dialect.Dialect)"], ["java.time.OffsetDateTime", "org.hibernate.type.OffsetDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.time.OffsetDateTime", "org.hibernate.type.OffsetDateTimeType.next(java.time.OffsetDateTime, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.OffsetDateTimeType.getName()"], ["java.lang.Object", "org.hibernate.type.OffsetDateTimeType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.OffsetDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.OffsetDateTimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.UUIDBinaryType", "org.hibernate.type.UUIDBinaryType()"], ["java.lang.String", "org.hibernate.type.UUIDBinaryType.getName()"], ["org.hibernate.type.FloatType", "org.hibernate.type.FloatType()"], ["java.lang.String", "org.hibernate.type.FloatType.getName()"], ["java.lang.String[]", "org.hibernate.type.FloatType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.FloatType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.FloatType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.FloatType.objectToSQLString(java.lang.Float, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.FloatType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.ComponentType", "org.hibernate.type.ComponentType(org.hibernate.type.TypeFactory$TypeScope, org.hibernate.tuple.component.ComponentMetamodel)"], ["org.hibernate.type.ComponentType", "org.hibernate.type.ComponentType(org.hibernate.tuple.component.ComponentMetamodel)"], ["boolean", "org.hibernate.type.ComponentType.isKey()"], ["org.hibernate.EntityMode", "org.hibernate.type.ComponentType.getEntityMode()"], ["org.hibernate.tuple.component.ComponentTuplizer", "org.hibernate.type.ComponentType.getComponentTuplizer()"], ["int", "org.hibernate.type.ComponentType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["int[]", "org.hibernate.type.ComponentType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.ComponentType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.ComponentType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.ComponentType.isComponentType()"], ["java.lang.Class", "org.hibernate.type.ComponentType.getReturnedClass()"], ["boolean", "org.hibernate.type.ComponentType.isSame(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.ComponentType.isEqual(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.ComponentType.isEqual(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.type.ComponentType.compare(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.ComponentType.isMethodOf(java.lang.reflect.Method)"], ["int", "org.hibernate.type.ComponentType.getHashCode(java.lang.Object)"], ["int", "org.hibernate.type.ComponentType.getHashCode(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.ComponentType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.ComponentType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.ComponentType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ComponentType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.ComponentType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.ComponentType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ComponentType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ComponentType.getPropertyValue(java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ComponentType.getPropertyValue(java.lang.Object, int, org.hibernate.EntityMode)"], ["java.lang.Object", "org.hibernate.type.ComponentType.getPropertyValue(java.lang.Object, int)"], ["java.lang.Object[]", "org.hibernate.type.ComponentType.getPropertyValues(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.type.ComponentType.getPropertyValues(java.lang.Object, org.hibernate.EntityMode)"], ["void", "org.hibernate.type.ComponentType.setPropertyValues(java.lang.Object, java.lang.Object[], org.hibernate.EntityMode)"], ["org.hibernate.type.Type[]", "org.hibernate.type.ComponentType.getSubtypes()"], ["org.hibernate.tuple.ValueGeneration[]", "org.hibernate.type.ComponentType.getPropertyValueGenerationStrategies()"], ["java.lang.String", "org.hibernate.type.ComponentType.getName()"], ["java.lang.String", "org.hibernate.type.ComponentType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String[]", "org.hibernate.type.ComponentType.getPropertyNames()"], ["java.lang.Object", "org.hibernate.type.ComponentType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.ComponentType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["java.lang.Object", "org.hibernate.type.ComponentType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection)"], ["java.lang.Object", "org.hibernate.type.ComponentType.instantiate(org.hibernate.EntityMode)"], ["java.lang.Object", "org.hibernate.type.ComponentType.instantiate(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.type.ComponentType.getCascadeStyle(int)"], ["boolean", "org.hibernate.type.ComponentType.isMutable()"], ["java.io.Serializable", "org.hibernate.type.ComponentType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ComponentType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.FetchMode", "org.hibernate.type.ComponentType.getFetchMode(int)"], ["java.lang.Object", "org.hibernate.type.ComponentType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ComponentType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ComponentType.semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean[]", "org.hibernate.type.ComponentType.getPropertyNullability()"], ["boolean[]", "org.hibernate.type.ComponentType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.ComponentType.isEmbedded()"], ["int", "org.hibernate.type.ComponentType.getPropertyIndex(java.lang.String)"], ["boolean", "org.hibernate.type.ComponentType.canDoExtraction()"], ["java.lang.Object", "org.hibernate.type.ComponentType.extract(java.sql.CallableStatement, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ComponentType.extract(java.sql.CallableStatement, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.ComponentType.hasNotNullProperty()"], ["org.hibernate.type.DoubleType", "org.hibernate.type.DoubleType()"], ["java.lang.String", "org.hibernate.type.DoubleType.getName()"], ["java.lang.String[]", "org.hibernate.type.DoubleType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.DoubleType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.DoubleType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.DoubleType.objectToSQLString(java.lang.Double, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.DoubleType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.SortedSetType", "org.hibernate.type.SortedSetType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.type.SortedSetType", "org.hibernate.type.SortedSetType(java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SortedSetType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.SortedSetType.getReturnedClass()"], ["java.lang.Object", "org.hibernate.type.SortedSetType.instantiate(int)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.SortedSetType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.type.TypeFactory", "org.hibernate.type.TypeFactory(org.hibernate.type.spi.TypeConfiguration)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.type.TypeFactory.resolveSessionFactory()"], ["org.hibernate.type.Type", "org.hibernate.type.TypeFactory.byClass(java.lang.Class, java.util.Properties)"], ["org.hibernate.type.Type", "org.hibernate.type.TypeFactory.type(java.lang.Class<org.hibernate.type.Type>, java.util.Properties)"], ["void", "org.hibernate.type.TypeFactory.injectParameters(java.lang.Object, java.util.Properties)"], ["org.hibernate.type.CompositeCustomType", "org.hibernate.type.TypeFactory.customComponent(java.lang.Class<org.hibernate.usertype.CompositeUserType>, java.util.Properties)"], ["org.hibernate.type.CompositeCustomType", "org.hibernate.type.TypeFactory.customComponent(java.lang.Class<org.hibernate.usertype.CompositeUserType>, java.util.Properties, org.hibernate.type.TypeFactory$TypeScope)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.customCollection(java.lang.String, java.util.Properties, java.lang.String, java.lang.String)"], ["org.hibernate.type.CustomType", "org.hibernate.type.TypeFactory.custom(java.lang.Class<org.hibernate.usertype.UserType>, java.util.Properties)"], ["org.hibernate.type.CustomType", "org.hibernate.type.TypeFactory.custom(java.lang.Class<org.hibernate.usertype.UserType>, java.util.Properties, org.hibernate.type.TypeFactory$TypeScope)"], ["<T extends java.io.Serializable> org.hibernate.type.SerializableType<T>", "org.hibernate.type.TypeFactory.serializable(java.lang.Class<T>)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.oneToOne(java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.specialOneToOne(java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.oneToOne(java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.specialOneToOne(java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.manyToOne(java.lang.String)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.manyToOne(java.lang.String, boolean)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.manyToOne(java.lang.String, java.lang.String, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.manyToOne(java.lang.String, boolean, java.lang.String, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.EntityType", "org.hibernate.type.TypeFactory.manyToOne(java.lang.String, boolean, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.array(java.lang.String, java.lang.String, java.lang.Class)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.list(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.bag(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.idbag(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.map(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.orderedMap(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.sortedMap(java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.set(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.orderedSet(java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.TypeFactory.sortedSet(java.lang.String, java.lang.String, java.util.Comparator)"], ["org.hibernate.type.ComponentType", "org.hibernate.type.TypeFactory.component(org.hibernate.tuple.component.ComponentMetamodel)"], ["org.hibernate.type.EmbeddedComponentType", "org.hibernate.type.TypeFactory.embeddedComponent(org.hibernate.tuple.component.ComponentMetamodel)"], ["org.hibernate.type.Type", "org.hibernate.type.TypeFactory.any(org.hibernate.type.Type, org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.type.TypeFactory.any(org.hibernate.type.Type, org.hibernate.type.Type, boolean)"], ["org.hibernate.type.PrimitiveCharacterArrayClobType", "org.hibernate.type.PrimitiveCharacterArrayClobType()"], ["java.lang.String", "org.hibernate.type.PrimitiveCharacterArrayClobType.getName()"], ["org.hibernate.type.CollectionType", "org.hibernate.type.CollectionType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.CollectionType", "org.hibernate.type.CollectionType(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.type.CollectionType.getRole()"], ["java.lang.Object", "org.hibernate.type.CollectionType.indexOf(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.CollectionType.contains(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CollectionType.isCollectionType()"], ["boolean", "org.hibernate.type.CollectionType.isEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.CollectionType.compare(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.CollectionType.getHashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CollectionType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CollectionType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.CollectionType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.CollectionType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.type.CollectionType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CollectionType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.CollectionType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["int", "org.hibernate.type.CollectionType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.type.CollectionType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.CollectionType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.CollectionType.getName()"], ["java.util.Iterator", "org.hibernate.type.CollectionType.getElementsIterator(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CollectionType.isMutable()"], ["java.io.Serializable", "org.hibernate.type.CollectionType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CollectionType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.CollectionType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CollectionType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.CollectionType.isAssociationType()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.type.CollectionType.getForeignKeyDirection()"], ["java.io.Serializable", "org.hibernate.type.CollectionType.getKeyOfOwner(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.type.CollectionType.getIdOfOwnerOrNull(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CollectionType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CollectionType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.CollectionType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Boolean)"], ["java.lang.Object", "org.hibernate.type.CollectionType.semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.CollectionType.isArrayType()"], ["boolean", "org.hibernate.type.CollectionType.useLHSPrimaryKey()"], ["java.lang.String", "org.hibernate.type.CollectionType.getRHSUniqueKeyPropertyName()"], ["org.hibernate.persister.entity.Joinable", "org.hibernate.type.CollectionType.getAssociatedJoinable(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.CollectionType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.CollectionType.getAssociatedEntityName(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.CollectionType.replaceElements(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.CollectionType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["org.hibernate.type.Type", "org.hibernate.type.CollectionType.getElementType(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.CollectionType.toString()"], ["java.lang.String", "org.hibernate.type.CollectionType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map)"], ["java.lang.String", "org.hibernate.type.CollectionType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map, java.util.Set<java.lang.String>)"], ["java.lang.Object", "org.hibernate.type.CollectionType.getCollection(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Boolean)"], ["boolean", "org.hibernate.type.CollectionType.hasHolder()"], ["java.lang.String", "org.hibernate.type.CollectionType.getLHSPropertyName()"], ["boolean", "org.hibernate.type.CollectionType.isAlwaysDirtyChecked()"], ["boolean[]", "org.hibernate.type.CollectionType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["org.hibernate.type.MapType", "org.hibernate.type.MapType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String)"], ["org.hibernate.type.MapType", "org.hibernate.type.MapType(java.lang.String, java.lang.String)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.MapType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.lang.Class", "org.hibernate.type.MapType.getReturnedClass()"], ["java.util.Iterator", "org.hibernate.type.MapType.getElementsIterator(java.lang.Object)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.MapType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.MapType.instantiate(int)"], ["java.lang.Object", "org.hibernate.type.MapType.replaceElements(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.MapType.indexOf(java.lang.Object, java.lang.Object)"], ["org.hibernate.type.SpecialOneToOneType", "org.hibernate.type.SpecialOneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.SpecialOneToOneType", "org.hibernate.type.SpecialOneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String)"], ["org.hibernate.type.SpecialOneToOneType", "org.hibernate.type.SpecialOneToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, org.hibernate.type.ForeignKeyDirection, boolean, java.lang.String, boolean, boolean, java.lang.String, java.lang.String, boolean)"], ["org.hibernate.type.SpecialOneToOneType", "org.hibernate.type.SpecialOneToOneType(org.hibernate.type.SpecialOneToOneType, java.lang.String)"], ["int", "org.hibernate.type.SpecialOneToOneType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["int[]", "org.hibernate.type.SpecialOneToOneType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.SpecialOneToOneType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.SpecialOneToOneType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.SpecialOneToOneType.useLHSPrimaryKey()"], ["java.lang.Object", "org.hibernate.type.SpecialOneToOneType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.SpecialOneToOneType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.SpecialOneToOneType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.type.MetaType", "org.hibernate.type.MetaType(java.util.Map<java.lang.Object, java.lang.String>, org.hibernate.type.Type)"], ["java.lang.String[]", "org.hibernate.type.MetaType.getRegistrationKeys()"], ["java.util.Map<java.lang.Object, java.lang.String>", "org.hibernate.type.MetaType.getDiscriminatorValuesToEntityNameMap()"], ["int[]", "org.hibernate.type.MetaType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.MetaType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.MetaType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["int", "org.hibernate.type.MetaType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["java.lang.Class", "org.hibernate.type.MetaType.getReturnedClass()"], ["java.lang.Object", "org.hibernate.type.MetaType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.MetaType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.MetaType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.MetaType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.MetaType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.MetaType.toXMLString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.MetaType.fromXMLString(java.lang.String, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.type.MetaType.getName()"], ["java.lang.Object", "org.hibernate.type.MetaType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.MetaType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["boolean", "org.hibernate.type.MetaType.isMutable()"], ["boolean[]", "org.hibernate.type.MetaType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.MetaType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.ImageType", "org.hibernate.type.ImageType()"], ["java.lang.String", "org.hibernate.type.ImageType.getName()"], ["boolean", "org.hibernate.type.EntityType.isAssociationType()"], ["boolean", "org.hibernate.type.EntityType.isEntityType()"], ["boolean", "org.hibernate.type.EntityType.isMutable()"], ["java.lang.String", "org.hibernate.type.EntityType.toString()"], ["java.lang.String", "org.hibernate.type.EntityType.getName()"], ["boolean", "org.hibernate.type.EntityType.isReferenceToPrimaryKey()"], ["java.lang.String", "org.hibernate.type.EntityType.getRHSUniqueKeyPropertyName()"], ["java.lang.String", "org.hibernate.type.EntityType.getLHSPropertyName()"], ["java.lang.String", "org.hibernate.type.EntityType.getPropertyName()"], ["java.lang.String", "org.hibernate.type.EntityType.getAssociatedEntityName()"], ["java.lang.String", "org.hibernate.type.EntityType.getAssociatedEntityName(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.persister.entity.Joinable", "org.hibernate.type.EntityType.getAssociatedJoinable(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Class", "org.hibernate.type.EntityType.getReturnedClass()"], ["java.lang.Object", "org.hibernate.type.EntityType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EntityType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.EntityType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.EntityType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.EntityType.isSame(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.EntityType.compare(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EntityType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.EntityType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["int", "org.hibernate.type.EntityType.getHashCode(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.EntityType.isEqual(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.EntityType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map)"], ["java.lang.String", "org.hibernate.type.EntityType.getOnCondition(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map, java.util.Set<java.lang.String>)"], ["java.lang.Object", "org.hibernate.type.EntityType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EntityType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Boolean)"], ["org.hibernate.type.Type", "org.hibernate.type.EntityType.getSemiResolvedType(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.type.EntityType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.EntityType.isLogicalOneToOne()"], ["org.hibernate.type.Type", "org.hibernate.type.EntityType.getIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.type.EntityType.getIdentifierOrUniqueKeyPropertyName(org.hibernate.engine.spi.Mapping)"], ["java.lang.Object", "org.hibernate.type.EntityType.loadByUniqueKey(java.lang.String, java.lang.String, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.type.internal.TypeConfigurationRegistry.registerTypeConfiguration(org.hibernate.type.spi.TypeConfiguration)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.type.internal.TypeConfigurationRegistry.findTypeConfiguration(java.lang.String)"], ["void", "org.hibernate.type.internal.TypeConfigurationRegistry.deregisterTypeConfiguration(org.hibernate.type.spi.TypeConfiguration)"], ["org.hibernate.type.InstantType", "org.hibernate.type.InstantType()"], ["java.lang.String", "org.hibernate.type.InstantType.objectToSQLString(java.time.Instant, org.hibernate.dialect.Dialect)"], ["java.time.Instant", "org.hibernate.type.InstantType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.time.Instant", "org.hibernate.type.InstantType.next(java.time.Instant, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.InstantType.getName()"], ["java.lang.Object", "org.hibernate.type.InstantType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.InstantType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.InstantType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.YesNoType", "org.hibernate.type.YesNoType()"], ["java.lang.String", "org.hibernate.type.YesNoType.getName()"], ["java.lang.Class", "org.hibernate.type.YesNoType.getPrimitiveClass()"], ["java.lang.Boolean", "org.hibernate.type.YesNoType.stringToObject(java.lang.String)"], ["java.io.Serializable", "org.hibernate.type.YesNoType.getDefaultValue()"], ["java.lang.String", "org.hibernate.type.YesNoType.objectToSQLString(java.lang.Boolean, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.YesNoType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.YesNoType.stringToObject(java.lang.String)"], ["org.hibernate.type.MaterializedClobType", "org.hibernate.type.MaterializedClobType()"], ["java.lang.String", "org.hibernate.type.MaterializedClobType.getName()"], ["org.hibernate.type.MaterializedNClobType", "org.hibernate.type.MaterializedNClobType()"], ["java.lang.String", "org.hibernate.type.MaterializedNClobType.getName()"], ["org.hibernate.type.AbstractType", "org.hibernate.type.AbstractType()"], ["boolean", "org.hibernate.type.AbstractType.isAssociationType()"], ["boolean", "org.hibernate.type.AbstractType.isCollectionType()"], ["boolean", "org.hibernate.type.AbstractType.isComponentType()"], ["boolean", "org.hibernate.type.AbstractType.isEntityType()"], ["int", "org.hibernate.type.AbstractType.compare(java.lang.Object, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.type.AbstractType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.AbstractType.semiResolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractType.isAnyType()"], ["boolean", "org.hibernate.type.AbstractType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.AbstractType.isSame(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractType.isEqual(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.AbstractType.getHashCode(java.lang.Object)"], ["boolean", "org.hibernate.type.AbstractType.isEqual(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.type.AbstractType.getHashCode(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.type.Type", "org.hibernate.type.AbstractType.getSemiResolvedType(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.AbstractType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map, org.hibernate.type.ForeignKeyDirection)"], ["void", "org.hibernate.type.AbstractType.beforeAssemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.WrappedMaterializedBlobType", "org.hibernate.type.WrappedMaterializedBlobType()"], ["java.lang.String", "org.hibernate.type.WrappedMaterializedBlobType.getName()"], ["org.hibernate.type.CharacterArrayClobType", "org.hibernate.type.CharacterArrayClobType()"], ["java.lang.String", "org.hibernate.type.CharacterArrayClobType.getName()"], ["org.hibernate.type.OffsetTimeType", "org.hibernate.type.OffsetTimeType()"], ["java.lang.String", "org.hibernate.type.OffsetTimeType.objectToSQLString(java.time.OffsetTime, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.OffsetTimeType.getName()"], ["java.lang.String", "org.hibernate.type.OffsetTimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.AbstractSingleColumnStandardBasicType", "org.hibernate.type.AbstractSingleColumnStandardBasicType(org.hibernate.type.descriptor.sql.SqlTypeDescriptor, org.hibernate.type.descriptor.java.JavaTypeDescriptor<T>)"], ["int", "org.hibernate.type.AbstractSingleColumnStandardBasicType.sqlType()"], ["void", "org.hibernate.type.AbstractSingleColumnStandardBasicType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.TimestampType", "org.hibernate.type.TimestampType()"], ["java.lang.String", "org.hibernate.type.TimestampType.getName()"], ["java.lang.String[]", "org.hibernate.type.TimestampType.getRegistrationKeys()"], ["java.util.Date", "org.hibernate.type.TimestampType.next(java.util.Date, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.Date", "org.hibernate.type.TimestampType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.TimestampType.objectToSQLString(java.util.Date, org.hibernate.dialect.Dialect)"], ["java.util.Date", "org.hibernate.type.TimestampType.fromStringValue(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.TimestampType.fromStringValue(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.TimestampType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.TimestampType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.TimestampType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.BasicTypeRegistry", "org.hibernate.type.BasicTypeRegistry(org.hibernate.type.spi.TypeConfiguration)"], ["org.hibernate.type.BasicTypeRegistry", "org.hibernate.type.BasicTypeRegistry()"], ["void", "org.hibernate.type.BasicTypeRegistry.register(org.hibernate.type.BasicType)"], ["void", "org.hibernate.type.BasicTypeRegistry.register(org.hibernate.type.BasicType, java.lang.String[])"], ["void", "org.hibernate.type.BasicTypeRegistry.register(org.hibernate.usertype.UserType, java.lang.String[])"], ["void", "org.hibernate.type.BasicTypeRegistry.register(org.hibernate.usertype.CompositeUserType, java.lang.String[])"], ["void", "org.hibernate.type.BasicTypeRegistry.unregister(java.lang.String...)"], ["org.hibernate.type.BasicType", "org.hibernate.type.BasicTypeRegistry.getRegisteredType(java.lang.String)"], ["org.hibernate.type.BasicTypeRegistry", "org.hibernate.type.BasicTypeRegistry.shallowCopy()"], ["org.hibernate.type.StandardBasicTypeTemplate", "org.hibernate.type.StandardBasicTypeTemplate(org.hibernate.type.descriptor.sql.SqlTypeDescriptor, org.hibernate.type.descriptor.java.JavaTypeDescriptor<J>, java.lang.String...)"], ["java.lang.String", "org.hibernate.type.StandardBasicTypeTemplate.getName()"], ["java.lang.String[]", "org.hibernate.type.StandardBasicTypeTemplate.getRegistrationKeys()"], ["org.hibernate.type.TextType", "org.hibernate.type.TextType()"], ["java.lang.String", "org.hibernate.type.TextType.getName()"], ["org.hibernate.type.ClobType", "org.hibernate.type.ClobType()"], ["java.lang.String", "org.hibernate.type.ClobType.getName()"], ["org.hibernate.type.NumericBooleanType", "org.hibernate.type.NumericBooleanType()"], ["java.lang.String", "org.hibernate.type.NumericBooleanType.getName()"], ["java.lang.Class", "org.hibernate.type.NumericBooleanType.getPrimitiveClass()"], ["java.io.Serializable", "org.hibernate.type.NumericBooleanType.getDefaultValue()"], ["java.lang.Boolean", "org.hibernate.type.NumericBooleanType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.NumericBooleanType.objectToSQLString(java.lang.Boolean, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.NumericBooleanType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.NumericBooleanType.stringToObject(java.lang.String)"], ["org.hibernate.type.TimeZoneType", "org.hibernate.type.TimeZoneType()"], ["java.lang.String", "org.hibernate.type.TimeZoneType.getName()"], ["java.lang.String", "org.hibernate.type.TimeZoneType.objectToSQLString(java.util.TimeZone, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.TimeZoneType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.ZonedDateTimeType", "org.hibernate.type.ZonedDateTimeType()"], ["java.lang.String", "org.hibernate.type.ZonedDateTimeType.objectToSQLString(java.time.ZonedDateTime, org.hibernate.dialect.Dialect)"], ["java.time.ZonedDateTime", "org.hibernate.type.ZonedDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.time.ZonedDateTime", "org.hibernate.type.ZonedDateTimeType.next(java.time.ZonedDateTime, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.ZonedDateTimeType.getName()"], ["java.lang.Object", "org.hibernate.type.ZonedDateTimeType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ZonedDateTimeType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.ZonedDateTimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.UrlType", "org.hibernate.type.UrlType()"], ["java.lang.String", "org.hibernate.type.UrlType.getName()"], ["java.lang.String", "org.hibernate.type.UrlType.toString(java.net.URL)"], ["java.lang.String", "org.hibernate.type.UrlType.objectToSQLString(java.net.URL, org.hibernate.dialect.Dialect)"], ["java.net.URL", "org.hibernate.type.UrlType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.UrlType.toString(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.UrlType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.UrlType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.ObjectType.getName()"], ["java.lang.String[]", "org.hibernate.type.ObjectType.getRegistrationKeys()"], ["org.hibernate.type.ForeignKeyDirection[]", "org.hibernate.type.ForeignKeyDirection.values()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.type.ForeignKeyDirection.valueOf(java.lang.String)"], ["org.hibernate.type.DateType", "org.hibernate.type.DateType()"], ["java.lang.String", "org.hibernate.type.DateType.getName()"], ["java.lang.String[]", "org.hibernate.type.DateType.getRegistrationKeys()"], ["java.lang.String", "org.hibernate.type.DateType.objectToSQLString(java.util.Date, org.hibernate.dialect.Dialect)"], ["java.util.Date", "org.hibernate.type.DateType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.DateType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.DateType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.CharacterArrayType", "org.hibernate.type.CharacterArrayType()"], ["java.lang.String", "org.hibernate.type.CharacterArrayType.getName()"], ["java.lang.String[]", "org.hibernate.type.CharacterArrayType.getRegistrationKeys()"], ["org.hibernate.type.TimeType", "org.hibernate.type.TimeType()"], ["java.lang.String", "org.hibernate.type.TimeType.getName()"], ["java.lang.String[]", "org.hibernate.type.TimeType.getRegistrationKeys()"], ["java.lang.String", "org.hibernate.type.TimeType.objectToSQLString(java.util.Date, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.TimeType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.PrimitiveCharacterArrayNClobType", "org.hibernate.type.PrimitiveCharacterArrayNClobType()"], ["java.lang.String", "org.hibernate.type.PrimitiveCharacterArrayNClobType.getName()"], ["org.hibernate.type.NTextType", "org.hibernate.type.NTextType()"], ["java.lang.String", "org.hibernate.type.NTextType.getName()"], ["org.hibernate.type.BlobType", "org.hibernate.type.BlobType()"], ["java.lang.String", "org.hibernate.type.BlobType.getName()"], ["org.hibernate.type.ClassType", "org.hibernate.type.ClassType()"], ["java.lang.String", "org.hibernate.type.ClassType.getName()"], ["org.hibernate.type.CalendarTimeType", "org.hibernate.type.CalendarTimeType()"], ["java.lang.String", "org.hibernate.type.CalendarTimeType.getName()"], ["org.hibernate.type.IntegerType", "org.hibernate.type.IntegerType()"], ["java.lang.String", "org.hibernate.type.IntegerType.getName()"], ["java.lang.String[]", "org.hibernate.type.IntegerType.getRegistrationKeys()"], ["java.io.Serializable", "org.hibernate.type.IntegerType.getDefaultValue()"], ["java.lang.Class", "org.hibernate.type.IntegerType.getPrimitiveClass()"], ["java.lang.String", "org.hibernate.type.IntegerType.objectToSQLString(java.lang.Integer, org.hibernate.dialect.Dialect)"], ["java.lang.Integer", "org.hibernate.type.IntegerType.stringToObject(java.lang.String)"], ["java.lang.Integer", "org.hibernate.type.IntegerType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Integer", "org.hibernate.type.IntegerType.next(java.lang.Integer, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.type.IntegerType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.IntegerType.stringToObject(java.lang.String)"], ["java.lang.Object", "org.hibernate.type.IntegerType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.IntegerType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.LocaleType", "org.hibernate.type.LocaleType()"], ["java.lang.String", "org.hibernate.type.LocaleType.getName()"], ["java.lang.String", "org.hibernate.type.LocaleType.objectToSQLString(java.util.Locale, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.LocaleType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.UUIDCharType", "org.hibernate.type.UUIDCharType()"], ["java.lang.String", "org.hibernate.type.UUIDCharType.getName()"], ["java.lang.String", "org.hibernate.type.UUIDCharType.objectToSQLString(java.util.UUID, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.UUIDCharType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, boolean)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, boolean, java.lang.String, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean)"], ["org.hibernate.type.ManyToOneType", "org.hibernate.type.ManyToOneType(org.hibernate.type.ManyToOneType, java.lang.String)"], ["boolean", "org.hibernate.type.ManyToOneType.isNullable()"], ["java.lang.String", "org.hibernate.type.ManyToOneType.getPropertyName()"], ["boolean", "org.hibernate.type.ManyToOneType.isAlwaysDirtyChecked()"], ["boolean", "org.hibernate.type.ManyToOneType.isOneToOne()"], ["boolean", "org.hibernate.type.ManyToOneType.isLogicalOneToOne()"], ["int", "org.hibernate.type.ManyToOneType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["int[]", "org.hibernate.type.ManyToOneType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.ManyToOneType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.type.ManyToOneType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.type.ManyToOneType.getForeignKeyDirection()"], ["java.lang.Object", "org.hibernate.type.ManyToOneType.hydrate(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.ManyToOneType.useLHSPrimaryKey()"], ["boolean", "org.hibernate.type.ManyToOneType.isModified(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ManyToOneType.resolve(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Boolean)"], ["java.io.Serializable", "org.hibernate.type.ManyToOneType.disassemble(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ManyToOneType.assemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.ManyToOneType.beforeAssemble(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean[]", "org.hibernate.type.ManyToOneType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.type.ManyToOneType.isDirty(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.type.ManyToOneType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.EnumType", "org.hibernate.type.EnumType()"], ["void", "org.hibernate.type.EnumType.setParameterValues(java.util.Properties)"], ["int[]", "org.hibernate.type.EnumType.sqlTypes()"], ["java.lang.Class<? extends java.lang.Enum>", "org.hibernate.type.EnumType.returnedClass()"], ["boolean", "org.hibernate.type.EnumType.equals(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.type.EnumType.hashCode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EnumType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.type.EnumType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.EnumType.deepCopy(java.lang.Object)"], ["boolean", "org.hibernate.type.EnumType.isMutable()"], ["java.io.Serializable", "org.hibernate.type.EnumType.disassemble(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EnumType.assemble(java.io.Serializable, java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EnumType.replace(java.lang.Object, java.lang.Object, java.lang.Object)"], ["org.hibernate.type.spi.TypeConfiguration", "org.hibernate.type.EnumType.getTypeConfiguration()"], ["void", "org.hibernate.type.EnumType.setTypeConfiguration(org.hibernate.type.spi.TypeConfiguration)"], ["java.lang.String", "org.hibernate.type.EnumType.objectToSQLString(java.lang.Object)"], ["java.lang.String", "org.hibernate.type.EnumType.toXMLString(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.EnumType.fromXMLString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.EnumType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.type.EnumType.isOrdinal()"], ["org.hibernate.type.CharArrayType", "org.hibernate.type.CharArrayType()"], ["java.lang.String", "org.hibernate.type.CharArrayType.getName()"], ["java.lang.String[]", "org.hibernate.type.CharArrayType.getRegistrationKeys()"], ["org.hibernate.type.MaterializedBlobType", "org.hibernate.type.MaterializedBlobType()"], ["java.lang.String", "org.hibernate.type.MaterializedBlobType.getName()"], ["org.hibernate.type.BooleanType", "org.hibernate.type.BooleanType()"], ["java.lang.String", "org.hibernate.type.BooleanType.getName()"], ["java.lang.String[]", "org.hibernate.type.BooleanType.getRegistrationKeys()"], ["java.lang.Class", "org.hibernate.type.BooleanType.getPrimitiveClass()"], ["java.io.Serializable", "org.hibernate.type.BooleanType.getDefaultValue()"], ["java.lang.Boolean", "org.hibernate.type.BooleanType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.BooleanType.objectToSQLString(java.lang.Boolean, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.BooleanType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["java.lang.Object", "org.hibernate.type.BooleanType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.BinaryType.getName()"], ["org.hibernate.type.BinaryType", "org.hibernate.type.BinaryType()"], ["java.lang.String[]", "org.hibernate.type.BinaryType.getRegistrationKeys()"], ["byte[]", "org.hibernate.type.BinaryType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["byte[]", "org.hibernate.type.BinaryType.next(byte[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.BinaryType.next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.BinaryType.seed(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.type.ArrayType", "org.hibernate.type.ArrayType(org.hibernate.type.TypeFactory$TypeScope, java.lang.String, java.lang.String, java.lang.Class)"], ["org.hibernate.type.ArrayType", "org.hibernate.type.ArrayType(java.lang.String, java.lang.String, java.lang.Class)"], ["java.lang.Class", "org.hibernate.type.ArrayType.getReturnedClass()"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.ArrayType.instantiate(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable)"], ["java.util.Iterator", "org.hibernate.type.ArrayType.getElementsIterator(java.lang.Object)"], ["org.hibernate.collection.spi.PersistentCollection", "org.hibernate.type.ArrayType.wrap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.type.ArrayType.isArrayType()"], ["java.lang.String", "org.hibernate.type.ArrayType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.type.ArrayType.instantiateResult(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.ArrayType.replaceElements(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.type.ArrayType.instantiate(int)"], ["java.lang.Object", "org.hibernate.type.ArrayType.indexOf(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.type.ArrayType.hasHolder()"], ["org.hibernate.type.BigDecimalType", "org.hibernate.type.BigDecimalType()"], ["java.lang.String", "org.hibernate.type.BigDecimalType.getName()"], ["org.hibernate.type.StringNVarcharType", "org.hibernate.type.StringNVarcharType()"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.getName()"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.objectToSQLString(java.lang.String, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.toString(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.toString(java.lang.Object)"], ["java.lang.Object", "org.hibernate.type.StringNVarcharType.stringToObject(java.lang.String)"], ["java.lang.String", "org.hibernate.type.StringNVarcharType.objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect)"], ["org.hibernate.type.CharacterArrayNClobType", "org.hibernate.type.CharacterArrayNClobType()"], ["java.lang.String", "org.hibernate.type.CharacterArrayNClobType.getName()"], ["default", "org.hibernate.stat.spi.StatisticsImplementor.void queryPlanCacheHit(java.lang.String)"], ["default", "org.hibernate.stat.spi.StatisticsImplementor.void queryCompiled(java.lang.String, long)"], ["default", "org.hibernate.stat.Statistics.long getQueryPlanCacheHitCount()"], ["default", "org.hibernate.stat.Statistics.long getQueryPlanCacheMissCount()"], ["java.lang.String", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getRegionName()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getHitCount()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getMissCount()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getPutCount()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getElementCountInMemory()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getElementCountOnDisk()"], ["long", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.getSizeInMemory()"], ["java.lang.String", "org.hibernate.stat.internal.CacheRegionStatisticsImpl.toString()"], ["long", "org.hibernate.stat.internal.NaturalIdStatisticsImpl.getExecutionCount()"], ["long", "org.hibernate.stat.internal.NaturalIdStatisticsImpl.getExecutionAvgTime()"], ["long", "org.hibernate.stat.internal.NaturalIdStatisticsImpl.getExecutionMaxTime()"], ["long", "org.hibernate.stat.internal.NaturalIdStatisticsImpl.getExecutionMinTime()"], ["java.lang.String", "org.hibernate.stat.internal.NaturalIdStatisticsImpl.toString()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getExecutionCount()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getExecutionAvgTime()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getExecutionMaxTime()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getExecutionMinTime()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getHitCount()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getMissCount()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getPutCount()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getElementCountInMemory()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getElementCountOnDisk()"], ["long", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.getSizeInMemory()"], ["java.lang.String", "org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl.toString()"], ["java.lang.String", "org.hibernate.stat.internal.CategorizedStatistics.getCategoryName()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getCacheHitCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getCachePutCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getCacheMissCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionRowCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionAvgTime()"], ["double", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionAvgTimeAsDouble()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionMaxTime()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionMinTime()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getExecutionTotalTime()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getPlanCacheHitCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getPlanCacheMissCount()"], ["long", "org.hibernate.stat.internal.QueryStatisticsImpl.getPlanCompilationTotalMicroseconds()"], ["java.lang.String", "org.hibernate.stat.internal.QueryStatisticsImpl.toString()"], ["org.hibernate.stat.internal.AbstractCacheableDataStatistics", "org.hibernate.stat.internal.AbstractCacheableDataStatistics(java.util.function.Supplier<org.hibernate.cache.spi.Region>)"], ["java.lang.String", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.getCacheRegionName()"], ["long", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.getCacheHitCount()"], ["long", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.getCachePutCount()"], ["long", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.getCacheMissCount()"], ["void", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.incrementCacheHitCount()"], ["void", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.incrementCacheMissCount()"], ["void", "org.hibernate.stat.internal.AbstractCacheableDataStatistics.incrementCachePutCount()"], ["org.hibernate.stat.internal.SessionStatisticsImpl", "org.hibernate.stat.internal.SessionStatisticsImpl(org.hibernate.engine.spi.SessionImplementor)"], ["int", "org.hibernate.stat.internal.SessionStatisticsImpl.getEntityCount()"], ["int", "org.hibernate.stat.internal.SessionStatisticsImpl.getCollectionCount()"], ["java.util.Set", "org.hibernate.stat.internal.SessionStatisticsImpl.getEntityKeys()"], ["java.util.Set", "org.hibernate.stat.internal.SessionStatisticsImpl.getCollectionKeys()"], ["java.lang.String", "org.hibernate.stat.internal.SessionStatisticsImpl.toString()"], ["void", "org.hibernate.stat.internal.StatsNamedContainer.clear()"], ["java.lang.String[]", "org.hibernate.stat.internal.StatsNamedContainer.keysAsArray()"], ["V", "org.hibernate.stat.internal.StatsNamedContainer.getOrCompute(java.lang.String, java.util.function.Function<java.lang.String, V>)"], ["V", "org.hibernate.stat.internal.StatsNamedContainer.get(java.lang.String)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.stat.internal.StatsHelper.getRootEntityRole(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.stat.internal.StatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.clear()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getStartTime()"], ["boolean", "org.hibernate.stat.internal.StatisticsImpl.isStatisticsEnabled()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.setStatisticsEnabled(boolean)"], ["java.lang.String[]", "org.hibernate.stat.internal.StatisticsImpl.getEntityNames()"], ["org.hibernate.stat.internal.EntityStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getEntityStatistics(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getEntityLoadCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getEntityFetchCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getEntityDeleteCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getEntityInsertCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getEntityUpdateCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getOptimisticFailureCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.loadEntity(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.fetchEntity(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.updateEntity(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.insertEntity(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.deleteEntity(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.optimisticFailure(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.entityCachePut(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.entityCacheHit(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.entityCacheMiss(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["java.lang.String[]", "org.hibernate.stat.internal.StatisticsImpl.getCollectionRoleNames()"], ["org.hibernate.stat.internal.CollectionStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getCollectionStatistics(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCollectionLoadCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCollectionFetchCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCollectionUpdateCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCollectionRemoveCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCollectionRecreateCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.loadCollection(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.fetchCollection(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.updateCollection(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.recreateCollection(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.removeCollection(java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.collectionCachePut(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.collectionCacheHit(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.collectionCacheMiss(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["org.hibernate.stat.internal.NaturalIdStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdStatistics(java.lang.String)"], ["org.hibernate.stat.internal.DeprecatedNaturalIdCacheStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdCacheStatistics(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdQueryExecutionCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdQueryExecutionMaxTime()"], ["java.lang.String", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdQueryExecutionMaxTimeRegion()"], ["java.lang.String", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdQueryExecutionMaxTimeEntity()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdCacheHitCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdCacheMissCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdCachePutCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.naturalIdCachePut(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.naturalIdCacheHit(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.naturalIdCacheMiss(org.hibernate.metamodel.model.domain.NavigableRole, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.naturalIdQueryExecuted(java.lang.String, long)"], ["java.lang.String[]", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCacheRegionNames()"], ["org.hibernate.stat.internal.CacheRegionStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getDomainDataRegionStatistics(java.lang.String)"], ["org.hibernate.stat.internal.CacheRegionStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getQueryRegionStatistics(java.lang.String)"], ["org.hibernate.stat.internal.CacheRegionStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getCacheRegionStatistics(java.lang.String)"], ["org.hibernate.stat.internal.CacheRegionStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCacheStatistics(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCacheHitCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCacheMissCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCachePutCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getUpdateTimestampsCacheHitCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getUpdateTimestampsCacheMissCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getUpdateTimestampsCachePutCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.updateTimestampsCacheHit()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.updateTimestampsCacheMiss()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.updateTimestampsCachePut()"], ["java.lang.String[]", "org.hibernate.stat.internal.StatisticsImpl.getQueries()"], ["org.hibernate.stat.internal.QueryStatisticsImpl", "org.hibernate.stat.internal.StatisticsImpl.getQueryStatistics(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryExecutionCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryCacheHitCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryCacheMissCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryCachePutCount()"], ["java.lang.String", "org.hibernate.stat.internal.StatisticsImpl.getQueryExecutionMaxTimeQueryString()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryExecutionMaxTime()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryExecuted(java.lang.String, int, long)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryCacheHit(java.lang.String, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryCacheMiss(java.lang.String, java.lang.String)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryCachePut(java.lang.String, java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryPlanCacheHitCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getQueryPlanCacheMissCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryCompiled(java.lang.String, long)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.queryPlanCacheHit(java.lang.String)"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSessionOpenCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSessionCloseCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getFlushCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getConnectCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getSuccessfulTransactionCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getTransactionCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getCloseStatementCount()"], ["long", "org.hibernate.stat.internal.StatisticsImpl.getPrepareStatementCount()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.openSession()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.closeSession()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.flush()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.connect()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.prepareStatement()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.closeStatement()"], ["void", "org.hibernate.stat.internal.StatisticsImpl.endTransaction(boolean)"], ["void", "org.hibernate.stat.internal.StatisticsImpl.logSummary()"], ["java.lang.String", "org.hibernate.stat.internal.StatisticsImpl.toString()"], ["org.hibernate.stat.NaturalIdCacheStatistics", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdCacheStatistics(java.lang.String)"], ["org.hibernate.stat.SecondLevelCacheStatistics", "org.hibernate.stat.internal.StatisticsImpl.getSecondLevelCacheStatistics(java.lang.String)"], ["org.hibernate.stat.CacheRegionStatistics", "org.hibernate.stat.internal.StatisticsImpl.getCacheRegionStatistics(java.lang.String)"], ["org.hibernate.stat.CacheRegionStatistics", "org.hibernate.stat.internal.StatisticsImpl.getQueryRegionStatistics(java.lang.String)"], ["org.hibernate.stat.CacheRegionStatistics", "org.hibernate.stat.internal.StatisticsImpl.getDomainDataRegionStatistics(java.lang.String)"], ["org.hibernate.stat.QueryStatistics", "org.hibernate.stat.internal.StatisticsImpl.getQueryStatistics(java.lang.String)"], ["org.hibernate.stat.NaturalIdStatistics", "org.hibernate.stat.internal.StatisticsImpl.getNaturalIdStatistics(java.lang.String)"], ["org.hibernate.stat.CollectionStatistics", "org.hibernate.stat.internal.StatisticsImpl.getCollectionStatistics(java.lang.String)"], ["org.hibernate.stat.EntityStatistics", "org.hibernate.stat.internal.StatisticsImpl.getEntityStatistics(java.lang.String)"], ["org.hibernate.stat.internal.StatisticsInitiator", "org.hibernate.stat.internal.StatisticsInitiator()"], ["org.hibernate.stat.spi.StatisticsImplementor", "org.hibernate.stat.internal.StatisticsInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["org.hibernate.stat.spi.StatisticsImplementor", "org.hibernate.stat.internal.StatisticsInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.stat.internal.StatisticsInitiator.initiateService(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.boot.spi.SessionFactoryOptions, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.stat.internal.StatisticsInitiator.initiateService(org.hibernate.service.spi.SessionFactoryServiceInitiatorContext)"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getDeleteCount()"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getInsertCount()"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getLoadCount()"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getUpdateCount()"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getFetchCount()"], ["long", "org.hibernate.stat.internal.EntityStatisticsImpl.getOptimisticFailureCount()"], ["java.lang.String", "org.hibernate.stat.internal.EntityStatisticsImpl.toString()"], ["long", "org.hibernate.stat.internal.CollectionStatisticsImpl.getLoadCount()"], ["long", "org.hibernate.stat.internal.CollectionStatisticsImpl.getFetchCount()"], ["long", "org.hibernate.stat.internal.CollectionStatisticsImpl.getRecreateCount()"], ["long", "org.hibernate.stat.internal.CollectionStatisticsImpl.getRemoveCount()"], ["long", "org.hibernate.stat.internal.CollectionStatisticsImpl.getUpdateCount()"], ["java.lang.String", "org.hibernate.stat.internal.CollectionStatisticsImpl.toString()"], ["default", "org.hibernate.stat.QueryStatistics.long getPlanCacheHitCount()"], ["default", "org.hibernate.stat.QueryStatistics.long getPlanCacheMissCount()"], ["default", "org.hibernate.stat.QueryStatistics.long getPlanCompilationTotalMicroseconds()"], ["default", "org.hibernate.stat.NaturalIdCacheStatistics.java.util.Map getEntries()"], ["default", "org.hibernate.stat.SecondLevelCacheStatistics.java.util.Map getEntries()"], ["org.hibernate.UnknownProfileException", "org.hibernate.UnknownProfileException(java.lang.String)"], ["java.lang.String", "org.hibernate.UnknownProfileException.getName()"], ["org.hibernate.ScrollMode[]", "org.hibernate.ScrollMode.values()"], ["org.hibernate.ScrollMode", "org.hibernate.ScrollMode.valueOf(java.lang.String)"], ["int", "org.hibernate.ScrollMode.toResultSetType()"], ["boolean", "org.hibernate.ScrollMode.lessThan(org.hibernate.ScrollMode)"], ["org.hibernate.exception.ConstraintViolationException", "org.hibernate.exception.ConstraintViolationException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.ConstraintViolationException", "org.hibernate.exception.ConstraintViolationException(java.lang.String, java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.exception.ConstraintViolationException.getConstraintName()"], ["org.hibernate.exception.spi.TemplatedViolatedConstraintNameExtracter", "org.hibernate.exception.spi.TemplatedViolatedConstraintNameExtracter()"], ["java.lang.String", "org.hibernate.exception.spi.TemplatedViolatedConstraintNameExtracter.extractConstraintName(java.sql.SQLException)"], ["org.hibernate.JDBCException", "org.hibernate.exception.spi.SQLExceptionConverterFactory$1.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.spi.SQLExceptionConverter", "org.hibernate.exception.spi.SQLExceptionConverterFactory.buildSQLExceptionConverter(org.hibernate.dialect.Dialect, java.util.Properties)"], ["org.hibernate.exception.spi.SQLExceptionConverter", "org.hibernate.exception.spi.SQLExceptionConverterFactory.buildMinimalSQLExceptionConverter()"], ["org.hibernate.exception.SQLGrammarException", "org.hibernate.exception.SQLGrammarException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.SQLGrammarException", "org.hibernate.exception.SQLGrammarException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.GenericJDBCException", "org.hibernate.exception.GenericJDBCException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.GenericJDBCException", "org.hibernate.exception.GenericJDBCException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.LockTimeoutException", "org.hibernate.exception.LockTimeoutException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.LockTimeoutException", "org.hibernate.exception.LockTimeoutException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.exception.internal.SQLStateConverter$1.getViolatedConstraintNameExtracter()"], ["org.hibernate.exception.internal.SQLStateConversionDelegate", "org.hibernate.exception.internal.SQLStateConversionDelegate(org.hibernate.exception.spi.ConversionContext)"], ["org.hibernate.JDBCException", "org.hibernate.exception.internal.SQLStateConversionDelegate.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.internal.CacheSQLExceptionConversionDelegate", "org.hibernate.exception.internal.CacheSQLExceptionConversionDelegate(org.hibernate.exception.spi.ConversionContext)"], ["org.hibernate.JDBCException", "org.hibernate.exception.internal.CacheSQLExceptionConversionDelegate.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.internal.StandardSQLExceptionConverter", "org.hibernate.exception.internal.StandardSQLExceptionConverter()"], ["org.hibernate.exception.internal.StandardSQLExceptionConverter", "org.hibernate.exception.internal.StandardSQLExceptionConverter(org.hibernate.exception.spi.SQLExceptionConversionDelegate...)"], ["void", "org.hibernate.exception.internal.StandardSQLExceptionConverter.addDelegate(org.hibernate.exception.spi.SQLExceptionConversionDelegate)"], ["org.hibernate.JDBCException", "org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.internal.SQLStateConverter", "org.hibernate.exception.internal.SQLStateConverter(org.hibernate.exception.spi.ViolatedConstraintNameExtracter)"], ["org.hibernate.exception.internal.SQLExceptionTypeDelegate", "org.hibernate.exception.internal.SQLExceptionTypeDelegate(org.hibernate.exception.spi.ConversionContext)"], ["org.hibernate.JDBCException", "org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.exception.LockAcquisitionException", "org.hibernate.exception.LockAcquisitionException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.LockAcquisitionException", "org.hibernate.exception.LockAcquisitionException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.JDBCConnectionException", "org.hibernate.exception.JDBCConnectionException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.JDBCConnectionException", "org.hibernate.exception.JDBCConnectionException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["org.hibernate.exception.DataException", "org.hibernate.exception.DataException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.exception.DataException", "org.hibernate.exception.DataException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["boolean", "org.hibernate.ReplicationMode$4.shouldOverwriteCurrentVersion(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.type.VersionType)"], ["<T> java.util.List<javax.persistence.EntityGraph<? super T>>", "org.hibernate.Session.getEntityGraphs(java.lang.Class<T>)"], ["default", "org.hibernate.Session.org.hibernate.SQLQuery createSQLQuery(java.lang.String)"], ["default", "org.hibernate.Session.javax.persistence.EntityGraph getEntityGraph(java.lang.String)"], ["default", "org.hibernate.Session.javax.persistence.EntityGraph createEntityGraph(java.lang.String)"], ["default", "org.hibernate.Session.javax.persistence.EntityGraph createEntityGraph(java.lang.Class)"], ["default", "org.hibernate.Session.javax.persistence.TypedQuery createNamedQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.Session.javax.persistence.TypedQuery createQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.Session.javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaDelete)"], ["default", "org.hibernate.Session.javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["default", "org.hibernate.Session.javax.persistence.TypedQuery createQuery(javax.persistence.criteria.CriteriaQuery)"], ["T", "org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.getReference(java.io.Serializable)"], ["T", "org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(java.io.Serializable)"], ["org.hibernate.IdentifierLoadAccess", "org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.with(org.hibernate.LockOptions)"], ["org.hibernate.internal.ContextualJdbcConnectionAccess", "org.hibernate.internal.ContextualJdbcConnectionAccess(java.lang.String, org.hibernate.SessionEventListener, org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider)"], ["java.sql.Connection", "org.hibernate.internal.ContextualJdbcConnectionAccess.obtainConnection()"], ["void", "org.hibernate.internal.ContextualJdbcConnectionAccess.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.internal.ContextualJdbcConnectionAccess.supportsAggressiveRelease()"], ["org.hibernate.internal.StaticFilterAliasGenerator", "org.hibernate.internal.StaticFilterAliasGenerator(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.StaticFilterAliasGenerator.getAlias(java.lang.String)"], ["org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl(org.hibernate.internal.SessionImpl, org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.LockOptions", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.getLockOptions()"], ["java.lang.Integer", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.getBatchSize()"], ["boolean", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.isSessionCheckingEnabled()"], ["boolean", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.isSecondLevelCacheCheckingEnabled()"], ["boolean", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.isReturnOfDeletedEntitiesEnabled()"], ["boolean", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.isOrderReturnEnabled()"], ["<K extends java.io.Serializable> java.util.List<T>", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.multiLoad(K...)"], ["<K extends java.io.Serializable> java.util.List<T>", "org.hibernate.internal.SessionImpl$MultiIdentifierLoadAccessImpl.multiLoad(java.util.List<K>)"], ["org.hibernate.internal.NonContextualJdbcConnectionAccess", "org.hibernate.internal.NonContextualJdbcConnectionAccess(org.hibernate.SessionEventListener, org.hibernate.engine.jdbc.connections.spi.ConnectionProvider)"], ["java.sql.Connection", "org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection()"], ["void", "org.hibernate.internal.NonContextualJdbcConnectionAccess.releaseConnection(java.sql.Connection)"], ["boolean", "org.hibernate.internal.NonContextualJdbcConnectionAccess.supportsAggressiveRelease()"], ["org.hibernate.LockMode", "org.hibernate.internal.SessionImpl$LockRequestImpl.getLockMode()"], ["org.hibernate.Session$LockRequest", "org.hibernate.internal.SessionImpl$LockRequestImpl.setLockMode(org.hibernate.LockMode)"], ["int", "org.hibernate.internal.SessionImpl$LockRequestImpl.getTimeOut()"], ["org.hibernate.Session$LockRequest", "org.hibernate.internal.SessionImpl$LockRequestImpl.setTimeOut(int)"], ["boolean", "org.hibernate.internal.SessionImpl$LockRequestImpl.getScope()"], ["org.hibernate.Session$LockRequest", "org.hibernate.internal.SessionImpl$LockRequestImpl.setScope(boolean)"], ["void", "org.hibernate.internal.SessionImpl$LockRequestImpl.lock(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl$LockRequestImpl.lock(java.lang.Object)"], ["org.hibernate.internal.util.ZonedDateTimeComparator", "org.hibernate.internal.util.ZonedDateTimeComparator()"], ["int", "org.hibernate.internal.util.ZonedDateTimeComparator.compare(java.time.ZonedDateTime, java.time.ZonedDateTime)"], ["int", "org.hibernate.internal.util.ZonedDateTimeComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.internal.util.ValueHolder", "org.hibernate.internal.util.ValueHolder(org.hibernate.internal.util.ValueHolder$DeferredInitializer<T>)"], ["org.hibernate.internal.util.ValueHolder", "org.hibernate.internal.util.ValueHolder(T)"], ["T", "org.hibernate.internal.util.ValueHolder.getValue()"], ["org.hibernate.internal.util.NullnessHelper", "org.hibernate.internal.util.NullnessHelper()"], ["<T> T", "org.hibernate.internal.util.NullnessHelper.coalesce(T...)"], ["<T> T", "org.hibernate.internal.util.NullnessHelper.coalesceSuppliedValues(java.util.function.Supplier<T>...)"], ["javax.persistence.LockModeType", "org.hibernate.internal.util.LockModeConverter.convertToLockModeType(org.hibernate.LockMode)"], ["org.hibernate.LockMode", "org.hibernate.internal.util.LockModeConverter.convertToLockMode(javax.persistence.LockModeType)"], ["int", "org.hibernate.internal.util.MathHelper.ceilingPowerOfTwo(int)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.extractEqualsMethod(java.lang.Class)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.extractHashCodeMethod(java.lang.Class)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.overridesEquals(java.lang.Class)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.overridesHashCode(java.lang.Class)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.implementsInterface(java.lang.Class, java.lang.Class)"], ["java.lang.Class", "org.hibernate.internal.util.ReflectHelper.classForName(java.lang.String, java.lang.Class)"], ["java.lang.Class", "org.hibernate.internal.util.ReflectHelper.classForName(java.lang.String)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.isPublic(java.lang.Class, java.lang.reflect.Member)"], ["java.lang.Class", "org.hibernate.internal.util.ReflectHelper.reflectedPropertyClass(java.lang.String, java.lang.String, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["java.lang.Class", "org.hibernate.internal.util.ReflectHelper.reflectedPropertyClass(java.lang.Class, java.lang.String)"], ["java.lang.Object", "org.hibernate.internal.util.ReflectHelper.getConstantValue(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["<T> java.lang.reflect.Constructor<T>", "org.hibernate.internal.util.ReflectHelper.getDefaultConstructor(java.lang.Class<T>)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.isAbstractClass(java.lang.Class)"], ["boolean", "org.hibernate.internal.util.ReflectHelper.isFinalClass(java.lang.Class)"], ["java.lang.reflect.Constructor", "org.hibernate.internal.util.ReflectHelper.getConstructor(java.lang.Class, org.hibernate.type.Type[])"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.getMethod(java.lang.Class, java.lang.reflect.Method)"], ["java.lang.reflect.Field", "org.hibernate.internal.util.ReflectHelper.findField(java.lang.Class, java.lang.String)"], ["void", "org.hibernate.internal.util.ReflectHelper.ensureAccessibility(java.lang.reflect.AccessibleObject)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.findGetterMethod(java.lang.Class, java.lang.String)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.getterMethodOrNull(java.lang.Class, java.lang.String)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.setterMethodOrNull(java.lang.Class, java.lang.String, java.lang.Class)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.findSetterMethod(java.lang.Class, java.lang.String, java.lang.Class)"], ["java.lang.reflect.Method", "org.hibernate.internal.util.ReflectHelper.findGetterMethodForFieldAccess(java.lang.reflect.Field, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.EntityPrinter.toString(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.hibernate.internal.util.EntityPrinter.toString(org.hibernate.type.Type[], java.lang.Object[])"], ["java.lang.String", "org.hibernate.internal.util.EntityPrinter.toString(java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>)"], ["void", "org.hibernate.internal.util.EntityPrinter.toString(java.lang.Iterable<java.util.Map$Entry<org.hibernate.engine.spi.EntityKey, java.lang.Object>>)"], ["org.hibernate.internal.util.EntityPrinter", "org.hibernate.internal.util.EntityPrinter(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["int", "org.hibernate.internal.util.BytesHelper.toInt(byte[])"], ["byte[]", "org.hibernate.internal.util.BytesHelper.fromShort(int)"], ["byte[]", "org.hibernate.internal.util.BytesHelper.fromInt(int)"], ["byte[]", "org.hibernate.internal.util.BytesHelper.fromLong(long)"], ["void", "org.hibernate.internal.util.BytesHelper.fromLong(long, byte[], int)"], ["long", "org.hibernate.internal.util.BytesHelper.asLong(byte[])"], ["long", "org.hibernate.internal.util.BytesHelper.asLong(byte[], int)"], ["java.lang.String", "org.hibernate.internal.util.BytesHelper.toBinaryString(byte)"], ["java.lang.String", "org.hibernate.internal.util.BytesHelper.toBinaryString(int)"], ["java.lang.String", "org.hibernate.internal.util.BytesHelper.toBinaryString(long)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.getString(java.lang.String, java.util.Map)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.getString(java.lang.String, java.util.Map, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.getString(java.lang.String, java.util.Map, java.lang.String, java.lang.String...)"], ["boolean", "org.hibernate.internal.util.config.ConfigurationHelper.getBoolean(java.lang.String, java.util.Map)"], ["boolean", "org.hibernate.internal.util.config.ConfigurationHelper.getBoolean(java.lang.String, java.util.Map, boolean)"], ["java.lang.Boolean", "org.hibernate.internal.util.config.ConfigurationHelper.toBoolean(java.lang.Object, boolean)"], ["java.lang.Boolean", "org.hibernate.internal.util.config.ConfigurationHelper.getBooleanWrapper(java.lang.String, java.util.Map, java.lang.Boolean)"], ["int", "org.hibernate.internal.util.config.ConfigurationHelper.getInt(java.lang.String, java.util.Map, int)"], ["java.lang.Integer", "org.hibernate.internal.util.config.ConfigurationHelper.getInteger(java.lang.String, java.util.Map)"], ["long", "org.hibernate.internal.util.config.ConfigurationHelper.getLong(java.lang.String, java.util.Map, int)"], ["java.util.Map", "org.hibernate.internal.util.config.ConfigurationHelper.clone(java.util.Map<?, ?>)"], ["java.util.Properties", "org.hibernate.internal.util.config.ConfigurationHelper.maskOut(java.util.Properties, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.extractPropertyValue(java.lang.String, java.util.Properties)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.extractPropertyValue(java.lang.String, java.util.Map)"], ["java.util.Map", "org.hibernate.internal.util.config.ConfigurationHelper.toMap(java.lang.String, java.lang.String, java.util.Properties)"], ["java.util.Map", "org.hibernate.internal.util.config.ConfigurationHelper.toMap(java.lang.String, java.lang.String, java.util.Map)"], ["java.lang.String[]", "org.hibernate.internal.util.config.ConfigurationHelper.toStringArray(java.lang.String, java.lang.String, java.util.Properties)"], ["java.lang.String[]", "org.hibernate.internal.util.config.ConfigurationHelper.toStringArray(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.util.config.ConfigurationHelper.resolvePlaceHolders(java.util.Map<?, ?>)"], ["java.lang.String", "org.hibernate.internal.util.config.ConfigurationHelper.resolvePlaceHolder(java.lang.String)"], ["org.hibernate.internal.util.config.ConfigurationException", "org.hibernate.internal.util.config.ConfigurationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.internal.util.config.ConfigurationException", "org.hibernate.internal.util.config.ConfigurationException(java.lang.String)"], ["org.hibernate.internal.util.Cloneable", "org.hibernate.internal.util.Cloneable()"], ["java.lang.Object", "org.hibernate.internal.util.Cloneable.shallowCopy()"], ["void", "org.hibernate.internal.util.Cloneable.validate()"], ["java.lang.Object", "org.hibernate.internal.util.SerializationHelper.clone(java.io.Serializable)"], ["void", "org.hibernate.internal.util.SerializationHelper.serialize(java.io.Serializable, java.io.OutputStream)"], ["byte[]", "org.hibernate.internal.util.SerializationHelper.serialize(java.io.Serializable)"], ["<T> T", "org.hibernate.internal.util.SerializationHelper.deserialize(java.io.InputStream)"], ["java.lang.ClassLoader", "org.hibernate.internal.util.SerializationHelper.defaultClassLoader()"], ["java.lang.ClassLoader", "org.hibernate.internal.util.SerializationHelper.hibernateClassLoader()"], ["java.lang.Object", "org.hibernate.internal.util.SerializationHelper.deserialize(java.io.InputStream, java.lang.ClassLoader)"], ["<T> T", "org.hibernate.internal.util.SerializationHelper.doDeserialize(java.io.InputStream, java.lang.ClassLoader, java.lang.ClassLoader, java.lang.ClassLoader)"], ["java.lang.Object", "org.hibernate.internal.util.SerializationHelper.deserialize(byte[])"], ["java.lang.Object", "org.hibernate.internal.util.SerializationHelper.deserialize(byte[], java.lang.ClassLoader)"], ["<X> org.hibernate.internal.util.type.PrimitiveWrapperHelper$PrimitiveWrapperDescriptor<X>", "org.hibernate.internal.util.type.PrimitiveWrapperHelper.getDescriptorByPrimitiveType(java.lang.Class<X>)"], ["<X> org.hibernate.internal.util.type.PrimitiveWrapperHelper$PrimitiveWrapperDescriptor<X>", "org.hibernate.internal.util.type.PrimitiveWrapperHelper.getDescriptorByWrapperType(java.lang.Class<X>)"], ["boolean", "org.hibernate.internal.util.type.PrimitiveWrapperHelper.isWrapper(java.lang.Class<?>)"], ["boolean", "org.hibernate.internal.util.type.PrimitiveWrapperHelper.arePrimitiveWrapperEquivalents(java.lang.Class, java.lang.Class)"], ["org.dom4j.DocumentFactory", "org.hibernate.internal.util.xml.XMLHelper$1.run()"], ["java.lang.Object", "org.hibernate.internal.util.xml.XMLHelper$1.run()"], ["org.hibernate.internal.util.xml.XmlInfrastructureException", "org.hibernate.internal.util.xml.XmlInfrastructureException(java.lang.String)"], ["org.hibernate.internal.util.xml.XmlInfrastructureException", "org.hibernate.internal.util.xml.XmlInfrastructureException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.internal.util.xml.BaseXMLEventReader", "org.hibernate.internal.util.xml.BaseXMLEventReader(javax.xml.stream.XMLEventReader)"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.internal.util.xml.BaseXMLEventReader.nextEvent()"], ["java.lang.Object", "org.hibernate.internal.util.xml.BaseXMLEventReader.next()"], ["java.lang.String", "org.hibernate.internal.util.xml.BaseXMLEventReader.getElementText()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.internal.util.xml.BaseXMLEventReader.nextTag()"], ["org.hibernate.internal.util.xml.XsdException", "org.hibernate.internal.util.xml.XsdException(java.lang.String, java.lang.String)"], ["org.hibernate.internal.util.xml.XsdException", "org.hibernate.internal.util.xml.XsdException(java.lang.String, java.lang.Throwable, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.xml.XsdException.getXsdName()"], ["org.hibernate.internal.util.xml.FilteringXMLEventReader", "org.hibernate.internal.util.xml.FilteringXMLEventReader(javax.xml.stream.XMLEventReader)"], ["boolean", "org.hibernate.internal.util.xml.FilteringXMLEventReader.hasNext()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.internal.util.xml.FilteringXMLEventReader.peek()"], ["org.hibernate.internal.util.xml.OriginImpl", "org.hibernate.internal.util.xml.OriginImpl(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.xml.OriginImpl.getType()"], ["java.lang.String", "org.hibernate.internal.util.xml.OriginImpl.getName()"], ["org.hibernate.internal.util.xml.ErrorLogger", "org.hibernate.internal.util.xml.ErrorLogger()"], ["org.hibernate.internal.util.xml.ErrorLogger", "org.hibernate.internal.util.xml.ErrorLogger(java.lang.String)"], ["void", "org.hibernate.internal.util.xml.ErrorLogger.error(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.internal.util.xml.ErrorLogger.fatalError(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.internal.util.xml.ErrorLogger.warning(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.internal.util.xml.ErrorLogger.reset()"], ["boolean", "org.hibernate.internal.util.xml.ErrorLogger.hasErrors()"], ["void", "org.hibernate.internal.util.xml.ErrorLogger.logErrors()"], ["org.hibernate.internal.util.xml.XMLHelper", "org.hibernate.internal.util.xml.XMLHelper()"], ["org.dom4j.DocumentFactory", "org.hibernate.internal.util.xml.XMLHelper.getDocumentFactory()"], ["org.dom4j.io.SAXReader", "org.hibernate.internal.util.xml.XMLHelper.createSAXReader(org.hibernate.internal.util.xml.ErrorLogger, org.xml.sax.EntityResolver)"], ["org.hibernate.internal.util.xml.BufferedXMLEventReader", "org.hibernate.internal.util.xml.BufferedXMLEventReader(javax.xml.stream.XMLEventReader)"], ["org.hibernate.internal.util.xml.BufferedXMLEventReader", "org.hibernate.internal.util.xml.BufferedXMLEventReader(javax.xml.stream.XMLEventReader, int)"], ["boolean", "org.hibernate.internal.util.xml.BufferedXMLEventReader.hasNext()"], ["javax.xml.stream.events.XMLEvent", "org.hibernate.internal.util.xml.BufferedXMLEventReader.peek()"], ["void", "org.hibernate.internal.util.xml.BufferedXMLEventReader.mark()"], ["void", "org.hibernate.internal.util.xml.BufferedXMLEventReader.mark(int)"], ["void", "org.hibernate.internal.util.xml.BufferedXMLEventReader.reset()"], ["void", "org.hibernate.internal.util.xml.BufferedXMLEventReader.close()"], ["int", "org.hibernate.internal.util.xml.BufferedXMLEventReader.bufferSize()"], ["void", "org.hibernate.internal.util.xml.BufferedXMLEventReader.remove()"], ["java.lang.String", "org.hibernate.internal.util.xml.XMLStreamConstantsUtils.getEventName(int)"], ["org.hibernate.internal.util.xml.DTDEntityResolver", "org.hibernate.internal.util.xml.DTDEntityResolver()"], ["org.xml.sax.InputSource", "org.hibernate.internal.util.xml.DTDEntityResolver.resolveEntity(java.lang.String, java.lang.String)"], ["org.hibernate.internal.util.xml.UnsupportedOrmXsdVersionException", "org.hibernate.internal.util.xml.UnsupportedOrmXsdVersionException(java.lang.String, org.hibernate.internal.util.xml.Origin)"], ["org.hibernate.internal.util.MarkerObject", "org.hibernate.internal.util.MarkerObject(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.MarkerObject.toString()"], ["java.lang.Void", "org.hibernate.internal.util.ValueHolder$1.initialize()"], ["java.lang.Object", "org.hibernate.internal.util.ValueHolder$1.initialize()"], ["int", "org.hibernate.internal.util.StringHelper.lastIndexOfLetter(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.joinWithQualifierAndSuffix(java.lang.String[], java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.join(java.lang.String, java.util.Iterator<?>)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.add(java.lang.String[], java.lang.String, java.lang.String[])"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.repeat(java.lang.String, int)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.repeat(java.lang.String, int, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.repeat(char, int)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.replace(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.replace(java.lang.String[], java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.replace(java.lang.String, java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.replace(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.replace(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)"], ["int", "org.hibernate.internal.util.StringHelper.indexOfIdentifierWord(java.lang.String, java.lang.String)"], ["char", "org.hibernate.internal.util.StringHelper.getLastNonWhitespaceCharacter(java.lang.String)"], ["char", "org.hibernate.internal.util.StringHelper.getFirstNonWhitespaceCharacter(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.replaceOnce(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.split(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.split(java.lang.String, java.lang.String, boolean)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.splitTrimmingTokens(java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.unqualify(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.qualifier(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.collapse(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.collapseQualifier(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.partiallyUnqualify(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.collapseQualifierBase(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.suffix(java.lang.String[], java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.root(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.unroot(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.toString(java.lang.Object[])"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.multiply(java.lang.String, java.util.Iterator<java.lang.String>, java.util.Iterator<java.lang.String[]>)"], ["int", "org.hibernate.internal.util.StringHelper.countUnquoted(java.lang.String, char)"], ["boolean", "org.hibernate.internal.util.StringHelper.isNotEmpty(java.lang.String)"], ["boolean", "org.hibernate.internal.util.StringHelper.isEmpty(java.lang.String)"], ["boolean", "org.hibernate.internal.util.StringHelper.isEmptyOrWhiteSpace(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.qualify(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.qualifyConditionally(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.qualify(java.lang.String, java.lang.String[])"], ["int", "org.hibernate.internal.util.StringHelper.firstIndexOfChar(java.lang.String, java.util.BitSet, int)"], ["int", "org.hibernate.internal.util.StringHelper.firstIndexOfChar(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.truncate(java.lang.String, int)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.generateAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.generateAlias(java.lang.String, int)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.unqualifyEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.moveAndToBeginning(java.lang.String)"], ["boolean", "org.hibernate.internal.util.StringHelper.isQuoted(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.unquote(java.lang.String)"], ["boolean", "org.hibernate.internal.util.StringHelper.isQuoted(java.lang.String, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.unquote(java.lang.String, org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.internal.util.StringHelper.unquote(java.lang.String[], org.hibernate.dialect.Dialect)"], ["java.lang.StringBuilder", "org.hibernate.internal.util.StringHelper.buildBatchFetchRestrictionFragment(java.lang.String, java.lang.String[], org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.expandBatchIdPlaceholder(java.lang.String, java.io.Serializable[], java.lang.String, java.lang.String[], org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.nullIfEmpty(java.lang.String)"], ["<T> java.lang.String", "org.hibernate.internal.util.StringHelper.join(java.util.Collection<T>, org.hibernate.internal.util.StringHelper$Renderer<T>)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.getNonEmptyOrConjunctionIfBothNonEmpty(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.util.StringHelper.safeInterning(java.lang.String)"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$WeakKeyReference.keyHash()"], ["java.lang.Object", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$WeakKeyReference.keyRef()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashIterator.hasMoreElements()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashIterator.hasNext()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashIterator.remove()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionListener.onEntryEviction(java.util.Map<K, V>)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionListener.onEntryChosenForEviction(V)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$HashIterator.hasMoreElements()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$HashIterator.hasNext()"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$HashIterator.remove()"], ["org.hibernate.internal.util.collections.JoinedIterable", "org.hibernate.internal.util.collections.JoinedIterable(java.util.List<java.lang.Iterable<T>>)"], ["<K, V> java.util.Map<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.mapOfSize(int)"], ["int", "org.hibernate.internal.util.collections.CollectionHelper.determineProperSizing(java.util.Map)"], ["<X, Y> java.util.Map<X, Y>", "org.hibernate.internal.util.collections.CollectionHelper.makeCopy(java.util.Map<X, Y>)"], ["<K, V> java.util.HashMap<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.makeCopy(java.util.Map<K, V>, java.util.function.Function<K, K>, java.util.function.Function<V, V>)"], ["<K, V> java.util.Map<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.makeMap(java.util.Collection<V>, java.util.function.Function<V, K>)"], ["<K, V, E> java.util.Map<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.makeMap(java.util.Collection<E>, java.util.function.Function<E, K>, java.util.function.Function<E, V>)"], ["int", "org.hibernate.internal.util.collections.CollectionHelper.determineProperSizing(java.util.Set)"], ["int", "org.hibernate.internal.util.collections.CollectionHelper.determineProperSizing(int)"], ["<K, V> java.util.concurrent.ConcurrentHashMap<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.concurrentMap(int)"], ["<K, V> java.util.concurrent.ConcurrentHashMap<K, V>", "org.hibernate.internal.util.collections.CollectionHelper.concurrentMap(int, float)"], ["<T> java.util.ArrayList<T>", "org.hibernate.internal.util.collections.CollectionHelper.arrayList(int)"], ["<T> java.util.Set<T>", "org.hibernate.internal.util.collections.CollectionHelper.makeCopy(java.util.Set<T>)"], ["boolean", "org.hibernate.internal.util.collections.CollectionHelper.isEmpty(java.util.Collection)"], ["boolean", "org.hibernate.internal.util.collections.CollectionHelper.isEmpty(java.util.Map)"], ["boolean", "org.hibernate.internal.util.collections.CollectionHelper.isNotEmpty(java.util.Collection)"], ["boolean", "org.hibernate.internal.util.collections.CollectionHelper.isNotEmpty(java.util.Map)"], ["boolean", "org.hibernate.internal.util.collections.CollectionHelper.isEmpty(java.lang.Object[])"], ["java.util.Map$Entry<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntryIterator.next()"], ["java.lang.Object", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntryIterator.next()"], ["org.hibernate.internal.util.collections.SingletonStack", "org.hibernate.internal.util.collections.SingletonStack(T)"], ["void", "org.hibernate.internal.util.collections.SingletonStack.push(T)"], ["T", "org.hibernate.internal.util.collections.SingletonStack.pop()"], ["T", "org.hibernate.internal.util.collections.SingletonStack.getCurrent()"], ["T", "org.hibernate.internal.util.collections.SingletonStack.getPrevious()"], ["int", "org.hibernate.internal.util.collections.SingletonStack.depth()"], ["boolean", "org.hibernate.internal.util.collections.SingletonStack.isEmpty()"], ["void", "org.hibernate.internal.util.collections.SingletonStack.clear()"], ["void", "org.hibernate.internal.util.collections.SingletonStack.visitCurrentFirst(java.util.function.Consumer<T>)"], ["<X> X", "org.hibernate.internal.util.collections.SingletonStack.findCurrentFirst(java.util.function.Function<T, X>)"], ["K", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeyIterator.next()"], ["K", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeyIterator.nextElement()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$WeakValueReference.keyHash()"], ["java.lang.Object", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$WeakValueReference.keyRef()"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.contains(java.lang.Object[], java.lang.Object)"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.indexOf(java.lang.Object[], java.lang.Object)"], ["<T> T[]", "org.hibernate.internal.util.collections.ArrayHelper.filledArray(T, java.lang.Class<T>, int)"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.toStringArray(java.lang.Object[])"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.fillArray(java.lang.String, int)"], ["int[]", "org.hibernate.internal.util.collections.ArrayHelper.fillArray(int, int)"], ["org.hibernate.LockMode[]", "org.hibernate.internal.util.collections.ArrayHelper.fillArray(org.hibernate.LockMode, int)"], ["org.hibernate.LockOptions[]", "org.hibernate.internal.util.collections.ArrayHelper.fillArray(org.hibernate.LockOptions, int)"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.toStringArray(java.util.Collection)"], ["java.lang.String[][]", "org.hibernate.internal.util.collections.ArrayHelper.to2DStringArray(java.util.Collection)"], ["int[][]", "org.hibernate.internal.util.collections.ArrayHelper.to2DIntArray(java.util.Collection)"], ["org.hibernate.type.Type[]", "org.hibernate.internal.util.collections.ArrayHelper.toTypeArray(java.util.Collection)"], ["int[]", "org.hibernate.internal.util.collections.ArrayHelper.toIntArray(java.util.Collection)"], ["boolean[]", "org.hibernate.internal.util.collections.ArrayHelper.toBooleanArray(java.util.Collection)"], ["java.lang.Object[]", "org.hibernate.internal.util.collections.ArrayHelper.typecast(java.lang.Object[], java.lang.Object[])"], ["java.util.List", "org.hibernate.internal.util.collections.ArrayHelper.toList(java.lang.Object)"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.slice(java.lang.String[], int, int)"], ["java.lang.Object[]", "org.hibernate.internal.util.collections.ArrayHelper.slice(java.lang.Object[], int, int)"], ["java.util.List", "org.hibernate.internal.util.collections.ArrayHelper.toList(java.util.Iterator)"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.join(java.lang.String[], java.lang.String[])"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.join(java.lang.String[], java.lang.String[], boolean[])"], ["int[]", "org.hibernate.internal.util.collections.ArrayHelper.join(int[], int[])"], ["<T> T[]", "org.hibernate.internal.util.collections.ArrayHelper.join(T[], T...)"], ["java.lang.String", "org.hibernate.internal.util.collections.ArrayHelper.toString(java.lang.Object[])"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isAllNegative(int[])"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isAllTrue(boolean...)"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.countTrue(boolean...)"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isAllFalse(boolean...)"], ["<T> void", "org.hibernate.internal.util.collections.ArrayHelper.addAll(java.util.Collection<T>, T[])"], ["int[]", "org.hibernate.internal.util.collections.ArrayHelper.getBatchSizes(int)"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.hash(java.lang.Object[])"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.hash(char[])"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.hash(byte[])"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isEquals(java.lang.Object[], java.lang.Object[])"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isEquals(char[], char[])"], ["boolean", "org.hibernate.internal.util.collections.ArrayHelper.isEquals(byte[], byte[])"], ["java.io.Serializable[]", "org.hibernate.internal.util.collections.ArrayHelper.extractNonNull(java.io.Serializable[])"], ["int", "org.hibernate.internal.util.collections.ArrayHelper.countNonNull(java.io.Serializable[])"], ["java.lang.String[]", "org.hibernate.internal.util.collections.ArrayHelper.reverse(java.lang.String[])"], ["int[]", "org.hibernate.internal.util.collections.ArrayHelper.trim(int[], int)"], ["void", "org.hibernate.internal.util.collections.ArrayHelper.main(java.lang.String...)"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.hashCode()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.equals(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.inStack()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.inQueue()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.hit(java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry.isResident()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Values.size()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Values.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Values.contains(java.lang.Object)"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Values.clear()"], ["java.util.Map$Entry<K, V>", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntryIterator.next()"], ["java.lang.Object", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntryIterator.next()"], ["K", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeyIterator.next()"], ["K", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeyIterator.nextElement()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int, float, int, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType, java.util.EnumSet<org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option>)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int, float, int)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int, float)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(java.util.Map<? extends K, ? extends V>)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.isEmpty()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.size()"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.get(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.containsValue(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.contains(java.lang.Object)"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.put(K, V)"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.putIfAbsent(K, V)"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.putAll(java.util.Map<? extends K, ? extends V>)"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.remove(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.remove(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.replace(K, V, V)"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.replace(K, V)"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.clear()"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.purgeStaleEntries()"], ["java.util.Set<java.util.Map$Entry<K, V>>", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap.entrySet()"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$ValueIterator.next()"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$ValueIterator.nextElement()"], ["K", "org.hibernate.internal.util.collections.IdentityMap$IdentityMapEntry.getKey()"], ["V", "org.hibernate.internal.util.collections.IdentityMap$IdentityMapEntry.getValue()"], ["V", "org.hibernate.internal.util.collections.IdentityMap$IdentityMapEntry.setValue(V)"], ["org.hibernate.internal.util.collections.JoinedIterator", "org.hibernate.internal.util.collections.JoinedIterator(java.util.List<java.util.Iterator<T>>)"], ["org.hibernate.internal.util.collections.JoinedIterator", "org.hibernate.internal.util.collections.JoinedIterator(java.util.Iterator<T>...)"], ["boolean", "org.hibernate.internal.util.collections.JoinedIterator.hasNext()"], ["T", "org.hibernate.internal.util.collections.JoinedIterator.next()"], ["void", "org.hibernate.internal.util.collections.JoinedIterator.remove()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeySet.size()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeySet.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeySet.contains(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeySet.remove(java.lang.Object)"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$KeySet.clear()"], ["boolean", "org.hibernate.internal.util.collections.SingletonIterator.hasNext()"], ["T", "org.hibernate.internal.util.collections.SingletonIterator.next()"], ["void", "org.hibernate.internal.util.collections.SingletonIterator.remove()"], ["org.hibernate.internal.util.collections.SingletonIterator", "org.hibernate.internal.util.collections.SingletonIterator(T)"], ["org.hibernate.internal.util.collections.JoinedIterable$TypeSafeJoinedIterator", "org.hibernate.internal.util.collections.JoinedIterable$TypeSafeJoinedIterator(java.util.List<java.lang.Iterable<T>>)"], ["boolean", "org.hibernate.internal.util.collections.JoinedIterable$TypeSafeJoinedIterator.hasNext()"], ["T", "org.hibernate.internal.util.collections.JoinedIterable$TypeSafeJoinedIterator.next()"], ["void", "org.hibernate.internal.util.collections.JoinedIterable$TypeSafeJoinedIterator.remove()"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.iterator()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.contains(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.remove(java.lang.Object)"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.size()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.isEmpty()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EntrySet.clear()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SoftValueReference.keyHash()"], ["java.lang.Object", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SoftValueReference.keyRef()"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$WriteThroughEntry.setValue(V)"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeySet.size()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeySet.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeySet.contains(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeySet.remove(java.lang.Object)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$KeySet.clear()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, int, float)"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.execute()"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.onEntryMiss(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.onEntryHit(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.thresholdExpired()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.onEntryRemove(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.clear()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.strategy()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS.createNewEntry(K, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V)"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$WriteThroughEntry.setValue(V)"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry.hashCode()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry.equals(java.lang.Object)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option[]", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option.values()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option.valueOf(java.lang.String)"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Values.size()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Values.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Values.contains(java.lang.Object)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Values.clear()"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SoftKeyReference.keyHash()"], ["java.lang.Object", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SoftKeyReference.keyRef()"], ["<K, V> org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionPolicy<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction$2.make(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, float)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Recency[]", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Recency.values()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Recency", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Recency.valueOf(java.lang.String)"], ["<K, V> org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionPolicy<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction$1.make(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, float)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionListener<K, V>)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int, int)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.isEmpty()"], ["int", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.size()"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.get(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.containsValue(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.contains(java.lang.Object)"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.put(K, V)"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.putIfAbsent(K, V)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.putAll(java.util.Map<? extends K, ? extends V>)"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.remove(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.remove(java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.replace(K, V, V)"], ["V", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.replace(K, V)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.clear()"], ["java.util.Set<java.util.Map$Entry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap.entrySet()"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ValueIterator.next()"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ValueIterator.nextElement()"], ["org.hibernate.internal.util.collections.IdentitySet", "org.hibernate.internal.util.collections.IdentitySet()"], ["org.hibernate.internal.util.collections.IdentitySet", "org.hibernate.internal.util.collections.IdentitySet(int)"], ["int", "org.hibernate.internal.util.collections.IdentitySet.size()"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.contains(java.lang.Object)"], ["java.util.Iterator", "org.hibernate.internal.util.collections.IdentitySet.iterator()"], ["java.lang.Object[]", "org.hibernate.internal.util.collections.IdentitySet.toArray()"], ["java.lang.Object[]", "org.hibernate.internal.util.collections.IdentitySet.toArray(java.lang.Object[])"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.add(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.remove(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.addAll(java.util.Collection)"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.retainAll(java.util.Collection)"], ["boolean", "org.hibernate.internal.util.collections.IdentitySet.removeAll(java.util.Collection)"], ["void", "org.hibernate.internal.util.collections.IdentitySet.clear()"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.iterator()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.contains(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.remove(java.lang.Object)"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.size()"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.isEmpty()"], ["void", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$EntrySet.clear()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType[]", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType.values()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType.valueOf(java.lang.String)"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, float, int, float)"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.execute()"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.onEntryMiss(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.onEntryHit(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.thresholdExpired()"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.onEntryRemove(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.clear()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.strategy()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU.createNewEntry(K, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V)"], ["org.hibernate.internal.util.collections.StandardStack", "org.hibernate.internal.util.collections.StandardStack()"], ["org.hibernate.internal.util.collections.StandardStack", "org.hibernate.internal.util.collections.StandardStack(T)"], ["void", "org.hibernate.internal.util.collections.StandardStack.push(T)"], ["T", "org.hibernate.internal.util.collections.StandardStack.pop()"], ["T", "org.hibernate.internal.util.collections.StandardStack.getCurrent()"], ["T", "org.hibernate.internal.util.collections.StandardStack.getPrevious()"], ["int", "org.hibernate.internal.util.collections.StandardStack.depth()"], ["boolean", "org.hibernate.internal.util.collections.StandardStack.isEmpty()"], ["void", "org.hibernate.internal.util.collections.StandardStack.clear()"], ["void", "org.hibernate.internal.util.collections.StandardStack.visitCurrentFirst(java.util.function.Consumer<T>)"], ["<X> X", "org.hibernate.internal.util.collections.StandardStack.findCurrentFirst(java.util.function.Function<T, X>)"], ["boolean", "org.hibernate.internal.util.collections.IdentityMap$IdentityKey.equals(java.lang.Object)"], ["int", "org.hibernate.internal.util.collections.IdentityMap$IdentityKey.hashCode()"], ["java.lang.String", "org.hibernate.internal.util.collections.IdentityMap$IdentityKey.toString()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction[]", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction.values()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction.valueOf(java.lang.String)"], ["<K, V> org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionPolicy<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction$3.make(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, float)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.clear()"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.execute()"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.onEntryHit(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.onEntryMiss(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["void", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.onEntryRemove(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>)"], ["boolean", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.thresholdExpired()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.strategy()"], ["org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>", "org.hibernate.internal.util.collections.BoundedConcurrentHashMap$NullEvictionPolicy.createNewEntry(K, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V)"], ["boolean", "org.hibernate.internal.util.collections.IdentityMap$KeyIterator.hasNext()"], ["K", "org.hibernate.internal.util.collections.IdentityMap$KeyIterator.next()"], ["void", "org.hibernate.internal.util.collections.IdentityMap$KeyIterator.remove()"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry(K, V)"], ["org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry(java.util.Map$Entry<? extends K, ? extends V>)"], ["K", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.getKey()"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.getValue()"], ["V", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.setValue(V)"], ["boolean", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.equals(java.lang.Object)"], ["int", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.hashCode()"], ["java.lang.String", "org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$SimpleEntry.toString()"], ["<K, V> org.hibernate.internal.util.collections.IdentityMap<K, V>", "org.hibernate.internal.util.collections.IdentityMap.instantiateSequenced(int)"], ["<K, V> java.util.Map$Entry<K, V>[]", "org.hibernate.internal.util.collections.IdentityMap.concurrentEntries(java.util.Map<K, V>)"], ["<K, V> void", "org.hibernate.internal.util.collections.IdentityMap.onEachKey(java.util.Map<K, V>, java.util.function.Consumer<K>)"], ["void", "org.hibernate.internal.util.collections.IdentityMap.forEach(java.util.function.BiConsumer<? super K, ? super V>)"], ["int", "org.hibernate.internal.util.collections.IdentityMap.size()"], ["boolean", "org.hibernate.internal.util.collections.IdentityMap.isEmpty()"], ["boolean", "org.hibernate.internal.util.collections.IdentityMap.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.internal.util.collections.IdentityMap.containsValue(java.lang.Object)"], ["V", "org.hibernate.internal.util.collections.IdentityMap.get(java.lang.Object)"], ["V", "org.hibernate.internal.util.collections.IdentityMap.put(K, V)"], ["V", "org.hibernate.internal.util.collections.IdentityMap.remove(java.lang.Object)"], ["void", "org.hibernate.internal.util.collections.IdentityMap.putAll(java.util.Map<? extends K, ? extends V>)"], ["void", "org.hibernate.internal.util.collections.IdentityMap.clear()"], ["java.util.Set<java.util.Map$Entry<K, V>>", "org.hibernate.internal.util.collections.IdentityMap.entrySet()"], ["java.util.Map$Entry[]", "org.hibernate.internal.util.collections.IdentityMap.entryArray()"], ["java.lang.String", "org.hibernate.internal.util.collections.IdentityMap.toString()"], ["org.hibernate.internal.util.io.CharSequenceReader", "org.hibernate.internal.util.io.CharSequenceReader(java.lang.CharSequence)"], ["boolean", "org.hibernate.internal.util.io.CharSequenceReader.markSupported()"], ["void", "org.hibernate.internal.util.io.CharSequenceReader.mark(int)"], ["int", "org.hibernate.internal.util.io.CharSequenceReader.read()"], ["int", "org.hibernate.internal.util.io.CharSequenceReader.read(char[], int, int)"], ["void", "org.hibernate.internal.util.io.CharSequenceReader.reset()"], ["long", "org.hibernate.internal.util.io.CharSequenceReader.skip(long)"], ["void", "org.hibernate.internal.util.io.CharSequenceReader.close()"], ["long", "org.hibernate.internal.util.io.StreamCopier.copy(java.io.InputStream, java.io.OutputStream)"], ["java.net.URL", "org.hibernate.internal.util.ConfigHelper.locateConfig(java.lang.String)"], ["java.net.URL", "org.hibernate.internal.util.ConfigHelper.findAsResource(java.lang.String)"], ["java.io.InputStream", "org.hibernate.internal.util.ConfigHelper.getConfigStream(java.lang.String)"], ["java.io.InputStream", "org.hibernate.internal.util.ConfigHelper.getResourceAsStream(java.lang.String)"], ["java.io.InputStream", "org.hibernate.internal.util.ConfigHelper.getUserResourceAsStream(java.lang.String)"], ["java.util.Properties", "org.hibernate.internal.util.jndi.JndiHelper.extractJndiProperties(java.util.Map)"], ["javax.naming.InitialContext", "org.hibernate.internal.util.jndi.JndiHelper.getInitialContext(java.util.Properties)"], ["void", "org.hibernate.internal.util.jndi.JndiHelper.bind(javax.naming.Context, java.lang.String, java.lang.Object)"], ["org.hibernate.internal.util.beans.BeanInfoHelper", "org.hibernate.internal.util.beans.BeanInfoHelper(java.lang.Class)"], ["org.hibernate.internal.util.beans.BeanInfoHelper", "org.hibernate.internal.util.beans.BeanInfoHelper(java.lang.Class, java.lang.Class)"], ["void", "org.hibernate.internal.util.beans.BeanInfoHelper.applyToBeanInfo(java.lang.Object, org.hibernate.internal.util.beans.BeanInfoHelper$BeanInfoDelegate)"], ["void", "org.hibernate.internal.util.beans.BeanInfoHelper.visitBeanInfo(java.lang.Class, org.hibernate.internal.util.beans.BeanInfoHelper$BeanInfoDelegate)"], ["void", "org.hibernate.internal.util.beans.BeanInfoHelper.visitBeanInfo(java.lang.Class, java.lang.Class, org.hibernate.internal.util.beans.BeanInfoHelper$BeanInfoDelegate)"], ["<T> T", "org.hibernate.internal.util.beans.BeanInfoHelper.visitBeanInfo(java.lang.Class, org.hibernate.internal.util.beans.BeanInfoHelper$ReturningBeanInfoDelegate<T>)"], ["<T> T", "org.hibernate.internal.util.beans.BeanInfoHelper.visitBeanInfo(java.lang.Class, java.lang.Class, org.hibernate.internal.util.beans.BeanInfoHelper$ReturningBeanInfoDelegate<T>)"], ["org.hibernate.internal.util.beans.BeanIntrospectionException", "org.hibernate.internal.util.beans.BeanIntrospectionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.internal.util.beans.BeanIntrospectionException", "org.hibernate.internal.util.beans.BeanIntrospectionException(java.lang.String)"], ["int", "org.hibernate.internal.util.JdbcExceptionHelper.extractErrorCode(java.sql.SQLException)"], ["java.lang.String", "org.hibernate.internal.util.JdbcExceptionHelper.extractSqlState(java.sql.SQLException)"], ["java.lang.String", "org.hibernate.internal.util.JdbcExceptionHelper.extractSqlStateClassCode(java.sql.SQLException)"], ["java.lang.String", "org.hibernate.internal.util.JdbcExceptionHelper.determineSqlStateClassCode(java.lang.String)"], ["org.hibernate.internal.util.compare.CalendarComparator", "org.hibernate.internal.util.compare.CalendarComparator()"], ["int", "org.hibernate.internal.util.compare.CalendarComparator.compare(java.util.Calendar, java.util.Calendar)"], ["int", "org.hibernate.internal.util.compare.CalendarComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.internal.util.compare.ComparableComparator", "org.hibernate.internal.util.compare.ComparableComparator()"], ["int", "org.hibernate.internal.util.compare.ComparableComparator.compare(java.lang.Comparable, java.lang.Comparable)"], ["int", "org.hibernate.internal.util.compare.ComparableComparator.compare(java.lang.Object, java.lang.Object)"], ["int", "org.hibernate.internal.util.compare.RowVersionComparator.compare(byte[], byte[])"], ["int", "org.hibernate.internal.util.compare.RowVersionComparator.compare(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.internal.util.Cloneable$1.run()"], ["java.lang.Object", "org.hibernate.internal.util.Cloneable$2.run()"], ["org.hibernate.internal.ConnectionObserverStatsBridge", "org.hibernate.internal.FastSessionServices.getDefaultJdbcObserver()"], ["org.hibernate.internal.ExceptionMapperStandardImpl", "org.hibernate.internal.ExceptionMapperStandardImpl()"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionMapperStandardImpl.mapStatusCheckFailure(java.lang.String, javax.transaction.SystemException, org.hibernate.engine.spi.SessionImplementor)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionMapperStandardImpl.mapManagedFlushFailure(java.lang.String, java.lang.RuntimeException, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.internal.CriteriaImpl", "org.hibernate.internal.CriteriaImpl(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.internal.CriteriaImpl", "org.hibernate.internal.CriteriaImpl(java.lang.String, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl.toString()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.internal.CriteriaImpl.getSession()"], ["void", "org.hibernate.internal.CriteriaImpl.setSession(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl.getEntityOrClassName()"], ["java.util.Map<java.lang.String, org.hibernate.LockMode>", "org.hibernate.internal.CriteriaImpl.getLockModes()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.getProjectionCriteria()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.add(org.hibernate.Criteria, org.hibernate.criterion.Criterion)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl.getAlias()"], ["org.hibernate.criterion.Projection", "org.hibernate.internal.CriteriaImpl.getProjection()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setProjection(org.hibernate.criterion.Projection)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.add(org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.addOrder(org.hibernate.criterion.Order)"], ["org.hibernate.FetchMode", "org.hibernate.internal.CriteriaImpl.getFetchMode(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setFetchMode(java.lang.String, org.hibernate.FetchMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createAlias(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createAlias(java.lang.String, java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createAlias(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.createCriteria(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.internal.CriteriaImpl.getResultTransformer()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["java.lang.Integer", "org.hibernate.internal.CriteriaImpl.getMaxResults()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setMaxResults(int)"], ["java.lang.Integer", "org.hibernate.internal.CriteriaImpl.getFirstResult()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setFirstResult(int)"], ["java.lang.Integer", "org.hibernate.internal.CriteriaImpl.getFetchSize()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setFetchSize(int)"], ["java.lang.Integer", "org.hibernate.internal.CriteriaImpl.getTimeout()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setTimeout(int)"], ["boolean", "org.hibernate.internal.CriteriaImpl.isReadOnlyInitialized()"], ["boolean", "org.hibernate.internal.CriteriaImpl.isReadOnly()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setReadOnly(boolean)"], ["boolean", "org.hibernate.internal.CriteriaImpl.getCacheable()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setCacheable(boolean)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl.getCacheRegion()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setCacheRegion(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl.getComment()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setComment(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.addQueryHint(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl.setCacheMode(org.hibernate.CacheMode)"], ["java.util.List", "org.hibernate.internal.CriteriaImpl.list()"], ["org.hibernate.ScrollableResults", "org.hibernate.internal.CriteriaImpl.scroll()"], ["org.hibernate.ScrollableResults", "org.hibernate.internal.CriteriaImpl.scroll(org.hibernate.ScrollMode)"], ["java.lang.Object", "org.hibernate.internal.CriteriaImpl.uniqueResult()"], ["boolean", "org.hibernate.internal.CriteriaImpl.isLookupByNaturalKey()"], ["org.hibernate.internal.FilterConfiguration", "org.hibernate.internal.FilterConfiguration(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, org.hibernate.mapping.PersistentClass)"], ["java.lang.String", "org.hibernate.internal.FilterConfiguration.getName()"], ["java.lang.String", "org.hibernate.internal.FilterConfiguration.getCondition()"], ["boolean", "org.hibernate.internal.FilterConfiguration.useAutoAliasInjection()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.hibernate.internal.FilterConfiguration.getAliasTableMap(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.internal.SessionImpl$3.afterBegin()"], ["void", "org.hibernate.internal.SessionImpl$3.beforeCompletion()"], ["void", "org.hibernate.internal.SessionImpl$3.afterCompletion(boolean, boolean)"], ["org.hibernate.internal.IteratorImpl", "org.hibernate.internal.IteratorImpl(java.sql.ResultSet, java.sql.PreparedStatement, org.hibernate.event.spi.EventSource, boolean, org.hibernate.type.Type[], java.lang.String[][], org.hibernate.hql.internal.HolderInstantiator)"], ["void", "org.hibernate.internal.IteratorImpl.close()"], ["boolean", "org.hibernate.internal.IteratorImpl.hasNext()"], ["java.lang.Object", "org.hibernate.internal.IteratorImpl.next()"], ["void", "org.hibernate.internal.IteratorImpl.remove()"], ["org.hibernate.internal.CoreMessageLogger", "org.hibernate.internal.CoreLogging.messageLogger(java.lang.Class)"], ["org.hibernate.internal.CoreMessageLogger", "org.hibernate.internal.CoreLogging.messageLogger(java.lang.String)"], ["org.jboss.logging.Logger", "org.hibernate.internal.CoreLogging.logger(java.lang.Class)"], ["org.jboss.logging.Logger", "org.hibernate.internal.CoreLogging.logger(java.lang.String)"], ["org.hibernate.internal.SessionOwnerBehavior[]", "org.hibernate.internal.SessionOwnerBehavior.values()"], ["org.hibernate.internal.SessionOwnerBehavior", "org.hibernate.internal.SessionOwnerBehavior.valueOf(java.lang.String)"], ["void", "org.hibernate.internal.SessionFactoryImpl$1IntegratorObserver.sessionFactoryCreated(org.hibernate.SessionFactory)"], ["void", "org.hibernate.internal.SessionFactoryImpl$1IntegratorObserver.sessionFactoryClosed(org.hibernate.SessionFactory)"], ["org.hibernate.internal.SessionFactoryImpl", "org.hibernate.internal.SessionFactoryImpl(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.openSession()"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.openTemporarySession()"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.getCurrentSession()"], ["org.hibernate.engine.spi.SessionBuilderImplementor", "org.hibernate.internal.SessionFactoryImpl.withOptions()"], ["org.hibernate.StatelessSessionBuilder", "org.hibernate.internal.SessionFactoryImpl.withStatelessOptions()"], ["org.hibernate.StatelessSession", "org.hibernate.internal.SessionFactoryImpl.openStatelessSession()"], ["org.hibernate.StatelessSession", "org.hibernate.internal.SessionFactoryImpl.openStatelessSession(java.sql.Connection)"], ["void", "org.hibernate.internal.SessionFactoryImpl.addObserver(org.hibernate.SessionFactoryObserver)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.internal.SessionFactoryImpl.getProperties()"], ["java.lang.String", "org.hibernate.internal.SessionFactoryImpl.getUuid()"], ["java.lang.String", "org.hibernate.internal.SessionFactoryImpl.getName()"], ["org.hibernate.engine.jdbc.spi.JdbcServices", "org.hibernate.internal.SessionFactoryImpl.getJdbcServices()"], ["org.hibernate.id.factory.IdentifierGeneratorFactory", "org.hibernate.internal.SessionFactoryImpl.getIdentifierGeneratorFactory()"], ["org.hibernate.type.TypeResolver", "org.hibernate.internal.SessionFactoryImpl.getTypeResolver()"], ["org.hibernate.engine.query.spi.QueryPlanCache", "org.hibernate.internal.SessionFactoryImpl.getQueryPlanCache()"], ["org.hibernate.engine.spi.SessionFactoryImplementor$DeserializationResolver", "org.hibernate.internal.SessionFactoryImpl.getDeserializationResolver()"], ["org.hibernate.cfg.Settings", "org.hibernate.internal.SessionFactoryImpl.getSettings()"], ["<T> java.util.List<org.hibernate.graph.spi.RootGraphImplementor<? super T>>", "org.hibernate.internal.SessionFactoryImpl.findEntityGraphsByJavaType(java.lang.Class<T>)"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.createEntityManager()"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(java.util.Map)"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(javax.persistence.SynchronizationType)"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(javax.persistence.SynchronizationType, java.util.Map)"], ["javax.persistence.criteria.CriteriaBuilder", "org.hibernate.internal.SessionFactoryImpl.getCriteriaBuilder()"], ["org.hibernate.metamodel.spi.MetamodelImplementor", "org.hibernate.internal.SessionFactoryImpl.getMetamodel()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl.isOpen()"], ["org.hibernate.graph.spi.RootGraphImplementor", "org.hibernate.internal.SessionFactoryImpl.findEntityGraphByName(java.lang.String)"], ["org.hibernate.boot.spi.SessionFactoryOptions", "org.hibernate.internal.SessionFactoryImpl.getSessionFactoryOptions()"], ["org.hibernate.Interceptor", "org.hibernate.internal.SessionFactoryImpl.getInterceptor()"], ["javax.naming.Reference", "org.hibernate.internal.SessionFactoryImpl.getReference()"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.internal.SessionFactoryImpl.getNamedQueryRepository()"], ["org.hibernate.type.Type", "org.hibernate.internal.SessionFactoryImpl.getIdentifierType(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.SessionFactoryImpl.getIdentifierPropertyName(java.lang.String)"], ["org.hibernate.type.Type[]", "org.hibernate.internal.SessionFactoryImpl.getReturnTypes(java.lang.String)"], ["java.lang.String[]", "org.hibernate.internal.SessionFactoryImpl.getReturnAliases(java.lang.String)"], ["org.hibernate.metadata.ClassMetadata", "org.hibernate.internal.SessionFactoryImpl.getClassMetadata(java.lang.Class)"], ["org.hibernate.metadata.CollectionMetadata", "org.hibernate.internal.SessionFactoryImpl.getCollectionMetadata(java.lang.String)"], ["org.hibernate.metadata.ClassMetadata", "org.hibernate.internal.SessionFactoryImpl.getClassMetadata(java.lang.String)"], ["java.util.Map<java.lang.String, org.hibernate.metadata.ClassMetadata>", "org.hibernate.internal.SessionFactoryImpl.getAllClassMetadata()"], ["java.util.Map", "org.hibernate.internal.SessionFactoryImpl.getAllCollectionMetadata()"], ["org.hibernate.type.Type", "org.hibernate.internal.SessionFactoryImpl.getReferencedPropertyType(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.SessionFactoryImpl.close()"], ["org.hibernate.cache.spi.CacheImplementor", "org.hibernate.internal.SessionFactoryImpl.getCache()"], ["javax.persistence.PersistenceUnitUtil", "org.hibernate.internal.SessionFactoryImpl.getPersistenceUnitUtil()"], ["void", "org.hibernate.internal.SessionFactoryImpl.addNamedQuery(java.lang.String, javax.persistence.Query)"], ["<T> T", "org.hibernate.internal.SessionFactoryImpl.unwrap(java.lang.Class<T>)"], ["<T> void", "org.hibernate.internal.SessionFactoryImpl.addNamedEntityGraph(java.lang.String, javax.persistence.EntityGraph<T>)"], ["boolean", "org.hibernate.internal.SessionFactoryImpl.isClosed()"], ["org.hibernate.stat.spi.StatisticsImplementor", "org.hibernate.internal.SessionFactoryImpl.getStatistics()"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.internal.SessionFactoryImpl.getFilterDefinition(java.lang.String)"], ["boolean", "org.hibernate.internal.SessionFactoryImpl.containsFetchProfileDefinition(java.lang.String)"], ["java.util.Set", "org.hibernate.internal.SessionFactoryImpl.getDefinedFilterNames()"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.internal.SessionFactoryImpl.getIdentifierGenerator(java.lang.String)"], ["org.hibernate.service.spi.ServiceRegistryImplementor", "org.hibernate.internal.SessionFactoryImpl.getServiceRegistry()"], ["org.hibernate.proxy.EntityNotFoundDelegate", "org.hibernate.internal.SessionFactoryImpl.getEntityNotFoundDelegate()"], ["org.hibernate.dialect.function.SQLFunctionRegistry", "org.hibernate.internal.SessionFactoryImpl.getSqlFunctionRegistry()"], ["org.hibernate.engine.profile.FetchProfile", "org.hibernate.internal.SessionFactoryImpl.getFetchProfile(java.lang.String)"], ["org.hibernate.TypeHelper", "org.hibernate.internal.SessionFactoryImpl.getTypeHelper()"], ["org.hibernate.type.Type", "org.hibernate.internal.SessionFactoryImpl.resolveParameterBindType(java.lang.Object)"], ["org.hibernate.type.Type", "org.hibernate.internal.SessionFactoryImpl.resolveParameterBindType(java.lang.Class)"], ["org.hibernate.Interceptor", "org.hibernate.internal.SessionFactoryImpl.configuredInterceptor(org.hibernate.Interceptor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.CustomEntityDirtinessStrategy", "org.hibernate.internal.SessionFactoryImpl.getCustomEntityDirtinessStrategy()"], ["org.hibernate.context.spi.CurrentTenantIdentifierResolver", "org.hibernate.internal.SessionFactoryImpl.getCurrentTenantIdentifierResolver()"], ["org.hibernate.Cache", "org.hibernate.internal.SessionFactoryImpl.getCache()"], ["org.hibernate.stat.Statistics", "org.hibernate.internal.SessionFactoryImpl.getStatistics()"], ["org.hibernate.SessionBuilder", "org.hibernate.internal.SessionFactoryImpl.withOptions()"], ["javax.persistence.Cache", "org.hibernate.internal.SessionFactoryImpl.getCache()"], ["javax.persistence.metamodel.Metamodel", "org.hibernate.internal.SessionFactoryImpl.getMetamodel()"], ["javax.persistence.EntityManager", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(javax.persistence.SynchronizationType, java.util.Map)"], ["javax.persistence.EntityManager", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(javax.persistence.SynchronizationType)"], ["javax.persistence.EntityManager", "org.hibernate.internal.SessionFactoryImpl.createEntityManager(java.util.Map)"], ["javax.persistence.EntityManager", "org.hibernate.internal.SessionFactoryImpl.createEntityManager()"], ["org.hibernate.Metamodel", "org.hibernate.internal.SessionFactoryImpl.getMetamodel()"], ["void", "org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(java.lang.String, java.lang.String, boolean, org.hibernate.SessionFactory, org.hibernate.engine.jndi.spi.JndiService)"], ["void", "org.hibernate.internal.SessionFactoryRegistry.removeSessionFactory(java.lang.String, java.lang.String, boolean, org.hibernate.engine.jndi.spi.JndiService)"], ["org.hibernate.SessionFactory", "org.hibernate.internal.SessionFactoryRegistry.getNamedSessionFactory(java.lang.String)"], ["org.hibernate.SessionFactory", "org.hibernate.internal.SessionFactoryRegistry.getSessionFactory(java.lang.String)"], ["org.hibernate.SessionFactory", "org.hibernate.internal.SessionFactoryRegistry.findSessionFactory(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.internal.SessionFactoryRegistry.hasRegistrations()"], ["void", "org.hibernate.internal.SessionFactoryRegistry.clearRegistrations()"], ["org.hibernate.internal.ExceptionConverterImpl", "org.hibernate.internal.ExceptionConverterImpl(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionConverterImpl.convertCommitException(java.lang.RuntimeException)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionConverterImpl.convert(org.hibernate.HibernateException, org.hibernate.LockOptions)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionConverterImpl.convert(org.hibernate.HibernateException)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionConverterImpl.convert(java.lang.RuntimeException)"], ["java.lang.RuntimeException", "org.hibernate.internal.ExceptionConverterImpl.convert(java.lang.RuntimeException, org.hibernate.LockOptions)"], ["org.hibernate.JDBCException", "org.hibernate.internal.ExceptionConverterImpl.convert(java.sql.SQLException, java.lang.String)"], ["org.hibernate.criterion.Criterion", "org.hibernate.internal.CriteriaImpl$CriterionEntry.getCriterion()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$CriterionEntry.getCriteria()"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl$CriterionEntry.toString()"], ["org.hibernate.internal.JdbcObserverImpl", "org.hibernate.internal.JdbcObserverImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.internal.FastSessionServices)"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcConnectionAcquisitionStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcConnectionAcquisitionEnd(java.sql.Connection)"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcConnectionReleaseStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcConnectionReleaseEnd()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcPrepareStatementStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcPrepareStatementEnd()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcExecuteStatementStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcExecuteStatementEnd()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcExecuteBatchStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcExecuteBatchEnd()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcReleaseRegistryResourcesStart()"], ["void", "org.hibernate.internal.JdbcObserverImpl.jdbcReleaseRegistryResourcesEnd()"], ["org.hibernate.criterion.Order", "org.hibernate.internal.CriteriaImpl$OrderEntry.getOrder()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$OrderEntry.getCriteria()"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl$OrderEntry.toString()"], ["java.lang.String", "org.hibernate.internal.StatelessSessionImpl$1.getInternalFetchProfile()"], ["void", "org.hibernate.internal.StatelessSessionImpl$1.setInternalFetchProfile(java.lang.String)"], ["org.hibernate.internal.EntityManagerMessageLogger", "org.hibernate.internal.HEMLogging.messageLogger(java.lang.Class)"], ["org.hibernate.internal.EntityManagerMessageLogger", "org.hibernate.internal.HEMLogging.messageLogger(java.lang.String)"], ["org.jboss.logging.Logger", "org.hibernate.internal.HEMLogging.logger(java.lang.Class)"], ["org.jboss.logging.Logger", "org.hibernate.internal.HEMLogging.logger(java.lang.String)"], ["org.hibernate.internal.SessionImpl", "org.hibernate.internal.SessionImpl(org.hibernate.internal.SessionFactoryImpl, org.hibernate.internal.SessionCreationOptions)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl.sessionWithOptions()"], ["void", "org.hibernate.internal.SessionImpl.clear()"], ["void", "org.hibernate.internal.SessionImpl.close()"], ["void", "org.hibernate.internal.SessionImpl.closeWithoutOpenChecks()"], ["boolean", "org.hibernate.internal.SessionImpl.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.internal.SessionImpl.isQueryParametersValidationEnabled()"], ["boolean", "org.hibernate.internal.SessionImpl.isOpen()"], ["boolean", "org.hibernate.internal.SessionImpl.shouldAutoClose()"], ["java.sql.Connection", "org.hibernate.internal.SessionImpl.connection()"], ["java.sql.Connection", "org.hibernate.internal.SessionImpl.disconnect()"], ["void", "org.hibernate.internal.SessionImpl.reconnect(java.sql.Connection)"], ["void", "org.hibernate.internal.SessionImpl.setAutoClear(boolean)"], ["void", "org.hibernate.internal.SessionImpl.afterOperation(boolean)"], ["void", "org.hibernate.internal.SessionImpl.addEventListeners(org.hibernate.SessionEventListener...)"], ["org.hibernate.LockMode", "org.hibernate.internal.SessionImpl.getCurrentLockMode(java.lang.Object)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.getEntityUsingInterceptor(org.hibernate.engine.spi.EntityKey)"], ["void", "org.hibernate.internal.SessionImpl.saveOrUpdate(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.saveOrUpdate(java.lang.String, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.internal.SessionImpl.save(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.internal.SessionImpl.save(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.update(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.update(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.lock(java.lang.String, java.lang.Object, org.hibernate.LockMode)"], ["org.hibernate.Session$LockRequest", "org.hibernate.internal.SessionImpl.buildLockRequest(org.hibernate.LockOptions)"], ["void", "org.hibernate.internal.SessionImpl.lock(java.lang.Object, org.hibernate.LockMode)"], ["void", "org.hibernate.internal.SessionImpl.persist(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.persist(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.persist(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.internal.SessionImpl.persistOnFlush(java.lang.String, java.lang.Object, java.util.Map)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.merge(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.merge(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.merge(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.internal.SessionImpl.delete(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.delete(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.delete(java.lang.String, java.lang.Object, boolean, java.util.Set)"], ["void", "org.hibernate.internal.SessionImpl.removeOrphanBeforeUpdates(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.load(java.lang.Object, java.io.Serializable)"], ["<T> T", "org.hibernate.internal.SessionImpl.load(java.lang.Class<T>, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.load(java.lang.String, java.io.Serializable)"], ["<T> T", "org.hibernate.internal.SessionImpl.get(java.lang.Class<T>, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.get(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.immediateLoad(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.internalLoad(java.lang.String, java.io.Serializable, boolean, boolean)"], ["<T> T", "org.hibernate.internal.SessionImpl.load(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockMode)"], ["<T> T", "org.hibernate.internal.SessionImpl.load(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.load(java.lang.String, java.io.Serializable, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.load(java.lang.String, java.io.Serializable, org.hibernate.LockOptions)"], ["<T> T", "org.hibernate.internal.SessionImpl.get(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockMode)"], ["<T> T", "org.hibernate.internal.SessionImpl.get(java.lang.Class<T>, java.io.Serializable, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.get(java.lang.String, java.io.Serializable, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.get(java.lang.String, java.io.Serializable, org.hibernate.LockOptions)"], ["org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl", "org.hibernate.internal.SessionImpl.byId(java.lang.String)"], ["<T> org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl<T>", "org.hibernate.internal.SessionImpl.byId(java.lang.Class<T>)"], ["<T> org.hibernate.MultiIdentifierLoadAccess<T>", "org.hibernate.internal.SessionImpl.byMultipleIds(java.lang.Class<T>)"], ["org.hibernate.MultiIdentifierLoadAccess", "org.hibernate.internal.SessionImpl.byMultipleIds(java.lang.String)"], ["org.hibernate.NaturalIdLoadAccess", "org.hibernate.internal.SessionImpl.byNaturalId(java.lang.String)"], ["<T> org.hibernate.NaturalIdLoadAccess<T>", "org.hibernate.internal.SessionImpl.byNaturalId(java.lang.Class<T>)"], ["org.hibernate.SimpleNaturalIdLoadAccess", "org.hibernate.internal.SessionImpl.bySimpleNaturalId(java.lang.String)"], ["<T> org.hibernate.SimpleNaturalIdLoadAccess<T>", "org.hibernate.internal.SessionImpl.bySimpleNaturalId(java.lang.Class<T>)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object, org.hibernate.LockMode)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object, org.hibernate.LockOptions)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.String, java.lang.Object, org.hibernate.LockOptions)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.String, java.lang.Object, java.util.Map)"], ["void", "org.hibernate.internal.SessionImpl.replicate(java.lang.Object, org.hibernate.ReplicationMode)"], ["void", "org.hibernate.internal.SessionImpl.replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)"], ["void", "org.hibernate.internal.SessionImpl.evict(java.lang.Object)"], ["boolean", "org.hibernate.internal.SessionImpl.isDirty()"], ["void", "org.hibernate.internal.SessionImpl.flush()"], ["void", "org.hibernate.internal.SessionImpl.setFlushMode(javax.persistence.FlushModeType)"], ["void", "org.hibernate.internal.SessionImpl.forceFlush(org.hibernate.engine.spi.EntityEntry)"], ["java.util.List", "org.hibernate.internal.SessionImpl.list(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["int", "org.hibernate.internal.SessionImpl.executeUpdate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["int", "org.hibernate.internal.SessionImpl.executeNativeUpdate(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.internal.SessionImpl.iterate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.SessionImpl.scroll(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.Query", "org.hibernate.internal.SessionImpl.createFilter(java.lang.Object, java.lang.String)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.instantiate(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.instantiate(org.hibernate.persister.entity.EntityPersister, java.io.Serializable)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.internal.SessionImpl.getEntityPersister(java.lang.String, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.internal.SessionImpl.getIdentifier(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.internal.SessionImpl.getContextEntityIdentifier(java.lang.Object)"], ["java.util.List", "org.hibernate.internal.SessionImpl.listFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.internal.SessionImpl.iterateFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.Criteria", "org.hibernate.internal.SessionImpl.createCriteria(java.lang.Class, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.SessionImpl.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.SessionImpl.createCriteria(java.lang.Class)"], ["org.hibernate.Criteria", "org.hibernate.internal.SessionImpl.createCriteria(java.lang.String)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.SessionImpl.scroll(org.hibernate.Criteria, org.hibernate.ScrollMode)"], ["java.util.List", "org.hibernate.internal.SessionImpl.list(org.hibernate.Criteria)"], ["boolean", "org.hibernate.internal.SessionImpl.contains(java.lang.Object)"], ["boolean", "org.hibernate.internal.SessionImpl.contains(java.lang.String, java.lang.Object)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.SessionImpl.createStoredProcedureCall(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.SessionImpl.createStoredProcedureCall(java.lang.String, java.lang.String...)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.SessionImpl.createStoredProcedureCall(java.lang.String, java.lang.Class...)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.SessionImpl.scrollCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["java.util.List", "org.hibernate.internal.SessionImpl.listCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.internal.SessionImpl.getSessionFactory()"], ["void", "org.hibernate.internal.SessionImpl.initializeCollection(org.hibernate.collection.spi.PersistentCollection, boolean)"], ["java.lang.String", "org.hibernate.internal.SessionImpl.bestGuessEntityName(java.lang.Object)"], ["java.lang.String", "org.hibernate.internal.SessionImpl.getEntityName(java.lang.Object)"], ["java.lang.String", "org.hibernate.internal.SessionImpl.guessEntityName(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.cancelQuery()"], ["int", "org.hibernate.internal.SessionImpl.getDontFlushFromFind()"], ["java.lang.String", "org.hibernate.internal.SessionImpl.toString()"], ["org.hibernate.engine.spi.ActionQueue", "org.hibernate.internal.SessionImpl.getActionQueue()"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.internal.SessionImpl.getPersistenceContext()"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.internal.SessionImpl.getPersistenceContextInternal()"], ["org.hibernate.stat.SessionStatistics", "org.hibernate.internal.SessionImpl.getStatistics()"], ["boolean", "org.hibernate.internal.SessionImpl.isEventSource()"], ["boolean", "org.hibernate.internal.SessionImpl.isDefaultReadOnly()"], ["void", "org.hibernate.internal.SessionImpl.setDefaultReadOnly(boolean)"], ["boolean", "org.hibernate.internal.SessionImpl.isReadOnly(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.setReadOnly(java.lang.Object, boolean)"], ["void", "org.hibernate.internal.SessionImpl.doWork(org.hibernate.jdbc.Work)"], ["<T> T", "org.hibernate.internal.SessionImpl.doReturningWork(org.hibernate.jdbc.ReturningWork<T>)"], ["void", "org.hibernate.internal.SessionImpl.afterScrollOperation()"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.internal.SessionImpl.getLoadQueryInfluencers()"], ["org.hibernate.Filter", "org.hibernate.internal.SessionImpl.getEnabledFilter(java.lang.String)"], ["org.hibernate.Filter", "org.hibernate.internal.SessionImpl.enableFilter(java.lang.String)"], ["void", "org.hibernate.internal.SessionImpl.disableFilter(java.lang.String)"], ["boolean", "org.hibernate.internal.SessionImpl.isFetchProfileEnabled(java.lang.String)"], ["void", "org.hibernate.internal.SessionImpl.enableFetchProfile(java.lang.String)"], ["void", "org.hibernate.internal.SessionImpl.disableFetchProfile(java.lang.String)"], ["org.hibernate.TypeHelper", "org.hibernate.internal.SessionImpl.getTypeHelper()"], ["org.hibernate.LobHelper", "org.hibernate.internal.SessionImpl.getLobHelper()"], ["void", "org.hibernate.internal.SessionImpl.beforeTransactionCompletion()"], ["void", "org.hibernate.internal.SessionImpl.afterTransactionCompletion(boolean, boolean)"], ["void", "org.hibernate.internal.SessionImpl.startTransactionBoundary()"], ["void", "org.hibernate.internal.SessionImpl.afterTransactionBegin()"], ["void", "org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion()"], ["boolean", "org.hibernate.internal.SessionImpl.isFlushBeforeCompletionEnabled()"], ["org.hibernate.engine.spi.SessionImplementor", "org.hibernate.internal.SessionImpl.getSession()"], ["org.hibernate.LockOptions", "org.hibernate.internal.SessionImpl.getLockRequest(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.internal.SessionImpl.remove(java.lang.Object)"], ["<T> T", "org.hibernate.internal.SessionImpl.find(java.lang.Class<T>, java.lang.Object)"], ["<T> T", "org.hibernate.internal.SessionImpl.find(java.lang.Class<T>, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>)"], ["<T> T", "org.hibernate.internal.SessionImpl.find(java.lang.Class<T>, java.lang.Object, javax.persistence.LockModeType)"], ["<T> T", "org.hibernate.internal.SessionImpl.find(java.lang.Class<T>, java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["<T> T", "org.hibernate.internal.SessionImpl.getReference(java.lang.Class<T>, java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.lock(java.lang.Object, javax.persistence.LockModeType)"], ["void", "org.hibernate.internal.SessionImpl.lock(java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object, javax.persistence.LockModeType)"], ["void", "org.hibernate.internal.SessionImpl.refresh(java.lang.Object, javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["void", "org.hibernate.internal.SessionImpl.detach(java.lang.Object)"], ["javax.persistence.LockModeType", "org.hibernate.internal.SessionImpl.getLockMode(java.lang.Object)"], ["void", "org.hibernate.internal.SessionImpl.setProperty(java.lang.String, java.lang.Object)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.internal.SessionImpl.getProperties()"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.internal.SessionImpl.createNamedStoredProcedureQuery(java.lang.String)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.internal.SessionImpl.createStoredProcedureQuery(java.lang.String)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.internal.SessionImpl.createStoredProcedureQuery(java.lang.String, java.lang.Class...)"], ["javax.persistence.StoredProcedureQuery", "org.hibernate.internal.SessionImpl.createStoredProcedureQuery(java.lang.String, java.lang.String...)"], ["void", "org.hibernate.internal.SessionImpl.joinTransaction()"], ["boolean", "org.hibernate.internal.SessionImpl.isJoinedToTransaction()"], ["<T> T", "org.hibernate.internal.SessionImpl.unwrap(java.lang.Class<T>)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl.getDelegate()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.internal.SessionImpl.getEntityManagerFactory()"], ["javax.persistence.criteria.CriteriaBuilder", "org.hibernate.internal.SessionImpl.getCriteriaBuilder()"], ["org.hibernate.metamodel.spi.MetamodelImplementor", "org.hibernate.internal.SessionImpl.getMetamodel()"], ["<T> org.hibernate.graph.spi.RootGraphImplementor<T>", "org.hibernate.internal.SessionImpl.createEntityGraph(java.lang.Class<T>)"], ["java.util.List", "org.hibernate.internal.SessionImpl.getEntityGraphs(java.lang.Class)"], ["org.hibernate.graph.RootGraph", "org.hibernate.internal.SessionImpl.getEntityGraph(java.lang.String)"], ["org.hibernate.graph.RootGraph", "org.hibernate.internal.SessionImpl.createEntityGraph(java.lang.String)"], ["org.hibernate.graph.RootGraph", "org.hibernate.internal.SessionImpl.createEntityGraph(java.lang.Class)"], ["org.hibernate.IdentifierLoadAccess", "org.hibernate.internal.SessionImpl.byId(java.lang.Class)"], ["org.hibernate.IdentifierLoadAccess", "org.hibernate.internal.SessionImpl.byId(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.internal.SessionImpl.createFilter(java.lang.Object, java.lang.String)"], ["org.hibernate.SessionFactory", "org.hibernate.internal.SessionImpl.getSessionFactory()"], ["javax.persistence.EntityGraph", "org.hibernate.internal.SessionImpl.getEntityGraph(java.lang.String)"], ["javax.persistence.EntityGraph", "org.hibernate.internal.SessionImpl.createEntityGraph(java.lang.String)"], ["javax.persistence.EntityGraph", "org.hibernate.internal.SessionImpl.createEntityGraph(java.lang.Class)"], ["javax.persistence.metamodel.Metamodel", "org.hibernate.internal.SessionImpl.getMetamodel()"], ["javax.persistence.EntityManagerFactory", "org.hibernate.internal.SessionImpl.getEntityManagerFactory()"], ["org.hibernate.Session", "org.hibernate.internal.SessionImpl.getSession()"], ["java.lang.Void", "org.hibernate.internal.SessionImpl$1.accept(org.hibernate.jdbc.WorkExecutor<java.lang.Void>, java.sql.Connection)"], ["java.lang.Object", "org.hibernate.internal.SessionImpl$1.accept(org.hibernate.jdbc.WorkExecutor, java.sql.Connection)"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.AbstractSessionImpl.createSQLQuery(java.lang.String)"], ["javax.persistence.EntityTransaction", "org.hibernate.internal.AbstractSessionImpl.getTransaction()"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createNativeQuery(java.lang.String, java.lang.String)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createNativeQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createNativeQuery(java.lang.String)"], ["javax.persistence.TypedQuery", "org.hibernate.internal.AbstractSessionImpl.createNamedQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createNamedQuery(java.lang.String)"], ["javax.persistence.TypedQuery", "org.hibernate.internal.AbstractSessionImpl.createQuery(java.lang.String, java.lang.Class)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["javax.persistence.TypedQuery", "org.hibernate.internal.AbstractSessionImpl.createQuery(javax.persistence.criteria.CriteriaQuery)"], ["javax.persistence.Query", "org.hibernate.internal.AbstractSessionImpl.createQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSessionImpl.createQuery(java.lang.String, java.lang.Class, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions)"], ["org.hibernate.jpa.HibernateEntityManagerFactory", "org.hibernate.internal.AbstractSessionImpl.getFactory()"], ["org.hibernate.internal.CoordinatingEntityNameResolver", "org.hibernate.internal.CoordinatingEntityNameResolver(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.Interceptor)"], ["java.lang.String", "org.hibernate.internal.CoordinatingEntityNameResolver.resolveEntityName(java.lang.Object)"], ["void", "org.hibernate.internal.AbstractScrollableResults.close()"], ["boolean", "org.hibernate.internal.AbstractScrollableResults.isClosed()"], ["int", "org.hibernate.internal.AbstractScrollableResults.getNumberOfTypes()"], ["java.lang.Object[]", "org.hibernate.internal.AbstractScrollableResults.get()"], ["java.lang.Object", "org.hibernate.internal.AbstractScrollableResults.get(int)"], ["java.math.BigDecimal", "org.hibernate.internal.AbstractScrollableResults.getBigDecimal(int)"], ["java.math.BigInteger", "org.hibernate.internal.AbstractScrollableResults.getBigInteger(int)"], ["byte[]", "org.hibernate.internal.AbstractScrollableResults.getBinary(int)"], ["java.lang.String", "org.hibernate.internal.AbstractScrollableResults.getText(int)"], ["java.sql.Blob", "org.hibernate.internal.AbstractScrollableResults.getBlob(int)"], ["java.sql.Clob", "org.hibernate.internal.AbstractScrollableResults.getClob(int)"], ["java.lang.Boolean", "org.hibernate.internal.AbstractScrollableResults.getBoolean(int)"], ["java.lang.Byte", "org.hibernate.internal.AbstractScrollableResults.getByte(int)"], ["java.lang.Character", "org.hibernate.internal.AbstractScrollableResults.getCharacter(int)"], ["java.util.Date", "org.hibernate.internal.AbstractScrollableResults.getDate(int)"], ["java.util.Calendar", "org.hibernate.internal.AbstractScrollableResults.getCalendar(int)"], ["java.lang.Double", "org.hibernate.internal.AbstractScrollableResults.getDouble(int)"], ["java.lang.Float", "org.hibernate.internal.AbstractScrollableResults.getFloat(int)"], ["java.lang.Integer", "org.hibernate.internal.AbstractScrollableResults.getInteger(int)"], ["java.lang.Long", "org.hibernate.internal.AbstractScrollableResults.getLong(int)"], ["java.lang.Short", "org.hibernate.internal.AbstractScrollableResults.getShort(int)"], ["java.lang.String", "org.hibernate.internal.AbstractScrollableResults.getString(int)"], ["java.util.Locale", "org.hibernate.internal.AbstractScrollableResults.getLocale(int)"], ["java.util.TimeZone", "org.hibernate.internal.AbstractScrollableResults.getTimeZone(int)"], ["org.hibernate.type.Type", "org.hibernate.internal.AbstractScrollableResults.getType(int)"], ["org.hibernate.internal.log.UnsupportedLogger_$logger", "org.hibernate.internal.log.UnsupportedLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.log.UnsupportedLogger_$logger.usingLegacyClassnamesForProxies()"], ["org.hibernate.internal.log.ConnectionAccessLogger_$logger", "org.hibernate.internal.log.ConnectionAccessLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.log.ConnectionAccessLogger_$logger.informConnectionLocalTransactionForNonJtaDdl(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.internal.log.DeprecationLogger_$logger", "org.hibernate.internal.log.DeprecationLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedScannerSetting()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfMultipleEntityModeSupport()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfDomEntityModeSupport()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfEmbedXmlSupport()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfNonNamedIdAttribute(java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedNamingStrategySetting(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedNamingStrategyArgument()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedNamingStrategyAntArgument()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedManyToManyOuterJoin()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedManyToManyFetch()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfTemporaryTableBulkIdStrategy()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.recognizedObsoleteHibernateNamespace(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.connectionProviderClassDeprecated(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedSequenceGenerator(java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedTableGenerator(java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfCollectionPropertiesInHql(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecationOfClassEntityTypeSelector(java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedTransactionFactorySetting(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logDeprecatedInstrumentTask(java.lang.Class, java.lang.Class)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedSetting(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.deprecatedLegacyCriteria()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logUseOfDeprecatedConnectionHandlingSettings()"], ["void", "org.hibernate.internal.log.DeprecationLogger_$logger.logUseOfDeprecatedZeroBasedJdbcStyleParams()"], ["org.hibernate.internal.log.ConnectionPoolingLogger_$logger", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.connectionProperties(java.util.Properties)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.usingHibernateBuiltInConnectionPool()"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.autoCommitMode(boolean)"], ["java.lang.String", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.jdbcUrlNotSpecified(java.lang.String)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.usingDriver(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.jdbcDriverNotSpecified(java.lang.String)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.jdbcIsolationLevel(java.lang.String)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.cleaningUpConnectionPool(java.lang.String)"], ["void", "org.hibernate.internal.log.ConnectionPoolingLogger_$logger.unableToClosePooledConnection(java.sql.SQLException)"], ["org.hibernate.internal.log.UrlMessageBundle_$logger", "org.hibernate.internal.log.UrlMessageBundle_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.log.UrlMessageBundle_$logger.logMalformedUrl(java.net.URL, java.net.URISyntaxException)"], ["void", "org.hibernate.internal.log.UrlMessageBundle_$logger.logUnableToFindFileByUrl(java.net.URL, java.lang.Exception)"], ["void", "org.hibernate.internal.log.UrlMessageBundle_$logger.logFileDoesNotExist(java.net.URL)"], ["void", "org.hibernate.internal.log.UrlMessageBundle_$logger.logFileIsNotDirectory(java.net.URL)"], ["java.lang.String", "org.hibernate.internal.log.UrlMessageBundle_$logger.fileDoesNotExist(java.lang.String, java.net.URL)"], ["org.hibernate.internal.SessionFactoryRegistry$ObjectFactoryImpl", "org.hibernate.internal.SessionFactoryRegistry$ObjectFactoryImpl()"], ["java.lang.Object", "org.hibernate.internal.SessionFactoryRegistry$ObjectFactoryImpl.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.internal.SessionFactoryImpl$1.resolve()"], ["java.sql.Blob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createBlob(byte[])"], ["java.sql.Blob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createBlob(java.io.InputStream, long)"], ["java.sql.Clob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createClob(java.lang.String)"], ["java.sql.Clob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createClob(java.io.Reader, long)"], ["java.sql.NClob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createNClob(java.lang.String)"], ["java.sql.NClob", "org.hibernate.internal.SessionImpl$LobHelperImpl.createNClob(java.io.Reader, long)"], ["T", "org.hibernate.internal.SessionImpl$SimpleNaturalIdLoadAccessImpl.getReference(java.lang.Object)"], ["T", "org.hibernate.internal.SessionImpl$SimpleNaturalIdLoadAccessImpl.load(java.lang.Object)"], ["org.hibernate.internal.SessionImpl$BaseNaturalIdLoadAccessImpl", "org.hibernate.internal.SessionImpl$SimpleNaturalIdLoadAccessImpl.with(org.hibernate.LockOptions)"], ["org.hibernate.SimpleNaturalIdLoadAccess", "org.hibernate.internal.SessionImpl$SimpleNaturalIdLoadAccessImpl.setSynchronizationEnabled(boolean)"], ["org.hibernate.SimpleNaturalIdLoadAccess", "org.hibernate.internal.SessionImpl$SimpleNaturalIdLoadAccessImpl.with(org.hibernate.LockOptions)"], ["T", "org.hibernate.internal.SessionImpl$NaturalIdLoadAccessImpl.getReference()"], ["T", "org.hibernate.internal.SessionImpl$NaturalIdLoadAccessImpl.load()"], ["org.hibernate.internal.SessionImpl$BaseNaturalIdLoadAccessImpl", "org.hibernate.internal.SessionImpl$NaturalIdLoadAccessImpl.with(org.hibernate.LockOptions)"], ["org.hibernate.NaturalIdLoadAccess", "org.hibernate.internal.SessionImpl$NaturalIdLoadAccessImpl.setSynchronizationEnabled(boolean)"], ["org.hibernate.NaturalIdLoadAccess", "org.hibernate.internal.SessionImpl$NaturalIdLoadAccessImpl.with(org.hibernate.LockOptions)"], ["org.hibernate.internal.FilterImpl", "org.hibernate.internal.FilterImpl(org.hibernate.engine.spi.FilterDefinition)"], ["org.hibernate.engine.spi.FilterDefinition", "org.hibernate.internal.FilterImpl.getFilterDefinition()"], ["java.lang.String", "org.hibernate.internal.FilterImpl.getName()"], ["java.util.Map<java.lang.String, ?>", "org.hibernate.internal.FilterImpl.getParameters()"], ["org.hibernate.Filter", "org.hibernate.internal.FilterImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.Filter", "org.hibernate.internal.FilterImpl.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.Filter", "org.hibernate.internal.FilterImpl.setParameterList(java.lang.String, java.lang.Object[])"], ["java.lang.Object", "org.hibernate.internal.FilterImpl.getParameter(java.lang.String)"], ["void", "org.hibernate.internal.FilterImpl.validate()"], ["org.hibernate.internal.JdbcSessionContextImpl", "org.hibernate.internal.JdbcSessionContextImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.resource.jdbc.spi.StatementInspector, org.hibernate.internal.FastSessionServices)"], ["boolean", "org.hibernate.internal.JdbcSessionContextImpl.isScrollableResultSetsEnabled()"], ["boolean", "org.hibernate.internal.JdbcSessionContextImpl.isGetGeneratedKeysEnabled()"], ["int", "org.hibernate.internal.JdbcSessionContextImpl.getFetchSize()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.internal.JdbcSessionContextImpl.getPhysicalConnectionHandlingMode()"], ["boolean", "org.hibernate.internal.JdbcSessionContextImpl.doesConnectionProviderDisableAutoCommit()"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.internal.JdbcSessionContextImpl.getConnectionReleaseMode()"], ["org.hibernate.ConnectionAcquisitionMode", "org.hibernate.internal.JdbcSessionContextImpl.getConnectionAcquisitionMode()"], ["org.hibernate.resource.jdbc.spi.StatementInspector", "org.hibernate.internal.JdbcSessionContextImpl.getStatementInspector()"], ["org.hibernate.resource.jdbc.spi.JdbcObserver", "org.hibernate.internal.JdbcSessionContextImpl.getObserver()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.internal.JdbcSessionContextImpl.getSessionFactory()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.internal.JdbcSessionContextImpl.getServiceRegistry()"], ["org.hibernate.internal.FilterHelper", "org.hibernate.internal.FilterHelper(java.util.List<org.hibernate.internal.FilterConfiguration>, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.internal.FilterHelper.isAffectedBy(java.util.Map)"], ["java.lang.String", "org.hibernate.internal.FilterHelper.render(org.hibernate.internal.FilterAliasGenerator, java.util.Map)"], ["void", "org.hibernate.internal.FilterHelper.render(java.lang.StringBuilder, org.hibernate.internal.FilterAliasGenerator, java.util.Map)"], ["org.hibernate.internal.ConnectionObserverStatsBridge", "org.hibernate.internal.ConnectionObserverStatsBridge(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.internal.ConnectionObserverStatsBridge.physicalConnectionObtained(java.sql.Connection)"], ["void", "org.hibernate.internal.ConnectionObserverStatsBridge.physicalConnectionReleased()"], ["void", "org.hibernate.internal.ConnectionObserverStatsBridge.logicalConnectionClosed()"], ["void", "org.hibernate.internal.ConnectionObserverStatsBridge.statementPrepared()"], ["T", "org.hibernate.internal.SessionImpl$2.accept(org.hibernate.jdbc.WorkExecutor<T>, java.sql.Connection)"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.tenantIdentifier(java.lang.String)"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.interceptor()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.connection()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.connectionReleaseMode()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.connectionHandlingMode()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.autoJoinTransactions()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.flushMode()"], ["T", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.autoClose()"], ["boolean", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.isTransactionCoordinatorShared()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.getTransactionCoordinator()"], ["org.hibernate.engine.jdbc.spi.JdbcCoordinator", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.getJdbcCoordinator()"], ["org.hibernate.engine.transaction.spi.TransactionImplementor", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.getTransaction()"], ["org.hibernate.engine.spi.ActionQueue$TransactionCompletionProcesses", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.getTransactionCompletionProcesses()"], ["boolean", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.isQueryParametersValidationEnabled()"], ["org.hibernate.SessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.tenantIdentifier(java.lang.String)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.autoClose(boolean)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.autoJoinTransactions(boolean)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.connection(java.sql.Connection)"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.noInterceptor()"], ["org.hibernate.SharedSessionBuilder", "org.hibernate.internal.SessionImpl$SharedSessionBuilderImpl.interceptor(org.hibernate.Interceptor)"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.shouldAutoJoinTransaction()"], ["java.io.Serializable", "org.hibernate.internal.StatelessSessionImpl.insert(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.internal.StatelessSessionImpl.insert(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.delete(java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.delete(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.update(java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.update(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.get(java.lang.Class, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.get(java.lang.Class, java.io.Serializable, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.get(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.get(java.lang.String, java.io.Serializable, org.hibernate.LockMode)"], ["void", "org.hibernate.internal.StatelessSessionImpl.refresh(java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.refresh(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.StatelessSessionImpl.refresh(java.lang.Object, org.hibernate.LockMode)"], ["void", "org.hibernate.internal.StatelessSessionImpl.refresh(java.lang.String, java.lang.Object, org.hibernate.LockMode)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.immediateLoad(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.internal.StatelessSessionImpl.initializeCollection(org.hibernate.collection.spi.PersistentCollection, boolean)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.instantiate(java.lang.String, java.io.Serializable)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.internalLoad(java.lang.String, java.io.Serializable, boolean, boolean)"], ["java.util.Iterator", "org.hibernate.internal.StatelessSessionImpl.iterate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.internal.StatelessSessionImpl.iterateFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["java.util.List", "org.hibernate.internal.StatelessSessionImpl.listFilter(java.lang.Object, java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.isAutoCloseSessionEnabled()"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.shouldAutoClose()"], ["java.lang.String", "org.hibernate.internal.StatelessSessionImpl.bestGuessEntityName(java.lang.Object)"], ["java.sql.Connection", "org.hibernate.internal.StatelessSessionImpl.connection()"], ["int", "org.hibernate.internal.StatelessSessionImpl.executeUpdate(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.CacheMode", "org.hibernate.internal.StatelessSessionImpl.getCacheMode()"], ["void", "org.hibernate.internal.StatelessSessionImpl.setCacheMode(org.hibernate.CacheMode)"], ["void", "org.hibernate.internal.StatelessSessionImpl.setFlushMode(org.hibernate.FlushMode)"], ["void", "org.hibernate.internal.StatelessSessionImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["int", "org.hibernate.internal.StatelessSessionImpl.getDontFlushFromFind()"], ["java.io.Serializable", "org.hibernate.internal.StatelessSessionImpl.getContextEntityIdentifier(java.lang.Object)"], ["org.hibernate.EntityMode", "org.hibernate.internal.StatelessSessionImpl.getEntityMode()"], ["java.lang.String", "org.hibernate.internal.StatelessSessionImpl.guessEntityName(java.lang.Object)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.internal.StatelessSessionImpl.getEntityPersister(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.hibernate.internal.StatelessSessionImpl.getEntityUsingInterceptor(org.hibernate.engine.spi.EntityKey)"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.internal.StatelessSessionImpl.getPersistenceContext()"], ["void", "org.hibernate.internal.StatelessSessionImpl.setAutoClear(boolean)"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.isEventSource()"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.isDefaultReadOnly()"], ["void", "org.hibernate.internal.StatelessSessionImpl.setDefaultReadOnly(boolean)"], ["java.util.List", "org.hibernate.internal.StatelessSessionImpl.list(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["void", "org.hibernate.internal.StatelessSessionImpl.afterOperation(boolean)"], ["org.hibernate.Criteria", "org.hibernate.internal.StatelessSessionImpl.createCriteria(java.lang.Class, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.StatelessSessionImpl.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.StatelessSessionImpl.createCriteria(java.lang.Class)"], ["org.hibernate.Criteria", "org.hibernate.internal.StatelessSessionImpl.createCriteria(java.lang.String)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.StatelessSessionImpl.scroll(org.hibernate.Criteria, org.hibernate.ScrollMode)"], ["java.util.List", "org.hibernate.internal.StatelessSessionImpl.list(org.hibernate.Criteria)"], ["java.util.List", "org.hibernate.internal.StatelessSessionImpl.listCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.StatelessSessionImpl.scrollCustomQuery(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.StatelessSessionImpl.scroll(java.lang.String, org.hibernate.engine.spi.QueryParameters)"], ["void", "org.hibernate.internal.StatelessSessionImpl.afterScrollOperation()"], ["void", "org.hibernate.internal.StatelessSessionImpl.flush()"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.internal.StatelessSessionImpl.getLoadQueryInfluencers()"], ["org.hibernate.engine.spi.PersistenceContext", "org.hibernate.internal.StatelessSessionImpl.getPersistenceContextInternal()"], ["int", "org.hibernate.internal.StatelessSessionImpl.executeNativeUpdate(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["void", "org.hibernate.internal.StatelessSessionImpl.afterTransactionBegin()"], ["void", "org.hibernate.internal.StatelessSessionImpl.beforeTransactionCompletion()"], ["void", "org.hibernate.internal.StatelessSessionImpl.afterTransactionCompletion(boolean, boolean)"], ["boolean", "org.hibernate.internal.StatelessSessionImpl.isTransactionInProgress()"], ["void", "org.hibernate.internal.StatelessSessionImpl.flushBeforeTransactionCompletion()"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.StatelessSessionImpl.createSQLQuery(java.lang.String)"], ["org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl(org.hibernate.internal.SessionFactoryImpl)"], ["org.hibernate.StatelessSession", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.openStatelessSession()"], ["org.hibernate.StatelessSessionBuilder", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.connection(java.sql.Connection)"], ["org.hibernate.StatelessSessionBuilder", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.tenantIdentifier(java.lang.String)"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.shouldAutoJoinTransactions()"], ["org.hibernate.FlushMode", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getInitialSessionFlushMode()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.shouldAutoClose()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.shouldAutoClear()"], ["java.sql.Connection", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getConnection()"], ["org.hibernate.Interceptor", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getInterceptor()"], ["org.hibernate.resource.jdbc.spi.StatementInspector", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getStatementInspector()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getPhysicalConnectionHandlingMode()"], ["java.lang.String", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getTenantIdentifier()"], ["java.util.TimeZone", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getJdbcTimeZone()"], ["org.hibernate.engine.spi.SessionOwner", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getSessionOwner()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.ExceptionMapper", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getExceptionMapper()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.AfterCompletionAction", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getAfterCompletionAction()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.ManagedFlushChecker", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.getManagedFlushChecker()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.isQueryParametersValidationEnabled()"], ["org.hibernate.StatelessSessionBuilder", "org.hibernate.internal.SessionFactoryImpl$StatelessSessionBuilderImpl.setQueryParameterValidation(boolean)"], ["org.hibernate.internal.EntityManagerMessageLogger_$logger", "org.hibernate.internal.EntityManagerMessageLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.boundEjb3ConfigurationToJndiName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ejb3ConfigurationName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ejb3ConfigurationRenamedFromName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ejb3ConfigurationUnboundFromName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.explodedJarDoesNotExist(java.net.URL)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.explodedJarNotDirectory(java.net.URL)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.illegalArgumentOnStaticMetamodelFieldInjection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.malformedUrl(java.net.URL, java.net.URISyntaxException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.malformedUrlWarning(java.net.URL, java.net.URISyntaxException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToFindFile(java.net.URL, java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateStaticMetamodelField(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingProvidedDataSource()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoringEntityNotFound(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedJpaPositionalParameterAccess(java.lang.Integer)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unusedMappedSuperclass(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedPersistenceProvider(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedInstrumentationProperty()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicatedPersistenceUnitName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.alreadySessionBound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.autoCommitMode(boolean)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.autoFlushWillNotWork()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.batchContainedStatementsOnRelease()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.bytecodeProvider(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.c3p0ProviderClassNotFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.cachedFileNotFound(java.lang.String, java.io.FileNotFoundException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.cacheProvider(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.callingJoinTransactionOnNonJtaEntityManager()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.closing()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionsFetched(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionsLoaded(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionsRecreated(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionsRemoved(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionsUpdated(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.columns(java.util.Set)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.compositeIdClassDoesNotOverrideEquals(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.compositeIdClassDoesNotOverrideHashCode(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configurationResource(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configuredSessionFactory(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configuringFromFile(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configuringFromResource(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configuringFromUrl(java.net.URL)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.configuringFromXmlDocument()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.connectionsObtained(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.containerProvidingNullPersistenceUnitRootUrl()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.containsJoinFetchedCollection(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.creatingSubcontextInfo(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.definingFlushBeforeCompletionIgnoredInHem(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedForceDescriminatorAnnotation()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedOracle9Dialect()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedOracleDialect()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedUuidGenerator(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.disallowingInsertStatementComment()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateGeneratorName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateGeneratorTable(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateImport(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateJoins(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateListener(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.duplicateMetadata()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entitiesDeleted(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entitiesFetched(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entitiesInserted(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entitiesLoaded(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entitiesUpdated(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entityAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entityManagerClosedBySomeoneElse(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entityMappedAsNonAbstract(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.exceptionHeaderFound(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.exceptionHeaderNotFound(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.exceptionInAfterTransactionCompletionInterceptor(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.exceptionInBeforeTransactionCompletionInterceptor(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.exceptionInSubResolver(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.expectedType(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.expired(java.lang.Object)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.factoryBoundToJndiName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.factoryJndiRename(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.factoryUnboundFromJndiName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.factoryUnboundFromName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.failed(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.failSafeCollectionsCleanup(org.hibernate.engine.loading.internal.CollectionLoadContext)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.failSafeEntitiesCleanup(org.hibernate.engine.loading.internal.EntityLoadContext)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.fetchingDatabaseMetadata()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.firstOrMaxResultsSpecifiedWithCollectionFetch()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.flushes(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.forcingContainerResourceCleanup()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.forcingTableUse()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.foreignKeys(java.util.Set)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.foundMappingDocument(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.gettersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.guidGenerated(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.handlingTransientEntity()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.hibernateConnectionPoolSize(int, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.honoringOptimizerSetting(java.lang.String, java.lang.String, int, java.lang.String, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.hql(java.lang.String, java.lang.Long, java.lang.Long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.hsqldbSupportsOnlyReadCommittedIsolation()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.hydratingEntitiesCount(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoringTableGeneratorConstraints(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoringUnrecognizedQueryHint(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.illegalPropertyGetterArgument(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.illegalPropertySetterArgument(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.immutableAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.incompleteMappingMetadataCacheProcessing()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.indexes(java.util.Set)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.couldNotBindJndiListener()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.instantiatingExplicitConnectionProvider(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidArrayElementType(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidDiscriminatorAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidEditOfReadOnlyItem(java.lang.Object)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidJndiName(java.lang.String, org.hibernate.engine.jndi.JndiNameException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidOnDeleteAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidPrimaryKeyJoinColumnAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidSubStrategy(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.invalidTableAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.jaccContextId(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.JavaSqlTypesMappedSameCodeMultipleTimes(int, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.bytecodeEnhancementFailed(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.bytecodeEnhancementFailedBecauseOfDefaultConstructor(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.jdbcAutoCommitFalseBreaksEjb3Spec(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.jdbcRollbackFailed()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.jndiInitialContextProperties(java.util.Hashtable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.jndiNameDoesNotHandleSessionFactoryReference(java.lang.String, java.lang.ClassCastException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.lazyPropertyFetchingAvailable(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.loadingCollectionKeyNotFound(org.hibernate.engine.spi.CollectionKey)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.localLoadingCollectionKeysCount(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.loggingStatistics()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logicalConnectionClosed()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logicalConnectionReleasingPhysicalConnection()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.maxQueryTime(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.missingArguments(int, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.missingEntityAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.namedQueryError(java.lang.String, org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.namingExceptionAccessingFactory(javax.naming.NamingException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.narrowingProxy(java.lang.Class)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.needsLimit()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.noAppropriateConnectionProvider()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.noDefaultConstructor(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.noPersistentClassesFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.noSessionFactoryWithJndiName(java.lang.String, javax.naming.NameNotFoundException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.optimisticLockFailures(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.orderByAnnotationIndexedCollection()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.overridingTransactionStrategyDangerous(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.packageNotFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.parsingXmlError(int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.parsingXmlErrorForFile(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.parsingXmlWarning(int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.parsingXmlWarningForFile(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.persistenceProviderCallerDoesNotImplementEjb3SpecCorrectly()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.pooledOptimizerReportedInitialValue(org.hibernate.id.IntegralDataTypeHolder)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.preparedStatementAlreadyInBatch(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.processEqualityExpression()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.processingPersistenceUnitInfoName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.propertiesLoaded(java.util.Properties)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.propertiesNotFound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.propertyNotFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.proxoolProviderClassNotFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queriesExecuted(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queryCacheHits(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queryCacheMisses(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queryCachePuts(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.rdmsOs2200Dialect()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.readingCachedMappings(java.io.File)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.readingMappingsFromFile(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.readingMappingsFromResource(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.readOnlyCacheConfiguredForMutableCollection(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.recognizedObsoleteHibernateNamespace(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.renamedProperty(java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.requiredDifferentProvider(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.runningHbm2ddlSchemaExport()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.runningHbm2ddlSchemaUpdate()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.runningSchemaValidator()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.schemaExportComplete()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.schemaExportUnsuccessful(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.schemaUpdateComplete()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.scopingTypesToSessionFactoryAfterAlreadyScoped(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.searchingForMappingDocuments(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.secondLevelCacheHits(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.secondLevelCacheMisses(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.secondLevelCachePuts(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.serviceProperties(java.util.Properties)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.sessionsClosed(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.sessionsOpened(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.settersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.sortAnnotationIndexedCollection()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.splitQueries(java.lang.String, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.sqlWarning(int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.startingQueryCache(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.startingServiceAtJndiName(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.startingUpdateTimestampsCache(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.startTime(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.statementsClosed(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.statementsPrepared(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.stoppingService()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.subResolverException(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.successfulTransactions(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.synchronizationAlreadyRegistered(javax.transaction.Synchronization)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.synchronizationFailed(javax.transaction.Synchronization, java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.tableFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.tableNotFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.multipleTablesFound(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.transactions(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.transactionStartedOnNonRootSession()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.transactionStrategy(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.typeDefinedNoRegistrationKeys(org.hibernate.type.BasicType)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.typeRegistrationOverridesPrevious(java.lang.String, org.hibernate.type.Type)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToAccessEjb3Configuration(javax.naming.NamingException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToAccessSessionFactory(java.lang.String, javax.naming.NamingException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToAccessTypeInfoResultSet(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToApplyConstraints(java.lang.String, java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToBindEjb3ConfigurationToJndi(org.hibernate.engine.jndi.JndiException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToBindFactoryToJndi(org.hibernate.engine.jndi.JndiException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToBindValueToParameter(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToBuildEnhancementMetamodel(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToBuildSessionFactoryUsingMBeanClasspath(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCleanUpCallableStatement(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCleanUpPreparedStatement(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCleanupTemporaryIdTable(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseConnection(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseInitialContext(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseInputFiles(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseInputStream(java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseInputStreamForResource(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseIterator(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseJar(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseOutputFile(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseOutputStream(java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseSession(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseSessionDuringRollback(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseStream(java.io.IOException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseStreamError(java.io.IOException)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCommitJta()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCompleteSchemaUpdate(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCompleteSchemaValidation(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToConfigureSqlExceptionConverter(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToConstructCurrentSessionContext(java.lang.String, java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToConstructSqlExceptionConverter(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCopySystemProperties()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCreateProxyFactory(java.lang.String, org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCreateSchema(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDeserializeCache(java.lang.String, org.hibernate.type.SerializationException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDestroyCache(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDestroyQueryCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDestroyUpdateTimestampsCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDetermineLockModeValue(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDetermineTransactionStatus()"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDetermineTransactionStatusAfterCommit()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDropTemporaryIdTable(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToExecuteBatch(java.lang.Exception, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToExecuteResolver(org.hibernate.engine.jdbc.dialect.spi.DialectResolver, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToFindPersistenceXmlInClasspath()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToGetDatabaseMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToInstantiateConfiguredSchemaNameResolver(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateCustomOptimizerClass(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToInstantiateOptimizer(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToInstantiateUuidGenerationStrategy(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToJoinTransaction(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLoadCommand(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLoadDerbyDriver(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLoadProperties()"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateConfigFile(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateConfiguredSchemaNameResolver(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateMBeanServer()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLocateUuidGenerationStrategy(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLogSqlWarnings(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLogWarnings(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToMarkForRollbackOnPersistenceException(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToMarkForRollbackOnTransientObjectException(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToObjectConnectionMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToObjectConnectionToQueryMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToObtainConnectionMetadata(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToObtainConnectionToQueryMetadata(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToObtainInitialContext(javax.naming.NamingException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToParseMetadata(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToPerformJdbcCommit()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToPerformManagedFlush(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToQueryDatabaseMetadata()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReadClass(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReadColumnValueFromResultSet(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReadHiValue(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReadOrInitHiValue(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseBatchStatement()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseCacheLock(org.hibernate.cache.CacheException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseContext(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseCreatedMBeanServer(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseIsolatedConnection(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToReleaseTypeInfoResultSet()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRemoveBagJoinFetch()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToResolveAggregateFunction(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToResolveMappingFile(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRetrieveCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRetrieveTypeInfoResultSet(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRollbackConnection(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRollbackIsolatedTransaction(java.lang.Exception, java.lang.Exception)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRollbackJta()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToRunSchemaUpdate(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToSetTransactionToRollbackOnly(javax.transaction.SystemException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToStopHibernateService(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToStopService(java.lang.Class, java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToSwitchToMethodUsingColumnIndex(java.lang.reflect.Method)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToSynchronizeDatabaseStateWithSession(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToToggleAutoCommit(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToTransformClass(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToUnbindFactoryFromJndi(org.hibernate.engine.jndi.JndiException)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToUpdateHiValue(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToUpdateQueryHiValue(java.lang.String, java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToWrapResultSet(java.sql.SQLException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToWriteCachedFile(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unexpectedLiteralTokenType(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unexpectedRowCounts()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unknownBytecodeProvider(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unknownIngresVersion(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unknownOracleVersion(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unknownSqlServerVersion(int, java.lang.Class<? extends org.hibernate.dialect.Dialect>)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unregisteredResultSetWithoutStatement()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unregisteredStatement()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsuccessful(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsuccessfulCreate(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedAfterStatement()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedIngresVersion()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedInitialValue(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedMultiTableBulkHqlJpaql(int, int, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedOracleVersion()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.updatingSchema()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingDefaultIdGeneratorSegmentValue(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingDefaultTransactionStrategy()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingDialect(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingOldDtd()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingReflectionOptimizer()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingStreams()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingUuidHexGenerator(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.validatorNotFound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.version(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.warningsCreatingTempTable(java.sql.SQLWarning)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.willNotRegisterListeners()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.writeLocksNotSupported(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.writingGeneratedSchemaToFile(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.addingOverrideFor(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.resolvedSqlTypeDescriptorForDifferentSqlCode(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.closingUnreleasedBatch()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.disablingContextualLOBCreation(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.disablingContextualLOBCreationSinceConnectionNull()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.disablingContextualLOBCreationSinceOldJdbcVersion(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.disablingContextualLOBCreationSinceCreateClobFailed(java.lang.Throwable)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToCloseSessionButSwallowingError(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.setManagerLookupClass()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.legacyTransactionManagerStrategy(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entityIdentifierValueBindingExists(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedDerbyDialect()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.undeterminedH2Version()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.noColumnsSpecifiedForIndex(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.timestampCachePuts(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.timestampCacheHits(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.timestampCacheMisses(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.entityManagerFactoryAlreadyRegistered(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.cannotResolveNonNullableTransientDependencies(java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.naturalIdCachePuts(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.naturalIdCacheHits(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.naturalIdCacheMisses(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.naturalIdMaxQueryTime(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.naturalIdQueriesExecuted(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.tooManyInExpressions(java.lang.String, int, java.lang.String, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingFollowOnLocking()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.aliasSpecificLockingWithFollowOnLocking(org.hibernate.LockMode)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.embedXmlAttributesNoLongerSupported()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.explicitSkipLockedLockCombo()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.multipleValidationModes(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.nonCompliantMapConversion(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.alternateServiceRole(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.rollbackFromBackgroundThread(int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToLoadScannedClassOrResource(java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unableToDiscoverOsgiService(java.lang.String, java.lang.Exception)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedManyToManyOuterJoin()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.deprecatedManyToManyFetch()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedNamedParameters()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.applyingExplicitDiscriminatorColumnForJoined(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.creatingPooledLoOptimizer(int, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logBadHbmAttributeConverterType(java.lang.String, java.lang.String)"], ["org.hibernate.HibernateException", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingStoppedClassLoaderService()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logUnexpectedSessionInCollectionNotConnected(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logCannotUnsetUnexpectedSessionInCollection(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.hikariProviderClassNotFound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.cachedFileObsolete(java.io.File)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ambiguousPropertyMethods(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.logCannotLocateIndexColumnInformation(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.executingImportScript(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.startingDelayedSchemaDrop()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsuccessfulSchemaManagementCommand(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.collectionNotProcessedByFlush(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.stalePersistenceContextInEntityEntry(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unknownJavaTypeNoEqualsHashCode(java.lang.Class)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.cacheOrCacheableAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.emptyCompositesEnabled()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.viburProviderClassNotFound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.attemptToAssociateProxyWithTwoOpenSessions(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.agroalProviderClassNotFound()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.immutableEntityUpdateQuery(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.EntityManagerMessageLogger_$logger.bytecodeEnhancementFailedUnableToGetPrivateLookupFor(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.nativeExceptionHandling51ComplianceJpaBootstrapping()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.usingJtaPlatform(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoreNotFoundWithFetchTypeLazy(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queryPlanCacheHits(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queryPlanCacheMisses(long)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoreQueuedOperationsOnMerge(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queuedOperationWhenAttachToSession(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queuedOperationWhenDetachFromSession(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.sequenceIncrementSizeMismatch(java.lang.String, int, int)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.queuedOperationWhenDetachFromSessionOnRollback(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedAttributeOverrideWithEntityInheritance(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoreImmutablePropertyModification(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.unsupportedMappedSuperclassWithEntityInheritance(java.lang.String)"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.multipleSchemaCreationSettingsDefined()"], ["void", "org.hibernate.internal.EntityManagerMessageLogger_$logger.ignoringServiceConfigurationError(java.lang.Class<?>, java.util.ServiceConfigurationError)"], ["org.hibernate.internal.TypeLocatorImpl", "org.hibernate.internal.TypeLocatorImpl(org.hibernate.type.TypeResolver)"], ["org.hibernate.type.BasicType", "org.hibernate.internal.TypeLocatorImpl.basic(java.lang.String)"], ["org.hibernate.type.BasicType", "org.hibernate.internal.TypeLocatorImpl.basic(java.lang.Class)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.heuristicType(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.entity(java.lang.Class)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.entity(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.custom(java.lang.Class)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.custom(java.lang.Class, java.util.Properties)"], ["org.hibernate.type.Type", "org.hibernate.internal.TypeLocatorImpl.any(org.hibernate.type.Type, org.hibernate.type.Type)"], ["org.hibernate.internal.ScrollableResultsImpl", "org.hibernate.internal.ScrollableResultsImpl(java.sql.ResultSet, java.sql.PreparedStatement, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.loader.Loader, org.hibernate.engine.spi.QueryParameters, org.hibernate.type.Type[], org.hibernate.hql.internal.HolderInstantiator)"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.scroll(int)"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.first()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.last()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.next()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.previous()"], ["void", "org.hibernate.internal.ScrollableResultsImpl.afterLast()"], ["void", "org.hibernate.internal.ScrollableResultsImpl.beforeFirst()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.isFirst()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.isLast()"], ["int", "org.hibernate.internal.ScrollableResultsImpl.getRowNumber()"], ["boolean", "org.hibernate.internal.ScrollableResultsImpl.setRowNumber(int)"], ["org.hibernate.internal.AbstractSharedSessionContract", "org.hibernate.internal.AbstractSharedSessionContract(org.hibernate.internal.SessionFactoryImpl, org.hibernate.internal.SessionCreationOptions)"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.shouldAutoJoinTransaction()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.getFactory()"], ["org.hibernate.Interceptor", "org.hibernate.internal.AbstractSharedSessionContract.getInterceptor()"], ["org.hibernate.engine.jdbc.spi.JdbcCoordinator", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcCoordinator()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator", "org.hibernate.internal.AbstractSharedSessionContract.getTransactionCoordinator()"], ["org.hibernate.resource.jdbc.spi.JdbcSessionContext", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcSessionContext()"], ["org.hibernate.EntityNameResolver", "org.hibernate.internal.AbstractSharedSessionContract.getEntityNameResolver()"], ["org.hibernate.engine.spi.SessionEventListenerManager", "org.hibernate.internal.AbstractSharedSessionContract.getEventListenerManager()"], ["java.util.UUID", "org.hibernate.internal.AbstractSharedSessionContract.getSessionIdentifier()"], ["java.lang.String", "org.hibernate.internal.AbstractSharedSessionContract.getTenantIdentifier()"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.isOpen()"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.isClosed()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.close()"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.isOpenOrWaitingForAutoClose()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.checkOpen(boolean)"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly()"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.isTransactionInProgress()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(java.lang.String)"], ["org.hibernate.Transaction", "org.hibernate.internal.AbstractSharedSessionContract.getTransaction()"], ["org.hibernate.Transaction", "org.hibernate.internal.AbstractSharedSessionContract.accessTransaction()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.startTransactionBoundary()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.beforeTransactionCompletion()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.afterTransactionCompletion(boolean, boolean)"], ["org.hibernate.cache.spi.CacheTransactionSynchronization", "org.hibernate.internal.AbstractSharedSessionContract.getCacheTransactionSynchronization()"], ["long", "org.hibernate.internal.AbstractSharedSessionContract.getTransactionStartTimestamp()"], ["org.hibernate.Transaction", "org.hibernate.internal.AbstractSharedSessionContract.beginTransaction()"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.isConnected()"], ["org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcConnectionAccess()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(java.io.Serializable, org.hibernate.persister.entity.EntityPersister)"], ["boolean", "org.hibernate.internal.AbstractSharedSessionContract.useStreamForLobBinding()"], ["org.hibernate.engine.jdbc.LobCreator", "org.hibernate.internal.AbstractSharedSessionContract.getLobCreator()"], ["<T> T", "org.hibernate.internal.AbstractSharedSessionContract.execute(org.hibernate.engine.jdbc.LobCreationContext$Callback<T>)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.internal.AbstractSharedSessionContract.remapSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["java.util.TimeZone", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcTimeZone()"], ["org.hibernate.engine.jdbc.spi.JdbcServices", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcServices()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.setFlushMode(org.hibernate.FlushMode)"], ["javax.persistence.FlushModeType", "org.hibernate.internal.AbstractSharedSessionContract.getFlushMode()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.FlushMode", "org.hibernate.internal.AbstractSharedSessionContract.getHibernateFlushMode()"], ["org.hibernate.CacheMode", "org.hibernate.internal.AbstractSharedSessionContract.getCacheMode()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.getNamedQuery(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaQuery<T>)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String, java.lang.Class<T>, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions)"], ["<T> org.hibernate.query.spi.QueryImplementor<T>", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String, java.lang.Class<T>)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(java.lang.String)"], ["<R> org.hibernate.query.spi.QueryImplementor<R>", "org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(java.lang.String, java.lang.Class<R>)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String, java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.getNamedNativeQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.createSQLQuery(java.lang.String)"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.internal.AbstractSharedSessionContract.getNamedSQLQuery(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.AbstractSharedSessionContract.getNamedProcedureCall(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.AbstractSharedSessionContract.createStoredProcedureCall(java.lang.String)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.AbstractSharedSessionContract.createStoredProcedureCall(java.lang.String, java.lang.Class...)"], ["org.hibernate.procedure.ProcedureCall", "org.hibernate.internal.AbstractSharedSessionContract.createStoredProcedureCall(java.lang.String, java.lang.String...)"], ["java.util.List", "org.hibernate.internal.AbstractSharedSessionContract.list(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.internal.AbstractSharedSessionContract.scroll(org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.engine.spi.ExceptionConverter", "org.hibernate.internal.AbstractSharedSessionContract.getExceptionConverter()"], ["java.lang.Integer", "org.hibernate.internal.AbstractSharedSessionContract.getJdbcBatchSize()"], ["void", "org.hibernate.internal.AbstractSharedSessionContract.setJdbcBatchSize(java.lang.Integer)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.getNamedQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaDelete)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaUpdate)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(javax.persistence.criteria.CriteriaQuery)"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.AbstractSharedSessionContract.getNamedNativeQuery(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.internal.AbstractSharedSessionContract.getNamedSQLQuery(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String, java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.NativeQuery", "org.hibernate.internal.AbstractSharedSessionContract.createNativeQuery(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.internal.AbstractSharedSessionContract.createSQLQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String, java.lang.Class)"], ["org.hibernate.Query", "org.hibernate.internal.AbstractSharedSessionContract.createQuery(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.internal.AbstractSharedSessionContract.getNamedQuery(java.lang.String)"], ["org.hibernate.internal.DynamicFilterAliasGenerator", "org.hibernate.internal.DynamicFilterAliasGenerator(java.lang.String[], java.lang.String)"], ["java.lang.String", "org.hibernate.internal.DynamicFilterAliasGenerator.getAlias(java.lang.String)"], ["void", "org.hibernate.internal.SessionFactoryRegistry$1.objectAdded(javax.naming.event.NamingEvent)"], ["void", "org.hibernate.internal.SessionFactoryRegistry$1.objectRemoved(javax.naming.event.NamingEvent)"], ["void", "org.hibernate.internal.SessionFactoryRegistry$1.objectRenamed(javax.naming.event.NamingEvent)"], ["void", "org.hibernate.internal.SessionFactoryRegistry$1.namingExceptionThrown(javax.naming.event.NamingExceptionEvent)"], ["org.hibernate.internal.FetchingScrollableResultsImpl", "org.hibernate.internal.FetchingScrollableResultsImpl(java.sql.ResultSet, java.sql.PreparedStatement, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.loader.Loader, org.hibernate.engine.spi.QueryParameters, org.hibernate.type.Type[], org.hibernate.hql.internal.HolderInstantiator)"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.next()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.previous()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.scroll(int)"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.last()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.first()"], ["void", "org.hibernate.internal.FetchingScrollableResultsImpl.beforeFirst()"], ["void", "org.hibernate.internal.FetchingScrollableResultsImpl.afterLast()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.isFirst()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.isLast()"], ["int", "org.hibernate.internal.FetchingScrollableResultsImpl.getRowNumber()"], ["boolean", "org.hibernate.internal.FetchingScrollableResultsImpl.setRowNumber(int)"], ["org.hibernate.internal.SessionFactoryObserverChain", "org.hibernate.internal.SessionFactoryObserverChain()"], ["void", "org.hibernate.internal.SessionFactoryObserverChain.addObserver(org.hibernate.SessionFactoryObserver)"], ["void", "org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(org.hibernate.SessionFactory)"], ["void", "org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryClosing(org.hibernate.SessionFactory)"], ["void", "org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryClosed(org.hibernate.SessionFactory)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl$Subcriteria.toString()"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl$Subcriteria.getAlias()"], ["void", "org.hibernate.internal.CriteriaImpl$Subcriteria.setAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CriteriaImpl$Subcriteria.getPath()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.getParent()"], ["org.hibernate.LockMode", "org.hibernate.internal.CriteriaImpl$Subcriteria.getLockMode()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.sql.JoinType", "org.hibernate.internal.CriteriaImpl$Subcriteria.getJoinType()"], ["org.hibernate.criterion.Criterion", "org.hibernate.internal.CriteriaImpl$Subcriteria.getWithClause()"], ["boolean", "org.hibernate.internal.CriteriaImpl$Subcriteria.hasRestriction()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.add(org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.addOrder(org.hibernate.criterion.Order)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createAlias(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createAlias(java.lang.String, java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createAlias(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createAlias(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, java.lang.String, int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, java.lang.String, org.hibernate.sql.JoinType, org.hibernate.criterion.Criterion)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.createCriteria(java.lang.String, java.lang.String, int, org.hibernate.criterion.Criterion)"], ["boolean", "org.hibernate.internal.CriteriaImpl$Subcriteria.isReadOnly()"], ["boolean", "org.hibernate.internal.CriteriaImpl$Subcriteria.isReadOnlyInitialized()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setReadOnly(boolean)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setCacheable(boolean)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setCacheRegion(java.lang.String)"], ["java.util.List", "org.hibernate.internal.CriteriaImpl$Subcriteria.list()"], ["org.hibernate.ScrollableResults", "org.hibernate.internal.CriteriaImpl$Subcriteria.scroll()"], ["org.hibernate.ScrollableResults", "org.hibernate.internal.CriteriaImpl$Subcriteria.scroll(org.hibernate.ScrollMode)"], ["java.lang.Object", "org.hibernate.internal.CriteriaImpl$Subcriteria.uniqueResult()"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setFetchMode(java.lang.String, org.hibernate.FetchMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setFirstResult(int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setMaxResults(int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setTimeout(int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setFetchSize(int)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setComment(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.addQueryHint(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.internal.CriteriaImpl$Subcriteria.setProjection(org.hibernate.criterion.Projection)"], ["org.hibernate.engine.spi.SessionOwner", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getSessionOwner()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.ExceptionMapper", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getExceptionMapper()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.AfterCompletionAction", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getAfterCompletionAction()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.ManagedFlushChecker", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getManagedFlushChecker()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.isQueryParametersValidationEnabled()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.shouldAutoJoinTransactions()"], ["org.hibernate.FlushMode", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getInitialSessionFlushMode()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.shouldAutoClose()"], ["boolean", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.shouldAutoClear()"], ["java.sql.Connection", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getConnection()"], ["org.hibernate.Interceptor", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getInterceptor()"], ["org.hibernate.resource.jdbc.spi.StatementInspector", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getStatementInspector()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getPhysicalConnectionHandlingMode()"], ["java.lang.String", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getTenantIdentifier()"], ["java.util.TimeZone", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.getJdbcTimeZone()"], ["org.hibernate.Session", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession()"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.owner(org.hibernate.engine.spi.SessionOwner)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.interceptor(org.hibernate.Interceptor)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.noInterceptor()"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.statementInspector(org.hibernate.resource.jdbc.spi.StatementInspector)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.connection(java.sql.Connection)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.connectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.autoJoinTransactions(boolean)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.autoClose(boolean)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.autoClear(boolean)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.flushMode(org.hibernate.FlushMode)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.tenantIdentifier(java.lang.String)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.eventListeners(org.hibernate.SessionEventListener...)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.clearEventListeners()"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.jdbcTimeZone(java.util.TimeZone)"], ["T", "org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.setQueryParameterValidation(boolean)"], ["org.hibernate.internal.EmptyScrollableResults", "org.hibernate.internal.EmptyScrollableResults()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.isClosed()"], ["int", "org.hibernate.internal.EmptyScrollableResults.getNumberOfTypes()"], ["void", "org.hibernate.internal.EmptyScrollableResults.close()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.next()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.previous()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.scroll(int)"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.last()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.first()"], ["void", "org.hibernate.internal.EmptyScrollableResults.beforeFirst()"], ["void", "org.hibernate.internal.EmptyScrollableResults.afterLast()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.isFirst()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.isLast()"], ["int", "org.hibernate.internal.EmptyScrollableResults.getRowNumber()"], ["boolean", "org.hibernate.internal.EmptyScrollableResults.setRowNumber(int)"], ["java.lang.Object[]", "org.hibernate.internal.EmptyScrollableResults.get()"], ["java.lang.Object", "org.hibernate.internal.EmptyScrollableResults.get(int)"], ["org.hibernate.type.Type", "org.hibernate.internal.EmptyScrollableResults.getType(int)"], ["java.lang.Integer", "org.hibernate.internal.EmptyScrollableResults.getInteger(int)"], ["java.lang.Long", "org.hibernate.internal.EmptyScrollableResults.getLong(int)"], ["java.lang.Float", "org.hibernate.internal.EmptyScrollableResults.getFloat(int)"], ["java.lang.Boolean", "org.hibernate.internal.EmptyScrollableResults.getBoolean(int)"], ["java.lang.Double", "org.hibernate.internal.EmptyScrollableResults.getDouble(int)"], ["java.lang.Short", "org.hibernate.internal.EmptyScrollableResults.getShort(int)"], ["java.lang.Byte", "org.hibernate.internal.EmptyScrollableResults.getByte(int)"], ["java.lang.Character", "org.hibernate.internal.EmptyScrollableResults.getCharacter(int)"], ["byte[]", "org.hibernate.internal.EmptyScrollableResults.getBinary(int)"], ["java.lang.String", "org.hibernate.internal.EmptyScrollableResults.getText(int)"], ["java.sql.Blob", "org.hibernate.internal.EmptyScrollableResults.getBlob(int)"], ["java.sql.Clob", "org.hibernate.internal.EmptyScrollableResults.getClob(int)"], ["java.lang.String", "org.hibernate.internal.EmptyScrollableResults.getString(int)"], ["java.math.BigDecimal", "org.hibernate.internal.EmptyScrollableResults.getBigDecimal(int)"], ["java.math.BigInteger", "org.hibernate.internal.EmptyScrollableResults.getBigInteger(int)"], ["java.util.Date", "org.hibernate.internal.EmptyScrollableResults.getDate(int)"], ["java.util.Locale", "org.hibernate.internal.EmptyScrollableResults.getLocale(int)"], ["java.util.Calendar", "org.hibernate.internal.EmptyScrollableResults.getCalendar(int)"], ["java.util.TimeZone", "org.hibernate.internal.EmptyScrollableResults.getTimeZone(int)"], ["org.hibernate.internal.CoreMessageLogger_$logger", "org.hibernate.internal.CoreMessageLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.alreadySessionBound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.autoCommitMode(boolean)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.autoFlushWillNotWork()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.batchContainedStatementsOnRelease()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.bytecodeProvider(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.c3p0ProviderClassNotFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.cachedFileNotFound(java.lang.String, java.io.FileNotFoundException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.cacheProvider(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.callingJoinTransactionOnNonJtaEntityManager()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.closing()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.collectionsFetched(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.collectionsLoaded(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.collectionsRecreated(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.collectionsRemoved(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.collectionsUpdated(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.columns(java.util.Set)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.compositeIdClassDoesNotOverrideEquals(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.compositeIdClassDoesNotOverrideHashCode(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configurationResource(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configuredSessionFactory(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configuringFromFile(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configuringFromResource(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configuringFromUrl(java.net.URL)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.configuringFromXmlDocument()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.connectionsObtained(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.containerProvidingNullPersistenceUnitRootUrl()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.containsJoinFetchedCollection(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.creatingSubcontextInfo(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.definingFlushBeforeCompletionIgnoredInHem(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedForceDescriminatorAnnotation()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedOracle9Dialect()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedOracleDialect()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedUuidGenerator(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.disallowingInsertStatementComment()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateGeneratorName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateGeneratorTable(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateImport(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateJoins(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateListener(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.duplicateMetadata()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entitiesDeleted(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entitiesFetched(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entitiesInserted(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entitiesLoaded(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entitiesUpdated(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entityAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entityManagerClosedBySomeoneElse(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entityMappedAsNonAbstract(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.exceptionHeaderFound(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.exceptionHeaderNotFound(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.exceptionInAfterTransactionCompletionInterceptor(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.exceptionInBeforeTransactionCompletionInterceptor(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.exceptionInSubResolver(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.expectedType(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.expired(java.lang.Object)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.factoryBoundToJndiName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.factoryJndiRename(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.factoryUnboundFromJndiName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.factoryUnboundFromName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.failed(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.failSafeCollectionsCleanup(org.hibernate.engine.loading.internal.CollectionLoadContext)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.failSafeEntitiesCleanup(org.hibernate.engine.loading.internal.EntityLoadContext)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.fetchingDatabaseMetadata()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.firstOrMaxResultsSpecifiedWithCollectionFetch()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.flushes(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.forcingContainerResourceCleanup()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.forcingTableUse()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.foreignKeys(java.util.Set)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.foundMappingDocument(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.gettersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.guidGenerated(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.handlingTransientEntity()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.hibernateConnectionPoolSize(int, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.honoringOptimizerSetting(java.lang.String, java.lang.String, int, java.lang.String, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.hql(java.lang.String, java.lang.Long, java.lang.Long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.hsqldbSupportsOnlyReadCommittedIsolation()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.hydratingEntitiesCount(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoringTableGeneratorConstraints(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoringUnrecognizedQueryHint(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.illegalPropertyGetterArgument(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.illegalPropertySetterArgument(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.immutableAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.incompleteMappingMetadataCacheProcessing()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.indexes(java.util.Set)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.couldNotBindJndiListener()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.instantiatingExplicitConnectionProvider(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidArrayElementType(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidDiscriminatorAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidEditOfReadOnlyItem(java.lang.Object)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidJndiName(java.lang.String, org.hibernate.engine.jndi.JndiNameException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidOnDeleteAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidPrimaryKeyJoinColumnAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidSubStrategy(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.invalidTableAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.jaccContextId(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.JavaSqlTypesMappedSameCodeMultipleTimes(int, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.bytecodeEnhancementFailed(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.bytecodeEnhancementFailedBecauseOfDefaultConstructor(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.jdbcAutoCommitFalseBreaksEjb3Spec(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.jdbcRollbackFailed()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.jndiInitialContextProperties(java.util.Hashtable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.jndiNameDoesNotHandleSessionFactoryReference(java.lang.String, java.lang.ClassCastException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.lazyPropertyFetchingAvailable(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.loadingCollectionKeyNotFound(org.hibernate.engine.spi.CollectionKey)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.localLoadingCollectionKeysCount(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.loggingStatistics()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logicalConnectionClosed()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logicalConnectionReleasingPhysicalConnection()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.maxQueryTime(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.missingArguments(int, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.missingEntityAnnotation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.namedQueryError(java.lang.String, org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.namingExceptionAccessingFactory(javax.naming.NamingException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.narrowingProxy(java.lang.Class)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.needsLimit()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.noAppropriateConnectionProvider()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.noDefaultConstructor(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.noPersistentClassesFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.noSessionFactoryWithJndiName(java.lang.String, javax.naming.NameNotFoundException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.optimisticLockFailures(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.orderByAnnotationIndexedCollection()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.overridingTransactionStrategyDangerous(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.packageNotFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.parsingXmlError(int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.parsingXmlErrorForFile(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.parsingXmlWarning(int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.parsingXmlWarningForFile(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.persistenceProviderCallerDoesNotImplementEjb3SpecCorrectly()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.pooledOptimizerReportedInitialValue(org.hibernate.id.IntegralDataTypeHolder)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.preparedStatementAlreadyInBatch(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.processEqualityExpression()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.processingPersistenceUnitInfoName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.propertiesLoaded(java.util.Properties)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.propertiesNotFound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.propertyNotFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.proxoolProviderClassNotFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queriesExecuted(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queryCacheHits(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queryCacheMisses(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queryCachePuts(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.rdmsOs2200Dialect()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.readingCachedMappings(java.io.File)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.readingMappingsFromFile(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.readingMappingsFromResource(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.readOnlyCacheConfiguredForMutableCollection(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.recognizedObsoleteHibernateNamespace(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.renamedProperty(java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.requiredDifferentProvider(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.runningHbm2ddlSchemaExport()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.runningHbm2ddlSchemaUpdate()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.runningSchemaValidator()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.schemaExportComplete()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.schemaExportUnsuccessful(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.schemaUpdateComplete()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.scopingTypesToSessionFactoryAfterAlreadyScoped(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.searchingForMappingDocuments(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.secondLevelCacheHits(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.secondLevelCacheMisses(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.secondLevelCachePuts(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.serviceProperties(java.util.Properties)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.sessionsClosed(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.sessionsOpened(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.settersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.sortAnnotationIndexedCollection()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.splitQueries(java.lang.String, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.sqlWarning(int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.startingQueryCache(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.startingServiceAtJndiName(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.startingUpdateTimestampsCache(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.startTime(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.statementsClosed(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.statementsPrepared(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.stoppingService()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.subResolverException(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.successfulTransactions(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.synchronizationAlreadyRegistered(javax.transaction.Synchronization)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.synchronizationFailed(javax.transaction.Synchronization, java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.tableFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.tableNotFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.multipleTablesFound(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.transactions(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.transactionStartedOnNonRootSession()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.transactionStrategy(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.typeDefinedNoRegistrationKeys(org.hibernate.type.BasicType)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.typeRegistrationOverridesPrevious(java.lang.String, org.hibernate.type.Type)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToAccessEjb3Configuration(javax.naming.NamingException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToAccessSessionFactory(java.lang.String, javax.naming.NamingException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToAccessTypeInfoResultSet(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToApplyConstraints(java.lang.String, java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToBindEjb3ConfigurationToJndi(org.hibernate.engine.jndi.JndiException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToBindFactoryToJndi(org.hibernate.engine.jndi.JndiException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToBindValueToParameter(java.lang.String, int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToBuildEnhancementMetamodel(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToBuildSessionFactoryUsingMBeanClasspath(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCleanUpCallableStatement(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCleanUpPreparedStatement(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCleanupTemporaryIdTable(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseConnection(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseInitialContext(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseInputFiles(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseInputStream(java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseInputStreamForResource(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseIterator(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseJar(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseOutputFile(java.lang.String, java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseOutputStream(java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseSession(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseSessionDuringRollback(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseStream(java.io.IOException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseStreamError(java.io.IOException)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCommitJta()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCompleteSchemaUpdate(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCompleteSchemaValidation(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToConfigureSqlExceptionConverter(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToConstructCurrentSessionContext(java.lang.String, java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToConstructSqlExceptionConverter(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCopySystemProperties()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCreateProxyFactory(java.lang.String, org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCreateSchema(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDeserializeCache(java.lang.String, org.hibernate.type.SerializationException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDestroyCache(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDestroyQueryCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDestroyUpdateTimestampsCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDetermineLockModeValue(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDetermineTransactionStatus()"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDetermineTransactionStatusAfterCommit()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDropTemporaryIdTable(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToExecuteBatch(java.lang.Exception, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToExecuteResolver(org.hibernate.engine.jdbc.dialect.spi.DialectResolver, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToFindPersistenceXmlInClasspath()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToGetDatabaseMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToInstantiateConfiguredSchemaNameResolver(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLocateCustomOptimizerClass(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToInstantiateOptimizer(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToInstantiateUuidGenerationStrategy(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToJoinTransaction(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLoadCommand(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLoadDerbyDriver(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLoadProperties()"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLocateConfigFile(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLocateConfiguredSchemaNameResolver(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLocateMBeanServer()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLocateUuidGenerationStrategy(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLogSqlWarnings(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLogWarnings(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToMarkForRollbackOnPersistenceException(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToMarkForRollbackOnTransientObjectException(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToObjectConnectionMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToObjectConnectionToQueryMetadata(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToObtainConnectionMetadata(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToObtainConnectionToQueryMetadata(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToObtainInitialContext(javax.naming.NamingException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToParseMetadata(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToPerformJdbcCommit()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToPerformManagedFlush(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToQueryDatabaseMetadata()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReadClass(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReadColumnValueFromResultSet(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReadHiValue(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReadOrInitHiValue(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseBatchStatement()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseCacheLock(org.hibernate.cache.CacheException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseContext(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseCreatedMBeanServer(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseIsolatedConnection(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToReleaseTypeInfoResultSet()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRemoveBagJoinFetch()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToResolveAggregateFunction(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToResolveMappingFile(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRetrieveCache(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRetrieveTypeInfoResultSet(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRollbackConnection(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRollbackIsolatedTransaction(java.lang.Exception, java.lang.Exception)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRollbackJta()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToRunSchemaUpdate(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToSetTransactionToRollbackOnly(javax.transaction.SystemException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToStopHibernateService(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToStopService(java.lang.Class, java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToSwitchToMethodUsingColumnIndex(java.lang.reflect.Method)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToSynchronizeDatabaseStateWithSession(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToToggleAutoCommit(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToTransformClass(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToUnbindFactoryFromJndi(org.hibernate.engine.jndi.JndiException)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.unableToUpdateHiValue(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToUpdateQueryHiValue(java.lang.String, java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToWrapResultSet(java.sql.SQLException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToWriteCachedFile(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unexpectedLiteralTokenType(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unexpectedRowCounts()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unknownBytecodeProvider(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unknownIngresVersion(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unknownOracleVersion(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unknownSqlServerVersion(int, java.lang.Class<? extends org.hibernate.dialect.Dialect>)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unregisteredResultSetWithoutStatement()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unregisteredStatement()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsuccessful(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsuccessfulCreate(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedAfterStatement()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedIngresVersion()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedInitialValue(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedMultiTableBulkHqlJpaql(int, int, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedOracleVersion()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.updatingSchema()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingDefaultIdGeneratorSegmentValue(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingDefaultTransactionStrategy()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingDialect(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingOldDtd()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingReflectionOptimizer()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingStreams()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingUuidHexGenerator(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.validatorNotFound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.version(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.warningsCreatingTempTable(java.sql.SQLWarning)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.willNotRegisterListeners()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.writeLocksNotSupported(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.writingGeneratedSchemaToFile(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.addingOverrideFor(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.resolvedSqlTypeDescriptorForDifferentSqlCode(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.closingUnreleasedBatch()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.disablingContextualLOBCreation(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.disablingContextualLOBCreationSinceConnectionNull()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.disablingContextualLOBCreationSinceOldJdbcVersion(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.disablingContextualLOBCreationSinceCreateClobFailed(java.lang.Throwable)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToCloseSessionButSwallowingError(org.hibernate.HibernateException)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.setManagerLookupClass()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.legacyTransactionManagerStrategy(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entityIdentifierValueBindingExists(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedDerbyDialect()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.undeterminedH2Version()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.noColumnsSpecifiedForIndex(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.timestampCachePuts(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.timestampCacheHits(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.timestampCacheMisses(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.entityManagerFactoryAlreadyRegistered(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.cannotResolveNonNullableTransientDependencies(java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.naturalIdCachePuts(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.naturalIdCacheHits(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.naturalIdCacheMisses(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.naturalIdMaxQueryTime(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.naturalIdQueriesExecuted(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.tooManyInExpressions(java.lang.String, int, java.lang.String, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingFollowOnLocking()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.aliasSpecificLockingWithFollowOnLocking(org.hibernate.LockMode)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.embedXmlAttributesNoLongerSupported()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.explicitSkipLockedLockCombo()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.multipleValidationModes(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.nonCompliantMapConversion(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.alternateServiceRole(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.rollbackFromBackgroundThread(int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToLoadScannedClassOrResource(java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unableToDiscoverOsgiService(java.lang.String, java.lang.Exception)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedManyToManyOuterJoin()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.deprecatedManyToManyFetch()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedNamedParameters()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.applyingExplicitDiscriminatorColumnForJoined(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.creatingPooledLoOptimizer(int, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logBadHbmAttributeConverterType(java.lang.String, java.lang.String)"], ["org.hibernate.HibernateException", "org.hibernate.internal.CoreMessageLogger_$logger.usingStoppedClassLoaderService()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logUnexpectedSessionInCollectionNotConnected(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logCannotUnsetUnexpectedSessionInCollection(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.hikariProviderClassNotFound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.cachedFileObsolete(java.io.File)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.ambiguousPropertyMethods(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.logCannotLocateIndexColumnInformation(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.executingImportScript(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.startingDelayedSchemaDrop()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsuccessfulSchemaManagementCommand(java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.collectionNotProcessedByFlush(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.stalePersistenceContextInEntityEntry(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unknownJavaTypeNoEqualsHashCode(java.lang.Class)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.cacheOrCacheableAnnotationOnNonRoot(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.emptyCompositesEnabled()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.viburProviderClassNotFound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.attemptToAssociateProxyWithTwoOpenSessions(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.agroalProviderClassNotFound()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.immutableEntityUpdateQuery(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.internal.CoreMessageLogger_$logger.bytecodeEnhancementFailedUnableToGetPrivateLookupFor(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.nativeExceptionHandling51ComplianceJpaBootstrapping()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.usingJtaPlatform(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoreNotFoundWithFetchTypeLazy(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queryPlanCacheHits(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queryPlanCacheMisses(long)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoreQueuedOperationsOnMerge(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queuedOperationWhenAttachToSession(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queuedOperationWhenDetachFromSession(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.sequenceIncrementSizeMismatch(java.lang.String, int, int)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.queuedOperationWhenDetachFromSessionOnRollback(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedAttributeOverrideWithEntityInheritance(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoreImmutablePropertyModification(java.lang.String, java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.unsupportedMappedSuperclassWithEntityInheritance(java.lang.String)"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.multipleSchemaCreationSettingsDefined()"], ["void", "org.hibernate.internal.CoreMessageLogger_$logger.ignoringServiceConfigurationError(java.lang.Class<?>, java.util.ServiceConfigurationError)"], ["org.hibernate.UnresolvableObjectException", "org.hibernate.UnresolvableObjectException(java.io.Serializable, java.lang.String)"], ["void", "org.hibernate.UnresolvableObjectException.throwIfNull(java.lang.Object, java.io.Serializable, java.lang.String)"], ["java.io.Serializable", "org.hibernate.UnresolvableObjectException.getIdentifier()"], ["java.lang.String", "org.hibernate.UnresolvableObjectException.getEntityName()"], ["java.lang.String", "org.hibernate.UnresolvableObjectException.getMessage()"], ["default", "org.hibernate.SessionFactoryObserver.void sessionFactoryCreated(org.hibernate.SessionFactory)"], ["default", "org.hibernate.SessionFactoryObserver.void sessionFactoryClosing(org.hibernate.SessionFactory)"], ["default", "org.hibernate.SessionFactoryObserver.void sessionFactoryClosed(org.hibernate.SessionFactory)"], ["void", "org.hibernate.EmptyInterceptor.onDelete(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[])"], ["boolean", "org.hibernate.EmptyInterceptor.onFlushDirty(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], java.lang.String[], org.hibernate.type.Type[])"], ["boolean", "org.hibernate.EmptyInterceptor.onLoad(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[])"], ["boolean", "org.hibernate.EmptyInterceptor.onSave(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.String[], org.hibernate.type.Type[])"], ["void", "org.hibernate.EmptyInterceptor.postFlush(java.util.Iterator)"], ["void", "org.hibernate.EmptyInterceptor.preFlush(java.util.Iterator)"], ["java.lang.Boolean", "org.hibernate.EmptyInterceptor.isTransient(java.lang.Object)"], ["java.lang.Object", "org.hibernate.EmptyInterceptor.instantiate(java.lang.String, org.hibernate.EntityMode, java.io.Serializable)"], ["int[]", "org.hibernate.EmptyInterceptor.findDirty(java.lang.Object, java.io.Serializable, java.lang.Object[], java.lang.Object[], java.lang.String[], org.hibernate.type.Type[])"], ["java.lang.String", "org.hibernate.EmptyInterceptor.getEntityName(java.lang.Object)"], ["java.lang.Object", "org.hibernate.EmptyInterceptor.getEntity(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.EmptyInterceptor.afterTransactionBegin(org.hibernate.Transaction)"], ["void", "org.hibernate.EmptyInterceptor.afterTransactionCompletion(org.hibernate.Transaction)"], ["void", "org.hibernate.EmptyInterceptor.beforeTransactionCompletion(org.hibernate.Transaction)"], ["java.lang.String", "org.hibernate.EmptyInterceptor.onPrepareStatement(java.lang.String)"], ["void", "org.hibernate.EmptyInterceptor.onCollectionRemove(java.lang.Object, java.io.Serializable)"], ["void", "org.hibernate.EmptyInterceptor.onCollectionRecreate(java.lang.Object, java.io.Serializable)"], ["void", "org.hibernate.EmptyInterceptor.onCollectionUpdate(java.lang.Object, java.io.Serializable)"], ["default", "org.hibernate.resource.jdbc.spi.JdbcObserver.void jdbcReleaseRegistryResourcesStart()"], ["default", "org.hibernate.resource.jdbc.spi.JdbcObserver.void jdbcReleaseRegistryResourcesEnd()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode[]", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.values()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.valueOf(java.lang.String)"], ["org.hibernate.ConnectionAcquisitionMode", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.getAcquisitionMode()"], ["org.hibernate.ConnectionReleaseMode", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.getReleaseMode()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.interpret(java.lang.Object)"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode.interpret(org.hibernate.ConnectionAcquisitionMode, org.hibernate.ConnectionReleaseMode)"], ["org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl(java.sql.Connection, org.hibernate.resource.jdbc.ResourceRegistry)"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.getConnectionHandlingMode()"], ["boolean", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.isOpen()"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.close()"], ["boolean", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.isPhysicallyConnected()"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.getPhysicalConnection()"], ["org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.makeShareableCopy()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.deserialize(java.io.ObjectInputStream)"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.manualDisconnect()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl.manualReconnect(java.sql.Connection)"], ["org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl()"], ["org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl(org.hibernate.resource.jdbc.spi.JdbcObserver)"], ["boolean", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.hasRegisteredResources()"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(java.sql.Statement, boolean)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(java.sql.Statement)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(java.sql.ResultSet, java.sql.Statement)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(java.sql.Statement)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(java.sql.ResultSet, java.sql.Statement)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(java.sql.Blob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(java.sql.Blob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(java.sql.Clob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(java.sql.Clob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(java.sql.NClob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(java.sql.NClob)"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.cancelLastQuery()"], ["void", "org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources()"], ["org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor()"], ["org.hibernate.resource.jdbc.spi.PhysicalJdbcTransaction", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.getPhysicalJdbcTransaction()"], ["org.hibernate.resource.jdbc.ResourceRegistry", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.getResourceRegistry()"], ["void", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterStatement()"], ["void", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction()"], ["void", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin()"], ["void", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit()"], ["void", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.getStatus()"], ["org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext, org.hibernate.resource.jdbc.ResourceRegistry, org.hibernate.engine.jdbc.spi.JdbcServices)"], ["boolean", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.isOpen()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionHandlingMode()"], ["boolean", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.isPhysicallyConnected()"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterStatement()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction()"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.manualDisconnect()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.manualReconnect(java.sql.Connection)"], ["org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.makeShareableCopy()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.deserialize(java.io.ObjectInputStream, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.resource.jdbc.spi.JdbcSessionContext)"], ["java.sql.Connection", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close()"], ["void", "org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin()"], ["org.hibernate.resource.transaction.LocalSynchronizationException", "org.hibernate.resource.transaction.LocalSynchronizationException(java.lang.String, java.lang.Throwable)"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver.boolean isActive(boolean)"], ["org.hibernate.resource.transaction.spi.TransactionStatus[]", "org.hibernate.resource.transaction.spi.TransactionStatus.values()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.spi.TransactionStatus.valueOf(java.lang.String)"], ["boolean", "org.hibernate.resource.transaction.spi.TransactionStatus.isOneOf(org.hibernate.resource.transaction.spi.TransactionStatus...)"], ["boolean", "org.hibernate.resource.transaction.spi.TransactionStatus.isNotOneOf(org.hibernate.resource.transaction.spi.TransactionStatus...)"], ["boolean", "org.hibernate.resource.transaction.spi.TransactionStatus.canRollback()"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder.org.hibernate.ConnectionAcquisitionMode getDefaultConnectionAcquisitionMode()"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder.org.hibernate.ConnectionReleaseMode getDefaultConnectionReleaseMode()"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder.org.hibernate.resource.transaction.spi.DdlTransactionIsolator buildDdlTransactionIsolator(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner.void startTransactionBoundary()"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinator.boolean isTransactionActive()"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinator.boolean isTransactionActive(boolean)"], ["default", "org.hibernate.resource.transaction.spi.TransactionCoordinator.void invalidate()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.getTransactionDriverControl()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.explicitJoin()"], ["boolean", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.isJoined()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.pulse()"], ["org.hibernate.resource.transaction.spi.SynchronizationRegistry", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.getLocalSynchronizations()"], ["org.hibernate.jpa.spi.JpaCompliance", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.getJpaCompliance()"], ["boolean", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.isActive()"], ["org.hibernate.engine.transaction.spi.IsolationDelegate", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.createIsolationDelegate()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.getTransactionCoordinatorBuilder()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.setTimeOut(int)"], ["int", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.getTimeOut()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.addObserver(org.hibernate.engine.transaction.spi.TransactionObserver)"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.removeObserver(org.hibernate.engine.transaction.spi.TransactionObserver)"], ["org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl", "org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.prepare()"], ["org.hibernate.tool.schema.internal.exec.JdbcContext", "org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getJdbcContext()"], ["java.sql.Connection", "org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release()"], ["org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl(org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl, org.hibernate.resource.transaction.backend.jdbc.spi.JdbcResourceTransaction)"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.getStatus()"], ["void", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly()"], ["org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl.buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)"], ["boolean", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl.isJta()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl.getDefaultConnectionHandlingMode()"], ["org.hibernate.resource.transaction.spi.DdlTransactionIsolator", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl.buildDdlTransactionIsolator(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.engine.jdbc.spi.SqlExceptionHelper)"], ["<T> T", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(org.hibernate.jdbc.WorkExecutorVisitable<T>, boolean)"], ["<T> T", "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateCallable(java.util.concurrent.Callable<T>, boolean)"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl.buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)"], ["boolean", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl.isJta()"], ["org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl.getDefaultConnectionHandlingMode()"], ["org.hibernate.resource.transaction.spi.DdlTransactionIsolator", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl.buildDdlTransactionIsolator(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl(javax.transaction.TransactionManager)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.begin()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.commit()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.rollback()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.getStatus()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.markRollbackOnly()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterTransactionManagerImpl.setTimeOut(int)"], ["T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate$1.call()"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaPlatformInaccessibleException", "org.hibernate.resource.transaction.backend.jta.internal.JtaPlatformInaccessibleException(java.lang.String)"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaPlatformInaccessibleException", "org.hibernate.resource.transaction.backend.jta.internal.JtaPlatformInaccessibleException(java.lang.String, java.lang.Throwable)"], ["T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate$2$1.call()"], ["org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl", "org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl(org.hibernate.tool.schema.internal.exec.JdbcContext)"], ["org.hibernate.tool.schema.internal.exec.JdbcContext", "org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl.getJdbcContext()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl.prepare()"], ["java.sql.Connection", "org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl.getIsolatedConnection()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.DdlTransactionIsolatorJtaImpl.release()"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl(javax.transaction.UserTransaction)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.begin()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.commit()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.rollback()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.getStatus()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.markRollbackOnly()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapterUserTransactionImpl.setTimeOut(int)"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate(org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.engine.jdbc.spi.SqlExceptionHelper, javax.transaction.TransactionManager)"], ["<T> T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate.delegateWork(org.hibernate.jdbc.WorkExecutorVisitable<T>, boolean)"], ["<T> T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate.delegateCallable(java.util.concurrent.Callable<T>, boolean)"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl(org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl, org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl.begin()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl.commit()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl.getStatus()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization(org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinator)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.afterCompletion(int)"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl(org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackTarget)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.reset()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.synchronizationRegistered()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.afterCompletion(int)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.processAnyDelayedAfterCompletion()"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl(org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackTarget)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl.reset()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl.afterCompletion(int)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl.synchronizationRegistered()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorTrackingImpl.processAnyDelayedAfterCompletion()"], ["org.hibernate.resource.transaction.backend.jta.internal.StatusTranslator", "org.hibernate.resource.transaction.backend.jta.internal.StatusTranslator()"], ["org.hibernate.resource.transaction.spi.TransactionStatus", "org.hibernate.resource.transaction.backend.jta.internal.StatusTranslator.translate(int)"], ["T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate$2.call()"], ["org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform, boolean, boolean, org.hibernate.engine.transaction.spi.TransactionObserver...)"], ["org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinator", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getSynchronizationCallbackCoordinator()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.pulse()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.explicitJoin()"], ["boolean", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.isJoined()"], ["boolean", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.isSynchronizationRegistered()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getTransactionCoordinatorOwner()"], ["org.hibernate.jpa.spi.JpaCompliance", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getJpaCompliance()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getTransactionDriverControl()"], ["org.hibernate.resource.transaction.spi.SynchronizationRegistry", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getLocalSynchronizations()"], ["boolean", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.isActive()"], ["boolean", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.isJtaTransactionCurrentlyActive()"], ["org.hibernate.engine.transaction.spi.IsolationDelegate", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.createIsolationDelegate()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getTransactionCoordinatorBuilder()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.setTimeOut(int)"], ["int", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.getTimeOut()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.invalidate()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion()"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.afterCompletion(boolean, boolean)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.addObserver(org.hibernate.engine.transaction.spi.TransactionObserver)"], ["void", "org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.removeObserver(org.hibernate.engine.transaction.spi.TransactionObserver)"], ["T", "org.hibernate.resource.transaction.backend.jta.internal.JtaIsolationDelegate$1$1.call()"], ["org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl()"], ["int", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.getNumberOfRegisteredSynchronizations()"], ["void", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.registerSynchronization(javax.transaction.Synchronization)"], ["void", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion()"], ["void", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(int)"], ["void", "org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations()"], ["org.hibernate.resource.transaction.internal.TransactionCoordinatorBuilderInitiator", "org.hibernate.resource.transaction.internal.TransactionCoordinatorBuilderInitiator()"], ["org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder", "org.hibernate.resource.transaction.internal.TransactionCoordinatorBuilderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.resource.transaction.internal.TransactionCoordinatorBuilderInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.resource.transaction.NullSynchronizationException", "org.hibernate.resource.transaction.NullSynchronizationException()"], ["org.hibernate.resource.transaction.NullSynchronizationException", "org.hibernate.resource.transaction.NullSynchronizationException(java.lang.String)"], ["org.hibernate.resource.transaction.TransactionRequiredForJoinException", "org.hibernate.resource.transaction.TransactionRequiredForJoinException(java.lang.String)"], ["org.hibernate.resource.transaction.TransactionRequiredForJoinException", "org.hibernate.resource.transaction.TransactionRequiredForJoinException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.resource.beans.container.spi.AbstractCdiBeanContainer", "org.hibernate.resource.beans.container.spi.AbstractCdiBeanContainer()"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBean<B>", "org.hibernate.resource.beans.container.spi.AbstractCdiBeanContainer.getBean(java.lang.Class<B>, org.hibernate.resource.beans.container.spi.BeanContainer$LifecycleOptions, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBean<B>", "org.hibernate.resource.beans.container.spi.AbstractCdiBeanContainer.getBean(java.lang.String, java.lang.Class<B>, org.hibernate.resource.beans.container.spi.BeanContainer$LifecycleOptions, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["void", "org.hibernate.resource.beans.container.spi.AbstractCdiBeanContainer.stop()"], ["org.hibernate.resource.beans.container.spi.FallbackContainedBean", "org.hibernate.resource.beans.container.spi.FallbackContainedBean(java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["org.hibernate.resource.beans.container.spi.FallbackContainedBean", "org.hibernate.resource.beans.container.spi.FallbackContainedBean(java.lang.String, java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["B", "org.hibernate.resource.beans.container.spi.FallbackContainedBean.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$BeanImpl.initialize()"], ["B", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$BeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$BeanImpl.release()"], ["B", "org.hibernate.resource.beans.container.internal.ContainerManagedLifecycleStrategy$AbstractBeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.ContainerManagedLifecycleStrategy$AbstractBeanImpl.initialize()"], ["void", "org.hibernate.resource.beans.container.internal.ContainerManagedLifecycleStrategy$AbstractBeanImpl.release()"], ["javax.enterprise.inject.spi.BeanManager", "org.hibernate.resource.beans.container.internal.CdiBeanContainerImmediateAccessImpl.getUsableBeanManager()"], ["org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl(java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer, javax.enterprise.inject.spi.BeanManager)"], ["B", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl.initialize()"], ["void", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl.release()"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBeanImplementor<B>", "org.hibernate.resource.beans.container.internal.ContainerManagedLifecycleStrategy.createBean(java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer, org.hibernate.resource.beans.container.spi.BeanContainer)"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBeanImplementor<B>", "org.hibernate.resource.beans.container.internal.ContainerManagedLifecycleStrategy.createBean(java.lang.String, java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer, org.hibernate.resource.beans.container.spi.BeanContainer)"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$NamedBeanImpl.initialize()"], ["B", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$NamedBeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$NamedBeanImpl.release()"], ["javax.enterprise.inject.spi.BeanManager", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl.getUsableBeanManager()"], ["javax.enterprise.inject.spi.BeanManager", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$1.getUsableBeanManager()"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBean<B>", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$1.getBean(java.lang.Class<B>, org.hibernate.resource.beans.container.spi.BeanContainer$LifecycleOptions, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBean<B>", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$1.getBean(java.lang.String, java.lang.Class<B>, org.hibernate.resource.beans.container.spi.BeanContainer$LifecycleOptions, org.hibernate.resource.beans.spi.BeanInstanceProducer)"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$1.stop()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$BeanImpl.initialize()"], ["B", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$BeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl$BeanImpl.release()"], ["B", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl.initialize()"], ["void", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl.release()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$NamedBeanImpl.initialize()"], ["B", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$NamedBeanImpl.getBeanInstance()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerDelayedAccessImpl$NamedBeanImpl.release()"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl.beanManagerInitialized(javax.enterprise.inject.spi.BeanManager)"], ["void", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl.beforeBeanManagerDestroyed(javax.enterprise.inject.spi.BeanManager)"], ["javax.enterprise.inject.spi.BeanManager", "org.hibernate.resource.beans.container.internal.CdiBeanContainerExtendedAccessImpl.getUsableBeanManager()"], ["java.lang.String", "org.hibernate.resource.beans.container.internal.NamedBeanQualifier.value()"], ["org.hibernate.resource.beans.container.internal.NotYetReadyException", "org.hibernate.resource.beans.container.internal.NotYetReadyException(java.lang.Throwable)"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBeanImplementor<B>", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy.createBean(java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer, org.hibernate.resource.beans.container.spi.BeanContainer)"], ["<B> org.hibernate.resource.beans.container.spi.ContainedBeanImplementor<B>", "org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy.createBean(java.lang.String, java.lang.Class<B>, org.hibernate.resource.beans.spi.BeanInstanceProducer, org.hibernate.resource.beans.container.spi.BeanContainer)"], ["org.hibernate.resource.beans.container.internal.NoSuchBeanException", "org.hibernate.resource.beans.container.internal.NoSuchBeanException(java.lang.Throwable)"], ["org.hibernate.resource.beans.container.internal.NoSuchBeanException", "org.hibernate.resource.beans.container.internal.NoSuchBeanException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.resource.beans.container.internal.CdiBeanContainerBuilder", "org.hibernate.resource.beans.container.internal.CdiBeanContainerBuilder()"], ["org.hibernate.resource.beans.container.spi.BeanContainer", "org.hibernate.resource.beans.container.internal.CdiBeanContainerBuilder.fromBeanManagerReference(java.lang.Object, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator", "org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator()"], ["org.hibernate.resource.beans.spi.ManagedBeanRegistry", "org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["java.lang.Class", "org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator.cdiBeanManagerClass(org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.service.Service", "org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.resource.beans.spi.ProvidedInstanceManagedBeanImpl", "org.hibernate.resource.beans.spi.ProvidedInstanceManagedBeanImpl(T)"], ["T", "org.hibernate.resource.beans.spi.ProvidedInstanceManagedBeanImpl.getBeanInstance()"], ["B", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter.getBeanInstance()"], ["org.hibernate.resource.beans.internal.BeansMessageLogger_$logger", "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger.beanManagerButCdiNotAvailable(java.lang.Object)"], ["void", "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger.noBeanManagerButCdiAvailable()"], ["void", "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger.stoppingManagedBeanRegistry(org.hibernate.resource.beans.spi.ManagedBeanRegistry)"], ["void", "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger.stoppingBeanContainer(org.hibernate.resource.beans.container.spi.BeanContainer)"], ["<B> B", "org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer.produceBeanInstance(java.lang.Class<B>)"], ["<B> B", "org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer.produceBeanInstance(java.lang.String, java.lang.Class<B>)"], ["org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl(org.hibernate.resource.beans.container.spi.BeanContainer)"], ["org.hibernate.resource.beans.container.spi.BeanContainer", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.getBeanContainer()"], ["boolean", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.canUseCachedReferences()"], ["boolean", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.useJpaCompliantCreation()"], ["<T> org.hibernate.resource.beans.spi.ManagedBean<T>", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.getBean(java.lang.Class<T>)"], ["<T> org.hibernate.resource.beans.spi.ManagedBean<T>", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.getBean(java.lang.String, java.lang.Class<T>)"], ["void", "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.stop()"], ["java.lang.String", "org.hibernate.resource.beans.internal.Helper.determineBeanCacheKey(java.lang.Class)"], ["java.lang.String", "org.hibernate.resource.beans.internal.Helper.determineBeanCacheKey(java.lang.String, java.lang.Class)"], ["org.hibernate.resource.beans.container.spi.BeanLifecycleStrategy", "org.hibernate.resource.beans.internal.Helper.getLifecycleStrategy(boolean)"], ["java.lang.String", "org.hibernate.Version.getVersionString()"], ["void", "org.hibernate.Version.logVersion()"], ["void", "org.hibernate.Version.main(java.lang.String[])"], ["org.hibernate.TypeMismatchException", "org.hibernate.TypeMismatchException(java.lang.String)"], ["org.hibernate.TransactionException", "org.hibernate.TransactionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.TransactionException", "org.hibernate.TransactionException(java.lang.String)"], ["boolean", "org.hibernate.ReplicationMode$3.shouldOverwriteCurrentVersion(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.type.VersionType)"], ["org.hibernate.action.internal.EntityActionVetoException", "org.hibernate.action.internal.EntityActionVetoException(java.lang.String, org.hibernate.action.internal.EntityAction)"], ["org.hibernate.action.internal.EntityAction", "org.hibernate.action.internal.EntityActionVetoException.getEntityAction()"], ["org.hibernate.action.internal.CollectionRemoveAction", "org.hibernate.action.internal.CollectionRemoveAction(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.action.internal.CollectionRemoveAction", "org.hibernate.action.internal.CollectionRemoveAction(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionRemoveAction.execute()"], ["org.hibernate.action.internal.EntityIdentityInsertAction", "org.hibernate.action.internal.EntityIdentityInsertAction(java.lang.Object[], java.lang.Object, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor, boolean)"], ["void", "org.hibernate.action.internal.EntityIdentityInsertAction.execute()"], ["boolean", "org.hibernate.action.internal.EntityIdentityInsertAction.needsAfterTransactionCompletion()"], ["void", "org.hibernate.action.internal.EntityIdentityInsertAction.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.action.internal.EntityIdentityInsertAction.getGeneratedId()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.action.internal.EntityIdentityInsertAction.getDelayedEntityKey()"], ["boolean", "org.hibernate.action.internal.EntityIdentityInsertAction.isEarlyInsert()"], ["void", "org.hibernate.action.internal.BulkOperationCleanupAction$1.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.action.internal.EntityAction.isVeto()"], ["void", "org.hibernate.action.internal.EntityAction.setVeto(boolean)"], ["org.hibernate.action.spi.BeforeTransactionCompletionProcess", "org.hibernate.action.internal.EntityAction.getBeforeTransactionCompletionProcess()"], ["org.hibernate.action.spi.AfterTransactionCompletionProcess", "org.hibernate.action.internal.EntityAction.getAfterTransactionCompletionProcess()"], ["java.lang.String", "org.hibernate.action.internal.EntityAction.getEntityName()"], ["java.io.Serializable", "org.hibernate.action.internal.EntityAction.getId()"], ["org.hibernate.action.internal.DelayedPostInsertIdentifier", "org.hibernate.action.internal.EntityAction.getDelayedId()"], ["java.lang.Object", "org.hibernate.action.internal.EntityAction.getInstance()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.action.internal.EntityAction.getSession()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.action.internal.EntityAction.getPersister()"], ["java.io.Serializable[]", "org.hibernate.action.internal.EntityAction.getPropertySpaces()"], ["void", "org.hibernate.action.internal.EntityAction.beforeExecutions()"], ["java.lang.String", "org.hibernate.action.internal.EntityAction.toString()"], ["int", "org.hibernate.action.internal.EntityAction.compareTo(java.lang.Object)"], ["void", "org.hibernate.action.internal.EntityAction.afterDeserialize(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.action.internal.EntityUpdateAction", "org.hibernate.action.internal.EntityUpdateAction(java.io.Serializable, java.lang.Object[], int[], boolean, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.EntityUpdateAction.execute()"], ["void", "org.hibernate.action.internal.EntityUpdateAction.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.action.internal.QueuedOperationCollectionAction", "org.hibernate.action.internal.QueuedOperationCollectionAction(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.QueuedOperationCollectionAction.execute()"], ["org.hibernate.action.internal.BulkOperationCleanupAction$NaturalIdCleanup", "org.hibernate.action.internal.BulkOperationCleanupAction$NaturalIdCleanup(org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionAction.afterDeserialize(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionAction.beforeExecutions()"], ["org.hibernate.action.spi.BeforeTransactionCompletionProcess", "org.hibernate.action.internal.CollectionAction.getBeforeTransactionCompletionProcess()"], ["org.hibernate.action.spi.AfterTransactionCompletionProcess", "org.hibernate.action.internal.CollectionAction.getAfterTransactionCompletionProcess()"], ["java.io.Serializable[]", "org.hibernate.action.internal.CollectionAction.getPropertySpaces()"], ["java.lang.String", "org.hibernate.action.internal.CollectionAction.toString()"], ["int", "org.hibernate.action.internal.CollectionAction.compareTo(java.lang.Object)"], ["org.hibernate.action.internal.CollectionUpdateAction", "org.hibernate.action.internal.CollectionUpdateAction(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionUpdateAction.execute()"], ["org.hibernate.action.internal.BulkOperationCleanupAction", "org.hibernate.action.internal.BulkOperationCleanupAction(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.entity.Queryable...)"], ["org.hibernate.action.internal.BulkOperationCleanupAction", "org.hibernate.action.internal.BulkOperationCleanupAction(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.Set)"], ["java.io.Serializable[]", "org.hibernate.action.internal.BulkOperationCleanupAction.getPropertySpaces()"], ["org.hibernate.action.spi.BeforeTransactionCompletionProcess", "org.hibernate.action.internal.BulkOperationCleanupAction.getBeforeTransactionCompletionProcess()"], ["org.hibernate.action.spi.AfterTransactionCompletionProcess", "org.hibernate.action.internal.BulkOperationCleanupAction.getAfterTransactionCompletionProcess()"], ["void", "org.hibernate.action.internal.BulkOperationCleanupAction.beforeExecutions()"], ["void", "org.hibernate.action.internal.BulkOperationCleanupAction.execute()"], ["void", "org.hibernate.action.internal.BulkOperationCleanupAction.afterDeserialize(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.action.internal.EntityVerifyVersionProcess", "org.hibernate.action.internal.EntityVerifyVersionProcess(java.lang.Object)"], ["void", "org.hibernate.action.internal.EntityVerifyVersionProcess.doBeforeTransactionCompletion(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.action.internal.EntityInsertAction", "org.hibernate.action.internal.EntityInsertAction(java.io.Serializable, java.lang.Object[], java.lang.Object, java.lang.Object, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.action.internal.EntityInsertAction.isEarlyInsert()"], ["void", "org.hibernate.action.internal.EntityInsertAction.execute()"], ["void", "org.hibernate.action.internal.EntityInsertAction.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionAction$CacheCleanupProcess.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.action.internal.UnresolvedEntityInsertActions", "org.hibernate.action.internal.UnresolvedEntityInsertActions()"], ["void", "org.hibernate.action.internal.UnresolvedEntityInsertActions.addUnresolvedEntityInsertAction(org.hibernate.action.internal.AbstractEntityInsertAction, org.hibernate.engine.internal.NonNullableTransientDependencies)"], ["void", "org.hibernate.action.internal.UnresolvedEntityInsertActions.checkNoUnresolvedActionsAfterOperation()"], ["boolean", "org.hibernate.action.internal.UnresolvedEntityInsertActions.isEmpty()"], ["void", "org.hibernate.action.internal.UnresolvedEntityInsertActions.clear()"], ["java.lang.String", "org.hibernate.action.internal.UnresolvedEntityInsertActions.toString()"], ["void", "org.hibernate.action.internal.UnresolvedEntityInsertActions.serialize(java.io.ObjectOutputStream)"], ["org.hibernate.action.internal.UnresolvedEntityInsertActions", "org.hibernate.action.internal.UnresolvedEntityInsertActions.deserialize(java.io.ObjectInputStream, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.action.internal.CollectionRecreateAction", "org.hibernate.action.internal.CollectionRecreateAction(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.CollectionRecreateAction.execute()"], ["org.hibernate.action.internal.DelayedPostInsertIdentifier", "org.hibernate.action.internal.DelayedPostInsertIdentifier()"], ["boolean", "org.hibernate.action.internal.DelayedPostInsertIdentifier.equals(java.lang.Object)"], ["int", "org.hibernate.action.internal.DelayedPostInsertIdentifier.hashCode()"], ["java.lang.String", "org.hibernate.action.internal.DelayedPostInsertIdentifier.toString()"], ["int", "org.hibernate.action.internal.DelayedPostInsertIdentifier.compareTo(org.hibernate.action.internal.DelayedPostInsertIdentifier)"], ["int", "org.hibernate.action.internal.DelayedPostInsertIdentifier.compareTo(java.lang.Object)"], ["org.hibernate.action.internal.OrphanRemovalAction", "org.hibernate.action.internal.OrphanRemovalAction(java.io.Serializable, java.lang.Object[], java.lang.Object, java.lang.Object, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.action.internal.EntityDeleteAction", "org.hibernate.action.internal.EntityDeleteAction(java.io.Serializable, java.lang.Object[], java.lang.Object, java.lang.Object, org.hibernate.persister.entity.EntityPersister, boolean, org.hibernate.engine.spi.SessionImplementor)"], ["void", "org.hibernate.action.internal.EntityDeleteAction.execute()"], ["void", "org.hibernate.action.internal.EntityDeleteAction.doAfterTransactionCompletion(boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.action.internal.AbstractEntityInsertAction.getState()"], ["org.hibernate.engine.internal.NonNullableTransientDependencies", "org.hibernate.action.internal.AbstractEntityInsertAction.findNonNullableTransientEntities()"], ["void", "org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged()"], ["void", "org.hibernate.action.internal.AbstractEntityInsertAction.afterDeserialize(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.action.internal.AbstractEntityInsertAction.handleNaturalIdPostSaveNotifications(java.io.Serializable)"], ["org.hibernate.action.internal.EntityIncrementVersionProcess", "org.hibernate.action.internal.EntityIncrementVersionProcess(java.lang.Object)"], ["void", "org.hibernate.action.internal.EntityIncrementVersionProcess.doBeforeTransactionCompletion(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.OptimisticLockException", "org.hibernate.OptimisticLockException(java.lang.Object, java.lang.String)"], ["org.hibernate.param.NamedParameterSpecification", "org.hibernate.param.NamedParameterSpecification(int, int, java.lang.String)"], ["int", "org.hibernate.param.NamedParameterSpecification.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["java.lang.String", "org.hibernate.param.NamedParameterSpecification.renderDisplayInfo()"], ["java.lang.String", "org.hibernate.param.NamedParameterSpecification.getName()"], ["org.hibernate.param.PositionalParameterSpecification", "org.hibernate.param.PositionalParameterSpecification(int, int, int, int)"], ["int", "org.hibernate.param.PositionalParameterSpecification.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["java.lang.String", "org.hibernate.param.PositionalParameterSpecification.renderDisplayInfo()"], ["int", "org.hibernate.param.PositionalParameterSpecification.getLabel()"], ["org.hibernate.param.DynamicFilterParameterSpecification", "org.hibernate.param.DynamicFilterParameterSpecification(java.lang.String, java.lang.String, org.hibernate.type.Type)"], ["int", "org.hibernate.param.DynamicFilterParameterSpecification.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.type.Type", "org.hibernate.param.DynamicFilterParameterSpecification.getExpectedType()"], ["void", "org.hibernate.param.DynamicFilterParameterSpecification.setExpectedType(org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.param.DynamicFilterParameterSpecification.renderDisplayInfo()"], ["int", "org.hibernate.param.AbstractExplicitParameterSpecification.getSourceLine()"], ["int", "org.hibernate.param.AbstractExplicitParameterSpecification.getSourceColumn()"], ["org.hibernate.type.Type", "org.hibernate.param.AbstractExplicitParameterSpecification.getExpectedType()"], ["void", "org.hibernate.param.AbstractExplicitParameterSpecification.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.param.VersionTypeSeedParameterSpecification", "org.hibernate.param.VersionTypeSeedParameterSpecification(org.hibernate.type.VersionType)"], ["int", "org.hibernate.param.VersionTypeSeedParameterSpecification.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.type.Type", "org.hibernate.param.VersionTypeSeedParameterSpecification.getExpectedType()"], ["void", "org.hibernate.param.VersionTypeSeedParameterSpecification.setExpectedType(org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.param.VersionTypeSeedParameterSpecification.renderDisplayInfo()"], ["org.hibernate.param.CollectionFilterKeyParameterSpecification", "org.hibernate.param.CollectionFilterKeyParameterSpecification(java.lang.String, org.hibernate.type.Type)"], ["int", "org.hibernate.param.CollectionFilterKeyParameterSpecification.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.type.Type", "org.hibernate.param.CollectionFilterKeyParameterSpecification.getExpectedType()"], ["void", "org.hibernate.param.CollectionFilterKeyParameterSpecification.setExpectedType(org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.param.CollectionFilterKeyParameterSpecification.renderDisplayInfo()"], ["org.hibernate.jdbc.TooManyRowsAffectedException", "org.hibernate.jdbc.TooManyRowsAffectedException(java.lang.String, int, int)"], ["int", "org.hibernate.jdbc.TooManyRowsAffectedException.getExpectedRowCount()"], ["int", "org.hibernate.jdbc.TooManyRowsAffectedException.getActualRowCount()"], ["org.hibernate.jdbc.AbstractWork", "org.hibernate.jdbc.AbstractWork()"], ["java.lang.Void", "org.hibernate.jdbc.AbstractWork.accept(org.hibernate.jdbc.WorkExecutor<java.lang.Void>, java.sql.Connection)"], ["java.lang.Object", "org.hibernate.jdbc.AbstractWork.accept(org.hibernate.jdbc.WorkExecutor, java.sql.Connection)"], ["org.hibernate.jdbc.AbstractReturningWork", "org.hibernate.jdbc.AbstractReturningWork()"], ["T", "org.hibernate.jdbc.AbstractReturningWork.accept(org.hibernate.jdbc.WorkExecutor<T>, java.sql.Connection)"], ["org.hibernate.jdbc.BatchedTooManyRowsAffectedException", "org.hibernate.jdbc.BatchedTooManyRowsAffectedException(java.lang.String, int, int, int)"], ["int", "org.hibernate.jdbc.BatchedTooManyRowsAffectedException.getBatchPosition()"], ["void", "org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(int, java.sql.PreparedStatement, int)"], ["int", "org.hibernate.jdbc.Expectations$BasicExpectation.prepare(java.sql.PreparedStatement)"], ["boolean", "org.hibernate.jdbc.Expectations$BasicExpectation.canBeBatched()"], ["int", "org.hibernate.jdbc.Expectations$BasicParamExpectation.prepare(java.sql.PreparedStatement)"], ["boolean", "org.hibernate.jdbc.Expectations$BasicParamExpectation.canBeBatched()"], ["org.hibernate.jdbc.WorkExecutor", "org.hibernate.jdbc.WorkExecutor()"], ["<T> T", "org.hibernate.jdbc.WorkExecutor.executeWork(org.hibernate.jdbc.Work, java.sql.Connection)"], ["<T> T", "org.hibernate.jdbc.WorkExecutor.executeReturningWork(org.hibernate.jdbc.ReturningWork<T>, java.sql.Connection)"], ["void", "org.hibernate.jdbc.Expectations$1.verifyOutcome(int, java.sql.PreparedStatement, int)"], ["int", "org.hibernate.jdbc.Expectations$1.prepare(java.sql.PreparedStatement)"], ["boolean", "org.hibernate.jdbc.Expectations$1.canBeBatched()"], ["org.hibernate.jdbc.BatchFailedException", "org.hibernate.jdbc.BatchFailedException(java.lang.String)"], ["org.hibernate.jdbc.BatchFailedException", "org.hibernate.jdbc.BatchFailedException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.jdbc.Expectation", "org.hibernate.jdbc.Expectations.appropriateExpectation(org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["org.hibernate.HibernateException", "org.hibernate.HibernateException(java.lang.String)"], ["org.hibernate.HibernateException", "org.hibernate.HibernateException(java.lang.Throwable)"], ["org.hibernate.HibernateException", "org.hibernate.HibernateException(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(java.lang.String, java.io.Serializable)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(org.hibernate.persister.entity.EntityPersister, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(org.hibernate.persister.entity.EntityPersister, java.lang.Object, org.hibernate.type.Type, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(org.hibernate.persister.entity.EntityPersister, java.io.Serializable[], org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(org.hibernate.persister.entity.EntityPersister)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.infoString(java.lang.String, java.lang.String, java.lang.Object)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.collectionInfoString(org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.collectionInfoString(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable[], org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.collectionInfoString(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.pretty.MessageHelper.collectionInfoString(java.lang.String, java.io.Serializable)"], ["default", "org.hibernate.SharedSessionBuilder.T transactionContext()"], ["default", "org.hibernate.SharedSessionBuilder.T flushBeforeCompletion()"], ["default", "org.hibernate.SharedSessionBuilder.T flushBeforeCompletion(boolean)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder flushBeforeCompletion(boolean)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder connectionReleaseMode(org.hibernate.ConnectionReleaseMode)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder autoClose(boolean)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder autoJoinTransactions(boolean)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder connection(java.sql.Connection)"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder noInterceptor()"], ["default", "org.hibernate.SharedSessionBuilder.org.hibernate.SessionBuilder interceptor(org.hibernate.Interceptor)"], ["default", "org.hibernate.SessionBuilder.T setQueryParameterValidation(boolean)"], ["default", "org.hibernate.SessionBuilder.T flushBeforeCompletion(boolean)"], ["org.hibernate.jmx.internal.DisabledJmxServiceImpl", "org.hibernate.jmx.internal.DisabledJmxServiceImpl()"], ["void", "org.hibernate.jmx.internal.DisabledJmxServiceImpl.registerService(org.hibernate.service.spi.Manageable, java.lang.Class)"], ["void", "org.hibernate.jmx.internal.DisabledJmxServiceImpl.registerMBean(javax.management.ObjectName, java.lang.Object)"], ["org.hibernate.jmx.internal.JmxServiceInitiator", "org.hibernate.jmx.internal.JmxServiceInitiator()"], ["org.hibernate.jmx.spi.JmxService", "org.hibernate.jmx.internal.JmxServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.jmx.internal.JmxServiceInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.jmx.internal.JmxServiceImpl", "org.hibernate.jmx.internal.JmxServiceImpl(java.util.Map)"], ["void", "org.hibernate.jmx.internal.JmxServiceImpl.stop()"], ["void", "org.hibernate.jmx.internal.JmxServiceImpl.registerService(org.hibernate.service.spi.Manageable, java.lang.Class<? extends org.hibernate.service.Service>)"], ["void", "org.hibernate.jmx.internal.JmxServiceImpl.registerMBean(javax.management.ObjectName, java.lang.Object)"], ["org.hibernate.HibernateError", "org.hibernate.HibernateError(java.lang.String)"], ["org.hibernate.HibernateError", "org.hibernate.HibernateError(java.lang.String, java.lang.Throwable)"], ["org.hibernate.MappingException", "org.hibernate.MappingException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.MappingException", "org.hibernate.MappingException(java.lang.Throwable)"], ["org.hibernate.MappingException", "org.hibernate.MappingException(java.lang.String)"], ["org.hibernate.NonUniqueObjectException", "org.hibernate.NonUniqueObjectException(java.lang.String, java.io.Serializable, java.lang.String)"], ["org.hibernate.NonUniqueObjectException", "org.hibernate.NonUniqueObjectException(java.io.Serializable, java.lang.String)"], ["java.lang.String", "org.hibernate.NonUniqueObjectException.getEntityName()"], ["java.io.Serializable", "org.hibernate.NonUniqueObjectException.getIdentifier()"], ["java.lang.String", "org.hibernate.NonUniqueObjectException.getMessage()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions(org.hibernate.LockMode)"], ["org.hibernate.LockMode", "org.hibernate.LockOptions.getLockMode()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.setAliasSpecificLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.LockMode", "org.hibernate.LockOptions.getAliasSpecificLockMode(java.lang.String)"], ["org.hibernate.LockMode", "org.hibernate.LockOptions.getEffectiveLockMode(java.lang.String)"], ["boolean", "org.hibernate.LockOptions.hasAliasSpecificLockModes()"], ["int", "org.hibernate.LockOptions.getAliasLockCount()"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, org.hibernate.LockMode>>", "org.hibernate.LockOptions.getAliasLockIterator()"], ["java.lang.Iterable<java.util.Map$Entry<java.lang.String, org.hibernate.LockMode>>", "org.hibernate.LockOptions.getAliasSpecificLocks()"], ["org.hibernate.LockMode", "org.hibernate.LockOptions.findGreatestLockMode()"], ["int", "org.hibernate.LockOptions.getTimeOut()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.setTimeOut(int)"], ["boolean", "org.hibernate.LockOptions.getScope()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.setScope(boolean)"], ["java.lang.Boolean", "org.hibernate.LockOptions.getFollowOnLocking()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.setFollowOnLocking(java.lang.Boolean)"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.makeCopy()"], ["org.hibernate.LockOptions", "org.hibernate.LockOptions.copy(org.hibernate.LockOptions, org.hibernate.LockOptions)"], ["org.hibernate.FetchMode[]", "org.hibernate.FetchMode.values()"], ["org.hibernate.FetchMode", "org.hibernate.FetchMode.valueOf(java.lang.String)"], ["org.hibernate.ReplicationMode[]", "org.hibernate.ReplicationMode.values()"], ["org.hibernate.ReplicationMode", "org.hibernate.ReplicationMode.valueOf(java.lang.String)"], ["org.hibernate.hql.spi.id.AbstractMultiTableBulkIdStrategyImpl", "org.hibernate.hql.spi.id.AbstractMultiTableBulkIdStrategyImpl(org.hibernate.hql.spi.id.IdTableSupport)"], ["org.hibernate.hql.spi.id.IdTableSupport", "org.hibernate.hql.spi.id.AbstractMultiTableBulkIdStrategyImpl.getIdTableSupport()"], ["void", "org.hibernate.hql.spi.id.AbstractMultiTableBulkIdStrategyImpl.prepare(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.hql.spi.id.TableBasedUpdateHandlerImpl", "org.hibernate.hql.spi.id.TableBasedUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.hql.spi.id.IdTableInfo)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.spi.id.TableBasedUpdateHandlerImpl.getTargetedQueryable()"], ["java.lang.String[]", "org.hibernate.hql.spi.id.TableBasedUpdateHandlerImpl.getSqlStatements()"], ["int", "org.hibernate.hql.spi.id.TableBasedUpdateHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.hql.spi.id.AbstractTableBasedBulkIdHandler", "org.hibernate.hql.spi.id.AbstractTableBasedBulkIdHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.type.Type", "org.hibernate.hql.spi.id.inline.IdsClauseBuilder.getIdentifierType()"], ["org.hibernate.type.TypeResolver", "org.hibernate.hql.spi.id.inline.IdsClauseBuilder.getTypeResolver()"], ["org.hibernate.hql.spi.id.inline.AbstractInlineIdsBulkIdHandler", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsBulkIdHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsIdsInClauseDeleteHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsIdsInClauseDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy()"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy.prepare(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.AbstractInlineIdsDeleteHandlerImpl", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.String[]", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsDeleteHandlerImpl.getSqlStatements()"], ["int", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsDeleteHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.hql.spi.id.inline.InlineIdsInClauseUpdateHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListUpdateHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListDeleteHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy()"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy.prepare(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.AbstractInlineIdsUpdateHandlerImpl", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.String[]", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsUpdateHandlerImpl.getSqlStatements()"], ["int", "org.hibernate.hql.spi.id.inline.AbstractInlineIdsUpdateHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.hql.spi.id.inline.InlineIdsIdsOrClauseDeleteHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsIdsOrClauseDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsOrClauseUpdateHandlerImpl", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListBuilder", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListBuilder(org.hibernate.dialect.Dialect, org.hibernate.type.Type, org.hibernate.type.TypeResolver, java.lang.String[], java.util.List<java.lang.Object[]>)"], ["java.lang.String", "org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValuesListBuilder.toStatement()"], ["org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBuilder", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBuilder(org.hibernate.dialect.Dialect, org.hibernate.type.Type, org.hibernate.type.TypeResolver, java.lang.String[], java.util.List<java.lang.Object[]>)"], ["java.lang.String", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBuilder.toStatement()"], ["org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy()"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy.prepare(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["void", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.inline.InlineIdsInClauseBuilder", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBuilder(org.hibernate.dialect.Dialect, org.hibernate.type.Type, org.hibernate.type.TypeResolver, java.lang.String[], java.util.List<java.lang.Object[]>)"], ["java.lang.String", "org.hibernate.hql.spi.id.inline.InlineIdsInClauseBuilder.toStatement()"], ["org.hibernate.hql.spi.id.persistent.UpdateHandlerImpl", "org.hibernate.hql.spi.id.persistent.UpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.hql.spi.id.IdTableInfo)"], ["org.hibernate.hql.spi.id.persistent.IdTableInfoImpl", "org.hibernate.hql.spi.id.persistent.IdTableInfoImpl(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.spi.id.persistent.IdTableInfoImpl.getQualifiedIdTableName()"], ["void", "org.hibernate.hql.spi.id.persistent.Helper.bindSessionIdentifier(java.sql.PreparedStatement, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["void", "org.hibernate.hql.spi.id.persistent.Helper.cleanUpRows(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.hql.spi.id.persistent.DeleteHandlerImpl", "org.hibernate.hql.spi.id.persistent.DeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.hql.spi.id.IdTableInfo)"], ["org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy", "org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy()"], ["org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy", "org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy(org.hibernate.hql.spi.id.IdTableSupport)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["void", "org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.AbstractTableBasedBulkIdHandler$ProcessedWhereClause", "org.hibernate.hql.spi.id.AbstractTableBasedBulkIdHandler$ProcessedWhereClause(java.lang.String, java.util.List<org.hibernate.param.ParameterSpecification>)"], ["java.lang.String", "org.hibernate.hql.spi.id.AbstractTableBasedBulkIdHandler$ProcessedWhereClause.getUserWhereClauseFragment()"], ["org.hibernate.hql.spi.id.IdTableSupportStandardImpl", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl()"], ["java.lang.String", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl.getCreateIdTableStatementOptions()"], ["java.lang.String", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl.getDropIdTableCommand()"], ["java.lang.String", "org.hibernate.hql.spi.id.IdTableSupportStandardImpl.getTruncateIdTableCommand()"], ["org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy()"], ["org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy(org.hibernate.hql.spi.id.IdTableSupport, org.hibernate.hql.spi.id.local.AfterUseAction, org.hibernate.boot.TempTableDdlTransactionHandling)"], ["void", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["void", "org.hibernate.hql.spi.id.local.Helper$TemporaryTableDropWork.execute(java.sql.Connection)"], ["void", "org.hibernate.hql.spi.id.local.Helper$TemporaryTableCreationWork.execute(java.sql.Connection)"], ["org.hibernate.hql.spi.id.local.AfterUseAction[]", "org.hibernate.hql.spi.id.local.AfterUseAction.values()"], ["org.hibernate.hql.spi.id.local.AfterUseAction", "org.hibernate.hql.spi.id.local.AfterUseAction.valueOf(java.lang.String)"], ["boolean", "org.hibernate.hql.spi.id.local.Helper$1.doProcess()"], ["void", "org.hibernate.hql.spi.id.local.Helper$1.prepare(java.sql.SQLWarning)"], ["org.hibernate.hql.spi.id.local.IdTableInfoImpl", "org.hibernate.hql.spi.id.local.IdTableInfoImpl(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.spi.id.local.IdTableInfoImpl.getQualifiedIdTableName()"], ["java.lang.String", "org.hibernate.hql.spi.id.local.IdTableInfoImpl.getIdTableCreationStatement()"], ["java.lang.String", "org.hibernate.hql.spi.id.local.IdTableInfoImpl.getIdTableDropStatement()"], ["void", "org.hibernate.hql.spi.id.local.Helper.createTempTable(org.hibernate.hql.spi.id.local.IdTableInfoImpl, org.hibernate.boot.TempTableDdlTransactionHandling, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy$1.getCreateIdTableCommand()"], ["org.hibernate.hql.spi.id.cte.AbstractCteValuesListBulkIdHandler", "org.hibernate.hql.spi.id.cte.AbstractCteValuesListBulkIdHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, java.lang.String, java.lang.String)"], ["org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl", "org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl", "org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, java.lang.String, java.lang.String)"], ["int", "org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["java.lang.String[]", "org.hibernate.hql.spi.id.cte.CteValuesListDeleteHandlerImpl.getSqlStatements()"], ["org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl", "org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl", "org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl.getSqlStatements()"], ["int", "org.hibernate.hql.spi.id.cte.CteValuesListUpdateHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.hql.spi.id.cte.CteValuesListBuilder", "org.hibernate.hql.spi.id.cte.CteValuesListBuilder(java.lang.String, java.lang.String[], java.util.List<java.lang.Object[]>)"], ["java.lang.String", "org.hibernate.hql.spi.id.cte.CteValuesListBuilder.toStatement(java.lang.String)"], ["org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy", "org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy()"], ["void", "org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy.prepare(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess, org.hibernate.boot.spi.MetadataImplementor, org.hibernate.boot.spi.SessionFactoryOptions)"], ["void", "org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.cte.CteValuesListBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy()"], ["org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy(org.hibernate.hql.spi.id.local.AfterUseAction)"], ["org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy(org.hibernate.hql.spi.id.IdTableSupport, org.hibernate.hql.spi.id.local.AfterUseAction)"], ["void", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy.release(org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$UpdateHandler", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy.buildUpdateHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy$DeleteHandler", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy.buildDeleteHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.String", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy$1.getDropIdTableCommand()"], ["org.hibernate.hql.spi.id.global.IdTableInfoImpl", "org.hibernate.hql.spi.id.global.IdTableInfoImpl(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.spi.id.global.IdTableInfoImpl.getQualifiedIdTableName()"], ["org.hibernate.hql.spi.id.TableBasedDeleteHandlerImpl", "org.hibernate.hql.spi.id.TableBasedDeleteHandlerImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.hql.spi.id.IdTableInfo)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.spi.id.TableBasedDeleteHandlerImpl.getTargetedQueryable()"], ["java.lang.String[]", "org.hibernate.hql.spi.id.TableBasedDeleteHandlerImpl.getSqlStatements()"], ["int", "org.hibernate.hql.spi.id.TableBasedDeleteHandlerImpl.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.hql.spi.id.AbstractIdsBulkIdHandler", "org.hibernate.hql.spi.id.AbstractIdsBulkIdHandler(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.spi.id.AbstractIdsBulkIdHandler.getTargetedQueryable()"], ["boolean", "org.hibernate.hql.spi.id.IdTableHelper.needsIdTable(org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.hql.spi.id.IdTableHelper.executeIdTableCreationStatements(java.util.List<java.lang.String>, org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["void", "org.hibernate.hql.spi.id.IdTableHelper.executeIdTableDropStatements(java.lang.String[], org.hibernate.engine.jdbc.spi.JdbcServices, org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess)"], ["default", "org.hibernate.hql.spi.QueryTranslator.boolean isUpdateStatement()"], ["boolean", "org.hibernate.hql.internal.CollectionProperties.isCollectionProperty(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.CollectionProperties.getNormalizedPropertyName(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.CollectionProperties.isAnyCollectionProperty(java.lang.String)"], ["org.hibernate.hql.internal.ast.exec.MultiTableUpdateExecutor", "org.hibernate.hql.internal.ast.exec.MultiTableUpdateExecutor(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.exec.MultiTableUpdateExecutor.getSqlStatements()"], ["int", "org.hibernate.hql.internal.ast.exec.MultiTableUpdateExecutor.execute(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.hql.internal.ast.exec.DeleteExecutor", "org.hibernate.hql.internal.ast.exec.DeleteExecutor(org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.persister.entity.Queryable)"], ["int", "org.hibernate.hql.internal.ast.exec.DeleteExecutor.execute(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.hql.internal.ast.exec.MultiTableDeleteExecutor", "org.hibernate.hql.internal.ast.exec.MultiTableDeleteExecutor(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.exec.MultiTableDeleteExecutor.getSqlStatements()"], ["int", "org.hibernate.hql.internal.ast.exec.MultiTableDeleteExecutor.execute(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.hql.internal.ast.exec.BasicExecutor", "org.hibernate.hql.internal.ast.exec.BasicExecutor(org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.persister.entity.Queryable)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.exec.BasicExecutor.getSqlStatements()"], ["int", "org.hibernate.hql.internal.ast.exec.BasicExecutor.execute(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$DefaultWriter.clause(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$DefaultWriter.betweenFunctionArguments()"], ["java.util.Map", "org.hibernate.hql.internal.ast.ParameterTranslationsImpl.getNamedParameterInformationMap()"], ["java.util.Map", "org.hibernate.hql.internal.ast.ParameterTranslationsImpl.getPositionalParameterInformationMap()"], ["org.hibernate.hql.spi.PositionalParameterInformation", "org.hibernate.hql.internal.ast.ParameterTranslationsImpl.getPositionalParameterInformation(int)"], ["org.hibernate.hql.spi.NamedParameterInformation", "org.hibernate.hql.internal.ast.ParameterTranslationsImpl.getNamedParameterInformation(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.util.JoinProcessor$1.includeSubclasses(java.lang.String)"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalFormatter", "org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat$1.getFormatter()"], ["org.hibernate.hql.internal.ast.util.ASTReferencedTablesPrinter", "org.hibernate.hql.internal.ast.util.ASTReferencedTablesPrinter(java.lang.Class)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTReferencedTablesPrinter.nodeToString(antlr.collections.AST)"], ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>", "org.hibernate.hql.internal.ast.util.ASTReferencedTablesPrinter.createNodeProperties(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.util.ASTUtil$IncludePredicate", "org.hibernate.hql.internal.ast.util.ASTUtil$IncludePredicate()"], ["boolean", "org.hibernate.hql.internal.ast.util.ASTUtil$IncludePredicate.exclude(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.util.AliasGenerator", "org.hibernate.hql.internal.ast.util.AliasGenerator()"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.AliasGenerator.createName(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.LiteralProcessor$ApproximateDecimalFormatter.format(java.math.BigDecimal)"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor", "org.hibernate.hql.internal.ast.util.LiteralProcessor(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["boolean", "org.hibernate.hql.internal.ast.util.LiteralProcessor.isAlias(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.util.LiteralProcessor.processConstant(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.ast.util.LiteralProcessor.lookupConstant(org.hibernate.hql.internal.ast.tree.DotNode)"], ["void", "org.hibernate.hql.internal.ast.util.LiteralProcessor.processBoolean(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.LiteralProcessor.processNull(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.LiteralProcessor.processNumeric(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.LiteralProcessor.determineDecimalRepresentation(java.lang.String, int)"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalFormatter", "org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat$2.getFormatter()"], ["org.hibernate.hql.internal.ast.util.NodeTraverser", "org.hibernate.hql.internal.ast.util.NodeTraverser(org.hibernate.hql.internal.ast.util.NodeTraverser$VisitationStrategy)"], ["void", "org.hibernate.hql.internal.ast.util.NodeTraverser.traverseDepthFirst(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.util.ASTIterator", "org.hibernate.hql.internal.ast.util.ASTIterator(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTIterator.remove()"], ["boolean", "org.hibernate.hql.internal.ast.util.ASTIterator.hasNext()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.util.ASTIterator.next()"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTIterator.nextNode()"], ["org.hibernate.hql.internal.ast.util.SyntheticAndFactory", "org.hibernate.hql.internal.ast.util.SyntheticAndFactory(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["void", "org.hibernate.hql.internal.ast.util.SyntheticAndFactory.addWhereFragment(org.hibernate.sql.JoinFragment, java.lang.String, org.hibernate.hql.internal.ast.tree.QueryNode, org.hibernate.hql.internal.ast.tree.FromElement, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["void", "org.hibernate.hql.internal.ast.util.SyntheticAndFactory.addDiscriminatorWhereFragment(org.hibernate.hql.internal.ast.tree.RestrictableStatement, org.hibernate.persister.entity.Queryable, java.util.Map, java.lang.String)"], ["org.hibernate.hql.internal.ast.util.SessionFactoryHelper", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getFactory()"], ["boolean", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.hasPhysicalDiscriminatorColumn(org.hibernate.persister.entity.Queryable)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getImportedClassName(java.lang.String)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findQueryableUsingImports(java.lang.String)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findQueryableUsingImports(org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findEntityPersisterByName(java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(java.lang.String)"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getCollectionPersister(java.lang.String)"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireQueryableCollection(java.lang.String)"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getCollectionPropertyMapping(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getCollectionElementColumns(java.lang.String, java.lang.String)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.createJoinSequence()"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.createJoinSequence(boolean, org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[])"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.createJoinSequence(boolean, org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[][])"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.createCollectionJoinSequence(org.hibernate.persister.collection.QueryableCollection, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getIdentifierOrUniqueKeyPropertyName(org.hibernate.type.EntityType)"], ["int", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getColumnSpan(org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getAssociatedEntityName(org.hibernate.type.CollectionType)"], ["org.hibernate.type.AssociationType", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.getElementAssociationType(org.hibernate.type.CollectionType)"], ["org.hibernate.dialect.function.SQLFunction", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findSQLFunction(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findFunctionReturnType(java.lang.String, antlr.collections.AST)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findFunctionReturnType(java.lang.String, org.hibernate.dialect.function.SQLFunction, antlr.collections.AST)"], ["java.lang.String[][]", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.generateColumnNames(org.hibernate.type.Type[])"], ["boolean", "org.hibernate.hql.internal.ast.util.SessionFactoryHelper.isStrictJPAQLComplianceEnabled()"], ["org.hibernate.hql.internal.ast.util.ASTUtil$CollectingNodeVisitor", "org.hibernate.hql.internal.ast.util.ASTUtil$CollectingNodeVisitor(org.hibernate.hql.internal.ast.util.ASTUtil$FilterPredicate)"], ["void", "org.hibernate.hql.internal.ast.util.ASTUtil$CollectingNodeVisitor.visit(antlr.collections.AST)"], ["java.util.List", "org.hibernate.hql.internal.ast.util.ASTUtil$CollectingNodeVisitor.getCollectedNodes()"], ["java.util.List", "org.hibernate.hql.internal.ast.util.ASTUtil$CollectingNodeVisitor.collect(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.PathHelper.parsePath(java.lang.String, antlr.ASTFactory)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.PathHelper.getAlias(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator.remove()"], ["boolean", "org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator.hasNext()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator.next()"], ["org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator", "org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTParentsFirstIterator.nextNode()"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.LiteralProcessor$ExactDecimalFormatter.format(java.math.BigDecimal)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTPrinter.showAsString(antlr.collections.AST, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.util.ASTPrinter.showAst(antlr.collections.AST, java.io.PrintStream)"], ["void", "org.hibernate.hql.internal.ast.util.ASTPrinter.showAst(antlr.collections.AST, java.io.PrintWriter)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTPrinter.getTokenTypeName(int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTPrinter.nodeToString(antlr.collections.AST)"], ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>", "org.hibernate.hql.internal.ast.util.ASTPrinter.createNodeProperties(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTPrinter.propertyToString(java.lang.String, java.lang.Object, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTPrinter.appendEscapedMultibyteChars(java.lang.String, java.lang.StringBuilder)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTPrinter.escapeMultibyteChars(java.lang.String)"], ["org.hibernate.hql.internal.ast.util.JoinProcessor", "org.hibernate.hql.internal.ast.util.JoinProcessor(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.sql.JoinType", "org.hibernate.hql.internal.ast.util.JoinProcessor.toHibernateJoinType(int)"], ["void", "org.hibernate.hql.internal.ast.util.JoinProcessor.processJoins(org.hibernate.hql.internal.ast.tree.QueryNode)"], ["void", "org.hibernate.hql.internal.ast.util.JoinProcessor.processDynamicFilterParameters(java.lang.String, org.hibernate.hql.internal.ast.tree.ParameterContainer, org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["org.hibernate.hql.internal.ast.util.ASTAppender", "org.hibernate.hql.internal.ast.util.ASTAppender(antlr.ASTFactory, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTAppender.append(int, java.lang.String, boolean)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTAppender.append(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.create(antlr.ASTFactory, int, java.lang.String)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.createSibling(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.insertSibling(antlr.collections.AST, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.createBinarySubtree(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.createParent(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.createTree(antlr.ASTFactory, antlr.collections.AST[])"], ["boolean", "org.hibernate.hql.internal.ast.util.ASTUtil.isSubtreeChild(antlr.collections.AST, antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.findTypeInChildren(antlr.collections.AST, int)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.getLastChild(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTUtil.getDebugString(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.util.ASTUtil.findPreviousSibling(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTUtil.makeSiblingOfParent(antlr.collections.AST, antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTUtil.getPathText(antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.ast.util.ASTUtil.hasExactlyOneChild(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTUtil.appendSibling(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTUtil.insertChild(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.util.ASTUtil.appendChild(antlr.collections.AST, antlr.collections.AST)"], ["java.util.List", "org.hibernate.hql.internal.ast.util.ASTUtil.collectChildren(antlr.collections.AST, org.hibernate.hql.internal.ast.util.ASTUtil$FilterPredicate)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.util.ASTUtil.generateTokenNameCache(java.lang.Class)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTUtil.getConstantName(java.lang.Class, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.util.ASTUtil.getTokenTypeName(java.lang.Class, int)"], ["void", "org.hibernate.hql.internal.ast.util.ColumnHelper.generateSingleScalarColumn(org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode, int)"], ["void", "org.hibernate.hql.internal.ast.util.ColumnHelper.generateScalarColumns(org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode, java.lang.String[], int)"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat[]", "org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat.values()"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat", "org.hibernate.hql.internal.ast.util.LiteralProcessor$DecimalLiteralFormat.valueOf(java.lang.String)"], ["org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory", "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory()"], ["org.hibernate.hql.spi.QueryTranslator", "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.createQueryTranslator(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.query.spi.EntityGraphQueryHint)"], ["org.hibernate.hql.spi.FilterTranslator", "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.createFilterTranslator(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.InvalidPathException", "org.hibernate.hql.internal.ast.InvalidPathException(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.NamedParameterInformationImpl.getSourceName()"], ["int[]", "org.hibernate.hql.internal.ast.NamedParameterInformationImpl.getSourceLocations()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.NamedParameterInformationImpl.getExpectedType()"], ["void", "org.hibernate.hql.internal.ast.NamedParameterInformationImpl.addSourceLocation(int)"], ["void", "org.hibernate.hql.internal.ast.NamedParameterInformationImpl.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.hql.internal.ast.QuerySyntaxException", "org.hibernate.hql.internal.ast.QuerySyntaxException(java.lang.String)"], ["org.hibernate.hql.internal.ast.QuerySyntaxException", "org.hibernate.hql.internal.ast.QuerySyntaxException(java.lang.String, java.lang.String)"], ["org.hibernate.hql.internal.ast.QuerySyntaxException", "org.hibernate.hql.internal.ast.QuerySyntaxException.convert(antlr.RecognitionException)"], ["org.hibernate.hql.internal.ast.QuerySyntaxException", "org.hibernate.hql.internal.ast.QuerySyntaxException.convert(antlr.RecognitionException, java.lang.String)"], ["org.hibernate.hql.internal.ast.QueryTranslatorImpl$JavaConstantConverter", "org.hibernate.hql.internal.ast.QueryTranslatorImpl$JavaConstantConverter(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.hql.internal.ast.QueryTranslatorImpl$JavaConstantConverter.visit(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.traceIn(java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.traceOut(java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.reportError(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.reportWarning(java.lang.String)"], ["org.hibernate.hql.internal.ast.ParseErrorHandler", "org.hibernate.hql.internal.ast.SqlGenerator.getParseErrorHandler()"], ["org.hibernate.hql.internal.ast.SqlGenerator", "org.hibernate.hql.internal.ast.SqlGenerator(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.ast.SqlGenerator.getSQL()"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator.panic()"], ["org.hibernate.hql.internal.ast.HqlLexer", "org.hibernate.hql.internal.ast.HqlLexer(java.io.Reader)"], ["void", "org.hibernate.hql.internal.ast.HqlLexer.setTokenObjectClass(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlLexer.panic()"], ["void", "org.hibernate.hql.internal.ast.HqlLexer.panic(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$StandardFunctionArguments.clause(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$StandardFunctionArguments.betweenFunctionArguments()"], ["java.util.List", "org.hibernate.hql.internal.ast.SqlGenerator$StandardFunctionArguments.getArgs()"], ["org.hibernate.hql.internal.ast.ErrorTracker", "org.hibernate.hql.internal.ast.ErrorTracker()"], ["org.hibernate.hql.internal.ast.ErrorTracker", "org.hibernate.hql.internal.ast.ErrorTracker(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.ErrorTracker.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.ast.ErrorTracker.reportError(java.lang.String)"], ["int", "org.hibernate.hql.internal.ast.ErrorTracker.getErrorCount()"], ["void", "org.hibernate.hql.internal.ast.ErrorTracker.reportWarning(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.ErrorTracker.throwQueryException()"], ["org.hibernate.hql.internal.ast.DetailedSemanticException", "org.hibernate.hql.internal.ast.DetailedSemanticException(java.lang.String)"], ["org.hibernate.hql.internal.ast.DetailedSemanticException", "org.hibernate.hql.internal.ast.DetailedSemanticException(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.hibernate.hql.internal.ast.DetailedSemanticException.toString()"], ["void", "org.hibernate.hql.internal.ast.DetailedSemanticException.printStackTrace()"], ["void", "org.hibernate.hql.internal.ast.DetailedSemanticException.printStackTrace(java.io.PrintStream)"], ["void", "org.hibernate.hql.internal.ast.DetailedSemanticException.printStackTrace(java.io.PrintWriter)"], ["org.hibernate.hql.internal.ast.HqlParser", "org.hibernate.hql.internal.ast.HqlParser.getInstance(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.traceIn(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.traceOut(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.reportError(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.reportWarning(java.lang.String)"], ["org.hibernate.hql.internal.ast.ParseErrorHandler", "org.hibernate.hql.internal.ast.HqlParser.getParseErrorHandler()"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.HqlParser.handleIdentifierError(antlr.Token, antlr.RecognitionException)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.HqlParser.negateNode(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.HqlParser.processEqualityExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.showAst(antlr.collections.AST, java.io.PrintStream)"], ["void", "org.hibernate.hql.internal.ast.HqlParser.matchOptionalFrom()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.firstPathTokenWeakKeywords()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.handlePrimaryExpressionDotIdent()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.weakKeywords()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.expectNamedParameterName()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.handleDotIdent()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.processMemberOf(antlr.Token, antlr.collections.AST, antlr.ASTPair)"], ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>", "org.hibernate.hql.internal.ast.HqlParser.getTreatMap()"], ["void", "org.hibernate.hql.internal.ast.HqlParser.panic()"], ["org.hibernate.hql.internal.ast.HqlASTFactory", "org.hibernate.hql.internal.ast.HqlASTFactory()"], ["java.lang.Class", "org.hibernate.hql.internal.ast.HqlASTFactory.getASTNodeType(int)"], ["org.hibernate.hql.internal.ast.SqlASTFactory", "org.hibernate.hql.internal.ast.SqlASTFactory(org.hibernate.hql.internal.ast.HqlSqlWalker)"], ["java.lang.Class", "org.hibernate.hql.internal.ast.SqlASTFactory.getASTNodeType(int)"], ["org.hibernate.hql.internal.ast.InvalidWithClauseException", "org.hibernate.hql.internal.ast.InvalidWithClauseException(java.lang.String, java.lang.String)"], ["org.hibernate.hql.internal.ast.PositionalParameterInformationImpl", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl(int, org.hibernate.type.Type)"], ["int", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl.getLabel()"], ["int[]", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl.getSourceLocations()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl.getExpectedType()"], ["void", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl.setExpectedType(org.hibernate.type.Type)"], ["void", "org.hibernate.hql.internal.ast.PositionalParameterInformationImpl.addSourceLocation(int)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$CastFunctionArguments.clause(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.SqlGenerator$CastFunctionArguments.betweenFunctionArguments()"], ["java.util.List", "org.hibernate.hql.internal.ast.SqlGenerator$CastFunctionArguments.getArgs()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.MapEntryNode$EntryAdapter.getValue()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.MapEntryNode$EntryAdapter.getKey()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.MapEntryNode$EntryAdapter.setValue(java.lang.Object)"], ["boolean", "org.hibernate.hql.internal.ast.tree.MapEntryNode$EntryAdapter.equals(java.lang.Object)"], ["int", "org.hibernate.hql.internal.ast.tree.MapEntryNode$EntryAdapter.hashCode()"], ["org.hibernate.hql.internal.ast.tree.ComponentJoin", "org.hibernate.hql.internal.ast.tree.ComponentJoin(org.hibernate.hql.internal.ast.tree.FromClause, org.hibernate.hql.internal.ast.tree.FromElement, java.lang.String, java.lang.String, org.hibernate.type.CompositeType)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getComponentPath()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getComponentProperty()"], ["org.hibernate.type.CompositeType", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getComponentType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getDataType()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getIdentityColumn()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getIdentityColumns()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.ImpliedFromElement", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.isImplied()"], ["void", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.setImpliedInFromClause(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.isImpliedInFromClause()"], ["void", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.setInProjectionList(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.inProjectionList()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.isIncludeSubclasses()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ImpliedFromElement.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.MapEntryNode", "org.hibernate.hql.internal.ast.tree.MapEntryNode()"], ["java.lang.Class", "org.hibernate.hql.internal.ast.tree.MapEntryNode.getAggregationResultType()"], ["void", "org.hibernate.hql.internal.ast.tree.MapEntryNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.hql.internal.ast.tree.MapEntryNode.sfi()"], ["void", "org.hibernate.hql.internal.ast.tree.MapEntryNode.setText(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.MapEntryNode.setScalarColumn(int)"], ["int", "org.hibernate.hql.internal.ast.tree.MapEntryNode.getScalarColumnIndex()"], ["void", "org.hibernate.hql.internal.ast.tree.MapEntryNode.setScalarColumnText(int)"], ["boolean", "org.hibernate.hql.internal.ast.tree.MapEntryNode.isScalar()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.MapEntryNode.getAggregatedSelectionTypeList()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.MapEntryNode.getAggregatedAliases()"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.ast.tree.MapEntryNode.getResultTransformer()"], ["org.hibernate.hql.internal.ast.tree.LiteralNode", "org.hibernate.hql.internal.ast.tree.LiteralNode()"], ["void", "org.hibernate.hql.internal.ast.tree.LiteralNode.setScalarColumnText(int)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.LiteralNode.getDataType()"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.LiteralNode.getLiteralValue()"], ["void", "org.hibernate.hql.internal.ast.tree.LiteralNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.LiteralNode.getExpectedType()"], ["org.hibernate.hql.internal.ast.tree.SimpleCaseNode", "org.hibernate.hql.internal.ast.tree.SimpleCaseNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.SimpleCaseNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.SimpleCaseNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.SimpleCaseNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.SimpleCaseNode.getExpectedType()"], ["org.hibernate.hql.internal.ast.tree.CastFunctionNode", "org.hibernate.hql.internal.ast.tree.CastFunctionNode()"], ["void", "org.hibernate.hql.internal.ast.tree.CastFunctionNode.resolve(boolean)"], ["org.hibernate.dialect.function.SQLFunction", "org.hibernate.hql.internal.ast.tree.CastFunctionNode.getSQLFunction()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.CastFunctionNode.getFirstArgumentType()"], ["void", "org.hibernate.hql.internal.ast.tree.CastFunctionNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.UpdateStatement", "org.hibernate.hql.internal.ast.tree.UpdateStatement()"], ["int", "org.hibernate.hql.internal.ast.tree.UpdateStatement.getStatementType()"], ["boolean", "org.hibernate.hql.internal.ast.tree.UpdateStatement.needsExecutor()"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.tree.UpdateStatement.getSetClause()"], ["org.hibernate.QueryException", "org.hibernate.hql.internal.ast.tree.DotNode$1.buildIllegalCollectionDereferenceException(java.lang.String, org.hibernate.hql.internal.ast.tree.FromReferenceNode)"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.MapEntryNode$MapEntryBuilder.transformTuple(java.lang.Object[], java.lang.String[])"], ["org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode()"], ["void", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.initialize(java.lang.Object)"], ["org.hibernate.hql.internal.ast.HqlSqlWalker", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.getWalker()"], ["org.hibernate.hql.internal.ast.util.SessionFactoryHelper", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.getSessionFactoryHelper()"], ["antlr.ASTFactory", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.getASTFactory()"], ["org.hibernate.hql.internal.ast.util.AliasGenerator", "org.hibernate.hql.internal.ast.tree.HqlSqlWalkerNode.getAliasGenerator()"], ["org.hibernate.hql.internal.ast.tree.CollectionFunction", "org.hibernate.hql.internal.ast.tree.CollectionFunction()"], ["void", "org.hibernate.hql.internal.ast.tree.CollectionFunction.resolve(boolean)"], ["org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement", "org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement.isImplied()"], ["int", "org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement.getType()"], ["org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement", "org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement.buildKeyJoin(org.hibernate.hql.internal.ast.tree.FromElement)"], ["org.hibernate.hql.internal.ast.tree.FromElementFactory", "org.hibernate.hql.internal.ast.tree.FromElementFactory(org.hibernate.hql.internal.ast.tree.FromClause, org.hibernate.hql.internal.ast.tree.FromElement, java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.FromElementFactory", "org.hibernate.hql.internal.ast.tree.FromElementFactory(org.hibernate.hql.internal.ast.tree.FromClause, org.hibernate.hql.internal.ast.tree.FromElement, java.lang.String, java.lang.String, java.lang.String[], boolean)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElementFactory.createCollection(org.hibernate.persister.collection.QueryableCollection, java.lang.String, org.hibernate.sql.JoinType, boolean, boolean)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElementFactory.createEntityJoin(java.lang.String, java.lang.String, org.hibernate.engine.internal.JoinSequence, boolean, boolean, org.hibernate.type.EntityType, java.lang.String, java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElementFactory.createComponentJoin(org.hibernate.type.CompositeType)"], ["org.hibernate.hql.internal.ast.tree.BetweenOperatorNode", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode()"], ["void", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.initialize()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.getDataType()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.getFixtureOperand()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.getLowOperand()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BetweenOperatorNode.getHighOperand()"], ["org.hibernate.hql.internal.ast.tree.AssignmentSpecification", "org.hibernate.hql.internal.ast.tree.AssignmentSpecification(antlr.collections.AST, org.hibernate.persister.entity.Queryable)"], ["boolean", "org.hibernate.hql.internal.ast.tree.AssignmentSpecification.affectsTable(java.lang.String)"], ["org.hibernate.param.ParameterSpecification[]", "org.hibernate.hql.internal.ast.tree.AssignmentSpecification.getParameters()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.AssignmentSpecification.getSqlAssignmentFragment()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentPropertyMapping.getType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentPropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentPropertyMapping.toColumns(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.DeleteStatement", "org.hibernate.hql.internal.ast.tree.DeleteStatement()"], ["int", "org.hibernate.hql.internal.ast.tree.DeleteStatement.getStatementType()"], ["boolean", "org.hibernate.hql.internal.ast.tree.DeleteStatement.needsExecutor()"], ["org.hibernate.hql.internal.ast.tree.QueryNode", "org.hibernate.hql.internal.ast.tree.QueryNode()"], ["int", "org.hibernate.hql.internal.ast.tree.QueryNode.getStatementType()"], ["boolean", "org.hibernate.hql.internal.ast.tree.QueryNode.needsExecutor()"], ["org.hibernate.hql.internal.ast.tree.SelectClause", "org.hibernate.hql.internal.ast.tree.QueryNode.getSelectClause()"], ["boolean", "org.hibernate.hql.internal.ast.tree.QueryNode.hasOrderByClause()"], ["org.hibernate.hql.internal.ast.tree.OrderByClause", "org.hibernate.hql.internal.ast.tree.QueryNode.getOrderByClause()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.QueryNode.getAlias()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.QueryNode.getFromElement()"], ["boolean", "org.hibernate.hql.internal.ast.tree.QueryNode.isConstructor()"], ["boolean", "org.hibernate.hql.internal.ast.tree.QueryNode.isReturnableEntity()"], ["boolean", "org.hibernate.hql.internal.ast.tree.QueryNode.isScalar()"], ["void", "org.hibernate.hql.internal.ast.tree.QueryNode.setAlias(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.QueryNode.setScalarColumn(int)"], ["int", "org.hibernate.hql.internal.ast.tree.QueryNode.getScalarColumnIndex()"], ["void", "org.hibernate.hql.internal.ast.tree.QueryNode.setScalarColumnText(int)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.QueryNode.getDataType()"], ["org.hibernate.hql.internal.ast.tree.IdentNode$DereferenceType[]", "org.hibernate.hql.internal.ast.tree.IdentNode$DereferenceType.values()"], ["org.hibernate.hql.internal.ast.tree.IdentNode$DereferenceType", "org.hibernate.hql.internal.ast.tree.IdentNode$DereferenceType.valueOf(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.AbstractNullnessCheckNode", "org.hibernate.hql.internal.ast.tree.AbstractNullnessCheckNode()"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractNullnessCheckNode.initialize()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType$1.getType()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElementType$1.toColumns(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.SqlFragment", "org.hibernate.hql.internal.ast.tree.SqlFragment()"], ["void", "org.hibernate.hql.internal.ast.tree.SqlFragment.setJoinFragment(org.hibernate.sql.JoinFragment)"], ["boolean", "org.hibernate.hql.internal.ast.tree.SqlFragment.hasFilterCondition()"], ["void", "org.hibernate.hql.internal.ast.tree.SqlFragment.setFromElement(org.hibernate.hql.internal.ast.tree.FromElement)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.SqlFragment.getFromElement()"], ["void", "org.hibernate.hql.internal.ast.tree.SqlFragment.addEmbeddedParameter(org.hibernate.param.ParameterSpecification)"], ["boolean", "org.hibernate.hql.internal.ast.tree.SqlFragment.hasEmbeddedParameters()"], ["org.hibernate.param.ParameterSpecification[]", "org.hibernate.hql.internal.ast.tree.SqlFragment.getEmbeddedParameters()"], ["org.hibernate.hql.internal.ast.tree.BooleanLiteralNode", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.getDataType()"], ["java.lang.Boolean", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.getValue()"], ["void", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.setText(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.getExpectedType()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment(java.lang.String, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addCrossJoin(java.lang.String, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addJoins(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.toFromFragmentString()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.toWhereFragmentString()"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addCondition(java.lang.String, java.lang.String[], java.lang.String[])"], ["boolean", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.addCondition(java.lang.String)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinFragment.copy()"], ["org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode()"], ["void", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.initialize()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.getDataType()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.getLeftHandOperand()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.getRightHandOperand()"], ["void", "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.CountNode", "org.hibernate.hql.internal.ast.tree.CountNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.CountNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.CountNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.ConstructorNode", "org.hibernate.hql.internal.ast.tree.ConstructorNode()"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getResultTransformer()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getAggregatedAliases()"], ["void", "org.hibernate.hql.internal.ast.tree.ConstructorNode.setScalarColumn(int)"], ["int", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getScalarColumnIndex()"], ["void", "org.hibernate.hql.internal.ast.tree.ConstructorNode.setScalarColumnText(int)"], ["java.lang.Class", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getAggregationResultType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.ConstructorNode.prepare()"], ["java.lang.reflect.Constructor", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getConstructor()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getConstructorArgumentTypeList()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getAggregatedSelectionTypeList()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getFromElement()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ConstructorNode.isConstructor()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ConstructorNode.isReturnableEntity()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ConstructorNode.isScalar()"], ["void", "org.hibernate.hql.internal.ast.tree.ConstructorNode.setAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ConstructorNode.getAlias()"], ["org.hibernate.hql.internal.ast.tree.IntoClause", "org.hibernate.hql.internal.ast.tree.IntoClause()"], ["void", "org.hibernate.hql.internal.ast.tree.IntoClause.initialize(org.hibernate.persister.entity.Queryable)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.IntoClause.getTableName()"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.tree.IntoClause.getQueryable()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.IntoClause.getEntityName()"], ["org.hibernate.type.Type[]", "org.hibernate.hql.internal.ast.tree.IntoClause.getInsertionTypes()"], ["boolean", "org.hibernate.hql.internal.ast.tree.IntoClause.isDiscriminated()"], ["boolean", "org.hibernate.hql.internal.ast.tree.IntoClause.isExplicitIdInsertion()"], ["boolean", "org.hibernate.hql.internal.ast.tree.IntoClause.isExplicitVersionInsertion()"], ["void", "org.hibernate.hql.internal.ast.tree.IntoClause.prependIdColumnSpec()"], ["void", "org.hibernate.hql.internal.ast.tree.IntoClause.prependVersionColumnSpec()"], ["void", "org.hibernate.hql.internal.ast.tree.IntoClause.validateTypes(org.hibernate.hql.internal.ast.tree.SelectClause)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.IntoClause.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.NullNode", "org.hibernate.hql.internal.ast.tree.NullNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.NullNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.NullNode.setScalarColumnText(int)"], ["java.lang.Object", "org.hibernate.hql.internal.ast.tree.NullNode.getValue()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.NullNode.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement$TypeDiscriminatorMetadataImpl.getSqlFragment()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElement$TypeDiscriminatorMetadataImpl.getResolutionType()"], ["org.hibernate.hql.internal.ast.tree.SelectExpressionList", "org.hibernate.hql.internal.ast.tree.SelectExpressionList()"], ["org.hibernate.hql.internal.ast.tree.SelectExpression[]", "org.hibernate.hql.internal.ast.tree.SelectExpressionList.collectSelectExpressions()"], ["int", "org.hibernate.hql.internal.ast.tree.SelectExpressionList.getTotalParameterCount()"], ["org.hibernate.hql.internal.ast.tree.InLogicOperatorNode", "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode.getInList()"], ["void", "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode.initialize()"], ["org.hibernate.hql.internal.ast.tree.MapValueNode", "org.hibernate.hql.internal.ast.tree.MapValueNode()"], ["org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode", "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode.initialize()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.UnaryArithmeticNode.getOperand()"], ["org.hibernate.hql.internal.ast.tree.FromReferenceNode", "org.hibernate.hql.internal.ast.tree.FromReferenceNode()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.getFromElement()"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.setFromElement(org.hibernate.hql.internal.ast.tree.FromElement)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolveFirstChild()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.getPath()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.isResolved()"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.getDisplayText()"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.recursiveResolve(int, boolean, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.recursiveResolve(int, boolean, java.lang.String, antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.isReturnableEntity()"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolveInFunctionCall(boolean, boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(boolean, boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(boolean, boolean, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.prepareForDot(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.getImpliedJoin()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromReferenceNode.getReferencedTables()"], ["org.hibernate.hql.internal.ast.tree.AbstractStatement", "org.hibernate.hql.internal.ast.tree.AbstractStatement()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.AbstractStatement.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.InsertStatement", "org.hibernate.hql.internal.ast.tree.InsertStatement()"], ["int", "org.hibernate.hql.internal.ast.tree.InsertStatement.getStatementType()"], ["boolean", "org.hibernate.hql.internal.ast.tree.InsertStatement.needsExecutor()"], ["void", "org.hibernate.hql.internal.ast.tree.InsertStatement.validate()"], ["org.hibernate.hql.internal.ast.tree.IntoClause", "org.hibernate.hql.internal.ast.tree.InsertStatement.getIntoClause()"], ["org.hibernate.hql.internal.ast.tree.SelectClause", "org.hibernate.hql.internal.ast.tree.InsertStatement.getSelectClause()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.Node()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.Node(antlr.Token)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.Node.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.hql.internal.ast.tree.Node.initialize(antlr.Token)"], ["void", "org.hibernate.hql.internal.ast.tree.Node.initialize(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.Node.getFilename()"], ["int", "org.hibernate.hql.internal.ast.tree.Node.getLine()"], ["int", "org.hibernate.hql.internal.ast.tree.Node.getColumn()"], ["int", "org.hibernate.hql.internal.ast.tree.Node.getTextLength()"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.tree.FromClause()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.FromClause.finishInit()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromClause.getFromElement(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromClause.findFromElementBySqlAlias(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromClause.findFromElementByUserOrSqlAlias(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause.isFromElementAlias(java.lang.String)"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.FromClause.getFromElements()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromClause.getFromElement()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.FromClause.getProjectionList()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.FromClause.getCollectionFetches()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause.hasCollectionFecthes()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.FromClause.getExplicitFromElements()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause.containsClassAlias(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause.containsTableAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromClause.getDisplayText()"], ["void", "org.hibernate.hql.internal.ast.tree.FromClause.setParentFromClause(org.hibernate.hql.internal.ast.tree.FromClause)"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.tree.FromClause.locateChildFromClauseWithJoinByPath(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromClause.promoteJoin(org.hibernate.hql.internal.ast.tree.FromElement)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause.isSubQuery()"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.tree.FromClause.getParentFromClause()"], ["int", "org.hibernate.hql.internal.ast.tree.FromClause.getLevel()"], ["int", "org.hibernate.hql.internal.ast.tree.FromClause.nextFromElementCounter()"], ["void", "org.hibernate.hql.internal.ast.tree.FromClause.resolve()"], ["void", "org.hibernate.hql.internal.ast.tree.FromClause.addImpliedFromElement(org.hibernate.hql.internal.ast.tree.FromElement)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromClause.toString()"], ["org.hibernate.hql.internal.ast.tree.SelectExpressionImpl", "org.hibernate.hql.internal.ast.tree.SelectExpressionImpl()"], ["void", "org.hibernate.hql.internal.ast.tree.SelectExpressionImpl.resolveIndex(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.SelectExpressionImpl.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.SelectExpressionImpl.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.IsNullLogicOperatorNode", "org.hibernate.hql.internal.ast.tree.IsNullLogicOperatorNode()"], ["org.hibernate.hql.internal.ast.tree.DotNode", "org.hibernate.hql.internal.ast.tree.DotNode()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.setJoinType(org.hibernate.sql.JoinType)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.DotNode.getDisplayText()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.resolveFirstChild()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.resolveInFunctionCall(boolean, boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.resolveIndex(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.DotNode.getImpliedJoin()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.DotNode.getDataType()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.DotNode.getReferencedTables()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.setPropertyPath(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.DotNode.getPropertyPath()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.DotNode.getPropertyName()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.DotNode.getOriginalPropertyName()"], ["org.hibernate.hql.internal.ast.tree.FromReferenceNode", "org.hibernate.hql.internal.ast.tree.DotNode.getLhs()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.DotNode.getPath()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.setFetch(boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.resolveSelectExpression()"], ["void", "org.hibernate.hql.internal.ast.tree.DotNode.setResolvedConstant(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode()"], ["void", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.initialize()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.getLeftHandOperand()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.getRightHandOperand()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.SelectClause", "org.hibernate.hql.internal.ast.tree.SelectClause()"], ["boolean", "org.hibernate.hql.internal.ast.tree.SelectClause.isScalarSelect()"], ["boolean", "org.hibernate.hql.internal.ast.tree.SelectClause.isDistinct()"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.SelectClause.getFromElementsForLoad()"], ["org.hibernate.type.Type[]", "org.hibernate.hql.internal.ast.tree.SelectClause.getQueryReturnTypes()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.SelectClause.getQueryReturnAliases()"], ["java.lang.String[][]", "org.hibernate.hql.internal.ast.tree.SelectClause.getColumnNames()"], ["org.hibernate.hql.internal.ast.tree.AggregatedSelectExpression", "org.hibernate.hql.internal.ast.tree.SelectClause.getAggregatedSelectExpression()"], ["void", "org.hibernate.hql.internal.ast.tree.SelectClause.initializeExplicitSelectClause(org.hibernate.hql.internal.ast.tree.FromClause)"], ["int", "org.hibernate.hql.internal.ast.tree.SelectClause.getColumnNamesStartPosition(int)"], ["void", "org.hibernate.hql.internal.ast.tree.SelectClause.initializeDerivedSelectClause(org.hibernate.hql.internal.ast.tree.FromClause)"], ["java.util.List", "org.hibernate.hql.internal.ast.tree.SelectClause.getCollectionFromElements()"], ["org.hibernate.hql.internal.ast.tree.IndexNode", "org.hibernate.hql.internal.ast.tree.IndexNode()"], ["void", "org.hibernate.hql.internal.ast.tree.IndexNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.IndexNode.prepareForDot(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.IndexNode.resolveIndex(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.IndexNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.IsNotNullLogicOperatorNode", "org.hibernate.hql.internal.ast.tree.IsNotNullLogicOperatorNode()"], ["org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement", "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement()"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement.getFromClause()"], ["boolean", "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement.hasWhereClause()"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.tree.AbstractRestrictableStatement.getWhereClause()"], ["org.hibernate.hql.internal.ast.tree.DotNode$DereferenceType[]", "org.hibernate.hql.internal.ast.tree.DotNode$DereferenceType.values()"], ["org.hibernate.hql.internal.ast.tree.DotNode$DereferenceType", "org.hibernate.hql.internal.ast.tree.DotNode$DereferenceType.valueOf(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.MapKeyNode", "org.hibernate.hql.internal.ast.tree.MapKeyNode()"], ["org.hibernate.hql.internal.ast.tree.MapKeyEntityFromElement", "org.hibernate.hql.internal.ast.tree.MapKeyNode.getMapKeyEntityFromElement()"], ["org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType(org.hibernate.hql.internal.ast.tree.ComponentJoin, org.hibernate.hql.internal.ast.tree.FromElement)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getDataType()"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getQueryableCollection()"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getPropertyMapping(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getPropertyType(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.renderScalarIdentifierSelect(int)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getIdentifierPropertyNames()"], ["org.hibernate.hql.internal.ast.tree.CollectionPropertyReference", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getCollectionPropertyReference(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"], ["org.hibernate.param.ParameterSpecification", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getIndexCollectionSelectorParamSpec()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.isEntity()"], ["boolean", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.isCollectionOfValuesOrComponents()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getPropertyTableName(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.setQueryableCollection(org.hibernate.persister.collection.QueryableCollection)"], ["void", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.applyTreatAsDeclarations(java.util.Set)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getJoinSequence()"], ["void", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.setJoinSequence(org.hibernate.engine.internal.JoinSequence)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.renderValueCollectionSelectFragment(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.renderMapEntryPropertySelectFragment(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.renderMapKeyPropertySelectFragment(int, int)"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getQueryable()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getSelectType()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getEntityPersister()"], ["void", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.setCollectionSuffix(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ComponentJoin$ComponentFromElementType.getCollectionSuffix()"], ["org.hibernate.hql.internal.ast.tree.SearchedCaseNode", "org.hibernate.hql.internal.ast.tree.SearchedCaseNode()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.SearchedCaseNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.SearchedCaseNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.SearchedCaseNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.SearchedCaseNode.getExpectedType()"], ["org.hibernate.hql.internal.ast.tree.SqlNode", "org.hibernate.hql.internal.ast.tree.SqlNode()"], ["void", "org.hibernate.hql.internal.ast.tree.SqlNode.setText(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.SqlNode.getOriginalText()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.SqlNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.SqlNode.setDataType(org.hibernate.type.Type)"], ["org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode", "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode()"], ["org.hibernate.hql.internal.ast.tree.Node", "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode.getOperand()"], ["void", "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode.initialize()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.FromElementType", "org.hibernate.hql.internal.ast.tree.FromElementType(org.hibernate.hql.internal.ast.tree.FromElement, org.hibernate.persister.entity.EntityPersister, org.hibernate.type.EntityType)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElementType.getCollectionSuffix()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElementType.setCollectionSuffix(java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.hql.internal.ast.tree.FromElementType.getEntityPersister()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType.getDataType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType.getSelectType()"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.tree.FromElementType.getQueryable()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElementType.renderMapKeyPropertySelectFragment(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElementType.renderMapEntryPropertySelectFragment(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElementType.renderValueCollectionSelectFragment(int, int)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElementType.setJoinSequence(org.hibernate.engine.internal.JoinSequence)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.tree.FromElementType.getJoinSequence()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElementType.applyTreatAsDeclarations(java.util.Set<java.lang.String>)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElementType.setQueryableCollection(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.hql.internal.ast.tree.FromElementType.getQueryableCollection()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElementType.getPropertyTableName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType.getPropertyType(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElementType.isCollectionOfValuesOrComponents()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElementType.isEntity()"], ["org.hibernate.param.ParameterSpecification", "org.hibernate.hql.internal.ast.tree.FromElementType.getIndexCollectionSelectorParamSpec()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElementType.setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"], ["org.hibernate.hql.internal.ast.tree.CollectionPropertyReference", "org.hibernate.hql.internal.ast.tree.FromElementType.getCollectionPropertyReference(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElementType.getIdentifierPropertyNames()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause$4.include(antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.ast.tree.AssignmentSpecification$1.include(antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause$2.include(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.EntityJoinFromElement", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement(org.hibernate.hql.internal.ast.HqlSqlWalker, org.hibernate.hql.internal.ast.tree.FromClause, org.hibernate.persister.entity.EntityPersister, org.hibernate.sql.JoinType, boolean, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement.setText(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement.initializeCollection(org.hibernate.hql.internal.ast.tree.FromClause, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement.getCollectionSuffix()"], ["void", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement.setCollectionSuffix(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause$3.include(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinSequenceImpl", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinSequenceImpl(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.type.EntityType, java.lang.String, java.lang.String, org.hibernate.sql.JoinType)"], ["org.hibernate.sql.JoinFragment", "org.hibernate.hql.internal.ast.tree.EntityJoinFromElement$EntityJoinJoinSequenceImpl.toJoinFragment(java.util.Map, boolean, java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.IdentNode", "org.hibernate.hql.internal.ast.tree.IdentNode()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.IdentNode.getColumns()"], ["void", "org.hibernate.hql.internal.ast.tree.IdentNode.resolveIndex(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.tree.IdentNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.IdentNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.IdentNode.setScalarColumnText(int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.IdentNode.getDisplayText()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElement()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getCollectionSuffix()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setCollectionSuffix(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.initializeCollection(org.hibernate.hql.internal.ast.tree.FromClause, java.lang.String, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.initializeEntity(org.hibernate.hql.internal.ast.tree.FromClause, java.lang.String, org.hibernate.persister.entity.EntityPersister, org.hibernate.type.EntityType, java.lang.String, java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.hql.internal.ast.tree.FromElement.getEntityPersister()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElement.getDataType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElement.getSelectType()"], ["org.hibernate.persister.entity.Queryable", "org.hibernate.hql.internal.ast.tree.FromElement.getQueryable()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getClassName()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getClassAlias()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getTableName()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getTableAlias()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.renderMapKeyPropertySelectFragment(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.renderMapEntryPropertySelectFragment(int, int)"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.tree.FromElement.getFromClause()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isImplied()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getDisplayText()"], ["int", "org.hibernate.hql.internal.ast.tree.FromElement.hashCode()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.equals(java.lang.Object)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setJoinSequence(org.hibernate.engine.internal.JoinSequence)"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.ast.tree.FromElement.getJoinSequence()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isIncludeSubclasses()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isDereferencedBySuperclassOrSubclassProperty()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getIdentityColumn()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElement.getIdentityColumns()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setCollectionJoin(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isCollectionJoin()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setRole(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.applyTreatAsDeclarations(java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getRole()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setQueryableCollection(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.hql.internal.ast.tree.FromElement.getQueryableCollection()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setColumns(java.lang.String[])"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setOrigin(org.hibernate.hql.internal.ast.tree.FromElement, boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isManyToMany()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElement.getOrigin()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElement.getRealOrigin()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.FromElement.getFetchOrigin()"], ["org.hibernate.hql.internal.ast.TypeDiscriminatorMetadata", "org.hibernate.hql.internal.ast.tree.FromElement.getTypeDiscriminatorMetadata()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElement.getPropertyType(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getPropertyTableName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElement.toColumns(java.lang.String, java.lang.String, boolean)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElement.toColumns(java.lang.String, java.lang.String, boolean, boolean)"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.hql.internal.ast.tree.FromElement.getPropertyMapping(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.CollectionPropertyReference", "org.hibernate.hql.internal.ast.tree.FromElement.getCollectionPropertyReference(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElement.getIdentifierPropertyNames()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setFetch(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isFetch()"], ["int", "org.hibernate.hql.internal.ast.tree.FromElement.getSequence()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setFilter(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isFilter()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.useFromFragment()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setUseFromFragment(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.useWhereFragment()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setUseWhereFragment(boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setCollectionTableAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getCollectionTableAlias()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isCollectionOfValuesOrComponents()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isEntity()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setImpliedInFromClause(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isImpliedInFromClause()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setInProjectionList(boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.inProjectionList()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isFromOrJoinFragment()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isAllPropertyFetch()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setAllPropertyFetch(boolean)"], ["antlr.collections.AST", "org.hibernate.hql.internal.ast.tree.FromElement.getWithClauseAst()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.FromElement.getWithClauseFragment()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setWithClauseFragment(antlr.collections.AST, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.handlePropertyBeingDereferenced(org.hibernate.type.Type, java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isDereferencedBySuperclassProperty()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.isDereferencedBySubclassProperty()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.addEmbeddedParameter(org.hibernate.param.ParameterSpecification)"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromElement.hasEmbeddedParameters()"], ["org.hibernate.param.ParameterSpecification[]", "org.hibernate.hql.internal.ast.tree.FromElement.getEmbeddedParameters()"], ["org.hibernate.param.ParameterSpecification", "org.hibernate.hql.internal.ast.tree.FromElement.getIndexCollectionSelectorParamSpec()"], ["void", "org.hibernate.hql.internal.ast.tree.FromElement.setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"], ["org.hibernate.hql.internal.ast.tree.AggregateNode", "org.hibernate.hql.internal.ast.tree.AggregateNode()"], ["org.hibernate.dialect.function.SQLFunction", "org.hibernate.hql.internal.ast.tree.AggregateNode.getSQLFunction()"], ["void", "org.hibernate.hql.internal.ast.tree.AggregateNode.resolve()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.AggregateNode.getFirstArgumentType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.AggregateNode.getDataType()"], ["void", "org.hibernate.hql.internal.ast.tree.AggregateNode.setScalarColumnText(int)"], ["boolean", "org.hibernate.hql.internal.ast.tree.AggregateNode.isScalar()"], ["org.hibernate.hql.internal.ast.tree.JavaConstantNode", "org.hibernate.hql.internal.ast.tree.JavaConstantNode()"], ["void", "org.hibernate.hql.internal.ast.tree.JavaConstantNode.setText(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.tree.JavaConstantNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.JavaConstantNode.getExpectedType()"], ["void", "org.hibernate.hql.internal.ast.tree.JavaConstantNode.setSessionFactory(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.JavaConstantNode.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode()"], ["org.hibernate.hql.internal.ast.tree.FromReferenceNode", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.getMapReference()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.getColumns()"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.setScalarColumnText(int)"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.resolve(boolean, boolean, java.lang.String, antlr.collections.AST, antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.getMapFromElement()"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.resolveIndex(antlr.collections.AST)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.AbstractMapComponentNode.getReferencedTables()"], ["org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications", "org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications(java.util.List<org.hibernate.param.ParameterSpecification>)"], ["int", "org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications.getExpectedType()"], ["void", "org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications.setExpectedType(org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications.renderDisplayInfo()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.MapEntryNode$BasicSelectExpression.getExpression()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.MapEntryNode$BasicSelectExpression.getAlias()"], ["org.hibernate.hql.internal.ast.tree.ParameterNode", "org.hibernate.hql.internal.ast.tree.ParameterNode()"], ["org.hibernate.param.ParameterSpecification", "org.hibernate.hql.internal.ast.tree.ParameterNode.getHqlParameterSpecification()"], ["void", "org.hibernate.hql.internal.ast.tree.ParameterNode.setHqlParameterSpecification(org.hibernate.param.ParameterSpecification)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ParameterNode.getDisplayText()"], ["void", "org.hibernate.hql.internal.ast.tree.ParameterNode.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.ParameterNode.getExpectedType()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ParameterNode.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.tree.MethodNode", "org.hibernate.hql.internal.ast.tree.MethodNode()"], ["boolean", "org.hibernate.hql.internal.ast.tree.MethodNode.isScalar()"], ["org.hibernate.dialect.function.SQLFunction", "org.hibernate.hql.internal.ast.tree.MethodNode.getSQLFunction()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.MethodNode.getFirstArgumentType()"], ["void", "org.hibernate.hql.internal.ast.tree.MethodNode.resolve(boolean)"], ["void", "org.hibernate.hql.internal.ast.tree.MethodNode.initializeMethodNode(antlr.collections.AST, boolean)"], ["boolean", "org.hibernate.hql.internal.ast.tree.MethodNode.isCollectionPropertyMethod()"], ["void", "org.hibernate.hql.internal.ast.tree.MethodNode.setScalarColumnText(int)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.MethodNode.getFromElement()"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.MethodNode.getDisplayText()"], ["boolean", "org.hibernate.hql.internal.ast.tree.FromClause$1.include(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.OrderByClause", "org.hibernate.hql.internal.ast.tree.OrderByClause()"], ["void", "org.hibernate.hql.internal.ast.tree.OrderByClause.addOrderFragment(java.lang.String)"], ["org.hibernate.hql.internal.ast.tree.ResultVariableRefNode", "org.hibernate.hql.internal.ast.tree.ResultVariableRefNode()"], ["void", "org.hibernate.hql.internal.ast.tree.ResultVariableRefNode.setSelectExpression(org.hibernate.hql.internal.ast.tree.SelectExpression)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.ResultVariableRefNode.getRenderText(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.tree.AbstractSelectExpression", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression()"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.setAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.getAlias()"], ["boolean", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.isConstructor()"], ["boolean", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.isReturnableEntity()"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.getFromElement()"], ["boolean", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.isScalar()"], ["void", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.setScalarColumn(int)"], ["int", "org.hibernate.hql.internal.ast.tree.AbstractSelectExpression.getScalarColumnIndex()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType$SpecialManyToManyCollectionPropertyMapping.getType()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.ast.tree.FromElementType$SpecialManyToManyCollectionPropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElementType$SpecialManyToManyCollectionPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.tree.FromElementType$SpecialManyToManyCollectionPropertyMapping.toColumns(java.lang.String)"], ["java.lang.String", "org.hibernate.hql.internal.ast.tree.MapEntryNode$LocalAliasGenerator.generateAlias(java.lang.String)"], ["org.hibernate.hql.internal.ast.QueryTranslatorImpl", "org.hibernate.hql.internal.ast.QueryTranslatorImpl(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.ast.QueryTranslatorImpl", "org.hibernate.hql.internal.ast.QueryTranslatorImpl(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.query.spi.EntityGraphQueryHint)"], ["void", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(java.util.Map, boolean)"], ["void", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(java.lang.String, java.util.Map, boolean)"], ["java.lang.String", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getQueryIdentifier()"], ["org.hibernate.hql.internal.ast.tree.Statement", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getSqlAST()"], ["org.hibernate.type.Type[]", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getReturnTypes()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getReturnAliases()"], ["java.lang.String[][]", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getColumnNames()"], ["java.util.List", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.iterate(org.hibernate.engine.spi.QueryParameters, org.hibernate.event.spi.EventSource)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.scroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.executeUpdate(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getSQLString()"], ["boolean", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.isShallowQuery()"], ["java.lang.String", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getQueryString()"], ["java.util.Map", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getEnabledFilters()"], ["int[]", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getNamedParameterLocs(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.containsCollectionFetches()"], ["boolean", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.isManipulationStatement()"], ["boolean", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.isUpdateStatement()"], ["void", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.validateScrollability()"], ["org.hibernate.hql.spi.ParameterTranslations", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getParameterTranslations()"], ["java.lang.Class", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getDynamicInstantiationResultType()"], ["org.hibernate.engine.query.spi.EntityGraphQueryHint", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.getEntityGraphQueryHint()"], ["void", "org.hibernate.hql.internal.ast.QueryTranslatorImpl.setEntityGraphQueryHint(org.hibernate.engine.query.spi.EntityGraphQueryHint)"], ["org.hibernate.hql.internal.ast.HqlToken", "org.hibernate.hql.internal.ast.HqlToken()"], ["boolean", "org.hibernate.hql.internal.ast.HqlToken.isPossibleID()"], ["void", "org.hibernate.hql.internal.ast.HqlToken.setType(int)"], ["void", "org.hibernate.hql.internal.ast.HqlToken.setPossibleID(boolean)"], ["java.lang.String", "org.hibernate.hql.internal.ast.HqlToken.toString()"], ["org.hibernate.hql.internal.ast.HqlSqlWalker$WithClauseVisitor", "org.hibernate.hql.internal.ast.HqlSqlWalker$WithClauseVisitor(org.hibernate.hql.internal.ast.tree.FromElement, org.hibernate.hql.internal.ast.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker$WithClauseVisitor.visit(antlr.collections.AST)"], ["org.hibernate.hql.internal.ast.tree.FromElement", "org.hibernate.hql.internal.ast.HqlSqlWalker$WithClauseVisitor.getReferencedFromElement()"], ["java.lang.String", "org.hibernate.hql.internal.ast.HqlSqlWalker$WithClauseVisitor.getJoinAlias()"], ["org.hibernate.hql.internal.ast.HqlSqlWalker", "org.hibernate.hql.internal.ast.HqlSqlWalker(org.hibernate.hql.internal.ast.QueryTranslatorImpl, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.HqlParser, java.util.Map, java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.traceIn(java.lang.String, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.traceOut(java.lang.String, antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.ast.HqlSqlWalker.isFilter()"], ["java.lang.String", "org.hibernate.hql.internal.ast.HqlSqlWalker.getCollectionFilterRole()"], ["boolean", "org.hibernate.hql.internal.ast.HqlSqlWalker.isInEntityGraph()"], ["org.hibernate.hql.internal.ast.util.SessionFactoryHelper", "org.hibernate.hql.internal.ast.HqlSqlWalker.getSessionFactoryHelper()"], ["java.util.Map", "org.hibernate.hql.internal.ast.HqlSqlWalker.getTokenReplacements()"], ["org.hibernate.hql.internal.ast.util.AliasGenerator", "org.hibernate.hql.internal.ast.HqlSqlWalker.getAliasGenerator()"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.HqlSqlWalker.getCurrentFromClause()"], ["org.hibernate.hql.internal.ast.ParseErrorHandler", "org.hibernate.hql.internal.ast.HqlSqlWalker.getParseErrorHandler()"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.reportError(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.reportWarning(java.lang.String)"], ["org.hibernate.sql.JoinType", "org.hibernate.hql.internal.ast.HqlSqlWalker.getImpliedJoinType()"], ["int[]", "org.hibernate.hql.internal.ast.HqlSqlWalker.getNamedParameterLocations(java.lang.String)"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.addQuerySpaces(java.io.Serializable[])"], ["org.hibernate.type.Type[]", "org.hibernate.hql.internal.ast.HqlSqlWalker.getReturnTypes()"], ["java.lang.String[]", "org.hibernate.hql.internal.ast.HqlSqlWalker.getReturnAliases()"], ["org.hibernate.hql.internal.ast.tree.SelectClause", "org.hibernate.hql.internal.ast.HqlSqlWalker.getSelectClause()"], ["org.hibernate.hql.internal.ast.tree.FromClause", "org.hibernate.hql.internal.ast.HqlSqlWalker.getFinalFromClause()"], ["boolean", "org.hibernate.hql.internal.ast.HqlSqlWalker.isShallowQuery()"], ["java.util.Map", "org.hibernate.hql.internal.ast.HqlSqlWalker.getEnabledFilters()"], ["org.hibernate.hql.internal.ast.util.LiteralProcessor", "org.hibernate.hql.internal.ast.HqlSqlWalker.getLiteralProcessor()"], ["org.hibernate.hql.internal.ast.util.ASTPrinter", "org.hibernate.hql.internal.ast.HqlSqlWalker.getASTPrinter()"], ["int", "org.hibernate.hql.internal.ast.HqlSqlWalker.getNumberOfParametersInSetClause()"], ["java.util.ArrayList", "org.hibernate.hql.internal.ast.HqlSqlWalker.getAssignmentSpecifications()"], ["org.hibernate.dialect.Dialect", "org.hibernate.hql.internal.ast.HqlSqlWalker.getDialect()"], ["void", "org.hibernate.hql.internal.ast.HqlSqlWalker.panic()"], ["java.lang.String", "org.hibernate.hql.internal.CollectionSubqueryFactory.createCollectionSubquery(org.hibernate.engine.internal.JoinSequence, java.util.Map, java.lang.String[])"], ["org.hibernate.hql.internal.QueryExecutionRequestException", "org.hibernate.hql.internal.QueryExecutionRequestException(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.hql.internal.QuerySplitter.concreteQueries(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.QuerySplitter.getImportedClass(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String[][]", "org.hibernate.hql.internal.NameGenerator.generateColumnNames(org.hibernate.type.Type[], org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.NameGenerator.scalarName(int, int)"], ["java.lang.String", "org.hibernate.hql.internal.NameGenerator.scalarName(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.hql.internal.NameGenerator.scalarNames(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.hql.internal.NameGenerator.scalarNames(int, int)"], ["org.hibernate.hql.internal.HolderInstantiator", "org.hibernate.hql.internal.HolderInstantiator.getHolderInstantiator(org.hibernate.transform.ResultTransformer, org.hibernate.transform.ResultTransformer, java.lang.String[])"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.HolderInstantiator.resolveResultTransformer(org.hibernate.transform.ResultTransformer, org.hibernate.transform.ResultTransformer)"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.HolderInstantiator.createSelectNewTransformer(java.lang.reflect.Constructor, boolean, boolean)"], ["org.hibernate.hql.internal.HolderInstantiator", "org.hibernate.hql.internal.HolderInstantiator.createClassicHolderInstantiator(java.lang.reflect.Constructor, org.hibernate.transform.ResultTransformer)"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.HolderInstantiator.resolveClassicResultTransformer(java.lang.reflect.Constructor, org.hibernate.transform.ResultTransformer)"], ["org.hibernate.hql.internal.HolderInstantiator", "org.hibernate.hql.internal.HolderInstantiator(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.hql.internal.HolderInstantiator", "org.hibernate.hql.internal.HolderInstantiator(org.hibernate.transform.ResultTransformer, java.lang.String[])"], ["org.hibernate.hql.internal.HolderInstantiator", "org.hibernate.hql.internal.HolderInstantiator(org.hibernate.transform.ResultTransformer, java.util.function.Supplier<java.lang.String[]>)"], ["boolean", "org.hibernate.hql.internal.HolderInstantiator.isRequired()"], ["java.lang.Object", "org.hibernate.hql.internal.HolderInstantiator.instantiate(java.lang.Object[])"], ["java.lang.String[]", "org.hibernate.hql.internal.HolderInstantiator.getQueryReturnAliases()"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.hql.internal.HolderInstantiator.getResultTransformer()"], ["boolean", "org.hibernate.hql.internal.classic.ParserHelper.isWhitespace(java.lang.String)"], ["void", "org.hibernate.hql.internal.classic.ParserHelper.parse(org.hibernate.hql.internal.classic.Parser, java.lang.String, java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.OrderByParser", "org.hibernate.hql.internal.classic.OrderByParser()"], ["void", "org.hibernate.hql.internal.classic.OrderByParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.OrderByParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.OrderByParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["java.lang.String", "org.hibernate.hql.internal.classic.NamedParameterInformationImpl.getSourceName()"], ["int", "org.hibernate.hql.internal.classic.NamedParameterInformationImpl.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.hql.internal.classic.WhereParser", "org.hibernate.hql.internal.classic.WhereParser()"], ["void", "org.hibernate.hql.internal.classic.WhereParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.WhereParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.WhereParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.PreprocessingParser", "org.hibernate.hql.internal.classic.PreprocessingParser(java.util.Map)"], ["void", "org.hibernate.hql.internal.classic.PreprocessingParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.PreprocessingParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.PreprocessingParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.PathExpressionParser", "org.hibernate.hql.internal.classic.PathExpressionParser()"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.ignoreInitialJoin()"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.PathExpressionParser$CollectionElement", "org.hibernate.hql.internal.classic.PathExpressionParser.lastCollectionElement()"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.setLastCollectionElementIndexValue(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.classic.PathExpressionParser.isExpectingCollectionIndex()"], ["org.hibernate.engine.internal.JoinSequence", "org.hibernate.hql.internal.classic.PathExpressionParser.getWhereJoin()"], ["java.lang.String", "org.hibernate.hql.internal.classic.PathExpressionParser.getWhereColumn()"], ["java.lang.String[]", "org.hibernate.hql.internal.classic.PathExpressionParser.getWhereColumns()"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.classic.PathExpressionParser.getWhereColumnType()"], ["java.lang.String", "org.hibernate.hql.internal.classic.PathExpressionParser.getName()"], ["java.lang.String", "org.hibernate.hql.internal.classic.PathExpressionParser.getCollectionSubquery(java.util.Map)"], ["boolean", "org.hibernate.hql.internal.classic.PathExpressionParser.isCollectionValued()"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.addAssociation(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["java.lang.String", "org.hibernate.hql.internal.classic.PathExpressionParser.addFromAssociation(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["java.lang.String", "org.hibernate.hql.internal.classic.PathExpressionParser.addFromCollection(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.PathExpressionParser.fetch(org.hibernate.hql.internal.classic.QueryTranslatorImpl, java.lang.String)"], ["org.hibernate.hql.internal.classic.QueryTranslatorImpl$OrdinalParameterStyle[]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$OrdinalParameterStyle.values()"], ["org.hibernate.hql.internal.classic.QueryTranslatorImpl$OrdinalParameterStyle", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$OrdinalParameterStyle.valueOf(java.lang.String)"], ["java.util.Map", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$2.getNamedParameterInformationMap()"], ["java.util.Map", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$2.getPositionalParameterInformationMap()"], ["org.hibernate.hql.spi.PositionalParameterInformation", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$2.getPositionalParameterInformation(int)"], ["org.hibernate.hql.spi.NamedParameterInformation", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$2.getNamedParameterInformation(java.lang.String)"], ["org.hibernate.hql.internal.classic.HavingParser", "org.hibernate.hql.internal.classic.HavingParser()"], ["org.hibernate.hql.internal.classic.SelectPathExpressionParser", "org.hibernate.hql.internal.classic.SelectPathExpressionParser()"], ["void", "org.hibernate.hql.internal.classic.SelectPathExpressionParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["java.lang.String", "org.hibernate.hql.internal.classic.SelectPathExpressionParser.getSelectName()"], ["org.hibernate.hql.internal.classic.GroupByParser", "org.hibernate.hql.internal.classic.GroupByParser()"], ["void", "org.hibernate.hql.internal.classic.GroupByParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.GroupByParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.GroupByParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.FromPathExpressionParser", "org.hibernate.hql.internal.classic.FromPathExpressionParser()"], ["void", "org.hibernate.hql.internal.classic.FromPathExpressionParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory", "org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory()"], ["org.hibernate.hql.spi.QueryTranslator", "org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory.createQueryTranslator(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.query.spi.EntityGraphQueryHint)"], ["org.hibernate.hql.spi.FilterTranslator", "org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory.createFilterTranslator(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.classic.FromParser", "org.hibernate.hql.internal.classic.FromParser()"], ["void", "org.hibernate.hql.internal.classic.FromParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.FromParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.FromParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["boolean", "org.hibernate.hql.internal.classic.QueryTranslatorImpl$1.includeSubclasses(java.lang.String)"], ["org.hibernate.hql.internal.classic.ClauseParser", "org.hibernate.hql.internal.classic.ClauseParser()"], ["void", "org.hibernate.hql.internal.classic.ClauseParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.ClauseParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.ClauseParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.SelectParser", "org.hibernate.hql.internal.classic.SelectParser()"], ["void", "org.hibernate.hql.internal.classic.SelectParser.token(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["boolean", "org.hibernate.hql.internal.classic.SelectParser.aggregateHasArgs(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["boolean", "org.hibernate.hql.internal.classic.SelectParser.aggregateFuncNoArgsHasParenthesis(java.lang.String, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.classic.SelectParser.aggregateType(java.util.List, org.hibernate.type.Type, org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.SelectParser.start(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["void", "org.hibernate.hql.internal.classic.SelectParser.end(org.hibernate.hql.internal.classic.QueryTranslatorImpl)"], ["org.hibernate.hql.internal.classic.AbstractParameterInformation", "org.hibernate.hql.internal.classic.AbstractParameterInformation()"], ["int[]", "org.hibernate.hql.internal.classic.AbstractParameterInformation.getSourceLocations()"], ["void", "org.hibernate.hql.internal.classic.AbstractParameterInformation.addSourceLocation(int)"], ["org.hibernate.type.Type", "org.hibernate.hql.internal.classic.AbstractParameterInformation.getExpectedType()"], ["void", "org.hibernate.hql.internal.classic.AbstractParameterInformation.setExpectedType(org.hibernate.type.Type)"], ["org.hibernate.hql.internal.classic.PositionalParameterInformationImpl", "org.hibernate.hql.internal.classic.PositionalParameterInformationImpl(int)"], ["int", "org.hibernate.hql.internal.classic.PositionalParameterInformationImpl.getLabel()"], ["int", "org.hibernate.hql.internal.classic.PositionalParameterInformationImpl.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.hql.internal.classic.QueryTranslatorImpl", "org.hibernate.hql.internal.classic.QueryTranslatorImpl(java.lang.String, java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.hql.internal.classic.QueryTranslatorImpl", "org.hibernate.hql.internal.classic.QueryTranslatorImpl(java.lang.String, java.util.Map, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["synchronized", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.void compile(java.util.Map, boolean)"], ["synchronized", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.void compile(java.lang.String, java.util.Map, boolean)"], ["java.lang.String", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getSQLString()"], ["java.lang.String", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getQueryString()"], ["org.hibernate.type.Type[]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getReturnTypes()"], ["java.lang.String[]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getReturnAliases()"], ["java.lang.String[][]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getColumnNames()"], ["java.lang.String", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getAliasName(java.lang.String)"], ["int[]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getNamedParameterLocs(java.lang.String)"], ["org.hibernate.persister.collection.CollectionPersister[]", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getCollectionPersisters()"], ["java.util.List", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.list(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.iterate(org.hibernate.engine.spi.QueryParameters, org.hibernate.event.spi.EventSource)"], ["int", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.executeUpdate(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.toString()"], ["java.lang.Class", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getHolderClass()"], ["java.util.Map", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getEnabledFilters()"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.scroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getQueryIdentifier()"], ["void", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.validateScrollability()"], ["boolean", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.containsCollectionFetches()"], ["boolean", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.isManipulationStatement()"], ["java.lang.Class", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getDynamicInstantiationResultType()"], ["org.hibernate.hql.spi.ParameterTranslations", "org.hibernate.hql.internal.classic.QueryTranslatorImpl.getParameterTranslations()"], ["org.hibernate.hql.internal.QueryTranslatorFactoryInitiator", "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator()"], ["org.hibernate.hql.spi.QueryTranslatorFactory", "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.hql.internal.antlr.SqlStatementLexer", "org.hibernate.hql.internal.antlr.SqlStatementLexer(java.io.InputStream)"], ["org.hibernate.hql.internal.antlr.SqlStatementLexer", "org.hibernate.hql.internal.antlr.SqlStatementLexer(java.io.Reader)"], ["org.hibernate.hql.internal.antlr.SqlStatementLexer", "org.hibernate.hql.internal.antlr.SqlStatementLexer(antlr.InputBuffer)"], ["org.hibernate.hql.internal.antlr.SqlStatementLexer", "org.hibernate.hql.internal.antlr.SqlStatementLexer(antlr.LexerSharedInputState)"], ["antlr.Token", "org.hibernate.hql.internal.antlr.SqlStatementLexer.nextToken()"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementLexer.mSTMT_END(boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementLexer.mNOT_STMT_END(boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementLexer.mQUOTED_STRING(boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementLexer.mLINE_COMMENT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementLexer.mMULTILINE_COMMENT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.setFilter(boolean)"], ["boolean", "org.hibernate.hql.internal.antlr.HqlBaseParser.isFilter()"], ["antlr.collections.AST", "org.hibernate.hql.internal.antlr.HqlBaseParser.handleIdentifierError(antlr.Token, antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.handleDotIdent()"], ["antlr.collections.AST", "org.hibernate.hql.internal.antlr.HqlBaseParser.negateNode(antlr.collections.AST)"], ["antlr.collections.AST", "org.hibernate.hql.internal.antlr.HqlBaseParser.processEqualityExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.weakKeywords()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.firstPathTokenWeakKeywords()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.handlePrimaryExpressionDotIdent()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.matchOptionalFrom()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.expectNamedParameterName()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.processMemberOf(antlr.Token, antlr.collections.AST, antlr.ASTPair)"], ["org.hibernate.hql.internal.antlr.HqlBaseParser", "org.hibernate.hql.internal.antlr.HqlBaseParser(antlr.TokenBuffer)"], ["org.hibernate.hql.internal.antlr.HqlBaseParser", "org.hibernate.hql.internal.antlr.HqlBaseParser(antlr.TokenStream)"], ["org.hibernate.hql.internal.antlr.HqlBaseParser", "org.hibernate.hql.internal.antlr.HqlBaseParser(antlr.ParserSharedInputState)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.statement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.updateStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.deleteStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.insertStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.optionalVersioned()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.optionalFromTokenFromClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.setClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.whereClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.assignment()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.stateField()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.newValue()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.path()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.concatenation()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.asAlias()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.intoClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.insertablePropertySpec()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.primaryExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.groupByClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.orderByClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.selectClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.fromClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.selectedPropertiesList()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.newExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.selectObject()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.identifier()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.fromRange()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.fromJoin()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.joinPath()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.propertyFetch()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.withClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.castedJoinPath()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.logicalExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.fromClassOrOuterQueryPath()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.inClassDeclaration()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.inCollectionDeclaration()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.inCollectionElementsDeclaration()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.alias()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.expression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.havingClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.orderElement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.ascendingOrDescending()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.nullOrdering()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.nullPrecedence()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.aliasedExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.logicalOrExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.logicalAndExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.negatedExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.equalityExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.relationalExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.additiveExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.inList()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.betweenList()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.likeEscape()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.memberOfPath()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.compoundExpr()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.multiplyExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.unaryExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.caseExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.quantifiedExpression()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.atom()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.simpleCaseStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.searchedCaseStatement()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.simpleCaseWhenClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.elseClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.searchedCaseWhenClause()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.collectionExpr()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.subQuery()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.exprList()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.jpaFunctionSyntax()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.castFunction()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.identPrimary()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.constant()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.parameter()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.expressionOrVector()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.castTargetType()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.vectorExpr()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.identPrimaryBase()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.aggregate()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseParser.castedIdentPrimaryBase()"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.reportError(java.lang.String)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.reportWarning(java.lang.String)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.throwExceptionIfErrorOccurred()"], ["org.hibernate.hql.internal.antlr.SqlStatementParser", "org.hibernate.hql.internal.antlr.SqlStatementParser(antlr.TokenBuffer)"], ["org.hibernate.hql.internal.antlr.SqlStatementParser", "org.hibernate.hql.internal.antlr.SqlStatementParser(antlr.TokenStream)"], ["org.hibernate.hql.internal.antlr.SqlStatementParser", "org.hibernate.hql.internal.antlr.SqlStatementParser(antlr.ParserSharedInputState)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.script()"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser.statement()"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler.reportError(antlr.RecognitionException)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler.reportError(java.lang.String)"], ["void", "org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler.reportWarning(java.lang.String)"], ["boolean", "org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler.hasErrors()"], ["java.lang.String", "org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler.getErrorMessage()"], ["org.hibernate.hql.internal.antlr.HqlBaseLexer", "org.hibernate.hql.internal.antlr.HqlBaseLexer(java.io.InputStream)"], ["org.hibernate.hql.internal.antlr.HqlBaseLexer", "org.hibernate.hql.internal.antlr.HqlBaseLexer(java.io.Reader)"], ["org.hibernate.hql.internal.antlr.HqlBaseLexer", "org.hibernate.hql.internal.antlr.HqlBaseLexer(antlr.InputBuffer)"], ["org.hibernate.hql.internal.antlr.HqlBaseLexer", "org.hibernate.hql.internal.antlr.HqlBaseLexer(antlr.LexerSharedInputState)"], ["antlr.Token", "org.hibernate.hql.internal.antlr.HqlBaseLexer.nextToken()"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mEQ(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mLT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mGT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mSQL_NE(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mNE(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mLE(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mGE(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mCOMMA(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mOPEN(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mCLOSE(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mOPEN_BRACKET(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mCLOSE_BRACKET(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mCONCAT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mPLUS(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mMINUS(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mSTAR(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mDIV(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mMOD(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mCOLON(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mPARAM(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mIDENT(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mQUOTED_STRING(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mWS(boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlBaseLexer.mNUM_INT(boolean)"], ["org.hibernate.hql.internal.antlr.SqlGeneratorBase", "org.hibernate.hql.internal.antlr.SqlGeneratorBase()"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.statement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.updateStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.deleteStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.insertStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.from(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.whereExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.groupExprs(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.booleanExpr(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.orderExprs(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.fromTable(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.setClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.whereClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.comparisonExpr(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.whereClauseExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.conditionList(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.expr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.orderDirection(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.nullOrdering(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.nullPrecedence(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.filters(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.thetaJoins(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.sqlToken(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.distinctOrAll(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectColumn(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectAtom(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.mapComponentReference(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.count(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.methodCall(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.aggregate(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.constant(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.arithmeticExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.selectBooleanExpr(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.parameter(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.countExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.simpleExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.tableJoin(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.booleanOp(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.binaryComparisonExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.exoticComparisonExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.likeEscape(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.inList(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.quantified(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.parenSelect(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.simpleExprList(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.simpleOrTupleExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.tupleExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.addrExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.additiveExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.multiplicativeExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.nestedExprAfterMinusDiv(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.caseExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.nestedExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.arguments(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.castExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.SqlGeneratorBase.castTargetType(antlr.collections.AST)"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isSubQuery()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInFrom()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInFunctionCall()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInSelect()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInCase()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInCount()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isInCountDistinct()"], ["int", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.getStatementType()"], ["int", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.getCurrentClauseType()"], ["int", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.getCurrentTopLevelClauseType()"], ["int", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.getCurrentStatementType()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isComparativeExpressionClause()"], ["boolean", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.isSelectStatement()"], ["org.hibernate.hql.internal.antlr.HqlSqlBaseWalker", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker()"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.updateStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.deleteStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.insertStatement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.setClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.intoClause(antlr.collections.AST)"], ["java.lang.String", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.path(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.insertablePropertySpec(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.assignment(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.propertyRef(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.newValue(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.groupClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.orderClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.orderExprs(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.orderExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.nullOrdering(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.nullPrecedence(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.resultVariableRef(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.identifier(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExprList(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.aliasedSelectExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.aliasRef(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.constructor(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.functionCall(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.count(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunction(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.constant(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.arithmeticExpr(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.parameter(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.aggregateExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.joinElement(antlr.collections.AST)"], ["int", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.joinType(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.pathAsIdent(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.withClause(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.inRhs(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.addrExpr(antlr.collections.AST, boolean)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.caseExpr(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.simpleCaseExpression(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.searchedCaseExpression(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expressionOrSubQuery(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.simpleCaseWhenClause(antlr.collections.AST, antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.elseClause(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.searchedCaseWhenClause(antlr.collections.AST, antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.literal(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.addrExprLhs(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.propertyName(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.mapComponentReference(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.propertyRefLhs(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.mapPropertyExpression(antlr.collections.AST)"], ["void", "org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.numericInteger(antlr.collections.AST)"], ["org.hibernate.hql.internal.antlr.SqlStatementParser$StatementParserException", "org.hibernate.hql.internal.antlr.SqlStatementParser$StatementParserException(org.hibernate.hql.internal.antlr.SqlStatementParser, java.lang.String)"], ["org.hibernate.TransientPropertyValueException", "org.hibernate.TransientPropertyValueException(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.TransientPropertyValueException.getTransientEntityName()"], ["java.lang.String", "org.hibernate.TransientPropertyValueException.getPropertyOwnerEntityName()"], ["java.lang.String", "org.hibernate.TransientPropertyValueException.getPropertyName()"], ["java.lang.String", "org.hibernate.TransientPropertyValueException.getMessage()"], ["org.hibernate.annotations.GenerationTime[]", "org.hibernate.annotations.GenerationTime.values()"], ["org.hibernate.annotations.GenerationTime", "org.hibernate.annotations.GenerationTime.valueOf(java.lang.String)"], ["org.hibernate.tuple.GenerationTiming", "org.hibernate.annotations.GenerationTime.getEquivalent()"], ["org.hibernate.annotations.SourceType[]", "org.hibernate.annotations.SourceType.values()"], ["org.hibernate.annotations.SourceType", "org.hibernate.annotations.SourceType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.annotations.SourceType.typeName()"], ["org.hibernate.annotations.CascadeType[]", "org.hibernate.annotations.CascadeType.values()"], ["org.hibernate.annotations.CascadeType", "org.hibernate.annotations.CascadeType.valueOf(java.lang.String)"], ["org.hibernate.annotations.OnDeleteAction[]", "org.hibernate.annotations.OnDeleteAction.values()"], ["org.hibernate.annotations.OnDeleteAction", "org.hibernate.annotations.OnDeleteAction.valueOf(java.lang.String)"], ["org.hibernate.annotations.PolymorphismType[]", "org.hibernate.annotations.PolymorphismType.values()"], ["org.hibernate.annotations.PolymorphismType", "org.hibernate.annotations.PolymorphismType.valueOf(java.lang.String)"], ["org.hibernate.annotations.FlushModeType[]", "org.hibernate.annotations.FlushModeType.values()"], ["org.hibernate.annotations.FlushModeType", "org.hibernate.annotations.FlushModeType.valueOf(java.lang.String)"], ["org.hibernate.annotations.ResultCheckStyle[]", "org.hibernate.annotations.ResultCheckStyle.values()"], ["org.hibernate.annotations.ResultCheckStyle", "org.hibernate.annotations.ResultCheckStyle.valueOf(java.lang.String)"], ["org.hibernate.annotations.CacheModeType[]", "org.hibernate.annotations.CacheModeType.values()"], ["org.hibernate.annotations.CacheModeType", "org.hibernate.annotations.CacheModeType.valueOf(java.lang.String)"], ["org.hibernate.CacheMode", "org.hibernate.annotations.CacheModeType.getCacheMode()"], ["org.hibernate.annotations.CacheModeType", "org.hibernate.annotations.CacheModeType.fromCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.annotations.LazyToOneOption[]", "org.hibernate.annotations.LazyToOneOption.values()"], ["org.hibernate.annotations.LazyToOneOption", "org.hibernate.annotations.LazyToOneOption.valueOf(java.lang.String)"], ["org.hibernate.annotations.LazyCollectionOption[]", "org.hibernate.annotations.LazyCollectionOption.values()"], ["org.hibernate.annotations.LazyCollectionOption", "org.hibernate.annotations.LazyCollectionOption.valueOf(java.lang.String)"], ["org.hibernate.annotations.NotFoundAction[]", "org.hibernate.annotations.NotFoundAction.values()"], ["org.hibernate.annotations.NotFoundAction", "org.hibernate.annotations.NotFoundAction.valueOf(java.lang.String)"], ["org.hibernate.annotations.CacheConcurrencyStrategy[]", "org.hibernate.annotations.CacheConcurrencyStrategy.values()"], ["org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.CacheConcurrencyStrategy.valueOf(java.lang.String)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.annotations.CacheConcurrencyStrategy.toAccessType()"], ["org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.CacheConcurrencyStrategy.fromAccessType(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.CacheConcurrencyStrategy.parse(java.lang.String)"], ["org.hibernate.annotations.OptimisticLockType[]", "org.hibernate.annotations.OptimisticLockType.values()"], ["org.hibernate.annotations.OptimisticLockType", "org.hibernate.annotations.OptimisticLockType.valueOf(java.lang.String)"], ["org.hibernate.annotations.SortType[]", "org.hibernate.annotations.SortType.values()"], ["org.hibernate.annotations.SortType", "org.hibernate.annotations.SortType.valueOf(java.lang.String)"], ["org.hibernate.annotations.FetchMode[]", "org.hibernate.annotations.FetchMode.values()"], ["org.hibernate.annotations.FetchMode", "org.hibernate.annotations.FetchMode.valueOf(java.lang.String)"], ["org.hibernate.PropertyAccessException", "org.hibernate.PropertyAccessException(java.lang.Throwable, java.lang.String, boolean, java.lang.Class, java.lang.String)"], ["java.lang.Class", "org.hibernate.PropertyAccessException.getPersistentClass()"], ["java.lang.String", "org.hibernate.PropertyAccessException.getPropertyName()"], ["java.lang.String", "org.hibernate.PropertyAccessException.getMessage()"], ["boolean", "org.hibernate.ReplicationMode$1.shouldOverwriteCurrentVersion(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.type.VersionType)"], ["java.lang.String", "org.hibernate.proxy.AbstractLazyInitializer.getEntityName()"], ["java.io.Serializable", "org.hibernate.proxy.AbstractLazyInitializer.getIdentifier()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.setIdentifier(java.io.Serializable)"], ["boolean", "org.hibernate.proxy.AbstractLazyInitializer.isUninitialized()"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.proxy.AbstractLazyInitializer.getSession()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.setSession(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.unsetSession()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.initialize()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.initializeWithoutLoadIfPossible()"], ["java.lang.Object", "org.hibernate.proxy.AbstractLazyInitializer.getImplementation()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.setImplementation(java.lang.Object)"], ["java.lang.Object", "org.hibernate.proxy.AbstractLazyInitializer.getImplementation(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.proxy.AbstractLazyInitializer.isReadOnlySettingAvailable()"], ["boolean", "org.hibernate.proxy.AbstractLazyInitializer.isReadOnly()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.setReadOnly(boolean)"], ["java.lang.Boolean", "org.hibernate.proxy.AbstractLazyInitializer.isReadOnlyBeforeAttachedToSession()"], ["boolean", "org.hibernate.proxy.AbstractLazyInitializer.isUnwrap()"], ["void", "org.hibernate.proxy.AbstractLazyInitializer.setUnwrap(boolean)"], ["java.lang.Class", "org.hibernate.proxy.HibernateProxyHelper.getClassWithoutInitializingProxy(java.lang.Object)"], ["org.hibernate.proxy.map.MapProxyFactory", "org.hibernate.proxy.map.MapProxyFactory()"], ["void", "org.hibernate.proxy.map.MapProxyFactory.postInstantiate(java.lang.String, java.lang.Class, java.util.Set, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.proxy.map.MapProxyFactory.getProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.proxy.LazyInitializer", "org.hibernate.proxy.map.MapProxy.getHibernateLazyInitializer()"], ["int", "org.hibernate.proxy.map.MapProxy.size()"], ["void", "org.hibernate.proxy.map.MapProxy.clear()"], ["boolean", "org.hibernate.proxy.map.MapProxy.isEmpty()"], ["boolean", "org.hibernate.proxy.map.MapProxy.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.proxy.map.MapProxy.containsValue(java.lang.Object)"], ["java.util.Collection", "org.hibernate.proxy.map.MapProxy.values()"], ["void", "org.hibernate.proxy.map.MapProxy.putAll(java.util.Map)"], ["java.util.Set", "org.hibernate.proxy.map.MapProxy.entrySet()"], ["java.util.Set", "org.hibernate.proxy.map.MapProxy.keySet()"], ["java.lang.Object", "org.hibernate.proxy.map.MapProxy.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.proxy.map.MapProxy.remove(java.lang.Object)"], ["java.lang.Object", "org.hibernate.proxy.map.MapProxy.put(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.proxy.map.MapProxy.writeReplace()"], ["org.hibernate.proxy.map.SerializableMapProxy", "org.hibernate.proxy.map.SerializableMapProxy(java.lang.String, java.io.Serializable, java.lang.Boolean, java.lang.String, boolean)"], ["java.util.Map", "org.hibernate.proxy.map.MapLazyInitializer.getMap()"], ["java.lang.Class", "org.hibernate.proxy.map.MapLazyInitializer.getPersistentClass()"], ["org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher", "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher()"], ["java.lang.Object", "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher.intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Object, org.hibernate.proxy.ProxyConfiguration$Interceptor)"], ["java.lang.Class", "org.hibernate.proxy.pojo.BasicLazyInitializer.getPersistentClass()"], ["org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer", "org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType, org.hibernate.engine.spi.SharedSessionContractImplementor, boolean)"], ["java.lang.Object", "org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object[])"], ["org.hibernate.proxy.pojo.javassist.JavassistProxyFactory", "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory()"], ["void", "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory.postInstantiate(java.lang.String, java.lang.Class, java.util.Set<java.lang.Class>, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["javassist.util.proxy.ProxyFactory", "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory.buildJavassistProxyFactory(java.lang.Class, java.lang.Class[])"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory.getProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory.deserializeProxy(org.hibernate.proxy.pojo.javassist.SerializableProxy)"], ["org.hibernate.proxy.pojo.javassist.SerializableProxy", "org.hibernate.proxy.pojo.javassist.SerializableProxy(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.Boolean, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.pojo.javassist.SerializableProxy", "org.hibernate.proxy.pojo.javassist.SerializableProxy(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.Boolean, java.lang.String, boolean, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType, org.hibernate.engine.spi.SharedSessionContractImplementor, boolean)"], ["java.lang.Object", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor.intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper(org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState)"], ["java.lang.Class", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper.buildProxy(java.lang.Class, java.lang.Class[])"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper.deserializeProxy(org.hibernate.proxy.pojo.bytebuddy.SerializableProxy)"], ["org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyFactory", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyFactory(org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyHelper)"], ["void", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyFactory.postInstantiate(java.lang.String, java.lang.Class, java.util.Set<java.lang.Class>, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.HibernateProxy", "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyProxyFactory.getProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.proxy.pojo.bytebuddy.SerializableProxy", "org.hibernate.proxy.pojo.bytebuddy.SerializableProxy(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.Boolean, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.proxy.pojo.bytebuddy.SerializableProxy", "org.hibernate.proxy.pojo.bytebuddy.SerializableProxy(java.lang.String, java.lang.Class, java.lang.Class[], java.io.Serializable, java.lang.Boolean, java.lang.String, boolean, java.lang.reflect.Method, java.lang.reflect.Method, org.hibernate.type.CompositeType)"], ["org.hibernate.secure.spi.GrantedPermission", "org.hibernate.secure.spi.GrantedPermission(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.secure.spi.GrantedPermission.getRole()"], ["java.lang.String", "org.hibernate.secure.spi.GrantedPermission.getEntityName()"], ["org.hibernate.secure.spi.PermissibleAction", "org.hibernate.secure.spi.GrantedPermission.getPermissibleAction()"], ["boolean", "org.hibernate.secure.spi.JaccIntegrator$1.areMatch(java.lang.Object, java.lang.Object)"], ["org.hibernate.event.service.spi.DuplicationStrategy$Action", "org.hibernate.secure.spi.JaccIntegrator$1.getAction()"], ["org.hibernate.secure.spi.JaccIntegrator", "org.hibernate.secure.spi.JaccIntegrator()"], ["void", "org.hibernate.secure.spi.JaccIntegrator.prepareServices(org.hibernate.boot.registry.StandardServiceRegistryBuilder)"], ["void", "org.hibernate.secure.spi.JaccIntegrator.integrate(org.hibernate.boot.Metadata, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["void", "org.hibernate.secure.spi.JaccIntegrator.disintegrate(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["java.lang.String[]", "org.hibernate.secure.spi.PermissibleAction$1.getImpliedActions()"], ["org.hibernate.secure.spi.JaccPermissionDeclarations", "org.hibernate.secure.spi.JaccPermissionDeclarations(java.lang.String)"], ["java.lang.String", "org.hibernate.secure.spi.JaccPermissionDeclarations.getContextId()"], ["void", "org.hibernate.secure.spi.JaccPermissionDeclarations.addPermissionDeclaration(org.hibernate.secure.spi.GrantedPermission)"], ["void", "org.hibernate.secure.spi.JaccPermissionDeclarations.addPermissionDeclarations(java.util.Collection<org.hibernate.secure.spi.GrantedPermission>)"], ["org.hibernate.secure.spi.IntegrationException", "org.hibernate.secure.spi.IntegrationException(java.lang.String)"], ["org.hibernate.secure.spi.IntegrationException", "org.hibernate.secure.spi.IntegrationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.secure.spi.PermissibleAction[]", "org.hibernate.secure.spi.PermissibleAction.values()"], ["org.hibernate.secure.spi.PermissibleAction", "org.hibernate.secure.spi.PermissibleAction.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.secure.spi.PermissibleAction.getExternalName()"], ["java.lang.String[]", "org.hibernate.secure.spi.PermissibleAction.getImpliedActions()"], ["org.hibernate.secure.spi.PermissibleAction", "org.hibernate.secure.spi.PermissibleAction.interpret(java.lang.String)"], ["org.hibernate.secure.internal.AbstractJaccSecurableEventListener", "org.hibernate.secure.internal.AbstractJaccSecurableEventListener()"], ["org.hibernate.secure.internal.JaccPreInsertEventListener", "org.hibernate.secure.internal.JaccPreInsertEventListener()"], ["boolean", "org.hibernate.secure.internal.JaccPreInsertEventListener.onPreInsert(org.hibernate.event.spi.PreInsertEvent)"], ["org.hibernate.secure.internal.DisabledJaccServiceImpl", "org.hibernate.secure.internal.DisabledJaccServiceImpl()"], ["java.lang.String", "org.hibernate.secure.internal.DisabledJaccServiceImpl.getContextId()"], ["void", "org.hibernate.secure.internal.DisabledJaccServiceImpl.addPermission(org.hibernate.secure.spi.GrantedPermission)"], ["void", "org.hibernate.secure.internal.DisabledJaccServiceImpl.checkPermission(org.hibernate.secure.spi.PermissionCheckEntityInformation, org.hibernate.secure.spi.PermissibleAction)"], ["org.hibernate.secure.internal.JaccPreLoadEventListener", "org.hibernate.secure.internal.JaccPreLoadEventListener()"], ["void", "org.hibernate.secure.internal.JaccPreLoadEventListener.onPreLoad(org.hibernate.event.spi.PreLoadEvent)"], ["javax.security.auth.Subject", "org.hibernate.secure.internal.StandardJaccServiceImpl$PrivilegedContextSubjectAccess.getContextSubject()"], ["javax.security.auth.Subject", "org.hibernate.secure.internal.StandardJaccServiceImpl$PrivilegedContextSubjectAccess$1.run()"], ["java.lang.Object", "org.hibernate.secure.internal.StandardJaccServiceImpl$PrivilegedContextSubjectAccess$1.run()"], ["org.hibernate.secure.internal.JaccPreDeleteEventListener", "org.hibernate.secure.internal.JaccPreDeleteEventListener()"], ["boolean", "org.hibernate.secure.internal.JaccPreDeleteEventListener.onPreDelete(org.hibernate.event.spi.PreDeleteEvent)"], ["org.hibernate.secure.internal.StandardJaccServiceImpl", "org.hibernate.secure.internal.StandardJaccServiceImpl()"], ["void", "org.hibernate.secure.internal.StandardJaccServiceImpl.configure(java.util.Map)"], ["java.lang.String", "org.hibernate.secure.internal.StandardJaccServiceImpl.getContextId()"], ["void", "org.hibernate.secure.internal.StandardJaccServiceImpl.addPermission(org.hibernate.secure.spi.GrantedPermission)"], ["void", "org.hibernate.secure.internal.StandardJaccServiceImpl.checkPermission(org.hibernate.secure.spi.PermissionCheckEntityInformation, org.hibernate.secure.spi.PermissibleAction)"], ["org.hibernate.secure.internal.JaccPreUpdateEventListener", "org.hibernate.secure.internal.JaccPreUpdateEventListener()"], ["boolean", "org.hibernate.secure.internal.JaccPreUpdateEventListener.onPreUpdate(org.hibernate.event.spi.PreUpdateEvent)"], ["javax.security.auth.Subject", "org.hibernate.secure.internal.StandardJaccServiceImpl$NonPrivilegedContextSubjectAccess.getContextSubject()"], ["java.lang.String", "org.hibernate.secure.internal.StandardJaccServiceImpl$ContextIdSetAction.run()"], ["java.lang.Object", "org.hibernate.secure.internal.StandardJaccServiceImpl$ContextIdSetAction.run()"], ["org.hibernate.loader.DefaultEntityAliases", "org.hibernate.loader.DefaultEntityAliases(java.util.Map, org.hibernate.persister.entity.Loadable, java.lang.String)"], ["org.hibernate.loader.DefaultEntityAliases", "org.hibernate.loader.DefaultEntityAliases(org.hibernate.persister.entity.Loadable, java.lang.String)"], ["java.lang.String[][]", "org.hibernate.loader.DefaultEntityAliases.getSuffixedPropertyAliases(org.hibernate.persister.entity.Loadable)"], ["java.lang.String[]", "org.hibernate.loader.DefaultEntityAliases.getSuffixedVersionAliases()"], ["java.lang.String[][]", "org.hibernate.loader.DefaultEntityAliases.getSuffixedPropertyAliases()"], ["java.lang.String", "org.hibernate.loader.DefaultEntityAliases.getSuffixedDiscriminatorAlias()"], ["java.lang.String[]", "org.hibernate.loader.DefaultEntityAliases.getSuffixedKeyAliases()"], ["java.lang.String", "org.hibernate.loader.DefaultEntityAliases.getRowIdAlias()"], ["java.lang.String", "org.hibernate.loader.DefaultEntityAliases.getSuffix()"], ["org.hibernate.loader.GeneratedCollectionAliases", "org.hibernate.loader.GeneratedCollectionAliases(java.util.Map, org.hibernate.persister.collection.CollectionPersister, java.lang.String)"], ["org.hibernate.loader.GeneratedCollectionAliases", "org.hibernate.loader.GeneratedCollectionAliases(org.hibernate.persister.collection.CollectionPersister, java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.GeneratedCollectionAliases.getSuffixedKeyAliases()"], ["java.lang.String[]", "org.hibernate.loader.GeneratedCollectionAliases.getSuffixedIndexAliases()"], ["java.lang.String[]", "org.hibernate.loader.GeneratedCollectionAliases.getSuffixedElementAliases()"], ["java.lang.String", "org.hibernate.loader.GeneratedCollectionAliases.getSuffixedIdentifierAlias()"], ["java.lang.String", "org.hibernate.loader.GeneratedCollectionAliases.getSuffix()"], ["java.lang.String", "org.hibernate.loader.GeneratedCollectionAliases.toString()"], ["java.sql.ResultSet", "org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader$SqlStatementWrapper.getResultSet()"], ["java.sql.Statement", "org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader$SqlStatementWrapper.getStatement()"], ["org.hibernate.loader.plan.exec.internal.EntityReferenceAliasesImpl", "org.hibernate.loader.plan.exec.internal.EntityReferenceAliasesImpl(java.lang.String, org.hibernate.loader.EntityAliases)"], ["java.lang.String", "org.hibernate.loader.plan.exec.internal.EntityReferenceAliasesImpl.getTableAlias()"], ["org.hibernate.loader.EntityAliases", "org.hibernate.loader.plan.exec.internal.EntityReferenceAliasesImpl.getColumnAliases()"], ["boolean", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails.hasCollectionInitializers()"], ["void", "org.hibernate.loader.plan.exec.internal.AbstractLoadQueryDetails$ReaderCollectorImpl.add(org.hibernate.loader.plan.exec.process.spi.CollectionReferenceInitializer)"], ["void", "org.hibernate.loader.plan.exec.internal.AbstractLoadQueryDetails$ReaderCollectorImpl.add(org.hibernate.loader.plan.exec.process.spi.EntityReferenceInitializer)"], ["<T extends org.hibernate.loader.plan.spi.Return> T", "org.hibernate.loader.plan.exec.internal.RootHelper.extractRootReturn(org.hibernate.loader.plan.spi.LoadPlan, java.lang.Class<T>)"], ["<T extends org.hibernate.loader.plan.spi.QuerySpace> T", "org.hibernate.loader.plan.exec.internal.RootHelper.extractRootQuerySpace(org.hibernate.loader.plan.spi.QuerySpaces, java.lang.Class<org.hibernate.loader.plan.spi.EntityQuerySpace>)"], ["org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl(org.hibernate.engine.spi.SessionFactoryImplementor, int)"], ["org.hibernate.loader.plan.exec.spi.EntityReferenceAliases", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.generateEntityReferenceAliases(java.lang.String, org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.loader.plan.exec.spi.CollectionReferenceAliases", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.generateCollectionReferenceAliases(java.lang.String, org.hibernate.persister.collection.CollectionPersister, java.lang.String)"], ["java.lang.String", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.resolveSqlTableAliasFromQuerySpaceUid(java.lang.String)"], ["org.hibernate.loader.plan.exec.spi.EntityReferenceAliases", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.resolveEntityReferenceAliases(java.lang.String)"], ["org.hibernate.loader.plan.exec.spi.CollectionReferenceAliases", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.resolveCollectionReferenceAliases(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.registerCompositeQuerySpaceUidResolution(java.lang.String, java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl.dumpResolutions(org.hibernate.loader.plan.spi.LoadPlan)"], ["org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader(org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader", "org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor(org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.exec.spi.AliasResolutionContext", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.getAliasResolutionContext()"], ["org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.getQueryBuildingParameters()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.getSessionFactory()"], ["void", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(org.hibernate.loader.plan.spi.QuerySpace, org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder)"], ["org.hibernate.loader.plan.exec.internal.FetchStats", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processFetches(org.hibernate.loader.plan.spi.FetchSource, org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder, org.hibernate.loader.plan.exec.process.spi.ReaderCollector)"], ["int[]", "org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader$1.getNamedParameterLocations(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor$FetchStatsImpl.processingFetch(org.hibernate.loader.plan.spi.Fetch)"], ["boolean", "org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor$FetchStatsImpl.hasSubselectFetches()"], ["org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl(org.hibernate.loader.plan.exec.process.internal.EntityReturnReader, org.hibernate.loader.plan.exec.process.spi.EntityReferenceInitializer)"], ["org.hibernate.loader.plan.exec.process.spi.RowReader", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl.buildRowReader()"], ["org.hibernate.loader.plan.exec.process.internal.EntityReturnReader", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl.getReturnReader()"], ["org.hibernate.loader.plan.exec.process.spi.ReturnReader", "org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderReaderCollectorImpl.getReturnReader()"], ["org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl", "org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl(java.lang.String, java.lang.String, org.hibernate.loader.CollectionAliases, org.hibernate.loader.plan.exec.spi.EntityReferenceAliases)"], ["java.lang.String", "org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl.getCollectionTableAlias()"], ["java.lang.String", "org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl.getElementTableAlias()"], ["org.hibernate.loader.CollectionAliases", "org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl.getCollectionColumnAliases()"], ["org.hibernate.loader.plan.exec.spi.EntityReferenceAliases", "org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl.getEntityElementAliases()"], ["org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl", "org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl(org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader, org.hibernate.loader.plan.exec.process.spi.CollectionReferenceInitializer)"], ["org.hibernate.loader.plan.exec.process.spi.RowReader", "org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl.buildRowReader()"], ["org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader", "org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl.getReturnReader()"], ["org.hibernate.loader.plan.exec.process.spi.ReturnReader", "org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl.getReturnReader()"], ["org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails", "org.hibernate.loader.plan.exec.internal.BatchingLoadQueryDetailsFactory.makeEntityLoadQueryDetails(org.hibernate.loader.plan.spi.LoadPlan, java.lang.String[], org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails", "org.hibernate.loader.plan.exec.internal.BatchingLoadQueryDetailsFactory.makeEntityLoadQueryDetails(org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters)"], ["org.hibernate.loader.plan.exec.spi.LoadQueryDetails", "org.hibernate.loader.plan.exec.internal.BatchingLoadQueryDetailsFactory.makeCollectionLoadQueryDetails(org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.plan.spi.LoadPlan, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters)"], ["java.lang.String", "org.hibernate.loader.plan.exec.internal.AbstractLoadQueryDetails.getSqlStatement()"], ["org.hibernate.loader.plan.exec.process.spi.ResultSetProcessor", "org.hibernate.loader.plan.exec.internal.AbstractLoadQueryDetails.getResultSetProcessor()"], ["org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderRowReader", "org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderRowReader(org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails$CollectionLoaderReaderCollectorImpl)"], ["org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl(java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.loader.plan.spi.LoadPlan, org.hibernate.loader.plan.exec.spi.AliasResolutionContext, boolean, boolean, boolean, org.hibernate.engine.spi.QueryParameters, org.hibernate.loader.plan.exec.query.spi.NamedParameterContext, boolean)"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getSession()"], ["boolean", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.shouldUseOptionalEntityInformation()"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getQueryParameters()"], ["boolean", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.shouldReturnProxies()"], ["org.hibernate.loader.plan.spi.LoadPlan", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getLoadPlan()"], ["java.sql.ResultSet", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getResultSet()"], ["org.hibernate.LockMode", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.resolveLockMode(org.hibernate.loader.plan.spi.EntityReference)"], ["org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext$EntityReferenceProcessingState", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getProcessingState(org.hibernate.loader.plan.spi.EntityReference)"], ["org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext$EntityReferenceProcessingState", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.getOwnerProcessingState(org.hibernate.loader.plan.spi.Fetch)"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.registerHydratedEntity(org.hibernate.loader.plan.spi.EntityReference, org.hibernate.engine.spi.EntityKey, java.lang.Object)"], ["boolean", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl.isReadOnly()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.getEntityReference()"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.registerMissingIdentifier()"], ["boolean", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.isMissingIdentifier()"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.registerIdentifierHydratedForm(java.lang.Object)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.getIdentifierHydratedForm()"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.registerEntityKey(org.hibernate.engine.spi.EntityKey)"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.getEntityKey()"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.registerHydratedState(java.lang.Object[])"], ["java.lang.Object[]", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.getHydratedState()"], ["void", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.registerEntityInstance(java.lang.Object)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl$1.getEntityInstance()"], ["org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader", "org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader(org.hibernate.loader.plan.spi.CollectionReturn)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader.read(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext)"], ["org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl(org.hibernate.loader.plan.spi.EntityReference, org.hibernate.loader.plan.exec.spi.EntityReferenceAliases)"], ["org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl(org.hibernate.loader.plan.spi.EntityReference, org.hibernate.loader.plan.exec.spi.EntityReferenceAliases, boolean)"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.getEntityReference()"], ["void", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateIdentifier(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["void", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["void", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["void", "org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.finishUpRow(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["org.hibernate.loader.plan.exec.process.internal.AbstractRowReader", "org.hibernate.loader.plan.exec.process.internal.AbstractRowReader(org.hibernate.loader.plan.exec.process.spi.ReaderCollector)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["void", "org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.finishUp(org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl, java.util.List<org.hibernate.loader.spi.AfterLoadAction>)"], ["org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper.getOptionalObjectKey(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper.interpretEntityKey(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.String, java.io.Serializable, java.lang.Object)"], ["java.util.Map<java.lang.String, int[]>", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper.buildNamedParameterLocMap(org.hibernate.engine.spi.QueryParameters, org.hibernate.loader.plan.exec.query.spi.NamedParameterContext)"], ["org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl(org.hibernate.loader.plan.spi.LoadPlan, org.hibernate.loader.plan.exec.spi.AliasResolutionContext, org.hibernate.loader.plan.exec.process.spi.RowReader, boolean, boolean)"], ["org.hibernate.loader.plan.exec.process.spi.ScrollableResultSetProcessor", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.toOnDemandForm()"], ["java.util.List", "org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, org.hibernate.loader.plan.exec.query.spi.NamedParameterContext, boolean, boolean, org.hibernate.transform.ResultTransformer, java.util.List<org.hibernate.loader.spi.AfterLoadAction>)"], ["org.hibernate.loader.plan.exec.process.internal.EntityReturnReader", "org.hibernate.loader.plan.exec.process.internal.EntityReturnReader(org.hibernate.loader.plan.spi.EntityReturn)"], ["org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext$EntityReferenceProcessingState", "org.hibernate.loader.plan.exec.process.internal.EntityReturnReader.getIdentifierResolutionContext(org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext)"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.EntityReturnReader.read(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext)"], ["org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl", "org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl(org.hibernate.loader.plan.spi.CollectionReference, org.hibernate.loader.plan.exec.spi.CollectionReferenceAliases)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.getCollectionReference()"], ["void", "org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.finishUpRow(java.sql.ResultSet, org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["void", "org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl.endLoading(org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl)"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.exec.process.internal.HydratedEntityRegistration.getEntityReference()"], ["org.hibernate.engine.spi.EntityKey", "org.hibernate.loader.plan.exec.process.internal.HydratedEntityRegistration.getKey()"], ["java.lang.Object", "org.hibernate.loader.plan.exec.process.internal.HydratedEntityRegistration.getInstance()"], ["org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl", "org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl(org.hibernate.engine.spi.LoadQueryInfluencers, int, org.hibernate.LockMode, org.hibernate.LockOptions)"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl.getQueryInfluencers()"], ["int", "org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl.getBatchSize()"], ["org.hibernate.LockMode", "org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl.getLockMode()"], ["org.hibernate.LockOptions", "org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl.getLockOptions()"], ["org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder(org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.appendSelectClauseFragment(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.appendFromClauseFragment(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.appendFromClauseFragment(java.lang.String, java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.appendRestrictions(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.setOuterJoins(java.lang.String, java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.appendOrderByFragment(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.setComment(java.lang.String)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.setLockMode(org.hibernate.LockMode)"], ["void", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.setLockOptions(org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder.toStatementString()"], ["default", "org.hibernate.loader.plan.spi.EntityFetch.org.hibernate.type.Type getFetchedType()"], ["org.hibernate.loader.plan.spi.QuerySpaceUidNotRegisteredException", "org.hibernate.loader.plan.spi.QuerySpaceUidNotRegisteredException(java.lang.String)"], ["org.hibernate.loader.plan.spi.QuerySpaceUidNotRegisteredException", "org.hibernate.loader.plan.spi.QuerySpaceUidNotRegisteredException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.loader.plan.spi.QuerySpace$Disposition[]", "org.hibernate.loader.plan.spi.QuerySpace$Disposition.values()"], ["org.hibernate.loader.plan.spi.QuerySpace$Disposition", "org.hibernate.loader.plan.spi.QuerySpace$Disposition.valueOf(java.lang.String)"], ["default", "org.hibernate.loader.plan.spi.CollectionAttributeFetch.org.hibernate.type.Type getFetchedType()"], ["org.hibernate.loader.plan.spi.LoadPlan$Disposition[]", "org.hibernate.loader.plan.spi.LoadPlan$Disposition.values()"], ["org.hibernate.loader.plan.spi.LoadPlan$Disposition", "org.hibernate.loader.plan.spi.LoadPlan$Disposition.valueOf(java.lang.String)"], ["void", "org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(org.hibernate.loader.plan.spi.LoadPlan, org.hibernate.loader.plan.exec.spi.AliasResolutionContext)"], ["org.hibernate.loader.plan.spi.LoadPlan", "org.hibernate.loader.plan.build.spi.MetamodelDrivenLoadPlanBuilder.buildRootEntityLoadPlan(org.hibernate.loader.plan.build.spi.LoadPlanBuildingAssociationVisitationStrategy, org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.loader.plan.spi.LoadPlan", "org.hibernate.loader.plan.build.spi.MetamodelDrivenLoadPlanBuilder.buildRootCollectionLoadPlan(org.hibernate.loader.plan.build.spi.LoadPlanBuildingAssociationVisitationStrategy, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.TreePrinterHelper.generateNodePrefix(int)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter.asString(org.hibernate.loader.plan.spi.QuerySpaces, org.hibernate.loader.plan.exec.spi.AliasResolutionContext)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter.asString(org.hibernate.loader.plan.spi.QuerySpaces, int, org.hibernate.loader.plan.exec.spi.AliasResolutionContext)"], ["void", "org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter.write(org.hibernate.loader.plan.spi.QuerySpaces, int, org.hibernate.loader.plan.exec.spi.AliasResolutionContext, java.io.PrintStream)"], ["void", "org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter.write(org.hibernate.loader.plan.spi.QuerySpaces, int, org.hibernate.loader.plan.exec.spi.AliasResolutionContext, java.io.PrintWriter)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter.extractDetails(org.hibernate.loader.plan.spi.QuerySpace)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.asString(org.hibernate.loader.plan.spi.Return)"], ["java.lang.String", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.asString(org.hibernate.loader.plan.spi.Return, int)"], ["void", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.write(org.hibernate.loader.plan.spi.Return, java.io.PrintStream)"], ["void", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.write(org.hibernate.loader.plan.spi.Return, int, java.io.PrintStream)"], ["void", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.write(org.hibernate.loader.plan.spi.Return, java.io.PrintWriter)"], ["void", "org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter.write(org.hibernate.loader.plan.spi.Return, int, java.io.PrintWriter)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.start()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.finish()"], ["boolean", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.startingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.finishingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.startingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.finishingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.startingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.finishingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition)"], ["org.hibernate.loader.plan.spi.LoadPlan", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.buildLoadPlan()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy.foundCircularAssociation(org.hibernate.persister.walking.spi.AssociationAttributeDefinition)"], ["org.hibernate.loader.plan.build.internal.CascadeStyleLoadPlanBuildingAssociationVisitationStrategy", "org.hibernate.loader.plan.build.internal.CascadeStyleLoadPlanBuildingAssociationVisitationStrategy(org.hibernate.engine.spi.CascadingAction, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.getQuerySpaces()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.start()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finish()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(org.hibernate.persister.walking.spi.EntityDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(org.hibernate.persister.walking.spi.EntityDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingCollection(org.hibernate.persister.walking.spi.CollectionDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingCollection(org.hibernate.persister.walking.spi.CollectionDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingComposite(org.hibernate.persister.walking.spi.CompositionDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingComposite(org.hibernate.persister.walking.spi.CompositionDefinition)"], ["boolean", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition)"], ["boolean", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.isDuplicateAssociationKey(org.hibernate.persister.walking.spi.AssociationKey)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(org.hibernate.persister.walking.spi.AssociationKey)"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.registeredFetchSource(org.hibernate.persister.walking.spi.AssociationKey)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.foundCircularAssociation(org.hibernate.persister.walking.spi.AssociationAttributeDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.foundAny(org.hibernate.persister.walking.spi.AnyMappingDefinition)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.getSessionFactory()"], ["org.hibernate.loader.plan.build.internal.LoadGraphLoadPlanBuildingStrategy", "org.hibernate.loader.plan.build.internal.LoadGraphLoadPlanBuildingStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["org.hibernate.loader.plan.build.internal.LoadGraphLoadPlanBuildingStrategy", "org.hibernate.loader.plan.build.internal.LoadGraphLoadPlanBuildingStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.graph.spi.RootGraphImplementor<?>, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy", "org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy", "org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.graph.spi.RootGraphImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl", "org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl(org.hibernate.persister.walking.spi.EntityDefinition, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces)"], ["void", "org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl.validateFetchPlan(org.hibernate.engine.FetchStrategy, org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl(org.hibernate.loader.plan.spi.FetchSource, org.hibernate.persister.walking.spi.AttributeDefinition, org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace, boolean)"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl.getSource()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl.getFetchedAttributeDefinition()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl.resolveEntityReference()"], ["org.hibernate.loader.plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl", "org.hibernate.loader.plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl.hasFetches()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl.hasBidirectionalEntityReferences()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.hasFetches()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.hasBidirectionalEntityReferences()"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.getSource()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.isNullable()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription.resolveEntityReference()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.allowElementJoin()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.allowIndexJoin()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.getQuerySpaceUid()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.getCollectionPersister()"], ["org.hibernate.loader.plan.spi.CollectionFetchableIndex", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.getIndexGraph()"], ["org.hibernate.loader.plan.spi.CollectionFetchableElement", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.getElementGraph()"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference.getPropertyPath()"], ["org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference", "org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference(org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace, org.hibernate.loader.PropertyPath)"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference.resolveEntityReference()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference.getEntityPersister()"], ["org.hibernate.loader.plan.spi.EntityIdentifierDescription", "org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference.getIdentifierDescription()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph(org.hibernate.loader.plan.spi.CollectionReference, org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph.getCollectionReference()"], ["void", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph.validateFetchPlan(org.hibernate.engine.FetchStrategy, org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl(org.hibernate.loader.plan.build.spi.ExpandingFetchSource, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy, org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace)"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getSource()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getFetchStrategy()"], ["org.hibernate.type.EntityType", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.isNullable()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getAdditionalJoinConditions()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.toSqlSelectFragments(java.lang.String)"], ["void", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.validateFetchPlan(org.hibernate.engine.FetchStrategy, org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getFetchedAttributeDefinition()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl.getFetchedType()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl", "org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl(org.hibernate.persister.walking.spi.CollectionDefinition, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces)"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementAnyGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementAnyGraph(org.hibernate.loader.plan.spi.CollectionReference)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementAnyGraph.getCollectionReference()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementAnyGraph.resolveEntityReference()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl(org.hibernate.loader.plan.build.spi.ExpandingFetchSource, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy, org.hibernate.loader.plan.build.spi.ExpandingCollectionQuerySpace)"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getSource()"], ["org.hibernate.type.CollectionType", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.isNullable()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getAdditionalJoinConditions()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getFetchStrategy()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.toSqlSelectFragments(java.lang.String)"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getFetchedAttributeDefinition()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl.getFetchedType()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementCompositeGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementCompositeGraph(org.hibernate.loader.plan.spi.CollectionReference, org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementCompositeGraph.getCollectionReference()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementCompositeGraph.resolveEntityReference()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexAnyGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexAnyGraph(org.hibernate.loader.plan.spi.CollectionReference)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexAnyGraph.getCollectionReference()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexAnyGraph.resolveEntityReference()"], ["org.hibernate.loader.plan.build.internal.returns.NonEncapsulatedEntityIdentifierDescription", "org.hibernate.loader.plan.build.internal.returns.NonEncapsulatedEntityIdentifierDescription(org.hibernate.loader.plan.spi.EntityReference, org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace, org.hibernate.type.CompositeType, org.hibernate.loader.PropertyPath)"], ["org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference", "org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference(org.hibernate.loader.PropertyPath)"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference.getPropertyPath()"], ["org.hibernate.loader.plan.spi.Fetch[]", "org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference.getFetches()"], ["org.hibernate.loader.plan.spi.BidirectionalEntityReference[]", "org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference.getBidirectionalEntityReferences()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference.getQuerySpaceUid()"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl.getSource()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl.getFetchedAttributeDefinition()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl.isNullable()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl.resolveEntityReference()"], ["org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl(org.hibernate.loader.plan.build.spi.ExpandingFetchSource, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.loader.plan.spi.EntityReference)"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getTargetEntityReference()"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getPropertyPath()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getQuerySpaceUid()"], ["org.hibernate.loader.plan.spi.Fetch[]", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getFetches()"], ["org.hibernate.loader.plan.spi.BidirectionalEntityReference[]", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getBidirectionalEntityReferences()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.resolveEntityReference()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getEntityPersister()"], ["org.hibernate.loader.plan.spi.EntityIdentifierDescription", "org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl.getIdentifierDescription()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexEntityGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexEntityGraph(org.hibernate.loader.plan.spi.CollectionReference, org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexEntityGraph.getCollectionReference()"], ["void", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexEntityGraph.validateFetchPlan(org.hibernate.engine.FetchStrategy, org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.loader.plan.build.internal.returns.ScalarReturnImpl", "org.hibernate.loader.plan.build.internal.returns.ScalarReturnImpl(java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.ScalarReturnImpl.getName()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.ScalarReturnImpl.getType()"], ["org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl(org.hibernate.loader.plan.spi.FetchSource, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.spi.FetchSource", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getSource()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getFetchStrategy()"], ["org.hibernate.type.AnyType", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getFetchedType()"], ["boolean", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.isNullable()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.toSqlSelectFragments(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getAdditionalJoinConditions()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.resolveEntityReference()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getFetchedAttributeDefinition()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl.getFetchedType()"], ["org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexCompositeGraph", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexCompositeGraph(org.hibernate.loader.plan.spi.CollectionReference, org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace)"], ["org.hibernate.loader.plan.spi.CollectionReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexCompositeGraph.getCollectionReference()"], ["org.hibernate.loader.plan.spi.EntityReference", "org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexCompositeGraph.resolveEntityReference()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeFetch.getFetchStrategy()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeFetch.getAdditionalJoinConditions()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeFetch.toSqlSelectFragments(java.lang.String)"], ["void", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeReference.validateFetchPlan(org.hibernate.engine.FetchStrategy, org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.loader.plan.spi.CollectionAttributeFetch", "org.hibernate.loader.plan.build.internal.returns.AbstractCompositeReference.buildCollectionAttributeFetch(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.loader.PropertyPath)"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.getQuerySpaceUid()"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.getPropertyPath()"], ["org.hibernate.loader.plan.spi.Fetch[]", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.getFetches()"], ["org.hibernate.loader.plan.spi.BidirectionalEntityReference[]", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.getBidirectionalEntityReferences()"], ["org.hibernate.loader.plan.spi.EntityFetch", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.buildEntityAttributeFetch(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.spi.BidirectionalEntityReference", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.buildBidirectionalEntityReference(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy, org.hibernate.loader.plan.spi.EntityReference)"], ["org.hibernate.loader.plan.spi.CompositeAttributeFetch", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.buildCompositeAttributeFetch(org.hibernate.persister.walking.spi.AttributeDefinition)"], ["org.hibernate.loader.plan.spi.CollectionAttributeFetch", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.buildCollectionAttributeFetch(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.spi.AnyAttributeFetch", "org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource.buildAnyAttributeFetch(org.hibernate.persister.walking.spi.AssociationAttributeDefinition, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl", "org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl(org.hibernate.persister.entity.EntityPersister, java.lang.String, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces, boolean)"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl.getPropertyMapping()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl.toAliasedColumns(java.lang.String, java.lang.String)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl.getEntityPersister()"], ["org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl.makeCompositeIdentifierQuerySpace()"], ["org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace(java.lang.String, org.hibernate.loader.plan.spi.QuerySpace$Disposition, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces, boolean)"], ["boolean", "org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace.canJoinsBeRequired()"], ["org.hibernate.loader.plan.spi.QuerySpaces", "org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace.getQuerySpaces()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace.getUid()"], ["org.hibernate.loader.plan.spi.QuerySpace$Disposition", "org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace.getDisposition()"], ["org.hibernate.loader.plan.spi.JoinDefinedByMetadata", "org.hibernate.loader.plan.build.internal.spaces.JoinHelper.createEntityJoin(org.hibernate.loader.plan.spi.QuerySpace, java.lang.String, org.hibernate.loader.plan.spi.EntityQuerySpace, boolean, org.hibernate.type.EntityType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.spi.JoinDefinedByMetadata", "org.hibernate.loader.plan.build.internal.spaces.JoinHelper.createCollectionJoin(org.hibernate.loader.plan.spi.QuerySpace, java.lang.String, org.hibernate.loader.plan.spi.CollectionQuerySpace, boolean, org.hibernate.type.CollectionType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.spi.JoinDefinedByMetadata", "org.hibernate.loader.plan.build.internal.spaces.JoinHelper.createCompositeJoin(org.hibernate.loader.plan.spi.QuerySpace, java.lang.String, org.hibernate.loader.plan.spi.CompositeQuerySpace, boolean, org.hibernate.type.CompositeType)"], ["org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.plan.spi.QuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.findQuerySpaceByUid(java.lang.String)"], ["org.hibernate.loader.plan.spi.QuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.getQuerySpaceByUid(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.generateImplicitUid()"], ["org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.makeRootEntityQuerySpace(java.lang.String, org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.makeEntityQuerySpace(java.lang.String, org.hibernate.persister.entity.EntityPersister, boolean)"], ["org.hibernate.loader.plan.build.spi.ExpandingCollectionQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.makeRootCollectionQuerySpace(java.lang.String, org.hibernate.persister.collection.CollectionPersister)"], ["org.hibernate.loader.plan.build.spi.ExpandingCollectionQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.makeCollectionQuerySpace(java.lang.String, org.hibernate.persister.collection.CollectionPersister, boolean)"], ["org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.makeCompositeQuerySpace(java.lang.String, org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping, boolean)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.getSessionFactory()"], ["org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping(org.hibernate.type.CompositeType, org.hibernate.persister.entity.PropertyMapping, java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping.toColumns(java.lang.String)"], ["org.hibernate.type.CompositeType", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping.getType()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping.getType()"], ["org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.makeEntityQuerySpace(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, java.lang.String, org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.makeEntityQuerySpace(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.persister.entity.EntityPersister, java.lang.String, org.hibernate.type.EntityType, java.lang.String, boolean, boolean)"], ["org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.makeCompositeQuerySpace(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.persister.walking.spi.AttributeDefinition, java.lang.String, boolean)"], ["org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.makeCompositeQuerySpace(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping, java.lang.String, org.hibernate.type.CompositeType, java.lang.String, boolean, boolean)"], ["org.hibernate.loader.plan.build.spi.ExpandingCollectionQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.makeCollectionQuerySpace(org.hibernate.loader.plan.build.spi.ExpandingQuerySpace, org.hibernate.persister.walking.spi.AssociationAttributeDefinition, java.lang.String, org.hibernate.engine.FetchStrategy)"], ["boolean", "org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper.shouldIncludeJoin(org.hibernate.engine.FetchStrategy)"], ["org.hibernate.loader.plan.build.internal.spaces.AbstractExpandingSourceQuerySpace", "org.hibernate.loader.plan.build.internal.spaces.AbstractExpandingSourceQuerySpace(java.lang.String, org.hibernate.loader.plan.spi.QuerySpace$Disposition, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces, boolean)"], ["void", "org.hibernate.loader.plan.build.internal.spaces.AbstractExpandingSourceQuerySpace.addJoin(org.hibernate.loader.plan.spi.Join)"], ["org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces", "org.hibernate.loader.plan.build.internal.spaces.AbstractExpandingSourceQuerySpace.getExpandingQuerySpaces()"], ["org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl(org.hibernate.persister.collection.CollectionPersister, java.lang.String, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces, boolean)"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.getCollectionPersister()"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.getPropertyMapping()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.toAliasedColumns(java.lang.String, java.lang.String)"], ["void", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.addJoin(org.hibernate.loader.plan.spi.Join)"], ["org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.getExpandingQuerySpaces()"], ["void", "org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl.addJoin(org.hibernate.loader.plan.spi.JoinDefinedByMetadata)"], ["org.hibernate.loader.plan.build.internal.spaces.JoinImpl", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl(org.hibernate.loader.plan.spi.QuerySpace, java.lang.String, org.hibernate.loader.plan.spi.QuerySpace, java.lang.String[], org.hibernate.type.Type, boolean)"], ["org.hibernate.loader.plan.spi.QuerySpace", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.getLeftHandSide()"], ["org.hibernate.loader.plan.spi.QuerySpace", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.getRightHandSide()"], ["boolean", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.isRightHandSideRequired()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.resolveAliasedLeftHandSideJoinConditionColumns(java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.resolveNonAliasedRightHandSideJoinConditionColumns()"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.getAnyAdditionalJoinConditions(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.getJoinedPropertyName()"], ["org.hibernate.type.Type", "org.hibernate.loader.plan.build.internal.spaces.JoinImpl.getJoinedPropertyType()"], ["org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl", "org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl(org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping, java.lang.String, org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces, boolean)"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl.getPropertyMapping()"], ["java.lang.String[]", "org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl.toAliasedColumns(java.lang.String, java.lang.String)"], ["org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy", "org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode)"], ["void", "org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition)"], ["void", "org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.finishingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition)"], ["org.hibernate.loader.plan.spi.LoadPlan", "org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan()"], ["org.hibernate.loader.plan.build.internal.LoadPlanImpl", "org.hibernate.loader.plan.build.internal.LoadPlanImpl(org.hibernate.loader.plan.spi.EntityReturn, org.hibernate.loader.plan.spi.QuerySpaces)"], ["org.hibernate.loader.plan.build.internal.LoadPlanImpl", "org.hibernate.loader.plan.build.internal.LoadPlanImpl(org.hibernate.loader.plan.spi.CollectionReturn, org.hibernate.loader.plan.spi.QuerySpaces)"], ["org.hibernate.loader.plan.build.internal.LoadPlanImpl", "org.hibernate.loader.plan.build.internal.LoadPlanImpl(java.util.List<? extends org.hibernate.loader.plan.spi.Return>, org.hibernate.loader.plan.spi.QuerySpaces, boolean)"], ["java.util.List<? extends org.hibernate.loader.plan.spi.Return>", "org.hibernate.loader.plan.build.internal.LoadPlanImpl.getReturns()"], ["org.hibernate.loader.plan.spi.QuerySpaces", "org.hibernate.loader.plan.build.internal.LoadPlanImpl.getQuerySpaces()"], ["org.hibernate.loader.plan.spi.LoadPlan$Disposition", "org.hibernate.loader.plan.build.internal.LoadPlanImpl.getDisposition()"], ["boolean", "org.hibernate.loader.plan.build.internal.LoadPlanImpl.areLazyAttributesForceFetched()"], ["boolean", "org.hibernate.loader.plan.build.internal.LoadPlanImpl.hasAnyScalarReturns()"], ["org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy$PropertyPathStack", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy$PropertyPathStack()"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy$PropertyPathStack.push(org.hibernate.loader.PropertyPath)"], ["void", "org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy$PropertyPathStack.pop()"], ["org.hibernate.loader.AbstractEntityJoinWalker", "org.hibernate.loader.AbstractEntityJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.AbstractEntityJoinWalker", "org.hibernate.loader.AbstractEntityJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, java.lang.String)"], ["org.hibernate.persister.entity.Loadable", "org.hibernate.loader.AbstractEntityJoinWalker.getPersister()"], ["java.lang.String", "org.hibernate.loader.AbstractEntityJoinWalker.getAlias()"], ["java.lang.String", "org.hibernate.loader.AbstractEntityJoinWalker.toString()"], ["void", "org.hibernate.loader.Loader$1.afterLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.persister.entity.Loadable)"], ["org.hibernate.loader.OuterJoinLoader", "org.hibernate.loader.OuterJoinLoader(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.String", "org.hibernate.loader.OuterJoinLoader.getSQLString()"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.loader.OuterJoinLoader.getLoadQueryInfluencers()"], ["org.hibernate.loader.BasicLoader", "org.hibernate.loader.BasicLoader(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String[]", "org.hibernate.loader.BasicLoader.generateSuffixes(int)"], ["java.lang.String[]", "org.hibernate.loader.BasicLoader.generateSuffixes(int, int)"], ["void", "org.hibernate.loader.JoinWalker$AssociationInitCallback$1.associationProcessed(org.hibernate.loader.OuterJoinableAssociation, int)"], ["org.hibernate.type.Type[]", "org.hibernate.loader.criteria.CriteriaJoinWalker.getResultTypes()"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaJoinWalker.getUserAliases()"], ["boolean[]", "org.hibernate.loader.criteria.CriteriaJoinWalker.includeInResultRow()"], ["org.hibernate.loader.criteria.CriteriaJoinWalker", "org.hibernate.loader.criteria.CriteriaJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.loader.criteria.CriteriaQueryTranslator, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.internal.CriteriaImpl, java.lang.String, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.criteria.CriteriaJoinWalker", "org.hibernate.loader.criteria.CriteriaJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.loader.criteria.CriteriaQueryTranslator, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.internal.CriteriaImpl, java.lang.String, org.hibernate.engine.spi.LoadQueryInfluencers, java.lang.String)"], ["java.util.Set", "org.hibernate.loader.criteria.CriteriaJoinWalker.getQuerySpaces()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaJoinWalker.getComment()"], ["org.hibernate.loader.criteria.CriteriaQueryTranslator", "org.hibernate.loader.criteria.CriteriaQueryTranslator(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.internal.CriteriaImpl, java.lang.String, java.lang.String, org.hibernate.criterion.CriteriaQuery)"], ["org.hibernate.loader.criteria.CriteriaQueryTranslator", "org.hibernate.loader.criteria.CriteriaQueryTranslator(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.internal.CriteriaImpl, java.lang.String, java.lang.String)"], ["void", "org.hibernate.loader.criteria.CriteriaQueryTranslator.setAssociations(java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.generateSQLAlias()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getRootSQLALias()"], ["boolean", "org.hibernate.loader.criteria.CriteriaQueryTranslator.isJoin(java.lang.String)"], ["org.hibernate.sql.JoinType", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getJoinType(java.lang.String)"], ["org.hibernate.Criteria", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getCriteria(java.lang.String)"], ["int", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getSQLAliasCount()"], ["org.hibernate.internal.CriteriaImpl", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getRootCriteria()"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getQueryParameters()"], ["boolean", "org.hibernate.loader.criteria.CriteriaQueryTranslator.hasProjection()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getGroupBy()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getSelect()"], ["org.hibernate.type.Type[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getProjectedTypes()"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getProjectedColumnAliases()"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getProjectedAliases()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getWhereCondition()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getOrderBy()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getFactory()"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getSQLAlias(org.hibernate.Criteria)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getEntityName(org.hibernate.Criteria)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getColumn(org.hibernate.Criteria, java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getColumnsUsingProjection(org.hibernate.Criteria, java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getIdentifierColumns(org.hibernate.Criteria)"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getIdentifierType(org.hibernate.Criteria)"], ["org.hibernate.engine.spi.TypedValue", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getTypedIdentifierValue(org.hibernate.Criteria, java.lang.Object)"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getColumns(java.lang.String, org.hibernate.Criteria)"], ["java.lang.String[]", "org.hibernate.loader.criteria.CriteriaQueryTranslator.findColumns(java.lang.String, org.hibernate.Criteria)"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getTypeUsingProjection(org.hibernate.Criteria, java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getType(org.hibernate.Criteria, java.lang.String)"], ["org.hibernate.engine.spi.TypedValue", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getTypedValue(org.hibernate.Criteria, java.lang.String, java.lang.Object)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getEntityName(org.hibernate.Criteria, java.lang.String)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getSQLAlias(org.hibernate.Criteria, java.lang.String)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getPropertyName(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.criteria.CriteriaQueryTranslator.getWithClause(java.lang.String)"], ["boolean", "org.hibernate.loader.criteria.CriteriaQueryTranslator.hasRestriction(java.lang.String)"], ["org.hibernate.loader.criteria.CriteriaLoader", "org.hibernate.loader.criteria.CriteriaLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.internal.CriteriaImpl, java.lang.String, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.loader.criteria.CriteriaLoader.scroll(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.ScrollMode)"], ["java.util.List", "org.hibernate.loader.criteria.CriteriaLoader.list(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.Set", "org.hibernate.loader.criteria.CriteriaLoader.getQuerySpaces()"], ["java.lang.String", "org.hibernate.loader.criteria.ScalarCollectionCriteriaInfoProvider.getName()"], ["java.io.Serializable[]", "org.hibernate.loader.criteria.ScalarCollectionCriteriaInfoProvider.getSpaces()"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.criteria.ScalarCollectionCriteriaInfoProvider.getPropertyMapping()"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.ScalarCollectionCriteriaInfoProvider.getType(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.criteria.EntityCriteriaInfoProvider.getName()"], ["java.io.Serializable[]", "org.hibernate.loader.criteria.EntityCriteriaInfoProvider.getSpaces()"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.criteria.EntityCriteriaInfoProvider.getPropertyMapping()"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.EntityCriteriaInfoProvider.getType(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.criteria.ComponentCollectionCriteriaInfoProvider.getName()"], ["java.io.Serializable[]", "org.hibernate.loader.criteria.ComponentCollectionCriteriaInfoProvider.getSpaces()"], ["org.hibernate.persister.entity.PropertyMapping", "org.hibernate.loader.criteria.ComponentCollectionCriteriaInfoProvider.getPropertyMapping()"], ["org.hibernate.type.Type", "org.hibernate.loader.criteria.ComponentCollectionCriteriaInfoProvider.getType(java.lang.String)"], ["void", "org.hibernate.loader.criteria.CriteriaLoader$1.afterLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.persister.entity.Loadable)"], ["java.util.List", "org.hibernate.loader.JoinWalker.getAssociations()"], ["java.lang.String[]", "org.hibernate.loader.JoinWalker.getCollectionSuffixes()"], ["void", "org.hibernate.loader.JoinWalker.setCollectionSuffixes(java.lang.String[])"], ["org.hibernate.LockOptions", "org.hibernate.loader.JoinWalker.getLockModeOptions()"], ["org.hibernate.LockMode[]", "org.hibernate.loader.JoinWalker.getLockModeArray()"], ["java.lang.String[]", "org.hibernate.loader.JoinWalker.getSuffixes()"], ["void", "org.hibernate.loader.JoinWalker.setSuffixes(java.lang.String[])"], ["java.lang.String[]", "org.hibernate.loader.JoinWalker.getAliases()"], ["void", "org.hibernate.loader.JoinWalker.setAliases(java.lang.String[])"], ["int[]", "org.hibernate.loader.JoinWalker.getCollectionOwners()"], ["void", "org.hibernate.loader.JoinWalker.setCollectionOwners(int[])"], ["org.hibernate.persister.collection.CollectionPersister[]", "org.hibernate.loader.JoinWalker.getCollectionPersisters()"], ["void", "org.hibernate.loader.JoinWalker.setCollectionPersisters(org.hibernate.persister.collection.CollectionPersister[])"], ["org.hibernate.type.EntityType[]", "org.hibernate.loader.JoinWalker.getOwnerAssociationTypes()"], ["void", "org.hibernate.loader.JoinWalker.setOwnerAssociationTypes(org.hibernate.type.EntityType[])"], ["int[]", "org.hibernate.loader.JoinWalker.getOwners()"], ["void", "org.hibernate.loader.JoinWalker.setOwners(int[])"], ["org.hibernate.persister.entity.Loadable[]", "org.hibernate.loader.JoinWalker.getPersisters()"], ["void", "org.hibernate.loader.JoinWalker.setPersisters(org.hibernate.persister.entity.Loadable[])"], ["java.lang.String", "org.hibernate.loader.JoinWalker.getSQLString()"], ["void", "org.hibernate.loader.JoinWalker.setSql(java.lang.String)"], ["org.hibernate.engine.spi.LoadQueryInfluencers", "org.hibernate.loader.JoinWalker.getLoadQueryInfluencers()"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.PropertyPath(org.hibernate.loader.PropertyPath, java.lang.String)"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.PropertyPath(java.lang.String)"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.PropertyPath()"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.PropertyPath.append(java.lang.String)"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.PropertyPath.getParent()"], ["java.lang.String", "org.hibernate.loader.PropertyPath.getProperty()"], ["java.lang.String", "org.hibernate.loader.PropertyPath.getFullPath()"], ["boolean", "org.hibernate.loader.PropertyPath.isRoot()"], ["java.lang.String", "org.hibernate.loader.PropertyPath.toString()"], ["org.hibernate.loader.entity.CollectionElementLoader", "org.hibernate.loader.entity.CollectionElementLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.CollectionElementLoader.loadElement(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["org.hibernate.loader.entity.EntityJoinWalker$AssociationInitCallbackImpl", "org.hibernate.loader.entity.EntityJoinWalker$AssociationInitCallbackImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.loader.entity.EntityJoinWalker$AssociationInitCallbackImpl.associationProcessed(org.hibernate.loader.OuterJoinableAssociation, int)"], ["int[][]", "org.hibernate.loader.entity.EntityJoinWalker$AssociationInitCallbackImpl.resolve()"], ["org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry", "org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry(java.lang.Object, org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus)"], ["java.lang.Object", "org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry.getEntity()"], ["org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus", "org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry.getStatus()"], ["boolean", "org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry.isManaged()"], ["org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder()"], ["java.util.List", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder.multiLoad(org.hibernate.persister.entity.OuterJoinLoadable, java.io.Serializable[], org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.entity.MultiLoadOptions)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder.buildMultiLoadQueryParameters(org.hibernate.persister.entity.OuterJoinLoadable, java.io.Serializable[], org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader", "org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader", "org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.plan.BatchingEntityLoader", "org.hibernate.loader.entity.plan.BatchingEntityLoader(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.loader.entity.plan.BatchingEntityLoader.persister()"], ["java.lang.Object", "org.hibernate.loader.entity.plan.BatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder", "org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder()"], ["org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader", "org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String[], org.hibernate.type.Type, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters)"], ["java.util.List", "org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.loadEntityBatch(org.hibernate.engine.spi.SharedSessionContractImplementor, java.io.Serializable[], org.hibernate.type.Type, java.lang.Object, java.lang.String, java.io.Serializable, org.hibernate.persister.entity.EntityPersister, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder(org.hibernate.persister.entity.OuterJoinLoadable)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder.withEntityLoaderTemplate(org.hibernate.loader.entity.plan.EntityLoader)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder.withBatchSize(int)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder.withInfluencers(org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder.withLockMode(org.hibernate.LockMode)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader$Builder.withLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.plan.EntityLoader", "org.hibernate.loader.entity.plan.EntityLoader$Builder.byPrimaryKey()"], ["org.hibernate.loader.entity.plan.EntityLoader", "org.hibernate.loader.entity.plan.EntityLoader$Builder.byUniqueKey(java.lang.String[], org.hibernate.type.Type)"], ["org.hibernate.loader.entity.plan.EntityLoader$Builder", "org.hibernate.loader.entity.plan.EntityLoader.forEntity(org.hibernate.persister.entity.OuterJoinLoadable)"], ["org.hibernate.loader.entity.plan.AbstractBatchingEntityLoaderBuilder", "org.hibernate.loader.entity.plan.AbstractBatchingEntityLoaderBuilder()"], ["org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader", "org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader", "org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder$LegacyBatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.BatchingEntityLoader", "org.hibernate.loader.entity.BatchingEntityLoader(org.hibernate.persister.entity.EntityPersister)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.loader.entity.BatchingEntityLoader.persister()"], ["java.lang.Object", "org.hibernate.loader.entity.BatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.entity.CacheEntityLoaderHelper$PersistenceContextEntry", "org.hibernate.loader.entity.CacheEntityLoaderHelper.loadFromSessionCache(org.hibernate.event.spi.LoadEvent, org.hibernate.engine.spi.EntityKey, org.hibernate.event.spi.LoadEventListener$LoadType)"], ["java.lang.Object", "org.hibernate.loader.entity.CacheEntityLoaderHelper.loadFromSecondLevelCache(org.hibernate.event.spi.LoadEvent, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.EntityKey)"], ["org.hibernate.loader.entity.CascadeEntityJoinWalker", "org.hibernate.loader.entity.CascadeEntityJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.CascadingAction, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.loader.entity.CascadeEntityJoinWalker.getComment()"], ["org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicEntityLoader", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicEntityLoader", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.util.List", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicEntityLoader.doEntityBatchFetch(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, java.io.Serializable[])"], ["org.hibernate.loader.entity.CascadeEntityLoader", "org.hibernate.loader.entity.CascadeEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.engine.spi.CascadingAction, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.entity.BatchingEntityLoaderBuilder", "org.hibernate.loader.entity.BatchingEntityLoaderBuilder()"], ["org.hibernate.loader.entity.BatchingEntityLoaderBuilder", "org.hibernate.loader.entity.BatchingEntityLoaderBuilder.getBuilder(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.entity.UniqueEntityLoader", "org.hibernate.loader.entity.BatchingEntityLoaderBuilder.buildLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.UniqueEntityLoader", "org.hibernate.loader.entity.BatchingEntityLoaderBuilder.buildLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder", "org.hibernate.loader.entity.LegacyBatchingEntityLoaderBuilder()"], ["org.hibernate.loader.entity.AbstractEntityLoader", "org.hibernate.loader.entity.AbstractEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.type.Type, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.AbstractEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.loader.entity.AbstractEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, java.lang.String[], org.hibernate.type.Type, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityLoader", "org.hibernate.loader.entity.EntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, java.lang.String[], org.hibernate.type.Type, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.EntityLoader.loadByUniqueKey(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["int[][]", "org.hibernate.loader.entity.EntityLoader.getCompositeKeyManyToOneTargetIndices()"], ["org.hibernate.loader.entity.EntityJoinWalker", "org.hibernate.loader.entity.EntityJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, java.lang.String[], int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.EntityJoinWalker", "org.hibernate.loader.entity.EntityJoinWalker(org.hibernate.persister.entity.OuterJoinLoadable, java.lang.String[], int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.String", "org.hibernate.loader.entity.EntityJoinWalker.getComment()"], ["int[][]", "org.hibernate.loader.entity.EntityJoinWalker.getCompositeKeyManyToOneTargetIndices()"], ["org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicBatchingEntityLoader", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicBatchingEntityLoader", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.DynamicBatchingEntityLoaderBuilder$DynamicBatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus[]", "org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus.values()"], ["org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus", "org.hibernate.loader.entity.CacheEntityLoaderHelper$EntityStatus.valueOf(java.lang.String)"], ["org.hibernate.loader.entity.PaddedBatchingEntityLoaderBuilder$PaddedBatchingEntityLoader", "org.hibernate.loader.entity.PaddedBatchingEntityLoaderBuilder$PaddedBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockMode, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.entity.PaddedBatchingEntityLoaderBuilder$PaddedBatchingEntityLoader", "org.hibernate.loader.entity.PaddedBatchingEntityLoaderBuilder$PaddedBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable, int, org.hibernate.LockOptions, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.Object", "org.hibernate.loader.entity.PaddedBatchingEntityLoaderBuilder$PaddedBatchingEntityLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["org.hibernate.loader.MultipleBagFetchException", "org.hibernate.loader.MultipleBagFetchException(java.util.List)"], ["java.util.List", "org.hibernate.loader.MultipleBagFetchException.getBagRoles()"], ["org.hibernate.loader.OuterJoinableAssociation", "org.hibernate.loader.OuterJoinableAssociation.createRoot(org.hibernate.type.AssociationType, java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.OuterJoinableAssociation", "org.hibernate.loader.OuterJoinableAssociation(org.hibernate.loader.PropertyPath, org.hibernate.type.AssociationType, java.lang.String, java.lang.String[], java.lang.String, org.hibernate.sql.JoinType, java.lang.String, boolean, org.hibernate.engine.spi.SessionFactoryImplementor, java.util.Map)"], ["org.hibernate.loader.PropertyPath", "org.hibernate.loader.OuterJoinableAssociation.getPropertyPath()"], ["org.hibernate.sql.JoinType", "org.hibernate.loader.OuterJoinableAssociation.getJoinType()"], ["java.lang.String", "org.hibernate.loader.OuterJoinableAssociation.getLhsAlias()"], ["java.lang.String", "org.hibernate.loader.OuterJoinableAssociation.getRHSAlias()"], ["java.lang.String", "org.hibernate.loader.OuterJoinableAssociation.getRhsAlias()"], ["org.hibernate.type.AssociationType", "org.hibernate.loader.OuterJoinableAssociation.getJoinableType()"], ["java.lang.String", "org.hibernate.loader.OuterJoinableAssociation.getRHSUniqueKeyName()"], ["boolean", "org.hibernate.loader.OuterJoinableAssociation.isCollection()"], ["org.hibernate.persister.entity.Joinable", "org.hibernate.loader.OuterJoinableAssociation.getJoinable()"], ["boolean", "org.hibernate.loader.OuterJoinableAssociation.hasRestriction()"], ["int", "org.hibernate.loader.OuterJoinableAssociation.getOwner(java.util.List)"], ["void", "org.hibernate.loader.OuterJoinableAssociation.addJoins(org.hibernate.sql.JoinFragment)"], ["void", "org.hibernate.loader.OuterJoinableAssociation.validateJoin(java.lang.String)"], ["boolean", "org.hibernate.loader.OuterJoinableAssociation.isManyToManyWith(org.hibernate.loader.OuterJoinableAssociation)"], ["void", "org.hibernate.loader.OuterJoinableAssociation.addManyToManyJoin(org.hibernate.sql.JoinFragment, org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.loader.internal.AliasConstantsHelper", "org.hibernate.loader.internal.AliasConstantsHelper()"], ["java.lang.String", "org.hibernate.loader.internal.AliasConstantsHelper.get(int)"], ["java.sql.ResultSet", "org.hibernate.loader.Loader$SqlStatementWrapper.getResultSet()"], ["java.sql.Statement", "org.hibernate.loader.Loader$SqlStatementWrapper.getStatement()"], ["org.hibernate.loader.Loader", "org.hibernate.loader.Loader(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.util.List", "org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, boolean)"], ["java.util.List", "org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, boolean, org.hibernate.transform.ResultTransformer)"], ["java.lang.Object", "org.hibernate.loader.Loader.loadSingleRow(java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, boolean)"], ["java.lang.Object", "org.hibernate.loader.Loader.loadSequentialRowsForward(java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, boolean)"], ["java.lang.Object", "org.hibernate.loader.Loader.loadSequentialRowsReverse(java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters, boolean, boolean)"], ["int[]", "org.hibernate.loader.Loader.getNamedParameterLocs(java.lang.String)"], ["java.util.List", "org.hibernate.loader.Loader.loadEntityBatch(org.hibernate.engine.spi.SharedSessionContractImplementor, java.io.Serializable[], org.hibernate.type.Type, java.lang.Object, java.lang.String, java.io.Serializable, org.hibernate.persister.entity.EntityPersister, org.hibernate.LockOptions)"], ["void", "org.hibernate.loader.Loader.loadCollection(org.hibernate.engine.spi.SharedSessionContractImplementor, java.io.Serializable, org.hibernate.type.Type)"], ["void", "org.hibernate.loader.Loader.loadCollectionBatch(org.hibernate.engine.spi.SharedSessionContractImplementor, java.io.Serializable[], org.hibernate.type.Type)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.loader.Loader.getFactory()"], ["java.lang.String", "org.hibernate.loader.Loader.toString()"], ["org.hibernate.loader.BatchFetchStyle[]", "org.hibernate.loader.BatchFetchStyle.values()"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.loader.BatchFetchStyle.valueOf(java.lang.String)"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.loader.BatchFetchStyle.byName(java.lang.String)"], ["org.hibernate.loader.BatchFetchStyle", "org.hibernate.loader.BatchFetchStyle.interpret(java.lang.Object)"], ["org.hibernate.loader.hql.QueryLoader", "org.hibernate.loader.hql.QueryLoader(org.hibernate.hql.internal.ast.QueryTranslatorImpl, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.hql.internal.ast.tree.SelectClause)"], ["org.hibernate.hql.internal.ast.tree.AggregatedSelectExpression", "org.hibernate.loader.hql.QueryLoader.getAggregatedSelectExpression()"], ["void", "org.hibernate.loader.hql.QueryLoader.validateScrollability()"], ["org.hibernate.persister.entity.Loadable[]", "org.hibernate.loader.hql.QueryLoader.getEntityPersisters()"], ["java.lang.String[]", "org.hibernate.loader.hql.QueryLoader.getAliases()"], ["java.lang.String[]", "org.hibernate.loader.hql.QueryLoader.getSqlAliasSuffixes()"], ["java.lang.String[]", "org.hibernate.loader.hql.QueryLoader.getSuffixes()"], ["java.lang.String[]", "org.hibernate.loader.hql.QueryLoader.getCollectionSuffixes()"], ["java.lang.String", "org.hibernate.loader.hql.QueryLoader.getSQLString()"], ["java.util.List", "org.hibernate.loader.hql.QueryLoader.list(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["java.util.Iterator", "org.hibernate.loader.hql.QueryLoader.iterate(org.hibernate.engine.spi.QueryParameters, org.hibernate.event.spi.EventSource)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.loader.hql.QueryLoader.scroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.loader.hql.QueryLoader.getNamedParameterLocs(java.lang.String)"], ["boolean", "org.hibernate.loader.JoinWalker$AssociationKey.equals(java.lang.Object)"], ["int", "org.hibernate.loader.JoinWalker$AssociationKey.hashCode()"], ["org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder$PaddedBatchingCollectionInitializer", "org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder$PaddedBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int[], org.hibernate.loader.Loader[])"], ["void", "org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder$PaddedBatchingCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer", "org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters)"], ["void", "org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.collection.plan.CollectionLoader$Builder", "org.hibernate.loader.collection.plan.CollectionLoader.forCollection(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.loader.collection.plan.CollectionLoader", "org.hibernate.loader.collection.plan.CollectionLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters)"], ["java.lang.String", "org.hibernate.loader.collection.plan.CollectionLoader.toString()"], ["org.hibernate.loader.collection.plan.AbstractBatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.plan.AbstractBatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer", "org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int[], org.hibernate.loader.Loader[])"], ["void", "org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.collection.plan.CollectionLoader$Builder", "org.hibernate.loader.collection.plan.CollectionLoader$Builder.withBatchSize(int)"], ["org.hibernate.loader.collection.plan.CollectionLoader$Builder", "org.hibernate.loader.collection.plan.CollectionLoader$Builder.withInfluencers(org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.plan.CollectionLoader", "org.hibernate.loader.collection.plan.CollectionLoader$Builder.byKey()"], ["org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder.createRealBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder.createRealBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.plan.BatchingCollectionInitializer", "org.hibernate.loader.collection.plan.BatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.loader.collection.plan.BatchingCollectionInitializer.getCollectionPersister()"], ["org.hibernate.loader.collection.CollectionLoader", "org.hibernate.loader.collection.CollectionLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["void", "org.hibernate.loader.collection.CollectionLoader.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.loader.collection.CollectionLoader.toString()"], ["org.hibernate.loader.collection.BasicCollectionJoinWalker", "org.hibernate.loader.collection.BasicCollectionJoinWalker(org.hibernate.persister.collection.QueryableCollection, int, java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.String", "org.hibernate.loader.collection.BasicCollectionJoinWalker.toString()"], ["org.hibernate.loader.collection.CollectionJoinWalker", "org.hibernate.loader.collection.CollectionJoinWalker(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.OneToManyJoinWalker", "org.hibernate.loader.collection.OneToManyJoinWalker(org.hibernate.persister.collection.QueryableCollection, int, java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["java.lang.String", "org.hibernate.loader.collection.OneToManyJoinWalker.toString()"], ["org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder.createRealBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder.createRealBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer", "org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int[], org.hibernate.loader.Loader[])"], ["void", "org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder$LegacyBatchingCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.collection.BatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.BatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.BatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.BatchingCollectionInitializerBuilder.getBuilder(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.BatchingCollectionInitializerBuilder.createBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.loader.collection.BatchingCollectionInitializerBuilder.createBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.OneToManyLoader", "org.hibernate.loader.collection.OneToManyLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.OneToManyLoader", "org.hibernate.loader.collection.OneToManyLoader(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.OneToManyLoader", "org.hibernate.loader.collection.OneToManyLoader(org.hibernate.persister.collection.QueryableCollection, int, java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionInitializer", "org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["void", "org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.BasicCollectionLoader", "org.hibernate.loader.collection.BasicCollectionLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.BasicCollectionLoader", "org.hibernate.loader.collection.BasicCollectionLoader(org.hibernate.persister.collection.QueryableCollection, int, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionLoader", "org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionLoader(org.hibernate.persister.collection.QueryableCollection, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["void", "org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder$DynamicBatchingCollectionLoader.doBatchedCollectionLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.io.Serializable[], org.hibernate.type.Type)"], ["org.hibernate.loader.collection.SubselectCollectionLoader", "org.hibernate.loader.collection.SubselectCollectionLoader(org.hibernate.persister.collection.QueryableCollection, java.lang.String, java.util.Collection, org.hibernate.engine.spi.QueryParameters, java.util.Map<java.lang.String, int[]>, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["void", "org.hibernate.loader.collection.SubselectCollectionLoader.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.loader.collection.SubselectCollectionLoader.getNamedParameterLocs(java.lang.String)"], ["org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder", "org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder()"], ["org.hibernate.loader.collection.BatchingCollectionInitializer", "org.hibernate.loader.collection.BatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.loader.collection.BatchingCollectionInitializer.getCollectionPersister()"], ["org.hibernate.persister.collection.QueryableCollection", "org.hibernate.loader.collection.BatchingCollectionInitializer.collectionPersister()"], ["org.hibernate.loader.collection.SubselectOneToManyLoader", "org.hibernate.loader.collection.SubselectOneToManyLoader(org.hibernate.persister.collection.QueryableCollection, java.lang.String, java.util.Collection, org.hibernate.engine.spi.QueryParameters, java.util.Map<java.lang.String, int[]>, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers)"], ["void", "org.hibernate.loader.collection.SubselectOneToManyLoader.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.loader.collection.SubselectOneToManyLoader.getNamedParameterLocs(java.lang.String)"], ["org.hibernate.loader.custom.ResultRowProcessor", "org.hibernate.loader.custom.ResultRowProcessor(boolean, org.hibernate.loader.custom.ResultColumnProcessor[])"], ["org.hibernate.loader.custom.ResultColumnProcessor[]", "org.hibernate.loader.custom.ResultRowProcessor.getColumnProcessors()"], ["void", "org.hibernate.loader.custom.ResultRowProcessor.prepareForAutoDiscovery(org.hibernate.loader.custom.JdbcResultMetadata)"], ["java.lang.Object", "org.hibernate.loader.custom.ResultRowProcessor.buildResultRow(java.lang.Object[], java.sql.ResultSet, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.loader.custom.ResultRowProcessor.buildResultRow(java.lang.Object[], java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.custom.EntityFetchReturn", "org.hibernate.loader.custom.EntityFetchReturn(java.lang.String, org.hibernate.loader.EntityAliases, org.hibernate.loader.custom.NonScalarReturn, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.loader.EntityAliases", "org.hibernate.loader.custom.EntityFetchReturn.getEntityAliases()"], ["org.hibernate.loader.custom.NonScalarReturn", "org.hibernate.loader.custom.NonScalarReturn(java.lang.String, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.loader.custom.NonScalarReturn.getAlias()"], ["org.hibernate.LockMode", "org.hibernate.loader.custom.NonScalarReturn.getLockMode()"], ["org.hibernate.loader.custom.CustomLoader", "org.hibernate.loader.custom.CustomLoader(org.hibernate.loader.custom.CustomQuery, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.loader.custom.CustomLoader.getSQLString()"], ["java.util.Set", "org.hibernate.loader.custom.CustomLoader.getQuerySpaces()"], ["java.util.List", "org.hibernate.loader.custom.CustomLoader.list(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters)"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.loader.custom.CustomLoader.scroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.custom.ConstructorReturn", "org.hibernate.loader.custom.ConstructorReturn(java.lang.Class, org.hibernate.loader.custom.ScalarReturn[])"], ["java.lang.Class", "org.hibernate.loader.custom.ConstructorReturn.getTargetClass()"], ["org.hibernate.loader.custom.ScalarReturn[]", "org.hibernate.loader.custom.ConstructorReturn.getScalars()"], ["org.hibernate.loader.custom.FetchReturn", "org.hibernate.loader.custom.FetchReturn(org.hibernate.loader.custom.NonScalarReturn, java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.loader.custom.NonScalarReturn", "org.hibernate.loader.custom.FetchReturn.getOwner()"], ["java.lang.String", "org.hibernate.loader.custom.FetchReturn.getOwnerProperty()"], ["void", "org.hibernate.loader.custom.CustomLoader$1.afterLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.persister.entity.Loadable)"], ["org.hibernate.loader.custom.ScalarResultColumnProcessor", "org.hibernate.loader.custom.ScalarResultColumnProcessor(int)"], ["org.hibernate.loader.custom.ScalarResultColumnProcessor", "org.hibernate.loader.custom.ScalarResultColumnProcessor(java.lang.String, org.hibernate.type.Type)"], ["void", "org.hibernate.loader.custom.ScalarResultColumnProcessor.performDiscovery(org.hibernate.loader.custom.JdbcResultMetadata, java.util.List<org.hibernate.type.Type>, java.util.List<java.lang.String>)"], ["java.lang.Object", "org.hibernate.loader.custom.ScalarResultColumnProcessor.extract(java.lang.Object[], java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.custom.ScalarReturn", "org.hibernate.loader.custom.ScalarReturn(org.hibernate.type.Type, java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.loader.custom.ScalarReturn.getType()"], ["java.lang.String", "org.hibernate.loader.custom.ScalarReturn.getColumnAlias()"], ["org.hibernate.loader.custom.NonUniqueDiscoveredSqlAliasException", "org.hibernate.loader.custom.NonUniqueDiscoveredSqlAliasException(java.lang.String)"], ["org.hibernate.loader.custom.JdbcResultMetadata", "org.hibernate.loader.custom.JdbcResultMetadata(org.hibernate.engine.spi.SessionFactoryImplementor, java.sql.ResultSet)"], ["int", "org.hibernate.loader.custom.JdbcResultMetadata.getColumnCount()"], ["int", "org.hibernate.loader.custom.JdbcResultMetadata.resolveColumnPosition(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.JdbcResultMetadata.getColumnName(int)"], ["org.hibernate.type.Type", "org.hibernate.loader.custom.JdbcResultMetadata.getHibernateType(int)"], ["org.hibernate.loader.custom.CollectionReturn", "org.hibernate.loader.custom.CollectionReturn(java.lang.String, java.lang.String, java.lang.String, org.hibernate.loader.CollectionAliases, org.hibernate.loader.EntityAliases, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.loader.custom.CollectionReturn.getOwnerEntityName()"], ["java.lang.String", "org.hibernate.loader.custom.CollectionReturn.getOwnerProperty()"], ["org.hibernate.loader.CollectionAliases", "org.hibernate.loader.custom.CollectionReturn.getCollectionAliases()"], ["org.hibernate.loader.EntityAliases", "org.hibernate.loader.custom.CollectionReturn.getElementEntityAliases()"], ["org.hibernate.loader.custom.sql.SQLQueryReturnProcessor", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor(org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[], org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor.process()"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor.visitReturns(org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$QueryReturnVisitor)"], ["org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext(org.hibernate.loader.custom.sql.SQLQueryReturnProcessor)"], ["org.hibernate.persister.entity.SQLLoadable", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getEntityPersister(java.lang.String)"], ["org.hibernate.persister.collection.SQLLoadableCollection", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getCollectionPersister(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getEntitySuffix(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getCollectionSuffix(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getOwnerAlias(java.lang.String)"], ["java.util.Map", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.getPropertyResultsMap(java.lang.String)"], ["java.lang.String[]", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.collectQuerySpaces()"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext.collectQuerySpaces(java.util.Collection<java.lang.String>)"], ["org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext(org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext)"], ["boolean", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.isEntityAlias(java.lang.String)"], ["org.hibernate.persister.entity.SQLLoadable", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.getEntityPersisterByAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.getEntitySuffixByAlias(java.lang.String)"], ["boolean", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.isCollectionAlias(java.lang.String)"], ["org.hibernate.persister.collection.SQLLoadableCollection", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.getCollectionPersisterByAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.getCollectionSuffixByAlias(java.lang.String)"], ["java.util.Map", "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext.getPropertyResultsMapByAlias(java.lang.String)"], ["org.hibernate.loader.custom.sql.NamedParamBinder", "org.hibernate.loader.custom.sql.NamedParamBinder(java.lang.String)"], ["int", "org.hibernate.loader.custom.sql.NamedParamBinder.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$1.visitScalarReturn(org.hibernate.engine.query.spi.sql.NativeSQLQueryScalarReturn)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$1.visitRootReturn(org.hibernate.engine.query.spi.sql.NativeSQLQueryRootReturn)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$1.visitCollectionReturn(org.hibernate.engine.query.spi.sql.NativeSQLQueryCollectionReturn)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$1.visitFetch(org.hibernate.engine.query.spi.sql.NativeSQLQueryJoinReturn)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$1.visitDynamicInstantiation(org.hibernate.engine.query.spi.sql.NativeSQLQueryConstructorReturn)"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLCustomQuery.getSQL()"], ["java.util.Set", "org.hibernate.loader.custom.sql.SQLCustomQuery.getQuerySpaces()"], ["java.util.List", "org.hibernate.loader.custom.sql.SQLCustomQuery.getCustomQueryReturns()"], ["org.hibernate.loader.custom.sql.SQLCustomQuery", "org.hibernate.loader.custom.sql.SQLCustomQuery(java.lang.String, org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn[], java.util.Collection, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.loader.custom.sql.SQLQueryParser", "org.hibernate.loader.custom.sql.SQLQueryParser(java.lang.String, org.hibernate.loader.custom.sql.SQLQueryParser$ParserContext, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.loader.custom.sql.SQLQueryParser.queryHasAliases()"], ["java.lang.String", "org.hibernate.loader.custom.sql.SQLQueryParser.process()"], ["org.hibernate.loader.custom.sql.PositionalParamBinder", "org.hibernate.loader.custom.sql.PositionalParamBinder(int)"], ["int", "org.hibernate.loader.custom.sql.PositionalParamBinder.bind(java.sql.PreparedStatement, org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor, int)"], ["org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.outParameter(int)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.ordinalParameter(int)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.jpaPositionalParameter(int, int)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.namedParameter(java.lang.String, int)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.other(char)"], ["void", "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer.complete()"], ["org.hibernate.loader.custom.ConstructorResultColumnProcessor", "org.hibernate.loader.custom.ConstructorResultColumnProcessor(java.lang.Class, org.hibernate.loader.custom.ScalarResultColumnProcessor[])"], ["void", "org.hibernate.loader.custom.ConstructorResultColumnProcessor.performDiscovery(org.hibernate.loader.custom.JdbcResultMetadata, java.util.List<org.hibernate.type.Type>, java.util.List<java.lang.String>)"], ["java.lang.Object", "org.hibernate.loader.custom.ConstructorResultColumnProcessor.extract(java.lang.Object[], java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.custom.CollectionFetchReturn", "org.hibernate.loader.custom.CollectionFetchReturn(java.lang.String, org.hibernate.loader.custom.NonScalarReturn, java.lang.String, org.hibernate.loader.CollectionAliases, org.hibernate.loader.EntityAliases, org.hibernate.LockMode)"], ["org.hibernate.loader.CollectionAliases", "org.hibernate.loader.custom.CollectionFetchReturn.getCollectionAliases()"], ["org.hibernate.loader.EntityAliases", "org.hibernate.loader.custom.CollectionFetchReturn.getElementEntityAliases()"], ["org.hibernate.loader.custom.RootReturn", "org.hibernate.loader.custom.RootReturn(java.lang.String, java.lang.String, org.hibernate.loader.EntityAliases, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.loader.custom.RootReturn.getEntityName()"], ["org.hibernate.loader.EntityAliases", "org.hibernate.loader.custom.RootReturn.getEntityAliases()"], ["org.hibernate.loader.custom.ColumnCollectionAliases", "org.hibernate.loader.custom.ColumnCollectionAliases(java.util.Map, org.hibernate.persister.collection.SQLLoadableCollection)"], ["java.lang.String[]", "org.hibernate.loader.custom.ColumnCollectionAliases.getSuffixedKeyAliases()"], ["java.lang.String[]", "org.hibernate.loader.custom.ColumnCollectionAliases.getSuffixedIndexAliases()"], ["java.lang.String[]", "org.hibernate.loader.custom.ColumnCollectionAliases.getSuffixedElementAliases()"], ["java.lang.String", "org.hibernate.loader.custom.ColumnCollectionAliases.getSuffixedIdentifierAlias()"], ["java.lang.String", "org.hibernate.loader.custom.ColumnCollectionAliases.getSuffix()"], ["java.lang.String", "org.hibernate.loader.custom.ColumnCollectionAliases.toString()"], ["org.hibernate.loader.custom.NonScalarResultColumnProcessor", "org.hibernate.loader.custom.NonScalarResultColumnProcessor(int)"], ["void", "org.hibernate.loader.custom.NonScalarResultColumnProcessor.performDiscovery(org.hibernate.loader.custom.JdbcResultMetadata, java.util.List<org.hibernate.type.Type>, java.util.List<java.lang.String>)"], ["java.lang.Object", "org.hibernate.loader.custom.NonScalarResultColumnProcessor.extract(java.lang.Object[], java.sql.ResultSet, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.loader.ColumnEntityAliases", "org.hibernate.loader.ColumnEntityAliases(java.util.Map, org.hibernate.persister.entity.Loadable, java.lang.String)"], ["default", "org.hibernate.SessionFactory.javax.persistence.Cache getCache()"], ["org.hibernate.TransientObjectException", "org.hibernate.TransientObjectException(java.lang.String)"], ["org.hibernate.AssertionFailure", "org.hibernate.AssertionFailure(java.lang.String)"], ["org.hibernate.AssertionFailure", "org.hibernate.AssertionFailure(java.lang.String, java.lang.Throwable)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setProperties(java.util.Map)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setComment(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setFetchSize(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setTimeout(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setCacheable(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setReadOnly(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setFirstResult(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setMaxResults(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setFirstResult(int)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.TypedQuery setMaxResults(int)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setFirstResult(int)"], ["default", "org.hibernate.query.NativeQuery.javax.persistence.Query setMaxResults(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setFirstResult(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setMaxResults(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setProperties(java.util.Map)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setComment(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setReadOnly(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setFetchSize(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setTimeout(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setCacheable(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setReadOnly(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setFetchSize(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setTimeout(int)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setCacheable(boolean)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.Class, org.hibernate.LockMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.Class)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addEntity(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addScalar(java.lang.String, org.hibernate.type.Type)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery addScalar(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SQLQuery setResultSetMapping(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SynchronizeableQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SynchronizeableQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.query.NativeQuery.org.hibernate.SynchronizeableQuery addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode[]", "org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode.values()"], ["org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode", "org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode.valueOf(java.lang.String)"], ["org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode", "org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode.interpret(java.lang.Object)"], ["default", "org.hibernate.query.Query.R getSingleResult()"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setFirstResult(int)"], ["default", "org.hibernate.query.Query.javax.persistence.TypedQuery setMaxResults(int)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setFirstResult(int)"], ["default", "org.hibernate.query.Query.javax.persistence.Query setMaxResults(int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameters(java.lang.Object[], org.hibernate.type.Type[])"], ["default", "org.hibernate.query.Query.org.hibernate.Query setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setEntity(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setEntity(int, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCalendarDate(java.lang.String, java.util.Calendar)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCalendar(java.lang.String, java.util.Calendar)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setTimestamp(java.lang.String, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setTime(java.lang.String, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setDate(java.lang.String, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBigInteger(java.lang.String, java.math.BigInteger)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBigDecimal(java.lang.String, java.math.BigDecimal)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLocale(java.lang.String, java.util.Locale)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setSerializable(java.lang.String, java.io.Serializable)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setText(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBinary(java.lang.String, byte[])"], ["default", "org.hibernate.query.Query.org.hibernate.Query setDouble(java.lang.String, double)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFloat(java.lang.String, float)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLong(java.lang.String, long)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setInteger(java.lang.String, int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setShort(java.lang.String, short)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setByte(java.lang.String, byte)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBoolean(java.lang.String, boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCharacter(java.lang.String, char)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setString(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCalendarDate(int, java.util.Calendar)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCalendar(int, java.util.Calendar)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setTimestamp(int, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setTime(int, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setDate(int, java.util.Date)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBigInteger(int, java.math.BigInteger)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBigDecimal(int, java.math.BigDecimal)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLocale(int, java.util.Locale)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setSerializable(int, java.io.Serializable)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setText(int, java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBinary(int, byte[])"], ["default", "org.hibernate.query.Query.org.hibernate.Query setDouble(int, double)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFloat(int, float)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLong(int, long)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setInteger(int, int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setShort(int, short)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setByte(int, byte)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setBoolean(int, boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCharacter(int, char)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setString(int, java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLockMode(javax.persistence.LockModeType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFlushMode(javax.persistence.FlushModeType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setHint(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFirstResult(int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setMaxResults(int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setProperties(java.util.Map)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.Query.org.hibernate.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setComment(java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setReadOnly(boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFetchSize(int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setTimeout(int)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCacheable(boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.Query.org.hibernate.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setReadOnly(boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setFetchSize(int)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setTimeout(int)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setCacheable(boolean)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.Query.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["<P> void", "org.hibernate.query.spi.QueryParameterBindingValidator.validate(org.hibernate.type.Type, java.lang.Object)"], ["<P> void", "org.hibernate.query.spi.QueryParameterBindingValidator.validate(org.hibernate.type.Type, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.query.spi.NamedQueryRepository(java.lang.Iterable<org.hibernate.engine.spi.NamedQueryDefinition>, java.lang.Iterable<org.hibernate.engine.spi.NamedSQLQueryDefinition>, java.lang.Iterable<org.hibernate.engine.ResultSetMappingDefinition>, java.util.Map<java.lang.String, org.hibernate.procedure.ProcedureCallMemento>)"], ["org.hibernate.query.spi.NamedQueryRepository", "org.hibernate.query.spi.NamedQueryRepository(java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition>, java.util.Map<java.lang.String, org.hibernate.engine.ResultSetMappingDefinition>, java.util.Map<java.lang.String, org.hibernate.procedure.ProcedureCallMemento>)"], ["org.hibernate.engine.spi.NamedQueryDefinition", "org.hibernate.query.spi.NamedQueryRepository.getNamedQueryDefinition(java.lang.String)"], ["org.hibernate.engine.spi.NamedSQLQueryDefinition", "org.hibernate.query.spi.NamedQueryRepository.getNamedSQLQueryDefinition(java.lang.String)"], ["org.hibernate.procedure.ProcedureCallMemento", "org.hibernate.query.spi.NamedQueryRepository.getNamedProcedureCallMemento(java.lang.String)"], ["org.hibernate.engine.ResultSetMappingDefinition", "org.hibernate.query.spi.NamedQueryRepository.getResultSetMappingDefinition(java.lang.String)"], ["synchronized", "org.hibernate.query.spi.NamedQueryRepository.void registerNamedQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition)"], ["synchronized", "org.hibernate.query.spi.NamedQueryRepository.void registerNamedSQLQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition)"], ["synchronized", "org.hibernate.query.spi.NamedQueryRepository.void registerNamedProcedureCallMemento(java.lang.String, org.hibernate.procedure.ProcedureCallMemento)"], ["java.util.Map<java.lang.String, org.hibernate.HibernateException>", "org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(org.hibernate.engine.query.spi.QueryPlanCache)"], ["default", "org.hibernate.query.spi.QueryImplementor.org.hibernate.query.QueryProducer getProducer()"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.spi.NativeQueryImplementor getNamedSQLQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.spi.NativeQueryImplementor createSQLQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.NativeQuery getNamedNativeQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.Query getNamedSQLQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.NativeQuery createNativeQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.SQLQuery createSQLQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.Query createNamedQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.query.Query createQuery(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.Query createQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.QueryProducerImplementor.org.hibernate.Query getNamedQuery(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setProperties(java.util.Map)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setComment(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setFetchSize(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setTimeout(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setCacheable(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setReadOnly(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setProperties(java.util.Map)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setProperties(java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setComment(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setReadOnly(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setFetchSize(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setTimeout(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setCacheable(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.Query setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setReadOnly(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setFetchSize(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setTimeout(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setCacheable(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addQueryHint(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setComment(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setLockMode(java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setLockOptions(org.hibernate.LockOptions)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setReadOnly(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setFetchSize(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setTimeout(int)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setCacheRegion(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setCacheable(boolean)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setCacheMode(org.hibernate.CacheMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setHibernateFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addJoin(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addJoin(java.lang.String, java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addJoin(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.String, java.lang.Class, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addEntity(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addScalar(java.lang.String, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addScalar(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery addSynchronizedQuerySpace(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setProperties(java.util.Map)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setProperties(java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameterList(java.lang.String, java.lang.Object[])"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameterList(java.lang.String, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(int, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(java.lang.String, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(javax.persistence.Parameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.query.NativeQuery setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addJoin(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.Class, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.String, java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addEntity(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addScalar(java.lang.String, org.hibernate.type.Type)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SQLQuery addScalar(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SynchronizeableQuery addSynchronizedEntityClass(java.lang.Class)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SynchronizeableQuery addSynchronizedEntityName(java.lang.String)"], ["default", "org.hibernate.query.spi.NativeQueryImplementor.org.hibernate.SynchronizeableQuery addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler()"], ["java.lang.Float", "org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler.render(java.lang.Float)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler.render(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$FloatValueHandler.convert(java.lang.Object)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.FromImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.org.hibernate.query.criteria.internal.PathImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.javax.persistence.criteria.MapJoin on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.MapJoinImplementor.javax.persistence.criteria.MapJoin on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.FromImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.org.hibernate.query.criteria.internal.PathImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.javax.persistence.criteria.ListJoin on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.ListJoinImplementor.javax.persistence.criteria.ListJoin on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.expression.PathTypeExpression", "org.hibernate.query.criteria.internal.expression.PathTypeExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, org.hibernate.query.criteria.internal.path.AbstractPathImpl<T>)"], ["void", "org.hibernate.query.criteria.internal.expression.PathTypeExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.PathTypeExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.SearchedCaseExpression$WhenClause", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression$WhenClause(javax.persistence.criteria.Expression<java.lang.Boolean>, javax.persistence.criteria.Expression<? extends R>)"], ["javax.persistence.criteria.Expression<? extends R>", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression$WhenClause.getResult()"], ["org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<Y>, javax.persistence.criteria.Subquery<Y>, org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier)"], ["org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression.getModifier()"], ["void", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.LowerFunction", "org.hibernate.query.criteria.internal.expression.function.LowerFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$GREATEST", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$GREATEST(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<X>)"], ["org.hibernate.query.criteria.internal.expression.function.LocateFunction", "org.hibernate.query.criteria.internal.expression.function.LocateFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Integer>)"], ["org.hibernate.query.criteria.internal.expression.function.LocateFunction", "org.hibernate.query.criteria.internal.expression.function.LocateFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.LocateFunction", "org.hibernate.query.criteria.internal.expression.function.LocateFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.String, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.LocateFunction", "org.hibernate.query.criteria.internal.expression.function.LocateFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.String, javax.persistence.criteria.Expression<java.lang.String>, int)"], ["void", "org.hibernate.query.criteria.internal.expression.function.LocateFunction.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.LocateFunction.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression", "org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, java.lang.String, java.util.List<javax.persistence.criteria.Expression<?>>)"], ["org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression", "org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, java.lang.String, javax.persistence.criteria.Expression<?>...)"], ["void", "org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.ParameterizedFunctionExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.CurrentTimestampFunction", "org.hibernate.query.criteria.internal.expression.function.CurrentTimestampFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.CriteriaBuilder$Trimspec, javax.persistence.criteria.Expression<java.lang.Character>, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.CriteriaBuilder$Trimspec, char, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.Character>, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, char, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.TrimFunction", "org.hibernate.query.criteria.internal.expression.function.TrimFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.CriteriaBuilder$Trimspec, javax.persistence.criteria.Expression<java.lang.String>)"], ["javax.persistence.criteria.CriteriaBuilder$Trimspec", "org.hibernate.query.criteria.internal.expression.function.TrimFunction.getTrimspec()"], ["void", "org.hibernate.query.criteria.internal.expression.function.TrimFunction.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.TrimFunction.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$AVG", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$AVG(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$LEAST", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$LEAST(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<X>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$COUNT", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$COUNT(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<?>, boolean)"], ["boolean", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$COUNT.isDistinct()"], ["org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression", "org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, java.lang.String)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression.getFunctionName()"], ["boolean", "org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression.isAggregation()"], ["void", "org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.BasicFunctionExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.SubstringFunction", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Integer>, javax.persistence.criteria.Expression<java.lang.Integer>)"], ["org.hibernate.query.criteria.internal.expression.function.SubstringFunction", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Integer>)"], ["org.hibernate.query.criteria.internal.expression.function.SubstringFunction", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, int)"], ["org.hibernate.query.criteria.internal.expression.function.SubstringFunction", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, int, int)"], ["void", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.SubstringFunction.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$MAX", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$MAX(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<N>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$SUM", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$SUM(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<N>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$SUM", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$SUM(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends java.lang.Number>, java.lang.Class<N>)"], ["org.hibernate.query.criteria.internal.expression.function.AbsFunction", "org.hibernate.query.criteria.internal.expression.function.AbsFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, java.lang.String, java.lang.Object)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, java.lang.String, javax.persistence.criteria.Expression<?>)"], ["boolean", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction.isAggregation()"], ["org.hibernate.query.criteria.internal.expression.function.CastFunction", "org.hibernate.query.criteria.internal.expression.function.CastFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, org.hibernate.query.criteria.internal.expression.ExpressionImpl<Y>)"], ["void", "org.hibernate.query.criteria.internal.expression.function.CastFunction.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.function.CastFunction.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.function.UpperFunction", "org.hibernate.query.criteria.internal.expression.function.UpperFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.function.AggregationFunction$MIN", "org.hibernate.query.criteria.internal.expression.function.AggregationFunction$MIN(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<N>)"], ["org.hibernate.query.criteria.internal.expression.function.CurrentDateFunction", "org.hibernate.query.criteria.internal.expression.function.CurrentDateFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["org.hibernate.query.criteria.internal.expression.function.CurrentTimeFunction", "org.hibernate.query.criteria.internal.expression.function.CurrentTimeFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["org.hibernate.query.criteria.internal.expression.function.SqrtFunction", "org.hibernate.query.criteria.internal.expression.function.SqrtFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["org.hibernate.query.criteria.internal.expression.function.LengthFunction", "org.hibernate.query.criteria.internal.expression.function.LengthFunction(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation, javax.persistence.criteria.Expression<T>)"], ["org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation.getOperation()"], ["void", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.ExpressionImpl", "org.hibernate.query.criteria.internal.expression.ExpressionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["<X> javax.persistence.criteria.Expression<X>", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.as(java.lang.Class<X>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.isNull()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.isNotNull()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.in(java.lang.Object...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.in(javax.persistence.criteria.Expression<?>...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.in(java.util.Collection<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.expression.ExpressionImpl.in(javax.persistence.criteria.Expression<java.util.Collection<?>>)"], ["org.hibernate.query.criteria.internal.expression.SimpleCaseExpression", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<R>, javax.persistence.criteria.Expression<? extends C>)"], ["javax.persistence.criteria.CriteriaBuilder$SimpleCase<C, R>", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.when(C, R)"], ["javax.persistence.criteria.CriteriaBuilder$SimpleCase<C, R>", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.when(C, javax.persistence.criteria.Expression<? extends R>)"], ["javax.persistence.criteria.Expression<? extends R>", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.getOtherwiseResult()"], ["java.util.List<org.hibernate.query.criteria.internal.expression.SimpleCaseExpression<C, R>.WhenClause>", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.getWhenClauses()"], ["void", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation[]", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation.values()"], ["org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation", "org.hibernate.query.criteria.internal.expression.UnaryArithmeticOperation$Operation.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.internal.expression.ConcatExpression", "org.hibernate.query.criteria.internal.expression.ConcatExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.expression.ConcatExpression", "org.hibernate.query.criteria.internal.expression.ConcatExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, java.lang.String)"], ["org.hibernate.query.criteria.internal.expression.ConcatExpression", "org.hibernate.query.criteria.internal.expression.ConcatExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.String, javax.persistence.criteria.Expression<java.lang.String>)"], ["void", "org.hibernate.query.criteria.internal.expression.ConcatExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.ConcatExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.EntityTypeExpression", "org.hibernate.query.criteria.internal.expression.EntityTypeExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["void", "org.hibernate.query.criteria.internal.expression.EntityTypeExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.EntityTypeExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression", "org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.path.PluralAttributePath)"], ["org.hibernate.query.criteria.internal.path.PluralAttributePath", "org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression.getCollectionPath()"], ["org.hibernate.query.criteria.internal.path.PluralAttributePath", "org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression.getPluralAttributePath()"], ["void", "org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.SizeOfPluralAttributeExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.DelegatedExpressionImpl", "org.hibernate.query.criteria.internal.expression.DelegatedExpressionImpl(org.hibernate.query.criteria.internal.expression.ExpressionImpl<T>)"], ["void", "org.hibernate.query.criteria.internal.expression.DelegatedExpressionImpl.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["boolean", "org.hibernate.query.criteria.internal.expression.DelegatedExpressionImpl.isCompoundSelection()"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.DelegatedExpressionImpl.getAlias()"], ["org.hibernate.query.criteria.internal.expression.CoalesceExpression", "org.hibernate.query.criteria.internal.expression.CoalesceExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["org.hibernate.query.criteria.internal.expression.CoalesceExpression", "org.hibernate.query.criteria.internal.expression.CoalesceExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["java.util.List<javax.persistence.criteria.Expression<? extends T>>", "org.hibernate.query.criteria.internal.expression.CoalesceExpression.getExpressions()"], ["void", "org.hibernate.query.criteria.internal.expression.CoalesceExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.CoalesceExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation[]", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation.values()"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.internal.expression.CompoundSelectionImpl", "org.hibernate.query.criteria.internal.expression.CompoundSelectionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, java.util.List<javax.persistence.criteria.Selection<?>>)"], ["boolean", "org.hibernate.query.criteria.internal.expression.CompoundSelectionImpl.isCompoundSelection()"], ["void", "org.hibernate.query.criteria.internal.expression.CompoundSelectionImpl.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.CompoundSelectionImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, java.lang.String)"], ["org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, java.lang.Integer)"], ["org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl.getName()"], ["java.lang.Integer", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl.getPosition()"], ["void", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.ParameterExpressionImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.Class<? extends java.lang.Number>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.determineResultType(java.lang.Class<? extends java.lang.Number>, java.lang.Class<? extends java.lang.Number>)"], ["java.lang.Class<? extends java.lang.Number>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.determineResultType(java.lang.Class<? extends java.lang.Number>, java.lang.Class<? extends java.lang.Number>, boolean)"], ["java.lang.Class<? extends java.lang.Number>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.determineReturnType(java.lang.Class<? extends java.lang.Number>, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["java.lang.Class<? extends java.lang.Number>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.determineReturnType(java.lang.Class<? extends java.lang.Number>, java.lang.Number)"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<N>, org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation, javax.persistence.criteria.Expression<? extends N>, javax.persistence.criteria.Expression<? extends N>)"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<N>, org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation, javax.persistence.criteria.Expression<? extends N>, N)"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<N>, org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation, N, javax.persistence.criteria.Expression<? extends N>)"], ["org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation$Operation", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.getOperator()"], ["javax.persistence.criteria.Expression<? extends N>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.getRightHandOperand()"], ["javax.persistence.criteria.Expression<? extends N>", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.getLeftHandOperand()"], ["void", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.BinaryArithmeticOperation.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.SimpleCaseExpression$WhenClause", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression$WhenClause(org.hibernate.query.criteria.internal.expression.LiteralExpression<C>, javax.persistence.criteria.Expression<? extends R>)"], ["javax.persistence.criteria.Expression<? extends R>", "org.hibernate.query.criteria.internal.expression.SimpleCaseExpression$WhenClause.getResult()"], ["org.hibernate.query.criteria.internal.expression.SelectionImpl", "org.hibernate.query.criteria.internal.expression.SelectionImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>)"], ["boolean", "org.hibernate.query.criteria.internal.expression.SelectionImpl.isCompoundSelection()"], ["org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier[]", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier.values()"], ["org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier", "org.hibernate.query.criteria.internal.expression.SubqueryComparisonModifierExpression$Modifier.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.internal.expression.MapEntryExpression", "org.hibernate.query.criteria.internal.expression.MapEntryExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<java.util.Map$Entry<K, V>>, org.hibernate.query.criteria.internal.path.MapAttributeJoin<?, K, V>)"], ["void", "org.hibernate.query.criteria.internal.expression.MapEntryExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.MapEntryExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["boolean", "org.hibernate.query.criteria.internal.expression.MapEntryExpression.isCompoundSelection()"], ["org.hibernate.query.criteria.internal.expression.NullifExpression", "org.hibernate.query.criteria.internal.expression.NullifExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, javax.persistence.criteria.Expression<? extends T>, javax.persistence.criteria.Expression<?>)"], ["org.hibernate.query.criteria.internal.expression.NullifExpression", "org.hibernate.query.criteria.internal.expression.NullifExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, javax.persistence.criteria.Expression<? extends T>, java.lang.Object)"], ["javax.persistence.criteria.Expression<? extends T>", "org.hibernate.query.criteria.internal.expression.NullifExpression.getPrimaryExpression()"], ["void", "org.hibernate.query.criteria.internal.expression.NullifExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.NullifExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.ListIndexExpression", "org.hibernate.query.criteria.internal.expression.ListIndexExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.PathImplementor, javax.persistence.metamodel.ListAttribute)"], ["javax.persistence.metamodel.ListAttribute", "org.hibernate.query.criteria.internal.expression.ListIndexExpression.getListAttribute()"], ["void", "org.hibernate.query.criteria.internal.expression.ListIndexExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.ListIndexExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.SearchedCaseExpression", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<R>)"], ["javax.persistence.criteria.Expression<? extends R>", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression.getOtherwiseResult()"], ["void", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.SearchedCaseExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.NullLiteralExpression", "org.hibernate.query.criteria.internal.expression.NullLiteralExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["void", "org.hibernate.query.criteria.internal.expression.NullLiteralExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.NullLiteralExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.expression.LiteralExpression", "org.hibernate.query.criteria.internal.expression.LiteralExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, T)"], ["org.hibernate.query.criteria.internal.expression.LiteralExpression", "org.hibernate.query.criteria.internal.expression.LiteralExpression(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, T)"], ["T", "org.hibernate.query.criteria.internal.expression.LiteralExpression.getLiteral()"], ["void", "org.hibernate.query.criteria.internal.expression.LiteralExpression.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.LiteralExpression.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.expression.AbstractTupleElement.getAlias()"], ["java.util.Map<java.lang.String, java.lang.Class>", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery$1$1.getNamedParameterExplicitTypes()"], ["org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions$ResultMetadataValidator", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery$1$1.getResultMetadataValidator()"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler()"], ["java.math.BigInteger", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler.render(java.math.BigInteger)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler.render(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigIntegerValueHandler.convert(java.lang.Object)"], ["void", "org.hibernate.query.criteria.internal.QueryStructure$1.registerParameter(javax.persistence.criteria.ParameterExpression<?>)"], ["org.hibernate.query.criteria.internal.CriteriaSubqueryImpl", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>, javax.persistence.criteria.CommonAbstractCriteria)"], ["javax.persistence.criteria.CommonAbstractCriteria", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.getContainingQuery()"], ["void", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.from(javax.persistence.metamodel.EntityType<X>)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.from(java.lang.Class<X>)"], ["boolean", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.isDistinct()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.getRestriction()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.getGroupRestriction()"], ["java.util.Set<javax.persistence.criteria.Join<?, ?>>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.getCorrelatedJoins()"], ["<Y> javax.persistence.criteria.Root<Y>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.Root<Y>)"], ["<X, Y> javax.persistence.criteria.Join<X, Y>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.Join<X, Y>)"], ["<X, Y> javax.persistence.criteria.CollectionJoin<X, Y>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.CollectionJoin<X, Y>)"], ["<X, Y> javax.persistence.criteria.SetJoin<X, Y>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.SetJoin<X, Y>)"], ["<X, Y> javax.persistence.criteria.ListJoin<X, Y>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.ListJoin<X, Y>)"], ["<X, K, V> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.correlate(javax.persistence.criteria.MapJoin<X, K, V>)"], ["<U> javax.persistence.criteria.Subquery<U>", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.subquery(java.lang.Class<U>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.Selection", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.getSelection()"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.distinct(boolean)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.having(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.having(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.groupBy(java.util.List)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.groupBy(javax.persistence.criteria.Expression[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.where(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl.where(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.CriteriaSubqueryImpl$SubquerySelection", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl$SubquerySelection(org.hibernate.query.criteria.internal.expression.ExpressionImpl<S>, org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["java.lang.String", "org.hibernate.query.criteria.internal.CriteriaSubqueryImpl$SubquerySelection.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.Root", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.from(java.lang.Class<T>)"], ["void", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.setRestriction(javax.persistence.criteria.Predicate...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.getRestriction()"], ["<U> javax.persistence.criteria.Subquery<U>", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.subquery(java.lang.Class<U>)"], ["void", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.validate()"], ["org.hibernate.query.criteria.internal.compile.CriteriaInterpretation", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery.interpret(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["default", "org.hibernate.query.criteria.internal.FromImplementor.javax.persistence.criteria.From getCorrelationParent()"], ["java.util.Map<java.lang.String, java.lang.Class>", "org.hibernate.query.criteria.internal.CriteriaQueryImpl$1$1.getNamedParameterExplicitTypes()"], ["org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions$ResultMetadataValidator", "org.hibernate.query.criteria.internal.CriteriaQueryImpl$1$1.getResultMetadataValidator()"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$ByteValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ByteValueHandler()"], ["java.lang.Byte", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ByteValueHandler.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ByteValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.internal.QueryStructure", "org.hibernate.query.criteria.internal.QueryStructure(javax.persistence.criteria.AbstractQuery<T>, org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["boolean", "org.hibernate.query.criteria.internal.QueryStructure.isDistinct()"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setDistinct(boolean)"], ["javax.persistence.criteria.Selection<? extends T>", "org.hibernate.query.criteria.internal.QueryStructure.getSelection()"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setSelection(javax.persistence.criteria.Selection<? extends T>)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.QueryStructure.from(java.lang.Class<X>)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.QueryStructure.from(javax.persistence.metamodel.EntityType<X>)"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.addCorrelationRoot(org.hibernate.query.criteria.internal.FromImplementor)"], ["java.util.Set<javax.persistence.criteria.Join<?, ?>>", "org.hibernate.query.criteria.internal.QueryStructure.collectCorrelatedJoins()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.QueryStructure.getRestriction()"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setRestriction(javax.persistence.criteria.Predicate)"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setGroupings(java.util.List<javax.persistence.criteria.Expression<?>>)"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setGroupings(javax.persistence.criteria.Expression<?>...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.QueryStructure.getHaving()"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.setHaving(javax.persistence.criteria.Predicate)"], ["<U> javax.persistence.criteria.Subquery<U>", "org.hibernate.query.criteria.internal.QueryStructure.subquery(java.lang.Class<U>)"], ["void", "org.hibernate.query.criteria.internal.QueryStructure.render(java.lang.StringBuilder, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.metamodel.MapAttribute<?, K, ?>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.getName()"], ["javax.persistence.metamodel.Attribute$PersistentAttributeType", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.getPersistentAttributeType()"], ["javax.persistence.metamodel.ManagedType<java.util.Map<K, ?>>", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.getDeclaringType()"], ["java.lang.reflect.Member", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.getJavaMember()"], ["boolean", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.isAssociation()"], ["boolean", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.isCollection()"], ["boolean", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.isId()"], ["boolean", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.isVersion()"], ["boolean", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.isOptional()"], ["javax.persistence.metamodel.Bindable$BindableType", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute.getBindableType()"], ["org.hibernate.query.criteria.internal.path.SingularAttributePath", "org.hibernate.query.criteria.internal.path.SingularAttributePath(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, org.hibernate.query.criteria.internal.PathSource, javax.persistence.metamodel.SingularAttribute<?, X>)"], ["javax.persistence.metamodel.SingularAttribute<?, X>", "org.hibernate.query.criteria.internal.path.SingularAttributePath.getAttribute()"], ["<T extends X> org.hibernate.query.criteria.internal.path.SingularAttributePath<T>", "org.hibernate.query.criteria.internal.path.SingularAttributePath.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributePath.treatAs(java.lang.Class)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SingularAttributePath.getAttribute()"], ["org.hibernate.query.criteria.internal.path.CollectionAttributeJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<E>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.CollectionAttribute<? super O, E>, javax.persistence.criteria.JoinType)"], ["org.hibernate.query.criteria.internal.path.CollectionAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.CollectionAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.CollectionAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.path.CollectionAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.path.CollectionAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["<T extends E> org.hibernate.query.criteria.internal.path.CollectionAttributeJoin<O, T>", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.CollectionJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.CollectionJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.path.SingularAttributeJoin", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.SingularAttribute<? super O, ?>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.SingularAttribute<? super O, ?>", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.path.SingularAttributeJoin<O, X>", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["<T extends X> org.hibernate.query.criteria.internal.path.SingularAttributeJoin<O, T>", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath(org.hibernate.query.criteria.internal.path.SingularAttributePath<? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath.treatAs(java.lang.Class)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SingularAttributePath$TreatedSingularAttributePath.getAttribute()"], ["org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin(org.hibernate.query.criteria.internal.path.SingularAttributeJoin<O, ? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SingularAttributeJoin$TreatedSingularAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.path.ListAttributeJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<E>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.ListAttribute<? super O, E>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.ListAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.ListAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.path.ListAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.path.ListAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.path.ListAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["<T extends E> org.hibernate.query.criteria.internal.path.ListAttributeJoin<O, T>", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.ListJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.ListJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot(org.hibernate.query.criteria.internal.path.RootImpl<? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.getPathIdentifier()"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.getModel()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin(org.hibernate.query.criteria.internal.path.SetAttributeJoin<O, ? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getPathIdentifier()"], ["org.hibernate.query.criteria.internal.SetJoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.SetJoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.treatAs(java.lang.Class)"], ["javax.persistence.criteria.SetJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.SetJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin$TreatedSetAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin(org.hibernate.query.criteria.internal.path.CollectionAttributeJoin<O, ? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getPathIdentifier()"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.CollectionJoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.treatAs(java.lang.Class)"], ["javax.persistence.criteria.CollectionJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.CollectionJoin", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.CollectionAttributeJoin$TreatedCollectionAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.path.AbstractPathImpl", "org.hibernate.query.criteria.internal.path.AbstractPathImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, org.hibernate.query.criteria.internal.PathSource)"], ["org.hibernate.query.criteria.internal.PathSource", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.getPathSource()"], ["javax.persistence.criteria.Expression<java.lang.Class<? extends X>>", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.type()"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.getPathIdentifier()"], ["<Y> javax.persistence.criteria.Path<Y>", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(javax.persistence.metamodel.SingularAttribute<? super X, Y>)"], ["<E, C extends java.util.Collection<E>> javax.persistence.criteria.Expression<C>", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(javax.persistence.metamodel.PluralAttribute<X, C, E>)"], ["<K, V, M extends java.util.Map<K, V>> javax.persistence.criteria.Expression<M>", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(javax.persistence.metamodel.MapAttribute<X, K, V>)"], ["<Y> javax.persistence.criteria.Path<Y>", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(java.lang.String)"], ["void", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["void", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.Path", "org.hibernate.query.criteria.internal.path.AbstractPathImpl.getParentPath()"], ["org.hibernate.query.criteria.internal.path.AbstractJoinImpl", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.PathSource<Z>, javax.persistence.metamodel.Attribute<? super Z, X>, javax.persistence.criteria.JoinType)"], ["org.hibernate.query.criteria.internal.path.AbstractJoinImpl", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, org.hibernate.query.criteria.internal.PathSource<Z>, javax.persistence.metamodel.Attribute<? super Z, ?>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.Attribute<? super Z, ?>", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.getAttribute()"], ["javax.persistence.criteria.JoinType", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.getJoinType()"], ["javax.persistence.criteria.From<?, Z>", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.getParent()"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.renderTableExpression(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.JoinImplementor<Z, X>", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor<Z, X>", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.JoinImplementor<Z, X>", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.getOn()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.on(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.FetchParent", "org.hibernate.query.criteria.internal.path.AbstractJoinImpl.getParent()"], ["org.hibernate.query.criteria.internal.path.SetAttributeJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<E>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.SetAttribute<? super O, E>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.SetAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.SetAttribute<? super O, E>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.path.SetAttributeJoin<O, E>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.SetJoinImplementor<O, E>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.SetJoinImplementor<O, E>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["<T extends E> org.hibernate.query.criteria.internal.path.SetAttributeJoin<O, T>", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.SetJoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.SetJoinImplementor", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.SetJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.SetJoin", "org.hibernate.query.criteria.internal.path.SetAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.path.PluralAttributePath", "org.hibernate.query.criteria.internal.path.PluralAttributePath(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.PathSource, javax.persistence.metamodel.PluralAttribute<?, X, ?>)"], ["javax.persistence.metamodel.PluralAttribute<?, X, ?>", "org.hibernate.query.criteria.internal.path.PluralAttributePath.getAttribute()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.query.criteria.internal.path.PluralAttributePath.getPersister()"], ["<T extends X> org.hibernate.query.criteria.internal.path.PluralAttributePath<T>", "org.hibernate.query.criteria.internal.path.PluralAttributePath.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.PluralAttributePath.treatAs(java.lang.Class)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.PluralAttributePath.getAttribute()"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl$BasicJoinScope.addJoin(javax.persistence.criteria.Join<X, ?>)"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl$BasicJoinScope.addFetch(javax.persistence.criteria.Fetch<X, ?>)"], ["org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<java.util.Map<K, V>>, org.hibernate.query.criteria.internal.MapJoinImplementor<?, K, V>, javax.persistence.metamodel.MapAttribute<?, K, V>)"], ["javax.persistence.metamodel.MapAttribute<?, K, V>", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getAttribute()"], ["javax.persistence.metamodel.Bindable<java.util.Map<K, V>>", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getModel()"], ["<T extends java.util.Map<K, V>> org.hibernate.query.criteria.internal.PathImplementor<T>", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.treatAs(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getPathIdentifier()"], ["void", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.PathSource", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getParentPath()"], ["javax.persistence.criteria.Path", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getParentPath()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource.getAttribute()"], ["org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin(org.hibernate.query.criteria.internal.path.ListAttributeJoin<O, ? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getPathIdentifier()"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.ListJoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.treatAs(java.lang.Class)"], ["javax.persistence.criteria.ListJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.ListJoin", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.ListAttributeJoin$TreatedListAttributeJoin.getAttribute()"], ["org.hibernate.query.criteria.internal.path.AbstractFromImpl", "org.hibernate.query.criteria.internal.path.AbstractFromImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>)"], ["org.hibernate.query.criteria.internal.path.AbstractFromImpl", "org.hibernate.query.criteria.internal.path.AbstractFromImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<X>, org.hibernate.query.criteria.internal.PathSource)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getPathIdentifier()"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.metamodel.Attribute<?, ?>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getAttribute()"], ["javax.persistence.criteria.From<?, Z>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getParent()"], ["boolean", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.isCorrelated()"], ["org.hibernate.query.criteria.internal.FromImplementor<Z, X>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getCorrelationParent()"], ["org.hibernate.query.criteria.internal.FromImplementor<Z, X>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.prepareCorrelationDelegate(org.hibernate.query.criteria.internal.FromImplementor<Z, X>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getAlias()"], ["java.util.Set<javax.persistence.criteria.Join<X, ?>>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getJoins()"], ["<Y> javax.persistence.criteria.Join<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.SingularAttribute<? super X, Y>)"], ["<Y> javax.persistence.criteria.Join<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.SingularAttribute<? super X, Y>, javax.persistence.criteria.JoinType)"], ["<Y> javax.persistence.criteria.CollectionJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.CollectionAttribute<? super X, Y>)"], ["<Y> javax.persistence.criteria.CollectionJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.CollectionAttribute<? super X, Y>, javax.persistence.criteria.JoinType)"], ["<Y> javax.persistence.criteria.SetJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.SetAttribute<? super X, Y>)"], ["<Y> javax.persistence.criteria.SetJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.SetAttribute<? super X, Y>, javax.persistence.criteria.JoinType)"], ["<Y> javax.persistence.criteria.ListJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.ListAttribute<? super X, Y>)"], ["<Y> javax.persistence.criteria.ListJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.ListAttribute<? super X, Y>, javax.persistence.criteria.JoinType)"], ["<K, V> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.MapAttribute<? super X, K, V>)"], ["<K, V> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(javax.persistence.metamodel.MapAttribute<? super X, K, V>, javax.persistence.criteria.JoinType)"], ["<X, Y> javax.persistence.criteria.Join<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(java.lang.String)"], ["<X, Y> javax.persistence.criteria.Join<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.join(java.lang.String, javax.persistence.criteria.JoinType)"], ["<X, Y> javax.persistence.criteria.CollectionJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinCollection(java.lang.String)"], ["<X, Y> javax.persistence.criteria.CollectionJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinCollection(java.lang.String, javax.persistence.criteria.JoinType)"], ["<X, Y> javax.persistence.criteria.SetJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinSet(java.lang.String)"], ["<X, Y> javax.persistence.criteria.SetJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinSet(java.lang.String, javax.persistence.criteria.JoinType)"], ["<X, Y> javax.persistence.criteria.ListJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinList(java.lang.String)"], ["<X, Y> javax.persistence.criteria.ListJoin<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinList(java.lang.String, javax.persistence.criteria.JoinType)"], ["<X, K, V> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinMap(java.lang.String)"], ["<X, K, V> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.joinMap(java.lang.String, javax.persistence.criteria.JoinType)"], ["java.util.Set<javax.persistence.criteria.Fetch<X, ?>>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getFetches()"], ["<Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(javax.persistence.metamodel.SingularAttribute<? super X, Y>)"], ["<Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(javax.persistence.metamodel.SingularAttribute<? super X, Y>, javax.persistence.criteria.JoinType)"], ["<Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(javax.persistence.metamodel.PluralAttribute<? super X, ?, Y>)"], ["<Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(javax.persistence.metamodel.PluralAttribute<? super X, ?, Y>, javax.persistence.criteria.JoinType)"], ["<X, Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(java.lang.String)"], ["<X, Y> javax.persistence.criteria.Fetch<X, Y>", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.fetch(java.lang.String, javax.persistence.criteria.JoinType)"], ["javax.persistence.criteria.From", "org.hibernate.query.criteria.internal.path.AbstractFromImpl.getCorrelationParent()"], ["org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource<K, ?>, org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyAttribute<K>)"], ["org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeySource", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.getPathSource()"], ["<T extends K> org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath<T>", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.treatAs(java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.PathSource", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.getPathSource()"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.treatAs(java.lang.Class)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.MapKeyHelpers$MapKeyPath.getAttribute()"], ["org.hibernate.query.criteria.internal.path.MapAttributeJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<V>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.MapAttribute<? super O, K, V>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.MapAttribute<? super O, K, V>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.MapAttribute<? super O, K, V>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.path.MapAttributeJoin<O, K, V>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.Expression<java.util.Map$Entry<K, V>>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.entry()"], ["org.hibernate.query.criteria.internal.MapJoinImplementor<O, K, V>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.MapJoinImplementor<O, K, V>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["<T extends V> org.hibernate.query.criteria.internal.path.MapAttributeJoin<O, K, T>", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getAttribute()"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.MapJoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.MapJoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.criteria.MapJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.MapJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.path.RootImpl", "org.hibernate.query.criteria.internal.path.RootImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.metamodel.EntityType<X>)"], ["org.hibernate.query.criteria.internal.path.RootImpl", "org.hibernate.query.criteria.internal.path.RootImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.metamodel.EntityType<X>, boolean)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl.renderTableExpression(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl.getPathIdentifier()"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.RootImpl.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.util.Set<org.hibernate.query.criteria.internal.path.RootImpl$TreatedRoot<? extends X>>", "org.hibernate.query.criteria.internal.path.RootImpl.getTreats()"], ["<T extends X> org.hibernate.query.criteria.internal.path.RootImpl<T>", "org.hibernate.query.criteria.internal.path.RootImpl.treatAs(java.lang.Class<T>)"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.RootImpl.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.RootImpl.getModel()"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.RootImpl.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin(org.hibernate.query.criteria.internal.path.MapAttributeJoin<O, K, ? super T>, java.lang.Class<T>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getAlias()"], ["void", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.prepareAlias(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getPathIdentifier()"], ["org.hibernate.query.criteria.internal.MapJoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.MapJoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.JoinImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getModel()"], ["org.hibernate.query.criteria.internal.FromImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["org.hibernate.query.criteria.internal.PathImplementor", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.treatAs(java.lang.Class)"], ["javax.persistence.criteria.MapJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.MapJoin", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getModel()"], ["javax.persistence.metamodel.PluralAttribute", "org.hibernate.query.criteria.internal.path.MapAttributeJoin$TreatedMapAttributeJoin.getAttribute()"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl$CorrelationJoinScope.addJoin(javax.persistence.criteria.Join<X, ?>)"], ["void", "org.hibernate.query.criteria.internal.path.AbstractFromImpl$CorrelationJoinScope.addFetch(javax.persistence.criteria.Fetch<X, ?>)"], ["org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<E>, org.hibernate.query.criteria.internal.PathSource<O>, javax.persistence.metamodel.Attribute<? super O, ?>, javax.persistence.criteria.JoinType)"], ["javax.persistence.metamodel.PluralAttribute<? super O, C, E>", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.getAttribute()"], ["javax.persistence.metamodel.PluralAttribute<? super O, C, E>", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.getModel()"], ["boolean", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.isBasicCollection()"], ["org.hibernate.query.criteria.internal.JoinImplementor<O, E>", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.on(javax.persistence.criteria.Predicate...)"], ["org.hibernate.query.criteria.internal.JoinImplementor<O, E>", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.on(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.metamodel.Attribute", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.getAttribute()"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.on(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.Join", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.on(javax.persistence.criteria.Expression)"], ["javax.persistence.metamodel.Bindable", "org.hibernate.query.criteria.internal.path.PluralAttributeJoinSupport.getModel()"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$StringValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$StringValueHandler()"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$StringValueHandler.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$StringValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.internal.CriteriaQueryImpl", "org.hibernate.query.criteria.internal.CriteriaQueryImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Class<T>)"], ["boolean", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.isDistinct()"], ["void", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.applySelection(javax.persistence.criteria.Selection<? extends T>)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.from(javax.persistence.metamodel.EntityType<X>)"], ["<X> javax.persistence.criteria.Root<X>", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.from(java.lang.Class<X>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.getRestriction()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.getGroupRestriction()"], ["<U> javax.persistence.criteria.Subquery<U>", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.subquery(java.lang.Class<U>)"], ["void", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.validate()"], ["org.hibernate.query.criteria.internal.compile.CriteriaInterpretation", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.interpret(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.distinct(boolean)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.having(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.having(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.groupBy(java.util.List)"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.groupBy(javax.persistence.criteria.Expression[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.where(javax.persistence.criteria.Predicate[])"], ["javax.persistence.criteria.AbstractQuery", "org.hibernate.query.criteria.internal.CriteriaQueryImpl.where(javax.persistence.criteria.Expression)"], ["java.util.Map<javax.persistence.criteria.ParameterExpression<?>, org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo<?>>", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$2.explicitParameterInfoMap()"], ["org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo(java.lang.String, java.lang.Integer, java.lang.Class<T>)"], ["boolean", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.isNamed()"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.getName()"], ["java.lang.Integer", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.getPosition()"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.render()"], ["void", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.validateBindValue(java.lang.Object)"], ["void", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.validateCalendarBind()"], ["void", "org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo.validateDateBind()"], ["default", "org.hibernate.query.criteria.internal.compile.RenderingContext.org.hibernate.query.criteria.LiteralHandlingMode getCriteriaLiteralHandlingMode()"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1$1.getParameterName()"], ["java.lang.Class", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1$1.getJavaType()"], ["void", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1$1.bind(javax.persistence.TypedQuery)"], ["org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.spi.QueryImplementor<X>, java.util.Map<javax.persistence.criteria.ParameterExpression<?>, org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo<?>>)"], ["X", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.uniqueResult()"], ["boolean", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.isCacheable()"], ["X", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult()"], ["org.hibernate.query.ParameterMetadata", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameterMetadata()"], ["java.lang.String[]", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getNamedParameters()"], ["int", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getMaxResults()"], ["int", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getFirstResult()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getHints()"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getQueryString()"], ["org.hibernate.FlushMode", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getHibernateFlushMode()"], ["javax.persistence.FlushModeType", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getFlushMode()"], ["org.hibernate.CacheMode", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getCacheMode()"], ["org.hibernate.type.Type[]", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getReturnTypes()"], ["org.hibernate.LockOptions", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getLockOptions()"], ["org.hibernate.engine.spi.RowSelection", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getQueryOptions()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheable(boolean)"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getCacheRegion()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheRegion(java.lang.String)"], ["java.lang.Integer", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getTimeout()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setTimeout(int)"], ["java.lang.Integer", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getFetchSize()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getComment()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setComment(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.addQueryHint(java.lang.String)"], ["org.hibernate.ScrollableResults", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.scroll()"], ["org.hibernate.ScrollableResults", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.scroll(org.hibernate.ScrollMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFetchSize(int)"], ["boolean", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.isReadOnly()"], ["javax.persistence.LockModeType", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getLockMode()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setReadOnly(boolean)"], ["org.hibernate.type.Type", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.determineProperBooleanType(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.determineProperBooleanType(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["java.lang.String[]", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getReturnAliases()"], ["boolean", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.isBound(javax.persistence.Parameter<?>)"], ["<T> T", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameterValue(javax.persistence.Parameter<T>)"], ["<T> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter<T>, T)"], ["<T> T", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.unwrap(java.lang.Class<T>)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameterValue(java.lang.String)"], ["<T> javax.persistence.Parameter<T>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameter(java.lang.String, java.lang.Class<T>)"], ["<T> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter<T>, T)"], ["<P> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter<P>, P, javax.persistence.TemporalType)"], ["<P> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, P, javax.persistence.TemporalType)"], ["<P> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(org.hibernate.query.QueryParameter<P>, java.util.Collection<P>)"], ["<P> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter<P>, P, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setProperties(java.util.Map)"], ["org.hibernate.query.spi.QueryProducerImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getProducer()"], ["void", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setOptionalId(java.io.Serializable)"], ["void", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setOptionalEntityName(java.lang.String)"], ["void", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setOptionalObject(java.lang.Object)"], ["<P> org.hibernate.query.spi.QueryImplementor<X>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, P, javax.persistence.TemporalType)"], ["int", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.executeUpdate()"], ["java.lang.Object", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameterValue(int)"], ["<T> javax.persistence.Parameter<T>", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getParameter(int, java.lang.Class<T>)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setEntity(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setProperties(java.util.Map)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setProperties(java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.addQueryHint(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setComment(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFetchSize(int)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setTimeout(int)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheRegion(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheable(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setReadOnly(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFirstResult(int)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setMaxResults(int)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.applyGraph(org.hibernate.graph.RootGraph, org.hibernate.graph.GraphSemantic)"], ["org.hibernate.query.QueryProducer", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getProducer()"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFirstResult(int)"], ["javax.persistence.TypedQuery", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setMaxResults(int)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFirstResult(int)"], ["javax.persistence.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setEntity(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFirstResult(int)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setProperties(java.util.Map)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setProperties(java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.addQueryHint(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setComment(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setReadOnly(boolean)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFetchSize(int)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setTimeout(int)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheRegion(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheable(boolean)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.Query", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setReadOnly(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFetchSize(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setTimeout(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheRegion(java.lang.String)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheable(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.setFlushMode(org.hibernate.FlushMode)"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.generateAlias()"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.generateParameterName()"], ["org.hibernate.query.criteria.internal.compile.ExplicitParameterInfo", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.registerExplicitParameter(javax.persistence.criteria.ParameterExpression<?>)"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.registerLiteralParameterBinding(java.lang.Object, java.lang.Class)"], ["java.lang.String", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.getCastType(java.lang.Class)"], ["org.hibernate.dialect.Dialect", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.getDialect()"], ["org.hibernate.query.criteria.LiteralHandlingMode", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler$1.getCriteriaLiteralHandlingMode()"], ["org.hibernate.query.criteria.internal.compile.CriteriaCompiler", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.compile.CriteriaCompiler.compile(org.hibernate.query.criteria.internal.compile.CompilableCriteria)"], ["org.hibernate.query.criteria.internal.ParameterContainer$Helper", "org.hibernate.query.criteria.internal.ParameterContainer$Helper()"], ["void", "org.hibernate.query.criteria.internal.ParameterContainer$Helper.possibleParameter(javax.persistence.criteria.Selection, org.hibernate.query.criteria.internal.ParameterRegistry)"], ["org.hibernate.query.criteria.internal.BasicPathUsageException", "org.hibernate.query.criteria.internal.BasicPathUsageException(java.lang.String, javax.persistence.metamodel.Attribute<?, ?>)"], ["org.hibernate.query.criteria.internal.BasicPathUsageException", "org.hibernate.query.criteria.internal.BasicPathUsageException(java.lang.String, java.lang.Throwable, javax.persistence.metamodel.Attribute<?, ?>)"], ["javax.persistence.metamodel.Attribute<?, ?>", "org.hibernate.query.criteria.internal.BasicPathUsageException.getAttribute()"], ["default", "org.hibernate.query.criteria.internal.JoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.JoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.JoinImplementor.org.hibernate.query.criteria.internal.FromImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.JoinImplementor.org.hibernate.query.criteria.internal.PathImplementor treatAs(java.lang.Class)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$NoOpValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$NoOpValueHandler()"], ["T", "org.hibernate.query.criteria.internal.ValueHandlerFactory$NoOpValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.internal.CriteriaBuilderImpl", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl(org.hibernate.internal.SessionFactoryImpl)"], ["org.hibernate.internal.SessionFactoryImpl", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.getEntityManagerFactory()"], ["<T> javax.persistence.criteria.CriteriaQuery<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.createQuery(java.lang.Class<T>)"], ["<T> javax.persistence.criteria.CriteriaUpdate<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.createCriteriaUpdate(java.lang.Class<T>)"], ["<T> javax.persistence.criteria.CriteriaDelete<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.createCriteriaDelete(java.lang.Class<T>)"], ["<Y> javax.persistence.criteria.CompoundSelection<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.array(java.lang.Class<Y>, java.util.List<javax.persistence.criteria.Selection<?>>)"], ["<Y> javax.persistence.criteria.CompoundSelection<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.construct(java.lang.Class<Y>, javax.persistence.criteria.Selection<?>...)"], ["<Y> javax.persistence.criteria.CompoundSelection<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.construct(java.lang.Class<Y>, java.util.List<javax.persistence.criteria.Selection<?>>)"], ["javax.persistence.criteria.Order", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.asc(javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Order", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.desc(javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.wrap(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.not(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.and(javax.persistence.criteria.Expression<java.lang.Boolean>, javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.or(javax.persistence.criteria.Expression<java.lang.Boolean>, javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.and(javax.persistence.criteria.Predicate...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.or(javax.persistence.criteria.Predicate...)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.conjunction()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.disjunction()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isTrue(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isFalse(javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isNull(javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isNotNull(javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.equal(javax.persistence.criteria.Expression<?>, javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notEqual(javax.persistence.criteria.Expression<?>, javax.persistence.criteria.Expression<?>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.equal(javax.persistence.criteria.Expression<?>, java.lang.Object)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notEqual(javax.persistence.criteria.Expression<?>, java.lang.Object)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.greaterThan(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lessThan(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.greaterThanOrEqualTo(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lessThanOrEqualTo(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.greaterThan(javax.persistence.criteria.Expression<? extends Y>, Y)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lessThan(javax.persistence.criteria.Expression<? extends Y>, Y)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.greaterThanOrEqualTo(javax.persistence.criteria.Expression<? extends Y>, Y)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lessThanOrEqualTo(javax.persistence.criteria.Expression<? extends Y>, Y)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.gt(javax.persistence.criteria.Expression<? extends java.lang.Number>, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lt(javax.persistence.criteria.Expression<? extends java.lang.Number>, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.ge(javax.persistence.criteria.Expression<? extends java.lang.Number>, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.le(javax.persistence.criteria.Expression<? extends java.lang.Number>, javax.persistence.criteria.Expression<? extends java.lang.Number>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.gt(javax.persistence.criteria.Expression<? extends java.lang.Number>, java.lang.Number)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.lt(javax.persistence.criteria.Expression<? extends java.lang.Number>, java.lang.Number)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.ge(javax.persistence.criteria.Expression<? extends java.lang.Number>, java.lang.Number)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.le(javax.persistence.criteria.Expression<? extends java.lang.Number>, java.lang.Number)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.between(javax.persistence.criteria.Expression<? extends Y>, Y, Y)"], ["<Y extends java.lang.Comparable<? super Y>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.between(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<T> javax.persistence.criteria.CriteriaBuilder$In<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.in(javax.persistence.criteria.Expression<? extends T>)"], ["<T> javax.persistence.criteria.CriteriaBuilder$In<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.in(javax.persistence.criteria.Expression<? extends T>, javax.persistence.criteria.Expression<? extends T>...)"], ["<T> javax.persistence.criteria.CriteriaBuilder$In<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.in(javax.persistence.criteria.Expression<? extends T>, T...)"], ["<T> javax.persistence.criteria.CriteriaBuilder$In<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.in(javax.persistence.criteria.Expression<? extends T>, java.util.Collection<T>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Character>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, char)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, javax.persistence.criteria.Expression<java.lang.Character>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.like(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, char)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Character>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, char)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, javax.persistence.criteria.Expression<java.lang.Character>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.notLike(javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, char)"], ["<T> javax.persistence.criteria.ParameterExpression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.parameter(java.lang.Class<T>)"], ["<T> javax.persistence.criteria.ParameterExpression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.parameter(java.lang.Class<T>, java.lang.String)"], ["<T> javax.persistence.criteria.Expression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.literal(T)"], ["<T> javax.persistence.criteria.Expression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.nullLiteral(java.lang.Class<T>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<java.lang.Double>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.avg(javax.persistence.criteria.Expression<N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.sum(javax.persistence.criteria.Expression<N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.max(javax.persistence.criteria.Expression<N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.min(javax.persistence.criteria.Expression<N>)"], ["<X extends java.lang.Comparable<? super X>> javax.persistence.criteria.Expression<X>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.greatest(javax.persistence.criteria.Expression<X>)"], ["<X extends java.lang.Comparable<? super X>> javax.persistence.criteria.Expression<X>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.least(javax.persistence.criteria.Expression<X>)"], ["<T> javax.persistence.criteria.Expression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.function(java.lang.String, java.lang.Class<T>, javax.persistence.criteria.Expression<?>...)"], ["<T> javax.persistence.criteria.Expression<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.function(java.lang.String, java.lang.Class<T>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.abs(javax.persistence.criteria.Expression<N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.neg(javax.persistence.criteria.Expression<N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.sum(javax.persistence.criteria.Expression<? extends N>, javax.persistence.criteria.Expression<? extends N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.prod(javax.persistence.criteria.Expression<? extends N>, javax.persistence.criteria.Expression<? extends N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.diff(javax.persistence.criteria.Expression<? extends N>, javax.persistence.criteria.Expression<? extends N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.sum(javax.persistence.criteria.Expression<? extends N>, N)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.prod(javax.persistence.criteria.Expression<? extends N>, N)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.diff(javax.persistence.criteria.Expression<? extends N>, N)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.sum(N, javax.persistence.criteria.Expression<? extends N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.prod(N, javax.persistence.criteria.Expression<? extends N>)"], ["<N extends java.lang.Number> javax.persistence.criteria.Expression<N>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.diff(N, javax.persistence.criteria.Expression<? extends N>)"], ["<X, T, V extends T> javax.persistence.criteria.Join<X, V>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.Join<X, T>, java.lang.Class<V>)"], ["<X, T, E extends T> javax.persistence.criteria.CollectionJoin<X, E>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.CollectionJoin<X, T>, java.lang.Class<E>)"], ["<X, T, E extends T> javax.persistence.criteria.SetJoin<X, E>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.SetJoin<X, T>, java.lang.Class<E>)"], ["<X, T, E extends T> javax.persistence.criteria.ListJoin<X, E>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.ListJoin<X, T>, java.lang.Class<E>)"], ["<X, K, T, V extends T> javax.persistence.criteria.MapJoin<X, K, V>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.MapJoin<X, K, T>, java.lang.Class<V>)"], ["<X, T extends X> javax.persistence.criteria.Path<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.Path<X>, java.lang.Class<T>)"], ["<X, T extends X> javax.persistence.criteria.Root<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.treat(javax.persistence.criteria.Root<X>, java.lang.Class<T>)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.exists(javax.persistence.criteria.Subquery<?>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.all(javax.persistence.criteria.Subquery<Y>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.some(javax.persistence.criteria.Subquery<Y>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.any(javax.persistence.criteria.Subquery<Y>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce(javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce(java.lang.Class<Y>, javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce(javax.persistence.criteria.Expression<? extends Y>, Y)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce(java.lang.Class<Y>, javax.persistence.criteria.Expression<? extends Y>, Y)"], ["<T> javax.persistence.criteria.CriteriaBuilder$Coalesce<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce()"], ["<T> javax.persistence.criteria.CriteriaBuilder$Coalesce<T>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.coalesce(java.lang.Class<T>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.nullif(javax.persistence.criteria.Expression<Y>, javax.persistence.criteria.Expression<?>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.nullif(java.lang.Class<Y>, javax.persistence.criteria.Expression<Y>, javax.persistence.criteria.Expression<?>)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.nullif(javax.persistence.criteria.Expression<Y>, Y)"], ["<Y> javax.persistence.criteria.Expression<Y>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.nullif(java.lang.Class<Y>, javax.persistence.criteria.Expression<Y>, Y)"], ["<C, R> javax.persistence.criteria.CriteriaBuilder$SimpleCase<C, R>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.selectCase(javax.persistence.criteria.Expression<? extends C>)"], ["<C, R> javax.persistence.criteria.CriteriaBuilder$SimpleCase<C, R>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.selectCase(java.lang.Class<R>, javax.persistence.criteria.Expression<? extends C>)"], ["<R> javax.persistence.criteria.CriteriaBuilder$Case<R>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.selectCase()"], ["<R> javax.persistence.criteria.CriteriaBuilder$Case<R>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.selectCase(java.lang.Class<R>)"], ["<C extends java.util.Collection<?>> javax.persistence.criteria.Expression<java.lang.Integer>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.size(C)"], ["<C extends java.util.Collection<?>> javax.persistence.criteria.Expression<java.lang.Integer>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.size(javax.persistence.criteria.Expression<C>)"], ["<V, M extends java.util.Map<?, V>> javax.persistence.criteria.Expression<java.util.Collection<V>>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.values(M)"], ["<K, M extends java.util.Map<K, ?>> javax.persistence.criteria.Expression<java.util.Set<K>>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.keys(M)"], ["<C extends java.util.Collection<?>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isEmpty(javax.persistence.criteria.Expression<C>)"], ["<C extends java.util.Collection<?>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isNotEmpty(javax.persistence.criteria.Expression<C>)"], ["<E, C extends java.util.Collection<E>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isMember(E, javax.persistence.criteria.Expression<C>)"], ["<E, C extends java.util.Collection<E>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isNotMember(E, javax.persistence.criteria.Expression<C>)"], ["<E, C extends java.util.Collection<E>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isMember(javax.persistence.criteria.Expression<E>, javax.persistence.criteria.Expression<C>)"], ["<E, C extends java.util.Collection<E>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isNotMember(javax.persistence.criteria.Expression<E>, javax.persistence.criteria.Expression<C>)"], ["<M extends java.util.Map<?, ?>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isMapEmpty(javax.persistence.criteria.Expression<M>)"], ["<M extends java.util.Map<?, ?>> javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.isMapNotEmpty(javax.persistence.criteria.Expression<M>)"], ["<M extends java.util.Map<?, ?>> javax.persistence.criteria.Expression<java.lang.Integer>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.mapSize(javax.persistence.criteria.Expression<M>)"], ["<M extends java.util.Map<?, ?>> javax.persistence.criteria.Expression<java.lang.Integer>", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.mapSize(M)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toString(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toBigInteger(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toBigDecimal(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toDouble(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toFloat(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toInteger(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.CriteriaBuilderImpl.toLong(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler()"], ["java.lang.Double", "org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler.render(java.lang.Double)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler.render(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$DoubleValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.CriteriaQueryImpl$1.buildCompiledQuery(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.criteria.internal.compile.InterpretedParameterMetadata)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$ShortValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ShortValueHandler()"], ["java.lang.Short", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ShortValueHandler.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$ShortValueHandler.convert(java.lang.Object)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.FromImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.org.hibernate.query.criteria.internal.PathImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.javax.persistence.criteria.CollectionJoin on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.CollectionJoinImplementor.javax.persistence.criteria.CollectionJoin on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler()"], ["java.math.BigDecimal", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler.render(java.math.BigDecimal)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler.render(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BigDecimalValueHandler.convert(java.lang.Object)"], ["boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory.isCharacter(java.lang.Class)"], ["boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory.isCharacter(java.lang.Object)"], ["boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory.isNumeric(java.lang.Class)"], ["boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory.isNumeric(java.lang.Object)"], ["boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory.isBoolean(java.lang.Object)"], ["<T> T", "org.hibernate.query.criteria.internal.ValueHandlerFactory.convert(java.lang.Object, java.lang.Class<T>)"], ["<T> org.hibernate.query.criteria.internal.ValueHandlerFactory$ValueHandler<T>", "org.hibernate.query.criteria.internal.ValueHandlerFactory.determineAppropriateHandler(java.lang.Class<T>)"], ["void", "org.hibernate.query.criteria.internal.CriteriaQueryImpl$1$1$1.validate(org.hibernate.type.Type[])"], ["org.hibernate.query.criteria.internal.AbstractNode", "org.hibernate.query.criteria.internal.AbstractNode(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["org.hibernate.query.criteria.internal.CriteriaBuilderImpl", "org.hibernate.query.criteria.internal.AbstractNode.criteriaBuilder()"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>)"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, java.lang.String)"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.Character>)"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, javax.persistence.criteria.Expression<java.lang.String>, char)"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, char)"], ["org.hibernate.query.criteria.internal.predicate.LikePredicate", "org.hibernate.query.criteria.internal.predicate.LikePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.String>, java.lang.String, javax.persistence.criteria.Expression<java.lang.Character>)"], ["void", "org.hibernate.query.criteria.internal.predicate.LikePredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.LikePredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.NullnessPredicate", "org.hibernate.query.criteria.internal.predicate.NullnessPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<?>)"], ["void", "org.hibernate.query.criteria.internal.predicate.NullnessPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.NullnessPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.BetweenPredicate", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends Y>, Y, Y)"], ["org.hibernate.query.criteria.internal.predicate.BetweenPredicate", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["javax.persistence.criteria.Expression<? extends Y>", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate.getExpression()"], ["javax.persistence.criteria.Expression<? extends Y>", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate.getLowerBound()"], ["javax.persistence.criteria.Expression<? extends Y>", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate.getUpperBound()"], ["void", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.BetweenPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$5.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$5.rendered()"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator[]", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator.values()"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.internal.predicate.AbstractSimplePredicate", "org.hibernate.query.criteria.internal.predicate.AbstractSimplePredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["boolean", "org.hibernate.query.criteria.internal.predicate.AbstractSimplePredicate.isJunction()"], ["javax.persistence.criteria.Predicate$BooleanOperator", "org.hibernate.query.criteria.internal.predicate.AbstractSimplePredicate.getOperator()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.AbstractSimplePredicate.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$1.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$1.rendered()"], ["org.hibernate.query.criteria.internal.predicate.ExistsPredicate", "org.hibernate.query.criteria.internal.predicate.ExistsPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Subquery<?>)"], ["void", "org.hibernate.query.criteria.internal.predicate.ExistsPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ExistsPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper(org.hibernate.query.criteria.internal.predicate.PredicateImplementor)"], ["javax.persistence.criteria.Predicate$BooleanOperator", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.getOperator()"], ["boolean", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.isJunction()"], ["boolean", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.isNegated()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.not()"], ["void", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.NegatedPredicateWrapper.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.BooleanExpressionPredicate", "org.hibernate.query.criteria.internal.predicate.BooleanExpressionPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.Boolean>)"], ["void", "org.hibernate.query.criteria.internal.predicate.BooleanExpressionPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.BooleanExpressionPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator, javax.persistence.criteria.Expression<?>, javax.persistence.criteria.Expression<?>)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator, javax.persistence.criteria.Expression<?>, java.lang.Object)"], ["<N extends java.lang.Number>", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.org.hibernate.query.criteria.internal.predicate.ComparisonPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator, javax.persistence.criteria.Expression<N>, java.lang.Number)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.getComparisonOperator()"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.getComparisonOperator(boolean)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.getLeftHandOperand()"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.getRightHandOperand()"], ["void", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.TruthValue[]", "org.hibernate.query.criteria.internal.predicate.TruthValue.values()"], ["org.hibernate.query.criteria.internal.predicate.TruthValue", "org.hibernate.query.criteria.internal.predicate.TruthValue.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.internal.predicate.CompoundPredicate", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Predicate$BooleanOperator)"], ["org.hibernate.query.criteria.internal.predicate.CompoundPredicate", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Predicate$BooleanOperator, javax.persistence.criteria.Expression<java.lang.Boolean>...)"], ["org.hibernate.query.criteria.internal.predicate.CompoundPredicate", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Predicate$BooleanOperator, java.util.List<javax.persistence.criteria.Expression<java.lang.Boolean>>)"], ["javax.persistence.criteria.Predicate$BooleanOperator", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.getOperator()"], ["void", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.render(org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["boolean", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.isJunction()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.not()"], ["javax.persistence.criteria.Predicate$BooleanOperator", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.reverseOperator(javax.persistence.criteria.Predicate$BooleanOperator)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.CompoundPredicate.render(org.hibernate.query.criteria.internal.predicate.PredicateImplementor, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.IsEmptyPredicate", "org.hibernate.query.criteria.internal.predicate.IsEmptyPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, org.hibernate.query.criteria.internal.path.PluralAttributePath<C>)"], ["void", "org.hibernate.query.criteria.internal.predicate.IsEmptyPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.IsEmptyPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.Expression", "org.hibernate.query.criteria.internal.predicate.IsEmptyPredicate.getOperand()"], ["org.hibernate.query.criteria.internal.predicate.BooleanAssertionPredicate", "org.hibernate.query.criteria.internal.predicate.BooleanAssertionPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.Boolean>, java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.query.criteria.internal.predicate.BooleanAssertionPredicate.getAssertedValue()"], ["void", "org.hibernate.query.criteria.internal.predicate.BooleanAssertionPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.BooleanAssertionPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["java.lang.Class<? extends java.lang.Number>", "org.hibernate.query.criteria.internal.predicate.ImplicitNumericExpressionTypeDeterminer.determineResultType(java.lang.Class<? extends java.lang.Number>...)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$3.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$3.rendered()"], ["boolean", "org.hibernate.query.criteria.internal.predicate.AbstractPredicateImpl.isNegated()"], ["javax.persistence.criteria.Predicate", "org.hibernate.query.criteria.internal.predicate.AbstractPredicateImpl.not()"], ["boolean", "org.hibernate.query.criteria.internal.predicate.AbstractPredicateImpl.isCompoundSelection()"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$2.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$2.rendered()"], ["org.hibernate.query.criteria.internal.predicate.InPredicate", "org.hibernate.query.criteria.internal.predicate.InPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends T>)"], ["org.hibernate.query.criteria.internal.predicate.InPredicate", "org.hibernate.query.criteria.internal.predicate.InPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends T>, javax.persistence.criteria.Expression<? extends T>...)"], ["org.hibernate.query.criteria.internal.predicate.InPredicate", "org.hibernate.query.criteria.internal.predicate.InPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends T>, java.util.List<javax.persistence.criteria.Expression<? extends T>>)"], ["org.hibernate.query.criteria.internal.predicate.InPredicate", "org.hibernate.query.criteria.internal.predicate.InPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends T>, T...)"], ["org.hibernate.query.criteria.internal.predicate.InPredicate", "org.hibernate.query.criteria.internal.predicate.InPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<? extends T>, java.util.Collection<T>)"], ["javax.persistence.criteria.Expression<? extends T>", "org.hibernate.query.criteria.internal.predicate.InPredicate.getExpressionInternal()"], ["java.util.List<javax.persistence.criteria.Expression<? extends T>>", "org.hibernate.query.criteria.internal.predicate.InPredicate.getValues()"], ["void", "org.hibernate.query.criteria.internal.predicate.InPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.InPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["javax.persistence.criteria.CriteriaBuilder$In", "org.hibernate.query.criteria.internal.predicate.InPredicate.value(javax.persistence.criteria.Expression)"], ["javax.persistence.criteria.CriteriaBuilder$In", "org.hibernate.query.criteria.internal.predicate.InPredicate.value(java.lang.Object)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$6.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$6.rendered()"], ["org.hibernate.query.criteria.internal.predicate.ExplicitTruthValueCheck", "org.hibernate.query.criteria.internal.predicate.ExplicitTruthValueCheck(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<java.lang.Boolean>, org.hibernate.query.criteria.internal.predicate.TruthValue)"], ["org.hibernate.query.criteria.internal.predicate.TruthValue", "org.hibernate.query.criteria.internal.predicate.ExplicitTruthValueCheck.getTruthValue()"], ["void", "org.hibernate.query.criteria.internal.predicate.ExplicitTruthValueCheck.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ExplicitTruthValueCheck.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$4.negated()"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.ComparisonPredicate$ComparisonOperator$4.rendered()"], ["org.hibernate.query.criteria.internal.predicate.MemberOfPredicate", "org.hibernate.query.criteria.internal.predicate.MemberOfPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, javax.persistence.criteria.Expression<E>, org.hibernate.query.criteria.internal.path.PluralAttributePath<C>)"], ["org.hibernate.query.criteria.internal.predicate.MemberOfPredicate", "org.hibernate.query.criteria.internal.predicate.MemberOfPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, E, org.hibernate.query.criteria.internal.path.PluralAttributePath<C>)"], ["void", "org.hibernate.query.criteria.internal.predicate.MemberOfPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.MemberOfPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.predicate.BooleanStaticAssertionPredicate", "org.hibernate.query.criteria.internal.predicate.BooleanStaticAssertionPredicate(org.hibernate.query.criteria.internal.CriteriaBuilderImpl, java.lang.Boolean)"], ["java.lang.Boolean", "org.hibernate.query.criteria.internal.predicate.BooleanStaticAssertionPredicate.getAssertedValue()"], ["void", "org.hibernate.query.criteria.internal.predicate.BooleanStaticAssertionPredicate.registerParameters(org.hibernate.query.criteria.internal.ParameterRegistry)"], ["java.lang.String", "org.hibernate.query.criteria.internal.predicate.BooleanStaticAssertionPredicate.render(boolean, org.hibernate.query.criteria.internal.compile.RenderingContext)"], ["org.hibernate.query.criteria.internal.OrderImpl", "org.hibernate.query.criteria.internal.OrderImpl(javax.persistence.criteria.Expression<?>)"], ["org.hibernate.query.criteria.internal.OrderImpl", "org.hibernate.query.criteria.internal.OrderImpl(javax.persistence.criteria.Expression<?>, boolean)"], ["javax.persistence.criteria.Order", "org.hibernate.query.criteria.internal.OrderImpl.reverse()"], ["boolean", "org.hibernate.query.criteria.internal.OrderImpl.isAscending()"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$BooleanValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BooleanValueHandler()"], ["java.lang.Boolean", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BooleanValueHandler.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BooleanValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.internal.IllegalDereferenceException", "org.hibernate.query.criteria.internal.IllegalDereferenceException(org.hibernate.query.criteria.internal.PathSource)"], ["org.hibernate.query.criteria.internal.PathSource", "org.hibernate.query.criteria.internal.IllegalDereferenceException.getPathSource()"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.JoinImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.javax.persistence.criteria.Join on(javax.persistence.criteria.Expression)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.FromImplementor correlateTo(org.hibernate.query.criteria.internal.CriteriaSubqueryImpl)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.org.hibernate.query.criteria.internal.PathImplementor treatAs(java.lang.Class)"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.javax.persistence.criteria.SetJoin on(javax.persistence.criteria.Predicate[])"], ["default", "org.hibernate.query.criteria.internal.SetJoinImplementor.javax.persistence.criteria.SetJoin on(javax.persistence.criteria.Expression)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$BaseValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BaseValueHandler()"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$BaseValueHandler.render(T)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.criteria.internal.AbstractManipulationCriteriaQuery$1.buildCompiledQuery(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.criteria.internal.compile.InterpretedParameterMetadata)"], ["org.hibernate.query.criteria.internal.CriteriaUpdateImpl", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl(org.hibernate.query.criteria.internal.CriteriaBuilderImpl)"], ["<Y, X extends Y> javax.persistence.criteria.CriteriaUpdate<T>", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl.set(javax.persistence.metamodel.SingularAttribute<? super T, Y>, X)"], ["<Y> javax.persistence.criteria.CriteriaUpdate<T>", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl.set(javax.persistence.metamodel.SingularAttribute<? super T, Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["<Y, X extends Y> javax.persistence.criteria.CriteriaUpdate<T>", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl.set(javax.persistence.criteria.Path<Y>, X)"], ["<Y> javax.persistence.criteria.CriteriaUpdate<T>", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl.set(javax.persistence.criteria.Path<Y>, javax.persistence.criteria.Expression<? extends Y>)"], ["void", "org.hibernate.query.criteria.internal.CriteriaUpdateImpl.validate()"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$IntegerValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$IntegerValueHandler()"], ["java.lang.Integer", "org.hibernate.query.criteria.internal.ValueHandlerFactory$IntegerValueHandler.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$IntegerValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler", "org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler()"], ["java.lang.Long", "org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler.render(java.lang.Long)"], ["java.lang.String", "org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler.render(java.lang.Object)"], ["java.lang.Object", "org.hibernate.query.criteria.internal.ValueHandlerFactory$LongValueHandler.convert(java.lang.Object)"], ["org.hibernate.query.criteria.LiteralHandlingMode[]", "org.hibernate.query.criteria.LiteralHandlingMode.values()"], ["org.hibernate.query.criteria.LiteralHandlingMode", "org.hibernate.query.criteria.LiteralHandlingMode.valueOf(java.lang.String)"], ["org.hibernate.query.criteria.LiteralHandlingMode", "org.hibernate.query.criteria.LiteralHandlingMode.interpret(java.lang.Object)"], ["org.hibernate.query.procedure.internal.ProcedureParameterImpl", "org.hibernate.query.procedure.internal.ProcedureParameterImpl(org.hibernate.procedure.internal.ProcedureCallImpl, java.lang.String, javax.persistence.ParameterMode, java.lang.Class<T>, org.hibernate.type.Type, boolean)"], ["org.hibernate.query.procedure.internal.ProcedureParameterImpl", "org.hibernate.query.procedure.internal.ProcedureParameterImpl(org.hibernate.procedure.internal.ProcedureCallImpl, java.lang.Integer, javax.persistence.ParameterMode, java.lang.Class<T>, org.hibernate.type.Type, boolean)"], ["javax.persistence.ParameterMode", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.getMode()"], ["boolean", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.isPassNullsEnabled()"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.enablePassingNulls(boolean)"], ["int[]", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.getSourceLocations()"], ["java.lang.String", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.getName()"], ["java.lang.Integer", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.getPosition()"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.setHibernateType(org.hibernate.type.Type)"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.bindValue(java.lang.Object)"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.bindValue(java.lang.Object, javax.persistence.TemporalType)"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.prepare(java.sql.CallableStatement, int)"], ["int[]", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.getSqlTypes()"], ["T", "org.hibernate.query.procedure.internal.ProcedureParameterImpl.extract(java.sql.CallableStatement)"], ["org.hibernate.query.procedure.internal.ProcedureParamBindings", "org.hibernate.query.procedure.internal.ProcedureParamBindings(org.hibernate.query.procedure.internal.ProcedureParameterMetadata, org.hibernate.procedure.internal.ProcedureCallImpl)"], ["org.hibernate.query.procedure.internal.ProcedureParameterMetadata", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getParameterMetadata()"], ["org.hibernate.procedure.internal.ProcedureCallImpl", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getProcedureCall()"], ["boolean", "org.hibernate.query.procedure.internal.ProcedureParamBindings.isBound(org.hibernate.query.QueryParameter)"], ["<T> org.hibernate.query.spi.QueryParameterBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getBinding(org.hibernate.query.QueryParameter<T>)"], ["<T> org.hibernate.query.spi.QueryParameterBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getBinding(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryParameterBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getBinding(int)"], ["void", "org.hibernate.query.procedure.internal.ProcedureParamBindings.verifyParametersBound(boolean)"], ["java.lang.String", "org.hibernate.query.procedure.internal.ProcedureParamBindings.expandListValuedParameters(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getQueryParameterListBinding(org.hibernate.query.QueryParameter<T>)"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getQueryParameterListBinding(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.getQueryParameterListBinding(int)"], ["org.hibernate.type.Type[]", "org.hibernate.query.procedure.internal.ProcedureParamBindings.collectPositionalBindTypes()"], ["java.lang.Object[]", "org.hibernate.query.procedure.internal.ProcedureParamBindings.collectPositionalBindValues()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>", "org.hibernate.query.procedure.internal.ProcedureParamBindings.collectNamedParameterBindings()"], ["org.hibernate.query.procedure.internal.ProcedureParameterMetadata", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata(org.hibernate.procedure.internal.ProcedureCallImpl)"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.registerParameter(org.hibernate.query.procedure.spi.ProcedureParameterImplementor)"], ["boolean", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.hasNamedParameters()"], ["boolean", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.hasPositionalParameters()"], ["int", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getPositionalParameterCount()"], ["<T> org.hibernate.procedure.spi.ParameterRegistrationImplementor<T>", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getQueryParameter(java.lang.String)"], ["<T> org.hibernate.procedure.spi.ParameterRegistrationImplementor<T>", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getQueryParameter(java.lang.Integer)"], ["<T> org.hibernate.query.procedure.spi.ProcedureParameterImplementor<T>", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.resolve(javax.persistence.Parameter<T>)"], ["int", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getParameterCount()"], ["boolean", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.containsReference(org.hibernate.query.QueryParameter)"], ["org.hibernate.procedure.spi.ParameterStrategy", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getParameterStrategy()"], ["void", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.visitRegistrations(java.util.function.Consumer<org.hibernate.query.QueryParameter>)"], ["org.hibernate.query.QueryParameter", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.resolve(javax.persistence.Parameter)"], ["org.hibernate.query.QueryParameter", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getQueryParameter(java.lang.Integer)"], ["org.hibernate.query.QueryParameter", "org.hibernate.query.procedure.internal.ProcedureParameterMetadata.getQueryParameter(java.lang.String)"], ["default", "org.hibernate.query.QueryProducer.org.hibernate.SQLQuery createSQLQuery(java.lang.String)"], ["default", "org.hibernate.query.QueryProducer.org.hibernate.Query getNamedSQLQuery(java.lang.String)"], ["void", "org.hibernate.query.internal.ScrollableResultsIterator.close()"], ["boolean", "org.hibernate.query.internal.ScrollableResultsIterator.hasNext()"], ["T", "org.hibernate.query.internal.ScrollableResultsIterator.next()"], ["org.hibernate.query.internal.NativeQueryImpl", "org.hibernate.query.internal.NativeQueryImpl(org.hibernate.engine.spi.NamedSQLQueryDefinition, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.ParameterMetadata)"], ["org.hibernate.query.internal.NativeQueryImpl", "org.hibernate.query.internal.NativeQueryImpl(java.lang.String, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.ParameterMetadata)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setResultSetMapping(java.lang.String)"], ["java.lang.String", "org.hibernate.query.internal.NativeQueryImpl.getQueryString()"], ["boolean", "org.hibernate.query.internal.NativeQueryImpl.isCallable()"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.query.internal.NativeQueryImpl.getQueryParameters()"], ["org.hibernate.query.spi.NativeQueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setCollectionKey(java.io.Serializable)"], ["org.hibernate.SQLQuery$RootReturn", "org.hibernate.query.internal.NativeQueryImpl.addRoot(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery$RootReturn", "org.hibernate.query.internal.NativeQueryImpl.addRoot(java.lang.String, java.lang.Class)"], ["org.hibernate.SQLQuery$FetchReturn", "org.hibernate.query.internal.NativeQueryImpl.addFetch(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.query.internal.NativeQueryImpl.getReturnAliases()"], ["org.hibernate.type.Type[]", "org.hibernate.query.internal.NativeQueryImpl.getReturnTypes()"], ["<P> org.hibernate.query.spi.NativeQueryImplementor<T>", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter<P>, P)"], ["<P> org.hibernate.query.spi.NativeQueryImplementor<T>", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter<P>, P, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.util.Map)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.addQueryHint(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setComment(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setReadOnly(boolean)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setFetchSize(int)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setTimeout(int)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setCacheRegion(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setCacheable(boolean)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.NativeQueryImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.util.Map)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.addQueryHint(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setComment(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setFetchSize(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setTimeout(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheRegion(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheable(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setReadOnly(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["javax.persistence.Query", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.util.Map)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.addQueryHint(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setComment(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setReadOnly(boolean)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setFetchSize(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setTimeout(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheRegion(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheable(boolean)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.NativeQueryImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setReadOnly(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setFetchSize(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setTimeout(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setCacheRegion(java.lang.String)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setCacheable(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setFirstResult(int)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setMaxResults(int)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addQueryHint(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setComment(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setReadOnly(boolean)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setFetchSize(int)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setTimeout(int)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setCacheRegion(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setCacheable(boolean)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.Class, org.hibernate.LockMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.Class)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.Class)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addScalar(java.lang.String, org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addScalar(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityClass(java.lang.Class)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityName(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.util.Map)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setProperties(java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.NativeQuery", "org.hibernate.query.internal.NativeQueryImpl.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityClass(java.lang.Class)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityName(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addJoin(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.Class, org.hibernate.LockMode)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.Class)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.Class)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addEntity(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addScalar(java.lang.String, org.hibernate.type.Type)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.addScalar(java.lang.String)"], ["org.hibernate.SQLQuery", "org.hibernate.query.internal.NativeQueryImpl.setResultSetMapping(java.lang.String)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityClass(java.lang.Class)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedEntityName(java.lang.String)"], ["org.hibernate.SynchronizeableQuery", "org.hibernate.query.internal.NativeQueryImpl.addSynchronizedQuerySpace(java.lang.String)"], ["org.hibernate.query.internal.AbstractProducedQuery", "org.hibernate.query.internal.AbstractProducedQuery(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.ParameterMetadata)"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.query.internal.AbstractProducedQuery.getProducer()"], ["org.hibernate.FlushMode", "org.hibernate.query.internal.AbstractProducedQuery.getHibernateFlushMode()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(org.hibernate.FlushMode)"], ["javax.persistence.FlushModeType", "org.hibernate.query.internal.AbstractProducedQuery.getFlushMode()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.CacheMode", "org.hibernate.query.internal.AbstractProducedQuery.getCacheMode()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setCacheMode(org.hibernate.CacheMode)"], ["boolean", "org.hibernate.query.internal.AbstractProducedQuery.isCacheable()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setCacheable(boolean)"], ["java.lang.String", "org.hibernate.query.internal.AbstractProducedQuery.getCacheRegion()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setCacheRegion(java.lang.String)"], ["java.lang.Integer", "org.hibernate.query.internal.AbstractProducedQuery.getTimeout()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setTimeout(int)"], ["java.lang.Integer", "org.hibernate.query.internal.AbstractProducedQuery.getFetchSize()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setFetchSize(int)"], ["boolean", "org.hibernate.query.internal.AbstractProducedQuery.isReadOnly()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setReadOnly(boolean)"], ["org.hibernate.LockOptions", "org.hibernate.query.internal.AbstractProducedQuery.getLockOptions()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(javax.persistence.LockModeType)"], ["java.lang.String", "org.hibernate.query.internal.AbstractProducedQuery.getComment()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setComment(java.lang.String)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.addQueryHint(java.lang.String)"], ["org.hibernate.query.ParameterMetadata", "org.hibernate.query.internal.AbstractProducedQuery.getParameterMetadata()"], ["java.lang.String[]", "org.hibernate.query.internal.AbstractProducedQuery.getNamedParameters()"], ["<P> org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter<P>, P)"], ["<P> org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter<P>, P)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object)"], ["<P> org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter<P>, P, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["<P> org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter<P>, P, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["<P> org.hibernate.query.spi.QueryImplementor<R>", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(org.hibernate.query.QueryParameter<P>, java.util.Collection<P>)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.util.Collection)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.lang.Object[])"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter<java.util.Calendar>, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter<java.util.Date>, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["<T> org.hibernate.query.QueryParameter<T>", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(java.lang.String, java.lang.Class<T>)"], ["<T> org.hibernate.query.QueryParameter<T>", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(int, java.lang.Class<T>)"], ["boolean", "org.hibernate.query.internal.AbstractProducedQuery.isBound(javax.persistence.Parameter<?>)"], ["<T> T", "org.hibernate.query.internal.AbstractProducedQuery.getParameterValue(javax.persistence.Parameter<T>)"], ["java.lang.Object", "org.hibernate.query.internal.AbstractProducedQuery.getParameterValue(java.lang.String)"], ["java.lang.Object", "org.hibernate.query.internal.AbstractProducedQuery.getParameterValue(int)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.lang.Object)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.util.Map)"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.engine.spi.RowSelection", "org.hibernate.query.internal.AbstractProducedQuery.getQueryOptions()"], ["int", "org.hibernate.query.internal.AbstractProducedQuery.getMaxResults()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setMaxResults(int)"], ["int", "org.hibernate.query.internal.AbstractProducedQuery.getFirstResult()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setFirstResult(int)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.hibernate.query.internal.AbstractProducedQuery.getHints()"], ["org.hibernate.query.spi.QueryImplementor", "org.hibernate.query.internal.AbstractProducedQuery.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.LockModeType", "org.hibernate.query.internal.AbstractProducedQuery.getLockMode()"], ["<T> T", "org.hibernate.query.internal.AbstractProducedQuery.unwrap(java.lang.Class<T>)"], ["org.hibernate.engine.spi.QueryParameters", "org.hibernate.query.internal.AbstractProducedQuery.getQueryParameters()"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.query.internal.AbstractProducedQuery.scroll()"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.query.internal.AbstractProducedQuery.scroll(org.hibernate.ScrollMode)"], ["R", "org.hibernate.query.internal.AbstractProducedQuery.uniqueResult()"], ["R", "org.hibernate.query.internal.AbstractProducedQuery.getSingleResult()"], ["<R> R", "org.hibernate.query.internal.AbstractProducedQuery.uniqueElement(java.util.List<R>)"], ["int", "org.hibernate.query.internal.AbstractProducedQuery.executeUpdate()"], ["void", "org.hibernate.query.internal.AbstractProducedQuery.setOptionalEntityName(java.lang.String)"], ["void", "org.hibernate.query.internal.AbstractProducedQuery.setOptionalId(java.io.Serializable)"], ["void", "org.hibernate.query.internal.AbstractProducedQuery.setOptionalObject(java.lang.Object)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.AbstractProducedQuery.determineProperBooleanType(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.AbstractProducedQuery.determineProperBooleanType(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.spi.QueryProducerImplementor", "org.hibernate.query.internal.AbstractProducedQuery.getProducer()"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.util.Map)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.addQueryHint(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setComment(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFetchSize(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setTimeout(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheRegion(java.lang.String)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheable(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setReadOnly(boolean)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFirstResult(int)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setMaxResults(int)"], ["org.hibernate.ScrollableResults", "org.hibernate.query.internal.AbstractProducedQuery.scroll(org.hibernate.ScrollMode)"], ["org.hibernate.ScrollableResults", "org.hibernate.query.internal.AbstractProducedQuery.scroll()"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.time.OffsetDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.time.ZonedDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.time.LocalDateTime, javax.persistence.TemporalType)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.time.Instant, javax.persistence.TemporalType)"], ["org.hibernate.query.QueryProducer", "org.hibernate.query.internal.AbstractProducedQuery.getProducer()"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setFirstResult(int)"], ["javax.persistence.TypedQuery", "org.hibernate.query.internal.AbstractProducedQuery.setMaxResults(int)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(javax.persistence.LockModeType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(javax.persistence.FlushModeType)"], ["javax.persistence.Parameter", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(int, java.lang.Class)"], ["javax.persistence.Parameter", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(int)"], ["javax.persistence.Parameter", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(java.lang.String, java.lang.Class)"], ["javax.persistence.Parameter", "org.hibernate.query.internal.AbstractProducedQuery.getParameter(java.lang.String)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setHint(java.lang.String, java.lang.Object)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFirstResult(int)"], ["javax.persistence.Query", "org.hibernate.query.internal.AbstractProducedQuery.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setResultTransformer(org.hibernate.transform.ResultTransformer)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(javax.persistence.LockModeType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setHint(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFirstResult(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setMaxResults(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.util.Map)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setProperties(java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.lang.Object[])"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[])"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.lang.Object[], org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(int, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(java.lang.String, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameterList(org.hibernate.query.QueryParameter, java.util.Collection)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, javax.persistence.TemporalType)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object, org.hibernate.type.Type)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(int, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(javax.persistence.Parameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setParameter(org.hibernate.query.QueryParameter, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.addQueryHint(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setComment(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockMode(java.lang.String, org.hibernate.LockMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setLockOptions(org.hibernate.LockOptions)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setReadOnly(boolean)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFetchSize(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setTimeout(int)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheRegion(java.lang.String)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheable(boolean)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.Query", "org.hibernate.query.internal.AbstractProducedQuery.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setReadOnly(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setFetchSize(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setTimeout(int)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setCacheRegion(java.lang.String)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setCacheable(boolean)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setCacheMode(org.hibernate.CacheMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setHibernateFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.BasicQueryContract", "org.hibernate.query.internal.AbstractProducedQuery.setFlushMode(org.hibernate.FlushMode)"], ["org.hibernate.query.internal.QueryParameterNamedImpl", "org.hibernate.query.internal.QueryParameterNamedImpl(java.lang.String, int[], org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.query.internal.QueryParameterNamedImpl.getName()"], ["java.lang.Integer", "org.hibernate.query.internal.QueryParameterNamedImpl.getPosition()"], ["int[]", "org.hibernate.query.internal.QueryParameterNamedImpl.getSourceLocations()"], ["boolean", "org.hibernate.query.internal.QueryParameterNamedImpl.equals(java.lang.Object)"], ["int", "org.hibernate.query.internal.QueryParameterNamedImpl.hashCode()"], ["org.hibernate.query.internal.QueryParameterImpl", "org.hibernate.query.internal.QueryParameterImpl(org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.QueryParameterImpl.getHibernateType()"], ["void", "org.hibernate.query.internal.QueryParameterImpl.setHibernateType(org.hibernate.type.Type)"], ["org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery$FetchReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.SQLQuery$FetchReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl.addProperty(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery$ReturnProperty", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl.addProperty(java.lang.String)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl.buildReturn()"], ["org.hibernate.query.internal.QueryParameterBindingsImpl", "org.hibernate.query.internal.QueryParameterBindingsImpl.from(org.hibernate.query.ParameterMetadata, org.hibernate.engine.spi.SessionFactoryImplementor, boolean)"], ["boolean", "org.hibernate.query.internal.QueryParameterBindingsImpl.isBound(org.hibernate.query.QueryParameter)"], ["<T> org.hibernate.query.spi.QueryParameterBinding<T>", "org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(org.hibernate.query.QueryParameter<T>)"], ["org.hibernate.query.spi.QueryParameterBinding", "org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(int)"], ["org.hibernate.query.spi.QueryParameterBinding", "org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(java.lang.String)"], ["void", "org.hibernate.query.internal.QueryParameterBindingsImpl.verifyParametersBound(boolean)"], ["org.hibernate.type.Type[]", "org.hibernate.query.internal.QueryParameterBindingsImpl.collectPositionalBindTypes()"], ["java.lang.Object[]", "org.hibernate.query.internal.QueryParameterBindingsImpl.collectPositionalBindValues()"], ["java.util.Map<java.lang.String, org.hibernate.engine.spi.TypedValue>", "org.hibernate.query.internal.QueryParameterBindingsImpl.collectNamedParameterBindings()"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.internal.QueryParameterBindingsImpl.getQueryParameterListBinding(org.hibernate.query.QueryParameter<T>)"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.internal.QueryParameterBindingsImpl.getQueryParameterListBinding(java.lang.String)"], ["<T> org.hibernate.query.spi.QueryParameterListBinding<T>", "org.hibernate.query.internal.QueryParameterBindingsImpl.getQueryParameterListBinding(int)"], ["java.lang.String", "org.hibernate.query.internal.QueryParameterBindingsImpl.expandListValuedParameters(java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.query.internal.QueryParameterBindingImpl", "org.hibernate.query.internal.QueryParameterBindingImpl(org.hibernate.type.Type, org.hibernate.query.spi.QueryParameterBindingTypeResolver, boolean)"], ["boolean", "org.hibernate.query.internal.QueryParameterBindingImpl.isBound()"], ["T", "org.hibernate.query.internal.QueryParameterBindingImpl.getBindValue()"], ["org.hibernate.type.Type", "org.hibernate.query.internal.QueryParameterBindingImpl.getBindType()"], ["void", "org.hibernate.query.internal.QueryParameterBindingImpl.setBindValue(T)"], ["void", "org.hibernate.query.internal.QueryParameterBindingImpl.setBindValue(T, org.hibernate.type.Type)"], ["void", "org.hibernate.query.internal.QueryParameterBindingImpl.setBindValue(T, javax.persistence.TemporalType)"], ["org.hibernate.type.BasicType", "org.hibernate.query.internal.BindingTypeHelper.determineTypeForTemporalType(javax.persistence.TemporalType, org.hibernate.type.Type, java.lang.Object)"], ["org.hibernate.type.BasicType", "org.hibernate.query.internal.BindingTypeHelper.resolveTimestampTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type)"], ["org.hibernate.type.BasicType", "org.hibernate.query.internal.BindingTypeHelper.resolveDateTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type)"], ["org.hibernate.type.BasicType", "org.hibernate.query.internal.BindingTypeHelper.resolveTimeTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type)"], ["org.hibernate.query.internal.QueryParameterListBindingImpl", "org.hibernate.query.internal.QueryParameterListBindingImpl(org.hibernate.type.Type, boolean)"], ["void", "org.hibernate.query.internal.QueryParameterListBindingImpl.setBindValues(java.util.Collection<T>)"], ["void", "org.hibernate.query.internal.QueryParameterListBindingImpl.setBindValues(java.util.Collection<T>, org.hibernate.type.Type)"], ["void", "org.hibernate.query.internal.QueryParameterListBindingImpl.setBindValues(java.util.Collection<T>, javax.persistence.TemporalType)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.QueryParameterListBindingImpl.getBindType()"], ["org.hibernate.SQLQuery$ReturnProperty", "org.hibernate.query.internal.NativeQueryReturnBuilderFetchImpl$1.addColumnAlias(java.lang.String)"], ["org.hibernate.query.internal.ParameterMetadataImpl", "org.hibernate.query.internal.ParameterMetadataImpl(java.util.Map<java.lang.Integer, org.hibernate.engine.query.spi.OrdinalParameterDescriptor>, java.util.Map<java.lang.String, org.hibernate.engine.query.spi.NamedParameterDescriptor>)"], ["int", "org.hibernate.query.internal.ParameterMetadataImpl.getParameterCount()"], ["boolean", "org.hibernate.query.internal.ParameterMetadataImpl.containsReference(org.hibernate.query.QueryParameter)"], ["boolean", "org.hibernate.query.internal.ParameterMetadataImpl.hasNamedParameters()"], ["boolean", "org.hibernate.query.internal.ParameterMetadataImpl.hasPositionalParameters()"], ["int", "org.hibernate.query.internal.ParameterMetadataImpl.getPositionalParameterCount()"], ["int", "org.hibernate.query.internal.ParameterMetadataImpl.getOrdinalParameterCount()"], ["org.hibernate.engine.query.spi.OrdinalParameterDescriptor", "org.hibernate.query.internal.ParameterMetadataImpl.getOrdinalParameterDescriptor(int)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.ParameterMetadataImpl.getOrdinalParameterExpectedType(int)"], ["int", "org.hibernate.query.internal.ParameterMetadataImpl.getOrdinalParameterSourceLocation(int)"], ["<T> org.hibernate.query.QueryParameter<T>", "org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(java.lang.String)"], ["<T> org.hibernate.query.QueryParameter<T>", "org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(java.lang.Integer)"], ["<T> org.hibernate.query.QueryParameter<T>", "org.hibernate.query.internal.ParameterMetadataImpl.resolve(javax.persistence.Parameter<T>)"], ["org.hibernate.engine.query.spi.NamedParameterDescriptor", "org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(java.lang.String)"], ["void", "org.hibernate.query.internal.ParameterMetadataImpl.visitRegistrations(java.util.function.Consumer<org.hibernate.query.QueryParameter>)"], ["org.hibernate.type.Type", "org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterExpectedType(java.lang.String)"], ["int[]", "org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterSourceLocations(java.lang.String)"], ["org.hibernate.query.internal.QueryImpl", "org.hibernate.query.internal.QueryImpl(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.ParameterMetadata, java.lang.String)"], ["java.lang.String", "org.hibernate.query.internal.QueryImpl.getQueryString()"], ["org.hibernate.type.Type[]", "org.hibernate.query.internal.QueryImpl.getReturnTypes()"], ["java.lang.String[]", "org.hibernate.query.internal.QueryImpl.getReturnAliases()"], ["org.hibernate.query.Query", "org.hibernate.query.internal.QueryImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.QueryImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.QueryImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.QueryImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.query.internal.CollectionFilterImpl", "org.hibernate.query.internal.CollectionFilterImpl(java.lang.String, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.query.internal.ParameterMetadataImpl)"], ["java.lang.String", "org.hibernate.query.internal.CollectionFilterImpl.getQueryString()"], ["java.util.Iterator", "org.hibernate.query.internal.CollectionFilterImpl.iterate()"], ["java.util.List", "org.hibernate.query.internal.CollectionFilterImpl.list()"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.query.internal.CollectionFilterImpl.scroll()"], ["org.hibernate.query.spi.ScrollableResultsImplementor", "org.hibernate.query.internal.CollectionFilterImpl.scroll(org.hibernate.ScrollMode)"], ["org.hibernate.type.Type[]", "org.hibernate.query.internal.CollectionFilterImpl.getReturnTypes()"], ["java.lang.String[]", "org.hibernate.query.internal.CollectionFilterImpl.getReturnAliases()"], ["org.hibernate.query.Query", "org.hibernate.query.internal.CollectionFilterImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.query.Query", "org.hibernate.query.internal.CollectionFilterImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.ScrollableResults", "org.hibernate.query.internal.CollectionFilterImpl.scroll(org.hibernate.ScrollMode)"], ["org.hibernate.ScrollableResults", "org.hibernate.query.internal.CollectionFilterImpl.scroll()"], ["org.hibernate.Query", "org.hibernate.query.internal.CollectionFilterImpl.setEntity(java.lang.String, java.lang.Object)"], ["org.hibernate.Query", "org.hibernate.query.internal.CollectionFilterImpl.setEntity(int, java.lang.Object)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn", "org.hibernate.query.internal.NativeQueryImpl$1.buildReturn()"], ["org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery$RootReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl.setLockMode(org.hibernate.LockMode)"], ["org.hibernate.SQLQuery$RootReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl.setDiscriminatorAlias(java.lang.String)"], ["org.hibernate.SQLQuery$RootReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl.addProperty(java.lang.String, java.lang.String)"], ["org.hibernate.SQLQuery$ReturnProperty", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl.addProperty(java.lang.String)"], ["org.hibernate.engine.query.spi.sql.NativeSQLQueryReturn", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl.buildReturn()"], ["org.hibernate.SQLQuery$ReturnProperty", "org.hibernate.query.internal.NativeQueryReturnBuilderRootImpl$1.addColumnAlias(java.lang.String)"], ["org.hibernate.DuplicateMappingException", "org.hibernate.DuplicateMappingException(org.hibernate.DuplicateMappingException$Type, java.lang.String)"], ["org.hibernate.DuplicateMappingException", "org.hibernate.DuplicateMappingException(java.lang.String, java.lang.String)"], ["org.hibernate.DuplicateMappingException", "org.hibernate.DuplicateMappingException(java.lang.String, org.hibernate.DuplicateMappingException$Type, java.lang.String)"], ["org.hibernate.DuplicateMappingException", "org.hibernate.DuplicateMappingException(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.DuplicateMappingException.getType()"], ["java.lang.String", "org.hibernate.DuplicateMappingException.getName()"], ["org.hibernate.jpa.HibernatePersistenceProvider", "org.hibernate.jpa.HibernatePersistenceProvider()"], ["javax.persistence.EntityManagerFactory", "org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(java.lang.String, java.util.Map)"], ["javax.persistence.EntityManagerFactory", "org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo, java.util.Map)"], ["void", "org.hibernate.jpa.HibernatePersistenceProvider.generateSchema(javax.persistence.spi.PersistenceUnitInfo, java.util.Map)"], ["boolean", "org.hibernate.jpa.HibernatePersistenceProvider.generateSchema(java.lang.String, java.util.Map)"], ["javax.persistence.spi.ProviderUtil", "org.hibernate.jpa.HibernatePersistenceProvider.getProviderUtil()"], ["boolean", "org.hibernate.jpa.boot.spi.ProviderChecker.isProvider(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map)"], ["boolean", "org.hibernate.jpa.boot.spi.ProviderChecker.hibernateProviderNamesContain(java.lang.String)"], ["java.lang.String", "org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(java.net.URL, java.lang.String, java.util.Map)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(java.net.URL, java.lang.String, javax.persistence.spi.PersistenceUnitTransactionType, java.util.Map)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map, java.lang.ClassLoader)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(javax.persistence.spi.PersistenceUnitInfo, java.util.Map)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(javax.persistence.spi.PersistenceUnitInfo, java.util.Map, java.lang.ClassLoader)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.spi.Bootstrap.getEntityManagerFactoryBuilder(javax.persistence.spi.PersistenceUnitInfo, java.util.Map, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map)"], ["org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map, java.lang.ClassLoader)"], ["org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.util.Map, org.hibernate.boot.registry.classloading.spi.ClassLoaderService)"], ["java.util.Map", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.getConfigurationValues()"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.getMetadata()"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.withValidatorFactory(java.lang.Object)"], ["org.hibernate.jpa.boot.spi.EntityManagerFactoryBuilder", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.withDataSource(javax.sql.DataSource)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.cancel()"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.generateSchema()"], ["javax.persistence.EntityManagerFactory", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build()"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor(java.net.URL)"], ["java.net.URL", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getPersistenceUnitRootUrl()"], ["java.lang.String", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getName()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setName(java.lang.String)"], ["java.lang.Object", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getNonJtaDataSource()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setNonJtaDataSource(java.lang.Object)"], ["java.lang.Object", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getJtaDataSource()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setJtaDataSource(java.lang.Object)"], ["java.lang.String", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getProviderClassName()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setProviderClassName(java.lang.String)"], ["javax.persistence.spi.PersistenceUnitTransactionType", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getTransactionType()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setTransactionType(javax.persistence.spi.PersistenceUnitTransactionType)"], ["boolean", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.isUseQuotedIdentifiers()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setUseQuotedIdentifiers(boolean)"], ["java.util.Properties", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getProperties()"], ["boolean", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.isExcludeUnlistedClasses()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setExcludeUnlistedClasses(boolean)"], ["javax.persistence.ValidationMode", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getValidationMode()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setValidationMode(java.lang.String)"], ["javax.persistence.SharedCacheMode", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getSharedCacheMode()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.setSharedCacheMode(java.lang.String)"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.addClasses(java.lang.String...)"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.addClasses(java.util.List<java.lang.String>)"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.addMappingFiles(java.lang.String...)"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.addMappingFiles(java.util.List<java.lang.String>)"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.addJarFileUrl(java.net.URL)"], ["java.lang.ClassLoader", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getClassLoader()"], ["java.lang.ClassLoader", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.getTempClassLoader()"], ["void", "org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor.pushClassTransformer(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateIndividualPersistenceUnit(java.net.URL)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateIndividualPersistenceUnit(java.net.URL, java.util.Map)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateIndividualPersistenceUnit(java.net.URL, javax.persistence.spi.PersistenceUnitTransactionType, java.util.Map)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateNamedPersistenceUnit(java.net.URL, java.lang.String)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateNamedPersistenceUnit(java.net.URL, java.lang.String, java.util.Map)"], ["org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.locateNamedPersistenceUnit(java.net.URL, java.lang.String, javax.persistence.spi.PersistenceUnitTransactionType, java.util.Map)"], ["java.util.Map<java.lang.String, org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor>", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.parse(java.net.URL, javax.persistence.spi.PersistenceUnitTransactionType)"], ["java.util.Map<java.lang.String, org.hibernate.jpa.boot.internal.ParsedPersistenceXmlDescriptor>", "org.hibernate.jpa.boot.internal.PersistenceXmlParser.parse(java.net.URL, javax.persistence.spi.PersistenceUnitTransactionType, java.util.Map)"], ["void", "org.hibernate.jpa.boot.internal.PersistenceXmlParser$ErrorHandlerImpl.error(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.jpa.boot.internal.PersistenceXmlParser$ErrorHandlerImpl.fatalError(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.jpa.boot.internal.PersistenceXmlParser$ErrorHandlerImpl.warning(org.xml.sax.SAXParseException)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$JpaEntityNotFoundDelegate.handleEntityNotFound(java.lang.String, java.io.Serializable)"], ["org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor(javax.persistence.spi.PersistenceUnitInfo)"], ["java.net.URL", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getPersistenceUnitRootUrl()"], ["java.lang.String", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getName()"], ["java.lang.Object", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getNonJtaDataSource()"], ["java.lang.Object", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getJtaDataSource()"], ["java.lang.String", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getProviderClassName()"], ["javax.persistence.spi.PersistenceUnitTransactionType", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getTransactionType()"], ["boolean", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.isUseQuotedIdentifiers()"], ["java.util.Properties", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getProperties()"], ["java.lang.ClassLoader", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getClassLoader()"], ["java.lang.ClassLoader", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getTempClassLoader()"], ["boolean", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.isExcludeUnlistedClasses()"], ["javax.persistence.ValidationMode", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getValidationMode()"], ["javax.persistence.SharedCacheMode", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.getSharedCacheMode()"], ["void", "org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$ServiceRegistryCloser.sessionFactoryCreated(org.hibernate.SessionFactory)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$ServiceRegistryCloser.sessionFactoryClosed(org.hibernate.SessionFactory)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$MergedSettings.processPersistenceUnitDescriptorProperties(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor)"], ["void", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$MergedSettings.processHibernateConfigXmlResources(org.hibernate.boot.cfgxml.spi.LoadedConfig)"], ["java.util.Map", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$MergedSettings.getConfigurationValues()"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.isEntityClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.isCompositeClass(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.doBiDirectionalAssociationManagement(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.doDirtyCheckingInline(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.hasLazyLoadableAttributes(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.isLazyLoadable(org.hibernate.bytecode.enhance.spi.UnloadedField)"], ["boolean", "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$1.doExtendedEnhancement(org.hibernate.bytecode.enhance.spi.UnloadedClass)"], ["org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl", "org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor)"], ["java.net.URL", "org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl.getRootUrl()"], ["org.hibernate.jpa.boot.internal.Helper", "org.hibernate.jpa.boot.internal.Helper()"], ["javax.persistence.PersistenceException", "org.hibernate.jpa.boot.internal.Helper.persistenceException(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.lang.String)"], ["javax.persistence.PersistenceException", "org.hibernate.jpa.boot.internal.Helper.persistenceException(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor, java.lang.String, java.lang.Exception)"], ["org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl(int, java.lang.String, org.hibernate.type.Type)"], ["java.lang.Class", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl.getJavaType()"], ["java.lang.String", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl.getAlias()"], ["int", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl.getPosition()"], ["org.hibernate.type.Type", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleElementImpl.getHibernateType()"], ["org.hibernate.jpa.spi.TupleBuilderTransformer", "org.hibernate.jpa.spi.TupleBuilderTransformer(org.hibernate.Query)"], ["java.lang.Object", "org.hibernate.jpa.spi.TupleBuilderTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["<X> X", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.get(javax.persistence.TupleElement<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.get(java.lang.String)"], ["<X> X", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.get(java.lang.String, java.lang.Class<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.get(int)"], ["<X> X", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.get(int, java.lang.Class<X>)"], ["java.lang.Object[]", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer$TupleImpl.toArray()"], ["org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl(org.hibernate.jpa.spi.TupleBuilderTransformer, java.lang.Object[])"], ["<X> X", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.get(java.lang.String, java.lang.Class<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.get(java.lang.String)"], ["<X> X", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.get(int, java.lang.Class<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.get(int)"], ["java.lang.Object[]", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.toArray()"], ["<X> X", "org.hibernate.jpa.spi.TupleBuilderTransformer$HqlTupleImpl.get(javax.persistence.TupleElement<X>)"], ["org.hibernate.jpa.spi.CriteriaQueryTupleTransformer", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer(java.util.List<org.hibernate.query.criteria.internal.ValueHandlerFactory$ValueHandler>, java.util.List)"], ["java.lang.Object", "org.hibernate.jpa.spi.CriteriaQueryTupleTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["org.hibernate.jpa.spi.NativeQueryTupleTransformer", "org.hibernate.jpa.spi.NativeQueryTupleTransformer()"], ["java.lang.Object", "org.hibernate.jpa.spi.NativeQueryTupleTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl(java.lang.Object[], java.lang.String[])"], ["<X> X", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.get(java.lang.String, java.lang.Class<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.get(java.lang.String)"], ["<X> X", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.get(int, java.lang.Class<X>)"], ["java.lang.Object", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.get(int)"], ["java.lang.Object[]", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.toArray()"], ["<X> X", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleImpl.get(javax.persistence.TupleElement<X>)"], ["org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleElementImpl", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleElementImpl(java.lang.Class<? extends X>, java.lang.String)"], ["java.lang.Class<? extends X>", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleElementImpl.getJavaType()"], ["java.lang.String", "org.hibernate.jpa.spi.NativeQueryTupleTransformer$NativeTupleElementImpl.getAlias()"], ["default", "org.hibernate.jpa.spi.HibernateEntityManagerImplementor.org.hibernate.LockOptions buildLockOptions(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>)"], ["default", "org.hibernate.jpa.spi.HibernateEntityManagerImplementor.org.hibernate.Session getSession()"], ["org.hibernate.jpa.event.spi.CallbackType[]", "org.hibernate.jpa.event.spi.CallbackType.values()"], ["org.hibernate.jpa.event.spi.CallbackType", "org.hibernate.jpa.event.spi.CallbackType.valueOf(java.lang.String)"], ["java.lang.Class<? extends java.lang.annotation.Annotation>", "org.hibernate.jpa.event.spi.CallbackType.getCallbackAnnotation()"], ["default", "org.hibernate.jpa.event.spi.jpa.ExtendedBeanManager.void registerLifecycleListener(org.hibernate.resource.beans.container.spi.ExtendedBeanManager$LifecycleListener)"], ["void", "org.hibernate.jpa.event.spi.jpa.ExtendedBeanManager$1.beanManagerInitialized(javax.enterprise.inject.spi.BeanManager)"], ["void", "org.hibernate.jpa.event.spi.jpa.ExtendedBeanManager$1.beforeBeanManagerDestroyed(javax.enterprise.inject.spi.BeanManager)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.hasRegisteredCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.CallbackType)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.registerCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.Callback[])"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.preCreate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.postCreate(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.preUpdate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.postUpdate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.preRemove(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.postRemove(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.postLoad(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.release()"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.hasPostCreateCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.hasPostUpdateCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.hasPostRemoveCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.CallbackRegistryImpl.hasRegisteredCallbacks(java.lang.Class, java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.EmbeddableCallback.performCallback(java.lang.Object)"], ["org.hibernate.jpa.event.internal.CallbacksFactory", "org.hibernate.jpa.event.internal.CallbacksFactory()"], ["org.hibernate.jpa.event.internal.CallbackRegistryImplementor", "org.hibernate.jpa.event.internal.CallbacksFactory.buildCallbackRegistry(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.jpa.event.spi.CallbackBuilder", "org.hibernate.jpa.event.internal.CallbacksFactory.buildCallbackBuilder(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.annotations.common.reflection.ReflectionManager)"], ["boolean", "org.hibernate.jpa.event.internal.ListenerCallback.performCallback(java.lang.Object)"], ["org.hibernate.jpa.event.spi.CallbackType", "org.hibernate.jpa.event.internal.AbstractCallback.getCallbackType()"], ["boolean", "org.hibernate.jpa.event.internal.EntityCallback.performCallback(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.hasRegisteredCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.CallbackType)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.preCreate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.postCreate(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.preUpdate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.postUpdate(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.preRemove(java.lang.Object)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.postRemove(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.postLoad(java.lang.Object)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.hasPostCreateCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.hasPostUpdateCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.hasPostRemoveCallbacks(java.lang.Class)"], ["boolean", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.hasRegisteredCallbacks(java.lang.Class, java.lang.Class)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.release()"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackRegistryImpl.registerCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.Callback[])"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackBuilder.buildCallbacksForEntity(java.lang.String, org.hibernate.jpa.event.spi.CallbackBuilder$CallbackRegistrar)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackBuilder.buildCallbacksForEmbeddable(org.hibernate.mapping.Property, java.lang.String, org.hibernate.jpa.event.spi.CallbackBuilder$CallbackRegistrar)"], ["void", "org.hibernate.jpa.event.internal.EmptyCallbackBuilder.release()"], ["void", "org.hibernate.jpa.event.internal.CallbackBuilderLegacyImpl.buildCallbacksForEntity(java.lang.String, org.hibernate.jpa.event.spi.CallbackBuilder$CallbackRegistrar)"], ["void", "org.hibernate.jpa.event.internal.CallbackBuilderLegacyImpl.buildCallbacksForEmbeddable(org.hibernate.mapping.Property, java.lang.String, org.hibernate.jpa.event.spi.CallbackBuilder$CallbackRegistrar)"], ["void", "org.hibernate.jpa.event.internal.CallbackBuilderLegacyImpl.release()"], ["org.hibernate.jpa.event.spi.Callback[]", "org.hibernate.jpa.event.internal.CallbackBuilderLegacyImpl.resolveEntityCallbacks(org.hibernate.annotations.common.reflection.XClass, org.hibernate.jpa.event.spi.CallbackType, org.hibernate.annotations.common.reflection.ReflectionManager)"], ["org.hibernate.jpa.event.spi.Callback[]", "org.hibernate.jpa.event.internal.CallbackBuilderLegacyImpl.resolveEmbeddableCallbacks(java.lang.Class, org.hibernate.mapping.Property, org.hibernate.jpa.event.spi.CallbackType, org.hibernate.annotations.common.reflection.ReflectionManager)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.HibernatePersistenceProvider$1.isLoadedWithoutReference(java.lang.Object, java.lang.String)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.HibernatePersistenceProvider$1.isLoadedWithReference(java.lang.Object, java.lang.String)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.HibernatePersistenceProvider$1.isLoaded(java.lang.Object)"], ["org.hibernate.jpa.TypedParameterValue", "org.hibernate.jpa.TypedParameterValue(org.hibernate.type.Type, java.lang.Object)"], ["java.lang.Object", "org.hibernate.jpa.TypedParameterValue.getValue()"], ["org.hibernate.type.Type", "org.hibernate.jpa.TypedParameterValue.getType()"], ["org.hibernate.jpa.internal.ExceptionMapperLegacyJpaImpl", "org.hibernate.jpa.internal.ExceptionMapperLegacyJpaImpl()"], ["java.lang.RuntimeException", "org.hibernate.jpa.internal.ExceptionMapperLegacyJpaImpl.mapStatusCheckFailure(java.lang.String, javax.transaction.SystemException, org.hibernate.engine.spi.SessionImplementor)"], ["java.lang.RuntimeException", "org.hibernate.jpa.internal.ExceptionMapperLegacyJpaImpl.mapManagedFlushFailure(java.lang.String, java.lang.RuntimeException, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.jpa.internal.MutableJpaComplianceImpl", "org.hibernate.jpa.internal.MutableJpaComplianceImpl(java.util.Map, boolean)"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaQueryComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaTransactionComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaListComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaClosedComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaProxyComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isJpaCacheComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.isGlobalGeneratorScopeEnabled()"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setQueryCompliance(boolean)"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setTransactionCompliance(boolean)"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setListCompliance(boolean)"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setClosedCompliance(boolean)"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setProxyCompliance(boolean)"], ["void", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.setCachingCompliance(boolean)"], ["org.hibernate.jpa.spi.JpaCompliance", "org.hibernate.jpa.internal.MutableJpaComplianceImpl.immutableCopy()"], ["javax.persistence.LockModeType", "org.hibernate.jpa.internal.util.LockModeTypeHelper.getLockModeType(org.hibernate.LockMode)"], ["org.hibernate.LockMode", "org.hibernate.jpa.internal.util.LockModeTypeHelper.getLockMode(javax.persistence.LockModeType)"], ["org.hibernate.LockMode", "org.hibernate.jpa.internal.util.LockModeTypeHelper.interpretLockMode(java.lang.Object)"], ["javax.persistence.FlushModeType", "org.hibernate.jpa.internal.util.FlushModeTypeHelper.getFlushModeType(org.hibernate.FlushMode)"], ["org.hibernate.FlushMode", "org.hibernate.jpa.internal.util.FlushModeTypeHelper.getFlushMode(javax.persistence.FlushModeType)"], ["org.hibernate.FlushMode", "org.hibernate.jpa.internal.util.FlushModeTypeHelper.interpretFlushMode(java.lang.Object)"], ["org.hibernate.FlushMode", "org.hibernate.jpa.internal.util.FlushModeTypeHelper.interpretExternalSetting(java.lang.String)"], ["void", "org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(org.hibernate.jpa.boot.spi.PersistenceUnitDescriptor)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.internal.util.PersistenceUtilHelper.isLoaded(java.lang.Object)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.internal.util.PersistenceUtilHelper.isLoadedWithoutReference(java.lang.Object, java.lang.String, org.hibernate.jpa.internal.util.PersistenceUtilHelper$MetadataCache)"], ["javax.persistence.spi.LoadState", "org.hibernate.jpa.internal.util.PersistenceUtilHelper.isLoadedWithReference(java.lang.Object, java.lang.String, org.hibernate.jpa.internal.util.PersistenceUtilHelper$MetadataCache)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$ClassMetadataCache", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$ClassMetadataCache(java.lang.Class<?>)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeAccess", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$ClassMetadataCache.getAttributeAccess(java.lang.String)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeAccess", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$ClassMetadataCache$1.run()"], ["java.lang.Object", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$ClassMetadataCache$1.run()"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeExtractionException", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeExtractionException(java.lang.String)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeExtractionException", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$AttributeExtractionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.jpa.internal.util.ConfigurationHelper", "org.hibernate.jpa.internal.util.ConfigurationHelper()"], ["void", "org.hibernate.jpa.internal.util.ConfigurationHelper.overrideProperties(java.util.Properties, java.util.Map<?, ?>)"], ["org.hibernate.FlushMode", "org.hibernate.jpa.internal.util.ConfigurationHelper.getFlushMode(java.lang.Object, org.hibernate.FlushMode)"], ["org.hibernate.FlushMode", "org.hibernate.jpa.internal.util.ConfigurationHelper.getFlushMode(java.lang.Object)"], ["java.lang.Integer", "org.hibernate.jpa.internal.util.ConfigurationHelper.getInteger(java.lang.Object)"], ["java.lang.Boolean", "org.hibernate.jpa.internal.util.ConfigurationHelper.getBoolean(java.lang.Object)"], ["org.hibernate.CacheMode", "org.hibernate.jpa.internal.util.ConfigurationHelper.getCacheMode(java.lang.Object)"], ["void", "org.hibernate.jpa.internal.util.LockOptionsHelper.applyPropertiesToLockOptions(java.util.Map<java.lang.String, java.lang.Object>, java.util.function.Supplier<org.hibernate.LockOptions>)"], ["java.util.Iterator", "org.hibernate.jpa.internal.util.XmlHelper.getChildrenByTagName(org.w3c.dom.Element, java.lang.String)"], ["org.w3c.dom.Element", "org.hibernate.jpa.internal.util.XmlHelper.getUniqueChild(org.w3c.dom.Element, java.lang.String)"], ["org.w3c.dom.Element", "org.hibernate.jpa.internal.util.XmlHelper.getOptionalChild(org.w3c.dom.Element, java.lang.String)"], ["org.w3c.dom.Element", "org.hibernate.jpa.internal.util.XmlHelper.getOptionalChild(org.w3c.dom.Element, java.lang.String, org.w3c.dom.Element)"], ["java.lang.String", "org.hibernate.jpa.internal.util.XmlHelper.getElementContent(org.w3c.dom.Element)"], ["java.lang.String", "org.hibernate.jpa.internal.util.XmlHelper.getElementContent(org.w3c.dom.Element, java.lang.String)"], ["java.lang.String", "org.hibernate.jpa.internal.util.XmlHelper.getUniqueChildContent(org.w3c.dom.Element, java.lang.String)"], ["java.lang.String", "org.hibernate.jpa.internal.util.XmlHelper.getOptionalChildContent(org.w3c.dom.Element, java.lang.String)"], ["boolean", "org.hibernate.jpa.internal.util.XmlHelper.getOptionalChildBooleanContent(org.w3c.dom.Element, java.lang.String)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$FieldAttributeAccess", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$FieldAttributeAccess(java.lang.reflect.Field)"], ["java.lang.Object", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$FieldAttributeAccess.extractValue(java.lang.Object)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$MethodAttributeAccess", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$MethodAttributeAccess(java.lang.String, java.lang.reflect.Method)"], ["java.lang.Object", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$MethodAttributeAccess.extractValue(java.lang.Object)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$NoSuchAttributeAccess", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$NoSuchAttributeAccess(java.lang.Class, java.lang.String)"], ["java.lang.Object", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$NoSuchAttributeAccess.extractValue(java.lang.Object)"], ["org.hibernate.jpa.internal.util.PersistenceUtilHelper$MetadataCache", "org.hibernate.jpa.internal.util.PersistenceUtilHelper$MetadataCache()"], ["java.lang.Integer", "org.hibernate.jpa.internal.util.PessimisticNumberParser.toNumberOrNull(java.lang.String)"], ["javax.persistence.spi.PersistenceUnitTransactionType", "org.hibernate.jpa.internal.util.PersistenceUnitTransactionTypeHelper.interpretTransactionType(java.lang.Object)"], ["org.hibernate.CacheMode", "org.hibernate.jpa.internal.util.CacheModeHelper.interpretCacheMode(javax.persistence.CacheStoreMode, javax.persistence.CacheRetrieveMode)"], ["org.hibernate.CacheMode", "org.hibernate.jpa.internal.util.CacheModeHelper.effectiveCacheMode(javax.persistence.CacheStoreMode, javax.persistence.CacheRetrieveMode)"], ["javax.persistence.CacheStoreMode", "org.hibernate.jpa.internal.util.CacheModeHelper.interpretCacheStoreMode(org.hibernate.CacheMode)"], ["javax.persistence.CacheRetrieveMode", "org.hibernate.jpa.internal.util.CacheModeHelper.interpretCacheRetrieveMode(org.hibernate.CacheMode)"], ["org.hibernate.jpa.internal.AfterCompletionActionLegacyJpaImpl", "org.hibernate.jpa.internal.AfterCompletionActionLegacyJpaImpl()"], ["void", "org.hibernate.jpa.internal.AfterCompletionActionLegacyJpaImpl.doAction(boolean, org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.jpa.internal.ManagedFlushCheckerLegacyJpaImpl", "org.hibernate.jpa.internal.ManagedFlushCheckerLegacyJpaImpl()"], ["boolean", "org.hibernate.jpa.internal.ManagedFlushCheckerLegacyJpaImpl.shouldDoManagedFlush(org.hibernate.engine.spi.SessionImplementor)"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaQueryComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaTransactionComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaListComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaClosedComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaProxyComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isJpaCacheComplianceEnabled()"], ["boolean", "org.hibernate.jpa.internal.JpaComplianceImpl.isGlobalGeneratorScopeEnabled()"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder()"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setQueryCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setTransactionCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setListCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setClosedCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setProxyCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setCachingCompliance(boolean)"], ["org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder", "org.hibernate.jpa.internal.JpaComplianceImpl$JpaComplianceBuilder.setGlobalGeneratorNameCompliance(boolean)"], ["org.hibernate.jpa.internal.PersistenceUnitUtilImpl", "org.hibernate.jpa.internal.PersistenceUnitUtilImpl(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.jpa.internal.PersistenceUnitUtilImpl.isLoaded(java.lang.Object, java.lang.String)"], ["boolean", "org.hibernate.jpa.internal.PersistenceUnitUtilImpl.isLoaded(java.lang.Object)"], ["java.lang.Object", "org.hibernate.jpa.internal.PersistenceUnitUtilImpl.getIdentifier(java.lang.Object)"], ["org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl", "org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl(org.hibernate.bytecode.enhance.spi.EnhancementContext)"], ["byte[]", "org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl.transform(java.lang.ClassLoader, java.lang.String, java.lang.Class<?>, java.security.ProtectionDomain, byte[])"], ["synchronized", "org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl$1.java.lang.Throwable getCause()"], ["default", "org.hibernate.jpa.HibernateEntityManagerFactory.org.hibernate.engine.spi.SessionFactoryImplementor getSessionFactory()"], ["default", "org.hibernate.jpa.HibernateEntityManagerFactory.java.lang.String getEntityManagerFactoryName()"], ["default", "org.hibernate.jpa.HibernateEntityManagerFactory.javax.persistence.metamodel.EntityType getEntityTypeByName(java.lang.String)"], ["default", "org.hibernate.jpa.HibernateEntityManagerFactory.javax.persistence.metamodel.Metamodel getMetamodel()"], ["org.hibernate.JDBCException", "org.hibernate.JDBCException(java.lang.String, java.sql.SQLException)"], ["org.hibernate.JDBCException", "org.hibernate.JDBCException(java.lang.String, java.sql.SQLException, java.lang.String)"], ["java.lang.String", "org.hibernate.JDBCException.getSQLState()"], ["int", "org.hibernate.JDBCException.getErrorCode()"], ["java.sql.SQLException", "org.hibernate.JDBCException.getSQLException()"], ["java.lang.String", "org.hibernate.JDBCException.getSQL()"], ["default", "org.hibernate.BasicQueryContract.org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode)"], ["default", "org.hibernate.collection.spi.PersistentCollection.boolean isElementRemoved()"], ["default", "org.hibernate.collection.spi.PersistentCollection.boolean isDirectlyProvidedCollection(java.lang.Object)"], ["org.hibernate.collection.internal.PersistentList$Set", "org.hibernate.collection.internal.PersistentList$Set(org.hibernate.collection.internal.PersistentList, int, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$Set.operate()"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.addAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.clear()"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.contains(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.isEmpty()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.iterator()"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.retainAll(java.util.Collection)"], ["int", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.size()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentMap$EntrySetProxy.toArray(java.lang.Object[])"], ["org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy(org.hibernate.collection.internal.AbstractPersistentCollection, java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.addAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.clear()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.contains(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.isEmpty()"], ["java.util.Iterator", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.iterator()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.retainAll(java.util.Collection)"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.size()"], ["java.lang.Object[]", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.AbstractPersistentCollection$SetProxy.toArray(java.lang.Object[])"], ["org.hibernate.collection.internal.PersistentArrayHolder", "org.hibernate.collection.internal.PersistentArrayHolder(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.collection.internal.PersistentArrayHolder", "org.hibernate.collection.internal.PersistentArrayHolder(org.hibernate.engine.spi.SessionImplementor, java.lang.Object)"], ["org.hibernate.collection.internal.PersistentArrayHolder", "org.hibernate.collection.internal.PersistentArrayHolder(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.collection.CollectionPersister)"], ["org.hibernate.collection.internal.PersistentArrayHolder", "org.hibernate.collection.internal.PersistentArrayHolder(org.hibernate.engine.spi.SessionImplementor, org.hibernate.persister.collection.CollectionPersister)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentArrayHolder.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.isSnapshotEmpty(java.io.Serializable)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentArrayHolder.getOrphans(java.io.Serializable, java.lang.String)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.getArray()"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.isWrapper(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentArrayHolder.elements()"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.empty()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentArrayHolder.entries(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.PersistentArrayHolder.beginRead()"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.endRead()"], ["void", "org.hibernate.collection.internal.PersistentArrayHolder.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.isDirectlyAccessible()"], ["void", "org.hibernate.collection.internal.PersistentArrayHolder.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentArrayHolder.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.getValue()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentArrayHolder.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentArrayHolder.getSnapshotElement(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentArrayHolder.entryExists(java.lang.Object, int)"], ["int", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.size()"], ["boolean", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.isEmpty()"], ["boolean", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.containsValue(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.put(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.remove(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.putAll(java.util.Map)"], ["void", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.clear()"], ["java.util.Set", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.keySet()"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.values()"], ["java.util.Set", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.entrySet()"], ["java.util.Comparator", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.comparator()"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.subMap(java.lang.Object, java.lang.Object)"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.headMap(java.lang.Object)"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.tailMap(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.firstKey()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap$SortedSubMap.lastKey()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$AbstractValueDelayedOperation.replace(org.hibernate.persister.collection.CollectionPersister, java.util.Map)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$AbstractValueDelayedOperation.getAddedInstance()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$AbstractValueDelayedOperation.getOrphan()"], ["org.hibernate.collection.internal.AbstractPersistentCollection", "org.hibernate.collection.internal.AbstractPersistentCollection()"], ["java.lang.String", "org.hibernate.collection.internal.AbstractPersistentCollection.getRole()"], ["java.io.Serializable", "org.hibernate.collection.internal.AbstractPersistentCollection.getKey()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.isUnreferenced()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.isDirty()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.isElementRemoved()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.clearDirty()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.dirty()"], ["java.io.Serializable", "org.hibernate.collection.internal.AbstractPersistentCollection.getStoredSnapshot()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.replaceQueuedOperationValues(org.hibernate.persister.collection.CollectionPersister, java.util.Map)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.setSnapshot(java.io.Serializable, java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.postAction()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.clearOperationQueue()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection.getValue()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.beginRead()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.endRead()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.afterInitialize()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.isDirectlyAccessible()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.unsetSession(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.setCurrentSession(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.needsRecreate(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.forceInitialization()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.wasInitialized()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.isRowUpdatePossible()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection.hasQueuedOperations()"], ["java.util.Iterator", "org.hibernate.collection.internal.AbstractPersistentCollection.queuedAdditionIterator()"], ["java.util.Collection", "org.hibernate.collection.internal.AbstractPersistentCollection.getQueuedOrphans(java.lang.String)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.preInsert(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.afterRowInsert(org.hibernate.persister.collection.CollectionPersister, java.lang.Object, int)"], ["org.hibernate.engine.spi.SharedSessionContractImplementor", "org.hibernate.collection.internal.AbstractPersistentCollection.getSession()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.identityRemove(java.util.Collection, java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.identityRemove(java.util.Collection, java.lang.Object, java.lang.String, org.hibernate.engine.spi.SessionImplementor)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection.getIdentifier(java.lang.Object, int)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection.getOwner()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection.setOwner(java.lang.Object)"], ["org.hibernate.collection.internal.PersistentSet$SimpleAdd", "org.hibernate.collection.internal.PersistentSet$SimpleAdd(org.hibernate.collection.internal.PersistentSet, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentSet$SimpleAdd.operate()"], ["org.hibernate.collection.internal.PersistentSet$SimpleRemove", "org.hibernate.collection.internal.PersistentSet$SimpleRemove(org.hibernate.collection.internal.PersistentSet, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentSet$SimpleRemove.operate()"], ["java.lang.Boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$2.doWork()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$2.doWork()"], ["org.hibernate.collection.internal.PersistentList$SimpleAdd", "org.hibernate.collection.internal.PersistentList$SimpleAdd(org.hibernate.collection.internal.PersistentList, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$SimpleAdd.operate()"], ["org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy", "org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy(org.hibernate.collection.internal.AbstractPersistentCollection, java.util.Iterator)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy.hasNext()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy.next()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$IteratorProxy.remove()"], ["java.lang.Boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$3.doWork()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$3.doWork()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork()"], ["void", "org.hibernate.collection.internal.PersistentBag$Clear.operate()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag$Clear.getAddedInstance()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag$Clear.getOrphan()"], ["org.hibernate.collection.internal.PersistentSortedMap", "org.hibernate.collection.internal.PersistentSortedMap()"], ["org.hibernate.collection.internal.PersistentSortedMap", "org.hibernate.collection.internal.PersistentSortedMap(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentSortedMap", "org.hibernate.collection.internal.PersistentSortedMap(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentSortedMap", "org.hibernate.collection.internal.PersistentSortedMap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.SortedMap)"], ["org.hibernate.collection.internal.PersistentSortedMap", "org.hibernate.collection.internal.PersistentSortedMap(org.hibernate.engine.spi.SessionImplementor, java.util.SortedMap)"], ["void", "org.hibernate.collection.internal.PersistentSortedMap.setComparator(java.util.Comparator)"], ["java.util.Comparator", "org.hibernate.collection.internal.PersistentSortedMap.comparator()"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap.subMap(java.lang.Object, java.lang.Object)"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap.headMap(java.lang.Object)"], ["java.util.SortedMap", "org.hibernate.collection.internal.PersistentSortedMap.tailMap(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap.firstKey()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedMap.lastKey()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$1ExtraLazyElementByIndexReader.doWork()"], ["org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy(org.hibernate.collection.internal.AbstractPersistentCollection, java.util.ListIterator)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.hasNext()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.hasPrevious()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.next()"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.nextIndex()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.previous()"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.previousIndex()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.remove()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$ListIteratorProxy.set(java.lang.Object)"], ["org.hibernate.collection.internal.PersistentSortedSet", "org.hibernate.collection.internal.PersistentSortedSet()"], ["org.hibernate.collection.internal.PersistentSortedSet", "org.hibernate.collection.internal.PersistentSortedSet(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentSortedSet", "org.hibernate.collection.internal.PersistentSortedSet(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentSortedSet", "org.hibernate.collection.internal.PersistentSortedSet(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.SortedSet)"], ["org.hibernate.collection.internal.PersistentSortedSet", "org.hibernate.collection.internal.PersistentSortedSet(org.hibernate.engine.spi.SessionImplementor, java.util.SortedSet)"], ["void", "org.hibernate.collection.internal.PersistentSortedSet.setComparator(java.util.Comparator)"], ["java.util.Comparator", "org.hibernate.collection.internal.PersistentSortedSet.comparator()"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet.subSet(java.lang.Object, java.lang.Object)"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet.headSet(java.lang.Object)"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet.tailSet(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedSet.first()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedSet.last()"], ["org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy(org.hibernate.collection.internal.AbstractPersistentCollection, java.util.List)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.add(int, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.addAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.addAll(int, java.util.Collection)"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.clear()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.contains(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.containsAll(java.util.Collection)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.get(int)"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.indexOf(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.isEmpty()"], ["java.util.Iterator", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.iterator()"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.lastIndexOf(java.lang.Object)"], ["java.util.ListIterator", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.listIterator()"], ["java.util.ListIterator", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.listIterator(int)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.remove(int)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.retainAll(java.util.Collection)"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.set(int, java.lang.Object)"], ["int", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.size()"], ["java.util.List", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.subList(int, int)"], ["java.lang.Object[]", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.AbstractPersistentCollection$ListProxy.toArray(java.lang.Object[])"], ["org.hibernate.collection.internal.PersistentMap$Remove", "org.hibernate.collection.internal.PersistentMap$Remove(org.hibernate.collection.internal.PersistentMap, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentMap$Remove.operate()"], ["org.hibernate.collection.internal.PersistentList", "org.hibernate.collection.internal.PersistentList()"], ["org.hibernate.collection.internal.PersistentList", "org.hibernate.collection.internal.PersistentList(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentList", "org.hibernate.collection.internal.PersistentList(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentList", "org.hibernate.collection.internal.PersistentList(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.List)"], ["org.hibernate.collection.internal.PersistentList", "org.hibernate.collection.internal.PersistentList(org.hibernate.engine.spi.SessionImplementor, java.util.List)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentList.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentList.getOrphans(java.io.Serializable, java.lang.String)"], ["boolean", "org.hibernate.collection.internal.PersistentList.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentList.isSnapshotEmpty(java.io.Serializable)"], ["void", "org.hibernate.collection.internal.PersistentList.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["boolean", "org.hibernate.collection.internal.PersistentList.isWrapper(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentList.size()"], ["boolean", "org.hibernate.collection.internal.PersistentList.isEmpty()"], ["boolean", "org.hibernate.collection.internal.PersistentList.contains(java.lang.Object)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentList.iterator()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentList.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentList.toArray(java.lang.Object[])"], ["boolean", "org.hibernate.collection.internal.PersistentList.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentList.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentList.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentList.addAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentList.addAll(int, java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentList.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentList.retainAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentList.clear()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.get(int)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.set(int, java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.remove(int)"], ["void", "org.hibernate.collection.internal.PersistentList.add(int, java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentList.indexOf(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentList.lastIndexOf(java.lang.Object)"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentList.listIterator()"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentList.listIterator(int)"], ["java.util.List", "org.hibernate.collection.internal.PersistentList.subList(int, int)"], ["boolean", "org.hibernate.collection.internal.PersistentList.empty()"], ["java.lang.String", "org.hibernate.collection.internal.PersistentList.toString()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentList.entries(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.PersistentList.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentList.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentList.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["boolean", "org.hibernate.collection.internal.PersistentList.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentList.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList.getSnapshotElement(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentList.equals(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentList.hashCode()"], ["boolean", "org.hibernate.collection.internal.PersistentList.entryExists(java.lang.Object, int)"], ["org.hibernate.collection.internal.PersistentList$SimpleRemove", "org.hibernate.collection.internal.PersistentList$SimpleRemove(org.hibernate.collection.internal.PersistentList, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$SimpleRemove.operate()"], ["org.hibernate.collection.internal.PersistentBag", "org.hibernate.collection.internal.PersistentBag()"], ["org.hibernate.collection.internal.PersistentBag", "org.hibernate.collection.internal.PersistentBag(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentBag", "org.hibernate.collection.internal.PersistentBag(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentBag", "org.hibernate.collection.internal.PersistentBag(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.Collection)"], ["org.hibernate.collection.internal.PersistentBag", "org.hibernate.collection.internal.PersistentBag(org.hibernate.engine.spi.SessionImplementor, java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.isWrapper(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.isDirectlyProvidedCollection(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.empty()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentBag.entries(org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentBag.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.isSnapshotEmpty(java.io.Serializable)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentBag.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentBag.getOrphans(java.io.Serializable, java.lang.String)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentBag.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.PersistentBag.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.needsRecreate(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentBag.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.isRowUpdatePossible()"], ["boolean", "org.hibernate.collection.internal.PersistentBag.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["int", "org.hibernate.collection.internal.PersistentBag.size()"], ["boolean", "org.hibernate.collection.internal.PersistentBag.isEmpty()"], ["boolean", "org.hibernate.collection.internal.PersistentBag.contains(java.lang.Object)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentBag.iterator()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentBag.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentBag.toArray(java.lang.Object[])"], ["boolean", "org.hibernate.collection.internal.PersistentBag.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.addAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.retainAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentBag.clear()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.getSnapshotElement(java.lang.Object, int)"], ["int", "org.hibernate.collection.internal.PersistentBag.occurrences(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentBag.add(int, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.addAll(int, java.util.Collection)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.get(int)"], ["int", "org.hibernate.collection.internal.PersistentBag.indexOf(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentBag.lastIndexOf(java.lang.Object)"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentBag.listIterator()"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentBag.listIterator(int)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.remove(int)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentBag.set(int, java.lang.Object)"], ["java.util.List", "org.hibernate.collection.internal.PersistentBag.subList(int, int)"], ["boolean", "org.hibernate.collection.internal.PersistentBag.entryExists(java.lang.Object, int)"], ["java.lang.String", "org.hibernate.collection.internal.PersistentBag.toString()"], ["boolean", "org.hibernate.collection.internal.PersistentBag.equals(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentBag.hashCode()"], ["java.util.Comparator", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.comparator()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.first()"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.headSet(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.last()"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.subSet(java.lang.Object, java.lang.Object)"], ["java.util.SortedSet", "org.hibernate.collection.internal.PersistentSortedSet$SubSetProxy.tailSet(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$Clear.operate()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList$Clear.getAddedInstance()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentList$Clear.getOrphan()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$5.next()"], ["boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$5.hasNext()"], ["void", "org.hibernate.collection.internal.AbstractPersistentCollection$5.remove()"], ["org.hibernate.collection.internal.PersistentBag$SimpleAdd", "org.hibernate.collection.internal.PersistentBag$SimpleAdd(org.hibernate.collection.internal.PersistentBag, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentBag$SimpleAdd.operate()"], ["org.hibernate.collection.internal.PersistentMap$Put", "org.hibernate.collection.internal.PersistentMap$Put(org.hibernate.collection.internal.PersistentMap, java.lang.Object, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentMap$Put.operate()"], ["void", "org.hibernate.collection.internal.PersistentSet$Clear.operate()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet$Clear.getAddedInstance()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet$Clear.getOrphan()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$MapEntryProxy.getKey()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$MapEntryProxy.getValue()"], ["boolean", "org.hibernate.collection.internal.PersistentMap$MapEntryProxy.equals(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentMap$MapEntryProxy.hashCode()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$MapEntryProxy.setValue(java.lang.Object)"], ["org.hibernate.collection.internal.PersistentMap", "org.hibernate.collection.internal.PersistentMap()"], ["org.hibernate.collection.internal.PersistentMap", "org.hibernate.collection.internal.PersistentMap(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentMap", "org.hibernate.collection.internal.PersistentMap(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentMap", "org.hibernate.collection.internal.PersistentMap(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.Map)"], ["org.hibernate.collection.internal.PersistentMap", "org.hibernate.collection.internal.PersistentMap(org.hibernate.engine.spi.SessionImplementor, java.util.Map)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentMap.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentMap.getOrphans(java.io.Serializable, java.lang.String)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.isSnapshotEmpty(java.io.Serializable)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.isWrapper(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentMap.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["int", "org.hibernate.collection.internal.PersistentMap.size()"], ["boolean", "org.hibernate.collection.internal.PersistentMap.isEmpty()"], ["boolean", "org.hibernate.collection.internal.PersistentMap.containsKey(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.containsValue(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.put(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.remove(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentMap.putAll(java.util.Map)"], ["void", "org.hibernate.collection.internal.PersistentMap.clear()"], ["java.util.Set", "org.hibernate.collection.internal.PersistentMap.keySet()"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentMap.values()"], ["java.util.Set", "org.hibernate.collection.internal.PersistentMap.entrySet()"], ["boolean", "org.hibernate.collection.internal.PersistentMap.empty()"], ["java.lang.String", "org.hibernate.collection.internal.PersistentMap.toString()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.endRead()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentMap.entries(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.PersistentMap.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentMap.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentMap.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap.getSnapshotElement(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentMap.equals(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentMap.hashCode()"], ["boolean", "org.hibernate.collection.internal.PersistentMap.entryExists(java.lang.Object, int)"], ["org.hibernate.collection.internal.PersistentIdentifierBag", "org.hibernate.collection.internal.PersistentIdentifierBag()"], ["org.hibernate.collection.internal.PersistentIdentifierBag", "org.hibernate.collection.internal.PersistentIdentifierBag(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentIdentifierBag", "org.hibernate.collection.internal.PersistentIdentifierBag(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentIdentifierBag", "org.hibernate.collection.internal.PersistentIdentifierBag(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.Collection)"], ["org.hibernate.collection.internal.PersistentIdentifierBag", "org.hibernate.collection.internal.PersistentIdentifierBag(org.hibernate.engine.spi.SessionImplementor, java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.getIdentifier(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.isWrapper(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.isDirectlyProvidedCollection(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.add(java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.clear()"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.contains(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.isEmpty()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentIdentifierBag.iterator()"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.removeAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.retainAll(java.util.Collection)"], ["int", "org.hibernate.collection.internal.PersistentIdentifierBag.size()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentIdentifierBag.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentIdentifierBag.toArray(java.lang.Object[])"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentIdentifierBag.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.empty()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentIdentifierBag.entries(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.entryExists(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.isSnapshotEmpty(java.io.Serializable)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentIdentifierBag.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.getSnapshotElement(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentIdentifierBag.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentIdentifierBag.getOrphans(java.io.Serializable, java.lang.String)"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.preInsert(org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.add(int, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.addAll(int, java.util.Collection)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.get(int)"], ["int", "org.hibernate.collection.internal.PersistentIdentifierBag.indexOf(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentIdentifierBag.lastIndexOf(java.lang.Object)"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentIdentifierBag.listIterator()"], ["java.util.ListIterator", "org.hibernate.collection.internal.PersistentIdentifierBag.listIterator(int)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.remove(int)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentIdentifierBag.set(int, java.lang.Object)"], ["java.util.List", "org.hibernate.collection.internal.PersistentIdentifierBag.subList(int, int)"], ["boolean", "org.hibernate.collection.internal.PersistentIdentifierBag.addAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentIdentifierBag.afterRowInsert(org.hibernate.persister.collection.CollectionPersister, java.lang.Object, int)"], ["void", "org.hibernate.collection.internal.PersistentMap$Clear.operate()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$Clear.getAddedInstance()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$Clear.getOrphan()"], ["org.hibernate.collection.internal.PersistentList$Remove", "org.hibernate.collection.internal.PersistentList$Remove(org.hibernate.collection.internal.PersistentList, int, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$Remove.operate()"], ["java.lang.Boolean", "org.hibernate.collection.internal.AbstractPersistentCollection$1.doWork()"], ["java.lang.Object", "org.hibernate.collection.internal.AbstractPersistentCollection$1.doWork()"], ["org.hibernate.collection.internal.PersistentSet", "org.hibernate.collection.internal.PersistentSet()"], ["org.hibernate.collection.internal.PersistentSet", "org.hibernate.collection.internal.PersistentSet(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.collection.internal.PersistentSet", "org.hibernate.collection.internal.PersistentSet(org.hibernate.engine.spi.SessionImplementor)"], ["org.hibernate.collection.internal.PersistentSet", "org.hibernate.collection.internal.PersistentSet(org.hibernate.engine.spi.SharedSessionContractImplementor, java.util.Set)"], ["org.hibernate.collection.internal.PersistentSet", "org.hibernate.collection.internal.PersistentSet(org.hibernate.engine.spi.SessionImplementor, java.util.Set)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentSet.getSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Collection", "org.hibernate.collection.internal.PersistentSet.getOrphans(java.io.Serializable, java.lang.String)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.isSnapshotEmpty(java.io.Serializable)"], ["void", "org.hibernate.collection.internal.PersistentSet.beforeInitialize(org.hibernate.persister.collection.CollectionPersister, int)"], ["void", "org.hibernate.collection.internal.PersistentSet.initializeFromCache(org.hibernate.persister.collection.CollectionPersister, java.io.Serializable, java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.empty()"], ["int", "org.hibernate.collection.internal.PersistentSet.size()"], ["boolean", "org.hibernate.collection.internal.PersistentSet.isEmpty()"], ["boolean", "org.hibernate.collection.internal.PersistentSet.contains(java.lang.Object)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentSet.iterator()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentSet.toArray()"], ["java.lang.Object[]", "org.hibernate.collection.internal.PersistentSet.toArray(java.lang.Object[])"], ["boolean", "org.hibernate.collection.internal.PersistentSet.add(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.remove(java.lang.Object)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.containsAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.addAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.retainAll(java.util.Collection)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.removeAll(java.util.Collection)"], ["void", "org.hibernate.collection.internal.PersistentSet.clear()"], ["java.lang.String", "org.hibernate.collection.internal.PersistentSet.toString()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet.readFrom(java.sql.ResultSet, org.hibernate.persister.collection.CollectionPersister, org.hibernate.loader.CollectionAliases, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentSet.beginRead()"], ["boolean", "org.hibernate.collection.internal.PersistentSet.endRead()"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentSet.entries(org.hibernate.persister.collection.CollectionPersister)"], ["java.io.Serializable", "org.hibernate.collection.internal.PersistentSet.disassemble(org.hibernate.persister.collection.CollectionPersister)"], ["java.util.Iterator", "org.hibernate.collection.internal.PersistentSet.getDeletes(org.hibernate.persister.collection.CollectionPersister, boolean)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.needsInserting(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.needsUpdating(java.lang.Object, int, org.hibernate.type.Type)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.isRowUpdatePossible()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet.getIndex(java.lang.Object, int, org.hibernate.persister.collection.CollectionPersister)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet.getElement(java.lang.Object)"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentSet.getSnapshotElement(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.equals(java.lang.Object)"], ["int", "org.hibernate.collection.internal.PersistentSet.hashCode()"], ["boolean", "org.hibernate.collection.internal.PersistentSet.entryExists(java.lang.Object, int)"], ["boolean", "org.hibernate.collection.internal.PersistentSet.isWrapper(java.lang.Object)"], ["org.hibernate.collection.internal.PersistentList$Add", "org.hibernate.collection.internal.PersistentList$Add(org.hibernate.collection.internal.PersistentList, int, java.lang.Object)"], ["void", "org.hibernate.collection.internal.PersistentList$Add.operate()"], ["boolean", "org.hibernate.collection.internal.PersistentMap$EntryIteratorProxy.hasNext()"], ["java.lang.Object", "org.hibernate.collection.internal.PersistentMap$EntryIteratorProxy.next()"], ["void", "org.hibernate.collection.internal.PersistentMap$EntryIteratorProxy.remove()"], ["void", "org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitEntity(org.hibernate.persister.walking.spi.AssociationVisitationStrategy, org.hibernate.persister.entity.EntityPersister)"], ["void", "org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitCollection(org.hibernate.persister.walking.spi.AssociationVisitationStrategy, org.hibernate.persister.collection.CollectionPersister)"], ["org.hibernate.persister.walking.spi.MetamodelGraphWalker", "org.hibernate.persister.walking.spi.MetamodelGraphWalker(org.hibernate.persister.walking.spi.AssociationVisitationStrategy, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["default", "org.hibernate.persister.walking.spi.AssociationAttributeDefinition.org.hibernate.type.Type getType()"], ["org.hibernate.persister.walking.spi.AssociationKey", "org.hibernate.persister.walking.spi.AssociationKey(java.lang.String, java.lang.String[])"], ["boolean", "org.hibernate.persister.walking.spi.AssociationKey.equals(java.lang.Object)"], ["int", "org.hibernate.persister.walking.spi.AssociationKey.hashCode()"], ["java.lang.String", "org.hibernate.persister.walking.spi.AssociationKey.toString()"], ["default", "org.hibernate.persister.walking.spi.CompositionDefinition.org.hibernate.type.Type getType()"], ["org.hibernate.persister.walking.spi.WalkingException", "org.hibernate.persister.walking.spi.WalkingException(java.lang.String)"], ["org.hibernate.persister.walking.spi.WalkingException", "org.hibernate.persister.walking.spi.WalkingException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature[]", "org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature.values()"], ["org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature", "org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$CompositionDefinitionAdapter.toString()"], ["org.hibernate.type.CompositeType", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$CompositionDefinitionAdapter.getType()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$CompositionDefinitionAdapter.getType()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$2.getAttributeDefinition()"], ["boolean", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$2.isEncapsulated()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$2.getEntityDefinition()"], ["java.lang.Class", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getSeparateIdentifierMappingClass()"], ["boolean", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.isEncapsulated()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getEntityDefinition()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getCompositeType()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getSource()"], ["java.lang.String", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getName()"], ["org.hibernate.type.CompositeType", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getType()"], ["boolean", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.isNullable()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$3.getType()"], ["org.hibernate.persister.walking.spi.AssociationKey", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getAssociationKey()"], ["org.hibernate.persister.walking.spi.AssociationAttributeDefinition$AssociationNature", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getAssociationNature()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.toEntityDefinition()"], ["org.hibernate.persister.walking.spi.AnyMappingDefinition", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.toAnyDefinition()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.toCollectionDefinition()"], ["org.hibernate.engine.FetchStrategy", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.determineFetchPlan(org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.loader.PropertyPath)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.determineCascadeStyle()"], ["org.hibernate.persister.spi.HydratedCompoundValueHandler", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getHydratedCompoundValueExtractor()"], ["java.lang.String", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getName()"], ["org.hibernate.type.AssociationType", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getType()"], ["boolean", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getSource()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$1.getType()"], ["java.lang.String", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$AttributeDefinitionAdapter.getName()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$AttributeDefinitionAdapter.getType()"], ["boolean", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$AttributeDefinitionAdapter.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$AttributeDefinitionAdapter.getSource()"], ["java.lang.String", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$AttributeDefinitionAdapter.toString()"], ["java.lang.String", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$2.getName()"], ["org.hibernate.type.CompositeType", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$2.getType()"], ["boolean", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$2.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$2.getSource()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$2.getType()"], ["java.lang.Object", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition$1.getDiscriminatorValue()"], ["java.lang.String", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition$1.getEntityName()"], ["java.lang.String", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$3.getName()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$3.getType()"], ["boolean", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$3.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1$3.getSource()"], ["boolean", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1.hasNext()"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1.next()"], ["void", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1.remove()"], ["java.lang.Object", "org.hibernate.persister.walking.internal.CompositionSingularSubAttributesHelper$1$1.next()"], ["org.hibernate.persister.walking.internal.StandardAnyTypeDefinition", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition(org.hibernate.type.AnyType, boolean)"], ["org.hibernate.type.AnyType", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition.getType()"], ["boolean", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition.isLazy()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition.getIdentifierType()"], ["org.hibernate.type.Type", "org.hibernate.persister.walking.internal.StandardAnyTypeDefinition.getDiscriminatorType()"], ["org.hibernate.engine.FetchStyle", "org.hibernate.persister.walking.internal.FetchStrategyHelper.determineFetchStyleByProfile(org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.persister.entity.EntityPersister, org.hibernate.loader.PropertyPath, int)"], ["org.hibernate.engine.FetchStyle", "org.hibernate.persister.walking.internal.FetchStrategyHelper.determineFetchStyleByMetadata(org.hibernate.FetchMode, org.hibernate.type.AssociationType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.FetchTiming", "org.hibernate.persister.walking.internal.FetchStrategyHelper.determineFetchTiming(org.hibernate.engine.FetchStyle, org.hibernate.type.AssociationType, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.persister.walking.internal.FetchStrategyHelper.isJoinFetched(org.hibernate.engine.FetchStrategy)"], ["org.hibernate.persister.walking.spi.AttributeDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$1.getAttributeDefinition()"], ["boolean", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$1.isEncapsulated()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper$1.getEntityDefinition()"], ["org.hibernate.persister.walking.spi.EntityIdentifierDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper.buildSimpleEncapsulatedIdentifierDefinition(org.hibernate.persister.entity.AbstractEntityPersister)"], ["org.hibernate.persister.walking.spi.EntityIdentifierDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper.buildEncapsulatedCompositeIdentifierDefinition(org.hibernate.persister.entity.AbstractEntityPersister)"], ["org.hibernate.persister.walking.spi.EntityIdentifierDefinition", "org.hibernate.persister.walking.internal.EntityIdentifierDefinitionHelper.buildNonEncapsulatedCompositeIdentifierDefinition(org.hibernate.persister.entity.AbstractEntityPersister)"], ["org.hibernate.persister.spi.UnknownPersisterException", "org.hibernate.persister.spi.UnknownPersisterException(java.lang.String)"], ["org.hibernate.persister.spi.UnknownPersisterException", "org.hibernate.persister.spi.UnknownPersisterException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.entity.AbstractEntityPersister$NoopCacheEntryHelper.getCacheEntryStructure()"], ["org.hibernate.cache.spi.entry.CacheEntry", "org.hibernate.persister.entity.AbstractEntityPersister$NoopCacheEntryHelper.buildCacheEntry(java.lang.Object, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.persister.entity.BasicEntityPropertyMapping", "org.hibernate.persister.entity.BasicEntityPropertyMapping(org.hibernate.persister.entity.AbstractEntityPersister)"], ["java.lang.String[]", "org.hibernate.persister.entity.BasicEntityPropertyMapping.getIdentifierColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.entity.BasicEntityPropertyMapping.getIdentifierColumnReaders()"], ["java.lang.String[]", "org.hibernate.persister.entity.BasicEntityPropertyMapping.getIdentifierColumnReaderTemplates()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.BasicEntityPropertyMapping.getType()"], ["java.lang.String[]", "org.hibernate.persister.entity.BasicEntityPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.entity.AbstractEntityPersister$StandardCacheEntryHelper.getCacheEntryStructure()"], ["org.hibernate.cache.spi.entry.CacheEntry", "org.hibernate.persister.entity.AbstractEntityPersister$StandardCacheEntryHelper.buildCacheEntry(java.lang.Object, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister$2.includeProperty(int)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister$SubstituteBracketSQLQueryParser.process()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getDiscriminatorColumnName()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getDiscriminatorColumnReaders()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getDiscriminatorColumnReaderTemplate()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isSubclassEntityName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getRootTableKeyColumnNames()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasSequentialSelect()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasRowId()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getTableNames()"], ["org.hibernate.persister.entity.AbstractEntityPersister", "org.hibernate.persister.entity.AbstractEntityPersister(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.EntityDataAccess, org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.canUseReferenceCacheEntries()"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.initializeLazyProperty(java.lang.String, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isBatchable()"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.persister.entity.AbstractEntityPersister.getNavigableRole()"], ["java.io.Serializable[]", "org.hibernate.persister.entity.AbstractEntityPersister.getQuerySpaces()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isBatchLoadable()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierColumnReaders()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierColumnReaderTemplates()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getVersionColumnName()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isCacheInvalidationRequired()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isLazyPropertiesCacheable()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.selectFragment(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierAliases(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyAliases(java.lang.String, int)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getDiscriminatorAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.identifierSelectFragment(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.propertySelectFragment(java.lang.String, java.lang.String, boolean)"], ["org.hibernate.sql.SelectFragment", "org.hibernate.persister.entity.AbstractEntityPersister.propertySelectFragmentFragment(java.lang.String, java.lang.String, boolean)"], ["java.lang.Object[]", "org.hibernate.persister.entity.AbstractEntityPersister.getDatabaseSnapshot(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.persister.entity.AbstractEntityPersister.getIdByUniqueKey(java.io.Serializable, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyUniqueness()"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.forceVersionIncrement(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.getCurrentVersion(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.lock(java.io.Serializable, java.lang.Object, java.lang.Object, org.hibernate.LockMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.lock(java.io.Serializable, java.lang.Object, java.lang.Object, org.hibernate.LockOptions, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getRootTableName()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getRootTableAlias(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getRootTableIdentifierColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.toColumns(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyColumnNames(java.lang.String)"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyTableNumber(java.lang.String)"], ["org.hibernate.persister.entity.Queryable$Declarer", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyDeclarer(java.lang.String)"], ["org.hibernate.persister.entity.DiscriminatorMetadata", "org.hibernate.persister.entity.AbstractEntityPersister.getTypeDiscriminatorMetadata()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.generateTableAlias(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.toColumns(java.lang.String, int)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyColumnNames(int)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyColumnWriters(int)"], ["org.hibernate.FetchMode", "org.hibernate.persister.entity.AbstractEntityPersister.getFetchMode(int)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.persister.entity.AbstractEntityPersister.getCascadeStyle(int)"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyType(int)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyName(int)"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.countSubclassProperties()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyColumnNames(int)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isDefinedOnSubclass(int)"], ["java.lang.String[][]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyFormulaTemplateClosure()"], ["java.lang.String[][]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyColumnReaderClosure()"], ["java.lang.String[][]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyColumnReaderTemplateClosure()"], ["int[]", "org.hibernate.persister.entity.AbstractEntityPersister.resolveAttributeIndexes(java.lang.String[])"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassColumnReaderTemplateClosure()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyColumnAliases(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassPropertyColumnNames(java.lang.String)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.loadByUniqueKey(java.lang.String, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyIndex(java.lang.String)"], ["java.lang.Object[]", "org.hibernate.persister.entity.AbstractEntityPersister.hydrate(java.sql.ResultSet, java.io.Serializable, java.lang.Object, org.hibernate.persister.entity.Loadable, java.lang.String[][], boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentitySelectString()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getSelectByUniqueKeyString(java.lang.String)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.update(java.io.Serializable, java.lang.Object[], int[], boolean, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.persister.entity.AbstractEntityPersister.insert(java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.insert(java.io.Serializable, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.delete(java.io.Serializable, java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.filterFragment(java.lang.String, java.util.Map)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.filterFragment(java.lang.String, java.util.Map, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.generateFilterConditionAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.oneToManyFilterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.oneToManyFilterFragment(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.fromJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.fromJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.fromJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.whereJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.whereJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.postInstantiate()"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.load(java.io.Serializable, java.lang.Object, org.hibernate.LockMode, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.load(java.io.Serializable, java.lang.Object, org.hibernate.LockOptions, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.initializeEnhancedEntityUsedAsProxy(java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.List", "org.hibernate.persister.entity.AbstractEntityPersister.multiLoad(java.io.Serializable[], org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.persister.entity.MultiLoadOptions)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.registerAffectingFetchProfile(java.lang.String)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isSubclassPropertyNullable(int)"], ["int[]", "org.hibernate.persister.entity.AbstractEntityPersister.findDirty(java.lang.Object[], java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.persister.entity.AbstractEntityPersister.findModified(java.lang.Object[], java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.persister.entity.AbstractEntityPersister.getFactory()"], ["org.hibernate.tuple.entity.EntityMetamodel", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityMetamodel()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.canReadFromCache()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.canWriteToCache()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasCache()"], ["org.hibernate.cache.spi.access.EntityDataAccess", "org.hibernate.persister.entity.AbstractEntityPersister.getCacheAccessStrategy()"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.entity.AbstractEntityPersister.getCacheEntryStructure()"], ["org.hibernate.cache.spi.entry.CacheEntry", "org.hibernate.persister.entity.AbstractEntityPersister.buildCacheEntry(java.lang.Object, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasNaturalIdCache()"], ["org.hibernate.cache.spi.access.NaturalIdDataAccess", "org.hibernate.persister.entity.AbstractEntityPersister.getNaturalIdCacheAccessStrategy()"], ["java.util.Comparator", "org.hibernate.persister.entity.AbstractEntityPersister.getVersionComparator()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityName()"], ["org.hibernate.type.EntityType", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityType()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isPolymorphic()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isInherited()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasCascades()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasIdentifierProperty()"], ["org.hibernate.type.VersionType", "org.hibernate.persister.entity.AbstractEntityPersister.getVersionType()"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.getVersionProperty()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isVersioned()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isIdentifierAssignedByInsert()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasLazyProperties()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.afterReassociate(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isTransient(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasCollections()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasMutableProperties()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isMutable()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isAbstract()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasSubclasses()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasProxy()"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierGenerator()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getRootEntityName()"], ["org.hibernate.metadata.ClassMetadata", "org.hibernate.persister.entity.AbstractEntityPersister.getClassMetadata()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getMappedSuperclass()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isExplicitPolymorphism()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.canExtractIdOutOfEntity()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getKeyColumnNames()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getName()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isCollection()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.consumesEntityAlias()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.consumesCollectionAlias()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyType(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister.getType()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isSelectBeforeUpdateRequired()"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.createProxy(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.toString()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.selectFragment(org.hibernate.persister.entity.Joinable, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isInstrumented()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasInsertGeneratedProperties()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasUpdateGeneratedProperties()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isVersionPropertyGenerated()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isVersionPropertyInsertable()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.afterInitialize(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyNames()"], ["org.hibernate.type.Type[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyTypes()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyLaziness()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyUpdateability()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyCheckability()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getNonLazyPropertyUpdateability()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyInsertability()"], ["org.hibernate.engine.spi.ValueInclusion[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyInsertGenerationInclusions()"], ["org.hibernate.engine.spi.ValueInclusion[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyUpdateGenerationInclusions()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyNullability()"], ["boolean[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyVersionability()"], ["org.hibernate.engine.spi.CascadeStyle[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyCascadeStyles()"], ["java.lang.Class", "org.hibernate.persister.entity.AbstractEntityPersister.getMappedClass()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.implementsLifecycle()"], ["java.lang.Class", "org.hibernate.persister.entity.AbstractEntityPersister.getConcreteProxyClass()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(java.lang.Object, java.lang.Object[])"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValue(java.lang.Object, int, java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyValues(java.lang.Object)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyValue(java.lang.Object, int)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyValue(java.lang.Object, java.lang.String)"], ["java.io.Serializable", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifier(java.lang.Object)"], ["java.io.Serializable", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifier(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.setIdentifier(java.lang.Object, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.getVersion(java.lang.Object)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister.instantiate(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isInstance(java.lang.Object)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasUninitializedLazyProperties(java.lang.Object)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.resetIdentifier(java.lang.Object, java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.persister.entity.AbstractEntityPersister.getSubclassEntityPersister(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.isMultiTable()"], ["java.lang.Object[]", "org.hibernate.persister.entity.AbstractEntityPersister.getPropertyValuesToInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.processInsertGeneratedProperties(java.io.Serializable, java.lang.Object, java.lang.Object[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.processUpdateGeneratedProperties(java.io.Serializable, java.lang.Object, java.lang.Object[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierPropertyName()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister.getIdentifierType()"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasSubselectLoadableCollections()"], ["int[]", "org.hibernate.persister.entity.AbstractEntityPersister.getNaturalIdentifierProperties()"], ["java.lang.Object[]", "org.hibernate.persister.entity.AbstractEntityPersister.getNaturalIdentifierSnapshot(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.io.Serializable", "org.hibernate.persister.entity.AbstractEntityPersister.loadEntityIdByNaturalId(java.lang.Object[], org.hibernate.LockOptions, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.hasNaturalIdentifier()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValue(java.lang.Object, java.lang.String, java.lang.Object)"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.getTableId(java.lang.String, java.lang.String[])"], ["org.hibernate.EntityMode", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityMode()"], ["org.hibernate.tuple.entity.EntityTuplizer", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityTuplizer()"], ["org.hibernate.bytecode.spi.BytecodeEnhancementMetadata", "org.hibernate.persister.entity.AbstractEntityPersister.getInstrumentationMetadata()"], ["org.hibernate.bytecode.spi.BytecodeEnhancementMetadata", "org.hibernate.persister.entity.AbstractEntityPersister.getBytecodeEnhancementMetadata()"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister.getTableAliasForColumn(java.lang.String, java.lang.String)"], ["int", "org.hibernate.persister.entity.AbstractEntityPersister.determineTableNumberForColumn(java.lang.String)"], ["org.hibernate.engine.spi.EntityEntryFactory", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityEntryFactory()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister.generateEntityDefinition()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityPersister()"], ["org.hibernate.persister.walking.spi.EntityIdentifierDefinition", "org.hibernate.persister.entity.AbstractEntityPersister.getEntityKeyDefinition()"], ["java.lang.String[][]", "org.hibernate.persister.entity.AbstractEntityPersister.getPolymorphicJoinColumns(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister.canOmitSuperclassTableJoin()"], ["org.hibernate.persister.entity.UnionSubclassEntityPersister", "org.hibernate.persister.entity.UnionSubclassEntityPersister(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.EntityDataAccess, org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["java.io.Serializable[]", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getQuerySpaces()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getTableName()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getDiscriminatorType()"], ["java.lang.Object", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getDiscriminatorValue()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getDiscriminatorSQLValue()"], ["java.lang.String[]", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassClosure()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassForDiscriminatorValue(java.lang.Object)"], ["java.io.Serializable[]", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getPropertySpaces()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.fromTableFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.filterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassPropertyTableName(int)"], ["int", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassPropertyTableNumber(java.lang.String)"], ["boolean", "org.hibernate.persister.entity.UnionSubclassEntityPersister.isMultiTable()"], ["int", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getTableSpan()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassTableName(int)"], ["int", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getSubclassTableSpan()"], ["java.lang.String", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getPropertyTableName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getConstraintOrderedTableNameClosure()"], ["java.lang.String[][]", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getContraintOrderedTableKeyColumnClosure()"], ["org.hibernate.internal.FilterAliasGenerator", "org.hibernate.persister.entity.UnionSubclassEntityPersister.getFilterAliasGenerator(java.lang.String)"], ["boolean", "org.hibernate.persister.entity.AbstractEntityPersister$1.includeProperty(int)"], ["org.hibernate.persister.entity.Queryable$Declarer", "org.hibernate.persister.entity.Queryable$Declarer(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.Queryable$Declarer.toString()"], ["org.hibernate.persister.entity.DiscriminatorType", "org.hibernate.persister.entity.DiscriminatorType(org.hibernate.type.Type, org.hibernate.persister.entity.Loadable)"], ["java.lang.Class", "org.hibernate.persister.entity.DiscriminatorType.getReturnedClass()"], ["java.lang.String", "org.hibernate.persister.entity.DiscriminatorType.getName()"], ["boolean", "org.hibernate.persister.entity.DiscriminatorType.isMutable()"], ["java.lang.Object", "org.hibernate.persister.entity.DiscriminatorType.nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["java.lang.Object", "org.hibernate.persister.entity.DiscriminatorType.nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.persister.entity.DiscriminatorType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.entity.DiscriminatorType.nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.entity.DiscriminatorType.toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.DiscriminatorType.deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.persister.entity.DiscriminatorType.replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.util.Map)"], ["boolean[]", "org.hibernate.persister.entity.DiscriminatorType.toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.persister.entity.DiscriminatorType.isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int[]", "org.hibernate.persister.entity.DiscriminatorType.sqlTypes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.persister.entity.DiscriminatorType.dictatedSizes(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.engine.jdbc.Size[]", "org.hibernate.persister.entity.DiscriminatorType.defaultSizes(org.hibernate.engine.spi.Mapping)"], ["int", "org.hibernate.persister.entity.DiscriminatorType.getColumnSpan(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.persister.entity.NamedQueryLoader", "org.hibernate.persister.entity.NamedQueryLoader(java.lang.String, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object", "org.hibernate.persister.entity.NamedQueryLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.LockOptions)"], ["java.lang.Object", "org.hibernate.persister.entity.NamedQueryLoader.load(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.entity.AbstractEntityPersister$ReferenceCacheEntryHelper.getCacheEntryStructure()"], ["org.hibernate.cache.spi.entry.CacheEntry", "org.hibernate.persister.entity.AbstractEntityPersister$ReferenceCacheEntryHelper.buildCacheEntry(java.lang.Object, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.persister.entity.Joinable.java.lang.String fromJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.entity.AbstractEntityPersister$StructuredCacheEntryHelper.getCacheEntryStructure()"], ["org.hibernate.cache.spi.entry.CacheEntry", "org.hibernate.persister.entity.AbstractEntityPersister$StructuredCacheEntryHelper.buildCacheEntry(java.lang.Object, java.lang.Object[], java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.persister.entity.JoinedSubclassEntityPersister", "org.hibernate.persister.entity.JoinedSubclassEntityPersister(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.EntityDataAccess, org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getSubclassPropertyTableName(int)"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorType()"], ["java.lang.Object", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorValue()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorSQLValue()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorColumnName()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorColumnReaders()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getDiscriminatorColumnReaderTemplate()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getSubclassForDiscriminatorValue(java.lang.Object)"], ["java.io.Serializable[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getPropertySpaces()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.fromTableFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getTableName()"], ["void", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.addDiscriminatorToSelect(org.hibernate.sql.SelectFragment, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.filterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.filterFragment(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.generateFilterConditionAlias(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getIdentifierColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getIdentifierColumnReaderTemplates()"], ["java.lang.String[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getIdentifierColumnReaders()"], ["java.lang.String[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.toColumns(java.lang.String, java.lang.String)"], ["int", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getTableSpan()"], ["boolean", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.isMultiTable()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getSubclassTableName(int)"], ["int", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getSubclassTableSpan()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getPropertyTableName(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getConstraintOrderedTableNameClosure()"], ["java.lang.String[][]", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getContraintOrderedTableKeyColumnClosure()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getRootTableName()"], ["java.lang.String", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getRootTableAlias(java.lang.String)"], ["org.hibernate.persister.entity.Queryable$Declarer", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getSubclassPropertyDeclarer(java.lang.String)"], ["int", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.determineTableNumberForColumn(java.lang.String)"], ["org.hibernate.internal.FilterAliasGenerator", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.getFilterAliasGenerator(java.lang.String)"], ["boolean", "org.hibernate.persister.entity.JoinedSubclassEntityPersister.canOmitSuperclassTableJoin()"], ["default", "org.hibernate.persister.entity.EntityPersister.java.lang.Object initializeEnhancedEntityUsedAsProxy(java.lang.Object, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.persister.entity.EntityPersister.org.hibernate.bytecode.spi.BytecodeEnhancementMetadata getBytecodeEnhancementMetadata()"], ["default", "org.hibernate.persister.entity.EntityPersister.boolean canIdentityInsertBeDelayed()"], ["void", "org.hibernate.persister.entity.AbstractEntityPersister$4.bindValues(java.sql.PreparedStatement)"], ["java.lang.Object", "org.hibernate.persister.entity.AbstractEntityPersister$4.getEntity()"], ["org.hibernate.persister.entity.SingleTableEntityPersister", "org.hibernate.persister.entity.SingleTableEntityPersister(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.EntityDataAccess, org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorColumnName()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorColumnReaders()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorColumnReaderTemplate()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getTableName()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorType()"], ["java.lang.Object", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorValue()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getDiscriminatorSQLValue()"], ["java.lang.String[]", "org.hibernate.persister.entity.SingleTableEntityPersister.getSubclassClosure()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getSubclassForDiscriminatorValue(java.lang.Object)"], ["java.io.Serializable[]", "org.hibernate.persister.entity.SingleTableEntityPersister.getPropertySpaces()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.fromTableFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.filterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.oneToManyFilterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.oneToManyFilterFragment(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.filterFragment(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getSubclassPropertyTableName(int)"], ["int", "org.hibernate.persister.entity.SingleTableEntityPersister.getTableSpan()"], ["boolean", "org.hibernate.persister.entity.SingleTableEntityPersister.hasSequentialSelect()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getSubclassTableName(int)"], ["int", "org.hibernate.persister.entity.SingleTableEntityPersister.getSubclassTableSpan()"], ["java.lang.String", "org.hibernate.persister.entity.SingleTableEntityPersister.getPropertyTableName(java.lang.String)"], ["boolean", "org.hibernate.persister.entity.SingleTableEntityPersister.isMultiTable()"], ["java.lang.String[]", "org.hibernate.persister.entity.SingleTableEntityPersister.getConstraintOrderedTableNameClosure()"], ["java.lang.String[][]", "org.hibernate.persister.entity.SingleTableEntityPersister.getContraintOrderedTableKeyColumnClosure()"], ["org.hibernate.internal.FilterAliasGenerator", "org.hibernate.persister.entity.SingleTableEntityPersister.getFilterAliasGenerator(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.entity.AbstractEntityPersister$3.getSqlFragment(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractEntityPersister$3.getResolutionType()"], ["org.hibernate.persister.entity.AbstractPropertyMapping", "org.hibernate.persister.entity.AbstractPropertyMapping()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.getIdentifierColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.getIdentifierColumnReaderTemplates()"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.getIdentifierColumnReaders()"], ["org.hibernate.type.Type", "org.hibernate.persister.entity.AbstractPropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.getColumnNames(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.entity.AbstractPropertyMapping.toColumns(java.lang.String)"], ["org.hibernate.persister.internal.StandardPersisterClassResolver", "org.hibernate.persister.internal.StandardPersisterClassResolver()"], ["java.lang.Class<? extends org.hibernate.persister.entity.EntityPersister>", "org.hibernate.persister.internal.StandardPersisterClassResolver.getEntityPersisterClass(org.hibernate.mapping.PersistentClass)"], ["java.lang.Class<? extends org.hibernate.persister.entity.EntityPersister>", "org.hibernate.persister.internal.StandardPersisterClassResolver.singleTableEntityPersister()"], ["java.lang.Class<? extends org.hibernate.persister.entity.EntityPersister>", "org.hibernate.persister.internal.StandardPersisterClassResolver.joinedSubclassEntityPersister()"], ["java.lang.Class<? extends org.hibernate.persister.entity.EntityPersister>", "org.hibernate.persister.internal.StandardPersisterClassResolver.unionSubclassEntityPersister()"], ["java.lang.Class<? extends org.hibernate.persister.collection.CollectionPersister>", "org.hibernate.persister.internal.StandardPersisterClassResolver.getCollectionPersisterClass(org.hibernate.mapping.Collection)"], ["org.hibernate.persister.internal.PersisterFactoryImpl", "org.hibernate.persister.internal.PersisterFactoryImpl()"], ["void", "org.hibernate.persister.internal.PersisterFactoryImpl.injectServices(org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.EntityDataAccess, org.hibernate.cache.spi.access.NaturalIdDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.persister.internal.PersisterFactoryImpl.createCollectionPersister(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.CollectionDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["org.hibernate.persister.internal.PersisterClassResolverInitiator", "org.hibernate.persister.internal.PersisterClassResolverInitiator()"], ["org.hibernate.persister.spi.PersisterClassResolver", "org.hibernate.persister.internal.PersisterClassResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.persister.internal.PersisterClassResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.persister.internal.PersisterFactoryInitiator", "org.hibernate.persister.internal.PersisterFactoryInitiator()"], ["org.hibernate.persister.spi.PersisterFactory", "org.hibernate.persister.internal.PersisterFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.persister.internal.PersisterFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister$ColumnMapperImpl$1.getFormulaFragment()"], ["org.hibernate.persister.collection.AbstractCollectionPersister", "org.hibernate.persister.collection.AbstractCollectionPersister(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.CollectionDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.postInstantiate()"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.persister.collection.AbstractCollectionPersister.getNavigableRole()"], ["org.hibernate.cache.spi.access.CollectionDataAccess", "org.hibernate.persister.collection.AbstractCollectionPersister.getCacheAccessStrategy()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasCache()"], ["org.hibernate.type.CollectionType", "org.hibernate.persister.collection.AbstractCollectionPersister.getCollectionType()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getSQLOrderByString(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getManyToManyOrderByString(java.lang.String)"], ["org.hibernate.FetchMode", "org.hibernate.persister.collection.AbstractCollectionPersister.getFetchMode()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasOrdering()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasManyToManyOrdering()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasWhere()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.getKeyType()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexType()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementType()"], ["java.lang.Class", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementClass()"], ["java.lang.Object", "org.hibernate.persister.collection.AbstractCollectionPersister.readElement(java.sql.ResultSet, java.lang.Object, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.collection.AbstractCollectionPersister.readIndex(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.collection.AbstractCollectionPersister.readIdentifier(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.collection.AbstractCollectionPersister.readKey(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["int", "org.hibernate.persister.collection.AbstractCollectionPersister.writeIdentifier(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isPrimitiveArray()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isArray()"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getKeyColumnAliases(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementColumnAliases(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexColumnAliases(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getIdentifierColumnAlias(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getIdentifierColumnName()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.selectFragment(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexFormulas()"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexColumnNames(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementColumnNames(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementColumnNames()"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getKeyColumnNames()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasIndex()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isLazy()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isInverse()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getTableName()"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.remove(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.recreate(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getRole()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getOwnerEntityName()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.persister.collection.AbstractCollectionPersister.getOwnerEntityPersister()"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.persister.collection.AbstractCollectionPersister.getIdentifierGenerator()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.getIdentifierType()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.hasOrphanDelete()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.toType(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getManyToManyFilterFragment(java.lang.String, java.util.Map)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.toColumns(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister.getType()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getName()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementPersister()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isCollection()"], ["java.io.Serializable[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getCollectionSpaces()"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.updateRows(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.processQueuedOps(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.metadata.CollectionMetadata", "org.hibernate.persister.collection.AbstractCollectionPersister.getCollectionMetadata()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.persister.collection.AbstractCollectionPersister.getFactory()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.filterFragment(java.lang.String, java.util.Map)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.filterFragment(java.lang.String, java.util.Map, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.oneToManyFilterFragment(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.oneToManyFilterFragment(java.lang.String, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.toString()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isVersioned()"], ["org.hibernate.cache.spi.entry.CacheEntryStructure", "org.hibernate.persister.collection.AbstractCollectionPersister.getCacheEntryStructure()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isAffectedByEnabledFilters(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isSubselectLoadable()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isMutable()"], ["java.lang.String[]", "org.hibernate.persister.collection.AbstractCollectionPersister.getCollectionPropertyColumnAliases(java.lang.String, java.lang.String)"], ["void", "org.hibernate.persister.collection.AbstractCollectionPersister.initCollectionPropertyMap()"], ["int", "org.hibernate.persister.collection.AbstractCollectionPersister.getSize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.indexExists(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.elementExists(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementByIndex(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister.isExtraLazy()"], ["org.hibernate.loader.collection.CollectionInitializer", "org.hibernate.persister.collection.AbstractCollectionPersister.getInitializer()"], ["int", "org.hibernate.persister.collection.AbstractCollectionPersister.getBatchSize()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister.getMappedByProperty()"], ["org.hibernate.persister.collection.CollectionPersister", "org.hibernate.persister.collection.AbstractCollectionPersister.getCollectionPersister()"], ["org.hibernate.persister.walking.spi.CollectionIndexDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister.getIndexDefinition()"], ["org.hibernate.persister.walking.spi.CollectionElementDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister.getElementDefinition()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$1.getCollectionDefinition()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister$1.getType()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$1.toEntityDefinition()"], ["org.hibernate.persister.walking.spi.CompositionDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$1.toCompositeDefinition()"], ["org.hibernate.persister.walking.spi.AnyMappingDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$1.toAnyMappingDefinition()"], ["boolean", "org.hibernate.persister.collection.OneToManyPersister.isCascadeDeleteEnabled()"], ["org.hibernate.persister.collection.OneToManyPersister", "org.hibernate.persister.collection.OneToManyPersister(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.CollectionDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["void", "org.hibernate.persister.collection.OneToManyPersister.recreate(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.persister.collection.OneToManyPersister.insertRows(org.hibernate.collection.spi.PersistentCollection, java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.persister.collection.OneToManyPersister.consumesEntityAlias()"], ["boolean", "org.hibernate.persister.collection.OneToManyPersister.consumesCollectionAlias()"], ["boolean", "org.hibernate.persister.collection.OneToManyPersister.isOneToMany()"], ["boolean", "org.hibernate.persister.collection.OneToManyPersister.isManyToMany()"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.selectFragment(org.hibernate.persister.entity.Joinable, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.fromJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.fromJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.whereJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.whereJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.getTableName()"], ["java.lang.String", "org.hibernate.persister.collection.OneToManyPersister.filterFragment(java.lang.String)"], ["java.lang.Object", "org.hibernate.persister.collection.OneToManyPersister.getElementByIndex(java.io.Serializable, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.internal.FilterAliasGenerator", "org.hibernate.persister.collection.OneToManyPersister.getFilterAliasGenerator(java.lang.String)"], ["org.hibernate.persister.collection.NamedQueryCollectionInitializer", "org.hibernate.persister.collection.NamedQueryCollectionInitializer(java.lang.String, org.hibernate.persister.collection.CollectionPersister)"], ["void", "org.hibernate.persister.collection.NamedQueryCollectionInitializer.initialize(java.io.Serializable, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.getName()"], ["org.hibernate.type.CompositeType", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.getType()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.getSource()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.getCollectionDefinition()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister$1$1.getType()"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister$StandardOrderByAliasResolver.resolveTableAlias(java.lang.String)"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$2.getCollectionDefinition()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister$2.getType()"], ["org.hibernate.persister.walking.spi.AnyMappingDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$2.toAnyMappingDefinition()"], ["org.hibernate.persister.walking.spi.EntityDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$2.toEntityDefinition()"], ["org.hibernate.persister.walking.spi.CompositeCollectionElementDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$2.toCompositeElementDefinition()"], ["org.hibernate.persister.collection.ElementPropertyMapping", "org.hibernate.persister.collection.ElementPropertyMapping(java.lang.String[], org.hibernate.type.Type)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.ElementPropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.ElementPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.ElementPropertyMapping.toColumns(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.ElementPropertyMapping.getType()"], ["org.hibernate.sql.ordering.antlr.SqlValueReference[]", "org.hibernate.persister.collection.AbstractCollectionPersister$ColumnMapperImpl.map(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.getName()"], ["org.hibernate.type.CompositeType", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.getType()"], ["boolean", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.isNullable()"], ["org.hibernate.persister.walking.spi.AttributeSource", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.getSource()"], ["org.hibernate.persister.walking.spi.CollectionDefinition", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.getCollectionDefinition()"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.AbstractCollectionPersister$2$1.getType()"], ["org.hibernate.persister.collection.CompositeElementPropertyMapping", "org.hibernate.persister.collection.CompositeElementPropertyMapping(java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[], org.hibernate.type.CompositeType, org.hibernate.engine.spi.Mapping)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.CompositeElementPropertyMapping.getType()"], ["org.hibernate.persister.collection.CollectionPropertyMapping", "org.hibernate.persister.collection.CollectionPropertyMapping(org.hibernate.persister.collection.QueryableCollection)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.CollectionPropertyMapping.toType(java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.CollectionPropertyMapping.toColumns(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.hibernate.persister.collection.CollectionPropertyMapping.toColumns(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.persister.collection.CollectionPropertyMapping.getType()"], ["boolean", "org.hibernate.persister.collection.BasicCollectionPersister.isCascadeDeleteEnabled()"], ["org.hibernate.persister.collection.BasicCollectionPersister", "org.hibernate.persister.collection.BasicCollectionPersister(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.CollectionDataAccess, org.hibernate.persister.spi.PersisterCreationContext)"], ["boolean", "org.hibernate.persister.collection.BasicCollectionPersister.consumesEntityAlias()"], ["boolean", "org.hibernate.persister.collection.BasicCollectionPersister.consumesCollectionAlias()"], ["boolean", "org.hibernate.persister.collection.BasicCollectionPersister.isOneToMany()"], ["boolean", "org.hibernate.persister.collection.BasicCollectionPersister.isManyToMany()"], ["java.lang.String", "org.hibernate.persister.collection.BasicCollectionPersister.selectFragment(org.hibernate.persister.entity.Joinable, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.BasicCollectionPersister.fromJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.BasicCollectionPersister.fromJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["java.lang.String", "org.hibernate.persister.collection.BasicCollectionPersister.whereJoinFragment(java.lang.String, boolean, boolean)"], ["java.lang.String", "org.hibernate.persister.collection.BasicCollectionPersister.whereJoinFragment(java.lang.String, boolean, boolean, java.util.Set<java.lang.String>)"], ["org.hibernate.internal.FilterAliasGenerator", "org.hibernate.persister.collection.BasicCollectionPersister.getFilterAliasGenerator(java.lang.String)"], ["java.lang.String", "org.hibernate.persister.collection.AbstractCollectionPersister$ColumnMapperImpl$2.getColumnName()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.context.spi.AbstractCurrentSessionContext.factory()"], ["org.hibernate.context.TenantIdentifierMismatchException", "org.hibernate.context.TenantIdentifierMismatchException(java.lang.String)"], ["org.hibernate.context.TenantIdentifierMismatchException", "org.hibernate.context.TenantIdentifierMismatchException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.context.internal.JTASessionContext", "org.hibernate.context.internal.JTASessionContext(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.Session", "org.hibernate.context.internal.JTASessionContext.currentSession()"], ["org.hibernate.context.internal.ThreadLocalSessionContext", "org.hibernate.context.internal.ThreadLocalSessionContext(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.Session", "org.hibernate.context.internal.ThreadLocalSessionContext.currentSession()"], ["void", "org.hibernate.context.internal.ThreadLocalSessionContext.bind(org.hibernate.Session)"], ["org.hibernate.Session", "org.hibernate.context.internal.ThreadLocalSessionContext.unbind(org.hibernate.SessionFactory)"], ["org.hibernate.context.internal.ManagedSessionContext", "org.hibernate.context.internal.ManagedSessionContext(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.Session", "org.hibernate.context.internal.ManagedSessionContext.currentSession()"], ["boolean", "org.hibernate.context.internal.ManagedSessionContext.hasBind(org.hibernate.SessionFactory)"], ["org.hibernate.Session", "org.hibernate.context.internal.ManagedSessionContext.bind(org.hibernate.Session)"], ["org.hibernate.Session", "org.hibernate.context.internal.ManagedSessionContext.unbind(org.hibernate.SessionFactory)"], ["org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper", "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper(org.hibernate.context.internal.ThreadLocalSessionContext, org.hibernate.Session)"], ["java.lang.Object", "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["void", "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.setWrapped(org.hibernate.Session)"], ["org.hibernate.context.internal.JTASessionContext$CleanupSync", "org.hibernate.context.internal.JTASessionContext$CleanupSync(java.lang.Object, org.hibernate.context.internal.JTASessionContext)"], ["void", "org.hibernate.context.internal.JTASessionContext$CleanupSync.beforeCompletion()"], ["void", "org.hibernate.context.internal.JTASessionContext$CleanupSync.afterCompletion(int)"], ["org.hibernate.context.internal.ThreadLocalSessionContext$CleanupSync", "org.hibernate.context.internal.ThreadLocalSessionContext$CleanupSync(org.hibernate.SessionFactory)"], ["void", "org.hibernate.context.internal.ThreadLocalSessionContext$CleanupSync.beforeCompletion()"], ["void", "org.hibernate.context.internal.ThreadLocalSessionContext$CleanupSync.afterCompletion(int)"], ["org.hibernate.MappingNotFoundException", "org.hibernate.MappingNotFoundException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"], ["org.hibernate.MappingNotFoundException", "org.hibernate.MappingNotFoundException(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.MappingNotFoundException", "org.hibernate.MappingNotFoundException(java.lang.String, java.lang.String)"], ["org.hibernate.MappingNotFoundException", "org.hibernate.MappingNotFoundException(java.lang.String, java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.hibernate.MappingNotFoundException.getType()"], ["java.lang.String", "org.hibernate.MappingNotFoundException.getPath()"], ["org.hibernate.transform.AliasToBeanConstructorResultTransformer", "org.hibernate.transform.AliasToBeanConstructorResultTransformer(java.lang.reflect.Constructor)"], ["java.lang.Object", "org.hibernate.transform.AliasToBeanConstructorResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["java.util.List", "org.hibernate.transform.AliasToBeanConstructorResultTransformer.transformList(java.util.List)"], ["int", "org.hibernate.transform.AliasToBeanConstructorResultTransformer.hashCode()"], ["boolean", "org.hibernate.transform.AliasToBeanConstructorResultTransformer.equals(java.lang.Object)"], ["org.hibernate.transform.ResultTransformer", "org.hibernate.transform.Transformers.aliasToBean(java.lang.Class)"], ["boolean", "org.hibernate.transform.DistinctResultTransformer$Identity.equals(java.lang.Object)"], ["int", "org.hibernate.transform.DistinctResultTransformer$Identity.hashCode()"], ["java.lang.Object", "org.hibernate.transform.AliasToEntityMapResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["boolean", "org.hibernate.transform.AliasToEntityMapResultTransformer.isTransformedValueATupleElement(java.lang.String[], int)"], ["org.hibernate.transform.CacheableResultTransformer", "org.hibernate.transform.CacheableResultTransformer.create(org.hibernate.transform.ResultTransformer, java.lang.String[], boolean[])"], ["java.lang.Object", "org.hibernate.transform.CacheableResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["java.util.List", "org.hibernate.transform.CacheableResultTransformer.retransformResults(java.util.List, java.lang.String[], org.hibernate.transform.ResultTransformer, boolean[])"], ["java.util.List", "org.hibernate.transform.CacheableResultTransformer.untransformToTuples(java.util.List)"], ["org.hibernate.type.Type[]", "org.hibernate.transform.CacheableResultTransformer.getCachedResultTypes(org.hibernate.type.Type[])"], ["java.util.List", "org.hibernate.transform.CacheableResultTransformer.transformList(java.util.List)"], ["boolean", "org.hibernate.transform.CacheableResultTransformer.equals(java.lang.Object)"], ["int", "org.hibernate.transform.CacheableResultTransformer.hashCode()"], ["org.hibernate.transform.AliasedTupleSubsetResultTransformer", "org.hibernate.transform.AliasedTupleSubsetResultTransformer()"], ["boolean[]", "org.hibernate.transform.AliasedTupleSubsetResultTransformer.includeInTransform(java.lang.String[], int)"], ["java.util.List", "org.hibernate.transform.DistinctResultTransformer.transformList(java.util.List)"], ["java.lang.Object", "org.hibernate.transform.PassThroughResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["boolean", "org.hibernate.transform.PassThroughResultTransformer.isTransformedValueATupleElement(java.lang.String[], int)"], ["boolean[]", "org.hibernate.transform.PassThroughResultTransformer.includeInTransform(java.lang.String[], int)"], ["org.hibernate.transform.BasicTransformerAdapter", "org.hibernate.transform.BasicTransformerAdapter()"], ["java.lang.Object", "org.hibernate.transform.BasicTransformerAdapter.transformTuple(java.lang.Object[], java.lang.String[])"], ["java.util.List", "org.hibernate.transform.BasicTransformerAdapter.transformList(java.util.List)"], ["org.hibernate.transform.AliasToBeanResultTransformer", "org.hibernate.transform.AliasToBeanResultTransformer(java.lang.Class)"], ["boolean", "org.hibernate.transform.AliasToBeanResultTransformer.isTransformedValueATupleElement(java.lang.String[], int)"], ["java.lang.Object", "org.hibernate.transform.AliasToBeanResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["boolean", "org.hibernate.transform.AliasToBeanResultTransformer.equals(java.lang.Object)"], ["int", "org.hibernate.transform.AliasToBeanResultTransformer.hashCode()"], ["java.lang.Object", "org.hibernate.transform.RootEntityResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["boolean", "org.hibernate.transform.RootEntityResultTransformer.isTransformedValueATupleElement(java.lang.String[], int)"], ["boolean[]", "org.hibernate.transform.RootEntityResultTransformer.includeInTransform(java.lang.String[], int)"], ["java.lang.Object", "org.hibernate.transform.ToListResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["java.lang.Object", "org.hibernate.transform.DistinctRootEntityResultTransformer.transformTuple(java.lang.Object[], java.lang.String[])"], ["java.util.List", "org.hibernate.transform.DistinctRootEntityResultTransformer.transformList(java.util.List)"], ["boolean[]", "org.hibernate.transform.DistinctRootEntityResultTransformer.includeInTransform(java.lang.String[], int)"], ["boolean", "org.hibernate.transform.DistinctRootEntityResultTransformer.isTransformedValueATupleElement(java.lang.String[], int)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$4.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$4.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$7.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$7.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.InformixDialect", "org.hibernate.dialect.InformixDialect()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], boolean)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getAddPrimaryKeyConstraintString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getSelectSequenceNextValString(java.lang.String)"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.InformixDialect.getSequenceInformationExtractor()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.InformixDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.InformixDialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsLimitOffset()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getLimitString(java.lang.String, int, int)"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsVariableLimit()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.InformixDialect.getViolatedConstraintNameExtracter()"], ["boolean", "org.hibernate.dialect.InformixDialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.InformixDialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.getCurrentTimestampSelectString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.InformixDialect.getDefaultMultiTableBulkIdStrategy()"], ["org.hibernate.dialect.unique.UniqueDelegate", "org.hibernate.dialect.InformixDialect.getUniqueDelegate()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.InformixDialect.getIdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect.toBooleanValueString(boolean)"], ["java.lang.String", "org.hibernate.dialect.DB2390Dialect$2.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.DB2390Dialect$2.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect$2.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.DB2390Dialect$2.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect$2.supportsVariableLimit()"], ["org.hibernate.dialect.SybaseDialect", "org.hibernate.dialect.SybaseDialect()"], ["int", "org.hibernate.dialect.SybaseDialect.getInExpressionCountLimit()"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getNullColumnString()"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getCurrentSchemaCommand()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsPartitionBy()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.SybaseDialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsTuplesInSubqueries()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.SybaseDialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["boolean", "org.hibernate.dialect.SybaseDialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsEmptyInList()"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getSelectGUIDString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.SybaseDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.SybaseDialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.SybaseDialect.supportsCurrentTimestampSelection()"], ["java.sql.ResultSet", "org.hibernate.dialect.SybaseDialect.getResultSet(java.sql.CallableStatement)"], ["int", "org.hibernate.dialect.SybaseDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map)"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.SybaseDialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.SybaseDialect.getAddColumnString()"], ["org.hibernate.dialect.FrontBaseDialect", "org.hibernate.dialect.FrontBaseDialect()"], ["java.lang.String", "org.hibernate.dialect.FrontBaseDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.FrontBaseDialect.getCascadeConstraintsString()"], ["boolean", "org.hibernate.dialect.FrontBaseDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.FrontBaseDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.FrontBaseDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.FrontBaseDialect.isCurrentTimestampSelectStringCallable()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.FrontBaseDialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["org.hibernate.dialect.DB297Dialect", "org.hibernate.dialect.DB297Dialect()"], ["java.lang.String", "org.hibernate.dialect.DB297Dialect.getCrossJoinSeparator()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.DB297Dialect.getDefaultMultiTableBulkIdStrategy()"], ["org.hibernate.dialect.SQLServer2005Dialect", "org.hibernate.dialect.SQLServer2005Dialect()"], ["java.lang.String", "org.hibernate.dialect.SQLServer2005Dialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.SQLServer2005Dialect.buildSQLExceptionConversionDelegate()"], ["boolean", "org.hibernate.dialect.SQLServer2005Dialect.supportsNonQueryWithCTE()"], ["boolean", "org.hibernate.dialect.SQLServer2005Dialect.supportsSkipLocked()"], ["boolean", "org.hibernate.dialect.SQLServer2005Dialect.supportsNoWait()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$14.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$14.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$15.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$15.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$11.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$11.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy", "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$1.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$1.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL82Dialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL82Dialect$1.getDropIdTableCommand()"], ["org.hibernate.dialect.FirebirdDialect", "org.hibernate.dialect.FirebirdDialect()"], ["java.lang.String", "org.hibernate.dialect.FirebirdDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.FirebirdDialect.getLimitString(java.lang.String, boolean)"], ["boolean", "org.hibernate.dialect.FirebirdDialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.FirebirdDialect.bindLimitParametersInReverseOrder()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.FirebirdDialect.getLimitHandler()"], ["org.hibernate.dialect.DerbyDialect", "org.hibernate.dialect.DerbyDialect()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getCrossJoinSeparator()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.DerbyDialect.createCaseFragment()"], ["boolean", "org.hibernate.dialect.DerbyDialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.DerbyDialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getSequenceNextValString(java.lang.String)"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsCommentOn()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsLimitOffset()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getReadLockString(int)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.DerbyDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsTuplesInSubqueries()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect.getLimitString(java.lang.String, int, int)"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.DerbyDialect.supportsUnboundedLobLocatorMaterialization()"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelper", "org.hibernate.dialect.DerbyDialect.buildIdentifierHelper(org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder, java.sql.DatabaseMetaData)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.DerbyDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$6.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$6.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect$2.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect$2.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect$2.getCreateIdTableStatementOptions()"], ["void", "org.hibernate.dialect.AbstractHANADialect$CloseSuppressingInputStream.close()"], ["org.hibernate.dialect.MariaDB103Dialect", "org.hibernate.dialect.MariaDB103Dialect()"], ["boolean", "org.hibernate.dialect.MariaDB103Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.MariaDB103Dialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.MariaDB103Dialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getForUpdateNowaitString()"], ["java.lang.String", "org.hibernate.dialect.MariaDB103Dialect.getForUpdateNowaitString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.DB2Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2Dialect$1.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2Dialect$1.supportsVariableLimit()"], ["org.hibernate.dialect.SybaseASE157Dialect", "org.hibernate.dialect.SybaseASE157Dialect()"], ["java.lang.String", "org.hibernate.dialect.SybaseASE157Dialect.getTableTypeString()"], ["boolean", "org.hibernate.dialect.SybaseASE157Dialect.supportsExpectedLobUsagePattern()"], ["boolean", "org.hibernate.dialect.SybaseASE157Dialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.SybaseASE157Dialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.SybaseASE157Dialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.SybaseASE157Dialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SybaseASE157Dialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SybaseASE157Dialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map<java.lang.String, java.lang.String[]>)"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.SybaseASE157Dialect.buildSQLExceptionConversionDelegate()"], ["boolean", "org.hibernate.dialect.SybaseASE157Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.SybaseASE157Dialect.supportsLimitOffset()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.SybaseASE157Dialect.getLimitHandler()"], ["org.hibernate.dialect.MySQL5InnoDBDialect", "org.hibernate.dialect.MySQL5InnoDBDialect()"], ["org.hibernate.dialect.function.SQLFunctionRegistry", "org.hibernate.dialect.function.SQLFunctionRegistry(org.hibernate.dialect.Dialect, java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>)"], ["org.hibernate.dialect.function.SQLFunction", "org.hibernate.dialect.function.SQLFunctionRegistry.findSQLFunction(java.lang.String)"], ["boolean", "org.hibernate.dialect.function.SQLFunctionRegistry.hasFunction(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.function.StandardAnsiSqlAggregationFunctions$CountFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.DB2SubstringFunction", "org.hibernate.dialect.function.DB2SubstringFunction()"], ["org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction", "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction()"], ["boolean", "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.SQLFunctionTemplate", "org.hibernate.dialect.function.SQLFunctionTemplate(org.hibernate.type.Type, java.lang.String)"], ["org.hibernate.dialect.function.SQLFunctionTemplate", "org.hibernate.dialect.function.SQLFunctionTemplate(org.hibernate.type.Type, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.function.SQLFunctionTemplate.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.SQLFunctionTemplate.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.dialect.function.SQLFunctionTemplate.hasArguments()"], ["boolean", "org.hibernate.dialect.function.SQLFunctionTemplate.hasParenthesesIfNoArguments()"], ["java.lang.String", "org.hibernate.dialect.function.SQLFunctionTemplate.toString()"], ["org.hibernate.dialect.function.AvgWithArgumentCastFunction", "org.hibernate.dialect.function.AvgWithArgumentCastFunction(java.lang.String)"], ["org.hibernate.dialect.function.TrimFunctionTemplate", "org.hibernate.dialect.function.TrimFunctionTemplate()"], ["boolean", "org.hibernate.dialect.function.TrimFunctionTemplate.hasArguments()"], ["boolean", "org.hibernate.dialect.function.TrimFunctionTemplate.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.TrimFunctionTemplate.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.TrimFunctionTemplate.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.StandardJDBCEscapeFunction", "org.hibernate.dialect.function.StandardJDBCEscapeFunction(java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.dialect.function.StandardJDBCEscapeFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.dialect.function.StandardJDBCEscapeFunction.toString()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$3.transform(java.lang.String)"], ["org.hibernate.dialect.function.StaticPrecisionFspTimestampFunction", "org.hibernate.dialect.function.StaticPrecisionFspTimestampFunction(java.lang.String, boolean)"], ["org.hibernate.dialect.function.StaticPrecisionFspTimestampFunction", "org.hibernate.dialect.function.StaticPrecisionFspTimestampFunction(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.function.StaticPrecisionFspTimestampFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.AnsiTrimFunction", "org.hibernate.dialect.function.AnsiTrimFunction()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.StandardAnsiSqlAggregationFunctions$SumFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["org.hibernate.dialect.function.PositionSubstringFunction", "org.hibernate.dialect.function.PositionSubstringFunction()"], ["boolean", "org.hibernate.dialect.function.PositionSubstringFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.PositionSubstringFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.PositionSubstringFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.PositionSubstringFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.VarArgsSQLFunction", "org.hibernate.dialect.function.VarArgsSQLFunction(org.hibernate.type.Type, java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.dialect.function.VarArgsSQLFunction", "org.hibernate.dialect.function.VarArgsSQLFunction(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.dialect.function.VarArgsSQLFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.VarArgsSQLFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.VarArgsSQLFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.VarArgsSQLFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.ConditionalParenthesisFunction", "org.hibernate.dialect.function.ConditionalParenthesisFunction(java.lang.String)"], ["org.hibernate.dialect.function.ConditionalParenthesisFunction", "org.hibernate.dialect.function.ConditionalParenthesisFunction(java.lang.String, org.hibernate.type.Type)"], ["boolean", "org.hibernate.dialect.function.ConditionalParenthesisFunction.hasParenthesesIfNoArguments()"], ["java.lang.String", "org.hibernate.dialect.function.ConditionalParenthesisFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.NoArgSQLFunction", "org.hibernate.dialect.function.NoArgSQLFunction(java.lang.String, org.hibernate.type.Type)"], ["org.hibernate.dialect.function.NoArgSQLFunction", "org.hibernate.dialect.function.NoArgSQLFunction(java.lang.String, org.hibernate.type.Type, boolean)"], ["boolean", "org.hibernate.dialect.function.NoArgSQLFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.NoArgSQLFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.NoArgSQLFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.NoArgSQLFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.AnsiTrimEmulationFunction", "org.hibernate.dialect.function.AnsiTrimEmulationFunction()"], ["org.hibernate.dialect.function.AnsiTrimEmulationFunction", "org.hibernate.dialect.function.AnsiTrimEmulationFunction(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.dialect.function.DerbyConcatFunction", "org.hibernate.dialect.function.DerbyConcatFunction()"], ["boolean", "org.hibernate.dialect.function.DerbyConcatFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.DerbyConcatFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.DerbyConcatFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$4.transform(java.lang.String)"], ["org.hibernate.dialect.function.CharIndexFunction", "org.hibernate.dialect.function.CharIndexFunction()"], ["boolean", "org.hibernate.dialect.function.CharIndexFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.CharIndexFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.CharIndexFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.CharIndexFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.ConvertFunction", "org.hibernate.dialect.function.ConvertFunction()"], ["boolean", "org.hibernate.dialect.function.ConvertFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.ConvertFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.ConvertFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.ConvertFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.dialect.function.TrimFunctionTemplate$Options.getTrimCharacter()"], ["void", "org.hibernate.dialect.function.TrimFunctionTemplate$Options.setTrimCharacter(java.lang.String)"], ["org.hibernate.dialect.function.TrimFunctionTemplate$Specification", "org.hibernate.dialect.function.TrimFunctionTemplate$Options.getTrimSpecification()"], ["void", "org.hibernate.dialect.function.TrimFunctionTemplate$Options.setTrimSpecification(org.hibernate.dialect.function.TrimFunctionTemplate$Specification)"], ["org.hibernate.dialect.function.NvlFunction", "org.hibernate.dialect.function.NvlFunction()"], ["boolean", "org.hibernate.dialect.function.NvlFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.NvlFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.NvlFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.NvlFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.CastFunction", "org.hibernate.dialect.function.CastFunction()"], ["boolean", "org.hibernate.dialect.function.CastFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.CastFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.CastFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.CastFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.dialect.function.StandardAnsiSqlAggregationFunctions.primeFunctionMap(java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>)"], ["java.lang.String", "org.hibernate.dialect.function.TrimFunctionTemplate$Specification.getName()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$2.getBeginning()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$2.getSeparator()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$2.getEnding()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$1.getBeginning()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$1.getSeparator()"], ["java.lang.String", "org.hibernate.dialect.function.DerbyConcatFunction$1.getEnding()"], ["org.hibernate.dialect.function.StandardSQLFunction", "org.hibernate.dialect.function.StandardSQLFunction(java.lang.String)"], ["org.hibernate.dialect.function.StandardSQLFunction", "org.hibernate.dialect.function.StandardSQLFunction(java.lang.String, org.hibernate.type.Type)"], ["java.lang.String", "org.hibernate.dialect.function.StandardSQLFunction.getName()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.StandardSQLFunction.getType()"], ["boolean", "org.hibernate.dialect.function.StandardSQLFunction.hasArguments()"], ["boolean", "org.hibernate.dialect.function.StandardSQLFunction.hasParenthesesIfNoArguments()"], ["org.hibernate.type.Type", "org.hibernate.dialect.function.StandardSQLFunction.getReturnType(org.hibernate.type.Type, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.dialect.function.StandardSQLFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.dialect.function.StandardSQLFunction.toString()"], ["java.lang.String", "org.hibernate.dialect.function.StandardAnsiSqlAggregationFunctions$AvgFunction.render(org.hibernate.type.Type, java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.dialect.function.TemplateRenderer", "org.hibernate.dialect.function.TemplateRenderer(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.function.TemplateRenderer.getTemplate()"], ["int", "org.hibernate.dialect.function.TemplateRenderer.getAnticipatedNumberOfArguments()"], ["java.lang.String", "org.hibernate.dialect.function.TemplateRenderer.render(java.util.List, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.dialect.DB2390Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.DB2390Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect$1.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect$1.supportsVariableLimit()"], ["org.hibernate.dialect.PostgreSQLDialect", "org.hibernate.dialect.PostgreSQLDialect()"], ["java.lang.String", "org.hibernate.dialect.DB2400Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.DB2400Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2400Dialect$1.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2400Dialect$1.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.Oracle8iDialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect$1.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect$1.useMaxForLimit()"], ["org.hibernate.dialect.AbstractHANADialect$HANANClobTypeDescriptor", "org.hibernate.dialect.AbstractHANADialect$HANANClobTypeDescriptor(int)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.dialect.AbstractHANADialect$HANANClobTypeDescriptor.getNClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.dialect.AbstractHANADialect$HANANClobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["int", "org.hibernate.dialect.AbstractHANADialect$HANANClobTypeDescriptor.getMaxLobPrefetchSize()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$24.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$24.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.MySQL5Dialect", "org.hibernate.dialect.MySQL5Dialect()"], ["boolean", "org.hibernate.dialect.MySQL5Dialect.supportsColumnCheck()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.MySQL5Dialect.getViolatedConstraintNameExtracter()"], ["java.lang.String", "org.hibernate.dialect.MySQL5Dialect.getQueryHintString(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.dialect.MySQL5Dialect.supportsUnionAll()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect$1.bindLimitParametersInReverseOrder()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$5.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$5.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$23.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$23.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.pagination.SQLServer2012LimitHandler", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.useMaxForLimit()"], ["int", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.convertToFirstRowValue(int)"], ["int", "org.hibernate.dialect.pagination.SQLServer2012LimitHandler.bindLimitParametersAtEndOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["boolean", "org.hibernate.dialect.pagination.SQL2008StandardLimitHandler.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.pagination.SQL2008StandardLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["java.lang.String", "org.hibernate.dialect.pagination.Informix10LimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.Informix10LimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.Informix10LimitHandler.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.pagination.Informix10LimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.Informix10LimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.Informix10LimitHandler.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.pagination.CUBRIDLimitHandler.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.pagination.CUBRIDLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["java.lang.String", "org.hibernate.dialect.pagination.NoopLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["int", "org.hibernate.dialect.pagination.NoopLimitHandler.bindLimitParametersAtStartOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["int", "org.hibernate.dialect.pagination.NoopLimitHandler.bindLimitParametersAtEndOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["void", "org.hibernate.dialect.pagination.NoopLimitHandler.setMaxRows(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement)"], ["org.hibernate.dialect.pagination.TopLimitHandler", "org.hibernate.dialect.pagination.TopLimitHandler(boolean, boolean)"], ["boolean", "org.hibernate.dialect.pagination.TopLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.TopLimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.TopLimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.TopLimitHandler.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.pagination.TopLimitHandler.bindLimitParametersFirst()"], ["java.lang.String", "org.hibernate.dialect.pagination.TopLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.LimitHelper.hasMaxRows(org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.LimitHelper.useLimit(org.hibernate.dialect.pagination.LimitHandler, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.LimitHelper.hasFirstRow(org.hibernate.engine.spi.RowSelection)"], ["int", "org.hibernate.dialect.pagination.LimitHelper.getFirstRow(org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.AbstractLimitHandler.forceLimitUsage()"], ["int", "org.hibernate.dialect.pagination.AbstractLimitHandler.convertToFirstRowValue(int)"], ["java.lang.String", "org.hibernate.dialect.pagination.AbstractLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["int", "org.hibernate.dialect.pagination.AbstractLimitHandler.bindLimitParametersAtStartOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["int", "org.hibernate.dialect.pagination.AbstractLimitHandler.bindLimitParametersAtEndOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["void", "org.hibernate.dialect.pagination.AbstractLimitHandler.setMaxRows(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement)"], ["java.lang.String", "org.hibernate.dialect.pagination.FirstLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["java.lang.String", "org.hibernate.dialect.pagination.LegacyFirstLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.LegacyFirstLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.LegacyFirstLimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.LegacyFirstLimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.LegacyFirstLimitHandler.supportsVariableLimit()"], ["org.hibernate.dialect.pagination.SybaseASE157LimitHandler", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler()"], ["java.lang.String", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.SybaseASE157LimitHandler.supportsVariableLimit()"], ["org.hibernate.dialect.pagination.LegacyLimitHandler", "org.hibernate.dialect.pagination.LegacyLimitHandler(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.LegacyLimitHandler.forceLimitUsage()"], ["int", "org.hibernate.dialect.pagination.LegacyLimitHandler.convertToFirstRowValue(int)"], ["java.lang.String", "org.hibernate.dialect.pagination.LegacyLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["org.hibernate.dialect.pagination.SQLServer2005LimitHandler", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.supportsVariableLimit()"], ["int", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.convertToFirstRowValue(int)"], ["java.lang.String", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["int", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.bindLimitParametersAtStartOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["int", "org.hibernate.dialect.pagination.SQLServer2005LimitHandler.bindLimitParametersAtEndOfQuery(org.hibernate.engine.spi.RowSelection, java.sql.PreparedStatement, int)"], ["java.lang.String", "org.hibernate.dialect.HANARowStoreDialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect$1.getCreateIdTableStatementOptions()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.H2Dialect$3.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["int", "org.hibernate.dialect.Dialect$5.determineOptimalBatchLoadSize(int, int)"], ["org.hibernate.dialect.MySQL57InnoDBDialect", "org.hibernate.dialect.MySQL57InnoDBDialect()"], ["boolean", "org.hibernate.dialect.MySQL57InnoDBDialect.supportsRowValueConstructorSyntaxInInList()"], ["org.hibernate.dialect.HSQLDialect", "org.hibernate.dialect.HSQLDialect()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsLockTimeouts()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getForUpdateString()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.HSQLDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getLimitString(java.lang.String, boolean)"], ["boolean", "org.hibernate.dialect.HSQLDialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsIfExistsAfterTableName()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsIfExistsBeforeTableName()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.HSQLDialect.getSequenceInformationExtractor()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.HSQLDialect.getViolatedConstraintNameExtracter()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getSelectClauseNullString(int)"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsUnionAll()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.HSQLDialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.HSQLDialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getCurrentTimestampSQLFunctionName()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.HSQLDialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsCommentOn()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.HSQLDialect.requiresCastingOfParametersInSelectClause()"], ["boolean", "org.hibernate.dialect.HSQLDialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.HSQLDialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsLobValueChangePropogation()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.toBooleanValueString(boolean)"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsTupleDistinctCounts()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.HSQLDialect.getIdentityColumnSupport()"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.dialect.HSQLDialect.getNameQualifierSupport()"], ["boolean", "org.hibernate.dialect.HSQLDialect.supportsNamedParameters(java.sql.DatabaseMetaData)"], ["boolean", "org.hibernate.dialect.HSQLDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect.getCascadeConstraintsString()"], ["org.hibernate.dialect.Oracle9Dialect", "org.hibernate.dialect.Oracle9Dialect()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getCascadeConstraintsString()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getForUpdateNowaitString()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsPooledSequences()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getLimitString(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getForUpdateNowaitString(java.lang.String)"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.Oracle9Dialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getSelectGUIDString()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.Oracle9Dialect.getViolatedConstraintNameExtracter()"], ["int", "org.hibernate.dialect.Oracle9Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.Oracle9Dialect.getResultSet(java.sql.CallableStatement)"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsCommentOn()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.Oracle9Dialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsCurrentTimestampSelection()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsExistsInSelect()"], ["int", "org.hibernate.dialect.Oracle9Dialect.getInExpressionCountLimit()"], ["java.lang.String", "org.hibernate.dialect.Oracle9Dialect.getNotExpression(java.lang.String)"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.canCreateSchema()"], ["boolean", "org.hibernate.dialect.Oracle9Dialect.supportsNoWait()"], ["org.hibernate.dialect.H2Dialect", "org.hibernate.dialect.H2Dialect()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getForUpdateString()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.H2Dialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getLimitString(java.lang.String, boolean)"], ["boolean", "org.hibernate.dialect.H2Dialect.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.H2Dialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsIfExistsAfterTableName()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsIfExistsBeforeConstraintName()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.H2Dialect.getSequenceInformationExtractor()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.H2Dialect.getViolatedConstraintNameExtracter()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.H2Dialect.buildSQLExceptionConversionDelegate()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.H2Dialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.H2Dialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.H2Dialect.requiresParensForTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.H2Dialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.H2Dialect.supportsTuplesInSubqueries()"], ["boolean", "org.hibernate.dialect.H2Dialect.dropConstraints()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.H2Dialect.getIdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect.getQueryHintString(java.lang.String, java.lang.String)"], ["org.hibernate.dialect.AbstractHANADialect", "org.hibernate.dialect.AbstractHANADialect()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.bindLimitParametersInReverseOrder()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.AbstractHANADialect.buildSQLExceptionConversionDelegate()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getAddColumnSuffixString()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getCascadeConstraintsString()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getForUpdateString(java.lang.String, org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getForUpdateNowaitString()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getLimitString(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getNotExpression(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.AbstractHANADialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getSequenceNextValString(java.lang.String)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.isCurrentTimestampSelectStringCallable()"], ["org.hibernate.ScrollMode", "org.hibernate.dialect.AbstractHANADialect.defaultScrollMode()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsExpectedLobUsagePattern()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsUnboundedLobLocatorMaterialization()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsPooledSequences()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsTableCheck()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsRowValueConstructorSyntax()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsRowValueConstructorSyntaxInInList()"], ["int", "org.hibernate.dialect.AbstractHANADialect.getMaxAliasLength()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.AbstractHANADialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getSelectGUIDString()"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.dialect.AbstractHANADialect.getNameQualifierSupport()"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelper", "org.hibernate.dialect.AbstractHANADialect.buildIdentifierHelper(org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder, java.sql.DatabaseMetaData)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getCurrentSchemaCommand()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getForUpdateNowaitString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getReadLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getQueryHintString(java.lang.String, java.util.List<java.lang.String>)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getTableComment(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.getColumnComment(java.lang.String)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsCommentOn()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsPartitionBy()"], ["void", "org.hibernate.dialect.AbstractHANADialect.contributeTypes(org.hibernate.boot.model.TypeContributions, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.dialect.AbstractHANADialect.getBlobTypeDescriptor()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect.toBooleanValueString(boolean)"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.AbstractHANADialect.getIdentityColumnSupport()"], ["org.hibernate.procedure.spi.CallableStatementSupport", "org.hibernate.dialect.AbstractHANADialect.getCallableStatementSupport()"], ["int", "org.hibernate.dialect.AbstractHANADialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["int", "org.hibernate.dialect.AbstractHANADialect.registerResultSetOutParameter(java.sql.CallableStatement, java.lang.String)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsNoWait()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsJdbcConnectionLobCreation(java.sql.DatabaseMetaData)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect.supportsNoColumnsInsert()"], ["org.hibernate.dialect.DataDirectOracle9Dialect", "org.hibernate.dialect.DataDirectOracle9Dialect()"], ["int", "org.hibernate.dialect.DataDirectOracle9Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.DataDirectOracle9Dialect.getResultSet(java.sql.CallableStatement)"], ["org.hibernate.dialect.Oracle12cDialect", "org.hibernate.dialect.Oracle12cDialect()"], ["void", "org.hibernate.dialect.Oracle12cDialect.contributeTypes(org.hibernate.boot.model.TypeContributions, org.hibernate.service.ServiceRegistry)"], ["java.lang.String", "org.hibernate.dialect.Oracle12cDialect.getNativeIdentifierGeneratorStrategy()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Oracle12cDialect.getIdentityColumnSupport()"], ["org.hibernate.dialect.PostgreSQL93Dialect", "org.hibernate.dialect.PostgreSQL93Dialect()"], ["void", "org.hibernate.dialect.PostgreSQL93Dialect.augmentRecognizedTableTypes(java.util.List<java.lang.String>)"], ["org.hibernate.dialect.ResultColumnReferenceStrategy[]", "org.hibernate.dialect.ResultColumnReferenceStrategy.values()"], ["org.hibernate.dialect.ResultColumnReferenceStrategy", "org.hibernate.dialect.ResultColumnReferenceStrategy.valueOf(java.lang.String)"], ["org.hibernate.dialect.ResultColumnReferenceStrategy", "org.hibernate.dialect.ResultColumnReferenceStrategy.resolveByName(java.lang.String)"], ["org.hibernate.dialect.MckoiDialect", "org.hibernate.dialect.MckoiDialect()"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MckoiDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.MckoiDialect.supportsSequences()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.MckoiDialect.createCaseFragment()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.MckoiDialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.dialect.Ingres9Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.Ingres9Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect$1.supportsVariableLimit()"], ["org.hibernate.dialect.SybaseASE15Dialect", "org.hibernate.dialect.SybaseASE15Dialect()"], ["boolean", "org.hibernate.dialect.SybaseASE15Dialect.supportsCascadeDelete()"], ["int", "org.hibernate.dialect.SybaseASE15Dialect.getMaxAliasLength()"], ["boolean", "org.hibernate.dialect.SybaseASE15Dialect.areStringComparisonsCaseInsensitive()"], ["java.lang.String", "org.hibernate.dialect.SybaseASE15Dialect.getCurrentTimestampSQLFunctionName()"], ["boolean", "org.hibernate.dialect.SybaseASE15Dialect.supportsExpectedLobUsagePattern()"], ["java.lang.String", "org.hibernate.dialect.SybaseASE15Dialect.getCrossJoinSeparator()"], ["boolean", "org.hibernate.dialect.SybaseASE15Dialect.supportsLockTimeouts()"], ["boolean", "org.hibernate.dialect.SybaseASE15Dialect.supportsPartitionBy()"], ["org.hibernate.dialect.Oracle8iDialect", "org.hibernate.dialect.Oracle8iDialect()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.Oracle8iDialect.createOuterJoinFragment()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCrossJoinSeparator()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.Oracle8iDialect.createCaseFragment()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Oracle8iDialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getLimitString(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getBasicSelectClauseNullString(int)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getSelectClauseNullString(int)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCurrentTimestampSQLFunctionName()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCascadeConstraintsString()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getForUpdateNowaitString()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsPooledSequences()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getForUpdateNowaitString(java.lang.String)"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.Oracle8iDialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getSelectGUIDString()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.Oracle8iDialect.getViolatedConstraintNameExtracter()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.Oracle8iDialect.buildSQLExceptionConversionDelegate()"], ["int", "org.hibernate.dialect.Oracle8iDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.Oracle8iDialect.getResultSet(java.sql.CallableStatement)"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsCommentOn()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.Oracle8iDialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsExistsInSelect()"], ["int", "org.hibernate.dialect.Oracle8iDialect.getInExpressionCountLimit()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.forceLobAsLastValue()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.useFollowOnLocking(org.hibernate.engine.spi.QueryParameters)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getNotExpression(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getQueryHintString(java.lang.String, java.lang.String)"], ["int", "org.hibernate.dialect.Oracle8iDialect.getMaxAliasLength()"], ["org.hibernate.procedure.spi.CallableStatementSupport", "org.hibernate.dialect.Oracle8iDialect.getCallableStatementSupport()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.canCreateSchema()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect.getCurrentSchemaCommand()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsPartitionBy()"], ["boolean", "org.hibernate.dialect.Oracle8iDialect.supportsNoWait()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.SybaseASE157Dialect$1.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.dialect.Cache71Dialect", "org.hibernate.dialect.Cache71Dialect()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.hasAlterTable()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], boolean)"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsCheck()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getCascadeConstraintsString()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsCascadeDelete()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.hasSelfReferentialForeignKeyBug()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.Cache71Dialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getNativeIdentifierGeneratorStrategy()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Cache71Dialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsOuterJoinForUpdate()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.Cache71Dialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Cache71Dialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.useMaxForLimit()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getLimitString(java.lang.String, boolean)"], ["int", "org.hibernate.dialect.Cache71Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.Cache71Dialect.getResultSet(java.sql.CallableStatement)"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getLowercaseFunction()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getNullColumnString()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.Cache71Dialect.createOuterJoinFragment()"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect.getNoColumnsInsertString()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.Cache71Dialect.buildSQLExceptionConversionDelegate()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.Cache71Dialect.getViolatedConstraintNameExtracter()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.Cache71Dialect.supportsResultSetPositionQueryMethodsOnForwardOnlyCursor()"], ["org.hibernate.dialect.unique.MySQLUniqueDelegate", "org.hibernate.dialect.unique.MySQLUniqueDelegate(org.hibernate.dialect.Dialect)"], ["org.hibernate.dialect.unique.DefaultUniqueDelegate", "org.hibernate.dialect.unique.DefaultUniqueDelegate(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.dialect.unique.DefaultUniqueDelegate.getColumnDefinitionUniquenessFragment(org.hibernate.mapping.Column)"], ["java.lang.String", "org.hibernate.dialect.unique.DefaultUniqueDelegate.getTableCreationUniqueConstraintsFragment(org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.dialect.unique.DefaultUniqueDelegate.getAlterTableToAddUniqueKeyCommand(org.hibernate.mapping.UniqueKey, org.hibernate.boot.Metadata)"], ["java.lang.String", "org.hibernate.dialect.unique.DefaultUniqueDelegate.getAlterTableToDropUniqueKeyCommand(org.hibernate.mapping.UniqueKey, org.hibernate.boot.Metadata)"], ["org.hibernate.dialect.unique.DB2UniqueDelegate", "org.hibernate.dialect.unique.DB2UniqueDelegate(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.dialect.unique.DB2UniqueDelegate.getAlterTableToAddUniqueKeyCommand(org.hibernate.mapping.UniqueKey, org.hibernate.boot.Metadata)"], ["java.lang.String", "org.hibernate.dialect.unique.DB2UniqueDelegate.getAlterTableToDropUniqueKeyCommand(org.hibernate.mapping.UniqueKey, org.hibernate.boot.Metadata)"], ["org.hibernate.dialect.unique.InformixUniqueDelegate", "org.hibernate.dialect.unique.InformixUniqueDelegate(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.dialect.unique.InformixUniqueDelegate.getAlterTableToAddUniqueKeyCommand(org.hibernate.mapping.UniqueKey, org.hibernate.boot.Metadata)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect$4.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect$4.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.Oracle8iDialect$4.getCreateIdTableStatementOptions()"], ["org.hibernate.dialect.RDMSOS2200Dialect", "org.hibernate.dialect.RDMSOS2200Dialect()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.qualifyIndexName()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsCascadeDelete()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsOuterJoinForUpdate()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getNullColumnString()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getCascadeConstraintsString()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.RDMSOS2200Dialect.createCaseFragment()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.RDMSOS2200Dialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsLimitOffset()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect.getLimitString(java.lang.String, int, int)"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect.supportsUnionAll()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.RDMSOS2200Dialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$22.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$22.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.JDBCException", "org.hibernate.dialect.MySQLDialect$3.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$13.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$13.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.MySQL55Dialect", "org.hibernate.dialect.MySQL55Dialect()"], ["java.lang.String[]", "org.hibernate.dialect.AbstractHANADialect$2.getSqlCreateStrings(org.hibernate.mapping.Table, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.dialect.AbstractHANADialect$2.getSqlDropStrings(org.hibernate.mapping.Table, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.dialect.AbstractHANADialect$2.getSqlDropStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.dialect.AbstractHANADialect$2.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["org.hibernate.dialect.DerbyTenFiveDialect", "org.hibernate.dialect.DerbyTenFiveDialect()"], ["boolean", "org.hibernate.dialect.DerbyTenFiveDialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.DerbyTenFiveDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.DerbyTenFiveDialect.supportsLimitOffset()"], ["org.hibernate.dialect.SQLServer2012Dialect", "org.hibernate.dialect.SQLServer2012Dialect()"], ["boolean", "org.hibernate.dialect.SQLServer2012Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.SQLServer2012Dialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getQuerySequencesString()"], ["java.lang.String", "org.hibernate.dialect.SQLServer2012Dialect.getQueryHintString(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.dialect.SQLServer2012Dialect.supportsLimitOffset()"], ["org.hibernate.dialect.MySQLDialect", "org.hibernate.dialect.MySQLDialect()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.MySQLDialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], boolean)"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getDropForeignKeyString()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.MySQLDialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getLimitString(java.lang.String, boolean)"], ["char", "org.hibernate.dialect.MySQLDialect.closeQuote()"], ["char", "org.hibernate.dialect.MySQLDialect.openQuote()"], ["boolean", "org.hibernate.dialect.MySQLDialect.canCreateCatalog()"], ["java.lang.String[]", "org.hibernate.dialect.MySQLDialect.getCreateCatalogCommand(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.MySQLDialect.getDropCatalogCommand(java.lang.String)"], ["boolean", "org.hibernate.dialect.MySQLDialect.canCreateSchema()"], ["java.lang.String[]", "org.hibernate.dialect.MySQLDialect.getCreateSchemaCommand(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.MySQLDialect.getDropSchemaCommand(java.lang.String)"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsIfExistsBeforeTableName()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getSelectGUIDString()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getTableComment(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getColumnComment(java.lang.String)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.MySQLDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getCastTypeName(int)"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.MySQLDialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getCurrentTimestampSelectString()"], ["int", "org.hibernate.dialect.MySQLDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.MySQLDialect.getResultSet(java.sql.CallableStatement)"], ["org.hibernate.dialect.unique.UniqueDelegate", "org.hibernate.dialect.MySQLDialect.getUniqueDelegate()"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsRowValueConstructorSyntax()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.renderOrderByElement(java.lang.String, java.lang.String, java.lang.String, org.hibernate.NullPrecedence)"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getReadLockString(int)"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.MySQLDialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsSubqueryOnMutatingTable()"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsLockTimeouts()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.MySQLDialect.buildSQLExceptionConversionDelegate()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getNotExpression(java.lang.String)"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.MySQLDialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.MySQLDialect.isJdbcLogWarningsEnabledByDefault()"], ["boolean", "org.hibernate.dialect.MySQLDialect.supportsCascadeDelete()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect.getTableTypeString()"], ["boolean", "org.hibernate.dialect.MySQLDialect.hasSelfReferentialForeignKeyBug()"], ["boolean", "org.hibernate.dialect.MySQLDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.InterbaseDialect$1.supportsLimit()"], ["org.hibernate.dialect.SQLServer2008Dialect", "org.hibernate.dialect.SQLServer2008Dialect()"], ["java.lang.String", "org.hibernate.dialect.SQLServer2008Dialect.renderOrderByElement(java.lang.String, java.lang.String, java.lang.String, org.hibernate.NullPrecedence)"], ["boolean", "org.hibernate.dialect.SQLServer2008Dialect.supportsValuesList()"], ["org.hibernate.dialect.InnoDBStorageEngine", "org.hibernate.dialect.InnoDBStorageEngine()"], ["boolean", "org.hibernate.dialect.InnoDBStorageEngine.supportsCascadeDelete()"], ["java.lang.String", "org.hibernate.dialect.InnoDBStorageEngine.getTableTypeString(java.lang.String)"], ["boolean", "org.hibernate.dialect.InnoDBStorageEngine.hasSelfReferentialForeignKeyBug()"], ["boolean", "org.hibernate.dialect.InnoDBStorageEngine.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$1.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$1.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect$DerbyLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.DerbyDialect$DerbyLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.DerbyDialect$DerbyLimitHandler.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.DerbyDialect$DerbyLimitHandler.supportsVariableLimit()"], ["org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor", "org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor(int, boolean)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor.getClobBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["int", "org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor.getMaxLobPrefetchSize()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$HANAClobTypeDescriptor.isUseUnicodeStringTypes()"], ["org.hibernate.dialect.ProgressDialect", "org.hibernate.dialect.ProgressDialect()"], ["boolean", "org.hibernate.dialect.ProgressDialect.hasAlterTable()"], ["java.lang.String", "org.hibernate.dialect.ProgressDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.ProgressDialect.qualifyIndexName()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$3.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$3.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.TimesTenDialect", "org.hibernate.dialect.TimesTenDialect()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.TimesTenDialect.getSequenceInformationExtractor()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.TimesTenDialect.createOuterJoinFragment()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getCrossJoinSeparator()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsTableCheck()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.TimesTenDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.useMaxForLimit()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getLimitString(java.lang.String, int, int)"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsCurrentTimestampSelection()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.TimesTenDialect.isCurrentTimestampSelectStringCallable()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.TimesTenDialect.getDefaultMultiTableBulkIdStrategy()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.TimesTenDialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["boolean", "org.hibernate.dialect.TimesTenDialect.supportsEmptyInList()"], ["org.hibernate.dialect.PostgresPlusDialect", "org.hibernate.dialect.PostgresPlusDialect()"], ["java.lang.String", "org.hibernate.dialect.PostgresPlusDialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.PostgresPlusDialect.getCurrentTimestampSQLFunctionName()"], ["int", "org.hibernate.dialect.PostgresPlusDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.PostgresPlusDialect.getResultSet(java.sql.CallableStatement)"], ["java.lang.String", "org.hibernate.dialect.PostgresPlusDialect.getSelectGUIDString()"], ["org.hibernate.dialect.MariaDB53Dialect", "org.hibernate.dialect.MariaDB53Dialect()"], ["org.hibernate.dialect.MySQL57Dialect", "org.hibernate.dialect.MySQL57Dialect()"], ["boolean", "org.hibernate.dialect.MySQL57Dialect.supportsRowValueConstructorSyntaxInInList()"], ["org.hibernate.dialect.MimerSQLDialect", "org.hibernate.dialect.MimerSQLDialect()"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.MimerSQLDialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.MimerSQLDialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getDropSequenceString(java.lang.String)"], ["boolean", "org.hibernate.dialect.MimerSQLDialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getCascadeConstraintsString()"], ["java.lang.String", "org.hibernate.dialect.MimerSQLDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.MimerSQLDialect.getSequenceInformationExtractor()"], ["boolean", "org.hibernate.dialect.MimerSQLDialect.forUpdateOfColumns()"], ["boolean", "org.hibernate.dialect.MimerSQLDialect.supportsOuterJoinForUpdate()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.MimerSQLDialect.getIdentityColumnSupport()"], ["void", "org.hibernate.dialect.AbstractHANADialect$CloseSuppressingReader.close()"], ["org.hibernate.dialect.MyISAMStorageEngine", "org.hibernate.dialect.MyISAMStorageEngine()"], ["boolean", "org.hibernate.dialect.MyISAMStorageEngine.supportsCascadeDelete()"], ["java.lang.String", "org.hibernate.dialect.MyISAMStorageEngine.getTableTypeString(java.lang.String)"], ["boolean", "org.hibernate.dialect.MyISAMStorageEngine.hasSelfReferentialForeignKeyBug()"], ["boolean", "org.hibernate.dialect.MyISAMStorageEngine.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect$4.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect$4.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.H2Dialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.H2Dialect$1.bindLimitParametersInReverseOrder()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect$2.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect$2.getCreateIdTableStatementOptions()"], ["org.hibernate.dialect.Sybase11Dialect", "org.hibernate.dialect.Sybase11Dialect()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.Sybase11Dialect.createOuterJoinFragment()"], ["java.lang.String", "org.hibernate.dialect.Sybase11Dialect.getCrossJoinSeparator()"], ["org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor", "org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor(int)"], ["int", "org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueBinder<X>", "org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.dialect.AbstractHANADialect$HANAStreamBlobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.TimesTenDialect$1.getCreateIdTableStatementOptions()"], ["java.lang.String", "org.hibernate.dialect.DB297Dialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB297Dialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.DB297Dialect$1.getCreateIdTableStatementOptions()"], ["org.hibernate.dialect.IngresDialect", "org.hibernate.dialect.IngresDialect()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getSelectGUIDString()"], ["boolean", "org.hibernate.dialect.IngresDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getNullColumnString()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.IngresDialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getLowercaseFunction()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.IngresDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsLimitOffset()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getLimitString(java.lang.String, int, int)"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.IngresDialect.useMaxForLimit()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.IngresDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect.getCurrentTimestampSQLFunctionName()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsSubselectAsInPredicateLHS()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsExpectedLobUsagePattern()"], ["boolean", "org.hibernate.dialect.IngresDialect.supportsTupleDistinctCounts()"], ["org.hibernate.dialect.AbstractTransactSQLDialect", "org.hibernate.dialect.AbstractTransactSQLDialect()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.getNullColumnString()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map<java.lang.String, java.lang.String[]>)"], ["int", "org.hibernate.dialect.AbstractTransactSQLDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.AbstractTransactSQLDialect.getResultSet(java.sql.CallableStatement)"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.getCurrentTimestampSelectString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.AbstractTransactSQLDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.AbstractTransactSQLDialect.getSelectGUIDString()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsTuplesInSubqueries()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.AbstractTransactSQLDialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.AbstractTransactSQLDialect.supportsPartitionBy()"], ["java.lang.String", "org.hibernate.dialect.Dialect$4.extractConstraintName(java.sql.SQLException)"], ["org.hibernate.dialect.DB2Dialect", "org.hibernate.dialect.DB2Dialect()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getLowercaseFunction()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.DB2Dialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getDropSequenceString(java.lang.String)"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.DB2Dialect.getSequenceInformationExtractor()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getLimitString(java.lang.String, int, int)"], ["int", "org.hibernate.dialect.DB2Dialect.convertToFirstRowValue(int)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.DB2Dialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsOuterJoinForUpdate()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsLockTimeouts()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getSelectClauseNullString(int)"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsUnionAll()"], ["int", "org.hibernate.dialect.DB2Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.DB2Dialect.getResultSet(java.sql.CallableStatement)"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsCommentOn()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.DB2Dialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsCurrentTimestampSelection()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.DB2Dialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsParametersInInsertSelect()"], ["boolean", "org.hibernate.dialect.DB2Dialect.requiresCastingOfParametersInSelectClause()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsResultSetPositionQueryMethodsOnForwardOnlyCursor()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getCrossJoinSeparator()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.DB2Dialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsTupleDistinctCounts()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.DB2Dialect.buildSQLExceptionConversionDelegate()"], ["org.hibernate.dialect.unique.UniqueDelegate", "org.hibernate.dialect.DB2Dialect.getUniqueDelegate()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.getNotExpression(java.lang.String)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.DB2Dialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect.renderOrderByElement(java.lang.String, java.lang.String, java.lang.String, org.hibernate.NullPrecedence)"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.DB2Dialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.DB2Dialect.supportsPartitionBy()"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.Oracle9iDialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.Oracle9iDialect$1.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.Oracle9iDialect$1.useMaxForLimit()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.SQLServer2005Dialect$1.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$8.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$8.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.PostgreSQL10Dialect", "org.hibernate.dialect.PostgreSQL10Dialect()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.PostgreSQL10Dialect.getIdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect$2.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect$2.getDropIdTableCommand()"], ["org.hibernate.dialect.DB2400Dialect", "org.hibernate.dialect.DB2400Dialect()"], ["boolean", "org.hibernate.dialect.DB2400Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.DB2400Dialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.DB2400Dialect.getQuerySequencesString()"], ["boolean", "org.hibernate.dialect.DB2400Dialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.DB2400Dialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2400Dialect.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.DB2400Dialect.getLimitString(java.lang.String, int, int)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.DB2400Dialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.DB2400Dialect.getForUpdateString()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.DB2400Dialect.getIdentityColumnSupport()"], ["org.hibernate.dialect.AbstractHANADialect$MaterializedBlob", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob(byte[])"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.length()"], ["byte[]", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.getBytes(long, int)"], ["java.io.InputStream", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.getBinaryStream()"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.position(byte[], long)"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.position(java.sql.Blob, long)"], ["int", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.setBytes(long, byte[])"], ["int", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.setBytes(long, byte[], int, int)"], ["java.io.OutputStream", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.setBinaryStream(long)"], ["void", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.truncate(long)"], ["void", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.free()"], ["java.io.InputStream", "org.hibernate.dialect.AbstractHANADialect$MaterializedBlob.getBinaryStream(long, long)"], ["org.hibernate.dialect.PostgreSQL82Dialect", "org.hibernate.dialect.PostgreSQL82Dialect()"], ["boolean", "org.hibernate.dialect.PostgreSQL82Dialect.supportsIfExistsBeforeTableName()"], ["void", "org.hibernate.dialect.PostgreSQL82Dialect.contributeTypes(org.hibernate.boot.model.TypeContributions, org.hibernate.service.ServiceRegistry)"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.PostgreSQL82Dialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL82Dialect.getDropSequenceString(java.lang.String)"], ["boolean", "org.hibernate.dialect.PostgreSQL82Dialect.supportsValuesList()"], ["boolean", "org.hibernate.dialect.PostgreSQL82Dialect.supportsRowValueConstructorSyntaxInInList()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.DB2Dialect$3.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.RDMSOS2200Dialect$2.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$2.supportsLimit()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$2.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.RDMSOS2200Dialect$2.supportsVariableLimit()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$21.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$21.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.SybaseAnywhereDialect", "org.hibernate.dialect.SybaseAnywhereDialect()"], ["java.lang.String", "org.hibernate.dialect.SybaseAnywhereDialect.getNoColumnsInsertString()"], ["boolean", "org.hibernate.dialect.SybaseAnywhereDialect.dropConstraints()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.SybaseAnywhereDialect.getIdentityColumnSupport()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.AbstractHANADialect$3.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.IngresDialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.IngresDialect$1.getCreateIdTableStatementOptions()"], ["org.hibernate.dialect.MariaDB102Dialect", "org.hibernate.dialect.MariaDB102Dialect()"], ["boolean", "org.hibernate.dialect.MariaDB102Dialect.supportsColumnCheck()"], ["org.hibernate.dialect.MySQLMyISAMDialect", "org.hibernate.dialect.MySQLMyISAMDialect()"], ["java.lang.String", "org.hibernate.dialect.MySQLMyISAMDialect.getTableTypeString()"], ["boolean", "org.hibernate.dialect.MySQLMyISAMDialect.dropConstraints()"], ["java.lang.Integer", "org.hibernate.dialect.AbstractHANADialect$5.convert(java.lang.Object)"], ["java.lang.Object", "org.hibernate.dialect.AbstractHANADialect$5.convert(java.lang.Object)"], ["java.lang.String", "org.hibernate.dialect.InformixDialect$2.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.InformixDialect$2.getCreateIdTableStatementOptions()"], ["java.sql.Blob", "org.hibernate.dialect.Dialect$2.mergeBlob(java.sql.Blob, java.sql.Blob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.Clob", "org.hibernate.dialect.Dialect$2.mergeClob(java.sql.Clob, java.sql.Clob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.NClob", "org.hibernate.dialect.Dialect$2.mergeNClob(java.sql.NClob, java.sql.NClob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.PostgreSQL92Dialect", "org.hibernate.dialect.PostgreSQL92Dialect()"], ["boolean", "org.hibernate.dialect.PostgreSQL92Dialect.supportsIfExistsAfterAlterTable()"], ["int", "org.hibernate.dialect.OracleTypesHelper.getOracleCursorTypeSqlType()"], ["org.hibernate.dialect.MySQLInnoDBDialect", "org.hibernate.dialect.MySQLInnoDBDialect()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$1.bindLimitParametersInReverseOrder()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.Oracle8iDialect$3.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor(int)"], ["int", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.getSqlType()"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.canBeRemapped()"], ["<X> org.hibernate.type.descriptor.ValueExtractor<X>", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["<X> org.hibernate.type.descriptor.sql.BasicBinder<X>", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>)"], ["int", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.getMaxLobPrefetchSize()"], ["org.hibernate.type.descriptor.ValueBinder", "org.hibernate.dialect.AbstractHANADialect$HANABlobTypeDescriptor.getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor)"], ["org.hibernate.dialect.DerbyTenSixDialect", "org.hibernate.dialect.DerbyTenSixDialect()"], ["boolean", "org.hibernate.dialect.DerbyTenSixDialect.supportsSequences()"], ["org.hibernate.dialect.hint.IndexQueryHintHandler", "org.hibernate.dialect.hint.IndexQueryHintHandler()"], ["java.lang.String", "org.hibernate.dialect.hint.IndexQueryHintHandler.addQueryHints(java.lang.String, java.lang.String)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$10.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$10.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.lock.OptimisticLockingStrategy", "org.hibernate.dialect.lock.OptimisticLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.OptimisticLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.LockingStrategyException", "org.hibernate.dialect.lock.LockingStrategyException(java.lang.Object, java.lang.String)"], ["org.hibernate.dialect.lock.LockingStrategyException", "org.hibernate.dialect.lock.LockingStrategyException(java.lang.Object, java.lang.String, java.lang.Throwable)"], ["java.lang.Object", "org.hibernate.dialect.lock.LockingStrategyException.getEntity()"], ["org.hibernate.dialect.lock.PessimisticReadUpdateLockingStrategy", "org.hibernate.dialect.lock.PessimisticReadUpdateLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.PessimisticReadUpdateLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.PessimisticEntityLockException", "org.hibernate.dialect.lock.PessimisticEntityLockException(java.lang.Object, java.lang.String, org.hibernate.JDBCException)"], ["org.hibernate.dialect.lock.PessimisticWriteUpdateLockingStrategy", "org.hibernate.dialect.lock.PessimisticWriteUpdateLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.PessimisticWriteUpdateLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.OptimisticEntityLockException", "org.hibernate.dialect.lock.OptimisticEntityLockException(java.lang.Object, java.lang.String)"], ["org.hibernate.dialect.lock.OptimisticEntityLockException", "org.hibernate.dialect.lock.OptimisticEntityLockException(java.lang.Object, java.lang.String, java.lang.Throwable)"], ["org.hibernate.dialect.lock.OptimisticForceIncrementLockingStrategy", "org.hibernate.dialect.lock.OptimisticForceIncrementLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.OptimisticForceIncrementLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.PessimisticReadSelectLockingStrategy", "org.hibernate.dialect.lock.PessimisticReadSelectLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.PessimisticReadSelectLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.UpdateLockingStrategy", "org.hibernate.dialect.lock.UpdateLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.UpdateLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.PessimisticForceIncrementLockingStrategy", "org.hibernate.dialect.lock.PessimisticForceIncrementLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.PessimisticForceIncrementLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.PessimisticWriteSelectLockingStrategy", "org.hibernate.dialect.lock.PessimisticWriteSelectLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.PessimisticWriteSelectLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.lock.SelectLockingStrategy", "org.hibernate.dialect.lock.SelectLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["void", "org.hibernate.dialect.lock.SelectLockingStrategy.lock(java.io.Serializable, java.lang.Object, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Cache71Dialect$1.getCreateIdTableCommand()"], ["org.hibernate.dialect.Informix10Dialect", "org.hibernate.dialect.Informix10Dialect()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Informix10Dialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect$4.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.H2Dialect$4.getCreateIdTableStatementOptions()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$20.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$20.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.PostgreSQL95Dialect", "org.hibernate.dialect.PostgreSQL95Dialect()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getReadLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getForUpdateSkipLockedString()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL95Dialect.getForUpdateSkipLockedString(java.lang.String)"], ["boolean", "org.hibernate.dialect.PostgreSQL95Dialect.supportsSkipLocked()"], ["org.hibernate.dialect.MariaDB10Dialect", "org.hibernate.dialect.MariaDB10Dialect()"], ["boolean", "org.hibernate.dialect.MariaDB10Dialect.supportsIfExistsBeforeConstraintName()"], ["org.hibernate.dialect.PostgreSQL9Dialect", "org.hibernate.dialect.PostgreSQL9Dialect()"], ["boolean", "org.hibernate.dialect.PostgreSQL9Dialect.supportsIfExistsBeforeConstraintName()"], ["java.lang.String", "org.hibernate.dialect.FirebirdDialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.FirebirdDialect$1.supportsLimit()"], ["boolean", "org.hibernate.dialect.FirebirdDialect$1.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.FirebirdDialect$1.bindLimitParametersInReverseOrder()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$9.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$9.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.TeradataDialect", "org.hibernate.dialect.TeradataDialect()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getAddColumnString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.TeradataDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getCreateIdTableStatementOptions()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getDropIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getTruncateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getTypeName(int, int, int, int)"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsCascadeDelete()"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsCircularCascadeDeleteConstraints()"], ["boolean", "org.hibernate.dialect.TeradataDialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsEmptyInList()"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getSelectClauseNullString(int)"], ["java.lang.String", "org.hibernate.dialect.TeradataDialect.getCreateMultisetTableString()"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.TeradataDialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.TeradataDialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["boolean", "org.hibernate.dialect.TeradataDialect.supportsBindAsCallableArgument()"], ["int", "org.hibernate.dialect.TeradataDialect.getInExpressionCountLimit()"], ["org.hibernate.dialect.JDataStoreDialect", "org.hibernate.dialect.JDataStoreDialect()"], ["java.lang.String", "org.hibernate.dialect.JDataStoreDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.JDataStoreDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.JDataStoreDialect.getCascadeConstraintsString()"], ["java.lang.String", "org.hibernate.dialect.JDataStoreDialect.getNoColumnsInsertString()"], ["boolean", "org.hibernate.dialect.JDataStoreDialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.JDataStoreDialect.supportsTableCheck()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.JDataStoreDialect.getIdentityColumnSupport()"], ["org.hibernate.dialect.Teradata14Dialect", "org.hibernate.dialect.Teradata14Dialect()"], ["java.lang.String", "org.hibernate.dialect.Teradata14Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.Teradata14Dialect.getTypeName(int, int, int, int)"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.supportsExpectedLobUsagePattern()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.Teradata14Dialect.getViolatedConstraintNameExtracter()"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.supportsUnboundedLobLocatorMaterialization()"], ["int", "org.hibernate.dialect.Teradata14Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.Teradata14Dialect.getResultSet(java.sql.CallableStatement)"], ["java.lang.String", "org.hibernate.dialect.Teradata14Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Teradata14Dialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Teradata14Dialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map)"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.useFollowOnLocking(org.hibernate.engine.spi.QueryParameters)"], ["boolean", "org.hibernate.dialect.Teradata14Dialect.supportsLockTimeouts()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Teradata14Dialect.getIdentityColumnSupport()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$19.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$19.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.Oracle10gDialect", "org.hibernate.dialect.Oracle10gDialect()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.Oracle10gDialect.createOuterJoinFragment()"], ["java.lang.String", "org.hibernate.dialect.Oracle10gDialect.getCrossJoinSeparator()"], ["java.lang.String", "org.hibernate.dialect.Oracle10gDialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Oracle10gDialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.Oracle10gDialect.getForUpdateSkipLockedString()"], ["java.lang.String", "org.hibernate.dialect.Oracle10gDialect.getForUpdateSkipLockedString(java.lang.String)"], ["java.sql.ResultSet", "org.hibernate.dialect.Oracle10gDialect.getResultSet(java.sql.CallableStatement, int)"], ["int", "org.hibernate.dialect.Oracle10gDialect.registerResultSetOutParameter(java.sql.CallableStatement, java.lang.String)"], ["java.sql.ResultSet", "org.hibernate.dialect.Oracle10gDialect.getResultSet(java.sql.CallableStatement, java.lang.String)"], ["boolean", "org.hibernate.dialect.Oracle10gDialect.supportsSkipLocked()"], ["java.sql.Blob", "org.hibernate.dialect.Dialect$3.mergeBlob(java.sql.Blob, java.sql.Blob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.Clob", "org.hibernate.dialect.Dialect$3.mergeClob(java.sql.Clob, java.sql.Clob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.NClob", "org.hibernate.dialect.Dialect$3.mergeNClob(java.sql.NClob, java.sql.NClob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.OracleDialect", "org.hibernate.dialect.OracleDialect()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.OracleDialect.createOuterJoinFragment()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.OracleDialect.createCaseFragment()"], ["java.lang.String", "org.hibernate.dialect.OracleDialect.getLimitString(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.OracleDialect.getSelectClauseNullString(int)"], ["java.lang.String", "org.hibernate.dialect.OracleDialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.OracleDialect.getCurrentTimestampSQLFunctionName()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$12.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$12.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.MariaDBDialect", "org.hibernate.dialect.MariaDBDialect()"], ["boolean", "org.hibernate.dialect.MariaDBDialect.supportsRowValueConstructorSyntaxInInList()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect$3.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect$3.getCreateIdTableCommand()"], ["org.hibernate.dialect.HANAColumnStoreDialect", "org.hibernate.dialect.HANAColumnStoreDialect()"], ["java.lang.String", "org.hibernate.dialect.HANAColumnStoreDialect.getCreateTableString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.HANAColumnStoreDialect.getDefaultMultiTableBulkIdStrategy()"], ["org.hibernate.dialect.SQLServerDialect", "org.hibernate.dialect.SQLServerDialect()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getNoColumnsInsertString()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getLimitString(java.lang.String, int, int)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.SQLServerDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsVariableLimit()"], ["char", "org.hibernate.dialect.SQLServerDialect.closeQuote()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getCurrentSchemaCommand()"], ["char", "org.hibernate.dialect.SQLServerDialect.openQuote()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsResultSetPositionQueryMethodsOnForwardOnlyCursor()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsCircularCascadeDeleteConstraints()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["int", "org.hibernate.dialect.SQLServerDialect.getInExpressionCountLimit()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.SQLServerDialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsPartitionBy()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsTuplesInSubqueries()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsEmptyInList()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getSelectGUIDString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.SQLServerDialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.supportsCurrentTimestampSelection()"], ["java.sql.ResultSet", "org.hibernate.dialect.SQLServerDialect.getResultSet(java.sql.CallableStatement)"], ["int", "org.hibernate.dialect.SQLServerDialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map)"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.SQLServerDialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getNullColumnString()"], ["java.lang.String", "org.hibernate.dialect.SQLServerDialect.getAddColumnString()"], ["org.hibernate.dialect.MySQL8Dialect", "org.hibernate.dialect.MySQL8Dialect()"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getReadLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getForUpdateSkipLockedString()"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getForUpdateSkipLockedString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getForUpdateNowaitString()"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getForUpdateNowaitString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.MySQL8Dialect.getForUpdateString(java.lang.String)"], ["boolean", "org.hibernate.dialect.MySQL8Dialect.supportsSkipLocked()"], ["boolean", "org.hibernate.dialect.MySQL8Dialect.supportsNoWait()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$2.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$2.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.HANARowStoreDialect", "org.hibernate.dialect.HANARowStoreDialect()"], ["java.lang.String", "org.hibernate.dialect.HANARowStoreDialect.getCreateTableString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.HANARowStoreDialect.getDefaultMultiTableBulkIdStrategy()"], ["java.lang.String", "org.hibernate.dialect.HANAColumnStoreDialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.HANAColumnStoreDialect$1.getTruncateIdTableCommand()"], ["org.hibernate.dialect.PostgreSQL81Dialect", "org.hibernate.dialect.PostgreSQL81Dialect()"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.dialect.PostgreSQL81Dialect.getSqlTypeDescriptorOverride(int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getCascadeConstraintsString()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getQuerySequencesString()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.PostgreSQL81Dialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getLimitString(java.lang.String, boolean)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.bindLimitParametersInReverseOrder()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getForUpdateString(java.lang.String, org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getNoColumnsInsertString()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getCaseInsensitiveLike()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsCaseInsensitiveLike()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getNativeIdentifierGeneratorStrategy()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsOuterJoinForUpdate()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.useInputStreamToInsertBlob()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsUnionAll()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getSelectClauseNullString(int)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsCommentOn()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.PostgreSQL81Dialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.requiresParensForTupleDistinctCounts()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.toBooleanValueString(boolean)"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.PostgreSQL81Dialect.getViolatedConstraintNameExtracter()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.PostgreSQL81Dialect.buildSQLExceptionConversionDelegate()"], ["int", "org.hibernate.dialect.PostgreSQL81Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.PostgreSQL81Dialect.getResultSet(java.sql.CallableStatement)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsPooledSequences()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsExpectedLobUsagePattern()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsUnboundedLobLocatorMaterialization()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getReadLockString(java.lang.String, int)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsRowValueConstructorSyntax()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getForUpdateNowaitString()"], ["java.lang.String", "org.hibernate.dialect.PostgreSQL81Dialect.getForUpdateNowaitString(java.lang.String)"], ["org.hibernate.procedure.spi.CallableStatementSupport", "org.hibernate.dialect.PostgreSQL81Dialect.getCallableStatementSupport()"], ["java.sql.ResultSet", "org.hibernate.dialect.PostgreSQL81Dialect.getResultSet(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.PostgreSQL81Dialect.getResultSet(java.sql.CallableStatement, java.lang.String)"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.qualifyIndexName()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.PostgreSQL81Dialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsNationalizedTypes()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsNoWait()"], ["boolean", "org.hibernate.dialect.PostgreSQL81Dialect.supportsJdbcConnectionLobCreation(java.sql.DatabaseMetaData)"], ["org.hibernate.dialect.PointbaseDialect", "org.hibernate.dialect.PointbaseDialect()"], ["java.lang.String", "org.hibernate.dialect.PointbaseDialect.getAddColumnString()"], ["boolean", "org.hibernate.dialect.PointbaseDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.PointbaseDialect.getCascadeConstraintsString()"], ["java.lang.String", "org.hibernate.dialect.PointbaseDialect.getForUpdateString()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.PointbaseDialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["org.hibernate.dialect.Ingres9Dialect", "org.hibernate.dialect.Ingres9Dialect()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsOuterJoinForUpdate()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.forUpdateOfColumns()"], ["java.lang.String", "org.hibernate.dialect.Ingres9Dialect.getQuerySequencesString()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsPooledSequences()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsCurrentTimestampSelection()"], ["java.lang.String", "org.hibernate.dialect.Ingres9Dialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.Ingres9Dialect.getCurrentTimestampSQLFunctionName()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Ingres9Dialect.getDefaultLimitHandler()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.Ingres9Dialect.useMaxForLimit()"], ["java.lang.String", "org.hibernate.dialect.Ingres9Dialect.getLimitString(java.lang.String, int, int)"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Ingres9Dialect.getIdentityColumnSupport()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$16.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$16.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.DerbyTenSevenDialect", "org.hibernate.dialect.DerbyTenSevenDialect()"], ["java.lang.String", "org.hibernate.dialect.DerbyTenSevenDialect.toBooleanValueString(boolean)"], ["java.lang.String", "org.hibernate.dialect.ColumnAliasExtractor$2.extractColumnAlias(java.sql.ResultSetMetaData, int)"], ["org.hibernate.dialect.AbstractHANADialect$MaterializedNClob", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob(java.lang.String)"], ["void", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.truncate(long)"], ["int", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.setString(long, java.lang.String, int, int)"], ["int", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.setString(long, java.lang.String)"], ["java.io.Writer", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.setCharacterStream(long)"], ["java.io.OutputStream", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.setAsciiStream(long)"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.position(java.sql.Clob, long)"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.position(java.lang.String, long)"], ["long", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.length()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.getSubString(long, int)"], ["java.io.Reader", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.getCharacterStream(long, long)"], ["java.io.Reader", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.getCharacterStream()"], ["java.io.InputStream", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.getAsciiStream()"], ["void", "org.hibernate.dialect.AbstractHANADialect$MaterializedNClob.free()"], ["org.hibernate.dialect.identity.Oracle12cGetGeneratedKeysDelegate", "org.hibernate.dialect.identity.Oracle12cGetGeneratedKeysDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["org.hibernate.dialect.identity.JDataStoreIdentityColumnSupport", "org.hibernate.dialect.identity.JDataStoreIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.JDataStoreIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.JDataStoreIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.JDataStoreIdentityColumnSupport.getIdentityColumnString(int)"], ["org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport", "org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport.getIdentityInsertString()"], ["java.lang.String", "org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.CUBRIDIdentityColumnSupport.getIdentityColumnString(int)"], ["org.hibernate.dialect.identity.DB2390IdentityColumnSupport", "org.hibernate.dialect.identity.DB2390IdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.identity.DB2390IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["org.hibernate.dialect.identity.H2IdentityColumnSupport", "org.hibernate.dialect.identity.H2IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.H2IdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.H2IdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.H2IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.H2IdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.IdentityColumnSupportImpl", "org.hibernate.dialect.identity.IdentityColumnSupportImpl()"], ["boolean", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.supportsIdentityColumns()"], ["boolean", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.supportsInsertSelectIdentity()"], ["boolean", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.hasDataTypeInIdentityColumn()"], ["java.lang.String", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.appendIdentitySelectToInsert(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.getIdentityInsertString()"], ["org.hibernate.dialect.identity.GetGeneratedKeysDelegate", "org.hibernate.dialect.identity.IdentityColumnSupportImpl.buildGetGeneratedKeysDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport.supportsIdentityColumns()"], ["boolean", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport.supportsInsertSelectIdentity()"], ["java.lang.String", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport.getIdentityColumnString(int)"], ["org.hibernate.dialect.identity.GetGeneratedKeysDelegate", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport.buildGetGeneratedKeysDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.dialect.identity.Oracle12cIdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.HSQLIdentityColumnSupport", "org.hibernate.dialect.identity.HSQLIdentityColumnSupport(int)"], ["boolean", "org.hibernate.dialect.identity.HSQLIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.HSQLIdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.HSQLIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.HSQLIdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport", "org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport.getIdentityColumnString(int)"], ["boolean", "org.hibernate.dialect.identity.PostgreSQL10IdentityColumnSupport.hasDataTypeInIdentityColumn()"], ["org.hibernate.dialect.identity.Ingres10IdentityColumnSupport", "org.hibernate.dialect.identity.Ingres10IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.Ingres10IdentityColumnSupport.supportsIdentityColumns()"], ["boolean", "org.hibernate.dialect.identity.Ingres10IdentityColumnSupport.hasDataTypeInIdentityColumn()"], ["java.lang.String", "org.hibernate.dialect.identity.Ingres10IdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.Ingres10IdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.InformixIdentityColumnSupport", "org.hibernate.dialect.identity.InformixIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.InformixIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.InformixIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.InformixIdentityColumnSupport.getIdentityColumnString(int)"], ["boolean", "org.hibernate.dialect.identity.InformixIdentityColumnSupport.hasDataTypeInIdentityColumn()"], ["org.hibernate.dialect.identity.MySQLIdentityColumnSupport", "org.hibernate.dialect.identity.MySQLIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.MySQLIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.MySQLIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.MySQLIdentityColumnSupport.getIdentityColumnString(int)"], ["org.hibernate.dialect.identity.HANAIdentityColumnSupport", "org.hibernate.dialect.identity.HANAIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.HANAIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.HANAIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.HANAIdentityColumnSupport.getIdentityColumnString(int)"], ["org.hibernate.dialect.identity.DB2IdentityColumnSupport", "org.hibernate.dialect.identity.DB2IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.DB2IdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.DB2IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.DB2IdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.DB2IdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.Teradata14IdentityColumnSupport", "org.hibernate.dialect.identity.Teradata14IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.Teradata14IdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.Teradata14IdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.Teradata14IdentityColumnSupport.getIdentityInsertString()"], ["org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport", "org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport.getIdentityColumnString(int)"], ["boolean", "org.hibernate.dialect.identity.PostgreSQL81IdentityColumnSupport.hasDataTypeInIdentityColumn()"], ["org.hibernate.dialect.identity.GetGeneratedKeysDelegate", "org.hibernate.dialect.identity.GetGeneratedKeysDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect)"], ["org.hibernate.id.insert.IdentifierGeneratingInsert", "org.hibernate.dialect.identity.GetGeneratedKeysDelegate.prepareIdentifierGeneratingInsert()"], ["java.io.Serializable", "org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(java.sql.PreparedStatement, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.dialect.identity.SybaseAnywhereIdentityColumnSupport", "org.hibernate.dialect.identity.SybaseAnywhereIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.SybaseAnywhereIdentityColumnSupport.supportsInsertSelectIdentity()"], ["org.hibernate.dialect.identity.MimerSQLIdentityColumnSupport", "org.hibernate.dialect.identity.MimerSQLIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.MimerSQLIdentityColumnSupport.supportsIdentityColumns()"], ["org.hibernate.dialect.identity.Ingres9IdentityColumnSupport", "org.hibernate.dialect.identity.Ingres9IdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.identity.Ingres9IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["org.hibernate.dialect.identity.SQLServerIdentityColumnSupport", "org.hibernate.dialect.identity.SQLServerIdentityColumnSupport()"], ["java.lang.String", "org.hibernate.dialect.identity.SQLServerIdentityColumnSupport.appendIdentitySelectToInsert(java.lang.String)"], ["org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport.supportsIdentityColumns()"], ["java.lang.String", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["boolean", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport.supportsInsertSelectIdentity()"], ["java.lang.String", "org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport.appendIdentitySelectToInsert(java.lang.String)"], ["org.hibernate.dialect.identity.Chache71IdentityColumnSupport", "org.hibernate.dialect.identity.Chache71IdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.identity.Chache71IdentityColumnSupport.supportsIdentityColumns()"], ["boolean", "org.hibernate.dialect.identity.Chache71IdentityColumnSupport.hasDataTypeInIdentityColumn()"], ["java.lang.String", "org.hibernate.dialect.identity.Chache71IdentityColumnSupport.getIdentityColumnString(int)"], ["java.lang.String", "org.hibernate.dialect.identity.Chache71IdentityColumnSupport.getIdentitySelectString(java.lang.String, java.lang.String, int)"], ["org.hibernate.dialect.Database[]", "org.hibernate.dialect.Database.values()"], ["org.hibernate.dialect.Database", "org.hibernate.dialect.Database.valueOf(java.lang.String)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$26.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$26.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$17.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$17.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.Ingres10Dialect", "org.hibernate.dialect.Ingres10Dialect()"], ["java.lang.String", "org.hibernate.dialect.Ingres10Dialect.toBooleanValueString(boolean)"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Ingres10Dialect.getIdentityColumnSupport()"], ["org.hibernate.dialect.DB2390V8Dialect", "org.hibernate.dialect.DB2390V8Dialect()"], ["boolean", "org.hibernate.dialect.DB2390V8Dialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.DB2390V8Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2390V8Dialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2390V8Dialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2390V8Dialect.getQuerySequencesString()"], ["org.hibernate.dialect.PostgreSQL91Dialect", "org.hibernate.dialect.PostgreSQL91Dialect()"], ["boolean", "org.hibernate.dialect.PostgreSQL91Dialect.supportsPartitionBy()"], ["boolean", "org.hibernate.dialect.PostgreSQL91Dialect.supportsNonQueryWithCTE()"], ["org.hibernate.dialect.CUBRIDDialect", "org.hibernate.dialect.CUBRIDDialect()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getDropForeignKeyString()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.qualifyIndexName()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsExistsInSelect()"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.CUBRIDDialect.getSequenceInformationExtractor()"], ["char", "org.hibernate.dialect.CUBRIDDialect.openQuote()"], ["char", "org.hibernate.dialect.CUBRIDDialect.closeQuote()"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getForUpdateString()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsUnionAll()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsCurrentTimestampSelection()"], ["java.lang.String", "org.hibernate.dialect.CUBRIDDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.isCurrentTimestampSelectStringCallable()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsIfExistsBeforeTableName()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsTupleDistinctCounts()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.CUBRIDDialect.getLimitHandler()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.CUBRIDDialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.CUBRIDDialect.supportsPartitionBy()"], ["java.sql.Blob", "org.hibernate.dialect.Dialect$1.mergeBlob(java.sql.Blob, java.sql.Blob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.Clob", "org.hibernate.dialect.Dialect$1.mergeClob(java.sql.Clob, java.sql.Clob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.sql.NClob", "org.hibernate.dialect.Dialect$1.mergeNClob(java.sql.NClob, java.sql.NClob, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$18.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$18.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["org.hibernate.dialect.InterbaseDialect", "org.hibernate.dialect.InterbaseDialect()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.InterbaseDialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getForUpdateString(java.lang.String)"], ["boolean", "org.hibernate.dialect.InterbaseDialect.supportsSequences()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.InterbaseDialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.InterbaseDialect.supportsLimit()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getLimitString(java.lang.String, boolean)"], ["boolean", "org.hibernate.dialect.InterbaseDialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.InterbaseDialect.bindLimitParametersInReverseOrder()"], ["java.lang.String", "org.hibernate.dialect.InterbaseDialect.getCurrentTimestampSelectString()"], ["boolean", "org.hibernate.dialect.InterbaseDialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.HSQLDialect$HSQLLimitHandler.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.HSQLDialect$HSQLLimitHandler.supportsLimit()"], ["boolean", "org.hibernate.dialect.HSQLDialect$HSQLLimitHandler.bindLimitParametersFirst()"], ["java.lang.String", "org.hibernate.dialect.ColumnAliasExtractor$1.extractColumnAlias(java.sql.ResultSetMetaData, int)"], ["org.hibernate.dialect.TypeNames", "org.hibernate.dialect.TypeNames()"], ["java.lang.String", "org.hibernate.dialect.TypeNames.get(int)"], ["java.lang.String", "org.hibernate.dialect.TypeNames.get(int, long, int, int)"], ["void", "org.hibernate.dialect.TypeNames.put(int, long, java.lang.String)"], ["void", "org.hibernate.dialect.TypeNames.put(int, java.lang.String)"], ["boolean", "org.hibernate.dialect.TypeNames.containsTypeName(java.lang.String)"], ["org.hibernate.dialect.DB2390Dialect", "org.hibernate.dialect.DB2390Dialect()"], ["boolean", "org.hibernate.dialect.DB2390Dialect.supportsSequences()"], ["java.lang.String", "org.hibernate.dialect.DB2390Dialect.getQuerySequencesString()"], ["boolean", "org.hibernate.dialect.DB2390Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.DB2390Dialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.DB2390Dialect.supportsVariableLimit()"], ["java.lang.String", "org.hibernate.dialect.DB2390Dialect.getLimitString(java.lang.String, int, int)"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.DB2390Dialect.getLimitHandler()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.DB2390Dialect.getIdentityColumnSupport()"], ["org.hibernate.dialect.SAPDBDialect", "org.hibernate.dialect.SAPDBDialect()"], ["boolean", "org.hibernate.dialect.SAPDBDialect.dropConstraints()"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], boolean)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getAddPrimaryKeyConstraintString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getNullColumnString()"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getCreateSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getDropSequenceString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.SAPDBDialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.SAPDBDialect.getSequenceInformationExtractor()"], ["boolean", "org.hibernate.dialect.SAPDBDialect.supportsSequences()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.SAPDBDialect.createCaseFragment()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.SAPDBDialect.getDefaultMultiTableBulkIdStrategy()"], ["boolean", "org.hibernate.dialect.SAPDBDialect.supportsJdbcConnectionLobCreation(java.sql.DatabaseMetaData)"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Dialect.getDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Dialect.getDialect(java.util.Properties)"], ["java.util.Properties", "org.hibernate.dialect.Dialect.getDefaultProperties()"], ["java.lang.String", "org.hibernate.dialect.Dialect.toString()"], ["void", "org.hibernate.dialect.Dialect.contributeTypes(org.hibernate.boot.model.TypeContributions, org.hibernate.service.ServiceRegistry)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getTypeName(int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getTypeName(int, long, int, int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCastTypeName(int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.cast(java.lang.String, int, int, int, int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.cast(java.lang.String, int, int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.cast(java.lang.String, int, int, int)"], ["org.hibernate.type.descriptor.sql.SqlTypeDescriptor", "org.hibernate.dialect.Dialect.remapSqlTypeDescriptor(org.hibernate.type.descriptor.sql.SqlTypeDescriptor)"], ["org.hibernate.dialect.LobMergeStrategy", "org.hibernate.dialect.Dialect.getLobMergeStrategy()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getHibernateTypeName(int)"], ["boolean", "org.hibernate.dialect.Dialect.isTypeNameRegistered(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getHibernateTypeName(int, int, int, int)"], ["java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction>", "org.hibernate.dialect.Dialect.getFunctions()"], ["java.lang.Class", "org.hibernate.dialect.Dialect.getNativeIdentifierGeneratorClass()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getNativeIdentifierGeneratorStrategy()"], ["org.hibernate.dialect.identity.IdentityColumnSupport", "org.hibernate.dialect.Dialect.getIdentityColumnSupport()"], ["boolean", "org.hibernate.dialect.Dialect.supportsSequences()"], ["boolean", "org.hibernate.dialect.Dialect.supportsPooledSequences()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getSequenceNextValString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getSelectSequenceNextValString(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getCreateSequenceStrings(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getCreateSequenceStrings(java.lang.String, int, int)"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getDropSequenceStrings(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getQuerySequencesString()"], ["org.hibernate.tool.schema.extract.spi.SequenceInformationExtractor", "org.hibernate.dialect.Dialect.getSequenceInformationExtractor()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getSelectGUIDString()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Dialect.getLimitHandler()"], ["boolean", "org.hibernate.dialect.Dialect.supportsLimit()"], ["boolean", "org.hibernate.dialect.Dialect.supportsLimitOffset()"], ["boolean", "org.hibernate.dialect.Dialect.supportsVariableLimit()"], ["boolean", "org.hibernate.dialect.Dialect.bindLimitParametersInReverseOrder()"], ["boolean", "org.hibernate.dialect.Dialect.bindLimitParametersFirst()"], ["boolean", "org.hibernate.dialect.Dialect.useMaxForLimit()"], ["boolean", "org.hibernate.dialect.Dialect.forceLimitUsage()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getLimitString(java.lang.String, int, int)"], ["int", "org.hibernate.dialect.Dialect.convertToFirstRowValue(int)"], ["boolean", "org.hibernate.dialect.Dialect.supportsLockTimeouts()"], ["boolean", "org.hibernate.dialect.Dialect.isLockTimeoutParameterized()"], ["org.hibernate.dialect.lock.LockingStrategy", "org.hibernate.dialect.Dialect.getLockingStrategy(org.hibernate.persister.entity.Lockable, org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateString(org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateString(org.hibernate.LockMode)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getWriteLockString(java.lang.String, int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getReadLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getReadLockString(java.lang.String, int)"], ["boolean", "org.hibernate.dialect.Dialect.forUpdateOfColumns()"], ["boolean", "org.hibernate.dialect.Dialect.supportsOuterJoinForUpdate()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateString(java.lang.String, org.hibernate.LockOptions)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateNowaitString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateSkipLockedString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateNowaitString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getForUpdateSkipLockedString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.appendLockHint(org.hibernate.LockMode, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.appendLockHint(org.hibernate.LockOptions, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map<java.lang.String, java.lang.String[]>)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCreateTableString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAlterTableString(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCreateMultisetTableString()"], ["org.hibernate.hql.spi.id.MultiTableBulkIdStrategy", "org.hibernate.dialect.Dialect.getDefaultMultiTableBulkIdStrategy()"], ["int", "org.hibernate.dialect.Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int)"], ["int", "org.hibernate.dialect.Dialect.registerResultSetOutParameter(java.sql.CallableStatement, java.lang.String)"], ["java.sql.ResultSet", "org.hibernate.dialect.Dialect.getResultSet(java.sql.CallableStatement)"], ["java.sql.ResultSet", "org.hibernate.dialect.Dialect.getResultSet(java.sql.CallableStatement, int)"], ["java.sql.ResultSet", "org.hibernate.dialect.Dialect.getResultSet(java.sql.CallableStatement, java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.supportsCurrentTimestampSelection()"], ["boolean", "org.hibernate.dialect.Dialect.isCurrentTimestampSelectStringCallable()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCurrentTimestampSQLFunctionName()"], ["org.hibernate.exception.spi.SQLExceptionConverter", "org.hibernate.dialect.Dialect.buildSQLExceptionConverter()"], ["org.hibernate.exception.spi.SQLExceptionConversionDelegate", "org.hibernate.dialect.Dialect.buildSQLExceptionConversionDelegate()"], ["org.hibernate.exception.spi.ViolatedConstraintNameExtracter", "org.hibernate.dialect.Dialect.getViolatedConstraintNameExtracter()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getSelectClauseNullString(int)"], ["boolean", "org.hibernate.dialect.Dialect.supportsUnionAll()"], ["org.hibernate.sql.JoinFragment", "org.hibernate.dialect.Dialect.createOuterJoinFragment()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.Dialect.createCaseFragment()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getNoColumnsInsertString()"], ["boolean", "org.hibernate.dialect.Dialect.supportsNoColumnsInsert()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getLowercaseFunction()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCaseInsensitiveLike()"], ["boolean", "org.hibernate.dialect.Dialect.supportsCaseInsensitiveLike()"], ["java.lang.String", "org.hibernate.dialect.Dialect.transformSelectString(java.lang.String)"], ["int", "org.hibernate.dialect.Dialect.getMaxAliasLength()"], ["java.lang.String", "org.hibernate.dialect.Dialect.toBooleanValueString(boolean)"], ["org.hibernate.engine.jdbc.env.spi.IdentifierHelper", "org.hibernate.dialect.Dialect.buildIdentifierHelper(org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder, java.sql.DatabaseMetaData)"], ["char", "org.hibernate.dialect.Dialect.openQuote()"], ["char", "org.hibernate.dialect.Dialect.closeQuote()"], ["java.lang.String", "org.hibernate.dialect.Dialect.quote(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.canCreateCatalog()"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getCreateCatalogCommand(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getDropCatalogCommand(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.canCreateSchema()"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getCreateSchemaCommand(java.lang.String)"], ["java.lang.String[]", "org.hibernate.dialect.Dialect.getDropSchemaCommand(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCurrentSchemaCommand()"], ["org.hibernate.engine.jdbc.env.spi.SchemaNameResolver", "org.hibernate.dialect.Dialect.getSchemaNameResolver()"], ["boolean", "org.hibernate.dialect.Dialect.hasAlterTable()"], ["boolean", "org.hibernate.dialect.Dialect.dropConstraints()"], ["boolean", "org.hibernate.dialect.Dialect.qualifyIndexName()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddColumnString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddColumnSuffixString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getDropForeignKeyString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getTableTypeString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], boolean)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddForeignKeyConstraintString(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddPrimaryKeyConstraintString(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.hasSelfReferentialForeignKeyBug()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getNullColumnString()"], ["boolean", "org.hibernate.dialect.Dialect.supportsCommentOn()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getTableComment(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getColumnComment(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.supportsIfExistsBeforeTableName()"], ["boolean", "org.hibernate.dialect.Dialect.supportsIfExistsAfterTableName()"], ["boolean", "org.hibernate.dialect.Dialect.supportsIfExistsBeforeConstraintName()"], ["boolean", "org.hibernate.dialect.Dialect.supportsIfExistsAfterConstraintName()"], ["boolean", "org.hibernate.dialect.Dialect.supportsIfExistsAfterAlterTable()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getDropTableString(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.supportsColumnCheck()"], ["boolean", "org.hibernate.dialect.Dialect.supportsTableCheck()"], ["boolean", "org.hibernate.dialect.Dialect.supportsCascadeDelete()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCascadeConstraintsString()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getCrossJoinSeparator()"], ["org.hibernate.dialect.ColumnAliasExtractor", "org.hibernate.dialect.Dialect.getColumnAliasExtractor()"], ["boolean", "org.hibernate.dialect.Dialect.supportsEmptyInList()"], ["boolean", "org.hibernate.dialect.Dialect.areStringComparisonsCaseInsensitive()"], ["boolean", "org.hibernate.dialect.Dialect.supportsRowValueConstructorSyntax()"], ["boolean", "org.hibernate.dialect.Dialect.supportsRowValueConstructorSyntaxInInList()"], ["boolean", "org.hibernate.dialect.Dialect.useInputStreamToInsertBlob()"], ["boolean", "org.hibernate.dialect.Dialect.supportsParametersInInsertSelect()"], ["boolean", "org.hibernate.dialect.Dialect.replaceResultVariableInOrderByClauseWithPosition()"], ["java.lang.String", "org.hibernate.dialect.Dialect.renderOrderByElement(java.lang.String, java.lang.String, java.lang.String, org.hibernate.NullPrecedence)"], ["boolean", "org.hibernate.dialect.Dialect.requiresCastingOfParametersInSelectClause()"], ["boolean", "org.hibernate.dialect.Dialect.supportsResultSetPositionQueryMethodsOnForwardOnlyCursor()"], ["boolean", "org.hibernate.dialect.Dialect.supportsCircularCascadeDeleteConstraints()"], ["boolean", "org.hibernate.dialect.Dialect.supportsSubselectAsInPredicateLHS()"], ["boolean", "org.hibernate.dialect.Dialect.supportsExpectedLobUsagePattern()"], ["boolean", "org.hibernate.dialect.Dialect.supportsLobValueChangePropogation()"], ["boolean", "org.hibernate.dialect.Dialect.supportsUnboundedLobLocatorMaterialization()"], ["boolean", "org.hibernate.dialect.Dialect.supportsSubqueryOnMutatingTable()"], ["boolean", "org.hibernate.dialect.Dialect.supportsExistsInSelect()"], ["boolean", "org.hibernate.dialect.Dialect.doesReadCommittedCauseWritersToBlockReaders()"], ["boolean", "org.hibernate.dialect.Dialect.doesRepeatableReadCauseReadersToBlockWriters()"], ["boolean", "org.hibernate.dialect.Dialect.supportsBindAsCallableArgument()"], ["boolean", "org.hibernate.dialect.Dialect.supportsTupleCounts()"], ["boolean", "org.hibernate.dialect.Dialect.supportsTupleDistinctCounts()"], ["boolean", "org.hibernate.dialect.Dialect.requiresParensForTupleDistinctCounts()"], ["int", "org.hibernate.dialect.Dialect.getInExpressionCountLimit()"], ["boolean", "org.hibernate.dialect.Dialect.forceLobAsLastValue()"], ["boolean", "org.hibernate.dialect.Dialect.useFollowOnLocking()"], ["boolean", "org.hibernate.dialect.Dialect.useFollowOnLocking(org.hibernate.engine.spi.QueryParameters)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getNotExpression(java.lang.String)"], ["org.hibernate.dialect.unique.UniqueDelegate", "org.hibernate.dialect.Dialect.getUniqueDelegate()"], ["boolean", "org.hibernate.dialect.Dialect.supportsUnique()"], ["boolean", "org.hibernate.dialect.Dialect.supportsUniqueConstraintInCreateAlterTable()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getAddUniqueConstraintString(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.supportsNotNullUnique()"], ["java.lang.String", "org.hibernate.dialect.Dialect.getQueryHintString(java.lang.String, java.util.List<java.lang.String>)"], ["java.lang.String", "org.hibernate.dialect.Dialect.getQueryHintString(java.lang.String, java.lang.String)"], ["org.hibernate.ScrollMode", "org.hibernate.dialect.Dialect.defaultScrollMode()"], ["boolean", "org.hibernate.dialect.Dialect.supportsTuplesInSubqueries()"], ["org.hibernate.procedure.spi.CallableStatementSupport", "org.hibernate.dialect.Dialect.getCallableStatementSupport()"], ["org.hibernate.engine.jdbc.env.spi.NameQualifierSupport", "org.hibernate.dialect.Dialect.getNameQualifierSupport()"], ["org.hibernate.loader.BatchLoadSizingStrategy", "org.hibernate.dialect.Dialect.getDefaultBatchLoadSizingStrategy()"], ["boolean", "org.hibernate.dialect.Dialect.isJdbcLogWarningsEnabledByDefault()"], ["void", "org.hibernate.dialect.Dialect.augmentRecognizedTableTypes(java.util.List<java.lang.String>)"], ["boolean", "org.hibernate.dialect.Dialect.supportsPartitionBy()"], ["boolean", "org.hibernate.dialect.Dialect.supportsNamedParameters(java.sql.DatabaseMetaData)"], ["boolean", "org.hibernate.dialect.Dialect.supportsNationalizedTypes()"], ["boolean", "org.hibernate.dialect.Dialect.supportsNonQueryWithCTE()"], ["boolean", "org.hibernate.dialect.Dialect.supportsValuesList()"], ["boolean", "org.hibernate.dialect.Dialect.supportsSkipLocked()"], ["boolean", "org.hibernate.dialect.Dialect.supportsNoWait()"], ["boolean", "org.hibernate.dialect.Dialect.isLegacyLimitHandlerBehaviorEnabled()"], ["java.lang.String", "org.hibernate.dialect.Dialect.inlineLiteral(java.lang.String)"], ["boolean", "org.hibernate.dialect.Dialect.supportsJdbcConnectionLobCreation(java.sql.DatabaseMetaData)"], ["java.lang.String", "org.hibernate.dialect.Dialect.addSqlHintOrComment(java.lang.String, org.hibernate.engine.spi.QueryParameters, boolean)"], ["org.hibernate.dialect.PostgreSQL94Dialect", "org.hibernate.dialect.PostgreSQL94Dialect()"], ["org.hibernate.JDBCException", "org.hibernate.dialect.PostgreSQL81Dialect$4.convert(java.sql.SQLException, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect$1.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect$1.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.DerbyDialect$1.getCreateIdTableStatementOptions()"], ["java.lang.Class<? extends org.hibernate.dialect.Dialect>", "org.hibernate.dialect.Database$25.latestDialect()"], ["org.hibernate.dialect.Dialect", "org.hibernate.dialect.Database$25.resolveDialect(org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo)"], ["java.lang.String", "org.hibernate.dialect.MySQLDialect$1.processSql(java.lang.String, org.hibernate.engine.spi.RowSelection)"], ["boolean", "org.hibernate.dialect.MySQLDialect$1.supportsLimit()"], ["org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter", "org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter(org.hibernate.dialect.Dialect)"], ["java.lang.String[]", "org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter.getSqlCreateStrings(org.hibernate.mapping.Index, org.hibernate.boot.Metadata)"], ["java.lang.String[]", "org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter.getSqlCreateStrings(org.hibernate.boot.model.relational.Exportable, org.hibernate.boot.Metadata)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect$2.generateIdTableName(java.lang.String)"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect$2.getCreateIdTableCommand()"], ["java.lang.String", "org.hibernate.dialect.DB2Dialect$2.getCreateIdTableStatementOptions()"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect$4.toMetaDataSchemaName(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect$4.toMetaDataObjectName(org.hibernate.boot.model.naming.Identifier)"], ["java.lang.String", "org.hibernate.dialect.AbstractHANADialect$4.toMetaDataCatalogName(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.dialect.AbstractHANADialect$4.toIdentifier(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.dialect.AbstractHANADialect$4.toIdentifier(java.lang.String, boolean)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.dialect.AbstractHANADialect$4.normalizeQuoting(org.hibernate.boot.model.naming.Identifier)"], ["boolean", "org.hibernate.dialect.AbstractHANADialect$4.isReservedWord(java.lang.String)"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.dialect.AbstractHANADialect$4.applyGlobalQuoting(java.lang.String)"], ["org.hibernate.dialect.Oracle9iDialect", "org.hibernate.dialect.Oracle9iDialect()"], ["org.hibernate.sql.CaseFragment", "org.hibernate.dialect.Oracle9iDialect.createCaseFragment()"], ["org.hibernate.dialect.pagination.LimitHandler", "org.hibernate.dialect.Oracle9iDialect.getLimitHandler()"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getLimitString(java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getSelectClauseNullString(int)"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getCurrentTimestampSelectString()"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getCurrentTimestampSQLFunctionName()"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getForUpdateString()"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getWriteLockString(int)"], ["java.lang.String", "org.hibernate.dialect.Oracle9iDialect.getReadLockString(int)"], ["boolean", "org.hibernate.dialect.Oracle9iDialect.supportsRowValueConstructorSyntaxInInList()"], ["boolean", "org.hibernate.dialect.Oracle9iDialect.supportsTupleDistinctCounts()"], ["org.hibernate.SessionException", "org.hibernate.SessionException(java.lang.String)"], ["org.hibernate.SessionException", "org.hibernate.SessionException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.PersistentObjectException", "org.hibernate.PersistentObjectException(java.lang.String)"], ["default", "org.hibernate.Metamodel.javax.persistence.metamodel.EntityType getEntityTypeByName(java.lang.String)"], ["default", "org.hibernate.StatelessSessionBuilder.T setQueryParameterValidation(boolean)"], ["org.hibernate.InstantiationException", "org.hibernate.InstantiationException(java.lang.String, java.lang.Class, java.lang.Throwable)"], ["org.hibernate.InstantiationException", "org.hibernate.InstantiationException(java.lang.String, java.lang.Class)"], ["org.hibernate.InstantiationException", "org.hibernate.InstantiationException(java.lang.String, java.lang.Class, java.lang.Exception)"], ["java.lang.Class", "org.hibernate.InstantiationException.getPersistentClass()"], ["java.lang.Class", "org.hibernate.InstantiationException.getUninstantiatableClass()"], ["java.lang.String", "org.hibernate.InstantiationException.getMessage()"], ["java.lang.String", "org.hibernate.mapping.PropertyGeneration.getName()"], ["org.hibernate.mapping.PropertyGeneration", "org.hibernate.mapping.PropertyGeneration.parse(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.PropertyGeneration.toString()"], ["org.hibernate.mapping.IdentifierCollection", "org.hibernate.mapping.IdentifierCollection(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.IdentifierCollection", "org.hibernate.mapping.IdentifierCollection(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.IdentifierCollection.getIdentifier()"], ["void", "org.hibernate.mapping.IdentifierCollection.setIdentifier(org.hibernate.mapping.KeyValue)"], ["boolean", "org.hibernate.mapping.IdentifierCollection.isIdentified()"], ["boolean", "org.hibernate.mapping.IdentifierCollection.isSame(org.hibernate.mapping.Collection)"], ["boolean", "org.hibernate.mapping.IdentifierCollection.isSame(org.hibernate.mapping.IdentifierCollection)"], ["void", "org.hibernate.mapping.IdentifierCollection.validate(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.mapping.MappedSuperclass", "org.hibernate.mapping.MappedSuperclass(org.hibernate.mapping.MappedSuperclass, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.MappedSuperclass", "org.hibernate.mapping.MappedSuperclass.getSuperMappedSuperclass()"], ["boolean", "org.hibernate.mapping.MappedSuperclass.hasIdentifierProperty()"], ["boolean", "org.hibernate.mapping.MappedSuperclass.isVersioned()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.MappedSuperclass.getSuperPersistentClass()"], ["java.util.Iterator", "org.hibernate.mapping.MappedSuperclass.getDeclaredPropertyIterator()"], ["void", "org.hibernate.mapping.MappedSuperclass.addDeclaredProperty(org.hibernate.mapping.Property)"], ["java.lang.Class", "org.hibernate.mapping.MappedSuperclass.getMappedClass()"], ["void", "org.hibernate.mapping.MappedSuperclass.setMappedClass(java.lang.Class)"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.MappedSuperclass.getIdentifierProperty()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.MappedSuperclass.getDeclaredIdentifierProperty()"], ["void", "org.hibernate.mapping.MappedSuperclass.setDeclaredIdentifierProperty(org.hibernate.mapping.Property)"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.MappedSuperclass.getVersion()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.MappedSuperclass.getDeclaredVersion()"], ["void", "org.hibernate.mapping.MappedSuperclass.setDeclaredVersion(org.hibernate.mapping.Property)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.MappedSuperclass.getIdentifierMapper()"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.MappedSuperclass.getDeclaredIdentifierMapper()"], ["void", "org.hibernate.mapping.MappedSuperclass.setDeclaredIdentifierMapper(org.hibernate.mapping.Component)"], ["boolean", "org.hibernate.mapping.MappedSuperclass.hasProperty(java.lang.String)"], ["boolean", "org.hibernate.mapping.MappedSuperclass.isPropertyDefinedInHierarchy(java.lang.String)"], ["org.hibernate.mapping.ForeignKey", "org.hibernate.mapping.ForeignKey()"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.getExportIdentifier()"], ["void", "org.hibernate.mapping.ForeignKey.disableCreation()"], ["boolean", "org.hibernate.mapping.ForeignKey.isCreationEnabled()"], ["void", "org.hibernate.mapping.ForeignKey.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.sqlConstraintString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.ForeignKey.getReferencedTable()"], ["void", "org.hibernate.mapping.ForeignKey.setReferencedTable(org.hibernate.mapping.Table)"], ["void", "org.hibernate.mapping.ForeignKey.alignColumns()"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.getReferencedEntityName()"], ["void", "org.hibernate.mapping.ForeignKey.setReferencedEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.getKeyDefinition()"], ["void", "org.hibernate.mapping.ForeignKey.setKeyDefinition(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.sqlDropString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.mapping.ForeignKey.isCascadeDeleteEnabled()"], ["void", "org.hibernate.mapping.ForeignKey.setCascadeDeleteEnabled(boolean)"], ["boolean", "org.hibernate.mapping.ForeignKey.isPhysicalConstraint()"], ["java.util.List", "org.hibernate.mapping.ForeignKey.getReferencedColumns()"], ["boolean", "org.hibernate.mapping.ForeignKey.isReferenceToPrimaryKey()"], ["void", "org.hibernate.mapping.ForeignKey.addReferencedColumns(java.util.Iterator)"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.toString()"], ["java.lang.String", "org.hibernate.mapping.ForeignKey.generatedConstraintNamePrefix()"], ["org.hibernate.mapping.FetchProfile", "org.hibernate.mapping.FetchProfile(java.lang.String, org.hibernate.mapping.MetadataSource)"], ["java.lang.String", "org.hibernate.mapping.FetchProfile.getName()"], ["org.hibernate.mapping.MetadataSource", "org.hibernate.mapping.FetchProfile.getSource()"], ["void", "org.hibernate.mapping.FetchProfile.addFetch(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.mapping.FetchProfile.equals(java.lang.Object)"], ["int", "org.hibernate.mapping.FetchProfile.hashCode()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Column()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Column(java.lang.String)"], ["int", "org.hibernate.mapping.Column.getLength()"], ["void", "org.hibernate.mapping.Column.setLength(int)"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.Column.getValue()"], ["void", "org.hibernate.mapping.Column.setValue(org.hibernate.mapping.Value)"], ["java.lang.String", "org.hibernate.mapping.Column.getName()"], ["void", "org.hibernate.mapping.Column.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Column.getQuotedName()"], ["java.lang.String", "org.hibernate.mapping.Column.getQuotedName(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Column.getAlias(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Column.getAlias(org.hibernate.dialect.Dialect, org.hibernate.mapping.Table)"], ["boolean", "org.hibernate.mapping.Column.isNullable()"], ["void", "org.hibernate.mapping.Column.setNullable(boolean)"], ["int", "org.hibernate.mapping.Column.getTypeIndex()"], ["void", "org.hibernate.mapping.Column.setTypeIndex(int)"], ["boolean", "org.hibernate.mapping.Column.isUnique()"], ["int", "org.hibernate.mapping.Column.hashCode()"], ["boolean", "org.hibernate.mapping.Column.equals(java.lang.Object)"], ["boolean", "org.hibernate.mapping.Column.equals(org.hibernate.mapping.Column)"], ["int", "org.hibernate.mapping.Column.getSqlTypeCode(org.hibernate.engine.spi.Mapping)"], ["java.lang.Integer", "org.hibernate.mapping.Column.getSqlTypeCode()"], ["void", "org.hibernate.mapping.Column.setSqlTypeCode(java.lang.Integer)"], ["java.lang.String", "org.hibernate.mapping.Column.getSqlType(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.mapping.Column.getSqlType()"], ["void", "org.hibernate.mapping.Column.setSqlType(java.lang.String)"], ["void", "org.hibernate.mapping.Column.setUnique(boolean)"], ["boolean", "org.hibernate.mapping.Column.isQuoted()"], ["java.lang.String", "org.hibernate.mapping.Column.toString()"], ["java.lang.String", "org.hibernate.mapping.Column.getCheckConstraint()"], ["void", "org.hibernate.mapping.Column.setCheckConstraint(java.lang.String)"], ["boolean", "org.hibernate.mapping.Column.hasCheckConstraint()"], ["java.lang.String", "org.hibernate.mapping.Column.getTemplate(org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["boolean", "org.hibernate.mapping.Column.hasCustomRead()"], ["java.lang.String", "org.hibernate.mapping.Column.getReadExpr(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Column.getWriteExpr()"], ["boolean", "org.hibernate.mapping.Column.isFormula()"], ["java.lang.String", "org.hibernate.mapping.Column.getText(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Column.getText()"], ["int", "org.hibernate.mapping.Column.getPrecision()"], ["void", "org.hibernate.mapping.Column.setPrecision(int)"], ["int", "org.hibernate.mapping.Column.getScale()"], ["void", "org.hibernate.mapping.Column.setScale(int)"], ["java.lang.String", "org.hibernate.mapping.Column.getComment()"], ["void", "org.hibernate.mapping.Column.setComment(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Column.getDefaultValue()"], ["void", "org.hibernate.mapping.Column.setDefaultValue(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Column.getCustomWrite()"], ["void", "org.hibernate.mapping.Column.setCustomWrite(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Column.getCustomRead()"], ["void", "org.hibernate.mapping.Column.setCustomRead(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Column.getCanonicalName()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Column.clone()"], ["java.lang.Object", "org.hibernate.mapping.Column.clone()"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Component)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Join)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Collection)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Component)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Join)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Collection)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Component(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table, org.hibernate.mapping.PersistentClass)"], ["int", "org.hibernate.mapping.Component.getPropertySpan()"], ["java.util.Iterator", "org.hibernate.mapping.Component.getPropertyIterator()"], ["void", "org.hibernate.mapping.Component.addProperty(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.Component.addColumn(org.hibernate.mapping.Column)"], ["int", "org.hibernate.mapping.Component.getColumnSpan()"], ["boolean", "org.hibernate.mapping.Component.isEmbedded()"], ["java.lang.String", "org.hibernate.mapping.Component.getComponentClassName()"], ["java.lang.Class", "org.hibernate.mapping.Component.getComponentClass()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.Component.getOwner()"], ["java.lang.String", "org.hibernate.mapping.Component.getParentProperty()"], ["void", "org.hibernate.mapping.Component.setComponentClassName(java.lang.String)"], ["void", "org.hibernate.mapping.Component.setEmbedded(boolean)"], ["void", "org.hibernate.mapping.Component.setOwner(org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.mapping.Component.setParentProperty(java.lang.String)"], ["boolean", "org.hibernate.mapping.Component.isDynamic()"], ["void", "org.hibernate.mapping.Component.setDynamic(boolean)"], ["org.hibernate.type.Type", "org.hibernate.mapping.Component.getType()"], ["void", "org.hibernate.mapping.Component.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.util.Map", "org.hibernate.mapping.Component.getMetaAttributes()"], ["org.hibernate.mapping.MetaAttribute", "org.hibernate.mapping.Component.getMetaAttribute(java.lang.String)"], ["void", "org.hibernate.mapping.Component.setMetaAttributes(java.util.Map)"], ["java.lang.Object", "org.hibernate.mapping.Component.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.Component.isSame(org.hibernate.mapping.SimpleValue)"], ["boolean", "org.hibernate.mapping.Component.isSame(org.hibernate.mapping.Component)"], ["boolean[]", "org.hibernate.mapping.Component.getColumnInsertability()"], ["boolean[]", "org.hibernate.mapping.Component.getColumnUpdateability()"], ["boolean", "org.hibernate.mapping.Component.isKey()"], ["void", "org.hibernate.mapping.Component.setKey(boolean)"], ["boolean", "org.hibernate.mapping.Component.hasPojoRepresentation()"], ["void", "org.hibernate.mapping.Component.addTuplizer(org.hibernate.EntityMode, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Component.getTuplizerImplClassName(org.hibernate.EntityMode)"], ["java.util.Map", "org.hibernate.mapping.Component.getTuplizerMap()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Component.getProperty(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Component.getRoleName()"], ["void", "org.hibernate.mapping.Component.setRoleName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Component.toString()"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.mapping.Component.createIdentifierGenerator(org.hibernate.id.factory.IdentifierGeneratorFactory, org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, org.hibernate.mapping.RootClass)"], ["org.hibernate.mapping.SyntheticProperty", "org.hibernate.mapping.SyntheticProperty()"], ["boolean", "org.hibernate.mapping.SyntheticProperty.isSynthetic()"], ["org.hibernate.FetchMode", "org.hibernate.mapping.ToOne.getFetchMode()"], ["void", "org.hibernate.mapping.ToOne.setFetchMode(org.hibernate.FetchMode)"], ["java.lang.String", "org.hibernate.mapping.ToOne.getReferencedPropertyName()"], ["void", "org.hibernate.mapping.ToOne.setReferencedPropertyName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.ToOne.getReferencedEntityName()"], ["void", "org.hibernate.mapping.ToOne.setReferencedEntityName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.ToOne.getPropertyName()"], ["void", "org.hibernate.mapping.ToOne.setPropertyName(java.lang.String)"], ["void", "org.hibernate.mapping.ToOne.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.mapping.ToOne.isTypeSpecified()"], ["java.lang.Object", "org.hibernate.mapping.ToOne.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.ToOne.isSame(org.hibernate.mapping.SimpleValue)"], ["boolean", "org.hibernate.mapping.ToOne.isSame(org.hibernate.mapping.ToOne)"], ["boolean", "org.hibernate.mapping.ToOne.isValid(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.mapping.ToOne.isLazy()"], ["void", "org.hibernate.mapping.ToOne.setLazy(boolean)"], ["boolean", "org.hibernate.mapping.ToOne.isUnwrapProxy()"], ["void", "org.hibernate.mapping.ToOne.setUnwrapProxy(boolean)"], ["boolean", "org.hibernate.mapping.ToOne.isReferenceToPrimaryKey()"], ["void", "org.hibernate.mapping.ToOne.setReferenceToPrimaryKey(boolean)"], ["org.hibernate.resource.beans.spi.ManagedBeanRegistry", "org.hibernate.mapping.SimpleValue$1.getManagedBeanRegistry()"], ["org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry", "org.hibernate.mapping.SimpleValue$1.getJavaTypeDescriptorRegistry()"], ["org.hibernate.mapping.Constraint", "org.hibernate.mapping.Constraint()"], ["java.lang.String", "org.hibernate.mapping.Constraint.getName()"], ["void", "org.hibernate.mapping.Constraint.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Constraint.generateName(java.lang.String, org.hibernate.mapping.Table, org.hibernate.mapping.Column...)"], ["java.lang.String", "org.hibernate.mapping.Constraint.generateName(java.lang.String, org.hibernate.mapping.Table, java.util.List<org.hibernate.mapping.Column>)"], ["java.lang.String", "org.hibernate.mapping.Constraint.hashedName(java.lang.String)"], ["void", "org.hibernate.mapping.Constraint.addColumn(org.hibernate.mapping.Column)"], ["void", "org.hibernate.mapping.Constraint.addColumns(java.util.Iterator)"], ["boolean", "org.hibernate.mapping.Constraint.containsColumn(org.hibernate.mapping.Column)"], ["int", "org.hibernate.mapping.Constraint.getColumnSpan()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Constraint.getColumn(int)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Constraint.getTable()"], ["void", "org.hibernate.mapping.Constraint.setTable(org.hibernate.mapping.Table)"], ["boolean", "org.hibernate.mapping.Constraint.isGenerated(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Constraint.sqlDropString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Constraint.sqlCreateString(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Constraint.toString()"], ["org.hibernate.mapping.PrimitiveArray", "org.hibernate.mapping.PrimitiveArray(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.PrimitiveArray", "org.hibernate.mapping.PrimitiveArray(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["boolean", "org.hibernate.mapping.PrimitiveArray.isPrimitiveArray()"], ["java.lang.Object", "org.hibernate.mapping.PrimitiveArray.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.Map", "org.hibernate.mapping.Map(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Map", "org.hibernate.mapping.Map(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["boolean", "org.hibernate.mapping.Map.isMap()"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.Map.getDefaultCollectionType()"], ["void", "org.hibernate.mapping.Map.createAllKeys()"], ["java.lang.Object", "org.hibernate.mapping.Map.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.Index", "org.hibernate.mapping.Index()"], ["java.lang.String", "org.hibernate.mapping.Index.sqlCreateString(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlDropIndexString(org.hibernate.dialect.Dialect, org.hibernate.mapping.Table, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlDropIndexString(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlCreateIndexString(org.hibernate.dialect.Dialect, java.lang.String, org.hibernate.mapping.Table, java.util.Iterator<org.hibernate.mapping.Column>, java.util.Map<org.hibernate.mapping.Column, java.lang.String>, boolean, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlCreateIndexString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, java.util.Iterator<org.hibernate.mapping.Column>, java.util.Map<org.hibernate.mapping.Column, java.lang.String>, boolean)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlCreateIndexString(org.hibernate.dialect.Dialect, java.lang.String, org.hibernate.mapping.Table, java.util.Iterator<org.hibernate.mapping.Column>, boolean, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.buildSqlCreateIndexString(org.hibernate.dialect.Dialect, java.lang.String, org.hibernate.mapping.Table, java.util.Iterator<org.hibernate.mapping.Column>, java.util.Map<org.hibernate.mapping.Column, java.lang.String>, boolean, org.hibernate.boot.Metadata)"], ["java.lang.String", "org.hibernate.mapping.Index.sqlConstraintString(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Index.sqlDropString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Index.getTable()"], ["void", "org.hibernate.mapping.Index.setTable(org.hibernate.mapping.Table)"], ["int", "org.hibernate.mapping.Index.getColumnSpan()"], ["java.util.Map<org.hibernate.mapping.Column, java.lang.String>", "org.hibernate.mapping.Index.getColumnOrderMap()"], ["void", "org.hibernate.mapping.Index.addColumn(org.hibernate.mapping.Column)"], ["void", "org.hibernate.mapping.Index.addColumn(org.hibernate.mapping.Column, java.lang.String)"], ["void", "org.hibernate.mapping.Index.addColumns(java.util.Iterator)"], ["boolean", "org.hibernate.mapping.Index.containsColumn(org.hibernate.mapping.Column)"], ["java.lang.String", "org.hibernate.mapping.Index.getName()"], ["void", "org.hibernate.mapping.Index.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Index.getQuotedName(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Index.toString()"], ["java.lang.String", "org.hibernate.mapping.Index.getExportIdentifier()"], ["boolean", "org.hibernate.mapping.List.isList()"], ["org.hibernate.mapping.List", "org.hibernate.mapping.List(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.List", "org.hibernate.mapping.List(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.List.getDefaultCollectionType()"], ["java.lang.Object", "org.hibernate.mapping.List.accept(org.hibernate.mapping.ValueVisitor)"], ["int", "org.hibernate.mapping.List.getBaseIndex()"], ["void", "org.hibernate.mapping.List.setBaseIndex(int)"], ["org.hibernate.mapping.Join", "org.hibernate.mapping.Join()"], ["void", "org.hibernate.mapping.Join.addProperty(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.Join.addMappedsuperclassProperty(org.hibernate.mapping.Property)"], ["java.util.Iterator", "org.hibernate.mapping.Join.getDeclaredPropertyIterator()"], ["boolean", "org.hibernate.mapping.Join.containsProperty(org.hibernate.mapping.Property)"], ["java.util.Iterator", "org.hibernate.mapping.Join.getPropertyIterator()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Join.getTable()"], ["void", "org.hibernate.mapping.Join.setTable(org.hibernate.mapping.Table)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.Join.getKey()"], ["void", "org.hibernate.mapping.Join.setKey(org.hibernate.mapping.KeyValue)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.Join.getPersistentClass()"], ["void", "org.hibernate.mapping.Join.setPersistentClass(org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.mapping.Join.createForeignKey()"], ["void", "org.hibernate.mapping.Join.createPrimaryKey()"], ["int", "org.hibernate.mapping.Join.getPropertySpan()"], ["void", "org.hibernate.mapping.Join.setCustomSQLInsert(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Join.getCustomSQLInsert()"], ["boolean", "org.hibernate.mapping.Join.isCustomInsertCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Join.getCustomSQLInsertCheckStyle()"], ["void", "org.hibernate.mapping.Join.setCustomSQLUpdate(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Join.getCustomSQLUpdate()"], ["boolean", "org.hibernate.mapping.Join.isCustomUpdateCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Join.getCustomSQLUpdateCheckStyle()"], ["void", "org.hibernate.mapping.Join.setCustomSQLDelete(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Join.getCustomSQLDelete()"], ["boolean", "org.hibernate.mapping.Join.isCustomDeleteCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Join.getCustomSQLDeleteCheckStyle()"], ["boolean", "org.hibernate.mapping.Join.isSequentialSelect()"], ["void", "org.hibernate.mapping.Join.setSequentialSelect(boolean)"], ["boolean", "org.hibernate.mapping.Join.isInverse()"], ["void", "org.hibernate.mapping.Join.setInverse(boolean)"], ["java.lang.String", "org.hibernate.mapping.Join.toString()"], ["boolean", "org.hibernate.mapping.Join.isLazy()"], ["boolean", "org.hibernate.mapping.Join.isOptional()"], ["void", "org.hibernate.mapping.Join.setOptional(boolean)"], ["org.hibernate.mapping.UniqueKey", "org.hibernate.mapping.UniqueKey()"], ["java.lang.String", "org.hibernate.mapping.UniqueKey.sqlConstraintString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.UniqueKey.sqlCreateString(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.UniqueKey.sqlDropString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["void", "org.hibernate.mapping.UniqueKey.addColumn(org.hibernate.mapping.Column, java.lang.String)"], ["java.util.Map<org.hibernate.mapping.Column, java.lang.String>", "org.hibernate.mapping.UniqueKey.getColumnOrderMap()"], ["java.lang.String", "org.hibernate.mapping.UniqueKey.generatedConstraintNamePrefix()"], ["java.lang.String", "org.hibernate.mapping.UniqueKey.getExportIdentifier()"], ["int", "org.hibernate.mapping.Table$ForeignKeyKey.hashCode()"], ["boolean", "org.hibernate.mapping.Table$ForeignKeyKey.equals(java.lang.Object)"], ["java.lang.String", "org.hibernate.mapping.Table$ForeignKeyKey.toString()"], ["org.hibernate.mapping.PrimaryKey", "org.hibernate.mapping.PrimaryKey(org.hibernate.mapping.Table)"], ["void", "org.hibernate.mapping.PrimaryKey.addColumn(org.hibernate.mapping.Column)"], ["java.lang.String", "org.hibernate.mapping.PrimaryKey.sqlConstraintString(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.PrimaryKey.sqlConstraintString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.PrimaryKey.generatedConstraintNamePrefix()"], ["java.lang.String", "org.hibernate.mapping.PrimaryKey.getExportIdentifier()"], ["org.hibernate.mapping.IdentifierBag", "org.hibernate.mapping.IdentifierBag(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.IdentifierBag", "org.hibernate.mapping.IdentifierBag(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.IdentifierBag.getDefaultCollectionType()"], ["java.lang.Object", "org.hibernate.mapping.IdentifierBag.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.ManyToOne", "org.hibernate.mapping.ManyToOne(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table)"], ["org.hibernate.mapping.ManyToOne", "org.hibernate.mapping.ManyToOne(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table)"], ["org.hibernate.type.Type", "org.hibernate.mapping.ManyToOne.getType()"], ["void", "org.hibernate.mapping.ManyToOne.createForeignKey()"], ["void", "org.hibernate.mapping.ManyToOne.createPropertyRefConstraints(java.util.Map)"], ["java.lang.Object", "org.hibernate.mapping.ManyToOne.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.ManyToOne.isIgnoreNotFound()"], ["void", "org.hibernate.mapping.ManyToOne.setIgnoreNotFound(boolean)"], ["void", "org.hibernate.mapping.ManyToOne.markAsLogicalOneToOne()"], ["boolean", "org.hibernate.mapping.ManyToOne.isLogicalOneToOne()"], ["org.hibernate.mapping.Component$ValueGenerationPlan", "org.hibernate.mapping.Component$ValueGenerationPlan(org.hibernate.id.IdentifierGenerator, org.hibernate.property.access.spi.Setter)"], ["void", "org.hibernate.mapping.Component$ValueGenerationPlan.execute(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.mapping.Component$ValueGenerationPlan.registerExportables(org.hibernate.boot.model.relational.Database)"], ["org.hibernate.mapping.OneToOne", "org.hibernate.mapping.OneToOne(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.OneToOne", "org.hibernate.mapping.OneToOne(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table, org.hibernate.mapping.PersistentClass)"], ["java.lang.String", "org.hibernate.mapping.OneToOne.getPropertyName()"], ["void", "org.hibernate.mapping.OneToOne.setPropertyName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.OneToOne.getEntityName()"], ["void", "org.hibernate.mapping.OneToOne.setEntityName(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.mapping.OneToOne.getType()"], ["void", "org.hibernate.mapping.OneToOne.createForeignKey()"], ["java.util.List", "org.hibernate.mapping.OneToOne.getConstraintColumns()"], ["boolean", "org.hibernate.mapping.OneToOne.isConstrained()"], ["org.hibernate.type.ForeignKeyDirection", "org.hibernate.mapping.OneToOne.getForeignKeyType()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.OneToOne.getIdentifier()"], ["void", "org.hibernate.mapping.OneToOne.setConstrained(boolean)"], ["void", "org.hibernate.mapping.OneToOne.setForeignKeyType(org.hibernate.type.ForeignKeyDirection)"], ["void", "org.hibernate.mapping.OneToOne.setIdentifier(org.hibernate.mapping.KeyValue)"], ["boolean", "org.hibernate.mapping.OneToOne.isNullable()"], ["java.lang.Object", "org.hibernate.mapping.OneToOne.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.OneToOne.isSame(org.hibernate.mapping.ToOne)"], ["boolean", "org.hibernate.mapping.OneToOne.isSame(org.hibernate.mapping.OneToOne)"], ["org.hibernate.mapping.Formula", "org.hibernate.mapping.Formula()"], ["org.hibernate.mapping.Formula", "org.hibernate.mapping.Formula(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Formula.getTemplate(org.hibernate.dialect.Dialect, org.hibernate.dialect.function.SQLFunctionRegistry)"], ["java.lang.String", "org.hibernate.mapping.Formula.getText(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Formula.getText()"], ["java.lang.String", "org.hibernate.mapping.Formula.getAlias(org.hibernate.dialect.Dialect)"], ["java.lang.String", "org.hibernate.mapping.Formula.getAlias(org.hibernate.dialect.Dialect, org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.mapping.Formula.getFormula()"], ["void", "org.hibernate.mapping.Formula.setFormula(java.lang.String)"], ["boolean", "org.hibernate.mapping.Formula.isFormula()"], ["java.lang.String", "org.hibernate.mapping.Formula.toString()"], ["org.hibernate.mapping.TypeDef", "org.hibernate.mapping.TypeDef(java.lang.String, java.util.Properties)"], ["java.util.Properties", "org.hibernate.mapping.TypeDef.getParameters()"], ["java.lang.String", "org.hibernate.mapping.TypeDef.getTypeClass()"], ["java.lang.Class", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getReturnedClass()"], ["java.lang.annotation.Annotation[]", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getAnnotationsMethod()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getCatalog()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getSchema()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getTable()"], ["boolean", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.isPrimaryKey()"], ["java.lang.String[]", "org.hibernate.mapping.SimpleValue$ParameterTypeImpl.getColumns()"], ["org.hibernate.mapping.Component$StandardGenerationContextLocator", "org.hibernate.mapping.Component$StandardGenerationContextLocator(java.lang.String)"], ["java.io.Serializable", "org.hibernate.mapping.Component$StandardGenerationContextLocator.locateGenerationContext(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.mapping.DependantValue", "org.hibernate.mapping.DependantValue(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table, org.hibernate.mapping.KeyValue)"], ["org.hibernate.mapping.DependantValue", "org.hibernate.mapping.DependantValue(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table, org.hibernate.mapping.KeyValue)"], ["org.hibernate.type.Type", "org.hibernate.mapping.DependantValue.getType()"], ["void", "org.hibernate.mapping.DependantValue.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.mapping.DependantValue.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.DependantValue.isNullable()"], ["void", "org.hibernate.mapping.DependantValue.setNullable(boolean)"], ["boolean", "org.hibernate.mapping.DependantValue.isUpdateable()"], ["void", "org.hibernate.mapping.DependantValue.setUpdateable(boolean)"], ["boolean", "org.hibernate.mapping.DependantValue.isSame(org.hibernate.mapping.SimpleValue)"], ["boolean", "org.hibernate.mapping.DependantValue.isSame(org.hibernate.mapping.DependantValue)"], ["org.hibernate.mapping.Set", "org.hibernate.mapping.Set(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Set", "org.hibernate.mapping.Set(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.mapping.Set.validate(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.mapping.Set.isSet()"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.Set.getDefaultCollectionType()"], ["java.lang.Object", "org.hibernate.mapping.Set.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.SingleTableSubclass", "org.hibernate.mapping.SingleTableSubclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["java.lang.Object", "org.hibernate.mapping.SingleTableSubclass.accept(org.hibernate.mapping.PersistentClassVisitor)"], ["void", "org.hibernate.mapping.SingleTableSubclass.validate(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.mapping.IndexBackref", "org.hibernate.mapping.IndexBackref()"], ["boolean", "org.hibernate.mapping.IndexBackref.isBackRef()"], ["boolean", "org.hibernate.mapping.IndexBackref.isSynthetic()"], ["java.lang.String", "org.hibernate.mapping.IndexBackref.getCollectionRole()"], ["void", "org.hibernate.mapping.IndexBackref.setCollectionRole(java.lang.String)"], ["boolean", "org.hibernate.mapping.IndexBackref.isBasicPropertyAccessor()"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.mapping.IndexBackref.getPropertyAccessStrategy(java.lang.Class)"], ["java.lang.String", "org.hibernate.mapping.IndexBackref.getEntityName()"], ["void", "org.hibernate.mapping.IndexBackref.setEntityName(java.lang.String)"], ["org.hibernate.mapping.SimpleValue", "org.hibernate.mapping.SimpleValue(org.hibernate.boot.spi.MetadataImplementor)"], ["org.hibernate.mapping.SimpleValue", "org.hibernate.mapping.SimpleValue(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table)"], ["org.hibernate.mapping.SimpleValue", "org.hibernate.mapping.SimpleValue(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.SimpleValue", "org.hibernate.mapping.SimpleValue(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table)"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.mapping.SimpleValue.getMetadata()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.mapping.SimpleValue.getServiceRegistry()"], ["boolean", "org.hibernate.mapping.SimpleValue.isCascadeDeleteEnabled()"], ["void", "org.hibernate.mapping.SimpleValue.setCascadeDeleteEnabled(boolean)"], ["void", "org.hibernate.mapping.SimpleValue.addColumn(org.hibernate.mapping.Column)"], ["void", "org.hibernate.mapping.SimpleValue.addColumn(org.hibernate.mapping.Column, boolean, boolean)"], ["void", "org.hibernate.mapping.SimpleValue.addFormula(org.hibernate.mapping.Formula)"], ["boolean", "org.hibernate.mapping.SimpleValue.hasFormula()"], ["int", "org.hibernate.mapping.SimpleValue.getColumnSpan()"], ["java.util.List", "org.hibernate.mapping.SimpleValue.getConstraintColumns()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.getTypeName()"], ["void", "org.hibernate.mapping.SimpleValue.setTypeName(java.lang.String)"], ["void", "org.hibernate.mapping.SimpleValue.makeVersion()"], ["boolean", "org.hibernate.mapping.SimpleValue.isVersion()"], ["void", "org.hibernate.mapping.SimpleValue.makeNationalized()"], ["boolean", "org.hibernate.mapping.SimpleValue.isNationalized()"], ["void", "org.hibernate.mapping.SimpleValue.makeLob()"], ["boolean", "org.hibernate.mapping.SimpleValue.isLob()"], ["void", "org.hibernate.mapping.SimpleValue.setTable(org.hibernate.mapping.Table)"], ["void", "org.hibernate.mapping.SimpleValue.createForeignKey()"], ["void", "org.hibernate.mapping.SimpleValue.createForeignKeyOfEntity(java.lang.String)"], ["org.hibernate.id.IdentifierGenerator", "org.hibernate.mapping.SimpleValue.createIdentifierGenerator(org.hibernate.id.factory.IdentifierGeneratorFactory, org.hibernate.dialect.Dialect, java.lang.String, java.lang.String, org.hibernate.mapping.RootClass)"], ["boolean", "org.hibernate.mapping.SimpleValue.isUpdateable()"], ["org.hibernate.FetchMode", "org.hibernate.mapping.SimpleValue.getFetchMode()"], ["java.util.Properties", "org.hibernate.mapping.SimpleValue.getIdentifierGeneratorProperties()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.getNullValue()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.SimpleValue.getTable()"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.getIdentifierGeneratorStrategy()"], ["boolean", "org.hibernate.mapping.SimpleValue.isIdentityColumn(org.hibernate.id.factory.IdentifierGeneratorFactory, org.hibernate.dialect.Dialect)"], ["void", "org.hibernate.mapping.SimpleValue.setIdentifierGeneratorProperties(java.util.Properties)"], ["void", "org.hibernate.mapping.SimpleValue.setIdentifierGeneratorStrategy(java.lang.String)"], ["void", "org.hibernate.mapping.SimpleValue.setNullValue(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.getForeignKeyName()"], ["void", "org.hibernate.mapping.SimpleValue.setForeignKeyName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.getForeignKeyDefinition()"], ["void", "org.hibernate.mapping.SimpleValue.setForeignKeyDefinition(java.lang.String)"], ["boolean", "org.hibernate.mapping.SimpleValue.isAlternateUniqueKey()"], ["void", "org.hibernate.mapping.SimpleValue.setAlternateUniqueKey(boolean)"], ["boolean", "org.hibernate.mapping.SimpleValue.isNullable()"], ["boolean", "org.hibernate.mapping.SimpleValue.isSimpleValue()"], ["boolean", "org.hibernate.mapping.SimpleValue.isValid(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.type.Type", "org.hibernate.mapping.SimpleValue.getType()"], ["void", "org.hibernate.mapping.SimpleValue.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.mapping.SimpleValue.isTypeSpecified()"], ["void", "org.hibernate.mapping.SimpleValue.setTypeParameters(java.util.Properties)"], ["java.util.Properties", "org.hibernate.mapping.SimpleValue.getTypeParameters()"], ["void", "org.hibernate.mapping.SimpleValue.copyTypeFrom(org.hibernate.mapping.SimpleValue)"], ["boolean", "org.hibernate.mapping.SimpleValue.isSame(org.hibernate.mapping.Value)"], ["boolean", "org.hibernate.mapping.SimpleValue.isSame(org.hibernate.mapping.SimpleValue)"], ["java.lang.String", "org.hibernate.mapping.SimpleValue.toString()"], ["java.lang.Object", "org.hibernate.mapping.SimpleValue.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean[]", "org.hibernate.mapping.SimpleValue.getColumnInsertability()"], ["boolean[]", "org.hibernate.mapping.SimpleValue.getColumnUpdateability()"], ["void", "org.hibernate.mapping.SimpleValue.setJpaAttributeConverterDescriptor(org.hibernate.boot.model.convert.spi.ConverterDescriptor)"], ["org.hibernate.mapping.MetaAttribute", "org.hibernate.mapping.MetaAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.MetaAttribute.getName()"], ["java.util.List", "org.hibernate.mapping.MetaAttribute.getValues()"], ["void", "org.hibernate.mapping.MetaAttribute.addValue(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.MetaAttribute.getValue()"], ["boolean", "org.hibernate.mapping.MetaAttribute.isMultiValued()"], ["java.lang.String", "org.hibernate.mapping.MetaAttribute.toString()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table(java.lang.String)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table(org.hibernate.boot.model.relational.Namespace, org.hibernate.boot.model.naming.Identifier, boolean)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table(org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, boolean)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table(org.hibernate.boot.model.relational.Namespace, org.hibernate.boot.model.naming.Identifier, java.lang.String, boolean)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Table(org.hibernate.boot.model.relational.Namespace, java.lang.String, boolean)"], ["java.lang.String", "org.hibernate.mapping.Table.getQualifiedName(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.qualify(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.mapping.Table.setName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.getName()"], ["org.hibernate.boot.model.naming.Identifier", "org.hibernate.mapping.Table.getNameIdentifier()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedName()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedName(org.hibernate.dialect.Dialect)"], ["org.hibernate.boot.model.relational.QualifiedTableName", "org.hibernate.mapping.Table.getQualifiedTableName()"], ["boolean", "org.hibernate.mapping.Table.isQuoted()"], ["void", "org.hibernate.mapping.Table.setQuoted(boolean)"], ["void", "org.hibernate.mapping.Table.setSchema(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.getSchema()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedSchema()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedSchema(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.mapping.Table.isSchemaQuoted()"], ["void", "org.hibernate.mapping.Table.setCatalog(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.getCatalog()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedCatalog()"], ["java.lang.String", "org.hibernate.mapping.Table.getQuotedCatalog(org.hibernate.dialect.Dialect)"], ["boolean", "org.hibernate.mapping.Table.isCatalogQuoted()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Table.getColumn(org.hibernate.mapping.Column)"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Table.getColumn(org.hibernate.boot.model.naming.Identifier)"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.Table.getColumn(int)"], ["void", "org.hibernate.mapping.Table.addColumn(org.hibernate.mapping.Column)"], ["int", "org.hibernate.mapping.Table.getColumnSpan()"], ["java.util.Iterator", "org.hibernate.mapping.Table.getColumnIterator()"], ["java.util.Iterator", "org.hibernate.mapping.Table.getForeignKeyIterator()"], ["java.util.Map<org.hibernate.mapping.Table$ForeignKeyKey, org.hibernate.mapping.ForeignKey>", "org.hibernate.mapping.Table.getForeignKeys()"], ["int", "org.hibernate.mapping.Table.hashCode()"], ["boolean", "org.hibernate.mapping.Table.equals(java.lang.Object)"], ["boolean", "org.hibernate.mapping.Table.equals(org.hibernate.mapping.Table)"], ["void", "org.hibernate.mapping.Table.validateColumns(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping, org.hibernate.tool.hbm2ddl.TableMetadata)"], ["java.util.Iterator", "org.hibernate.mapping.Table.sqlAlterStrings(org.hibernate.dialect.Dialect, org.hibernate.boot.Metadata, org.hibernate.tool.schema.extract.spi.TableInformation, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier)"], ["boolean", "org.hibernate.mapping.Table.hasPrimaryKey()"], ["java.lang.String", "org.hibernate.mapping.Table.sqlCreateString(org.hibernate.dialect.Dialect, org.hibernate.engine.spi.Mapping, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.sqlDropString(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["org.hibernate.mapping.PrimaryKey", "org.hibernate.mapping.Table.getPrimaryKey()"], ["void", "org.hibernate.mapping.Table.setPrimaryKey(org.hibernate.mapping.PrimaryKey)"], ["org.hibernate.mapping.Index", "org.hibernate.mapping.Table.getOrCreateIndex(java.lang.String)"], ["org.hibernate.mapping.Index", "org.hibernate.mapping.Table.getIndex(java.lang.String)"], ["org.hibernate.mapping.Index", "org.hibernate.mapping.Table.addIndex(org.hibernate.mapping.Index)"], ["org.hibernate.mapping.UniqueKey", "org.hibernate.mapping.Table.addUniqueKey(org.hibernate.mapping.UniqueKey)"], ["org.hibernate.mapping.UniqueKey", "org.hibernate.mapping.Table.createUniqueKey(java.util.List)"], ["org.hibernate.mapping.UniqueKey", "org.hibernate.mapping.Table.getUniqueKey(java.lang.String)"], ["org.hibernate.mapping.UniqueKey", "org.hibernate.mapping.Table.getOrCreateUniqueKey(java.lang.String)"], ["void", "org.hibernate.mapping.Table.createForeignKeys()"], ["org.hibernate.mapping.ForeignKey", "org.hibernate.mapping.Table.createForeignKey(java.lang.String, java.util.List, java.lang.String, java.lang.String)"], ["org.hibernate.mapping.ForeignKey", "org.hibernate.mapping.Table.createForeignKey(java.lang.String, java.util.List, java.lang.String, java.lang.String, java.util.List)"], ["void", "org.hibernate.mapping.Table.setUniqueInteger(int)"], ["int", "org.hibernate.mapping.Table.getUniqueInteger()"], ["void", "org.hibernate.mapping.Table.setIdentifierValue(org.hibernate.mapping.KeyValue)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.Table.getIdentifierValue()"], ["void", "org.hibernate.mapping.Table.addCheckConstraint(java.lang.String)"], ["boolean", "org.hibernate.mapping.Table.containsColumn(org.hibernate.mapping.Column)"], ["java.lang.String", "org.hibernate.mapping.Table.getRowId()"], ["void", "org.hibernate.mapping.Table.setRowId(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.toString()"], ["java.lang.String", "org.hibernate.mapping.Table.getSubselect()"], ["void", "org.hibernate.mapping.Table.setSubselect(java.lang.String)"], ["boolean", "org.hibernate.mapping.Table.isSubselect()"], ["boolean", "org.hibernate.mapping.Table.isAbstractUnionTable()"], ["boolean", "org.hibernate.mapping.Table.hasDenormalizedTables()"], ["void", "org.hibernate.mapping.Table.setAbstract(boolean)"], ["boolean", "org.hibernate.mapping.Table.isAbstract()"], ["boolean", "org.hibernate.mapping.Table.isPhysicalTable()"], ["java.lang.String", "org.hibernate.mapping.Table.getComment()"], ["void", "org.hibernate.mapping.Table.setComment(java.lang.String)"], ["java.util.Iterator", "org.hibernate.mapping.Table.sqlCommentStrings(org.hibernate.dialect.Dialect, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Table.getExportIdentifier()"], ["void", "org.hibernate.mapping.Table.addInitCommand(org.hibernate.boot.model.relational.InitCommand)"], ["org.hibernate.mapping.JoinedSubclass", "org.hibernate.mapping.JoinedSubclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.JoinedSubclass.getTable()"], ["void", "org.hibernate.mapping.JoinedSubclass.setTable(org.hibernate.mapping.Table)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.JoinedSubclass.getKey()"], ["void", "org.hibernate.mapping.JoinedSubclass.setKey(org.hibernate.mapping.KeyValue)"], ["void", "org.hibernate.mapping.JoinedSubclass.validate(org.hibernate.engine.spi.Mapping)"], ["java.util.Iterator", "org.hibernate.mapping.JoinedSubclass.getReferenceablePropertyIterator()"], ["java.lang.Object", "org.hibernate.mapping.JoinedSubclass.accept(org.hibernate.mapping.PersistentClassVisitor)"], ["org.hibernate.mapping.MetadataSource[]", "org.hibernate.mapping.MetadataSource.values()"], ["org.hibernate.mapping.MetadataSource", "org.hibernate.mapping.MetadataSource.valueOf(java.lang.String)"], ["org.hibernate.mapping.DenormalizedTable", "org.hibernate.mapping.DenormalizedTable(org.hibernate.mapping.Table)"], ["org.hibernate.mapping.DenormalizedTable", "org.hibernate.mapping.DenormalizedTable(org.hibernate.boot.model.relational.Namespace, org.hibernate.boot.model.naming.Identifier, boolean, org.hibernate.mapping.Table)"], ["org.hibernate.mapping.DenormalizedTable", "org.hibernate.mapping.DenormalizedTable(org.hibernate.boot.model.relational.Namespace, org.hibernate.boot.model.naming.Identifier, java.lang.String, boolean, org.hibernate.mapping.Table)"], ["org.hibernate.mapping.DenormalizedTable", "org.hibernate.mapping.DenormalizedTable(org.hibernate.boot.model.relational.Namespace, java.lang.String, boolean, org.hibernate.mapping.Table)"], ["void", "org.hibernate.mapping.DenormalizedTable.createForeignKeys()"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.DenormalizedTable.getColumn(org.hibernate.mapping.Column)"], ["org.hibernate.mapping.Column", "org.hibernate.mapping.DenormalizedTable.getColumn(org.hibernate.boot.model.naming.Identifier)"], ["java.util.Iterator", "org.hibernate.mapping.DenormalizedTable.getColumnIterator()"], ["boolean", "org.hibernate.mapping.DenormalizedTable.containsColumn(org.hibernate.mapping.Column)"], ["org.hibernate.mapping.PrimaryKey", "org.hibernate.mapping.DenormalizedTable.getPrimaryKey()"], ["java.util.Iterator", "org.hibernate.mapping.DenormalizedTable.getUniqueKeyIterator()"], ["java.util.Iterator", "org.hibernate.mapping.DenormalizedTable.getIndexIterator()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.DenormalizedTable.getIncludedTable()"], ["org.hibernate.mapping.OneToMany", "org.hibernate.mapping.OneToMany(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.OneToMany", "org.hibernate.mapping.OneToMany(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.mapping.OneToMany.getServiceRegistry()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.OneToMany.getAssociatedClass()"], ["void", "org.hibernate.mapping.OneToMany.setAssociatedClass(org.hibernate.mapping.PersistentClass)"], ["void", "org.hibernate.mapping.OneToMany.createForeignKey()"], ["int", "org.hibernate.mapping.OneToMany.getColumnSpan()"], ["org.hibernate.FetchMode", "org.hibernate.mapping.OneToMany.getFetchMode()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.OneToMany.getTable()"], ["org.hibernate.type.Type", "org.hibernate.mapping.OneToMany.getType()"], ["boolean", "org.hibernate.mapping.OneToMany.isNullable()"], ["boolean", "org.hibernate.mapping.OneToMany.isSimpleValue()"], ["boolean", "org.hibernate.mapping.OneToMany.isAlternateUniqueKey()"], ["boolean", "org.hibernate.mapping.OneToMany.hasFormula()"], ["boolean", "org.hibernate.mapping.OneToMany.isValid(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.mapping.OneToMany.getReferencedEntityName()"], ["void", "org.hibernate.mapping.OneToMany.setReferencedEntityName(java.lang.String)"], ["void", "org.hibernate.mapping.OneToMany.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.mapping.OneToMany.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.OneToMany.isSame(org.hibernate.mapping.Value)"], ["boolean", "org.hibernate.mapping.OneToMany.isSame(org.hibernate.mapping.OneToMany)"], ["boolean[]", "org.hibernate.mapping.OneToMany.getColumnInsertability()"], ["boolean[]", "org.hibernate.mapping.OneToMany.getColumnUpdateability()"], ["boolean", "org.hibernate.mapping.OneToMany.isIgnoreNotFound()"], ["void", "org.hibernate.mapping.OneToMany.setIgnoreNotFound(boolean)"], ["int", "org.hibernate.mapping.Constraint$ColumnComparator.compare(org.hibernate.mapping.Column, org.hibernate.mapping.Column)"], ["int", "org.hibernate.mapping.Constraint$ColumnComparator.compare(java.lang.Object, java.lang.Object)"], ["org.hibernate.mapping.Array", "org.hibernate.mapping.Array(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Array", "org.hibernate.mapping.Array(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["java.lang.Class", "org.hibernate.mapping.Array.getElementClass()"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.Array.getDefaultCollectionType()"], ["boolean", "org.hibernate.mapping.Array.isArray()"], ["java.lang.String", "org.hibernate.mapping.Array.getElementClassName()"], ["void", "org.hibernate.mapping.Array.setElementClassName(java.lang.String)"], ["java.lang.Object", "org.hibernate.mapping.Array.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.UnionSubclass", "org.hibernate.mapping.UnionSubclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.UnionSubclass.getTable()"], ["void", "org.hibernate.mapping.UnionSubclass.setTable(org.hibernate.mapping.Table)"], ["java.util.Set", "org.hibernate.mapping.UnionSubclass.getSynchronizedTables()"], ["void", "org.hibernate.mapping.UnionSubclass.validate(org.hibernate.engine.spi.Mapping)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.UnionSubclass.getIdentityTable()"], ["java.lang.Object", "org.hibernate.mapping.UnionSubclass.accept(org.hibernate.mapping.PersistentClassVisitor)"], ["org.hibernate.mapping.RootClass", "org.hibernate.mapping.RootClass(org.hibernate.boot.spi.MetadataBuildingContext)"], ["int", "org.hibernate.mapping.RootClass.getSubclassId()"], ["void", "org.hibernate.mapping.RootClass.setTable(org.hibernate.mapping.Table)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.RootClass.getTable()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.RootClass.getIdentifierProperty()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.RootClass.getDeclaredIdentifierProperty()"], ["void", "org.hibernate.mapping.RootClass.setDeclaredIdentifierProperty(org.hibernate.mapping.Property)"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.RootClass.getIdentifier()"], ["boolean", "org.hibernate.mapping.RootClass.hasIdentifierProperty()"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.RootClass.getDiscriminator()"], ["boolean", "org.hibernate.mapping.RootClass.isInherited()"], ["boolean", "org.hibernate.mapping.RootClass.isPolymorphic()"], ["void", "org.hibernate.mapping.RootClass.setPolymorphic(boolean)"], ["org.hibernate.mapping.RootClass", "org.hibernate.mapping.RootClass.getRootClass()"], ["java.util.Iterator", "org.hibernate.mapping.RootClass.getPropertyClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.RootClass.getTableClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.RootClass.getKeyClosureIterator()"], ["void", "org.hibernate.mapping.RootClass.addSubclass(org.hibernate.mapping.Subclass)"], ["boolean", "org.hibernate.mapping.RootClass.isExplicitPolymorphism()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.RootClass.getVersion()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.RootClass.getDeclaredVersion()"], ["void", "org.hibernate.mapping.RootClass.setDeclaredVersion(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.RootClass.setVersion(org.hibernate.mapping.Property)"], ["boolean", "org.hibernate.mapping.RootClass.isVersioned()"], ["boolean", "org.hibernate.mapping.RootClass.isMutable()"], ["boolean", "org.hibernate.mapping.RootClass.hasEmbeddedIdentifier()"], ["java.lang.Class", "org.hibernate.mapping.RootClass.getEntityPersisterClass()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.RootClass.getRootTable()"], ["void", "org.hibernate.mapping.RootClass.setEntityPersisterClass(java.lang.Class)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.RootClass.getSuperclass()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.RootClass.getKey()"], ["void", "org.hibernate.mapping.RootClass.setDiscriminator(org.hibernate.mapping.Value)"], ["void", "org.hibernate.mapping.RootClass.setEmbeddedIdentifier(boolean)"], ["void", "org.hibernate.mapping.RootClass.setExplicitPolymorphism(boolean)"], ["void", "org.hibernate.mapping.RootClass.setIdentifier(org.hibernate.mapping.KeyValue)"], ["void", "org.hibernate.mapping.RootClass.setIdentifierProperty(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.RootClass.setMutable(boolean)"], ["boolean", "org.hibernate.mapping.RootClass.isDiscriminatorInsertable()"], ["void", "org.hibernate.mapping.RootClass.setDiscriminatorInsertable(boolean)"], ["boolean", "org.hibernate.mapping.RootClass.isForceDiscriminator()"], ["void", "org.hibernate.mapping.RootClass.setForceDiscriminator(boolean)"], ["java.lang.String", "org.hibernate.mapping.RootClass.getWhere()"], ["void", "org.hibernate.mapping.RootClass.setWhere(java.lang.String)"], ["void", "org.hibernate.mapping.RootClass.validate(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.mapping.RootClass.getCacheConcurrencyStrategy()"], ["void", "org.hibernate.mapping.RootClass.setCacheConcurrencyStrategy(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.RootClass.getCacheRegionName()"], ["void", "org.hibernate.mapping.RootClass.setCacheRegionName(java.lang.String)"], ["boolean", "org.hibernate.mapping.RootClass.isLazyPropertiesCacheable()"], ["void", "org.hibernate.mapping.RootClass.setLazyPropertiesCacheable(boolean)"], ["java.lang.String", "org.hibernate.mapping.RootClass.getNaturalIdCacheRegionName()"], ["void", "org.hibernate.mapping.RootClass.setNaturalIdCacheRegionName(java.lang.String)"], ["boolean", "org.hibernate.mapping.RootClass.isJoinedSubclass()"], ["java.util.Set", "org.hibernate.mapping.RootClass.getSynchronizedTables()"], ["java.lang.Object", "org.hibernate.mapping.RootClass.accept(org.hibernate.mapping.PersistentClassVisitor)"], ["org.hibernate.mapping.FetchProfile$Fetch", "org.hibernate.mapping.FetchProfile$Fetch(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.FetchProfile$Fetch.getEntity()"], ["java.lang.String", "org.hibernate.mapping.FetchProfile$Fetch.getAssociation()"], ["java.lang.String", "org.hibernate.mapping.FetchProfile$Fetch.getStyle()"], ["org.hibernate.mapping.IndexedCollection", "org.hibernate.mapping.IndexedCollection(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.IndexedCollection", "org.hibernate.mapping.IndexedCollection(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.IndexedCollection.getIndex()"], ["void", "org.hibernate.mapping.IndexedCollection.setIndex(org.hibernate.mapping.Value)"], ["boolean", "org.hibernate.mapping.IndexedCollection.isIndexed()"], ["boolean", "org.hibernate.mapping.IndexedCollection.isSame(org.hibernate.mapping.Collection)"], ["boolean", "org.hibernate.mapping.IndexedCollection.isSame(org.hibernate.mapping.IndexedCollection)"], ["void", "org.hibernate.mapping.IndexedCollection.validate(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.mapping.IndexedCollection.isList()"], ["org.hibernate.boot.spi.MetadataImplementor", "org.hibernate.mapping.Collection.getMetadata()"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.mapping.Collection.getServiceRegistry()"], ["boolean", "org.hibernate.mapping.Collection.isSet()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.Collection.getKey()"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.Collection.getElement()"], ["boolean", "org.hibernate.mapping.Collection.isIndexed()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Collection.getCollectionTable()"], ["void", "org.hibernate.mapping.Collection.setCollectionTable(org.hibernate.mapping.Table)"], ["boolean", "org.hibernate.mapping.Collection.isSorted()"], ["java.util.Comparator", "org.hibernate.mapping.Collection.getComparator()"], ["boolean", "org.hibernate.mapping.Collection.isLazy()"], ["void", "org.hibernate.mapping.Collection.setLazy(boolean)"], ["java.lang.String", "org.hibernate.mapping.Collection.getRole()"], ["boolean", "org.hibernate.mapping.Collection.isPrimitiveArray()"], ["boolean", "org.hibernate.mapping.Collection.isArray()"], ["boolean", "org.hibernate.mapping.Collection.hasFormula()"], ["boolean", "org.hibernate.mapping.Collection.isOneToMany()"], ["boolean", "org.hibernate.mapping.Collection.isInverse()"], ["java.lang.String", "org.hibernate.mapping.Collection.getOwnerEntityName()"], ["java.lang.String", "org.hibernate.mapping.Collection.getOrderBy()"], ["void", "org.hibernate.mapping.Collection.setComparator(java.util.Comparator)"], ["void", "org.hibernate.mapping.Collection.setElement(org.hibernate.mapping.Value)"], ["void", "org.hibernate.mapping.Collection.setKey(org.hibernate.mapping.KeyValue)"], ["void", "org.hibernate.mapping.Collection.setOrderBy(java.lang.String)"], ["void", "org.hibernate.mapping.Collection.setRole(java.lang.String)"], ["void", "org.hibernate.mapping.Collection.setSorted(boolean)"], ["void", "org.hibernate.mapping.Collection.setInverse(boolean)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.Collection.getOwner()"], ["void", "org.hibernate.mapping.Collection.setOwner(org.hibernate.mapping.PersistentClass)"], ["java.lang.String", "org.hibernate.mapping.Collection.getWhere()"], ["void", "org.hibernate.mapping.Collection.setWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Collection.getManyToManyWhere()"], ["void", "org.hibernate.mapping.Collection.setManyToManyWhere(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Collection.getManyToManyOrdering()"], ["void", "org.hibernate.mapping.Collection.setManyToManyOrdering(java.lang.String)"], ["boolean", "org.hibernate.mapping.Collection.isIdentified()"], ["boolean", "org.hibernate.mapping.Collection.hasOrphanDelete()"], ["void", "org.hibernate.mapping.Collection.setOrphanDelete(boolean)"], ["int", "org.hibernate.mapping.Collection.getBatchSize()"], ["void", "org.hibernate.mapping.Collection.setBatchSize(int)"], ["org.hibernate.FetchMode", "org.hibernate.mapping.Collection.getFetchMode()"], ["void", "org.hibernate.mapping.Collection.setFetchMode(org.hibernate.FetchMode)"], ["void", "org.hibernate.mapping.Collection.setCollectionPersisterClass(java.lang.Class)"], ["java.lang.Class", "org.hibernate.mapping.Collection.getCollectionPersisterClass()"], ["void", "org.hibernate.mapping.Collection.validate(org.hibernate.engine.spi.Mapping)"], ["int", "org.hibernate.mapping.Collection.getColumnSpan()"], ["org.hibernate.type.Type", "org.hibernate.mapping.Collection.getType()"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.Collection.getCollectionType()"], ["boolean", "org.hibernate.mapping.Collection.isNullable()"], ["boolean", "org.hibernate.mapping.Collection.isAlternateUniqueKey()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Collection.getTable()"], ["void", "org.hibernate.mapping.Collection.createForeignKey()"], ["boolean", "org.hibernate.mapping.Collection.isSimpleValue()"], ["boolean", "org.hibernate.mapping.Collection.isValid(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.mapping.Collection.isSame(org.hibernate.mapping.Value)"], ["boolean", "org.hibernate.mapping.Collection.isSame(org.hibernate.mapping.Collection)"], ["void", "org.hibernate.mapping.Collection.createAllKeys()"], ["java.lang.String", "org.hibernate.mapping.Collection.getCacheConcurrencyStrategy()"], ["void", "org.hibernate.mapping.Collection.setCacheConcurrencyStrategy(java.lang.String)"], ["void", "org.hibernate.mapping.Collection.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Collection.getCacheRegionName()"], ["void", "org.hibernate.mapping.Collection.setCacheRegionName(java.lang.String)"], ["void", "org.hibernate.mapping.Collection.setCustomSQLInsert(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Collection.getCustomSQLInsert()"], ["boolean", "org.hibernate.mapping.Collection.isCustomInsertCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Collection.getCustomSQLInsertCheckStyle()"], ["void", "org.hibernate.mapping.Collection.setCustomSQLUpdate(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Collection.getCustomSQLUpdate()"], ["boolean", "org.hibernate.mapping.Collection.isCustomUpdateCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Collection.getCustomSQLUpdateCheckStyle()"], ["void", "org.hibernate.mapping.Collection.setCustomSQLDelete(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Collection.getCustomSQLDelete()"], ["boolean", "org.hibernate.mapping.Collection.isCustomDeleteCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Collection.getCustomSQLDeleteCheckStyle()"], ["void", "org.hibernate.mapping.Collection.setCustomSQLDeleteAll(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.Collection.getCustomSQLDeleteAll()"], ["boolean", "org.hibernate.mapping.Collection.isCustomDeleteAllCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.Collection.getCustomSQLDeleteAllCheckStyle()"], ["void", "org.hibernate.mapping.Collection.addFilter(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>)"], ["java.util.List", "org.hibernate.mapping.Collection.getFilters()"], ["void", "org.hibernate.mapping.Collection.addManyToManyFilter(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>)"], ["java.util.List", "org.hibernate.mapping.Collection.getManyToManyFilters()"], ["java.lang.String", "org.hibernate.mapping.Collection.toString()"], ["java.lang.String", "org.hibernate.mapping.Collection.getLoaderName()"], ["void", "org.hibernate.mapping.Collection.setLoaderName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Collection.getReferencedPropertyName()"], ["void", "org.hibernate.mapping.Collection.setReferencedPropertyName(java.lang.String)"], ["boolean", "org.hibernate.mapping.Collection.isOptimisticLocked()"], ["void", "org.hibernate.mapping.Collection.setOptimisticLocked(boolean)"], ["boolean", "org.hibernate.mapping.Collection.isMap()"], ["java.lang.String", "org.hibernate.mapping.Collection.getTypeName()"], ["void", "org.hibernate.mapping.Collection.setTypeName(java.lang.String)"], ["java.util.Properties", "org.hibernate.mapping.Collection.getTypeParameters()"], ["void", "org.hibernate.mapping.Collection.setTypeParameters(java.util.Properties)"], ["void", "org.hibernate.mapping.Collection.setTypeParameters(java.util.Map)"], ["boolean[]", "org.hibernate.mapping.Collection.getColumnInsertability()"], ["boolean[]", "org.hibernate.mapping.Collection.getColumnUpdateability()"], ["boolean", "org.hibernate.mapping.Collection.isSubselectLoadable()"], ["void", "org.hibernate.mapping.Collection.setSubselectLoadable(boolean)"], ["boolean", "org.hibernate.mapping.Collection.isMutable()"], ["void", "org.hibernate.mapping.Collection.setMutable(boolean)"], ["boolean", "org.hibernate.mapping.Collection.isExtraLazy()"], ["void", "org.hibernate.mapping.Collection.setExtraLazy(boolean)"], ["boolean", "org.hibernate.mapping.Collection.hasOrder()"], ["void", "org.hibernate.mapping.Collection.setComparatorClassName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Collection.getComparatorClassName()"], ["java.lang.String", "org.hibernate.mapping.Collection.getMappedByProperty()"], ["void", "org.hibernate.mapping.Collection.setMappedByProperty(java.lang.String)"], ["org.hibernate.mapping.IdGenerator", "org.hibernate.mapping.IdGenerator()"], ["java.lang.String", "org.hibernate.mapping.IdGenerator.getIdentifierGeneratorStrategy()"], ["java.lang.String", "org.hibernate.mapping.IdGenerator.getName()"], ["java.util.Properties", "org.hibernate.mapping.IdGenerator.getParams()"], ["void", "org.hibernate.mapping.IdGenerator.setIdentifierGeneratorStrategy(java.lang.String)"], ["void", "org.hibernate.mapping.IdGenerator.setName(java.lang.String)"], ["void", "org.hibernate.mapping.IdGenerator.addParam(java.lang.String, java.lang.String)"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Property()"], ["boolean", "org.hibernate.mapping.Property.isBackRef()"], ["boolean", "org.hibernate.mapping.Property.isSynthetic()"], ["org.hibernate.type.Type", "org.hibernate.mapping.Property.getType()"], ["int", "org.hibernate.mapping.Property.getColumnSpan()"], ["java.util.Iterator", "org.hibernate.mapping.Property.getColumnIterator()"], ["java.lang.String", "org.hibernate.mapping.Property.getName()"], ["boolean", "org.hibernate.mapping.Property.isComposite()"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.Property.getValue()"], ["boolean", "org.hibernate.mapping.Property.isPrimitive(java.lang.Class)"], ["org.hibernate.engine.spi.CascadeStyle", "org.hibernate.mapping.Property.getCascadeStyle()"], ["java.lang.String", "org.hibernate.mapping.Property.getCascade()"], ["void", "org.hibernate.mapping.Property.setCascade(java.lang.String)"], ["void", "org.hibernate.mapping.Property.setName(java.lang.String)"], ["void", "org.hibernate.mapping.Property.setValue(org.hibernate.mapping.Value)"], ["boolean", "org.hibernate.mapping.Property.isUpdateable()"], ["boolean", "org.hibernate.mapping.Property.isInsertable()"], ["org.hibernate.tuple.ValueGeneration", "org.hibernate.mapping.Property.getValueGenerationStrategy()"], ["void", "org.hibernate.mapping.Property.setValueGenerationStrategy(org.hibernate.tuple.ValueGeneration)"], ["void", "org.hibernate.mapping.Property.setUpdateable(boolean)"], ["void", "org.hibernate.mapping.Property.setInsertable(boolean)"], ["java.lang.String", "org.hibernate.mapping.Property.getPropertyAccessorName()"], ["void", "org.hibernate.mapping.Property.setPropertyAccessorName(java.lang.String)"], ["boolean", "org.hibernate.mapping.Property.isBasicPropertyAccessor()"], ["java.util.Map", "org.hibernate.mapping.Property.getMetaAttributes()"], ["org.hibernate.mapping.MetaAttribute", "org.hibernate.mapping.Property.getMetaAttribute(java.lang.String)"], ["void", "org.hibernate.mapping.Property.setMetaAttributes(java.util.Map)"], ["boolean", "org.hibernate.mapping.Property.isValid(org.hibernate.engine.spi.Mapping)"], ["java.lang.String", "org.hibernate.mapping.Property.toString()"], ["void", "org.hibernate.mapping.Property.setLazy(boolean)"], ["boolean", "org.hibernate.mapping.Property.isLazy()"], ["java.lang.String", "org.hibernate.mapping.Property.getLazyGroup()"], ["void", "org.hibernate.mapping.Property.setLazyGroup(java.lang.String)"], ["boolean", "org.hibernate.mapping.Property.isOptimisticLocked()"], ["void", "org.hibernate.mapping.Property.setOptimisticLocked(boolean)"], ["boolean", "org.hibernate.mapping.Property.isOptional()"], ["void", "org.hibernate.mapping.Property.setOptional(boolean)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.Property.getPersistentClass()"], ["void", "org.hibernate.mapping.Property.setPersistentClass(org.hibernate.mapping.PersistentClass)"], ["boolean", "org.hibernate.mapping.Property.isSelectable()"], ["void", "org.hibernate.mapping.Property.setSelectable(boolean)"], ["java.lang.String", "org.hibernate.mapping.Property.getAccessorPropertyName(org.hibernate.EntityMode)"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.mapping.Property.getGetter(java.lang.Class)"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.mapping.Property.getSetter(java.lang.Class)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.mapping.Property.getPropertyAccessStrategy(java.lang.Class)"], ["boolean", "org.hibernate.mapping.Property.isNaturalIdentifier()"], ["void", "org.hibernate.mapping.Property.setNaturalIdentifier(boolean)"], ["boolean", "org.hibernate.mapping.Property.isLob()"], ["void", "org.hibernate.mapping.Property.setLob(boolean)"], ["org.hibernate.mapping.Any", "org.hibernate.mapping.Any(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table)"], ["org.hibernate.mapping.Any", "org.hibernate.mapping.Any(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table)"], ["java.lang.String", "org.hibernate.mapping.Any.getIdentifierType()"], ["void", "org.hibernate.mapping.Any.setIdentifierType(java.lang.String)"], ["org.hibernate.type.Type", "org.hibernate.mapping.Any.getType()"], ["void", "org.hibernate.mapping.Any.setTypeByReflection(java.lang.String, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.Any.getMetaType()"], ["void", "org.hibernate.mapping.Any.setMetaType(java.lang.String)"], ["java.util.Map", "org.hibernate.mapping.Any.getMetaValues()"], ["void", "org.hibernate.mapping.Any.setMetaValues(java.util.Map)"], ["boolean", "org.hibernate.mapping.Any.isLazy()"], ["void", "org.hibernate.mapping.Any.setLazy(boolean)"], ["void", "org.hibernate.mapping.Any.setTypeUsingReflection(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.mapping.Any.accept(org.hibernate.mapping.ValueVisitor)"], ["boolean", "org.hibernate.mapping.Any.isSame(org.hibernate.mapping.SimpleValue)"], ["boolean", "org.hibernate.mapping.Any.isSame(org.hibernate.mapping.Any)"], ["org.hibernate.mapping.Bag", "org.hibernate.mapping.Bag(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.mapping.Bag", "org.hibernate.mapping.Bag(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass)"], ["org.hibernate.type.CollectionType", "org.hibernate.mapping.Bag.getDefaultCollectionType()"], ["java.lang.Object", "org.hibernate.mapping.Bag.accept(org.hibernate.mapping.ValueVisitor)"], ["org.hibernate.mapping.Subclass", "org.hibernate.mapping.Subclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext)"], ["int", "org.hibernate.mapping.Subclass.getSubclassId()"], ["java.lang.String", "org.hibernate.mapping.Subclass.getNaturalIdCacheRegionName()"], ["java.lang.String", "org.hibernate.mapping.Subclass.getCacheConcurrencyStrategy()"], ["org.hibernate.mapping.RootClass", "org.hibernate.mapping.Subclass.getRootClass()"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.Subclass.getSuperclass()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Subclass.getIdentifierProperty()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Subclass.getDeclaredIdentifierProperty()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.Subclass.getIdentifier()"], ["boolean", "org.hibernate.mapping.Subclass.hasIdentifierProperty()"], ["org.hibernate.mapping.Value", "org.hibernate.mapping.Subclass.getDiscriminator()"], ["boolean", "org.hibernate.mapping.Subclass.isMutable()"], ["boolean", "org.hibernate.mapping.Subclass.isInherited()"], ["boolean", "org.hibernate.mapping.Subclass.isPolymorphic()"], ["void", "org.hibernate.mapping.Subclass.addProperty(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.Subclass.addMappedsuperclassProperty(org.hibernate.mapping.Property)"], ["void", "org.hibernate.mapping.Subclass.addJoin(org.hibernate.mapping.Join)"], ["java.util.Iterator", "org.hibernate.mapping.Subclass.getPropertyClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.Subclass.getTableClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.Subclass.getKeyClosureIterator()"], ["boolean", "org.hibernate.mapping.Subclass.isVersioned()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Subclass.getVersion()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.Subclass.getDeclaredVersion()"], ["boolean", "org.hibernate.mapping.Subclass.hasEmbeddedIdentifier()"], ["java.lang.Class", "org.hibernate.mapping.Subclass.getEntityPersisterClass()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Subclass.getRootTable()"], ["org.hibernate.mapping.KeyValue", "org.hibernate.mapping.Subclass.getKey()"], ["boolean", "org.hibernate.mapping.Subclass.isExplicitPolymorphism()"], ["void", "org.hibernate.mapping.Subclass.setSuperclass(org.hibernate.mapping.PersistentClass)"], ["java.lang.String", "org.hibernate.mapping.Subclass.getWhere()"], ["boolean", "org.hibernate.mapping.Subclass.isJoinedSubclass()"], ["void", "org.hibernate.mapping.Subclass.createForeignKey()"], ["void", "org.hibernate.mapping.Subclass.setEntityPersisterClass(java.lang.Class)"], ["int", "org.hibernate.mapping.Subclass.getJoinClosureSpan()"], ["int", "org.hibernate.mapping.Subclass.getPropertyClosureSpan()"], ["java.util.Iterator", "org.hibernate.mapping.Subclass.getJoinClosureIterator()"], ["boolean", "org.hibernate.mapping.Subclass.isClassOrSuperclassJoin(org.hibernate.mapping.Join)"], ["boolean", "org.hibernate.mapping.Subclass.isClassOrSuperclassTable(org.hibernate.mapping.Table)"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.Subclass.getTable()"], ["boolean", "org.hibernate.mapping.Subclass.isForceDiscriminator()"], ["boolean", "org.hibernate.mapping.Subclass.isDiscriminatorInsertable()"], ["java.util.Set", "org.hibernate.mapping.Subclass.getSynchronizedTables()"], ["java.lang.Object", "org.hibernate.mapping.Subclass.accept(org.hibernate.mapping.PersistentClassVisitor)"], ["java.util.List", "org.hibernate.mapping.Subclass.getFilters()"], ["boolean", "org.hibernate.mapping.Subclass.hasSubselectLoadableCollections()"], ["java.lang.String", "org.hibernate.mapping.Subclass.getTuplizerImplClassName(org.hibernate.EntityMode)"], ["java.util.Map", "org.hibernate.mapping.Subclass.getTuplizerMap()"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.Subclass.getIdentifierMapper()"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.mapping.Subclass.getOptimisticLockStyle()"], ["org.hibernate.mapping.Backref", "org.hibernate.mapping.Backref()"], ["boolean", "org.hibernate.mapping.Backref.isBackRef()"], ["boolean", "org.hibernate.mapping.Backref.isSynthetic()"], ["java.lang.String", "org.hibernate.mapping.Backref.getCollectionRole()"], ["void", "org.hibernate.mapping.Backref.setCollectionRole(java.lang.String)"], ["boolean", "org.hibernate.mapping.Backref.isBasicPropertyAccessor()"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.mapping.Backref.getPropertyAccessStrategy(java.lang.Class)"], ["java.lang.String", "org.hibernate.mapping.Backref.getEntityName()"], ["void", "org.hibernate.mapping.Backref.setEntityName(java.lang.String)"], ["org.hibernate.mapping.PersistentClass", "org.hibernate.mapping.PersistentClass(org.hibernate.boot.spi.MetadataBuildingContext)"], ["org.hibernate.service.ServiceRegistry", "org.hibernate.mapping.PersistentClass.getServiceRegistry()"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getClassName()"], ["void", "org.hibernate.mapping.PersistentClass.setClassName(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getProxyInterfaceName()"], ["void", "org.hibernate.mapping.PersistentClass.setProxyInterfaceName(java.lang.String)"], ["java.lang.Class", "org.hibernate.mapping.PersistentClass.getMappedClass()"], ["java.lang.Class", "org.hibernate.mapping.PersistentClass.getProxyInterface()"], ["boolean", "org.hibernate.mapping.PersistentClass.useDynamicInsert()"], ["boolean", "org.hibernate.mapping.PersistentClass.useDynamicUpdate()"], ["void", "org.hibernate.mapping.PersistentClass.setDynamicInsert(boolean)"], ["void", "org.hibernate.mapping.PersistentClass.setDynamicUpdate(boolean)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getDiscriminatorValue()"], ["void", "org.hibernate.mapping.PersistentClass.addSubclass(org.hibernate.mapping.Subclass)"], ["boolean", "org.hibernate.mapping.PersistentClass.hasSubclasses()"], ["int", "org.hibernate.mapping.PersistentClass.getSubclassSpan()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getSubclassIterator()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getSubclassClosureIterator()"], ["org.hibernate.mapping.Table", "org.hibernate.mapping.PersistentClass.getIdentityTable()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getDirectSubclasses()"], ["void", "org.hibernate.mapping.PersistentClass.addProperty(org.hibernate.mapping.Property)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getEntityName()"], ["boolean", "org.hibernate.mapping.PersistentClass.isCached()"], ["void", "org.hibernate.mapping.PersistentClass.setCached(boolean)"], ["boolean", "org.hibernate.mapping.PersistentClass.isCachingExplicitlyRequested()"], ["void", "org.hibernate.mapping.PersistentClass.setCachingExplicitlyRequested(boolean)"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getSubclassPropertyClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getSubclassJoinClosureIterator()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getSubclassTableClosureIterator()"], ["boolean", "org.hibernate.mapping.PersistentClass.isClassOrSuperclassJoin(org.hibernate.mapping.Join)"], ["boolean", "org.hibernate.mapping.PersistentClass.isClassOrSuperclassTable(org.hibernate.mapping.Table)"], ["boolean", "org.hibernate.mapping.PersistentClass.isLazy()"], ["void", "org.hibernate.mapping.PersistentClass.setLazy(boolean)"], ["void", "org.hibernate.mapping.PersistentClass.setDiscriminatorValue(java.lang.String)"], ["void", "org.hibernate.mapping.PersistentClass.setEntityName(java.lang.String)"], ["void", "org.hibernate.mapping.PersistentClass.createPrimaryKey()"], ["int", "org.hibernate.mapping.PersistentClass.getBatchSize()"], ["void", "org.hibernate.mapping.PersistentClass.setBatchSize(int)"], ["boolean", "org.hibernate.mapping.PersistentClass.hasSelectBeforeUpdate()"], ["void", "org.hibernate.mapping.PersistentClass.setSelectBeforeUpdate(boolean)"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getReferenceablePropertyIterator()"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.PersistentClass.getReferencedProperty(java.lang.String)"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.PersistentClass.getRecursiveProperty(java.lang.String)"], ["org.hibernate.mapping.Property", "org.hibernate.mapping.PersistentClass.getProperty(java.lang.String)"], ["boolean", "org.hibernate.mapping.PersistentClass.hasProperty(java.lang.String)"], ["boolean", "org.hibernate.mapping.PersistentClass.isPropertyDefinedInSuperHierarchy(java.lang.String)"], ["boolean", "org.hibernate.mapping.PersistentClass.isPropertyDefinedInHierarchy(java.lang.String)"], ["int", "org.hibernate.mapping.PersistentClass.getOptimisticLockMode()"], ["void", "org.hibernate.mapping.PersistentClass.setOptimisticLockMode(int)"], ["org.hibernate.engine.OptimisticLockStyle", "org.hibernate.mapping.PersistentClass.getOptimisticLockStyle()"], ["void", "org.hibernate.mapping.PersistentClass.setOptimisticLockStyle(org.hibernate.engine.OptimisticLockStyle)"], ["void", "org.hibernate.mapping.PersistentClass.validate(org.hibernate.engine.spi.Mapping)"], ["boolean", "org.hibernate.mapping.PersistentClass.isDiscriminatorValueNotNull()"], ["boolean", "org.hibernate.mapping.PersistentClass.isDiscriminatorValueNull()"], ["java.util.Map", "org.hibernate.mapping.PersistentClass.getMetaAttributes()"], ["void", "org.hibernate.mapping.PersistentClass.setMetaAttributes(java.util.Map)"], ["org.hibernate.mapping.MetaAttribute", "org.hibernate.mapping.PersistentClass.getMetaAttribute(java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.toString()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getJoinIterator()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getJoinClosureIterator()"], ["void", "org.hibernate.mapping.PersistentClass.addJoin(org.hibernate.mapping.Join)"], ["int", "org.hibernate.mapping.PersistentClass.getJoinClosureSpan()"], ["int", "org.hibernate.mapping.PersistentClass.getPropertyClosureSpan()"], ["int", "org.hibernate.mapping.PersistentClass.getJoinNumber(org.hibernate.mapping.Property)"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getPropertyIterator()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getUnjoinedPropertyIterator()"], ["void", "org.hibernate.mapping.PersistentClass.setCustomSQLInsert(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getCustomSQLInsert()"], ["boolean", "org.hibernate.mapping.PersistentClass.isCustomInsertCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.PersistentClass.getCustomSQLInsertCheckStyle()"], ["void", "org.hibernate.mapping.PersistentClass.setCustomSQLUpdate(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getCustomSQLUpdate()"], ["boolean", "org.hibernate.mapping.PersistentClass.isCustomUpdateCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.PersistentClass.getCustomSQLUpdateCheckStyle()"], ["void", "org.hibernate.mapping.PersistentClass.setCustomSQLDelete(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getCustomSQLDelete()"], ["boolean", "org.hibernate.mapping.PersistentClass.isCustomDeleteCallable()"], ["org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle", "org.hibernate.mapping.PersistentClass.getCustomSQLDeleteCheckStyle()"], ["void", "org.hibernate.mapping.PersistentClass.addFilter(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>)"], ["java.util.List", "org.hibernate.mapping.PersistentClass.getFilters()"], ["boolean", "org.hibernate.mapping.PersistentClass.isForceDiscriminator()"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getLoaderName()"], ["void", "org.hibernate.mapping.PersistentClass.setLoaderName(java.lang.String)"], ["void", "org.hibernate.mapping.PersistentClass.addSynchronizedTable(java.lang.String)"], ["java.lang.Boolean", "org.hibernate.mapping.PersistentClass.isAbstract()"], ["void", "org.hibernate.mapping.PersistentClass.setAbstract(java.lang.Boolean)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getJpaEntityName()"], ["void", "org.hibernate.mapping.PersistentClass.setJpaEntityName(java.lang.String)"], ["boolean", "org.hibernate.mapping.PersistentClass.hasPojoRepresentation()"], ["boolean", "org.hibernate.mapping.PersistentClass.hasSubselectLoadableCollections()"], ["void", "org.hibernate.mapping.PersistentClass.setSubselectLoadableCollections(boolean)"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.PersistentClass.getIdentifierMapper()"], ["org.hibernate.mapping.Component", "org.hibernate.mapping.PersistentClass.getDeclaredIdentifierMapper()"], ["void", "org.hibernate.mapping.PersistentClass.setDeclaredIdentifierMapper(org.hibernate.mapping.Component)"], ["boolean", "org.hibernate.mapping.PersistentClass.hasIdentifierMapper()"], ["void", "org.hibernate.mapping.PersistentClass.setIdentifierMapper(org.hibernate.mapping.Component)"], ["void", "org.hibernate.mapping.PersistentClass.addTuplizer(org.hibernate.EntityMode, java.lang.String)"], ["java.lang.String", "org.hibernate.mapping.PersistentClass.getTuplizerImplClassName(org.hibernate.EntityMode)"], ["java.util.Map", "org.hibernate.mapping.PersistentClass.getTuplizerMap()"], ["boolean", "org.hibernate.mapping.PersistentClass.hasNaturalId()"], ["java.util.Iterator", "org.hibernate.mapping.PersistentClass.getDeclaredPropertyIterator()"], ["void", "org.hibernate.mapping.PersistentClass.addMappedsuperclassProperty(org.hibernate.mapping.Property)"], ["org.hibernate.mapping.MappedSuperclass", "org.hibernate.mapping.PersistentClass.getSuperMappedSuperclass()"], ["void", "org.hibernate.mapping.PersistentClass.setSuperMappedSuperclass(org.hibernate.mapping.MappedSuperclass)"], ["org.hibernate.UnknownEntityTypeException", "org.hibernate.UnknownEntityTypeException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.UnknownEntityTypeException", "org.hibernate.UnknownEntityTypeException(java.lang.String)"], ["org.hibernate.QueryException", "org.hibernate.QueryException(java.lang.String)"], ["org.hibernate.QueryException", "org.hibernate.QueryException(java.lang.String, java.lang.Exception)"], ["org.hibernate.QueryException", "org.hibernate.QueryException(java.lang.String, java.lang.String)"], ["org.hibernate.QueryException", "org.hibernate.QueryException(java.lang.String, java.lang.String, java.lang.Exception)"], ["org.hibernate.QueryException", "org.hibernate.QueryException(java.lang.Exception)"], ["java.lang.String", "org.hibernate.QueryException.getQueryString()"], ["java.lang.String", "org.hibernate.QueryException.getMessage()"], ["org.hibernate.QueryException", "org.hibernate.QueryException.wrapWithQueryString(java.lang.String)"], ["org.hibernate.cache.NoCacheRegionFactoryAvailableException", "org.hibernate.cache.NoCacheRegionFactoryAvailableException()"], ["org.hibernate.cache.spi.StandardCacheTransactionSynchronization", "org.hibernate.cache.spi.StandardCacheTransactionSynchronization(org.hibernate.cache.spi.RegionFactory)"], ["org.hibernate.cache.spi.SecondLevelCacheLogger_$logger", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger(org.jboss.logging.Logger)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.attemptToStartAlreadyStartedCacheProvider()"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.attemptToStopAlreadyStoppedCacheProvider()"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.readOnlyCachingMutableEntity(org.hibernate.metamodel.model.domain.NavigableRole)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.readOnlyCachingMutableNaturalId(org.hibernate.metamodel.model.domain.NavigableRole)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.softLockedCacheExpired(java.lang.String, java.lang.Object)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.missingCacheCreated(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.usingLegacyCacheName(java.lang.String, java.lang.String)"], ["void", "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger.nonStandardSupportForAccessType(java.lang.String, java.lang.String, java.lang.String)"], ["org.hibernate.cache.spi.access.UnknownAccessTypeException", "org.hibernate.cache.spi.access.UnknownAccessTypeException(java.lang.String)"], ["org.hibernate.cache.spi.access.AccessType[]", "org.hibernate.cache.spi.access.AccessType.values()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.access.AccessType.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.cache.spi.access.AccessType.getExternalName()"], ["java.lang.String", "org.hibernate.cache.spi.access.AccessType.toString()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.access.AccessType.fromExternalName(java.lang.String)"], ["org.hibernate.cache.spi.support.AccessedDataClassification[]", "org.hibernate.cache.spi.support.AccessedDataClassification.values()"], ["org.hibernate.cache.spi.support.AccessedDataClassification", "org.hibernate.cache.spi.support.AccessedDataClassification.valueOf(java.lang.String)"], ["org.hibernate.cache.spi.support.NaturalIdReadOnlyAccess", "org.hibernate.cache.spi.support.NaturalIdReadOnlyAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.NaturalIdReadOnlyAccess.getAccessType()"], ["void", "org.hibernate.cache.spi.support.NaturalIdReadOnlyAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.RegionFactoryTemplate", "org.hibernate.cache.spi.support.RegionFactoryTemplate()"], ["org.hibernate.cache.spi.DomainDataRegion", "org.hibernate.cache.spi.support.RegionFactoryTemplate.buildDomainDataRegion(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext)"], ["org.hibernate.cache.spi.QueryResultsRegion", "org.hibernate.cache.spi.support.RegionFactoryTemplate.buildQueryResultsRegion(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.TimestampsRegion", "org.hibernate.cache.spi.support.RegionFactoryTemplate.buildTimestampsRegion(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.support.DirectAccessRegionTemplate", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate(java.lang.String, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.spi.support.StorageAccess)"], ["org.hibernate.cache.spi.support.StorageAccess", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate.getStorageAccess()"], ["java.lang.Object", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate.getFromCache(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate.putIntoCache(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate.clear()"], ["void", "org.hibernate.cache.spi.support.DirectAccessRegionTemplate.destroy()"], ["org.hibernate.cache.spi.support.NaturalIdTransactionalAccess", "org.hibernate.cache.spi.support.NaturalIdTransactionalAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.NaturalIdTransactionalAccess.getAccessType()"], ["org.hibernate.cache.spi.DomainDataRegion", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.getRegion()"], ["boolean", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.contains(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.get(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.putFromLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.putFromLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, boolean)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.lockRegion()"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.unlockRegion(org.hibernate.cache.spi.access.SoftLock)"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.remove(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.removeAll(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.evict(java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.evictAll()"], ["void", "org.hibernate.cache.spi.support.AbstractCachedDomainDataAccess.destroy()"], ["org.hibernate.cache.spi.support.AbstractCollectionDataAccess", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.generateCacheKey(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.getCacheKeyId(java.lang.Object)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.lockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.lockRegion()"], ["void", "org.hibernate.cache.spi.support.AbstractCollectionDataAccess.unlockRegion(org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.QueryResultsRegionTemplate", "org.hibernate.cache.spi.support.QueryResultsRegionTemplate(java.lang.String, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.spi.support.StorageAccess)"], ["org.hibernate.cache.spi.support.AbstractEntityDataAccess", "org.hibernate.cache.spi.support.AbstractEntityDataAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.generateCacheKey(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.getCacheKeyId(java.lang.Object)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.lockRegion()"], ["void", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.unlockRegion(org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.lockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractEntityDataAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.EntityDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.getAccessType()"], ["boolean", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["void", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["void", "org.hibernate.cache.spi.support.EntityNonStrictReadWriteAccess.remove(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.generateCacheKey(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.getNaturalIdValues(java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.lockRegion()"], ["void", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.unlockRegion(org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.lockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractNaturalIdDataAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["default", "org.hibernate.cache.spi.support.DomainDataStorageAccess.void putFromLoad(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.spi.support.AbstractRegion", "org.hibernate.cache.spi.support.AbstractRegion(java.lang.String, org.hibernate.cache.spi.RegionFactory)"], ["java.lang.String", "org.hibernate.cache.spi.support.AbstractRegion.getName()"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cache.spi.support.AbstractRegion.getRegionFactory()"], ["org.hibernate.cache.spi.support.CollectionTransactionAccess", "org.hibernate.cache.spi.support.CollectionTransactionAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.CollectionTransactionAccess.getAccessType()"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.get(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.putFromLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.putFromLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, boolean)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.lockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["void", "org.hibernate.cache.spi.support.AbstractReadWriteAccess.remove(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["org.hibernate.cache.spi.support.EntityReadWriteAccess", "org.hibernate.cache.spi.support.EntityReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.EntityDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.EntityReadWriteAccess.getAccessType()"], ["java.lang.Object", "org.hibernate.cache.spi.support.EntityReadWriteAccess.generateCacheKey(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.spi.support.EntityReadWriteAccess.getCacheKeyId(java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadWriteAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadWriteAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadWriteAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadWriteAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.EntityReadWriteAccess.lockRegion()"], ["void", "org.hibernate.cache.spi.support.EntityReadWriteAccess.unlockRegion(org.hibernate.cache.spi.access.SoftLock)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.isReadable(long)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.isWriteable(long, java.lang.Object, java.util.Comparator)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.getValue()"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.isUnlockable(org.hibernate.cache.spi.access.SoftLock)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.equals(java.lang.Object)"], ["int", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.hashCode()"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.wasLockedConcurrently()"], ["org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.lock(long, java.util.UUID, long)"], ["void", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.unlock(long)"], ["java.lang.String", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl.toString()"], ["long", "org.hibernate.cache.spi.support.SimpleTimestamper.next()"], ["int", "org.hibernate.cache.spi.support.SimpleTimestamper.timeOut()"], ["org.hibernate.cache.spi.support.CollectionReadWriteAccess", "org.hibernate.cache.spi.support.CollectionReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.getAccessType()"], ["java.lang.Object", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.generateCacheKey(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.getCacheKeyId(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.get(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.putFromLoad(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["org.hibernate.cache.spi.access.SoftLock", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.lockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.CollectionReadWriteAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["java.lang.String", "org.hibernate.cache.spi.support.RegionNameQualifier.qualify(java.lang.String, org.hibernate.boot.spi.SessionFactoryOptions)"], ["java.lang.String", "org.hibernate.cache.spi.support.RegionNameQualifier.qualify(java.lang.String, java.lang.String)"], ["boolean", "org.hibernate.cache.spi.support.RegionNameQualifier.isQualified(java.lang.String, org.hibernate.boot.spi.SessionFactoryOptions)"], ["boolean", "org.hibernate.cache.spi.support.RegionNameQualifier.isQualified(java.lang.String, java.lang.String)"], ["org.hibernate.cache.spi.support.TimestampsRegionTemplate", "org.hibernate.cache.spi.support.TimestampsRegionTemplate(java.lang.String, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.spi.support.StorageAccess)"], ["org.hibernate.cache.spi.support.DomainDataRegionImpl", "org.hibernate.cache.spi.support.DomainDataRegionImpl(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.spi.support.RegionFactoryTemplate, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext)"], ["org.hibernate.cache.spi.support.CollectionNonStrictReadWriteAccess", "org.hibernate.cache.spi.support.CollectionNonStrictReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.CollectionNonStrictReadWriteAccess.getAccessType()"], ["void", "org.hibernate.cache.spi.support.CollectionNonStrictReadWriteAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.CollectionReadOnlyAccess", "org.hibernate.cache.spi.support.CollectionReadOnlyAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.CollectionReadOnlyAccess.getAccessType()"], ["org.hibernate.cache.spi.support.NaturalIdReadWriteAccess", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.getAccessType()"], ["java.lang.Object", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.generateCacheKey(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object[]", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.getNaturalIdValues(java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdReadWriteAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.DomainDataRegionTemplate", "org.hibernate.cache.spi.support.DomainDataRegionTemplate(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext)"], ["org.hibernate.cache.spi.support.DomainDataStorageAccess", "org.hibernate.cache.spi.support.DomainDataRegionTemplate.getCacheStorageAccess()"], ["org.hibernate.cache.spi.access.EntityDataAccess", "org.hibernate.cache.spi.support.DomainDataRegionTemplate.generateEntityAccess(org.hibernate.cache.cfg.spi.EntityDataCachingConfig)"], ["org.hibernate.cache.spi.access.NaturalIdDataAccess", "org.hibernate.cache.spi.support.DomainDataRegionTemplate.generateNaturalIdAccess(org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["org.hibernate.cache.spi.access.CollectionDataAccess", "org.hibernate.cache.spi.support.DomainDataRegionTemplate.generateCollectionAccess(org.hibernate.cache.cfg.spi.CollectionDataCachingConfig)"], ["default", "org.hibernate.cache.spi.support.StorageAccess.void removeFromCache(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.support.StorageAccess.void clearCache(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.spi.support.EntityTransactionalAccess", "org.hibernate.cache.spi.support.EntityTransactionalAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.EntityDataCachingConfig)"], ["boolean", "org.hibernate.cache.spi.support.EntityTransactionalAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityTransactionalAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityTransactionalAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityTransactionalAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.EntityTransactionalAccess.getAccessType()"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.isReadable(long)"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.isWriteable(long, java.lang.Object, java.util.Comparator)"], ["java.lang.Object", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.getValue()"], ["boolean", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.isUnlockable(org.hibernate.cache.spi.access.SoftLock)"], ["org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.lock(long, java.util.UUID, long)"], ["java.lang.String", "org.hibernate.cache.spi.support.AbstractReadWriteAccess$Item.toString()"], ["org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.NaturalIdDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.getAccessType()"], ["void", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["void", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.remove(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.NaturalIdNonStrictReadWriteAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object)"], ["org.hibernate.cache.spi.support.AbstractDomainDataRegion", "org.hibernate.cache.spi.support.AbstractDomainDataRegion(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.getSessionFactory()"], ["org.hibernate.cache.spi.CacheKeysFactory", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.getEffectiveKeysFactory()"], ["org.hibernate.cache.spi.access.EntityDataAccess", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.getEntityDataAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.NaturalIdDataAccess", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.getNaturalIdDataAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.CollectionDataAccess", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.getCollectionDataAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["void", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.clear()"], ["void", "org.hibernate.cache.spi.support.AbstractDomainDataRegion.destroy()"], ["org.hibernate.cache.spi.support.CacheUtils", "org.hibernate.cache.spi.support.CacheUtils()"], ["boolean", "org.hibernate.cache.spi.support.CacheUtils.isUnqualified(java.lang.String, org.hibernate.boot.spi.SessionFactoryOptions)"], ["org.hibernate.cache.spi.support.EntityReadOnlyAccess", "org.hibernate.cache.spi.support.EntityReadOnlyAccess(org.hibernate.cache.spi.DomainDataRegion, org.hibernate.cache.spi.CacheKeysFactory, org.hibernate.cache.spi.support.DomainDataStorageAccess, org.hibernate.cache.cfg.spi.EntityDataCachingConfig)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.getAccessType()"], ["boolean", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.insert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.afterInsert(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object)"], ["void", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.unlockItem(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.update(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.support.EntityReadOnlyAccess.afterUpdate(org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.cache.spi.access.SoftLock)"], ["default", "org.hibernate.cache.spi.QueryResultsCache.void clear()"], ["default", "org.hibernate.cache.spi.QueryResultsCache.boolean put(org.hibernate.cache.spi.QueryKey, org.hibernate.type.Type[], java.util.List, boolean, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.QueryResultsCache.java.util.List get(org.hibernate.cache.spi.QueryKey, org.hibernate.type.Type[], boolean, java.util.Set<java.io.Serializable>, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.QueryResultsCache.void destroy()"], ["int", "org.hibernate.cache.spi.FilterKey.hashCode()"], ["boolean", "org.hibernate.cache.spi.FilterKey.equals(java.lang.Object)"], ["java.lang.String", "org.hibernate.cache.spi.FilterKey.toString()"], ["default", "org.hibernate.cache.spi.TimestampsCache.void preInvalidate(java.io.Serializable[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.TimestampsCache.void invalidate(java.io.Serializable[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.TimestampsCache.boolean isUpToDate(java.util.Set<java.io.Serializable>, java.lang.Long, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.TimestampsCache.void clear()"], ["default", "org.hibernate.cache.spi.TimestampsCache.void destroy()"], ["default", "org.hibernate.cache.spi.RegionFactory.org.hibernate.cache.spi.CacheTransactionSynchronization createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["default", "org.hibernate.cache.spi.RegionFactory.long getTimeout()"], ["default", "org.hibernate.cache.spi.CacheTransactionSynchronization.void transactionSuspended()"], ["default", "org.hibernate.cache.spi.CacheTransactionSynchronization.void transactionResumed()"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredCollectionCacheEntry.structure(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredCollectionCacheEntry.destructure(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.entry.CollectionCacheEntry", "org.hibernate.cache.spi.entry.CollectionCacheEntry(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister)"], ["java.io.Serializable[]", "org.hibernate.cache.spi.entry.CollectionCacheEntry.getState()"], ["void", "org.hibernate.cache.spi.entry.CollectionCacheEntry.assemble(org.hibernate.collection.spi.PersistentCollection, org.hibernate.persister.collection.CollectionPersister, java.lang.Object)"], ["java.lang.String", "org.hibernate.cache.spi.entry.CollectionCacheEntry.toString()"], ["org.hibernate.cache.spi.entry.StandardCacheEntryImpl", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object)"], ["boolean", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.isReferenceEntry()"], ["java.io.Serializable[]", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.getDisassembledState()"], ["java.lang.String", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.getSubclass()"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.getVersion()"], ["boolean", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.isDeepCopyNeeded()"], ["java.lang.Object[]", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.assemble(java.lang.Object, java.io.Serializable, org.hibernate.persister.entity.EntityPersister, org.hibernate.Interceptor, org.hibernate.event.spi.EventSource)"], ["java.lang.String", "org.hibernate.cache.spi.entry.StandardCacheEntryImpl.toString()"], ["java.lang.Object", "org.hibernate.cache.spi.entry.UnstructuredCacheEntry.structure(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.UnstructuredCacheEntry.destructure(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.entry.StructuredCacheEntry", "org.hibernate.cache.spi.entry.StructuredCacheEntry(org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredCacheEntry.destructure(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredCacheEntry.structure(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredMapCacheEntry.structure(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.StructuredMapCacheEntry.destructure(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl(java.lang.Object, org.hibernate.persister.entity.EntityPersister)"], ["java.lang.Object", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.getReference()"], ["boolean", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.isReferenceEntry()"], ["java.lang.String", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.getSubclass()"], ["org.hibernate.persister.entity.EntityPersister", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.getSubclassPersister()"], ["java.lang.Object", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.getVersion()"], ["java.io.Serializable[]", "org.hibernate.cache.spi.entry.ReferenceCacheEntryImpl.getDisassembledState()"], ["default", "org.hibernate.cache.spi.CacheImplementor.void evictQueries()"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.cache.spi.UpdateTimestampsCache getUpdateTimestampsCache()"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getQueryCache()"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getDefaultQueryCache()"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.cache.spi.QueryCache getQueryCache(java.lang.String)"], ["default", "org.hibernate.cache.spi.CacheImplementor.java.lang.String unqualifyRegionName(java.lang.String)"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.cache.spi.Region getRegionByLegacyName(java.lang.String)"], ["default", "org.hibernate.cache.spi.CacheImplementor.org.hibernate.SessionFactory getSessionFactory()"], ["void", "org.hibernate.cache.spi.TimestampsCache$1.accept(java.io.Serializable)"], ["void", "org.hibernate.cache.spi.TimestampsCache$1.accept(java.lang.Object)"], ["org.hibernate.cache.spi.AbstractCacheTransactionSynchronization", "org.hibernate.cache.spi.AbstractCacheTransactionSynchronization(org.hibernate.cache.spi.RegionFactory)"], ["long", "org.hibernate.cache.spi.AbstractCacheTransactionSynchronization.getCurrentTransactionStartTimestamp()"], ["void", "org.hibernate.cache.spi.AbstractCacheTransactionSynchronization.transactionJoined()"], ["void", "org.hibernate.cache.spi.AbstractCacheTransactionSynchronization.transactionCompleting()"], ["void", "org.hibernate.cache.spi.AbstractCacheTransactionSynchronization.transactionCompleted(boolean)"], ["org.hibernate.cache.spi.QueryKey", "org.hibernate.cache.spi.QueryKey.generateQueryKey(java.lang.String, org.hibernate.engine.spi.QueryParameters, java.util.Set, org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.transform.CacheableResultTransformer)"], ["org.hibernate.transform.CacheableResultTransformer", "org.hibernate.cache.spi.QueryKey.getResultTransformer()"], ["java.util.Map", "org.hibernate.cache.spi.QueryKey.getNamedParameters()"], ["boolean", "org.hibernate.cache.spi.QueryKey.equals(java.lang.Object)"], ["int", "org.hibernate.cache.spi.QueryKey.hashCode()"], ["java.lang.String", "org.hibernate.cache.spi.QueryKey.toString()"], ["java.lang.String[]", "org.hibernate.cache.spi.QuerySpacesHelper.toStringArray(java.util.Set)"], ["org.hibernate.cache.spi.AbstractRegionFactory", "org.hibernate.cache.spi.AbstractRegionFactory()"], ["void", "org.hibernate.cache.spi.AbstractRegionFactory.start(org.hibernate.boot.spi.SessionFactoryOptions, java.util.Map)"], ["void", "org.hibernate.cache.spi.AbstractRegionFactory.stop()"], ["boolean", "org.hibernate.cache.spi.AbstractRegionFactory.isMinimalPutsEnabledByDefault()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.spi.AbstractRegionFactory.getDefaultAccessType()"], ["java.lang.String", "org.hibernate.cache.spi.AbstractRegionFactory.qualify(java.lang.String)"], ["org.hibernate.cache.spi.CacheTransactionSynchronization", "org.hibernate.cache.spi.AbstractRegionFactory.createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["long", "org.hibernate.cache.spi.AbstractRegionFactory.nextTimestamp()"], ["long", "org.hibernate.cache.spi.AbstractRegionFactory.getTimeout()"], ["org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder(java.lang.String)"], ["org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder.addEntityConfig(org.hibernate.mapping.PersistentClass, org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder.addNaturalIdConfig(org.hibernate.mapping.RootClass, org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder.addCollectionConfig(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl$Builder.build()"], ["org.hibernate.cache.cfg.internal.AbstractDomainDataCachingConfig", "org.hibernate.cache.cfg.internal.AbstractDomainDataCachingConfig(org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.cfg.internal.AbstractDomainDataCachingConfig.getAccessType()"], ["org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl", "org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.AccessType)"], ["boolean", "org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl.isMutable()"], ["boolean", "org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl.isVersioned()"], ["java.util.Comparator", "org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl.getOwnerVersionComparator()"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl.getNavigableRole()"], ["java.lang.String", "org.hibernate.cache.cfg.internal.DomainDataRegionConfigImpl.getRegionName()"], ["org.hibernate.cache.cfg.internal.NaturalIdDataCachingConfigImpl", "org.hibernate.cache.cfg.internal.NaturalIdDataCachingConfigImpl(org.hibernate.mapping.RootClass, org.hibernate.cache.spi.access.AccessType)"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.cache.cfg.internal.NaturalIdDataCachingConfigImpl.getNavigableRole()"], ["boolean", "org.hibernate.cache.cfg.internal.NaturalIdDataCachingConfigImpl.isMutable()"], ["boolean", "org.hibernate.cache.cfg.internal.NaturalIdDataCachingConfigImpl.isVersioned()"], ["org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl", "org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl(org.hibernate.metamodel.model.domain.NavigableRole, java.util.function.Supplier<java.util.Comparator>, boolean, org.hibernate.cache.spi.access.AccessType)"], ["boolean", "org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl.isMutable()"], ["boolean", "org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl.isVersioned()"], ["org.hibernate.metamodel.model.domain.NavigableRole", "org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl.getNavigableRole()"], ["void", "org.hibernate.cache.cfg.internal.EntityDataCachingConfigImpl.addCachedType(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.QueryResultsRegion", "org.hibernate.cache.internal.QueryResultsCacheImpl.getRegion()"], ["boolean", "org.hibernate.cache.internal.QueryResultsCacheImpl.put(org.hibernate.cache.spi.QueryKey, java.util.List, org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.List", "org.hibernate.cache.internal.QueryResultsCacheImpl.get(org.hibernate.cache.spi.QueryKey, java.util.Set<java.io.Serializable>, org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.util.List", "org.hibernate.cache.internal.QueryResultsCacheImpl.get(org.hibernate.cache.spi.QueryKey, java.lang.String[], org.hibernate.type.Type[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.cache.internal.QueryResultsCacheImpl.toString()"], ["org.hibernate.cache.internal.RegionFactoryInitiator", "org.hibernate.cache.internal.RegionFactoryInitiator()"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.cache.internal.NaturalIdCacheKey", "org.hibernate.cache.internal.NaturalIdCacheKey(java.lang.Object[], org.hibernate.type.Type[], int[], java.lang.String, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.String", "org.hibernate.cache.internal.NaturalIdCacheKey.getEntityName()"], ["java.lang.String", "org.hibernate.cache.internal.NaturalIdCacheKey.getTenantId()"], ["java.io.Serializable[]", "org.hibernate.cache.internal.NaturalIdCacheKey.getNaturalIdValues()"], ["java.lang.String", "org.hibernate.cache.internal.NaturalIdCacheKey.toString()"], ["int", "org.hibernate.cache.internal.NaturalIdCacheKey.hashCode()"], ["boolean", "org.hibernate.cache.internal.NaturalIdCacheKey.equals(java.lang.Object)"], ["org.hibernate.cache.internal.StandardTimestampsCacheFactory", "org.hibernate.cache.internal.StandardTimestampsCacheFactory()"], ["org.hibernate.cache.spi.TimestampsCache", "org.hibernate.cache.internal.StandardTimestampsCacheFactory.buildTimestampsCache(org.hibernate.cache.spi.CacheImplementor, org.hibernate.cache.spi.TimestampsRegion)"], ["java.lang.Object", "org.hibernate.cache.internal.CacheKeyImplementation.getId()"], ["boolean", "org.hibernate.cache.internal.CacheKeyImplementation.equals(java.lang.Object)"], ["int", "org.hibernate.cache.internal.CacheKeyImplementation.hashCode()"], ["java.lang.String", "org.hibernate.cache.internal.CacheKeyImplementation.toString()"], ["org.hibernate.cache.internal.EnabledCaching", "org.hibernate.cache.internal.EnabledCaching(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["void", "org.hibernate.cache.internal.EnabledCaching.prime(java.util.Set<org.hibernate.cache.cfg.spi.DomainDataRegionConfig>)"], ["org.hibernate.cache.spi.CacheKeysFactory", "org.hibernate.cache.internal.EnabledCaching.getEnforcedCacheKeysFactory()"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cache.internal.EnabledCaching.getSessionFactory()"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cache.internal.EnabledCaching.getRegionFactory()"], ["org.hibernate.cache.spi.TimestampsCache", "org.hibernate.cache.internal.EnabledCaching.getTimestampsCache()"], ["org.hibernate.cache.spi.Region", "org.hibernate.cache.internal.EnabledCaching.getRegion(java.lang.String)"], ["boolean", "org.hibernate.cache.internal.EnabledCaching.containsEntity(java.lang.Class, java.io.Serializable)"], ["boolean", "org.hibernate.cache.internal.EnabledCaching.containsEntity(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictEntityData(java.lang.Class, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictEntityData(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictEntityData(java.lang.Class)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictEntityData(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictEntityData()"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictNaturalIdData(java.lang.Class)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictNaturalIdData(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictNaturalIdData()"], ["boolean", "org.hibernate.cache.internal.EnabledCaching.containsCollection(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictCollectionData(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictCollectionData(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictCollectionData()"], ["boolean", "org.hibernate.cache.internal.EnabledCaching.containsQuery(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictDefaultQueryRegion()"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictQueryRegion(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictQueryRegions()"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.EnabledCaching.getDefaultQueryResultsCache()"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.EnabledCaching.getQueryResultsCache(java.lang.String)"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.EnabledCaching.getQueryResultsCacheStrictly(java.lang.String)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evictRegion(java.lang.String)"], ["<T> T", "org.hibernate.cache.internal.EnabledCaching.unwrap(java.lang.Class<T>)"], ["void", "org.hibernate.cache.internal.EnabledCaching.close()"], ["boolean", "org.hibernate.cache.internal.EnabledCaching.contains(java.lang.Class, java.lang.Object)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evict(java.lang.Class, java.lang.Object)"], ["void", "org.hibernate.cache.internal.EnabledCaching.evict(java.lang.Class)"], ["org.hibernate.cache.spi.access.EntityDataAccess", "org.hibernate.cache.internal.EnabledCaching.getEntityRegionAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.NaturalIdDataAccess", "org.hibernate.cache.internal.EnabledCaching.getNaturalIdCacheRegionAccessStrategy(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.CollectionDataAccess", "org.hibernate.cache.internal.EnabledCaching.getCollectionRegionAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["java.lang.String[]", "org.hibernate.cache.internal.EnabledCaching.getSecondLevelCacheRegionNames()"], ["org.hibernate.SessionFactory", "org.hibernate.cache.internal.EnabledCaching.getSessionFactory()"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator$CollectionEvictCacheAction.execute()"], ["org.hibernate.action.spi.AfterTransactionCompletionProcess", "org.hibernate.cache.internal.CollectionCacheInvalidator$CollectionEvictCacheAction.lockCache()"], ["org.hibernate.cache.internal.DefaultCacheKeysFactory", "org.hibernate.cache.internal.DefaultCacheKeysFactory()"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticCreateCollectionKey(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticCreateEntityKey(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticCreateNaturalIdKey(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticGetEntityId(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticGetCollectionId(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.cache.internal.DefaultCacheKeysFactory.staticGetNaturalIdValues(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.createCollectionKey(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.createEntityKey(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.createNaturalIdKey(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.getEntityId(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.internal.DefaultCacheKeysFactory.getCollectionId(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.cache.internal.DefaultCacheKeysFactory.getNaturalIdValues(java.lang.Object)"], ["org.hibernate.cache.internal.SimpleCacheKeysFactory", "org.hibernate.cache.internal.SimpleCacheKeysFactory()"], ["java.lang.Object", "org.hibernate.cache.internal.SimpleCacheKeysFactory.createCollectionKey(java.lang.Object, org.hibernate.persister.collection.CollectionPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.SimpleCacheKeysFactory.createEntityKey(java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String)"], ["java.lang.Object", "org.hibernate.cache.internal.SimpleCacheKeysFactory.createNaturalIdKey(java.lang.Object[], org.hibernate.persister.entity.EntityPersister, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Object", "org.hibernate.cache.internal.SimpleCacheKeysFactory.getEntityId(java.lang.Object)"], ["java.lang.Object", "org.hibernate.cache.internal.SimpleCacheKeysFactory.getCollectionId(java.lang.Object)"], ["java.lang.Object[]", "org.hibernate.cache.internal.SimpleCacheKeysFactory.getNaturalIdValues(java.lang.Object)"], ["org.hibernate.cache.internal.NoCachingRegionFactory", "org.hibernate.cache.internal.NoCachingRegionFactory()"], ["void", "org.hibernate.cache.internal.NoCachingRegionFactory.start(org.hibernate.boot.spi.SessionFactoryOptions, java.util.Map)"], ["void", "org.hibernate.cache.internal.NoCachingRegionFactory.stop()"], ["java.lang.String", "org.hibernate.cache.internal.NoCachingRegionFactory.qualify(java.lang.String)"], ["boolean", "org.hibernate.cache.internal.NoCachingRegionFactory.isMinimalPutsEnabledByDefault()"], ["org.hibernate.cache.spi.access.AccessType", "org.hibernate.cache.internal.NoCachingRegionFactory.getDefaultAccessType()"], ["long", "org.hibernate.cache.internal.NoCachingRegionFactory.nextTimestamp()"], ["org.hibernate.cache.spi.CacheTransactionSynchronization", "org.hibernate.cache.internal.NoCachingRegionFactory.createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.spi.DomainDataRegion", "org.hibernate.cache.internal.NoCachingRegionFactory.buildDomainDataRegion(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext)"], ["org.hibernate.cache.spi.QueryResultsRegion", "org.hibernate.cache.internal.NoCachingRegionFactory.buildQueryResultsRegion(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.spi.TimestampsRegion", "org.hibernate.cache.internal.NoCachingRegionFactory.buildTimestampsRegion(java.lang.String, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl", "org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl(java.util.Properties)"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl.create(java.lang.Class<? extends org.hibernate.cache.spi.RegionFactory>)"], ["java.lang.Object", "org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl.create(java.lang.Class)"], ["org.hibernate.cache.internal.CollectionCacheInvalidator", "org.hibernate.cache.internal.CollectionCacheInvalidator()"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator.integrate(org.hibernate.boot.Metadata, org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator.disintegrate(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.service.spi.SessionFactoryServiceRegistry)"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator.onPostInsert(org.hibernate.event.spi.PostInsertEvent)"], ["boolean", "org.hibernate.cache.internal.CollectionCacheInvalidator.requiresPostCommitHanding(org.hibernate.persister.entity.EntityPersister)"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator.onPostDelete(org.hibernate.event.spi.PostDeleteEvent)"], ["void", "org.hibernate.cache.internal.CollectionCacheInvalidator.onPostUpdate(org.hibernate.event.spi.PostUpdateEvent)"], ["org.hibernate.cache.internal.TimestampsCacheEnabledImpl", "org.hibernate.cache.internal.TimestampsCacheEnabledImpl(org.hibernate.cache.spi.TimestampsRegion)"], ["org.hibernate.cache.spi.TimestampsRegion", "org.hibernate.cache.internal.TimestampsCacheEnabledImpl.getRegion()"], ["void", "org.hibernate.cache.internal.TimestampsCacheEnabledImpl.preInvalidate(java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.cache.internal.TimestampsCacheEnabledImpl.invalidate(java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.cache.internal.TimestampsCacheEnabledImpl.isUpToDate(java.lang.String[], java.lang.Long, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.internal.DisabledCaching", "org.hibernate.cache.internal.DisabledCaching(org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.engine.spi.SessionFactoryImplementor", "org.hibernate.cache.internal.DisabledCaching.getSessionFactory()"], ["org.hibernate.cache.spi.RegionFactory", "org.hibernate.cache.internal.DisabledCaching.getRegionFactory()"], ["void", "org.hibernate.cache.internal.DisabledCaching.prime(java.util.Set<org.hibernate.cache.cfg.spi.DomainDataRegionConfig>)"], ["boolean", "org.hibernate.cache.internal.DisabledCaching.containsEntity(java.lang.Class, java.io.Serializable)"], ["boolean", "org.hibernate.cache.internal.DisabledCaching.containsEntity(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictEntityData(java.lang.Class, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictEntityData(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictEntityData(java.lang.Class)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictEntityData(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictEntityData()"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictNaturalIdData(java.lang.Class)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictNaturalIdData(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictNaturalIdData()"], ["boolean", "org.hibernate.cache.internal.DisabledCaching.containsCollection(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictCollectionData(java.lang.String, java.io.Serializable)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictCollectionData(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictCollectionData()"], ["boolean", "org.hibernate.cache.internal.DisabledCaching.containsQuery(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictDefaultQueryRegion()"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictQueryRegion(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictQueryRegions()"], ["void", "org.hibernate.cache.internal.DisabledCaching.evictRegion(java.lang.String)"], ["org.hibernate.cache.spi.Region", "org.hibernate.cache.internal.DisabledCaching.getRegion(java.lang.String)"], ["org.hibernate.cache.spi.TimestampsCache", "org.hibernate.cache.internal.DisabledCaching.getTimestampsCache()"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.DisabledCaching.getDefaultQueryResultsCache()"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.DisabledCaching.getQueryResultsCache(java.lang.String)"], ["org.hibernate.cache.spi.QueryResultsCache", "org.hibernate.cache.internal.DisabledCaching.getQueryResultsCacheStrictly(java.lang.String)"], ["void", "org.hibernate.cache.internal.DisabledCaching.close()"], ["java.lang.String[]", "org.hibernate.cache.internal.DisabledCaching.getSecondLevelCacheRegionNames()"], ["org.hibernate.cache.spi.access.EntityDataAccess", "org.hibernate.cache.internal.DisabledCaching.getEntityRegionAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.NaturalIdDataAccess", "org.hibernate.cache.internal.DisabledCaching.getNaturalIdCacheRegionAccessStrategy(org.hibernate.metamodel.model.domain.NavigableRole)"], ["org.hibernate.cache.spi.access.CollectionDataAccess", "org.hibernate.cache.internal.DisabledCaching.getCollectionRegionAccess(org.hibernate.metamodel.model.domain.NavigableRole)"], ["boolean", "org.hibernate.cache.internal.DisabledCaching.contains(java.lang.Class, java.lang.Object)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evict(java.lang.Class, java.lang.Object)"], ["void", "org.hibernate.cache.internal.DisabledCaching.evict(java.lang.Class)"], ["<T> T", "org.hibernate.cache.internal.DisabledCaching.unwrap(java.lang.Class<T>)"], ["org.hibernate.SessionFactory", "org.hibernate.cache.internal.DisabledCaching.getSessionFactory()"], ["org.hibernate.cache.internal.TimestampsCacheDisabledImpl", "org.hibernate.cache.internal.TimestampsCacheDisabledImpl()"], ["org.hibernate.cache.spi.TimestampsRegion", "org.hibernate.cache.internal.TimestampsCacheDisabledImpl.getRegion()"], ["void", "org.hibernate.cache.internal.TimestampsCacheDisabledImpl.preInvalidate(java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["void", "org.hibernate.cache.internal.TimestampsCacheDisabledImpl.invalidate(java.lang.String[], org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["boolean", "org.hibernate.cache.internal.TimestampsCacheDisabledImpl.isUpToDate(java.lang.String[], java.lang.Long, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["org.hibernate.cache.internal.NoCachingTransactionSynchronizationImpl", "org.hibernate.cache.internal.NoCachingTransactionSynchronizationImpl(org.hibernate.cache.spi.RegionFactory)"], ["java.lang.String", "org.hibernate.cache.internal.NaturalIdCacheKey$1.initialize()"], ["java.lang.Object", "org.hibernate.cache.internal.NaturalIdCacheKey$1.initialize()"], ["org.hibernate.cache.CacheException", "org.hibernate.cache.CacheException(java.lang.String)"], ["org.hibernate.cache.CacheException", "org.hibernate.cache.CacheException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.cache.CacheException", "org.hibernate.cache.CacheException(java.lang.Throwable)"], ["org.hibernate.AnnotationException", "org.hibernate.AnnotationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.AnnotationException", "org.hibernate.AnnotationException(java.lang.String)"], ["org.hibernate.BaseSessionEventListener", "org.hibernate.BaseSessionEventListener()"], ["void", "org.hibernate.BaseSessionEventListener.transactionCompletion(boolean)"], ["void", "org.hibernate.BaseSessionEventListener.jdbcConnectionAcquisitionStart()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcConnectionAcquisitionEnd()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcConnectionReleaseStart()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcConnectionReleaseEnd()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcPrepareStatementStart()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcPrepareStatementEnd()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcExecuteStatementStart()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcExecuteStatementEnd()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcExecuteBatchStart()"], ["void", "org.hibernate.BaseSessionEventListener.jdbcExecuteBatchEnd()"], ["void", "org.hibernate.BaseSessionEventListener.cachePutStart()"], ["void", "org.hibernate.BaseSessionEventListener.cachePutEnd()"], ["void", "org.hibernate.BaseSessionEventListener.cacheGetStart()"], ["void", "org.hibernate.BaseSessionEventListener.cacheGetEnd(boolean)"], ["void", "org.hibernate.BaseSessionEventListener.flushStart()"], ["void", "org.hibernate.BaseSessionEventListener.flushEnd(int, int)"], ["void", "org.hibernate.BaseSessionEventListener.partialFlushStart()"], ["void", "org.hibernate.BaseSessionEventListener.partialFlushEnd(int, int)"], ["void", "org.hibernate.BaseSessionEventListener.dirtyCalculationStart()"], ["void", "org.hibernate.BaseSessionEventListener.dirtyCalculationEnd(boolean)"], ["void", "org.hibernate.BaseSessionEventListener.end()"], ["org.hibernate.lob.ReaderInputStream", "org.hibernate.lob.ReaderInputStream(java.io.Reader)"], ["int", "org.hibernate.lob.ReaderInputStream.read()"], ["org.hibernate.property.access.spi.GetterFieldImpl", "org.hibernate.property.access.spi.GetterFieldImpl(java.lang.Class, java.lang.String, java.lang.reflect.Field)"], ["java.lang.Object", "org.hibernate.property.access.spi.GetterFieldImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.spi.GetterFieldImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.spi.GetterFieldImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.spi.GetterFieldImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.spi.GetterFieldImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.spi.GetterFieldImpl.getMethod()"], ["org.hibernate.property.access.spi.GetterMethodImpl", "org.hibernate.property.access.spi.GetterMethodImpl(java.lang.Class, java.lang.String, java.lang.reflect.Method)"], ["java.lang.Object", "org.hibernate.property.access.spi.GetterMethodImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.spi.GetterMethodImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.spi.GetterMethodImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.spi.GetterMethodImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.spi.GetterMethodImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.spi.GetterMethodImpl.getMethod()"], ["org.hibernate.property.access.spi.PropertyAccessBuildingException", "org.hibernate.property.access.spi.PropertyAccessBuildingException(java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessBuildingException", "org.hibernate.property.access.spi.PropertyAccessBuildingException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies[]", "org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies.values()"], ["org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies", "org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies.valueOf(java.lang.String)"], ["java.lang.String", "org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies.getExternalName()"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies.getStrategy()"], ["org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies", "org.hibernate.property.access.spi.BuiltInPropertyAccessStrategies.interpret(java.lang.String)"], ["org.hibernate.property.access.spi.SetterMethodImpl", "org.hibernate.property.access.spi.SetterMethodImpl(java.lang.Class, java.lang.String, java.lang.reflect.Method)"], ["void", "org.hibernate.property.access.spi.SetterMethodImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.spi.SetterMethodImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.spi.SetterMethodImpl.getMethod()"], ["org.hibernate.property.access.spi.EnhancedSetterImpl", "org.hibernate.property.access.spi.EnhancedSetterImpl(java.lang.Class, java.lang.String, java.lang.reflect.Field)"], ["void", "org.hibernate.property.access.spi.EnhancedSetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["org.hibernate.property.access.spi.SetterFieldImpl", "org.hibernate.property.access.spi.SetterFieldImpl(java.lang.Class, java.lang.String, java.lang.reflect.Field)"], ["void", "org.hibernate.property.access.spi.SetterFieldImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.spi.SetterFieldImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.spi.SetterFieldImpl.getMethod()"], ["org.hibernate.property.access.spi.PropertyAccessException", "org.hibernate.property.access.spi.PropertyAccessException(java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessException", "org.hibernate.property.access.spi.PropertyAccessException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.property.access.spi.EnhancedGetterMethodImpl", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl(java.lang.Class, java.lang.String, java.lang.reflect.Field, java.lang.reflect.Method)"], ["java.lang.Object", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.spi.EnhancedGetterMethodImpl.getMethod()"], ["org.hibernate.property.access.spi.PropertyAccessSerializationException", "org.hibernate.property.access.spi.PropertyAccessSerializationException(java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessSerializationException", "org.hibernate.property.access.spi.PropertyAccessSerializationException(java.lang.String, java.lang.Throwable)"], ["org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl(java.lang.String)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessMapImpl$GetterImpl.getMethod()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$1.toString()"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$1.readResolve()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyMixedImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyMixedImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyMixedImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["void", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$SetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$SetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$SetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl(org.hibernate.property.access.internal.PropertyAccessStrategyEmbeddedImpl, java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessEnhancedImpl", "org.hibernate.property.access.internal.PropertyAccessEnhancedImpl(org.hibernate.property.access.spi.PropertyAccessStrategy, java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$PropertyAccessIndexBackRefImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$PropertyAccessIndexBackRefImpl(org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$PropertyAccessIndexBackRefImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$PropertyAccessIndexBackRefImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$PropertyAccessIndexBackRefImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyBasicImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyBasicImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyBasicImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyChainedImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyChainedImpl(org.hibernate.property.access.spi.PropertyAccessStrategy...)"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyChainedImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessMixedImpl", "org.hibernate.property.access.internal.PropertyAccessMixedImpl(org.hibernate.property.access.spi.PropertyAccessStrategy, java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessMixedImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessMixedImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessMixedImpl.getSetter()"], ["void", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$SetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$SetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$SetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyFieldImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyFieldImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyFieldImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$GetterImpl.getMethod()"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$PropertyAccessNoopImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$PropertyAccessNoopImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl$PropertyAccessNoopImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl(org.hibernate.service.ServiceRegistry)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl.resolvePropertyAccessStrategy(java.lang.Class, java.lang.String, org.hibernate.EntityMode)"], ["org.hibernate.property.access.internal.PropertyAccessFieldImpl", "org.hibernate.property.access.internal.PropertyAccessFieldImpl(org.hibernate.property.access.internal.PropertyAccessStrategyFieldImpl, java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessFieldImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessFieldImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessFieldImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$GetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessBasicImpl", "org.hibernate.property.access.internal.PropertyAccessBasicImpl(org.hibernate.property.access.internal.PropertyAccessStrategyBasicImpl, java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessBasicImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessBasicImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessBasicImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessMapImpl", "org.hibernate.property.access.internal.PropertyAccessMapImpl(org.hibernate.property.access.internal.PropertyAccessStrategyMapImpl, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessMapImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessMapImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessMapImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyEmbeddedImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyEmbeddedImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyEmbeddedImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["void", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$SetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$SetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$SetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl(java.lang.Class)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$GetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyEnhancedImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyEnhancedImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyEnhancedImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$PropertyAccessBackRefImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$PropertyAccessBackRefImpl(org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl)"], ["org.hibernate.property.access.spi.PropertyAccessStrategy", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$PropertyAccessBackRefImpl.getPropertyAccessStrategy()"], ["org.hibernate.property.access.spi.Getter", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$PropertyAccessBackRefImpl.getGetter()"], ["org.hibernate.property.access.spi.Setter", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl$PropertyAccessBackRefImpl.getSetter()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyNoopImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.get(java.lang.Object)"], ["java.lang.Object", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.getForInsert(java.lang.Object, java.util.Map, org.hibernate.engine.spi.SharedSessionContractImplementor)"], ["java.lang.Class", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.getReturnType()"], ["java.lang.reflect.Member", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.getMember()"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl$GetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyMapImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyMapImpl()"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyMapImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl(java.lang.String, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyIndexBackRefImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessMapImpl$SetterImpl", "org.hibernate.property.access.internal.PropertyAccessMapImpl$SetterImpl(java.lang.String)"], ["void", "org.hibernate.property.access.internal.PropertyAccessMapImpl$SetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessMapImpl$SetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessMapImpl$SetterImpl.getMethod()"], ["org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl(java.lang.String, java.lang.String)"], ["org.hibernate.property.access.spi.PropertyAccess", "org.hibernate.property.access.internal.PropertyAccessStrategyBackRefImpl.buildPropertyAccess(java.lang.Class, java.lang.String)"], ["org.hibernate.property.access.internal.PropertyAccessStrategyResolverInitiator", "org.hibernate.property.access.internal.PropertyAccessStrategyResolverInitiator()"], ["org.hibernate.property.access.spi.PropertyAccessStrategyResolver", "org.hibernate.property.access.internal.PropertyAccessStrategyResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["org.hibernate.service.Service", "org.hibernate.property.access.internal.PropertyAccessStrategyResolverInitiator.initiateService(java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor)"], ["void", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$SetterImpl.set(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor)"], ["java.lang.String", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$SetterImpl.getMethodName()"], ["java.lang.reflect.Method", "org.hibernate.property.access.internal.PropertyAccessEmbeddedImpl$SetterImpl.getMethod()"]]}