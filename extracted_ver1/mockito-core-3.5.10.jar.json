{
    "mockito-core-3.5.10.jar": [
        [
            "org.mockito.AdditionalAnswers",
            "org.mockito.AdditionalAnswers()"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.returnsFirstArg()"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.returnsSecondArg()"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.returnsLastArg()"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.returnsArgAt(int)"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.delegatesTo(java.lang.Object)"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.returnsElementsOf(java.util.Collection<?>)"
        ],
        [
            "<T> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answersWithDelay(long, org.mockito.stubbing.Answer<T>)"
        ],
        [
            "<T, A> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer1<T, A>)"
        ],
        [
            "<A> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer1<A>)"
        ],
        [
            "<T, A, B> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer2<T, A, B>)"
        ],
        [
            "<A, B> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer2<A, B>)"
        ],
        [
            "<T, A, B, C> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer3<T, A, B, C>)"
        ],
        [
            "<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer3<A, B, C>)"
        ],
        [
            "<T, A, B, C, D> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"
        ],
        [
            "<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"
        ],
        [
            "<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"
        ],
        [
            "<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"
        ],
        [
            "<T, A, B, C, D, E, F> org.mockito.stubbing.Answer<T>",
            "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer6<T, A, B, C, D, E, F>)"
        ],
        [
            "<A, B, C, D, E, F> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer6<A, B, C, D, E, F>)"
        ],
        [
            "org.mockito.AdditionalMatchers",
            "org.mockito.AdditionalMatchers()"
        ],
        [
            "<T extends java.lang.Comparable<T>> T",
            "org.mockito.AdditionalMatchers.geq(T)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.geq(byte)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.geq(double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.geq(float)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.geq(int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.geq(long)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.geq(short)"
        ],
        [
            "<T extends java.lang.Comparable<T>> T",
            "org.mockito.AdditionalMatchers.leq(T)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.leq(byte)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.leq(double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.leq(float)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.leq(int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.leq(long)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.leq(short)"
        ],
        [
            "<T extends java.lang.Comparable<T>> T",
            "org.mockito.AdditionalMatchers.gt(T)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.gt(byte)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.gt(double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.gt(float)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.gt(int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.gt(long)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.gt(short)"
        ],
        [
            "<T extends java.lang.Comparable<T>> T",
            "org.mockito.AdditionalMatchers.lt(T)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.lt(byte)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.lt(double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.lt(float)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.lt(int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.lt(long)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.lt(short)"
        ],
        [
            "<T extends java.lang.Comparable<T>> T",
            "org.mockito.AdditionalMatchers.cmpEq(T)"
        ],
        [
            "java.lang.String",
            "org.mockito.AdditionalMatchers.find(java.lang.String)"
        ],
        [
            "<T> T[]",
            "org.mockito.AdditionalMatchers.aryEq(T[])"
        ],
        [
            "short[]",
            "org.mockito.AdditionalMatchers.aryEq(short[])"
        ],
        [
            "long[]",
            "org.mockito.AdditionalMatchers.aryEq(long[])"
        ],
        [
            "int[]",
            "org.mockito.AdditionalMatchers.aryEq(int[])"
        ],
        [
            "float[]",
            "org.mockito.AdditionalMatchers.aryEq(float[])"
        ],
        [
            "double[]",
            "org.mockito.AdditionalMatchers.aryEq(double[])"
        ],
        [
            "char[]",
            "org.mockito.AdditionalMatchers.aryEq(char[])"
        ],
        [
            "byte[]",
            "org.mockito.AdditionalMatchers.aryEq(byte[])"
        ],
        [
            "boolean[]",
            "org.mockito.AdditionalMatchers.aryEq(boolean[])"
        ],
        [
            "boolean",
            "org.mockito.AdditionalMatchers.and(boolean, boolean)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.and(byte, byte)"
        ],
        [
            "char",
            "org.mockito.AdditionalMatchers.and(char, char)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.and(double, double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.and(float, float)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.and(int, int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.and(long, long)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.and(short, short)"
        ],
        [
            "<T> T",
            "org.mockito.AdditionalMatchers.and(T, T)"
        ],
        [
            "boolean",
            "org.mockito.AdditionalMatchers.or(boolean, boolean)"
        ],
        [
            "<T> T",
            "org.mockito.AdditionalMatchers.or(T, T)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.or(short, short)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.or(long, long)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.or(int, int)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.or(float, float)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.or(double, double)"
        ],
        [
            "char",
            "org.mockito.AdditionalMatchers.or(char, char)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.or(byte, byte)"
        ],
        [
            "<T> T",
            "org.mockito.AdditionalMatchers.not(T)"
        ],
        [
            "short",
            "org.mockito.AdditionalMatchers.not(short)"
        ],
        [
            "int",
            "org.mockito.AdditionalMatchers.not(int)"
        ],
        [
            "long",
            "org.mockito.AdditionalMatchers.not(long)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.not(float)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.not(double)"
        ],
        [
            "char",
            "org.mockito.AdditionalMatchers.not(char)"
        ],
        [
            "boolean",
            "org.mockito.AdditionalMatchers.not(boolean)"
        ],
        [
            "byte",
            "org.mockito.AdditionalMatchers.not(byte)"
        ],
        [
            "double",
            "org.mockito.AdditionalMatchers.eq(double, double)"
        ],
        [
            "float",
            "org.mockito.AdditionalMatchers.eq(float, float)"
        ],
        [
            "org.mockito.Answers[]",
            "org.mockito.Answers.values()"
        ],
        [
            "org.mockito.Answers",
            "org.mockito.Answers.valueOf(java.lang.String)"
        ],
        [
            "java.lang.Object",
            "org.mockito.Answers.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.ArgumentCaptor.capture()"
        ],
        [
            "T",
            "org.mockito.ArgumentCaptor.getValue()"
        ],
        [
            "<U, S extends U> org.mockito.ArgumentCaptor<U>",
            "org.mockito.ArgumentCaptor.forClass(java.lang.Class<S>)"
        ],
        [
            "org.mockito.ArgumentMatchers",
            "org.mockito.ArgumentMatchers()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.any()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.anyObject()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.any(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.isA(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.anyVararg()"
        ],
        [
            "boolean",
            "org.mockito.ArgumentMatchers.anyBoolean()"
        ],
        [
            "byte",
            "org.mockito.ArgumentMatchers.anyByte()"
        ],
        [
            "char",
            "org.mockito.ArgumentMatchers.anyChar()"
        ],
        [
            "int",
            "org.mockito.ArgumentMatchers.anyInt()"
        ],
        [
            "long",
            "org.mockito.ArgumentMatchers.anyLong()"
        ],
        [
            "float",
            "org.mockito.ArgumentMatchers.anyFloat()"
        ],
        [
            "double",
            "org.mockito.ArgumentMatchers.anyDouble()"
        ],
        [
            "short",
            "org.mockito.ArgumentMatchers.anyShort()"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.anyString()"
        ],
        [
            "<T> java.util.List<T>",
            "org.mockito.ArgumentMatchers.anyList()"
        ],
        [
            "<T> java.util.List<T>",
            "org.mockito.ArgumentMatchers.anyListOf(java.lang.Class<T>)"
        ],
        [
            "<T> java.util.Set<T>",
            "org.mockito.ArgumentMatchers.anySet()"
        ],
        [
            "<T> java.util.Set<T>",
            "org.mockito.ArgumentMatchers.anySetOf(java.lang.Class<T>)"
        ],
        [
            "<K, V> java.util.Map<K, V>",
            "org.mockito.ArgumentMatchers.anyMap()"
        ],
        [
            "<K, V> java.util.Map<K, V>",
            "org.mockito.ArgumentMatchers.anyMapOf(java.lang.Class<K>, java.lang.Class<V>)"
        ],
        [
            "<T> java.util.Collection<T>",
            "org.mockito.ArgumentMatchers.anyCollection()"
        ],
        [
            "<T> java.util.Collection<T>",
            "org.mockito.ArgumentMatchers.anyCollectionOf(java.lang.Class<T>)"
        ],
        [
            "<T> java.lang.Iterable<T>",
            "org.mockito.ArgumentMatchers.anyIterable()"
        ],
        [
            "<T> java.lang.Iterable<T>",
            "org.mockito.ArgumentMatchers.anyIterableOf(java.lang.Class<T>)"
        ],
        [
            "boolean",
            "org.mockito.ArgumentMatchers.eq(boolean)"
        ],
        [
            "byte",
            "org.mockito.ArgumentMatchers.eq(byte)"
        ],
        [
            "char",
            "org.mockito.ArgumentMatchers.eq(char)"
        ],
        [
            "double",
            "org.mockito.ArgumentMatchers.eq(double)"
        ],
        [
            "float",
            "org.mockito.ArgumentMatchers.eq(float)"
        ],
        [
            "int",
            "org.mockito.ArgumentMatchers.eq(int)"
        ],
        [
            "long",
            "org.mockito.ArgumentMatchers.eq(long)"
        ],
        [
            "short",
            "org.mockito.ArgumentMatchers.eq(short)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.eq(T)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.refEq(T, java.lang.String...)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.same(T)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.isNull()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.isNull(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.notNull()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.notNull(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.isNotNull()"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.isNotNull(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.nullable(java.lang.Class<T>)"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.contains(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.matches(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.matches(java.util.regex.Pattern)"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.endsWith(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.ArgumentMatchers.startsWith(java.lang.String)"
        ],
        [
            "<T> T",
            "org.mockito.ArgumentMatchers.argThat(org.mockito.ArgumentMatcher<T>)"
        ],
        [
            "char",
            "org.mockito.ArgumentMatchers.charThat(org.mockito.ArgumentMatcher<java.lang.Character>)"
        ],
        [
            "boolean",
            "org.mockito.ArgumentMatchers.booleanThat(org.mockito.ArgumentMatcher<java.lang.Boolean>)"
        ],
        [
            "byte",
            "org.mockito.ArgumentMatchers.byteThat(org.mockito.ArgumentMatcher<java.lang.Byte>)"
        ],
        [
            "short",
            "org.mockito.ArgumentMatchers.shortThat(org.mockito.ArgumentMatcher<java.lang.Short>)"
        ],
        [
            "int",
            "org.mockito.ArgumentMatchers.intThat(org.mockito.ArgumentMatcher<java.lang.Integer>)"
        ],
        [
            "long",
            "org.mockito.ArgumentMatchers.longThat(org.mockito.ArgumentMatcher<java.lang.Long>)"
        ],
        [
            "float",
            "org.mockito.ArgumentMatchers.floatThat(org.mockito.ArgumentMatcher<java.lang.Float>)"
        ],
        [
            "double",
            "org.mockito.ArgumentMatchers.doubleThat(org.mockito.ArgumentMatcher<java.lang.Double>)"
        ],
        [
            "org.mockito.BDDMockito$BDDOngoingStubbingImpl",
            "org.mockito.BDDMockito$BDDOngoingStubbingImpl(org.mockito.stubbing.OngoingStubbing<T>)"
        ],
        [
            "<M> M",
            "org.mockito.BDDMockito$BDDOngoingStubbingImpl.getMock()"
        ],
        [
            "org.mockito.BDDMockito$BDDStubberImpl",
            "org.mockito.BDDMockito$BDDStubberImpl(org.mockito.stubbing.Stubber)"
        ],
        [
            "<T> T",
            "org.mockito.BDDMockito$BDDStubberImpl.given(T)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willAnswer(org.mockito.stubbing.Answer<?>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.will(org.mockito.stubbing.Answer<?>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willNothing()"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willDoNothing()"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object, java.lang.Object...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Throwable...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito$BDDStubberImpl.willCallRealMethod()"
        ],
        [
            "T",
            "org.mockito.BDDMockito$ThenImpl.should()"
        ],
        [
            "T",
            "org.mockito.BDDMockito$ThenImpl.should(org.mockito.verification.VerificationMode)"
        ],
        [
            "T",
            "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder)"
        ],
        [
            "T",
            "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder, org.mockito.verification.VerificationMode)"
        ],
        [
            "void",
            "org.mockito.BDDMockito$ThenImpl.shouldHaveZeroInteractions()"
        ],
        [
            "void",
            "org.mockito.BDDMockito$ThenImpl.shouldHaveNoMoreInteractions()"
        ],
        [
            "void",
            "org.mockito.BDDMockito$ThenImpl.shouldHaveNoInteractions()"
        ],
        [
            "org.mockito.BDDMockito",
            "org.mockito.BDDMockito()"
        ],
        [
            "<T> org.mockito.BDDMockito$BDDMyOngoingStubbing<T>",
            "org.mockito.BDDMockito.given(T)"
        ],
        [
            "<T> org.mockito.BDDMockito$Then<T>",
            "org.mockito.BDDMockito.then(T)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willThrow(java.lang.Throwable...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willAnswer(org.mockito.stubbing.Answer<?>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.will(org.mockito.stubbing.Answer<?>)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willDoNothing()"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willReturn(java.lang.Object)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willReturn(java.lang.Object, java.lang.Object...)"
        ],
        [
            "org.mockito.BDDMockito$BDDStubber",
            "org.mockito.BDDMockito.willCallRealMethod()"
        ],
        [
            "org.mockito.Matchers",
            "org.mockito.Matchers()"
        ],
        [
            "default",
            "org.mockito.MockedStatic.void verify(org.mockito.MockedStatic$Verification)"
        ],
        [
            "org.mockito.Mockito",
            "org.mockito.Mockito()"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.mock(java.lang.Class<T>)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.mock(java.lang.Class<T>, java.lang.String)"
        ],
        [
            "org.mockito.MockingDetails",
            "org.mockito.Mockito.mockingDetails(java.lang.Object)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.stubbing.Answer)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.MockSettings)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.spy(T)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.spy(java.lang.Class<T>)"
        ],
        [
            "<T> org.mockito.MockedStatic<T>",
            "org.mockito.Mockito.mockStatic(java.lang.Class<T>)"
        ],
        [
            "<T> org.mockito.MockedStatic<T>",
            "org.mockito.Mockito.mockStatic(java.lang.Class<T>, org.mockito.stubbing.Answer)"
        ],
        [
            "<T> org.mockito.MockedStatic<T>",
            "org.mockito.Mockito.mockStatic(java.lang.Class<T>, java.lang.String)"
        ],
        [
            "<T> org.mockito.MockedStatic<T>",
            "org.mockito.Mockito.mockStatic(java.lang.Class<T>, org.mockito.MockSettings)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstructionWithAnswer(java.lang.Class<T>, org.mockito.stubbing.Answer, org.mockito.stubbing.Answer...)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>, org.mockito.MockSettings)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.MockSettings>)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>, org.mockito.MockSettings, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.Mockito.mockConstruction(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.MockSettings>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "<T> org.mockito.stubbing.OngoingStubbing<T>",
            "org.mockito.Mockito.when(T)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.verify(T)"
        ],
        [
            "<T> T",
            "org.mockito.Mockito.verify(T, org.mockito.verification.VerificationMode)"
        ],
        [
            "<T> void",
            "org.mockito.Mockito.reset(T...)"
        ],
        [
            "<T> void",
            "org.mockito.Mockito.clearInvocations(T...)"
        ],
        [
            "void",
            "org.mockito.Mockito.verifyNoMoreInteractions(java.lang.Object...)"
        ],
        [
            "void",
            "org.mockito.Mockito.verifyZeroInteractions(java.lang.Object...)"
        ],
        [
            "void",
            "org.mockito.Mockito.verifyNoInteractions(java.lang.Object...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doThrow(java.lang.Throwable...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doCallRealMethod()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doNothing()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doReturn(java.lang.Object)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.Mockito.doReturn(java.lang.Object, java.lang.Object...)"
        ],
        [
            "org.mockito.InOrder",
            "org.mockito.Mockito.inOrder(java.lang.Object...)"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.Mockito.ignoreStubs(java.lang.Object...)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.times(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.never()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.atLeastOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.atLeast(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.atMostOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.atMost(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.calls(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.only()"
        ],
        [
            "org.mockito.verification.VerificationWithTimeout",
            "org.mockito.Mockito.timeout(long)"
        ],
        [
            "org.mockito.verification.VerificationAfterDelay",
            "org.mockito.Mockito.after(long)"
        ],
        [
            "void",
            "org.mockito.Mockito.validateMockitoUsage()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.Mockito.withSettings()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.Mockito.description(java.lang.String)"
        ],
        [
            "org.mockito.MockitoFramework",
            "org.mockito.Mockito.framework()"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.Mockito.mockitoSession()"
        ],
        [
            "org.mockito.stubbing.LenientStubber",
            "org.mockito.Mockito.lenient()"
        ],
        [
            "org.mockito.MockitoAnnotations",
            "org.mockito.MockitoAnnotations()"
        ],
        [
            "java.lang.AutoCloseable",
            "org.mockito.MockitoAnnotations.openMocks(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.MockitoAnnotations.initMocks(java.lang.Object)"
        ],
        [
            "org.mockito.configuration.DefaultMockitoConfiguration",
            "org.mockito.configuration.DefaultMockitoConfiguration()"
        ],
        [
            "org.mockito.configuration.AnnotationEngine",
            "org.mockito.configuration.DefaultMockitoConfiguration.getAnnotationEngine()"
        ],
        [
            "boolean",
            "org.mockito.configuration.DefaultMockitoConfiguration.cleansStackTrace()"
        ],
        [
            "boolean",
            "org.mockito.configuration.DefaultMockitoConfiguration.enableClassCache()"
        ],
        [
            "org.mockito.creation.instance.InstantiationException",
            "org.mockito.creation.instance.InstantiationException(java.lang.String)"
        ],
        [
            "org.mockito.creation.instance.InstantiationException",
            "org.mockito.creation.instance.InstantiationException(java.lang.String, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.exceptions.base.MockitoAssertionError(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.exceptions.base.MockitoAssertionError(org.mockito.exceptions.base.MockitoAssertionError, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.exceptions.base.MockitoAssertionError(java.lang.AssertionError, java.lang.String)"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.exceptions.base.MockitoAssertionError.getUnfilteredStackTrace()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.exceptions.base.MockitoException(java.lang.String, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.exceptions.base.MockitoException(java.lang.String)"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.exceptions.base.MockitoException.getUnfilteredStackTrace()"
        ],
        [
            "org.mockito.exceptions.base.MockitoInitializationException",
            "org.mockito.exceptions.base.MockitoInitializationException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoInitializationException",
            "org.mockito.exceptions.base.MockitoInitializationException(java.lang.String, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoSerializationIssue",
            "org.mockito.exceptions.base.MockitoSerializationIssue(java.lang.String, java.lang.Exception)"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.exceptions.base.MockitoSerializationIssue.getUnfilteredStackTrace()"
        ],
        [
            "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
            "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock",
            "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.FriendlyReminderException",
            "org.mockito.exceptions.misusing.FriendlyReminderException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.InjectMocksException",
            "org.mockito.exceptions.misusing.InjectMocksException(java.lang.String, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
            "org.mockito.exceptions.misusing.InvalidUseOfMatchersException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.InvalidUseOfMatchersException",
            "org.mockito.exceptions.misusing.InvalidUseOfMatchersException()"
        ],
        [
            "org.mockito.exceptions.misusing.MissingMethodInvocationException",
            "org.mockito.exceptions.misusing.MissingMethodInvocationException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.MockitoConfigurationException",
            "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.MockitoConfigurationException",
            "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String, java.lang.Exception)"
        ],
        [
            "org.mockito.exceptions.misusing.NotAMockException",
            "org.mockito.exceptions.misusing.NotAMockException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.NullInsteadOfMockException",
            "org.mockito.exceptions.misusing.NullInsteadOfMockException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.PotentialStubbingProblem",
            "org.mockito.exceptions.misusing.PotentialStubbingProblem(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.RedundantListenerException",
            "org.mockito.exceptions.misusing.RedundantListenerException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.UnfinishedMockingSessionException",
            "org.mockito.exceptions.misusing.UnfinishedMockingSessionException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.UnfinishedStubbingException",
            "org.mockito.exceptions.misusing.UnfinishedStubbingException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.UnfinishedVerificationException",
            "org.mockito.exceptions.misusing.UnfinishedVerificationException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
            "org.mockito.exceptions.misusing.UnnecessaryStubbingException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
            "org.mockito.exceptions.misusing.WrongTypeOfReturnValue(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.ArgumentsAreDifferent",
            "org.mockito.exceptions.verification.ArgumentsAreDifferent(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.ArgumentsAreDifferent",
            "org.mockito.exceptions.verification.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.ArgumentsAreDifferent.toString()"
        ],
        [
            "org.mockito.exceptions.verification.MoreThanAllowedActualInvocations",
            "org.mockito.exceptions.verification.MoreThanAllowedActualInvocations(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.NeverWantedButInvoked",
            "org.mockito.exceptions.verification.NeverWantedButInvoked(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.NoInteractionsWanted",
            "org.mockito.exceptions.verification.NoInteractionsWanted(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.SmartNullPointerException",
            "org.mockito.exceptions.verification.SmartNullPointerException(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.TooFewActualInvocations",
            "org.mockito.exceptions.verification.TooFewActualInvocations(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.TooLittleActualInvocations",
            "org.mockito.exceptions.verification.TooLittleActualInvocations(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.TooManyActualInvocations",
            "org.mockito.exceptions.verification.TooManyActualInvocations(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.VerificationInOrderFailure",
            "org.mockito.exceptions.verification.VerificationInOrderFailure(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.WantedButNotInvoked",
            "org.mockito.exceptions.verification.WantedButNotInvoked(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.WantedButNotInvoked.toString()"
        ],
        [
            "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
            "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getMessage()"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getUnfilteredStackTrace()"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.toString()"
        ],
        [
            "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent",
            "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent.getMessage()"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent.getUnfilteredStackTrace()"
        ],
        [
            "java.lang.String",
            "org.mockito.exceptions.verification.opentest4j.ArgumentsAreDifferent.toString()"
        ],
        [
            "org.mockito.hamcrest.MockitoHamcrest",
            "org.mockito.hamcrest.MockitoHamcrest()"
        ],
        [
            "<T> T",
            "org.mockito.hamcrest.MockitoHamcrest.argThat(org.hamcrest.Matcher<T>)"
        ],
        [
            "char",
            "org.mockito.hamcrest.MockitoHamcrest.charThat(org.hamcrest.Matcher<java.lang.Character>)"
        ],
        [
            "boolean",
            "org.mockito.hamcrest.MockitoHamcrest.booleanThat(org.hamcrest.Matcher<java.lang.Boolean>)"
        ],
        [
            "byte",
            "org.mockito.hamcrest.MockitoHamcrest.byteThat(org.hamcrest.Matcher<java.lang.Byte>)"
        ],
        [
            "short",
            "org.mockito.hamcrest.MockitoHamcrest.shortThat(org.hamcrest.Matcher<java.lang.Short>)"
        ],
        [
            "int",
            "org.mockito.hamcrest.MockitoHamcrest.intThat(org.hamcrest.Matcher<java.lang.Integer>)"
        ],
        [
            "long",
            "org.mockito.hamcrest.MockitoHamcrest.longThat(org.hamcrest.Matcher<java.lang.Long>)"
        ],
        [
            "float",
            "org.mockito.hamcrest.MockitoHamcrest.floatThat(org.hamcrest.Matcher<java.lang.Float>)"
        ],
        [
            "double",
            "org.mockito.hamcrest.MockitoHamcrest.doubleThat(org.hamcrest.Matcher<java.lang.Double>)"
        ],
        [
            "org.mockito.internal.InOrderImpl",
            "org.mockito.internal.InOrderImpl(java.util.List<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.InOrderImpl.verify(T)"
        ],
        [
            "<T> T",
            "org.mockito.internal.InOrderImpl.verify(T, org.mockito.verification.VerificationMode)"
        ],
        [
            "boolean",
            "org.mockito.internal.InOrderImpl.isVerified(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.InOrderImpl.markVerified(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.InOrderImpl.verifyNoMoreInteractions()"
        ],
        [
            "boolean",
            "org.mockito.internal.MockedConstructionImpl.isClosed()"
        ],
        [
            "void",
            "org.mockito.internal.MockedConstructionImpl.close()"
        ],
        [
            "void",
            "org.mockito.internal.MockedConstructionImpl.closeOnDemand()"
        ],
        [
            "<S> org.mockito.stubbing.OngoingStubbing<S>",
            "org.mockito.internal.MockedStaticImpl.when(org.mockito.MockedStatic$Verification)"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.verify(org.mockito.verification.VerificationMode, org.mockito.MockedStatic$Verification)"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.reset()"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.clearInvocations()"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.verifyNoMoreInteractions()"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.verifyNoInteractions()"
        ],
        [
            "boolean",
            "org.mockito.internal.MockedStaticImpl.isClosed()"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.close()"
        ],
        [
            "void",
            "org.mockito.internal.MockedStaticImpl.closeOnDemand()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.MockedStaticImpl.toString()"
        ],
        [
            "org.mockito.internal.MockitoCore",
            "org.mockito.internal.MockitoCore()"
        ],
        [
            "boolean",
            "org.mockito.internal.MockitoCore.isTypeMockable(java.lang.Class<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.MockitoCore.mock(java.lang.Class<T>, org.mockito.MockSettings)"
        ],
        [
            "<T> org.mockito.MockedStatic<T>",
            "org.mockito.internal.MockitoCore.mockStatic(java.lang.Class<T>, org.mockito.MockSettings)"
        ],
        [
            "<T> org.mockito.MockedConstruction<T>",
            "org.mockito.internal.MockitoCore.mockConstruction(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, ? extends org.mockito.MockSettings>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "<T> org.mockito.stubbing.OngoingStubbing<T>",
            "org.mockito.internal.MockitoCore.when(T)"
        ],
        [
            "<T> T",
            "org.mockito.internal.MockitoCore.verify(T, org.mockito.verification.VerificationMode)"
        ],
        [
            "<T> void",
            "org.mockito.internal.MockitoCore.reset(T...)"
        ],
        [
            "<T> void",
            "org.mockito.internal.MockitoCore.clearInvocations(T...)"
        ],
        [
            "void",
            "org.mockito.internal.MockitoCore.verifyNoMoreInteractions(java.lang.Object...)"
        ],
        [
            "void",
            "org.mockito.internal.MockitoCore.verifyNoInteractions(java.lang.Object...)"
        ],
        [
            "void",
            "org.mockito.internal.MockitoCore.verifyNoMoreInteractionsInOrder(java.util.List<java.lang.Object>, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "org.mockito.InOrder",
            "org.mockito.internal.MockitoCore.inOrder(java.lang.Object...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.MockitoCore.stubber()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.MockitoCore.stubber(org.mockito.quality.Strictness)"
        ],
        [
            "void",
            "org.mockito.internal.MockitoCore.validateMockitoUsage()"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.MockitoCore.getLastInvocation()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.MockitoCore.ignoreStubs(java.lang.Object...)"
        ],
        [
            "org.mockito.MockingDetails",
            "org.mockito.internal.MockitoCore.mockingDetails(java.lang.Object)"
        ],
        [
            "org.mockito.stubbing.LenientStubber",
            "org.mockito.internal.MockitoCore.lenient()"
        ],
        [
            "org.mockito.internal.configuration.CaptorAnnotationProcessor",
            "org.mockito.internal.configuration.CaptorAnnotationProcessor()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(org.mockito.Captor, java.lang.reflect.Field)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)"
        ],
        [
            "org.mockito.internal.configuration.ClassPathLoader",
            "org.mockito.internal.configuration.ClassPathLoader()"
        ],
        [
            "org.mockito.configuration.IMockitoConfiguration",
            "org.mockito.internal.configuration.ClassPathLoader.loadConfiguration()"
        ],
        [
            "org.mockito.internal.configuration.DefaultInjectionEngine",
            "org.mockito.internal.configuration.DefaultInjectionEngine()"
        ],
        [
            "void",
            "org.mockito.internal.configuration.DefaultInjectionEngine.injectMocksOnFields(java.util.Set<java.lang.reflect.Field>, java.util.Set<java.lang.Object>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.GlobalConfiguration",
            "org.mockito.internal.configuration.GlobalConfiguration()"
        ],
        [
            "void",
            "org.mockito.internal.configuration.GlobalConfiguration.validate()"
        ],
        [
            "org.mockito.configuration.AnnotationEngine",
            "org.mockito.internal.configuration.GlobalConfiguration.getAnnotationEngine()"
        ],
        [
            "org.mockito.plugins.AnnotationEngine",
            "org.mockito.internal.configuration.GlobalConfiguration.tryGetPluginAnnotationEngine()"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.GlobalConfiguration.cleansStackTrace()"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.GlobalConfiguration.enableClassCache()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.IndependentAnnotationEngine$1.process(A, java.lang.reflect.Field)"
        ],
        [
            "org.mockito.internal.configuration.IndependentAnnotationEngine",
            "org.mockito.internal.configuration.IndependentAnnotationEngine()"
        ],
        [
            "java.lang.AutoCloseable",
            "org.mockito.internal.configuration.IndependentAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.InjectingAnnotationEngine",
            "org.mockito.internal.configuration.InjectingAnnotationEngine()"
        ],
        [
            "java.lang.AutoCloseable",
            "org.mockito.internal.configuration.InjectingAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.configuration.InjectingAnnotationEngine.injectMocks(java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.MockAnnotationProcessor",
            "org.mockito.internal.configuration.MockAnnotationProcessor()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.MockAnnotationProcessor.process(org.mockito.Mock, java.lang.reflect.Field)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(org.mockito.Mock, java.lang.Class<?>, org.mockito.internal.util.Supplier<java.lang.reflect.Type>, java.lang.String)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.MockAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)"
        ],
        [
            "org.mockito.internal.configuration.SpyAnnotationEngine",
            "org.mockito.internal.configuration.SpyAnnotationEngine()"
        ],
        [
            "java.lang.AutoCloseable",
            "org.mockito.internal.configuration.SpyAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver",
            "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver(java.util.Set<java.lang.Object>)"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver.resolveTypeInstances(java.lang.Class<?>...)"
        ],
        [
            "org.mockito.internal.configuration.injection.ConstructorInjection",
            "org.mockito.internal.configuration.injection.ConstructorInjection()"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.injection.ConstructorInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.withMocks(java.util.Set<java.lang.Object>)"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryConstructorInjection()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryPropertyOrFieldInjection()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.handleSpyAnnotation()"
        ],
        [
            "void",
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.apply()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection",
            "org.mockito.internal.configuration.injection.MockInjection()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection.onField(java.lang.reflect.Field, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection",
            "org.mockito.internal.configuration.injection.MockInjection.onFields(java.util.Set<java.lang.reflect.Field>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjectionStrategy",
            "org.mockito.internal.configuration.injection.MockInjectionStrategy()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjectionStrategy",
            "org.mockito.internal.configuration.injection.MockInjectionStrategy.nop()"
        ],
        [
            "org.mockito.internal.configuration.injection.MockInjectionStrategy",
            "org.mockito.internal.configuration.injection.MockInjectionStrategy.thenTry(org.mockito.internal.configuration.injection.MockInjectionStrategy)"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.injection.MockInjectionStrategy.process(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.reflect.Field)"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.PropertyAndSetterInjection",
            "org.mockito.internal.configuration.injection.PropertyAndSetterInjection()"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.injection.PropertyAndSetterInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"
        ],
        [
            "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler",
            "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler()"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter",
            "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.OngoingInjector",
            "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.injection.filter.OngoingInjector$1.thenInject()"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter",
            "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter()"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.OngoingInjector",
            "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter",
            "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"
        ],
        [
            "org.mockito.internal.configuration.injection.filter.OngoingInjector",
            "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner",
            "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner.addTo(java.util.Set<java.lang.reflect.Field>)"
        ],
        [
            "org.mockito.internal.configuration.injection.scanner.MockScanner",
            "org.mockito.internal.configuration.injection.scanner.MockScanner(java.lang.Object, java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.configuration.injection.scanner.MockScanner.addPreparedMocks(java.util.Set<java.lang.Object>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins.getDefaultPlugin(java.lang.Class<T>)"
        ],
        [
            "org.mockito.plugins.MockMaker",
            "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins.getInlineMockMaker()"
        ],
        [
            "boolean",
            "org.mockito.internal.configuration.plugins.DefaultPluginSwitch.isEnabled(java.lang.String)"
        ],
        [
            "org.mockito.internal.configuration.plugins.PluginFinder",
            "org.mockito.internal.configuration.plugins.PluginFinder(org.mockito.plugins.PluginSwitch)"
        ],
        [
            "<T> T",
            "org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(java.lang.Class<T>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"
        ],
        [
            "org.mockito.internal.configuration.plugins.Plugins",
            "org.mockito.internal.configuration.plugins.Plugins()"
        ],
        [
            "org.mockito.plugins.StackTraceCleanerProvider",
            "org.mockito.internal.configuration.plugins.Plugins.getStackTraceCleanerProvider()"
        ],
        [
            "org.mockito.plugins.MockMaker",
            "org.mockito.internal.configuration.plugins.Plugins.getMockMaker()"
        ],
        [
            "org.mockito.plugins.MemberAccessor",
            "org.mockito.internal.configuration.plugins.Plugins.getMemberAccessor()"
        ],
        [
            "org.mockito.plugins.InstantiatorProvider2",
            "org.mockito.internal.configuration.plugins.Plugins.getInstantiatorProvider()"
        ],
        [
            "org.mockito.plugins.AnnotationEngine",
            "org.mockito.internal.configuration.plugins.Plugins.getAnnotationEngine()"
        ],
        [
            "org.mockito.plugins.MockitoLogger",
            "org.mockito.internal.configuration.plugins.Plugins.getMockitoLogger()"
        ],
        [
            "org.mockito.plugins.MockitoPlugins",
            "org.mockito.internal.configuration.plugins.Plugins.getPlugins()"
        ],
        [
            "org.mockito.internal.creation.DelegatingMethod",
            "org.mockito.internal.creation.DelegatingMethod(java.lang.reflect.Method)"
        ],
        [
            "java.lang.reflect.Method",
            "org.mockito.internal.creation.DelegatingMethod.getJavaMethod()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.creation.DelegatingMethod.getName()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.DelegatingMethod.isVarArgs()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.DelegatingMethod.isAbstract()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.DelegatingMethod.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.creation.DelegatingMethod.hashCode()"
        ],
        [
            "org.mockito.internal.creation.MockSettingsImpl",
            "org.mockito.internal.creation.MockSettingsImpl()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.serializable()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.serializable(org.mockito.mock.SerializableMode)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.extraInterfaces(java.lang.Class<?>...)"
        ],
        [
            "org.mockito.mock.MockName",
            "org.mockito.internal.creation.MockSettingsImpl.getMockName()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.MockSettingsImpl.getSpiedInstance()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.name(java.lang.String)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.spiedInstance(java.lang.Object)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.defaultAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.useConstructor(java.lang.Object...)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.outerInstance(java.lang.Object)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.withoutAnnotations()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.MockSettingsImpl.isUsingConstructor()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.MockSettingsImpl.getOuterClassInstance()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.creation.MockSettingsImpl.getConstructorArgs()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.MockSettingsImpl.isStubOnly()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.verboseLogging()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.invocationListeners(org.mockito.listeners.InvocationListener...)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.stubbingLookupListeners(org.mockito.listeners.StubbingLookupListener...)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.verificationStartedListeners(org.mockito.listeners.VerificationStartedListener...)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.MockSettingsImpl.hasInvocationListeners()"
        ],
        [
            "<T> org.mockito.mock.MockCreationSettings<T>",
            "org.mockito.internal.creation.MockSettingsImpl.build(java.lang.Class<T>)"
        ],
        [
            "<T> org.mockito.mock.MockCreationSettings<T>",
            "org.mockito.internal.creation.MockSettingsImpl.buildStatic(java.lang.Class<T>)"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.lenient()"
        ],
        [
            "org.mockito.MockSettings",
            "org.mockito.internal.creation.MockSettingsImpl.stubOnly()"
        ],
        [
            "org.mockito.internal.creation.SuspendMethod",
            "org.mockito.internal.creation.SuspendMethod()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy(java.lang.Object)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream(java.io.InputStream, java.lang.Class<?>, java.util.Set<java.lang.Class<?>>)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream(java.io.ByteArrayOutputStream)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport.writeReplace(java.lang.Object)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker()"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> java.util.Optional<T>",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createSpy(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler, T)"
        ],
        [
            "<T> java.lang.Class<? extends T>",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "org.mockito.invocation.MockHandler",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.getHandler(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.plugins.MockMaker$TypeMockability",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$StaticMockControl<T>",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createStaticMock(java.lang.Class<T>, org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$ConstructionMockControl<T>",
            "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createConstructionMock(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.mock.MockCreationSettings<T>>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.invocation.MockHandler<T>>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.mockable()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.nonMockableReason()"
        ],
        [
            "int",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$InlineConstructionMockContext.getCount()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$InlineConstructionMockControl.enable()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$InlineConstructionMockControl.disable()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$InlineStaticMockControl.enable()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$InlineStaticMockControl.disable()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker()"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> java.util.Optional<T>",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createSpy(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler, T)"
        ],
        [
            "<T> java.lang.Class<? extends T>",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "org.mockito.invocation.MockHandler",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.getHandler(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.clearMock(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.clearAllMocks()"
        ],
        [
            "org.mockito.plugins.MockMaker$TypeMockability",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$StaticMockControl<T>",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createStaticMock(java.lang.Class<T>, org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$ConstructionMockControl<T>",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createConstructionMock(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.mock.MockCreationSettings<T>>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.invocation.MockHandler<T>>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.newInstance(java.lang.Class<T>)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$MethodParameterStrippingMethodVisitor",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$MethodParameterStrippingMethodVisitor(net.bytebuddy.jar.asm.MethodVisitor)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$MethodParameterStrippingMethodVisitor.visitParameter(java.lang.String, int)"
        ],
        [
            "net.bytebuddy.jar.asm.MethodVisitor",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$ParameterAddingClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"
        ],
        [
            "net.bytebuddy.jar.asm.ClassVisitor",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.jar.asm.ClassVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, net.bytebuddy.description.field.FieldList<net.bytebuddy.description.field.FieldDescription$InDefinedShape>, net.bytebuddy.description.method.MethodList<?>, int, int)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator(java.lang.instrument.Instrumentation, org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>, org.mockito.internal.util.concurrent.DetachedThreadLocal<java.util.Map<java.lang.Class<?>, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>>, java.util.function.Predicate<java.lang.Class<?>>, org.mockito.internal.creation.bytebuddy.ConstructionCallback)"
        ],
        [
            "<T> java.lang.Class<? extends T>",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"
        ],
        [
            "synchronized",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.void mockClassStatic(java.lang.Class<?>)"
        ],
        [
            "synchronized",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.void mockClassConstruction(java.lang.Class<?>)"
        ],
        [
            "byte[]",
            "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(java.lang.ClassLoader, java.lang.String, java.lang.Class<?>, java.security.ProtectionDomain, byte[])"
        ],
        [
            "<T> org.mockito.internal.creation.bytebuddy.MockFeatures<T>",
            "org.mockito.internal.creation.bytebuddy.MockFeatures.withMockFeatures(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>, org.mockito.mock.SerializableMode, boolean)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ConstructorShortcut$1.visitCode()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ConstructorShortcut$1.visitMaxs(int, int)"
        ],
        [
            "net.bytebuddy.jar.asm.MethodVisitor",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ConstructorShortcut.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.description.method.MethodDescription, net.bytebuddy.jar.asm.MethodVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject()"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject.doReadObject(java.lang.String, org.mockito.internal.creation.bytebuddy.MockAccess, java.io.ObjectInputStream)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$RealMethodCall.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$RealMethodCall.invoke()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ReturnValueWrapper.call()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableRealMethodCall.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableRealMethodCall.invoke()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$StaticMethodCall.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$StaticMethodCall.invoke()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice(org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>, org.mockito.internal.util.concurrent.DetachedThreadLocal<java.util.Map<java.lang.Class<?>, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>>, java.lang.String, java.util.function.Predicate<java.lang.Class<?>>, org.mockito.internal.creation.bytebuddy.ConstructionCallback)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handleConstruction(java.lang.Class<?>, java.lang.Object, java.lang.Object[], java.lang.String[])"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMock(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMocked(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMockedStatic(java.lang.Class<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isOverridden(java.lang.Object, java.lang.reflect.Method)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isConstructorMock(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.reflect.Method, java.lang.Object[], java.util.concurrent.Callable<?>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals.doIdentityEquals(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode()"
        ],
        [
            "int",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode.doIdentityHashCode(java.lang.Object)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace.doWriteReplace(org.mockito.internal.creation.bytebuddy.MockAccess)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor(org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.invocation.MockHandler",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getMockHandler()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport",
            "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getSerializationSupport()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.mockable()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.nonMockableReason()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker(org.mockito.internal.creation.bytebuddy.SubclassLoader)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> java.lang.Class<? extends T>",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "org.mockito.invocation.MockHandler",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.getHandler(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.plugins.MockMaker$TypeMockability",
            "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator(org.mockito.internal.creation.bytebuddy.SubclassLoader)"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator(net.bytebuddy.implementation.Implementation, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)"
        ],
        [
            "<T> java.lang.Class<? extends T>",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClassStatic(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClassConstruction(java.lang.Class<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader$WithLookup.isDisrespectingOpenness()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader$WithReflection.isDisrespectingOpenness()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.SubclassInjectionLoader.isDisrespectingOpenness()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$MockitoMockKey.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$MockitoMockKey.hashCode()"
        ],
        [
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator(org.mockito.internal.creation.bytebuddy.BytecodeGenerator, boolean)"
        ],
        [
            "<T> java.lang.Class<T>",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClassStatic(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClassConstruction(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.creation.instance.ConstructorInstantiator",
            "org.mockito.internal.creation.instance.ConstructorInstantiator(boolean, java.lang.Object...)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.instance.ConstructorInstantiator.newInstance(java.lang.Class<T>)"
        ],
        [
            "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
            "org.mockito.internal.creation.instance.DefaultInstantiatorProvider()"
        ],
        [
            "org.mockito.creation.instance.Instantiator",
            "org.mockito.internal.creation.instance.DefaultInstantiatorProvider.getInstantiator(org.mockito.mock.MockCreationSettings<?>)"
        ],
        [
            "org.mockito.internal.creation.instance.InstantiationException",
            "org.mockito.internal.creation.instance.InstantiationException(java.lang.String, java.lang.Throwable)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter$1.newInstance(java.lang.Class<T>)"
        ],
        [
            "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter",
            "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter(org.mockito.plugins.InstantiatorProvider2)"
        ],
        [
            "org.mockito.internal.creation.instance.Instantiator",
            "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter.getInstantiator(org.mockito.mock.MockCreationSettings<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.instance.InstantiatorProviderAdapter$1.newInstance(java.lang.Class<T>)"
        ],
        [
            "org.mockito.internal.creation.instance.InstantiatorProviderAdapter",
            "org.mockito.internal.creation.instance.InstantiatorProviderAdapter(org.mockito.plugins.InstantiatorProvider)"
        ],
        [
            "org.mockito.creation.instance.Instantiator",
            "org.mockito.internal.creation.instance.InstantiatorProviderAdapter.getInstantiator(org.mockito.mock.MockCreationSettings<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(java.lang.Class<T>)"
        ],
        [
            "org.mockito.internal.creation.settings.CreationSettings",
            "org.mockito.internal.creation.settings.CreationSettings()"
        ],
        [
            "org.mockito.internal.creation.settings.CreationSettings",
            "org.mockito.internal.creation.settings.CreationSettings(org.mockito.internal.creation.settings.CreationSettings)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.creation.settings.CreationSettings.getName()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.settings.CreationSettings.getSpiedInstance()"
        ],
        [
            "org.mockito.mock.MockName",
            "org.mockito.internal.creation.settings.CreationSettings.getMockName()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.settings.CreationSettings.isSerializable()"
        ],
        [
            "org.mockito.mock.SerializableMode",
            "org.mockito.internal.creation.settings.CreationSettings.getSerializableMode()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.settings.CreationSettings.isUsingConstructor()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.settings.CreationSettings.isStripAnnotations()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.creation.settings.CreationSettings.getConstructorArgs()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.creation.settings.CreationSettings.getOuterClassInstance()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.settings.CreationSettings.isStubOnly()"
        ],
        [
            "boolean",
            "org.mockito.internal.creation.settings.CreationSettings.isLenient()"
        ],
        [
            "boolean",
            "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(org.mockito.stubbing.Stubbing)"
        ],
        [
            "boolean",
            "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.debugging.InvocationsPrinter",
            "org.mockito.internal.debugging.InvocationsPrinter()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.InvocationsPrinter.printInvocations(java.lang.Object)"
        ],
        [
            "org.mockito.internal.debugging.Localized",
            "org.mockito.internal.debugging.Localized(T)"
        ],
        [
            "T",
            "org.mockito.internal.debugging.Localized.getObject()"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.debugging.Localized.getLocation()"
        ],
        [
            "org.mockito.internal.debugging.LocationImpl",
            "org.mockito.internal.debugging.LocationImpl()"
        ],
        [
            "org.mockito.internal.debugging.LocationImpl",
            "org.mockito.internal.debugging.LocationImpl(java.lang.Throwable, boolean)"
        ],
        [
            "org.mockito.internal.debugging.LocationImpl",
            "org.mockito.internal.debugging.LocationImpl(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.LocationImpl.toString()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.LocationImpl.getSourceFile()"
        ],
        [
            "org.mockito.internal.debugging.LoggingListener",
            "org.mockito.internal.debugging.LoggingListener(boolean)"
        ],
        [
            "void",
            "org.mockito.internal.debugging.LoggingListener.foundStubCalledWithDifferentArgs(org.mockito.invocation.Invocation, org.mockito.internal.invocation.InvocationMatcher)"
        ],
        [
            "void",
            "org.mockito.internal.debugging.LoggingListener.foundUnusedStub(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.debugging.LoggingListener.foundUnstubbed(org.mockito.internal.invocation.InvocationMatcher)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.LoggingListener.getStubbingInfo()"
        ],
        [
            "org.mockito.internal.debugging.MockitoDebuggerImpl",
            "org.mockito.internal.debugging.MockitoDebuggerImpl()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.MockitoDebuggerImpl.printInvocations(java.lang.Object...)"
        ],
        [
            "org.mockito.internal.debugging.VerboseMockInvocationLogger",
            "org.mockito.internal.debugging.VerboseMockInvocationLogger()"
        ],
        [
            "org.mockito.internal.debugging.VerboseMockInvocationLogger",
            "org.mockito.internal.debugging.VerboseMockInvocationLogger(java.io.PrintStream)"
        ],
        [
            "void",
            "org.mockito.internal.debugging.VerboseMockInvocationLogger.reportInvocation(org.mockito.listeners.MethodInvocationReport)"
        ],
        [
            "org.mockito.internal.debugging.WarningsCollector",
            "org.mockito.internal.debugging.WarningsCollector()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.WarningsCollector.getWarnings()"
        ],
        [
            "org.mockito.internal.debugging.WarningsFinder",
            "org.mockito.internal.debugging.WarningsFinder(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>)"
        ],
        [
            "void",
            "org.mockito.internal.debugging.WarningsFinder.find(org.mockito.internal.debugging.FindingsListener)"
        ],
        [
            "org.mockito.internal.debugging.WarningsPrinterImpl",
            "org.mockito.internal.debugging.WarningsPrinterImpl(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>, boolean)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.debugging.WarningsPrinterImpl.print()"
        ],
        [
            "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings",
            "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings(java.lang.String, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.checkedExceptionInvalid(java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotStubWithNullThrowable()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.unfinishedStubbing(org.mockito.invocation.Location)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.incorrectUseOfApi()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.missingMethodInvocation()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.unfinishedVerificationException(org.mockito.invocation.Location)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerify(java.lang.Class<?>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.nullPassedToVerify()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.notAMockPassedToWhenMethod()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.nullPassedToWhenMethod()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedToVerifyNoMoreInteractions()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerifyNoMoreInteractions()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.nullPassedToVerifyNoMoreInteractions()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.notAMockPassedWhenCreatingInOrder()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.nullPassedWhenCreatingInOrder()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedWhenCreatingInOrder()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.inOrderRequiresFamiliarMock()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.invalidUseOfMatchers(int, java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.incorrectUseOfAdditionalMatchers(java.lang.String, int, java.util.Collection<org.mockito.internal.matchers.LocalizedMatcher>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.stubPassedToVerify(java.lang.Object)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.reportNoSubMatchersFound(java.lang.String)"
        ],
        [
            "java.lang.AssertionError",
            "org.mockito.internal.exceptions.Reporter.argumentsAreDifferent(java.lang.String, java.util.List<java.lang.String>, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation, java.util.List<? extends org.mockito.invocation.DescribedInvocation>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.wantedButNotInvokedInOrder(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.DescribedInvocation)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.tooManyActualInvocations(int, int, org.mockito.invocation.DescribedInvocation, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.neverWantedButInvoked(org.mockito.invocation.DescribedInvocation, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.tooManyActualInvocationsInOrder(int, int, org.mockito.invocation.DescribedInvocation, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.tooFewActualInvocations(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.tooFewActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, java.util.List<org.mockito.invocation.Location>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWanted(org.mockito.invocation.Invocation, java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWantedInOrder(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.exceptions.base.MockitoAssertionError",
            "org.mockito.internal.exceptions.Reporter.noInteractionsWanted(java.lang.Object, java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotMockClass(java.lang.Class<?>, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotStubVoidMethodWithAReturnValue(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.onlyVoidMethodsCanBeSetToDoNothing()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.wrongTypeOfReturnValue(java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.wrongTypeReturnedByDefaultAnswer(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.verification.MoreThanAllowedActualInvocations",
            "org.mockito.internal.exceptions.Reporter.wantedAtMostX(int, int)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.misplacedArgumentMatcher(java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.smartNullPointerException(java.lang.String, org.mockito.invocation.Location)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.noArgumentValueWasCaptured()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.extraInterfacesDoesNotAcceptNullParameters()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.extraInterfacesAcceptsOnlyInterfaces(java.lang.Class<?>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.extraInterfacesCannotContainMockedType(java.lang.Class<?>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.extraInterfacesRequiresAtLeastOneInterface()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithSpiedInstanceType(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotCallAbstractRealMethod()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotVerifyToString()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.moreThanOneAnnotationNotAllowed(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.unsupportedCombinationOfAnnotations(java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotInitializeForSpyAnnotation(java.lang.String, java.lang.Exception)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotInitializeForInjectMocksAnnotation(java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.atMostAndNeverShouldNotBeUsedWithTimeout()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.fieldInitialisationThrewException(java.lang.reflect.Field, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.methodDoesNotAcceptParameter(java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.requiresAtLeastOneListener(java.lang.String)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.invocationListenerThrewException(org.mockito.listeners.InvocationListener, java.lang.Throwable)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotInjectDependency(java.lang.reflect.Field, java.lang.Object, java.lang.Exception)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithDelegatedInstanceType(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.spyAndDelegateAreMutuallyExclusive()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.invalidArgumentRangeAtIdentityAnswerCreationTime()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.invalidArgumentPositionRangeAtInvocationTime(org.mockito.invocation.InvocationOnMock, boolean, int)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.wrongTypeOfArgumentToReturn(org.mockito.invocation.InvocationOnMock, java.lang.String, java.lang.Class<?>, int)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.defaultAnswerDoesNotAcceptNullParameter()"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.serializableWontWorkForObjectsThatDontImplementSerializable(java.lang.Class<?>)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.delegatedMethodHasWrongReturnType(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.delegatedMethodDoesNotExistOnDelegate(java.lang.reflect.Method, java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.usingConstructorWithFancySerializable(org.mockito.mock.SerializableMode)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.cannotCreateTimerWithNegativeDurationTime(long)"
        ],
        [
            "org.mockito.exceptions.base.MockitoException",
            "org.mockito.internal.exceptions.Reporter.notAnException()"
        ],
        [
            "org.mockito.exceptions.misusing.UnnecessaryStubbingException",
            "org.mockito.internal.exceptions.Reporter.formatUnncessaryStubbingException(java.lang.Class<?>, java.util.Collection<org.mockito.invocation.Invocation>)"
        ],
        [
            "void",
            "org.mockito.internal.exceptions.Reporter.unncessaryStubbingException(java.util.List<org.mockito.invocation.Invocation>)"
        ],
        [
            "void",
            "org.mockito.internal.exceptions.Reporter.potentialStubbingProblem(org.mockito.invocation.Invocation, java.util.Collection<org.mockito.invocation.Invocation>)"
        ],
        [
            "void",
            "org.mockito.internal.exceptions.Reporter.redundantMockitoListener(java.lang.String)"
        ],
        [
            "void",
            "org.mockito.internal.exceptions.Reporter.unfinishedMockingSession()"
        ],
        [
            "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
            "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter()"
        ],
        [
            "void",
            "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.filter(java.lang.Throwable)"
        ],
        [
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner()"
        ],
        [
            "boolean",
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner.isIn(java.lang.StackTraceElement)"
        ],
        [
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider()"
        ],
        [
            "org.mockito.exceptions.stacktrace.StackTraceCleaner",
            "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider.getStackTraceCleaner(org.mockito.exceptions.stacktrace.StackTraceCleaner)"
        ],
        [
            "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
            "org.mockito.internal.exceptions.stacktrace.StackTraceFilter()"
        ],
        [
            "java.lang.StackTraceElement[]",
            "org.mockito.internal.exceptions.stacktrace.StackTraceFilter.filter(java.lang.StackTraceElement[], boolean)"
        ],
        [
            "java.lang.StackTraceElement",
            "org.mockito.internal.exceptions.stacktrace.StackTraceFilter.filterFirst(java.lang.Throwable, boolean)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.exceptions.stacktrace.StackTraceFilter.findSourceFile(java.lang.StackTraceElement[], java.lang.String)"
        ],
        [
            "org.mockito.internal.exceptions.util.ScenarioPrinter",
            "org.mockito.internal.exceptions.util.ScenarioPrinter()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.exceptions.util.ScenarioPrinter.print(java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"
        ],
        [
            "org.mockito.internal.framework.DefaultMockitoFramework",
            "org.mockito.internal.framework.DefaultMockitoFramework()"
        ],
        [
            "org.mockito.MockitoFramework",
            "org.mockito.internal.framework.DefaultMockitoFramework.addListener(org.mockito.listeners.MockitoListener)"
        ],
        [
            "org.mockito.MockitoFramework",
            "org.mockito.internal.framework.DefaultMockitoFramework.removeListener(org.mockito.listeners.MockitoListener)"
        ],
        [
            "org.mockito.plugins.MockitoPlugins",
            "org.mockito.internal.framework.DefaultMockitoFramework.getPlugins()"
        ],
        [
            "org.mockito.invocation.InvocationFactory",
            "org.mockito.internal.framework.DefaultMockitoFramework.getInvocationFactory()"
        ],
        [
            "void",
            "org.mockito.internal.framework.DefaultMockitoFramework.clearInlineMocks()"
        ],
        [
            "void",
            "org.mockito.internal.framework.DefaultMockitoFramework.clearInlineMock(java.lang.Object)"
        ],
        [
            "java.lang.Throwable",
            "org.mockito.internal.framework.DefaultMockitoSession$1.getFailure()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.framework.DefaultMockitoSession$1.getTestName()"
        ],
        [
            "org.mockito.internal.framework.DefaultMockitoSession",
            "org.mockito.internal.framework.DefaultMockitoSession(java.util.List<java.lang.Object>, java.lang.String, org.mockito.quality.Strictness, org.mockito.plugins.MockitoLogger)"
        ],
        [
            "void",
            "org.mockito.internal.framework.DefaultMockitoSession.setStrictness(org.mockito.quality.Strictness)"
        ],
        [
            "void",
            "org.mockito.internal.framework.DefaultMockitoSession.finishMocking()"
        ],
        [
            "void",
            "org.mockito.internal.framework.DefaultMockitoSession.finishMocking(java.lang.Throwable)"
        ],
        [
            "org.mockito.internal.hamcrest.HamcrestArgumentMatcher",
            "org.mockito.internal.hamcrest.HamcrestArgumentMatcher(org.hamcrest.Matcher<T>)"
        ],
        [
            "boolean",
            "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.matches(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.isVarargMatcher()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.toString()"
        ],
        [
            "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor",
            "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor()"
        ],
        [
            "org.mockito.internal.handler.InvocationNotifierHandler",
            "org.mockito.internal.handler.InvocationNotifierHandler(org.mockito.invocation.MockHandler<T>, org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.handler.InvocationNotifierHandler.handle(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.invocation.InvocationContainer",
            "org.mockito.internal.handler.InvocationNotifierHandler.getInvocationContainer()"
        ],
        [
            "org.mockito.internal.handler.MockHandlerFactory",
            "org.mockito.internal.handler.MockHandlerFactory()"
        ],
        [
            "<T> org.mockito.invocation.MockHandler<T>",
            "org.mockito.internal.handler.MockHandlerFactory.createMockHandler(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "org.mockito.internal.handler.MockHandlerImpl",
            "org.mockito.internal.handler.MockHandlerImpl(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.handler.MockHandlerImpl.handle(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.invocation.InvocationContainer",
            "org.mockito.internal.handler.MockHandlerImpl.getInvocationContainer()"
        ],
        [
            "org.mockito.internal.handler.NotifiedMethodInvocationReport",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Object)"
        ],
        [
            "org.mockito.internal.handler.NotifiedMethodInvocationReport",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Throwable)"
        ],
        [
            "org.mockito.invocation.DescribedInvocation",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.getInvocation()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.getReturnedValue()"
        ],
        [
            "java.lang.Throwable",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.getThrowable()"
        ],
        [
            "boolean",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.threwException()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.getLocationOfStubbing()"
        ],
        [
            "boolean",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.handler.NotifiedMethodInvocationReport.hashCode()"
        ],
        [
            "org.mockito.internal.handler.NullResultGuardian",
            "org.mockito.internal.handler.NullResultGuardian(org.mockito.invocation.MockHandler<T>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.handler.NullResultGuardian.handle(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.invocation.InvocationContainer",
            "org.mockito.internal.handler.NullResultGuardian.getInvocationContainer()"
        ],
        [
            "org.mockito.internal.invocation.ArgumentsProcessor",
            "org.mockito.internal.invocation.ArgumentsProcessor()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.invocation.ArgumentsProcessor.expandArgs(org.mockito.internal.invocation.MockitoMethod, java.lang.Object[])"
        ],
        [
            "org.mockito.internal.invocation.DefaultInvocationFactory",
            "org.mockito.internal.invocation.DefaultInvocationFactory()"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.DefaultInvocationFactory.createInvocation(java.lang.Object, org.mockito.mock.MockCreationSettings, java.lang.reflect.Method, java.util.concurrent.Callable, java.lang.Object...)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.DefaultInvocationFactory.createInvocation(java.lang.Object, org.mockito.mock.MockCreationSettings, java.lang.reflect.Method, org.mockito.invocation.InvocationFactory$RealMethodBehavior, java.lang.Object...)"
        ],
        [
            "org.mockito.internal.invocation.InterceptedInvocation",
            "org.mockito.internal.invocation.DefaultInvocationFactory.createInvocation(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], org.mockito.internal.invocation.RealMethod, org.mockito.mock.MockCreationSettings, org.mockito.invocation.Location)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InterceptedInvocation$1.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.InterceptedInvocation$1.invoke()"
        ],
        [
            "org.mockito.internal.invocation.InterceptedInvocation",
            "org.mockito.internal.invocation.InterceptedInvocation(org.mockito.internal.invocation.mockref.MockReference<java.lang.Object>, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], org.mockito.internal.invocation.RealMethod, org.mockito.invocation.Location, int)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InterceptedInvocation.isVerified()"
        ],
        [
            "int",
            "org.mockito.internal.invocation.InterceptedInvocation.getSequenceNumber()"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.invocation.InterceptedInvocation.getLocation()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.invocation.InterceptedInvocation.getRawArguments()"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InterceptedInvocation.markVerified()"
        ],
        [
            "org.mockito.invocation.StubInfo",
            "org.mockito.internal.invocation.InterceptedInvocation.stubInfo()"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InterceptedInvocation.markStubbed(org.mockito.invocation.StubInfo)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InterceptedInvocation.isIgnoredForVerification()"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InterceptedInvocation.ignoreForVerification()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.InterceptedInvocation.getMock()"
        ],
        [
            "java.lang.reflect.Method",
            "org.mockito.internal.invocation.InterceptedInvocation.getMethod()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.invocation.InterceptedInvocation.getArguments()"
        ],
        [
            "<T> T",
            "org.mockito.internal.invocation.InterceptedInvocation.getArgument(int)"
        ],
        [
            "<T> T",
            "org.mockito.internal.invocation.InterceptedInvocation.getArgument(int, java.lang.Class<T>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.InterceptedInvocation.callRealMethod()"
        ],
        [
            "org.mockito.internal.invocation.MockitoMethod",
            "org.mockito.internal.invocation.InterceptedInvocation.getMockitoMethod()"
        ],
        [
            "org.mockito.internal.invocation.RealMethod",
            "org.mockito.internal.invocation.InterceptedInvocation.getRealMethod()"
        ],
        [
            "int",
            "org.mockito.internal.invocation.InterceptedInvocation.hashCode()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InterceptedInvocation.equals(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.invocation.InterceptedInvocation.toString()"
        ],
        [
            "org.mockito.internal.invocation.InvocationComparator",
            "org.mockito.internal.invocation.InvocationComparator()"
        ],
        [
            "int",
            "org.mockito.internal.invocation.InvocationComparator.compare(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"
        ],
        [
            "int",
            "org.mockito.internal.invocation.InvocationComparator.compare(java.lang.Object, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InvocationMarker.markVerified(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InvocationMarker.markVerified(org.mockito.invocation.Invocation, org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InvocationMarker.markVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationMatcher$1.apply(org.mockito.ArgumentMatcher<?>, java.lang.Object)"
        ],
        [
            "org.mockito.internal.invocation.InvocationMatcher",
            "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher>)"
        ],
        [
            "org.mockito.internal.invocation.InvocationMatcher",
            "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation)"
        ],
        [
            "java.lang.reflect.Method",
            "org.mockito.internal.invocation.InvocationMatcher.getMethod()"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationMatcher.getInvocation()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.invocation.InvocationMatcher.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationMatcher.matches(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationMatcher.hasSimilarMethod(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationMatcher.hasSameMethod(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.invocation.InvocationMatcher.getLocation()"
        ],
        [
            "void",
            "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder",
            "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationsFinder.findFirstMatchingUnverifiedInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List<org.mockito.invocation.Invocation>)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>)"
        ],
        [
            "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType[]",
            "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.values()"
        ],
        [
            "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType",
            "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.valueOf(java.lang.String)"
        ],
        [
            "org.mockito.internal.invocation.MatcherApplicationStrategy",
            "org.mockito.internal.invocation.MatcherApplicationStrategy.getMatcherApplicationStrategyFor(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher<?>>)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.MatcherApplicationStrategy.forEachMatcherAndArgument(org.mockito.internal.invocation.ArgumentMatcherAction)"
        ],
        [
            "org.mockito.internal.invocation.MatchersBinder",
            "org.mockito.internal.invocation.MatchersBinder()"
        ],
        [
            "org.mockito.internal.invocation.InvocationMatcher",
            "org.mockito.internal.invocation.MatchersBinder.bindMatchers(org.mockito.internal.progress.ArgumentMatcherStorage, org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.RealMethod$FromBehavior.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.RealMethod$FromBehavior.invoke()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.RealMethod$FromCallable$1.call()"
        ],
        [
            "org.mockito.internal.invocation.RealMethod$FromCallable",
            "org.mockito.internal.invocation.RealMethod$FromCallable(java.util.concurrent.Callable<?>)"
        ],
        [
            "org.mockito.internal.invocation.RealMethod$IsIllegal[]",
            "org.mockito.internal.invocation.RealMethod$IsIllegal.values()"
        ],
        [
            "org.mockito.internal.invocation.RealMethod$IsIllegal",
            "org.mockito.internal.invocation.RealMethod$IsIllegal.valueOf(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.RealMethod$IsIllegal.isInvokable()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.invocation.RealMethod$IsIllegal.invoke()"
        ],
        [
            "org.mockito.internal.invocation.SerializableMethod",
            "org.mockito.internal.invocation.SerializableMethod(java.lang.reflect.Method)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.invocation.SerializableMethod.getName()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.SerializableMethod.isVarArgs()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.SerializableMethod.isAbstract()"
        ],
        [
            "java.lang.reflect.Method",
            "org.mockito.internal.invocation.SerializableMethod.getJavaMethod()"
        ],
        [
            "int",
            "org.mockito.internal.invocation.SerializableMethod.hashCode()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.SerializableMethod.equals(java.lang.Object)"
        ],
        [
            "org.mockito.internal.invocation.StubInfoImpl",
            "org.mockito.internal.invocation.StubInfoImpl(org.mockito.invocation.DescribedInvocation)"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.invocation.StubInfoImpl.stubbedAt()"
        ],
        [
            "org.mockito.internal.invocation.ArgumentMatcherAction",
            "org.mockito.internal.invocation.TypeSafeMatching.matchesTypeSafe()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.TypeSafeMatching.apply(org.mockito.ArgumentMatcher, java.lang.Object)"
        ],
        [
            "org.mockito.internal.invocation.UnusedStubsFinder",
            "org.mockito.internal.invocation.UnusedStubsFinder()"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.invocation.mockref.MockStrongReference",
            "org.mockito.internal.invocation.mockref.MockStrongReference(T, boolean)"
        ],
        [
            "T",
            "org.mockito.internal.invocation.mockref.MockStrongReference.get()"
        ],
        [
            "org.mockito.internal.invocation.mockref.MockWeakReference",
            "org.mockito.internal.invocation.mockref.MockWeakReference(T)"
        ],
        [
            "T",
            "org.mockito.internal.invocation.mockref.MockWeakReference.get()"
        ],
        [
            "void",
            "org.mockito.internal.junit.DefaultStubbingLookupListener.onStubbingLookup(org.mockito.listeners.StubbingLookupEvent)"
        ],
        [
            "org.mockito.internal.junit.DefaultTestFinishedEvent",
            "org.mockito.internal.junit.DefaultTestFinishedEvent(java.lang.Object, java.lang.String, java.lang.Throwable)"
        ],
        [
            "java.lang.Throwable",
            "org.mockito.internal.junit.DefaultTestFinishedEvent.getFailure()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.junit.DefaultTestFinishedEvent.getTestName()"
        ],
        [
            "java.lang.AssertionError",
            "org.mockito.internal.junit.ExceptionFactory.createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.internal.junit.JUnitRule",
            "org.mockito.internal.junit.JUnitRule(org.mockito.plugins.MockitoLogger, org.mockito.quality.Strictness)"
        ],
        [
            "org.junit.runners.model.Statement",
            "org.mockito.internal.junit.JUnitRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"
        ],
        [
            "org.mockito.junit.MockitoRule",
            "org.mockito.internal.junit.JUnitRule.silent()"
        ],
        [
            "org.mockito.junit.MockitoRule",
            "org.mockito.internal.junit.JUnitRule.strictness(org.mockito.quality.Strictness)"
        ],
        [
            "void",
            "org.mockito.internal.junit.JUnitSessionStore$1.evaluate()"
        ],
        [
            "org.mockito.internal.junit.JUnitTestRule",
            "org.mockito.internal.junit.JUnitTestRule(org.mockito.plugins.MockitoLogger, org.mockito.quality.Strictness, java.lang.Object)"
        ],
        [
            "org.junit.runners.model.Statement",
            "org.mockito.internal.junit.JUnitTestRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"
        ],
        [
            "org.mockito.junit.MockitoTestRule",
            "org.mockito.internal.junit.JUnitTestRule.silent()"
        ],
        [
            "org.mockito.junit.MockitoTestRule",
            "org.mockito.internal.junit.JUnitTestRule.strictness(org.mockito.quality.Strictness)"
        ],
        [
            "org.mockito.internal.junit.MismatchReportingTestListener",
            "org.mockito.internal.junit.MismatchReportingTestListener(org.mockito.plugins.MockitoLogger)"
        ],
        [
            "void",
            "org.mockito.internal.junit.MismatchReportingTestListener.testFinished(org.mockito.internal.junit.TestFinishedEvent)"
        ],
        [
            "void",
            "org.mockito.internal.junit.MismatchReportingTestListener.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.internal.junit.NoOpTestListener",
            "org.mockito.internal.junit.NoOpTestListener()"
        ],
        [
            "void",
            "org.mockito.internal.junit.NoOpTestListener.testFinished(org.mockito.internal.junit.TestFinishedEvent)"
        ],
        [
            "void",
            "org.mockito.internal.junit.NoOpTestListener.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.internal.junit.StrictStubsRunnerTestListener",
            "org.mockito.internal.junit.StrictStubsRunnerTestListener()"
        ],
        [
            "void",
            "org.mockito.internal.junit.StrictStubsRunnerTestListener.testFinished(org.mockito.internal.junit.TestFinishedEvent)"
        ],
        [
            "void",
            "org.mockito.internal.junit.StrictStubsRunnerTestListener.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.junit.StubbingArgMismatches.add(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.junit.StubbingArgMismatches.format(java.lang.String, org.mockito.plugins.MockitoLogger)"
        ],
        [
            "int",
            "org.mockito.internal.junit.StubbingArgMismatches.size()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.junit.StubbingArgMismatches.toString()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.junit.StubbingHint.toString()"
        ],
        [
            "org.mockito.internal.junit.UniversalTestListener",
            "org.mockito.internal.junit.UniversalTestListener(org.mockito.quality.Strictness, org.mockito.plugins.MockitoLogger)"
        ],
        [
            "void",
            "org.mockito.internal.junit.UniversalTestListener.testFinished(org.mockito.internal.junit.TestFinishedEvent)"
        ],
        [
            "void",
            "org.mockito.internal.junit.UniversalTestListener.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.junit.UniversalTestListener.setStrictness(org.mockito.quality.Strictness)"
        ],
        [
            "boolean",
            "org.mockito.internal.junit.UniversalTestListener.isListenerDirty()"
        ],
        [
            "void",
            "org.mockito.internal.junit.UniversalTestListener.setListenerDirty()"
        ],
        [
            "org.mockito.internal.junit.UnnecessaryStubbingsReporter",
            "org.mockito.internal.junit.UnnecessaryStubbingsReporter()"
        ],
        [
            "void",
            "org.mockito.internal.junit.UnnecessaryStubbingsReporter.validateUnusedStubs(java.lang.Class<?>, org.junit.runner.notification.RunNotifier)"
        ],
        [
            "void",
            "org.mockito.internal.junit.UnnecessaryStubbingsReporter.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "int",
            "org.mockito.internal.junit.UnusedStubbings.size()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.junit.UnusedStubbings.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(org.mockito.stubbing.Stubbing)"
        ],
        [
            "boolean",
            "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.junit.UnusedStubbingsFinder",
            "org.mockito.internal.junit.UnusedStubbingsFinder()"
        ],
        [
            "org.mockito.internal.junit.UnusedStubbings",
            "org.mockito.internal.junit.UnusedStubbingsFinder.getUnusedStubbings(java.lang.Iterable<java.lang.Object>)"
        ],
        [
            "void",
            "org.mockito.internal.junit.VerificationCollectorImpl$1.evaluate()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.junit.VerificationCollectorImpl$2.maybeVerifyLazily(org.mockito.verification.VerificationMode)"
        ],
        [
            "void",
            "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.description(java.lang.String)"
        ],
        [
            "org.mockito.internal.junit.VerificationCollectorImpl",
            "org.mockito.internal.junit.VerificationCollectorImpl()"
        ],
        [
            "org.junit.runners.model.Statement",
            "org.mockito.internal.junit.VerificationCollectorImpl.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"
        ],
        [
            "void",
            "org.mockito.internal.junit.VerificationCollectorImpl.collectAndReport()"
        ],
        [
            "org.mockito.junit.VerificationCollector",
            "org.mockito.internal.junit.VerificationCollectorImpl.assertLazily()"
        ],
        [
            "org.mockito.internal.junit.util.JUnitFailureHacker",
            "org.mockito.internal.junit.util.JUnitFailureHacker()"
        ],
        [
            "void",
            "org.mockito.internal.junit.util.JUnitFailureHacker.appendWarnings(org.junit.runner.notification.Failure, java.lang.String)"
        ],
        [
            "org.mockito.internal.listeners.StubbingLookupNotifier$Event",
            "org.mockito.internal.listeners.StubbingLookupNotifier$Event(org.mockito.invocation.Invocation, org.mockito.stubbing.Stubbing, java.util.Collection<org.mockito.stubbing.Stubbing>, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.invocation.Invocation",
            "org.mockito.internal.listeners.StubbingLookupNotifier$Event.getInvocation()"
        ],
        [
            "org.mockito.stubbing.Stubbing",
            "org.mockito.internal.listeners.StubbingLookupNotifier$Event.getStubbingFound()"
        ],
        [
            "org.mockito.mock.MockCreationSettings",
            "org.mockito.internal.listeners.StubbingLookupNotifier$Event.getMockSettings()"
        ],
        [
            "org.mockito.internal.listeners.StubbingLookupNotifier",
            "org.mockito.internal.listeners.StubbingLookupNotifier()"
        ],
        [
            "void",
            "org.mockito.internal.listeners.StubbingLookupNotifier.notifyStubbedAnswerLookup(org.mockito.invocation.Invocation, org.mockito.stubbing.Stubbing, java.util.Collection<org.mockito.stubbing.Stubbing>, org.mockito.internal.creation.settings.CreationSettings)"
        ],
        [
            "org.mockito.internal.listeners.VerificationStartedNotifier$Event",
            "org.mockito.internal.listeners.VerificationStartedNotifier$Event(org.mockito.MockingDetails)"
        ],
        [
            "void",
            "org.mockito.internal.listeners.VerificationStartedNotifier$Event.setMock(java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.listeners.VerificationStartedNotifier$Event.getMock()"
        ],
        [
            "org.mockito.internal.listeners.VerificationStartedNotifier",
            "org.mockito.internal.listeners.VerificationStartedNotifier()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.listeners.VerificationStartedNotifier.notifyVerificationStarted(java.util.List<org.mockito.listeners.VerificationStartedListener>, org.mockito.MockingDetails)"
        ],
        [
            "org.mockito.internal.matchers.And",
            "org.mockito.internal.matchers.And(org.mockito.ArgumentMatcher<?>, org.mockito.ArgumentMatcher<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.And.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.And.toString()"
        ],
        [
            "org.mockito.internal.matchers.Any",
            "org.mockito.internal.matchers.Any()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Any.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Any.toString()"
        ],
        [
            "org.mockito.internal.matchers.ArrayEquals",
            "org.mockito.internal.matchers.ArrayEquals(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.ArrayEquals.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.ArrayEquals.toString()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.matchers.ArrayEquals.createObjectArray(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.CapturingMatcher",
            "org.mockito.internal.matchers.CapturingMatcher()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.CapturingMatcher.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.CapturingMatcher.toString()"
        ],
        [
            "T",
            "org.mockito.internal.matchers.CapturingMatcher.getLastValue()"
        ],
        [
            "void",
            "org.mockito.internal.matchers.CapturingMatcher.captureFrom(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.CompareEqual",
            "org.mockito.internal.matchers.CompareEqual(T)"
        ],
        [
            "org.mockito.internal.matchers.CompareTo",
            "org.mockito.internal.matchers.CompareTo(T)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.CompareTo.matches(T)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.CompareTo.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.CompareTo.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.Contains",
            "org.mockito.internal.matchers.Contains(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Contains.matches(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Contains.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Contains.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.EndsWith",
            "org.mockito.internal.matchers.EndsWith(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.EndsWith.matches(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.EndsWith.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.EndsWith.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.Equality",
            "org.mockito.internal.matchers.Equality()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Equality.areEqual(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.Equals",
            "org.mockito.internal.matchers.Equals(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Equals.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Equals.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Equals.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.matchers.Equals.hashCode()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Equals.toStringWithType()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Equals.typeMatches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.EqualsWithDelta",
            "org.mockito.internal.matchers.EqualsWithDelta(java.lang.Number, java.lang.Number)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Number)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.EqualsWithDelta.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.Find",
            "org.mockito.internal.matchers.Find(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Find.matches(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Find.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Find.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.GreaterOrEqual",
            "org.mockito.internal.matchers.GreaterOrEqual(T)"
        ],
        [
            "org.mockito.internal.matchers.GreaterThan",
            "org.mockito.internal.matchers.GreaterThan(T)"
        ],
        [
            "org.mockito.internal.matchers.InstanceOf$VarArgAware",
            "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.matchers.InstanceOf$VarArgAware",
            "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>, java.lang.String)"
        ],
        [
            "org.mockito.internal.matchers.InstanceOf",
            "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.matchers.InstanceOf",
            "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>, java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.InstanceOf.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.InstanceOf.toString()"
        ],
        [
            "org.mockito.internal.matchers.LessOrEqual",
            "org.mockito.internal.matchers.LessOrEqual(T)"
        ],
        [
            "org.mockito.internal.matchers.LessThan",
            "org.mockito.internal.matchers.LessThan(T)"
        ],
        [
            "org.mockito.internal.matchers.LocalizedMatcher",
            "org.mockito.internal.matchers.LocalizedMatcher(org.mockito.ArgumentMatcher<?>)"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.matchers.LocalizedMatcher.getLocation()"
        ],
        [
            "org.mockito.internal.matchers.Matches",
            "org.mockito.internal.matchers.Matches(java.lang.String)"
        ],
        [
            "org.mockito.internal.matchers.Matches",
            "org.mockito.internal.matchers.Matches(java.util.regex.Pattern)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Matches.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Matches.toString()"
        ],
        [
            "org.mockito.internal.matchers.Not",
            "org.mockito.internal.matchers.Not(org.mockito.ArgumentMatcher<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Not.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Not.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.NotNull.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.NotNull.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Null.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Null.toString()"
        ],
        [
            "org.mockito.internal.matchers.Or",
            "org.mockito.internal.matchers.Or(org.mockito.ArgumentMatcher<?>, org.mockito.ArgumentMatcher<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Or.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Or.toString()"
        ],
        [
            "org.mockito.internal.matchers.Same",
            "org.mockito.internal.matchers.Same(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.Same.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.Same.toString()"
        ],
        [
            "org.mockito.internal.matchers.StartsWith",
            "org.mockito.internal.matchers.StartsWith(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.StartsWith.matches(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.StartsWith.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.StartsWith.matches(java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder()"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String[])"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, java.lang.String[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.appendSuper(boolean)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long, long)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int, int)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short, short)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char, char)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte, byte)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double, double)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float, float)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean, boolean)"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object[], java.lang.Object[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long[], long[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int[], int[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short[], short[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char[], char[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte[], byte[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double[], double[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float[], float[])"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean[], boolean[])"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.EqualsBuilder.isEquals()"
        ],
        [
            "org.mockito.internal.matchers.apachecommons.ReflectionEquals",
            "org.mockito.internal.matchers.apachecommons.ReflectionEquals(java.lang.Object, java.lang.String...)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.apachecommons.ReflectionEquals.matches(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.apachecommons.ReflectionEquals.toString()"
        ],
        [
            "org.mockito.internal.matchers.text.FormattedText",
            "org.mockito.internal.matchers.text.FormattedText(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.text.FormattedText.getText()"
        ],
        [
            "org.mockito.internal.matchers.text.MatchersPrinter",
            "org.mockito.internal.matchers.text.MatchersPrinter()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsLine(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsBlock(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"
        ],
        [
            "boolean",
            "org.mockito.internal.matchers.text.ValuePrinter$1.hasNext()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.matchers.text.ValuePrinter$1.next()"
        ],
        [
            "void",
            "org.mockito.internal.matchers.text.ValuePrinter$1.remove()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.text.ValuePrinter.print(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.matchers.text.ValuePrinter.printValues(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator<?>)"
        ],
        [
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl()"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportMatcher(org.mockito.ArgumentMatcher<?>)"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportAnd()"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportOr()"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportNot()"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.validateState()"
        ],
        [
            "void",
            "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reset()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.progress.MockingProgressImpl$1.maybeVerifyLazily(org.mockito.verification.VerificationMode)"
        ],
        [
            "org.mockito.internal.progress.MockingProgressImpl",
            "org.mockito.internal.progress.MockingProgressImpl()"
        ],
        [
            "org.mockito.verification.VerificationStrategy",
            "org.mockito.internal.progress.MockingProgressImpl.getDefaultVerificationStrategy()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.reportOngoingStubbing(org.mockito.stubbing.OngoingStubbing)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.verificationStarted(org.mockito.verification.VerificationMode)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.resetOngoingStubbing()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.progress.MockingProgressImpl.pullVerificationMode()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.stubbingStarted()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.validateState()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.stubbingCompleted()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.progress.MockingProgressImpl.toString()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.reset()"
        ],
        [
            "org.mockito.internal.progress.ArgumentMatcherStorage",
            "org.mockito.internal.progress.MockingProgressImpl.getArgumentMatcherStorage()"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.mockingStarted(java.lang.Object, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.mockingStarted(java.lang.Class<?>, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.addListener(org.mockito.listeners.MockitoListener)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.removeListener(org.mockito.listeners.MockitoListener)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.setVerificationStrategy(org.mockito.verification.VerificationStrategy)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.progress.MockingProgressImpl.maybeVerifyLazily(org.mockito.verification.VerificationMode)"
        ],
        [
            "void",
            "org.mockito.internal.progress.MockingProgressImpl.clearListeners()"
        ],
        [
            "org.mockito.internal.progress.SequenceNumber",
            "org.mockito.internal.progress.SequenceNumber()"
        ],
        [
            "synchronized",
            "org.mockito.internal.progress.SequenceNumber.int next()"
        ],
        [
            "org.mockito.internal.progress.MockingProgress",
            "org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress()"
        ],
        [
            "org.mockito.internal.reporting.Discrepancy",
            "org.mockito.internal.reporting.Discrepancy(int, int)"
        ],
        [
            "int",
            "org.mockito.internal.reporting.Discrepancy.getWantedCount()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.Discrepancy.getPluralizedWantedCount()"
        ],
        [
            "int",
            "org.mockito.internal.reporting.Discrepancy.getActualCount()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.Discrepancy.getPluralizedActualCount()"
        ],
        [
            "org.mockito.internal.reporting.Pluralizer",
            "org.mockito.internal.reporting.Pluralizer()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.Pluralizer.pluralize(int)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.Pluralizer.were_exactly_x_interactions(int)"
        ],
        [
            "org.mockito.internal.reporting.PrintSettings",
            "org.mockito.internal.reporting.PrintSettings()"
        ],
        [
            "void",
            "org.mockito.internal.reporting.PrintSettings.setMultiline(boolean)"
        ],
        [
            "boolean",
            "org.mockito.internal.reporting.PrintSettings.isMultiline()"
        ],
        [
            "org.mockito.internal.reporting.PrintSettings",
            "org.mockito.internal.reporting.PrintSettings.verboseMatchers(java.lang.Integer...)"
        ],
        [
            "boolean",
            "org.mockito.internal.reporting.PrintSettings.extraTypeInfoFor(int)"
        ],
        [
            "void",
            "org.mockito.internal.reporting.PrintSettings.setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.PrintSettings.print(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.invocation.Invocation)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.Invocation)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "org.mockito.internal.reporting.SmartPrinter",
            "org.mockito.internal.reporting.SmartPrinter(org.mockito.invocation.MatchableInvocation, org.mockito.invocation.Invocation, java.lang.Integer...)"
        ],
        [
            "org.mockito.internal.reporting.SmartPrinter",
            "org.mockito.internal.reporting.SmartPrinter(org.mockito.invocation.MatchableInvocation, java.util.List<org.mockito.invocation.Invocation>, java.lang.Integer...)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.reporting.SmartPrinter.getWanted()"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate()"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner$1$2.testFailure(org.junit.runner.notification.Failure)"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner$1$2.testFinished(org.junit.runner.Description)"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner$1.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.mockito.internal.runners.DefaultInternalRunner",
            "org.mockito.internal.runners.DefaultInternalRunner(java.lang.Class<?>, org.mockito.internal.util.Supplier<org.mockito.internal.junit.MockitoTestListener>)"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.internal.runners.DefaultInternalRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.internal.runners.DefaultInternalRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "org.mockito.internal.junit.MockitoTestListener",
            "org.mockito.internal.runners.RunnerFactory$1.get()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.runners.RunnerFactory$1.get()"
        ],
        [
            "org.mockito.internal.junit.MockitoTestListener",
            "org.mockito.internal.runners.RunnerFactory$2.get()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.runners.RunnerFactory$2.get()"
        ],
        [
            "org.mockito.internal.junit.MockitoTestListener",
            "org.mockito.internal.runners.RunnerFactory$3.get()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.runners.RunnerFactory$3.get()"
        ],
        [
            "org.mockito.internal.runners.RunnerFactory",
            "org.mockito.internal.runners.RunnerFactory()"
        ],
        [
            "org.mockito.internal.runners.InternalRunner",
            "org.mockito.internal.runners.RunnerFactory.create(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.runners.InternalRunner",
            "org.mockito.internal.runners.RunnerFactory.createStrict(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.runners.InternalRunner",
            "org.mockito.internal.runners.RunnerFactory.createStrictStubs(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.runners.InternalRunner",
            "org.mockito.internal.runners.RunnerFactory.create(java.lang.Class<?>, org.mockito.internal.util.Supplier<org.mockito.internal.junit.MockitoTestListener>)"
        ],
        [
            "org.mockito.internal.runners.StrictRunner",
            "org.mockito.internal.runners.StrictRunner(org.mockito.internal.runners.InternalRunner, java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.runners.StrictRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.internal.runners.StrictRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.internal.runners.StrictRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "org.mockito.internal.runners.util.FailureDetector",
            "org.mockito.internal.runners.util.FailureDetector()"
        ],
        [
            "void",
            "org.mockito.internal.runners.util.FailureDetector.testFailure(org.junit.runner.notification.Failure)"
        ],
        [
            "boolean",
            "org.mockito.internal.runners.util.FailureDetector.isSuccessful()"
        ],
        [
            "org.mockito.internal.runners.util.RunnerProvider",
            "org.mockito.internal.runners.util.RunnerProvider()"
        ],
        [
            "org.mockito.internal.runners.InternalRunner",
            "org.mockito.internal.runners.util.RunnerProvider.newInstance(java.lang.String, java.lang.Object...)"
        ],
        [
            "boolean",
            "org.mockito.internal.runners.util.TestMethodsFinder.hasTestMethods(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.session.DefaultMockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder()"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.initMocks(java.lang.Object)"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.initMocks(java.lang.Object...)"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.name(java.lang.String)"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.strictness(org.mockito.quality.Strictness)"
        ],
        [
            "org.mockito.session.MockitoSessionBuilder",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.logger(org.mockito.session.MockitoSessionLogger)"
        ],
        [
            "org.mockito.MockitoSession",
            "org.mockito.internal.session.DefaultMockitoSessionBuilder.startMocking()"
        ],
        [
            "void",
            "org.mockito.internal.session.MockitoLoggerAdapter.log(java.lang.Object)"
        ],
        [
            "org.mockito.internal.session.MockitoSessionLoggerAdapter",
            "org.mockito.internal.session.MockitoSessionLoggerAdapter(org.mockito.plugins.MockitoLogger)"
        ],
        [
            "void",
            "org.mockito.internal.session.MockitoSessionLoggerAdapter.log(java.lang.String)"
        ],
        [
            "<M> M",
            "org.mockito.internal.stubbing.BaseStubbing.getMock()"
        ],
        [
            "org.mockito.internal.stubbing.DefaultLenientStubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doThrow(java.lang.Throwable...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doThrow(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doNothing()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doReturn(java.lang.Object)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doReturn(java.lang.Object, java.lang.Object...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.DefaultLenientStubber.doCallRealMethod()"
        ],
        [
            "<T> org.mockito.stubbing.OngoingStubbing<T>",
            "org.mockito.internal.stubbing.DefaultLenientStubber.when(T)"
        ],
        [
            "org.mockito.internal.stubbing.InvocationContainerImpl",
            "org.mockito.internal.stubbing.InvocationContainerImpl(org.mockito.mock.MockCreationSettings)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer, org.mockito.quality.Strictness)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.addConsecutiveAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "org.mockito.internal.stubbing.StubbedInvocationMatcher",
            "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer, boolean, org.mockito.quality.Strictness)"
        ],
        [
            "org.mockito.internal.stubbing.StubbedInvocationMatcher",
            "org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>, org.mockito.quality.Strictness)"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.InvocationContainerImpl.hasAnswersForStubbing()"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.InvocationContainerImpl.hasInvocationForPotentialStubbing()"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.setMethodForStubbing(org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.stubbing.InvocationContainerImpl.toString()"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.InvocationContainerImpl.clearInvocations()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock()"
        ],
        [
            "org.mockito.invocation.MatchableInvocation",
            "org.mockito.internal.stubbing.InvocationContainerImpl.getInvocationForStubbing()"
        ],
        [
            "org.mockito.internal.stubbing.OngoingStubbingImpl",
            "org.mockito.internal.stubbing.OngoingStubbingImpl(org.mockito.internal.stubbing.InvocationContainerImpl)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.OngoingStubbingImpl.setStrictness(org.mockito.quality.Strictness)"
        ],
        [
            "org.mockito.internal.stubbing.StrictnessSelector",
            "org.mockito.internal.stubbing.StrictnessSelector()"
        ],
        [
            "org.mockito.quality.Strictness",
            "org.mockito.internal.stubbing.StrictnessSelector.determineStrictness(org.mockito.stubbing.Stubbing, org.mockito.mock.MockCreationSettings, org.mockito.quality.Strictness)"
        ],
        [
            "org.mockito.internal.stubbing.StubbedInvocationMatcher",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher(org.mockito.stubbing.Answer, org.mockito.invocation.MatchableInvocation, org.mockito.quality.Strictness)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.addAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.markStubUsed(org.mockito.invocation.DescribedInvocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.wasUsed()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.toString()"
        ],
        [
            "org.mockito.quality.Strictness",
            "org.mockito.internal.stubbing.StubbedInvocationMatcher.getStrictness()"
        ],
        [
            "org.mockito.internal.stubbing.StubberImpl",
            "org.mockito.internal.stubbing.StubberImpl(org.mockito.quality.Strictness)"
        ],
        [
            "<T> T",
            "org.mockito.internal.stubbing.StubberImpl.when(T)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object, java.lang.Object...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Throwable...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doNothing()"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doAnswer(org.mockito.stubbing.Answer)"
        ],
        [
            "org.mockito.stubbing.Stubber",
            "org.mockito.internal.stubbing.StubberImpl.doCallRealMethod()"
        ],
        [
            "org.mockito.internal.stubbing.StubbingComparator",
            "org.mockito.internal.stubbing.StubbingComparator()"
        ],
        [
            "int",
            "org.mockito.internal.stubbing.StubbingComparator.compare(org.mockito.stubbing.Stubbing, org.mockito.stubbing.Stubbing)"
        ],
        [
            "int",
            "org.mockito.internal.stubbing.StubbingComparator.compare(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.stubbing.UnusedStubbingReporting",
            "org.mockito.internal.stubbing.UnusedStubbingReporting()"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.UnusedStubbingReporting.shouldBeReported(org.mockito.stubbing.Stubbing)"
        ],
        [
            "org.mockito.internal.stubbing.answers.AbstractThrowsException",
            "org.mockito.internal.stubbing.answers.AbstractThrowsException()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AbstractThrowsException.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.AbstractThrowsException.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$1.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$11.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$12.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$12.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$3.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$5.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$7.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Void",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "T",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$9.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "<T, A> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer1<T, A>)"
        ],
        [
            "<A> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer1<A>)"
        ],
        [
            "<T, A, B> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer2<T, A, B>)"
        ],
        [
            "<A, B> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer2<A, B>)"
        ],
        [
            "<T, A, B, C> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer3<T, A, B, C>)"
        ],
        [
            "<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer3<A, B, C>)"
        ],
        [
            "<T, A, B, C, D> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"
        ],
        [
            "<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"
        ],
        [
            "<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"
        ],
        [
            "<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"
        ],
        [
            "<T, A, B, C, D, E, F> org.mockito.stubbing.Answer<T>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer6<T, A, B, C, D, E, F>)"
        ],
        [
            "<A, B, C, D, E, F> org.mockito.stubbing.Answer<java.lang.Void>",
            "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer6<A, B, C, D, E, F>)"
        ],
        [
            "org.mockito.internal.stubbing.answers.AnswersWithDelay",
            "org.mockito.internal.stubbing.answers.AnswersWithDelay(long, org.mockito.stubbing.Answer<java.lang.Object>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.AnswersWithDelay.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.AnswersWithDelay.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.CallsRealMethods",
            "org.mockito.internal.stubbing.answers.CallsRealMethods()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.CallsRealMethods.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.ClonesArguments",
            "org.mockito.internal.stubbing.answers.ClonesArguments()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.ClonesArguments.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.DefaultAnswerValidator",
            "org.mockito.internal.stubbing.answers.DefaultAnswerValidator()"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.DefaultAnswerValidator.validateReturnValueFor(org.mockito.invocation.InvocationOnMock, java.lang.Object)"
        ],
        [
            "org.mockito.internal.stubbing.answers.DoesNothing",
            "org.mockito.internal.stubbing.answers.DoesNothing.doesNothing()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.DoesNothing.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.DoesNothing.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.InvocationInfo",
            "org.mockito.internal.stubbing.answers.InvocationInfo(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.isValidException(java.lang.Throwable)"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.isValidReturnType(java.lang.Class<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.isVoid()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.stubbing.answers.InvocationInfo.printMethodReturnType()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.stubbing.answers.InvocationInfo.getMethodName()"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.returnsPrimitive()"
        ],
        [
            "java.lang.reflect.Method",
            "org.mockito.internal.stubbing.answers.InvocationInfo.getMethod()"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.isDeclaredOnInterface()"
        ],
        [
            "boolean",
            "org.mockito.internal.stubbing.answers.InvocationInfo.isAbstract()"
        ],
        [
            "org.mockito.internal.stubbing.answers.Returns",
            "org.mockito.internal.stubbing.answers.Returns(java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.Returns.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.Returns.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.stubbing.answers.Returns.toString()"
        ],
        [
            "org.mockito.internal.stubbing.answers.ReturnsArgumentAt",
            "org.mockito.internal.stubbing.answers.ReturnsArgumentAt(int)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "void",
            "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.validateFor(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.ReturnsElementsOf",
            "org.mockito.internal.stubbing.answers.ReturnsElementsOf(java.util.Collection<?>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.answers.ReturnsElementsOf.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.answers.ThrowsException",
            "org.mockito.internal.stubbing.answers.ThrowsException(java.lang.Throwable)"
        ],
        [
            "org.mockito.internal.stubbing.answers.ThrowsExceptionForClassType",
            "org.mockito.internal.stubbing.answers.ThrowsExceptionForClassType(java.lang.Class<? extends java.lang.Throwable>)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
            "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations(java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
            "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback(org.mockito.internal.util.reflection.GenericMetadataSupport)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks$1.apply(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$1.apply(java.lang.Class<?>)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf",
            "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf.answer(org.mockito.invocation.InvocationOnMock)"
        ],
        [
            "org.mockito.internal.util.Checks",
            "org.mockito.internal.util.Checks()"
        ],
        [
            "<T> T",
            "org.mockito.internal.util.Checks.checkNotNull(T, java.lang.String)"
        ],
        [
            "<T> T",
            "org.mockito.internal.util.Checks.checkNotNull(T, java.lang.String, java.lang.String)"
        ],
        [
            "<T extends java.lang.Iterable<?>> T",
            "org.mockito.internal.util.Checks.checkItemsNotNull(T, java.lang.String)"
        ],
        [
            "org.mockito.internal.util.ConsoleMockitoLogger",
            "org.mockito.internal.util.ConsoleMockitoLogger()"
        ],
        [
            "void",
            "org.mockito.internal.util.ConsoleMockitoLogger.log(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.DefaultMockingDetails",
            "org.mockito.internal.util.DefaultMockingDetails(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.DefaultMockingDetails.isMock()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.DefaultMockingDetails.isSpy()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.DefaultMockingDetails.printInvocations()"
        ],
        [
            "org.mockito.invocation.MockHandler",
            "org.mockito.internal.util.DefaultMockingDetails.getMockHandler()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.DefaultMockingDetails.getMock()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyOptional()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyOptionalDouble()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyOptionalInt()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyOptionalLong()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyStream()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyDoubleStream()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyIntStream()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyLongStream()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyDuration()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.JavaEightUtil.emptyPeriod()"
        ],
        [
            "org.mockito.internal.util.MockCreationValidator",
            "org.mockito.internal.util.MockCreationValidator()"
        ],
        [
            "void",
            "org.mockito.internal.util.MockCreationValidator.validateType(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.internal.util.MockCreationValidator.validateExtraInterfaces(java.lang.Class<?>, java.util.Collection<java.lang.Class<?>>)"
        ],
        [
            "void",
            "org.mockito.internal.util.MockCreationValidator.validateMockedType(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.MockCreationValidator.validateDelegatedInstance(java.lang.Class<?>, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.MockCreationValidator.validateConstructorUse(boolean, org.mockito.mock.SerializableMode)"
        ],
        [
            "org.mockito.internal.util.MockNameImpl",
            "org.mockito.internal.util.MockNameImpl(java.lang.String, java.lang.Class<?>, boolean)"
        ],
        [
            "org.mockito.internal.util.MockNameImpl",
            "org.mockito.internal.util.MockNameImpl(java.lang.String)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.MockNameImpl.isDefault()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.MockNameImpl.toString()"
        ],
        [
            "org.mockito.plugins.MockMaker$TypeMockability",
            "org.mockito.internal.util.MockUtil.typeMockabilityOf(java.lang.Class<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.util.MockUtil.createMock(org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "<T> void",
            "org.mockito.internal.util.MockUtil.resetMock(T)"
        ],
        [
            "<T> org.mockito.invocation.MockHandler<T>",
            "org.mockito.internal.util.MockUtil.getMockHandler(T)"
        ],
        [
            "org.mockito.internal.stubbing.InvocationContainerImpl",
            "org.mockito.internal.util.MockUtil.getInvocationContainer(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.MockUtil.isSpy(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.MockUtil.isMock(java.lang.Object)"
        ],
        [
            "org.mockito.mock.MockName",
            "org.mockito.internal.util.MockUtil.getMockName(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.MockUtil.maybeRedefineMockName(java.lang.Object, java.lang.String)"
        ],
        [
            "org.mockito.mock.MockCreationSettings",
            "org.mockito.internal.util.MockUtil.getMockSettings(java.lang.Object)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$StaticMockControl<T>",
            "org.mockito.internal.util.MockUtil.createStaticMock(java.lang.Class<T>, org.mockito.mock.MockCreationSettings<T>)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$ConstructionMockControl<T>",
            "org.mockito.internal.util.MockUtil.createConstructionMock(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.mock.MockCreationSettings<T>>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.ObjectMethodsGuru.isToStringMethod(java.lang.reflect.Method)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.ObjectMethodsGuru.isCompareToMethod(java.lang.reflect.Method)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Platform.isAndroid()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Platform.isAndroidMockMakerRequired()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.Platform.describe()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Platform.isJava8BelowUpdate45()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.Platform.warnForVM(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "org.mockito.internal.util.Primitives",
            "org.mockito.internal.util.Primitives()"
        ],
        [
            "<T> java.lang.Class<T>",
            "org.mockito.internal.util.Primitives.primitiveTypeOf(java.lang.Class<T>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(java.lang.Class<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Primitives.isAssignableFromWrapper(java.lang.Class<?>, java.lang.Class<?>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.util.Primitives.defaultValue(java.lang.Class<T>)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.StringUtil.removeFirstLine(java.lang.String)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.StringUtil.join(java.lang.Object...)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.StringUtil.join(java.lang.String, java.util.Collection<?>)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.StringUtil.join(java.lang.String, java.lang.String, java.util.Collection<?>)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.StringUtil.decamelizeMatcher(java.lang.String)"
        ],
        [
            "org.mockito.internal.util.Timer",
            "org.mockito.internal.util.Timer(long)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.Timer.isCounting()"
        ],
        [
            "void",
            "org.mockito.internal.util.Timer.start()"
        ],
        [
            "long",
            "org.mockito.internal.util.Timer.duration()"
        ],
        [
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper(java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.get()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.hashCode()"
        ],
        [
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(java.lang.Object)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.hasNext()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.next()"
        ],
        [
            "void",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.remove()"
        ],
        [
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()"
        ],
        [
            "int",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.size()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.isEmpty()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.contains(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.add(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.remove(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clear()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clone()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.hashCode()"
        ],
        [
            "java.lang.Object[]",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray()"
        ],
        [
            "<T> T[]",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray(T[])"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.removeAll(java.util.Collection<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.addAll(java.util.Collection<?>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.retainAll(java.util.Collection<?>)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toString()"
        ],
        [
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Object...)"
        ],
        [
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet",
            "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Iterable<java.lang.Object>)"
        ],
        [
            "org.mockito.internal.util.collections.IdentitySet",
            "org.mockito.internal.util.collections.IdentitySet()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.collections.IdentitySet.contains(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.collections.IdentitySet.add(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.collections.Iterables",
            "org.mockito.internal.util.collections.Iterables()"
        ],
        [
            "<T> java.lang.Iterable<T>",
            "org.mockito.internal.util.collections.Iterables.toIterable(java.util.Enumeration<T>)"
        ],
        [
            "<T> T",
            "org.mockito.internal.util.collections.Iterables.firstOf(java.lang.Iterable<T>)"
        ],
        [
            "org.mockito.internal.util.collections.ListUtil",
            "org.mockito.internal.util.collections.ListUtil()"
        ],
        [
            "<T> java.util.LinkedList<T>",
            "org.mockito.internal.util.collections.ListUtil.filter(java.util.Collection<T>, org.mockito.internal.util.collections.ListUtil$Filter<T>)"
        ],
        [
            "<From, To> java.util.LinkedList<To>",
            "org.mockito.internal.util.collections.ListUtil.convert(java.util.Collection<From>, org.mockito.internal.util.collections.ListUtil$Converter<From, To>)"
        ],
        [
            "org.mockito.internal.util.collections.Sets",
            "org.mockito.internal.util.collections.Sets()"
        ],
        [
            "<T> java.util.Set<T>",
            "org.mockito.internal.util.collections.Sets.newSet(T...)"
        ],
        [
            "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner[]",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.values()"
        ],
        [
            "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.valueOf(java.lang.String)"
        ],
        [
            "org.mockito.internal.util.concurrent.DetachedThreadLocal",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal(org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner)"
        ],
        [
            "T",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.get()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.set(T)"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.clear()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.clearAll()"
        ],
        [
            "T",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.pushTo(java.lang.Thread)"
        ],
        [
            "T",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.fetchFrom(java.lang.Thread)"
        ],
        [
            "T",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.get(java.lang.Thread)"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.define(java.lang.Thread, T)"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Thread, T>",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.getBackingMap()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.DetachedThreadLocal.run()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.hasNext()"
        ],
        [
            "java.util.Map$Entry<K, V>",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.remove()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.hashCode()"
        ],
        [
            "K",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getKey()"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getValue()"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.setValue(V)"
        ],
        [
            "int",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.hashCode()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.equals(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction()"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.get(K)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.containsKey(K)"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.put(K, V)"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.remove(K)"
        ],
        [
            "java.util.Iterator<java.util.Map$Entry<K, V>>",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.iterator()"
        ],
        [
            "int",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.approximateSize()"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentMap",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap(boolean)"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.get(K)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.containsKey(K)"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.put(K, V)"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.remove(K)"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.clear()"
        ],
        [
            "java.lang.Thread",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.getCleanerThread()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.expungeStaleEntries()"
        ],
        [
            "int",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.approximateSize()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.run()"
        ],
        [
            "java.util.Iterator<java.util.Map$Entry<K, V>>",
            "org.mockito.internal.util.concurrent.WeakConcurrentMap.iterator()"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner[]",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.values()"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.valueOf(java.lang.String)"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.remove()"
        ],
        [
            "V",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.next()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.hasNext()"
        ],
        [
            "org.mockito.internal.util.concurrent.WeakConcurrentSet",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet(org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.add(V)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.contains(V)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.remove(V)"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.clear()"
        ],
        [
            "int",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.approximateSize()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.run()"
        ],
        [
            "void",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.expungeStaleEntries()"
        ],
        [
            "java.lang.Thread",
            "org.mockito.internal.util.concurrent.WeakConcurrentSet.getCleanerThread()"
        ],
        [
            "org.mockito.internal.util.io.IOUtil",
            "org.mockito.internal.util.io.IOUtil()"
        ],
        [
            "void",
            "org.mockito.internal.util.io.IOUtil.writeText(java.lang.String, java.io.File)"
        ],
        [
            "void",
            "org.mockito.internal.util.io.IOUtil.closeQuietly(java.io.Closeable)"
        ],
        [
            "void",
            "org.mockito.internal.util.io.IOUtil.close(java.io.Closeable)"
        ],
        [
            "org.mockito.internal.util.reflection.BeanPropertySetter",
            "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field, boolean)"
        ],
        [
            "org.mockito.internal.util.reflection.BeanPropertySetter",
            "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.BeanPropertySetter.set(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializationReport",
            "org.mockito.internal.util.reflection.FieldInitializationReport(java.lang.Object, boolean, boolean)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.FieldInitializationReport.fieldInstance()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitialized()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitializedUsingContructorArgs()"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializationReport",
            "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator.instantiate()"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.reflect.Constructor<?>, java.lang.reflect.Constructor<?>)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializationReport",
            "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate()"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializer",
            "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field)"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializer",
            "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver)"
        ],
        [
            "org.mockito.internal.util.reflection.FieldInitializationReport",
            "org.mockito.internal.util.reflection.FieldInitializer.initialize()"
        ],
        [
            "org.mockito.internal.util.reflection.FieldReader",
            "org.mockito.internal.util.reflection.FieldReader(java.lang.Object, java.lang.reflect.Field)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.FieldReader.isNull()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.FieldReader.read()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$1.isOut(org.mockito.internal.util.reflection.InstanceField)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$1.isOut(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$2.isOut(org.mockito.internal.util.reflection.InstanceField)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$2.isOut(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$3.isOut(org.mockito.internal.util.reflection.InstanceField)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.Fields$3.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.Fields$InstanceFields",
            "org.mockito.internal.util.reflection.Fields$InstanceFields(java.lang.Object, java.util.List<org.mockito.internal.util.reflection.InstanceField>)"
        ],
        [
            "org.mockito.internal.util.reflection.Fields$InstanceFields",
            "org.mockito.internal.util.reflection.Fields$InstanceFields.filter(org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>)"
        ],
        [
            "org.mockito.internal.util.reflection.Fields$InstanceFields",
            "org.mockito.internal.util.reflection.Fields$InstanceFields.notNull()"
        ],
        [
            "org.mockito.internal.util.reflection.Fields",
            "org.mockito.internal.util.reflection.Fields()"
        ],
        [
            "org.mockito.internal.util.reflection.Fields$InstanceFields",
            "org.mockito.internal.util.reflection.Fields.allDeclaredFieldsOf(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.Fields$InstanceFields",
            "org.mockito.internal.util.reflection.Fields.declaredFieldsOf(java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMaster",
            "org.mockito.internal.util.reflection.GenericMaster()"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport(java.lang.Class<?>)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport(java.lang.reflect.ParameterizedType)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, int)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.Type)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.ParameterizedType)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType(java.lang.reflect.TypeVariable<?>)"
        ],
        [
            "java.lang.reflect.Type",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.firstBound()"
        ],
        [
            "java.lang.reflect.Type[]",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.interfaceBounds()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.hashCode()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.toString()"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.TypeVariable<?>)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType(java.lang.reflect.WildcardType)"
        ],
        [
            "java.lang.reflect.Type",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.firstBound()"
        ],
        [
            "java.lang.reflect.Type[]",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.interfaceBounds()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.hashCode()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.toString()"
        ],
        [
            "java.lang.reflect.WildcardType",
            "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.wildCard()"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.GenericMetadataSupport.hasRawExtraInterfaces()"
        ],
        [
            "java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>",
            "org.mockito.internal.util.reflection.GenericMetadataSupport.actualTypeArguments()"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport.resolveGenericReturnType(java.lang.reflect.Method)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericMetadataSupport",
            "org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(java.lang.reflect.Type)"
        ],
        [
            "org.mockito.internal.util.reflection.GenericTypeExtractor",
            "org.mockito.internal.util.reflection.GenericTypeExtractor()"
        ],
        [
            "org.mockito.internal.util.reflection.InstanceField",
            "org.mockito.internal.util.reflection.InstanceField(java.lang.reflect.Field, java.lang.Object)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.InstanceField.read()"
        ],
        [
            "void",
            "org.mockito.internal.util.reflection.InstanceField.set(java.lang.Object)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.InstanceField.isNull()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.InstanceField.isAnnotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>)"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.InstanceField.isSynthetic()"
        ],
        [
            "<A extends java.lang.annotation.Annotation> A",
            "org.mockito.internal.util.reflection.InstanceField.annotation(java.lang.Class<A>)"
        ],
        [
            "java.lang.reflect.Field",
            "org.mockito.internal.util.reflection.InstanceField.jdkField()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.reflection.InstanceField.name()"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.util.reflection.InstanceField.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.util.reflection.InstanceField.equals(java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.InstanceField.hashCode()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.InstrumentationMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.InstrumentationMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, org.mockito.plugins.MemberAccessor$OnConstruction, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.InstrumentationMemberAccessor.invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.InstrumentationMemberAccessor.get(java.lang.reflect.Field, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.reflection.InstrumentationMemberAccessor.set(java.lang.reflect.Field, java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.LenientCopyTool",
            "org.mockito.internal.util.reflection.LenientCopyTool()"
        ],
        [
            "<T> void",
            "org.mockito.internal.util.reflection.LenientCopyTool.copyToMock(T, T)"
        ],
        [
            "<T> void",
            "org.mockito.internal.util.reflection.LenientCopyTool.copyToRealObject(T, T)"
        ],
        [
            "org.mockito.internal.util.reflection.ModuleMemberAccessor",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, org.mockito.plugins.MemberAccessor$OnConstruction, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor.invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor.get(java.lang.reflect.Field, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.reflection.ModuleMemberAccessor.set(java.lang.reflect.Field, java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor()"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor.newInstance(java.lang.reflect.Constructor<?>, org.mockito.plugins.MemberAccessor$OnConstruction, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor.invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor.get(java.lang.reflect.Field, java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.util.reflection.ReflectionMemberAccessor.set(java.lang.reflect.Field, java.lang.Object, java.lang.Object)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.reflect.Field, java.lang.reflect.Field)"
        ],
        [
            "int",
            "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.Object, java.lang.Object)"
        ],
        [
            "org.mockito.internal.verification.AtLeast",
            "org.mockito.internal.verification.AtLeast(int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.AtLeast.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "void",
            "org.mockito.internal.verification.AtLeast.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.verification.AtLeast.toString()"
        ],
        [
            "org.mockito.internal.verification.AtMost",
            "org.mockito.internal.verification.AtMost(int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.AtMost.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.Calls",
            "org.mockito.internal.verification.Calls(int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.Calls.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "void",
            "org.mockito.internal.verification.Calls.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.verification.Calls.toString()"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(org.mockito.invocation.Invocation)"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(java.lang.Object)"
        ],
        [
            "org.mockito.internal.verification.DefaultRegisteredInvocations",
            "org.mockito.internal.verification.DefaultRegisteredInvocations()"
        ],
        [
            "void",
            "org.mockito.internal.verification.DefaultRegisteredInvocations.add(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.verification.DefaultRegisteredInvocations.removeLast()"
        ],
        [
            "void",
            "org.mockito.internal.verification.DefaultRegisteredInvocations.clear()"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.DefaultRegisteredInvocations.isEmpty()"
        ],
        [
            "org.mockito.internal.verification.Description",
            "org.mockito.internal.verification.Description(org.mockito.verification.VerificationMode, java.lang.String)"
        ],
        [
            "void",
            "org.mockito.internal.verification.Description.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.InOrderContextImpl",
            "org.mockito.internal.verification.InOrderContextImpl()"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.InOrderContextImpl.isVerified(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.verification.InOrderContextImpl.markVerified(org.mockito.invocation.Invocation)"
        ],
        [
            "org.mockito.internal.verification.InOrderWrapper",
            "org.mockito.internal.verification.InOrderWrapper(org.mockito.internal.verification.api.VerificationInOrderMode, org.mockito.internal.InOrderImpl)"
        ],
        [
            "void",
            "org.mockito.internal.verification.InOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.MockAwareVerificationMode",
            "org.mockito.internal.verification.MockAwareVerificationMode(java.lang.Object, org.mockito.verification.VerificationMode, java.util.Set<org.mockito.listeners.VerificationListener>)"
        ],
        [
            "void",
            "org.mockito.internal.verification.MockAwareVerificationMode.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.verification.MockAwareVerificationMode.getMock()"
        ],
        [
            "org.mockito.internal.verification.NoInteractions",
            "org.mockito.internal.verification.NoInteractions()"
        ],
        [
            "void",
            "org.mockito.internal.verification.NoInteractions.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.NoMoreInteractions",
            "org.mockito.internal.verification.NoMoreInteractions()"
        ],
        [
            "void",
            "org.mockito.internal.verification.NoMoreInteractions.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "void",
            "org.mockito.internal.verification.NoMoreInteractions.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"
        ],
        [
            "org.mockito.internal.verification.Only",
            "org.mockito.internal.verification.Only()"
        ],
        [
            "void",
            "org.mockito.internal.verification.Only.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.SingleRegisteredInvocation",
            "org.mockito.internal.verification.SingleRegisteredInvocation()"
        ],
        [
            "void",
            "org.mockito.internal.verification.SingleRegisteredInvocation.add(org.mockito.invocation.Invocation)"
        ],
        [
            "void",
            "org.mockito.internal.verification.SingleRegisteredInvocation.removeLast()"
        ],
        [
            "void",
            "org.mockito.internal.verification.SingleRegisteredInvocation.clear()"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.SingleRegisteredInvocation.isEmpty()"
        ],
        [
            "org.mockito.internal.verification.Times",
            "org.mockito.internal.verification.Times(int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.Times.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "void",
            "org.mockito.internal.verification.Times.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.verification.Times.toString()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.Times.description(java.lang.String)"
        ],
        [
            "org.mockito.internal.verification.VerificationDataImpl",
            "org.mockito.internal.verification.VerificationDataImpl(org.mockito.internal.stubbing.InvocationContainerImpl, org.mockito.internal.invocation.InvocationMatcher)"
        ],
        [
            "org.mockito.invocation.MatchableInvocation",
            "org.mockito.internal.verification.VerificationDataImpl.getTarget()"
        ],
        [
            "org.mockito.internal.invocation.InvocationMatcher",
            "org.mockito.internal.verification.VerificationDataImpl.getWanted()"
        ],
        [
            "org.mockito.internal.verification.VerificationEventImpl",
            "org.mockito.internal.verification.VerificationEventImpl(java.lang.Object, org.mockito.verification.VerificationMode, org.mockito.internal.verification.api.VerificationData, java.lang.Throwable)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.verification.VerificationEventImpl.getMock()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationEventImpl.getMode()"
        ],
        [
            "org.mockito.internal.verification.api.VerificationData",
            "org.mockito.internal.verification.VerificationEventImpl.getData()"
        ],
        [
            "java.lang.Throwable",
            "org.mockito.internal.verification.VerificationEventImpl.getVerificationError()"
        ],
        [
            "org.mockito.internal.verification.VerificationModeFactory",
            "org.mockito.internal.verification.VerificationModeFactory()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.atLeastOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.atLeast(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.only()"
        ],
        [
            "org.mockito.internal.verification.Times",
            "org.mockito.internal.verification.VerificationModeFactory.times(int)"
        ],
        [
            "org.mockito.internal.verification.Calls",
            "org.mockito.internal.verification.VerificationModeFactory.calls(int)"
        ],
        [
            "org.mockito.internal.verification.NoMoreInteractions",
            "org.mockito.internal.verification.VerificationModeFactory.noMoreInteractions()"
        ],
        [
            "org.mockito.internal.verification.NoInteractions",
            "org.mockito.internal.verification.VerificationModeFactory.noInteractions()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.atMostOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.atMost(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationModeFactory.description(org.mockito.verification.VerificationMode, java.lang.String)"
        ],
        [
            "org.mockito.internal.verification.VerificationOverTimeImpl",
            "org.mockito.internal.verification.VerificationOverTimeImpl(long, long, org.mockito.verification.VerificationMode, boolean)"
        ],
        [
            "org.mockito.internal.verification.VerificationOverTimeImpl",
            "org.mockito.internal.verification.VerificationOverTimeImpl(long, org.mockito.verification.VerificationMode, boolean, org.mockito.internal.util.Timer)"
        ],
        [
            "void",
            "org.mockito.internal.verification.VerificationOverTimeImpl.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.VerificationOverTimeImpl",
            "org.mockito.internal.verification.VerificationOverTimeImpl.copyWithVerificationMode(org.mockito.verification.VerificationMode)"
        ],
        [
            "boolean",
            "org.mockito.internal.verification.VerificationOverTimeImpl.isReturnOnSuccess()"
        ],
        [
            "long",
            "org.mockito.internal.verification.VerificationOverTimeImpl.getPollingPeriodMillis()"
        ],
        [
            "org.mockito.internal.util.Timer",
            "org.mockito.internal.verification.VerificationOverTimeImpl.getTimer()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationOverTimeImpl.getDelegate()"
        ],
        [
            "org.mockito.internal.verification.VerificationWrapper",
            "org.mockito.internal.verification.VerificationWrapper(WrapperType)"
        ],
        [
            "void",
            "org.mockito.internal.verification.VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.times(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.never()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.atLeastOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.atLeast(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.atMostOnce()"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.atMost(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.internal.verification.VerificationWrapper.only()"
        ],
        [
            "org.mockito.internal.verification.VerificationWrapperInOrderWrapper",
            "org.mockito.internal.verification.VerificationWrapperInOrderWrapper(org.mockito.internal.verification.VerificationWrapper<?>, org.mockito.internal.InOrderImpl)"
        ],
        [
            "void",
            "org.mockito.internal.verification.VerificationWrapperInOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)"
        ],
        [
            "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
            "org.mockito.internal.verification.api.VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "org.mockito.internal.verification.api.InOrderContext",
            "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getOrderingContext()"
        ],
        [
            "org.mockito.invocation.MatchableInvocation",
            "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getWanted()"
        ],
        [
            "java.lang.Integer[]",
            "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(java.util.List<org.mockito.ArgumentMatcher>, java.lang.Object[])"
        ],
        [
            "org.mockito.internal.verification.checkers.AtLeastDiscrepancy",
            "org.mockito.internal.verification.checkers.AtLeastDiscrepancy(int, int)"
        ],
        [
            "java.lang.String",
            "org.mockito.internal.verification.checkers.AtLeastDiscrepancy.getPluralizedWantedCount()"
        ],
        [
            "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker",
            "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker()"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "org.mockito.invocation.Location",
            "org.mockito.internal.verification.checkers.MissingInvocationChecker$1.convert(org.mockito.invocation.Invocation)"
        ],
        [
            "java.lang.Object",
            "org.mockito.internal.verification.checkers.MissingInvocationChecker$1.convert(java.lang.Object)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.checkNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.checkNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "void",
            "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.checkNumberOfInvocationsNonGreedy(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"
        ],
        [
            "org.mockito.junit.MockitoJUnit",
            "org.mockito.junit.MockitoJUnit()"
        ],
        [
            "org.mockito.junit.MockitoRule",
            "org.mockito.junit.MockitoJUnit.rule()"
        ],
        [
            "org.mockito.junit.MockitoTestRule",
            "org.mockito.junit.MockitoJUnit.testRule(java.lang.Object)"
        ],
        [
            "org.mockito.junit.VerificationCollector",
            "org.mockito.junit.MockitoJUnit.collector()"
        ],
        [
            "org.mockito.junit.MockitoJUnitRunner$Silent",
            "org.mockito.junit.MockitoJUnitRunner$Silent(java.lang.Class<?>)"
        ],
        [
            "org.mockito.junit.MockitoJUnitRunner$Strict",
            "org.mockito.junit.MockitoJUnitRunner$Strict(java.lang.Class<?>)"
        ],
        [
            "org.mockito.junit.MockitoJUnitRunner$StrictStubs",
            "org.mockito.junit.MockitoJUnitRunner$StrictStubs(java.lang.Class<?>)"
        ],
        [
            "org.mockito.junit.MockitoJUnitRunner",
            "org.mockito.junit.MockitoJUnitRunner(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.junit.MockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.junit.MockitoJUnitRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.junit.MockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "default",
            "org.mockito.listeners.MockCreationListener.void onStaticMockCreated(java.lang.Class<?>, org.mockito.mock.MockCreationSettings)"
        ],
        [
            "org.mockito.mock.SerializableMode[]",
            "org.mockito.mock.SerializableMode.values()"
        ],
        [
            "org.mockito.mock.SerializableMode",
            "org.mockito.mock.SerializableMode.valueOf(java.lang.String)"
        ],
        [
            "org.mockito.plugins.AnnotationEngine$NoAction",
            "org.mockito.plugins.AnnotationEngine$NoAction()"
        ],
        [
            "void",
            "org.mockito.plugins.AnnotationEngine$NoAction.close()"
        ],
        [
            "default",
            "org.mockito.plugins.MemberAccessor.java.lang.Object newInstance(java.lang.reflect.Constructor<?>, org.mockito.plugins.MemberAccessor$OnConstruction, java.lang.Object...)"
        ],
        [
            "<T> java.util.Optional<T>",
            "org.mockito.plugins.MockMaker.createSpy(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler, T)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$StaticMockControl<T>",
            "org.mockito.plugins.MockMaker.createStaticMock(java.lang.Class<T>, org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"
        ],
        [
            "<T> org.mockito.plugins.MockMaker$ConstructionMockControl<T>",
            "org.mockito.plugins.MockMaker.createConstructionMock(java.lang.Class<T>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.mock.MockCreationSettings<T>>, java.util.function.Function<org.mockito.MockedConstruction$Context, org.mockito.invocation.MockHandler<T>>, org.mockito.MockedConstruction$MockInitializer<T>)"
        ],
        [
            "org.mockito.quality.Strictness[]",
            "org.mockito.quality.Strictness.values()"
        ],
        [
            "org.mockito.quality.Strictness",
            "org.mockito.quality.Strictness.valueOf(java.lang.String)"
        ],
        [
            "void",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)"
        ],
        [
            "void",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)"
        ],
        [
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "org.mockito.runners.MockitoJUnitRunner$Silent",
            "org.mockito.runners.MockitoJUnitRunner$Silent(java.lang.Class<?>)"
        ],
        [
            "org.mockito.runners.MockitoJUnitRunner$Strict",
            "org.mockito.runners.MockitoJUnitRunner$Strict(java.lang.Class<?>)"
        ],
        [
            "org.mockito.runners.MockitoJUnitRunner",
            "org.mockito.runners.MockitoJUnitRunner(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.runners.MockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.runners.MockitoJUnitRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.runners.MockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "void",
            "org.mockito.runners.VerboseMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)"
        ],
        [
            "void",
            "org.mockito.runners.VerboseMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)"
        ],
        [
            "org.mockito.runners.VerboseMockitoJUnitRunner",
            "org.mockito.runners.VerboseMockitoJUnitRunner(java.lang.Class<?>)"
        ],
        [
            "void",
            "org.mockito.runners.VerboseMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"
        ],
        [
            "org.junit.runner.Description",
            "org.mockito.runners.VerboseMockitoJUnitRunner.getDescription()"
        ],
        [
            "void",
            "org.mockito.runners.VerboseMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"
        ],
        [
            "org.mockito.verification.After",
            "org.mockito.verification.After(long, org.mockito.verification.VerificationMode)"
        ],
        [
            "org.mockito.verification.Timeout",
            "org.mockito.verification.Timeout(long, org.mockito.verification.VerificationMode)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.verification.Timeout.atMost(int)"
        ],
        [
            "org.mockito.verification.VerificationMode",
            "org.mockito.verification.Timeout.never()"
        ],
        [
            "default",
            "org.mockito.verification.VerificationMode.org.mockito.verification.VerificationMode description(java.lang.String)"
        ]
    ]
}