{"wiremock-2.1.12.jar": [["void", "com.github.tomakehurst.wiremock.WireMockServer$1.run()"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, java.lang.Integer, com.github.tomakehurst.wiremock.common.FileSource, boolean, com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, com.github.tomakehurst.wiremock.common.FileSource, boolean, com.github.tomakehurst.wiremock.common.ProxySettings)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, com.github.tomakehurst.wiremock.common.FileSource, boolean)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.loadMappingsUsing(com.github.tomakehurst.wiremock.standalone.MappingsLoader)"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.WireMockServer.getGlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.addMockServiceRequestListener(com.github.tomakehurst.wiremock.http.RequestListener)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.enableRecordMappings(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.common.FileSource)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.stop()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.start()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.shutdown()"], ["int", "com.github.tomakehurst.wiremock.WireMockServer.port()"], ["int", "com.github.tomakehurst.wiremock.WireMockServer.httpsPort()"], ["boolean", "com.github.tomakehurst.wiremock.WireMockServer.isRunning()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.givenThat(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.stubFor(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.editStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.removeStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.verify(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.verify(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.setGlobalFixedDelay(int)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.WireMockServer.listAllStubMappings()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetToDefaultMappings()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetScenarios()"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.WireMockServer.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.WireMockServer.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.WireMockServer.findUnmatchedRequests()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.shutdownServer()"], ["com.github.tomakehurst.wiremock.admin.AdminTasks", "com.github.tomakehurst.wiremock.admin.AdminTasks()"], ["com.github.tomakehurst.wiremock.admin.AdminTask", "com.github.tomakehurst.wiremock.admin.AdminTasks.taskFor(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.AdminTasks.requestSpecForTask(java.lang.Class<? extends com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["com.github.tomakehurst.wiremock.admin.EditStubMappingTask", "com.github.tomakehurst.wiremock.admin.EditStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.EditStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestPatternTask", "com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestPatternTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestPatternTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestTask", "com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.FindNearMissesForRequestTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.FindNearMissesForUnmatchedTask", "com.github.tomakehurst.wiremock.admin.FindNearMissesForUnmatchedTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.FindNearMissesForUnmatchedTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.FindRequestsTask", "com.github.tomakehurst.wiremock.admin.FindRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.FindRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.FindUnmatchedRequestsTask", "com.github.tomakehurst.wiremock.admin.FindUnmatchedRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.FindUnmatchedRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.GetRequestCountTask", "com.github.tomakehurst.wiremock.admin.GetRequestCountTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.GetRequestCountTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.GlobalSettingsUpdateTask", "com.github.tomakehurst.wiremock.admin.GlobalSettingsUpdateTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.GlobalSettingsUpdateTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.NotFoundAdminTask", "com.github.tomakehurst.wiremock.admin.NotFoundAdminTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.NotFoundAdminTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.RemoveStubMappingTask", "com.github.tomakehurst.wiremock.admin.RemoveStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.RemoveStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.RequestSpec(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.RequestSpec.requestSpec(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.admin.RequestSpec.method()"], ["java.lang.String", "com.github.tomakehurst.wiremock.admin.RequestSpec.path()"], ["boolean", "com.github.tomakehurst.wiremock.admin.RequestSpec.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.admin.RequestSpec.hashCode()"], ["com.github.tomakehurst.wiremock.admin.ResetRequestsTask", "com.github.tomakehurst.wiremock.admin.ResetRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.ResetRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.ResetScenariosTask", "com.github.tomakehurst.wiremock.admin.ResetScenariosTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.ResetScenariosTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.ResetTask", "com.github.tomakehurst.wiremock.admin.ResetTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.ResetTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.ResetToDefaultMappingsTask", "com.github.tomakehurst.wiremock.admin.ResetToDefaultMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.ResetToDefaultMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.RootRedirectTask", "com.github.tomakehurst.wiremock.admin.RootRedirectTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.RootRedirectTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.RootTask", "com.github.tomakehurst.wiremock.admin.RootTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.RootTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.SaveMappingsTask", "com.github.tomakehurst.wiremock.admin.SaveMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.SaveMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.ShutdownServerTask", "com.github.tomakehurst.wiremock.admin.ShutdownServerTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.ShutdownServerTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.admin.StubMappingTask", "com.github.tomakehurst.wiremock.admin.StubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.StubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.client.BasicCredentials", "com.github.tomakehurst.wiremock.client.BasicCredentials(java.lang.String, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.client.BasicCredentials.present()"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.client.BasicCredentials.asAuthorizationMultiValuePattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.BasicCredentials.asAuthorizationHeaderValue()"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.inScenario(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.whenScenarioStateIs(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willSetStateTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.build()"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.inScenario(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willSetStateTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.whenScenarioStateIs(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.test(java.lang.Object, java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.test(java.lang.Object, java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.test(java.lang.Object, java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.test(java.lang.Object, java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.test(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy(com.github.tomakehurst.wiremock.client.CountMatchingMode, int)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy.match(int)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy.toString()"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.listAllStubMappings()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetToDefaultMappings()"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.shutdownServer()"], ["int", "com.github.tomakehurst.wiremock.client.HttpAdminClient.port()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder.withAdditionalRequestHeader(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder.build()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.like(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.jsonResponse(java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.but()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withStatus(int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withHeader(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBodyFile(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBody(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBody(byte[])"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withFixedDelay(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withRandomDelay(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withLogNormalRandomDelay(double, double)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withUniformRandomDelay(int, int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformers(java.lang.String...)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformerParameter(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformer(java.lang.String, java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.proxiedFrom(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.responseDefinition()"], ["<T> com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.okForJson(T)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withHeaders(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBase64Body(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withStatusMessage(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withFault(com.github.tomakehurst.wiremock.http.Fault)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.build()"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forUnmatchedRequestPattern(com.github.tomakehurst.wiremock.verification.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forSingleUnmatchedRequest(com.github.tomakehurst.wiremock.verification.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forUnmatchedRequests(java.util.List<com.github.tomakehurst.wiremock.verification.NearMiss>)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(java.lang.String, com.github.tomakehurst.wiremock.verification.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, int, int)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.client.CountMatchingStrategy, int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(com.github.tomakehurst.wiremock.core.Admin)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.givenThat(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.stubFor(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.editStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.WireMock.listAllStubMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, int, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, java.lang.String, int, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configure()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToJson(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToJson(java.lang.String, boolean, boolean)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingJsonPath(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToXml(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingXPath(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingXPath(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.containing(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.notMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.absent()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.saveAllMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.reset()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetAllRequests()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetAllScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetToDefaultMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetToDefault()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.register(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.register(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.editStubMapping(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStubMapping(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.WireMock.allStubMappings()"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlPathEqualTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlPathMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.anyUrl()"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.lessThan(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.lessThanOrExactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.exactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.moreThanOrExactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.moreThan(int)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.get(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.post(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.put(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.delete(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.patch(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.head(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.options(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.trace(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.any(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.request(java.lang.String, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(com.github.tomakehurst.wiremock.matching.RequestMatcher)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.aResponse()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(com.github.tomakehurst.wiremock.client.CountMatchingStrategy, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(com.github.tomakehurst.wiremock.client.CountMatchingStrategy, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.getRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.putRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.deleteRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.patchRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.headRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.optionsRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.traceRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMadeFor(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMadeFor(com.github.tomakehurst.wiremock.matching.RequestMatcher)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalFixedDelay(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalFixedDelayVariable(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalRandomDelay(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalRandomDelayVariable(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.shutdown()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.shutdownServer()"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.AbstractFileSource$1.apply(java.io.File)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.AbstractFileSource$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource$2.accept(java.io.File)"], ["com.github.tomakehurst.wiremock.common.AbstractFileSource", "com.github.tomakehurst.wiremock.common.AbstractFileSource(java.io.File)"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getBinaryFileNamed(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.createIfNecessary()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getPath()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getUri()"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.writeTextFile(java.lang.String, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.writeBinaryFile(java.lang.String, byte[])"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource.exists()"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.BinaryFile(java.net.URI)"], ["byte[]", "com.github.tomakehurst.wiremock.common.BinaryFile.readContents()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.BinaryFile.getUri()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.BinaryFile.name()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.BinaryFile.toString()"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$1.apply(java.util.zip.ZipEntry)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$2.apply(java.util.zip.ZipEntry)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$2.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$3.apply(java.util.zip.ZipEntry)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$4.apply(java.io.File)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$4.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.ClasspathFileSource", "com.github.tomakehurst.wiremock.common.ClasspathFileSource(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getBinaryFileNamed(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.createIfNecessary()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.child(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getPath()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getUri()"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.writeTextFile(java.lang.String, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.writeBinaryFile(java.lang.String, byte[])"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.exists()"], ["com.github.tomakehurst.wiremock.common.ConsoleNotifier", "com.github.tomakehurst.wiremock.common.ConsoleNotifier(boolean)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.ContentTypes", "com.github.tomakehurst.wiremock.common.ContentTypes()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ContentTypes.determineFileExtension(java.lang.String, com.github.tomakehurst.wiremock.http.ContentTypeHeader, byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ContentTypes.determineTextFileExtension(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Dates", "com.github.tomakehurst.wiremock.common.Dates()"], ["java.util.Date", "com.github.tomakehurst.wiremock.common.Dates.parse(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Dates.format(java.util.Date)"], ["com.github.tomakehurst.wiremock.common.Encoding", "com.github.tomakehurst.wiremock.common.Encoding()"], ["byte[]", "com.github.tomakehurst.wiremock.common.Encoding.decodeBase64(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Encoding.encodeBase64(byte[])"], ["com.github.tomakehurst.wiremock.common.Exceptions", "com.github.tomakehurst.wiremock.common.Exceptions()"], ["<T> T", "com.github.tomakehurst.wiremock.common.Exceptions.throwUnchecked(java.lang.Throwable, java.lang.Class<T>)"], ["void", "com.github.tomakehurst.wiremock.common.Exceptions.throwUnchecked(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.FatalStartupException", "com.github.tomakehurst.wiremock.common.FatalStartupException(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.Gzip", "com.github.tomakehurst.wiremock.common.Gzip()"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.unGzip(byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Gzip.unGzipToString(byte[])"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.gzip(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.Gzip.isGzipped(byte[])"], ["com.github.tomakehurst.wiremock.common.HttpClientUtils", "com.github.tomakehurst.wiremock.common.HttpClientUtils()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpClientUtils.getEntityAsStringAndCloseStream(org.apache.http.HttpResponse)"], ["byte[]", "com.github.tomakehurst.wiremock.common.HttpClientUtils.getEntityAsByteArrayAndCloseStream(org.apache.http.HttpResponse)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.port(int)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.needClientAuth(boolean)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.build()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["int", "com.github.tomakehurst.wiremock.common.HttpsSettings.port()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStorePath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStorePassword()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStoreType()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.enabled()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStorePath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStorePassword()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStoreType()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.needClientAuth()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.hasTrustStore()"], ["com.github.tomakehurst.wiremock.common.KeyStoreSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStore()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.toString()"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.aJettySettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withAcceptors(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withAcceptQueueSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withRequestHeaderSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.build()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.JettySettings.toString()"], ["<T> T", "com.github.tomakehurst.wiremock.common.Json.read(java.lang.String, java.lang.Class<T>)"], ["<T> java.lang.String", "com.github.tomakehurst.wiremock.common.Json.write(T)"], ["byte[]", "com.github.tomakehurst.wiremock.common.Json.toByteArray(java.lang.Object)"], ["com.fasterxml.jackson.databind.JsonNode", "com.github.tomakehurst.wiremock.common.Json.node(java.lang.String)"], ["int", "com.github.tomakehurst.wiremock.common.Json.maxDeepSize(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode)"], ["int", "com.github.tomakehurst.wiremock.common.Json.deepSize(com.fasterxml.jackson.databind.JsonNode)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Json.prettyPrint(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.KeyStoreSettings", "com.github.tomakehurst.wiremock.common.KeyStoreSettings(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.path()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.password()"], ["java.security.KeyStore", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.loadStore()"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.LocalNotifier", "com.github.tomakehurst.wiremock.common.LocalNotifier()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.common.LocalNotifier.notifier()"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier.set(com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.common.ProxySettings(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.common.ProxySettings.fromString(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ProxySettings.host()"], ["int", "com.github.tomakehurst.wiremock.common.ProxySettings.port()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ProxySettings.toString()"], ["com.github.tomakehurst.wiremock.common.ServletContextFileSource", "com.github.tomakehurst.wiremock.common.ServletContextFileSource(javax.servlet.ServletContext, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.ServletContextFileSource.child(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.SingleRootFileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource(java.io.File)"], ["com.github.tomakehurst.wiremock.common.SingleRootFileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource.child(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SingleRootFileSource.toString()"], ["com.github.tomakehurst.wiremock.common.Slf4jNotifier", "com.github.tomakehurst.wiremock.common.Slf4jNotifier(boolean)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.Strings", "com.github.tomakehurst.wiremock.common.Strings()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Strings.stringFromBytes(byte[])"], ["byte[]", "com.github.tomakehurst.wiremock.common.Strings.bytesFromString(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.TextFile(java.net.URI)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.TextFile.readContentsAsString()"], ["com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.generate(com.github.tomakehurst.wiremock.http.Request, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.generate(com.github.tomakehurst.wiremock.http.Request, java.lang.String, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.common.Urls$1.transformEntry(java.lang.String, java.util.Collection<java.lang.String>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.Urls$1.transformEntry(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.Urls", "com.github.tomakehurst.wiremock.common.Urls()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.QueryParameter>", "com.github.tomakehurst.wiremock.common.Urls.splitQuery(java.lang.String)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.QueryParameter>", "com.github.tomakehurst.wiremock.common.Urls.splitQuery(java.net.URI)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Urls.decode(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.VeryShortIdGenerator", "com.github.tomakehurst.wiremock.common.VeryShortIdGenerator()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.VeryShortIdGenerator.generate()"], ["com.github.tomakehurst.wiremock.common.Xml", "com.github.tomakehurst.wiremock.common.Xml()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Xml.prettyPrint(java.lang.String)"], ["org.w3c.dom.Document", "com.github.tomakehurst.wiremock.common.Xml.read(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.ConfigurationException", "com.github.tomakehurst.wiremock.core.ConfigurationException(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockApp$1.apply(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockApp$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.core.WireMockApp", "com.github.tomakehurst.wiremock.core.WireMockApp(boolean, com.github.tomakehurst.wiremock.standalone.MappingsLoader, com.github.tomakehurst.wiremock.core.MappingsSaver, boolean, com.google.common.base.Optional<java.lang.Integer>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.core.Container)"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.core.WireMockApp.getGlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.loadMappingsUsing(com.github.tomakehurst.wiremock.standalone.MappingsLoader)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.core.WireMockApp.serveStubFor(com.github.tomakehurst.wiremock.http.Request)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.listAllStubMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetToDefaultMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetScenarios()"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.core.WireMockApp.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["int", "com.github.tomakehurst.wiremock.core.WireMockApp.port()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.shutdownServer()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.options()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.port(int)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.dynamicPort()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpsPort(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.dynamicHttpsPort()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.containerThreads(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyAcceptors(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyAcceptQueueSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyHeaderBufferSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.needClientAuth(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.enableBrowserProxying(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia(com.github.tomakehurst.wiremock.common.ProxySettings)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.withRootDirectory(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.usingFilesUnderDirectory(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.usingFilesUnderClasspath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.fileSource(com.github.tomakehurst.wiremock.common.FileSource)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.notifier(com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.bindAddress(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.disableRequestJournal()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.maxRequestJournalEntries(com.google.common.base.Optional<java.lang.Integer>)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.recordRequestHeadersForMatching(java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.preserveHostHeader(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyHostHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(java.lang.String...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(com.github.tomakehurst.wiremock.extension.Extension...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpServerFactory(com.github.tomakehurst.wiremock.http.HttpServerFactory)"], ["int", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.portNumber()"], ["int", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.containerThreads()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpsSettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettySettings()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.browserProxyingEnabled()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.filesRoot()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.notifier()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.requestJournalDisabled()"], ["java.lang.String", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.bindAddress()"], ["com.github.tomakehurst.wiremock.http.HttpServerFactory", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpServerFactory()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.shouldPreserveHostHeader()"], ["java.lang.String", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyHostHeader()"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensionsOfType(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.extension.AbstractTransformer", "com.github.tomakehurst.wiremock.extension.AbstractTransformer()"], ["boolean", "com.github.tomakehurst.wiremock.extension.AbstractTransformer.applyGlobally()"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$1.apply(com.github.tomakehurst.wiremock.extension.Extension)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.Extension", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$2.apply(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$2.apply(java.lang.Object)"], ["java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$3.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$3.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$4.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>)"], ["boolean", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$4.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.ExtensionLoader", "com.github.tomakehurst.wiremock.extension.ExtensionLoader()"], ["<T> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.loadExtension(java.lang.String...)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.load(java.lang.String...)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.asMap(java.lang.Iterable<com.github.tomakehurst.wiremock.extension.Extension>)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.load(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>...)"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> com.google.common.base.Predicate<java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.valueAssignableFrom(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.extension.Parameters.getInt(java.lang.String)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.extension.Parameters.getBoolean(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.Parameters.getString(java.lang.String)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.empty()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.from(java.util.Map<java.lang.String, java.lang.Object>)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.one(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer", "com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer.transform(com.github.tomakehurst.wiremock.http.Request, java.lang.Object, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.extension.ResponseTransformer", "com.github.tomakehurst.wiremock.extension.ResponseTransformer()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ResponseTransformer.transform(com.github.tomakehurst.wiremock.http.Request, java.lang.Object, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettings()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.global.GlobalSettings.getFixedDelay()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettings.setFixedDelay(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.http.DelayDistribution", "com.github.tomakehurst.wiremock.global.GlobalSettings.getDelayDistribution()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettings.setDelayDistribution(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettings.copy()"], ["boolean", "com.github.tomakehurst.wiremock.global.GlobalSettings.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.global.GlobalSettings.hashCode()"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder.replaceWith(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder.get()"], ["com.github.tomakehurst.wiremock.global.RequestDelaySpec", "com.github.tomakehurst.wiremock.global.RequestDelaySpec(int)"], ["int", "com.github.tomakehurst.wiremock.global.RequestDelaySpec.milliseconds()"], ["com.github.tomakehurst.wiremock.http.AbstractRequestHandler", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler(com.github.tomakehurst.wiremock.http.ResponseRenderer)"], ["void", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler.addRequestListener(com.github.tomakehurst.wiremock.http.RequestListener)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler.handle(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.AdminRequestHandler", "com.github.tomakehurst.wiremock.http.AdminRequestHandler(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.ResponseRenderer)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.http.AdminRequestHandler.handleRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.BasicResponseRenderer", "com.github.tomakehurst.wiremock.http.BasicResponseRenderer()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.BasicResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(byte[])"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(com.fasterxml.jackson.databind.JsonNode)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body.none()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.asString()"], ["byte[]", "com.github.tomakehurst.wiremock.http.Body.asBytes()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.asBase64()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isBinary()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isAbsent()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isPresent()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.Body.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.toString()"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.from(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.value()"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.absent()"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.or(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.mimeTypePart()"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie.cookie(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie.absent()"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.Cookie.isPresent()"], ["boolean", "com.github.tomakehurst.wiremock.http.Cookie.isAbsent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Cookie.getValue()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Cookie.toString()"], ["void", "com.github.tomakehurst.wiremock.http.Fault$1.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["void", "com.github.tomakehurst.wiremock.http.Fault$2.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["void", "com.github.tomakehurst.wiremock.http.Fault$3.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["com.github.tomakehurst.wiremock.http.Fault[]", "com.github.tomakehurst.wiremock.http.Fault.values()"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.Fault.valueOf(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.GenericHttpUriRequest", "com.github.tomakehurst.wiremock.http.GenericHttpUriRequest(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.GenericHttpUriRequest.getMethod()"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpClientFactory$1.isTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpClientFactory", "com.github.tomakehurst.wiremock.http.HttpClientFactory()"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int, int, com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.KeyStoreSettings)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int, int)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(com.github.tomakehurst.wiremock.http.CaseInsensitiveKey, java.util.Collection<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(java.lang.String, java.util.Collection<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.httpHeader(com.github.tomakehurst.wiremock.http.CaseInsensitiveKey, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.httpHeader(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.absent(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.empty(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.HttpHeader.caseInsensitiveKey()"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeader.keyEquals(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeader.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeader.hashCode()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(com.github.tomakehurst.wiremock.http.HttpHeader...)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(java.lang.Iterable<com.github.tomakehurst.wiremock.http.HttpHeader>)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.noHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeaders.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.HttpHeaders.getContentTypeHeader()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.copyOf(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeaders.size()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.plus(com.github.tomakehurst.wiremock.http.HttpHeader...)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeaders.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeaders.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.HttpHeaders.toString()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$1.apply(java.util.Map$Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$1.apply(java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$2.apply(com.fasterxml.jackson.databind.JsonNode)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["<T> java.lang.Iterable<T>", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.all(java.util.Iterator<T>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer()"], ["void", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer.serialize(com.github.tomakehurst.wiremock.http.HttpHeaders, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.tomakehurst.wiremock.http.LogNormal", "com.github.tomakehurst.wiremock.http.LogNormal(double, double)"], ["long", "com.github.tomakehurst.wiremock.http.LogNormal.sampleMillis()"], ["com.github.tomakehurst.wiremock.http.MimeType[]", "com.github.tomakehurst.wiremock.http.MimeType.values()"], ["com.github.tomakehurst.wiremock.http.MimeType", "com.github.tomakehurst.wiremock.http.MimeType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MimeType.toString()"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue$1.apply(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue$1.apply(java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue$2.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.MultiValue$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.MultiValue", "com.github.tomakehurst.wiremock.http.MultiValue(java.lang.String, java.util.List<java.lang.String>)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.isPresent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.key()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.firstValue()"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.isSingleValued()"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.containsValue(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.hasValueMatching(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.toString()"], ["com.github.tomakehurst.wiremock.http.ProxyResponseRenderer", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer(com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.KeyStoreSettings, boolean, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ProxyResponseRenderer", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter(java.lang.String, java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter.queryParam(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter.absent(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.http.RequestMethod(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.http.RequestMethod.fromString(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.value()"], ["boolean", "com.github.tomakehurst.wiremock.http.RequestMethod.isOneOf(com.github.tomakehurst.wiremock.http.RequestMethod...)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.http.RequestMethod.match(com.github.tomakehurst.wiremock.http.RequestMethod)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.http.RequestMethod.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.RequestMethod.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.toString()"], ["com.github.tomakehurst.wiremock.http.RequestMethod[]", "com.github.tomakehurst.wiremock.http.RequestMethod.values()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.http.RequestMethod.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.like(com.github.tomakehurst.wiremock.http.Response)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.but()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.status(int)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.statusMessage(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.body(byte[])"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.body(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.headers(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.configured(boolean)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.fault(com.github.tomakehurst.wiremock.http.Fault)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.fromProxy(boolean)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.renderedFromDefinition(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response$Builder.build()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response.notConfigured()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response.response()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response(int, java.lang.String, byte[], com.github.tomakehurst.wiremock.http.HttpHeaders, boolean, com.github.tomakehurst.wiremock.http.Fault, boolean, com.google.common.base.Optional<com.github.tomakehurst.wiremock.http.ResponseDefinition>)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response(int, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, boolean, com.github.tomakehurst.wiremock.http.Fault, boolean, com.google.common.base.Optional<com.github.tomakehurst.wiremock.http.ResponseDefinition>)"], ["int", "com.github.tomakehurst.wiremock.http.Response.getStatus()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.getStatusMessage()"], ["byte[]", "com.github.tomakehurst.wiremock.http.Response.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.getBodyAsString()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.Response.getHeaders()"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.Response.getFault()"], ["boolean", "com.github.tomakehurst.wiremock.http.Response.wasConfigured()"], ["boolean", "com.github.tomakehurst.wiremock.http.Response.isFromProxy()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.toString()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String, java.lang.String, com.fasterxml.jackson.databind.JsonNode, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, com.github.tomakehurst.wiremock.http.HttpHeaders, java.lang.Integer, com.github.tomakehurst.wiremock.http.DelayDistribution, java.lang.String, com.github.tomakehurst.wiremock.http.Fault, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String, byte[], com.fasterxml.jackson.databind.JsonNode, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, com.github.tomakehurst.wiremock.http.HttpHeaders, java.lang.Integer, com.github.tomakehurst.wiremock.http.DelayDistribution, java.lang.String, com.github.tomakehurst.wiremock.http.Fault, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, byte[])"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notFound()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.ok()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.created()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.noContent()"], ["<T> com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.okForJson(T)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.redirectTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notConfigured()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.browserProxy(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.copyOf(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getAdditionalProxyRequestHeaders()"], ["int", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getStatus()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getStatusMessage()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBody()"], ["byte[]", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getByteBody()"], ["byte[]", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getByteBodyIfBinary()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBase64Body()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBodyFileName()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.wasConfigured()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getFixedDelayMilliseconds()"], ["com.github.tomakehurst.wiremock.http.DelayDistribution", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getDelayDistribution()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getProxyUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getProxyBaseUrl()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBodyFile()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBodyContent()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBinaryBodyContent()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.isProxyResponse()"], ["com.github.tomakehurst.wiremock.http.Request", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getOriginalRequest()"], ["void", "com.github.tomakehurst.wiremock.http.ResponseDefinition.setOriginalRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getFault()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getTransformerParameters()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.hasTransformer(com.github.tomakehurst.wiremock.extension.AbstractTransformer)"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.ResponseDefinition.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.toString()"], ["com.github.tomakehurst.wiremock.http.StubRequestHandler", "com.github.tomakehurst.wiremock.http.StubRequestHandler(com.github.tomakehurst.wiremock.core.StubServer, com.github.tomakehurst.wiremock.http.ResponseRenderer)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.http.StubRequestHandler.handleRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.StubResponseRenderer", "com.github.tomakehurst.wiremock.http.StubResponseRenderer(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.global.GlobalSettingsHolder, com.github.tomakehurst.wiremock.http.ProxyResponseRenderer, java.util.List<com.github.tomakehurst.wiremock.extension.ResponseTransformer>)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.StubResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.UniformDistribution", "com.github.tomakehurst.wiremock.http.UniformDistribution(int, int)"], ["long", "com.github.tomakehurst.wiremock.http.UniformDistribution.sampleMillis()"], ["com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory", "com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory()"], ["void", "com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory.customize(javax.net.ssl.SSLEngine)"], ["com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.randomDataAndCloseConnection()"], ["com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory()"], ["com.github.tomakehurst.wiremock.core.FaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory.buildFaultInjector(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.start()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.stop()"], ["boolean", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.isRunning()"], ["int", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.port()"], ["int", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.httpsPort()"], ["com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory()"], ["com.github.tomakehurst.wiremock.http.HttpServer", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory.buildHttpServer(com.github.tomakehurst.wiremock.core.Options, com.github.tomakehurst.wiremock.http.AdminRequestHandler, com.github.tomakehurst.wiremock.http.StubRequestHandler)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector$1.succeeded()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector$1.failed(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.randomDataAndCloseConnection()"], ["com.github.tomakehurst.wiremock.jetty9.JettyUtils", "com.github.tomakehurst.wiremock.jetty9.JettyUtils()"], ["org.eclipse.jetty.server.Response", "com.github.tomakehurst.wiremock.jetty9.JettyUtils.unwrapResponse(javax.servlet.http.HttpServletResponse)"], ["java.net.URI", "com.github.tomakehurst.wiremock.jetty9.JettyUtils.getUri(org.eclipse.jetty.server.Request)"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockClassRule$1.evaluate()"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockClassRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockClassRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockRule$1.evaluate()"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(com.github.tomakehurst.wiremock.core.Options, boolean)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule$1.evaluate()"], ["com.github.tomakehurst.wiremock.junit.WireMockStaticRule", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockStaticRule", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule()"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule.stopServer()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.AbsentPattern", "com.github.tomakehurst.wiremock.matching.AbsentPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbsentPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbsentPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbstractRegexPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbstractRegexPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.AnythingPattern", "com.github.tomakehurst.wiremock.matching.AnythingPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.AnythingPattern", "com.github.tomakehurst.wiremock.matching.AnythingPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.AnythingPattern.getAnything()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AnythingPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.AnythingPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AnythingPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.ContainsPattern", "com.github.tomakehurst.wiremock.matching.ContainsPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.ContainsPattern.getContains()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.ContainsPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.ContainsPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition.getName()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition.getParameters()"], ["double", "com.github.tomakehurst.wiremock.matching.EagerMatchResult.getDistance()"], ["boolean", "com.github.tomakehurst.wiremock.matching.EagerMatchResult.isExactMatch()"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$1.getDistance()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$DecodePathFunction.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$DecodePathFunction.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.EqualToJsonPattern", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern(java.lang.String, java.lang.Boolean, java.lang.Boolean)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getEqualToJson()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.isIgnoreArrayOrder()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.isIgnoreExtraElements()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getExpected()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.match(java.lang.String)"], ["com.fasterxml.jackson.databind.JsonNode", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getNodeAtPath(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToPattern$1.getDistance()"], ["com.github.tomakehurst.wiremock.matching.EqualToPattern", "com.github.tomakehurst.wiremock.matching.EqualToPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToPattern.getEqualTo()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToPattern.match(java.lang.Object)"], ["void", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1$1.comparisonPerformed(org.xmlunit.diff.Comparison, org.xmlunit.diff.ComparisonResult)"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1.getDistance()"], ["org.xmlunit.diff.ComparisonResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$2.evaluate(org.xmlunit.diff.Comparison, org.xmlunit.diff.ComparisonResult)"], ["com.github.tomakehurst.wiremock.matching.EqualToXmlPattern", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.getEqualToXml()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.getExpected()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern.getMatchesJsonPath()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.withXPathNamespace(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.getMatchesXPath()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.getXPathNamespaces()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.MatchResult$1.getDistance()"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult$1.compareTo(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$2.apply(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.partialMatch(double)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.exactMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.noMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.of(boolean)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregate(java.util.List<com.github.tomakehurst.wiremock.matching.MatchResult>)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregate(com.github.tomakehurst.wiremock.matching.MatchResult...)"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult.compareTo(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult.compareTo(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$1.apply(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$2.compare(com.github.tomakehurst.wiremock.matching.MatchResult, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$2.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.of(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.absent()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.match(com.github.tomakehurst.wiremock.http.MultiValue)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getValuePattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.hashCode()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern$1.getDistance()"], ["com.github.tomakehurst.wiremock.matching.NegativeRegexPattern", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.getDoesNotMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RegexPattern", "com.github.tomakehurst.wiremock.matching.RegexPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RegexPattern.getMatches()"], ["com.github.tomakehurst.wiremock.matching.RequestMatcher", "com.github.tomakehurst.wiremock.matching.RequestMatcher()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestMatcher.getExpected()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$1.match(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$1.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$2.match(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$2.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestMatcherExtension", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.match(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.getName()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.match(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.getName()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$2.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$3.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$4.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$4.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$5.apply(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$5.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern$6.apply(com.github.tomakehurst.wiremock.http.Request)"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern$6.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.UrlPattern, com.github.tomakehurst.wiremock.http.RequestMethod, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.client.BasicCredentials, java.util.List<com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.RequestMethod, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.client.BasicCredentials, java.util.List<com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.RequestMatcher)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern.everything()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(com.github.tomakehurst.wiremock.http.Request, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.combineBasicAuthAndOtherHeaders()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.isMatchedBy(com.github.tomakehurst.wiremock.http.Request, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPathPattern()"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlMatcher()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.matching.RequestPattern.getMethod()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getHeaders()"], ["com.github.tomakehurst.wiremock.client.BasicCredentials", "com.github.tomakehurst.wiremock.matching.RequestPattern.getBasicAuthCredentials()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getQueryParameters()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getCookies()"], ["com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition", "com.github.tomakehurst.wiremock.matching.RequestPattern.getCustomMatcher()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.hasCustomMatcher()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.RequestPattern.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(com.github.tomakehurst.wiremock.matching.RequestMatcher)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(com.github.tomakehurst.wiremock.http.RequestMethod, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.newRequestPattern(com.github.tomakehurst.wiremock.http.RequestMethod, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.newRequestPattern()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.forCustomMatcher(com.github.tomakehurst.wiremock.matching.RequestMatcher)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.forCustomMatcher(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.allRequests()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withUrl(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withoutHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withBasicAuth(com.github.tomakehurst.wiremock.client.BasicCredentials)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.build()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern$1.apply(java.lang.reflect.Constructor<?>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.StringValuePattern(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.isPresent()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.isAbsent()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.nullSafeIsAbsent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.getValue()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.StringValuePattern.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$1.apply(java.lang.reflect.Constructor<?>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer()"], ["void", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer.serialize(com.github.tomakehurst.wiremock.matching.StringValuePattern, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.matching.UrlPathPattern(com.github.tomakehurst.wiremock.matching.StringValuePattern, boolean)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.UrlPattern(com.github.tomakehurst.wiremock.matching.StringValuePattern, boolean)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.UrlPattern.fromOneOf(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.getName()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.isRegex()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.UrlPattern.getPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.getExpected()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.toString()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.UrlPattern.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.isSpecified()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter()"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.init(javax.servlet.FilterConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.destroy()"], ["com.github.tomakehurst.wiremock.servlet.NoFaultInjector", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.randomDataAndCloseConnection()"], ["com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory", "com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory()"], ["com.github.tomakehurst.wiremock.core.FaultInjector", "com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory.buildFaultInjector(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["com.github.tomakehurst.wiremock.servlet.NotImplementedContainer", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer()"], ["int", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer.port()"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer.shutdown()"], ["com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver()"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver.saveMappings(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse(javax.servlet.http.HttpServletResponse, java.lang.String, javax.servlet.http.HttpServletRequest)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse.sendRedirect(java.lang.String)"], ["com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter()"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.init(javax.servlet.FilterConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.destroy()"], ["com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet()"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet.init(javax.servlet.ServletConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet.applyResponse(com.github.tomakehurst.wiremock.http.Response, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter(javax.servlet.http.HttpServletRequest)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter(javax.servlet.http.HttpServletRequest, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getAbsoluteUrl()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getMethod()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getClientIp()"], ["byte[]", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBodyAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBodyAsBase64()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.header(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.contentTypeHeader()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.containsHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getHeaders()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getCookies()"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.queryParameter(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.isBrowserProxyRequest()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.toString()"], ["com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener()"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener.contextInitialized(javax.servlet.ServletContextEvent)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener.contextDestroyed(javax.servlet.ServletContextEvent)"], ["com.github.tomakehurst.wiremock.standalone.CommandLineOptions", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions(java.lang.String...)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.verboseLoggingEnabled()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.recordMappingsEnabled()"], ["com.github.tomakehurst.wiremock.http.HttpServerFactory", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.httpServerFactory()"], ["int", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.portNumber()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.bindAddress()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.httpsSettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.jettySettings()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.help()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.helpText()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.specifiesProxyUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyUrl()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.shouldPreserveHostHeader()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyHostHeader()"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.extensionsOfType(java.lang.Class<T>)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.browserProxyingEnabled()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyVia()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.filesRoot()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.notifier()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.requestJournalDisabled()"], ["int", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.containerThreads()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.toString()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource$1.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource$2.apply(com.github.tomakehurst.wiremock.common.TextFile)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource(com.github.tomakehurst.wiremock.common.FileSource)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.saveMappings(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.loadMappingsInto(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner$1.loadMappingsInto(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["com.github.tomakehurst.wiremock.standalone.WireMockServerRunner", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner()"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.run(java.lang.String...)"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.stop()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.isRunning()"], ["int", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.port()"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.main(java.lang.String...)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$1.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings(java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>, com.github.tomakehurst.wiremock.verification.RequestJournal, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer>, com.github.tomakehurst.wiremock.common.FileSource)"], ["com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings()"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.serveFor(com.github.tomakehurst.wiremock.http.Request)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.addMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.removeMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.editMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.reset()"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.resetScenarios()"], ["com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult", "com.github.tomakehurst.wiremock.stubbing.ListStubMappingsResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenario(java.lang.String)"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenario.inStartedState()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.Scenario.getState()"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenario.setState(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenario.reset()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenario.stateIs(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.Scenario.toString()"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.stubbing.ServedStub$1.apply(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.stubbing.ServedStub$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServedStub$2.apply(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServedStub$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.stubbing.ServedStub(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.stubbing.ServedStub.noExactMatch(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.stubbing.ServedStub", "com.github.tomakehurst.wiremock.stubbing.ServedStub.exactMatch(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServedStub.isNoExactMatch()"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.stubbing.ServedStub.getRequest()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.stubbing.ServedStub.getResponseDefinition()"], ["int", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$1.compare(com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["int", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$1.compare(java.lang.Object, java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$2.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$3.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet()"], ["void", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.add(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.remove(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.replace(com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.clear()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.toString()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping.buildFrom(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.buildJsonStringFor(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.util.UUID", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getUuid()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setUuid(java.util.UUID)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getRequest()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getResponse()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setRequest(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setResponse(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.toString()"], ["long", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getInsertionIndex()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setInsertionIndex(long)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isTransient()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setTransient(boolean)"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getPriority()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setPriority(java.lang.Integer)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getScenarioName()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setScenarioName(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getRequiredScenarioState()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setRequiredScenarioState(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getNewScenarioState()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setNewScenarioState(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.updateScenarioStateIfRequired()"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getScenario()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setScenario(com.github.tomakehurst.wiremock.stubbing.Scenario)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isInScenario()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.modifiesScenarioState()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isIndependentOfScenarioState()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.requiresCurrentScenarioState()"], ["int", "com.github.tomakehurst.wiremock.stubbing.StubMapping.comparePriorityWith(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.stubbing.StubMapping.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder$1.apply(com.github.tomakehurst.wiremock.http.HttpHeader)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.core.Admin, java.util.List<com.github.tomakehurst.wiremock.http.CaseInsensitiveKey>)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder.requestReceived(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.Response)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder.setIdGenerator(com.github.tomakehurst.wiremock.common.IdGenerator)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$1.apply(com.github.tomakehurst.wiremock.verification.Diff$Section<?>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$1.apply(java.lang.Object)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$2.apply(com.github.tomakehurst.wiremock.verification.Diff$Section<?>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.Diff$Section", "com.github.tomakehurst.wiremock.verification.Diff$Section(com.github.tomakehurst.wiremock.matching.ValueMatcher<V>, V, java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$Section.getExpected()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.Diff$Section.getActual()"], ["com.github.tomakehurst.wiremock.verification.Diff", "com.github.tomakehurst.wiremock.verification.Diff(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.Diff.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.Diff.junitStyleDiffMessage(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.DisabledRequestJournal", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal()"], ["int", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.reset()"], ["void", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.requestReceived(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.verification.FindNearMissesResult(java.util.List<com.github.tomakehurst.wiremock.verification.NearMiss>)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult(java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>, boolean)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult.withRequestJournalDisabled()"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult.withRequests(java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>)"], ["com.github.tomakehurst.wiremock.verification.FindServedStubsResult", "com.github.tomakehurst.wiremock.verification.FindServedStubsResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServedStub>)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$1.apply(com.github.tomakehurst.wiremock.http.Request)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$2.apply(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal(com.google.common.base.Optional<java.lang.Integer>)"], ["int", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.requestReceived(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.Response)"], ["void", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.requestReceived(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["void", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.reset()"], ["com.github.tomakehurst.wiremock.verification.JournalBasedResult", "com.github.tomakehurst.wiremock.verification.JournalBasedResult(boolean)"], ["boolean", "com.github.tomakehurst.wiremock.verification.JournalBasedResult.requestJournalIsDisabled()"], ["void", "com.github.tomakehurst.wiremock.verification.JournalBasedResult.assertRequestJournalEnabled()"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.LoggedRequest.createFrom(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.LoggedRequest(java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>, boolean, java.util.Date, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getAbsoluteUrl()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getMethod()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getClientIp()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.verification.LoggedRequest.header(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.verification.LoggedRequest.contentTypeHeader()"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest.containsHeader(java.lang.String)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getCookies()"], ["byte[]", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBodyAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBodyAsBase64()"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.verification.LoggedRequest.queryParameter(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getHeaders()"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest.isBrowserProxyRequest()"], ["java.util.Date", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getLoggedDate()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getLoggedDateString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.toString()"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.NearMiss.getRequest()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.verification.NearMiss.getStubMapping()"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.verification.NearMiss.getRequestPattern()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.verification.NearMiss.getMatchResult()"], ["int", "com.github.tomakehurst.wiremock.verification.NearMiss.compareTo(com.github.tomakehurst.wiremock.verification.NearMiss)"], ["com.github.tomakehurst.wiremock.verification.Diff", "com.github.tomakehurst.wiremock.verification.NearMiss.getDiff()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.NearMiss.toString()"], ["int", "com.github.tomakehurst.wiremock.verification.NearMiss.compareTo(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$1.compare(com.github.tomakehurst.wiremock.verification.NearMiss, com.github.tomakehurst.wiremock.verification.NearMiss)"], ["int", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$1.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$3.apply(com.github.tomakehurst.wiremock.stubbing.ServedStub)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.NearMissCalculator", "com.github.tomakehurst.wiremock.verification.NearMissCalculator(com.github.tomakehurst.wiremock.stubbing.StubMappings, com.github.tomakehurst.wiremock.verification.RequestJournal)"], ["com.github.tomakehurst.wiremock.verification.RequestJournalDisabledException", "com.github.tomakehurst.wiremock.verification.RequestJournalDisabledException()"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult(java.lang.Integer, boolean)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.from(java.lang.String)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.withCount(int)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.withRequestJournalDisabled()"], ["int", "com.github.tomakehurst.wiremock.verification.VerificationResult.getCount()"]]}