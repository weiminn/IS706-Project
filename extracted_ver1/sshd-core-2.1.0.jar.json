{"sshd-core-2.1.0.jar": [["default", "org.apache.sshd.server.ServerAuthenticationManager.java.lang.String getUserAuthFactoriesNameList()"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(boolean)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, boolean)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.nio.file.Path, boolean, java.nio.file.LinkOption...)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, java.nio.file.Path, boolean, java.nio.file.LinkOption...)"], ["java.lang.String", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator.getUsername()"], ["boolean", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator.isStrict()"], ["org.apache.sshd.server.auth.password.UserAuthPasswordFactory", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory()"], ["org.apache.sshd.server.auth.password.UserAuthPassword", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory.create()"], ["org.apache.sshd.server.auth.gss.UserAuthGSS", "org.apache.sshd.server.auth.gss.UserAuthGSS()"], ["void", "org.apache.sshd.server.auth.gss.UserAuthGSS.destroy()"], ["org.ietf.jgss.Oid", "org.apache.sshd.server.auth.gss.UserAuthGSS.createOID(java.lang.String)"], ["org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator(java.util.Collection<? extends java.security.PublicKey>)"], ["java.util.Collection<? extends java.security.PublicKey>", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.getKeySet()"], ["boolean", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["boolean", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession, java.util.Collection<? extends java.security.PublicKey>)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator.fromAuthorizedEntries(org.apache.sshd.common.config.keys.PublicKeyEntryResolver, java.util.Collection<? extends org.apache.sshd.common.config.keys.AuthorizedKeyEntry>)"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive()"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell)"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, int)"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, java.util.concurrent.Executor, boolean, int)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setInputStream(java.io.InputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setOutputStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setErrorStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setExitCallback(org.apache.sshd.server.ExitCallback)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setSession(org.apache.sshd.server.session.ServerSession)"], ["synchronized", "org.apache.sshd.server.shell.InvertedShellWrapper.void start(org.apache.sshd.server.Environment)"], ["synchronized", "org.apache.sshd.server.shell.InvertedShellWrapper.void destroy()"], ["java.lang.String", "org.apache.sshd.server.shell.InvertedShellWrapper.toString()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer.getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.server.kex.DHGEXServer.newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.server.kex.DHGEXServer.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["boolean", "org.apache.sshd.server.kex.DHGEXServer.next(int, org.apache.sshd.common.util.buffer.Buffer)"], ["<L extends org.apache.sshd.server.SignalListener> L", "org.apache.sshd.server.SignalListener.validateListener(L)"], ["org.apache.sshd.server.command.AbstractFileSystemCommand", "org.apache.sshd.server.command.AbstractFileSystemCommand(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["java.nio.file.FileSystem", "org.apache.sshd.server.command.AbstractFileSystemCommand.getFileSystem()"], ["void", "org.apache.sshd.server.command.AbstractFileSystemCommand.setFileSystem(java.nio.file.FileSystem)"], ["void", "org.apache.sshd.server.command.AbstractFileSystemCommand.destroy()"], ["org.apache.sshd.server.global.TcpipForwardHandler", "org.apache.sshd.server.global.TcpipForwardHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.TcpipForwardHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.TcpipForwardHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.SshServer()"], ["java.lang.String", "org.apache.sshd.server.SshServer.getHost()"], ["void", "org.apache.sshd.server.SshServer.setHost(java.lang.String)"], ["int", "org.apache.sshd.server.SshServer.getPort()"], ["void", "org.apache.sshd.server.SshServer.setPort(int)"], ["void", "org.apache.sshd.server.SshServer.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)"], ["void", "org.apache.sshd.server.SshServer.setShellFactory(org.apache.sshd.common.Factory<org.apache.sshd.server.command.Command>)"], ["org.apache.sshd.server.session.SessionFactory", "org.apache.sshd.server.SshServer.getSessionFactory()"], ["void", "org.apache.sshd.server.SshServer.setSessionFactory(org.apache.sshd.server.session.SessionFactory)"], ["org.apache.sshd.server.session.ServerProxyAcceptor", "org.apache.sshd.server.SshServer.getServerProxyAcceptor()"], ["void", "org.apache.sshd.server.SshServer.setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)"], ["org.apache.sshd.server.command.CommandFactory", "org.apache.sshd.server.SshServer.getCommandFactory()"], ["void", "org.apache.sshd.server.SshServer.setCommandFactory(org.apache.sshd.server.command.CommandFactory)"], ["void", "org.apache.sshd.server.SshServer.setSubsystemFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.command.Command>>)"], ["org.apache.sshd.server.auth.password.PasswordAuthenticator", "org.apache.sshd.server.SshServer.getPasswordAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.SshServer.getPublickeyAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator", "org.apache.sshd.server.SshServer.getKeyboardInteractiveAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.SshServer.getGSSAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)"], ["org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator", "org.apache.sshd.server.SshServer.getHostBasedAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)"], ["boolean", "org.apache.sshd.server.SshServer.isStarted()"], ["void", "org.apache.sshd.server.SshServer.start()"], ["void", "org.apache.sshd.server.SshServer.stop()"], ["void", "org.apache.sshd.server.SshServer.stop(boolean)"], ["void", "org.apache.sshd.server.SshServer.open()"], ["java.lang.String", "org.apache.sshd.server.SshServer.toString()"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.SshServer.setUpDefaultServer()"], ["org.apache.sshd.agent.local.ProxyAgentFactory", "org.apache.sshd.agent.local.ProxyAgentFactory()"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.ProxyAgentFactory.createClient(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.local.ProxyAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)"], ["boolean", "org.apache.sshd.agent.local.ProxyAgentFactory.isPreferredUnixAgent(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.agent.unix.AgentForwardedChannel", "org.apache.sshd.agent.unix.AgentForwardedChannel(long, java.lang.String)"], ["void", "org.apache.sshd.agent.unix.AgentForwardedChannel.run()"], ["org.apache.sshd.agent.common.AgentDelegate", "org.apache.sshd.agent.common.AgentDelegate(org.apache.sshd.agent.SshAgent)"], ["boolean", "org.apache.sshd.agent.common.AgentDelegate.isOpen()"], ["void", "org.apache.sshd.agent.common.AgentDelegate.close()"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.common.AgentDelegate.getIdentities()"], ["byte[]", "org.apache.sshd.agent.common.AgentDelegate.sign(java.security.PublicKey, byte[])"], ["void", "org.apache.sshd.agent.common.AgentDelegate.addIdentity(java.security.KeyPair, java.lang.String)"], ["void", "org.apache.sshd.agent.common.AgentDelegate.removeIdentity(java.security.PublicKey)"], ["void", "org.apache.sshd.agent.common.AgentDelegate.removeAllIdentities()"], ["java.lang.String", "org.apache.sshd.agent.SshAgentConstants.getCommandMessageName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath$1.get(int)"], ["int", "org.apache.sshd.common.file.util.BasePath$1.size()"], ["java.lang.Object", "org.apache.sshd.common.file.util.BasePath$1.get(int)"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.hasNext()"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.next()"], ["java.lang.Object", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.next()"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException()"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.String)"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.Throwable)"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.io.nio2.Nio2Service.getIoServiceEventListener()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.io.nio2.Nio2Service.getFactoryManager()"], ["org.apache.sshd.common.io.IoHandler", "org.apache.sshd.common.io.nio2.Nio2Service.getIoHandler()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.dispose()"], ["java.util.Map<java.lang.Long, org.apache.sshd.common.io.IoSession>", "org.apache.sshd.common.io.nio2.Nio2Service.getManagedSessions()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.sessionClosed(org.apache.sshd.common.io.nio2.Nio2Session)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$5.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$5.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$5.create(java.lang.Object[])"], ["byte[]", "org.apache.sshd.common.kex.AbstractDH.getK()"], ["byte[]", "org.apache.sshd.common.kex.AbstractDH.stripLeadingZeroes(byte[])"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$11.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$11.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$11.create(java.lang.Object[])"], ["void", "org.apache.sshd.common.channel.AbstractChannel.addRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.removeRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)"], ["int", "org.apache.sshd.common.channel.AbstractChannel.getId()"], ["int", "org.apache.sshd.common.channel.AbstractChannel.getRecipient()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.AbstractChannel.getLocalWindow()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.AbstractChannel.getRemoteWindow()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.channel.AbstractChannel.getSession()"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.channel.AbstractChannel.getParentPropertyResolver()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.common.channel.AbstractChannel.getExecutorService()"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.channel.AbstractChannel.getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.channel.AbstractChannel.resolveChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleRequest(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.init(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.session.Session, int)"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isInitialized()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.channel.AbstractChannel.getChannelListenerProxy()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleClose()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.signalChannelClosed(java.lang.Throwable)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.channel.AbstractChannel.writePacket(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleData(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleExtendedData(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleEof()"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isEofSignalled()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleSuccess()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleFailure()"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isEofSent()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.channel.AbstractChannel.getProperties()"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["java.lang.String", "org.apache.sshd.common.channel.AbstractChannel.toString()"], ["org.apache.sshd.common.channel.exception.SshChannelOpenException", "org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelOpenException", "org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String, java.lang.Throwable)"], ["int", "org.apache.sshd.common.channel.exception.SshChannelOpenException.getReasonCode()"], ["java.lang.String", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.getRequestName()"], ["org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.getPublicKeysParser()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.toString()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.forward.SocksProxy$Socks4", "org.apache.sshd.common.forward.SocksProxy$Socks4(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, java.net.InetSocketAddress)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.apache.sshd.common.forward.LocalForwardingEntry.getAlias()"], ["boolean", "org.apache.sshd.common.forward.LocalForwardingEntry.equals(java.lang.Object)"], ["int", "org.apache.sshd.common.forward.LocalForwardingEntry.hashCode()"], ["java.lang.String", "org.apache.sshd.common.forward.LocalForwardingEntry.toString()"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry.findMatchingEntry(java.lang.String, int, java.util.Collection<? extends org.apache.sshd.common.forward.LocalForwardingEntry>)"], ["org.apache.sshd.common.session.helpers.MultipleAttachedSessionException", "org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String)"], ["org.apache.sshd.common.session.helpers.MultipleAttachedSessionException", "org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.client.auth.UserAuthFactory>, java.util.List<java.lang.String>)"], ["org.apache.sshd.client.auth.password.UserAuthPassword", "org.apache.sshd.client.auth.password.UserAuthPassword()"], ["void", "org.apache.sshd.client.auth.password.UserAuthPassword.init(org.apache.sshd.client.session.ClientSession, java.lang.String)"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientHostKeys()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientHostname(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.create()"], ["org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager, java.util.Iterator<java.security.KeyPair>)"], ["boolean", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.hasNext()"], ["org.apache.sshd.client.auth.pubkey.KeyPairIdentity", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.next()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.next()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.init(org.apache.sshd.client.session.ClientSession, java.lang.String)"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.destroy()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient$1.getName()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.client.kex.DHGClient$1.create()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient$1.toString()"], ["java.lang.Object", "org.apache.sshd.client.kex.DHGClient$1.create()"], ["org.apache.sshd.client.channel.ClientChannelEvent[]", "org.apache.sshd.client.channel.ClientChannelEvent.values()"], ["org.apache.sshd.client.channel.ClientChannelEvent", "org.apache.sshd.client.channel.ClientChannelEvent.valueOf(java.lang.String)"], ["org.apache.sshd.client.channel.PtyCapableChannelSession", "org.apache.sshd.client.channel.PtyCapableChannelSession(boolean)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setupSensibleDefaultPty()"], ["boolean", "org.apache.sshd.client.channel.PtyCapableChannelSession.isAgentForwarding()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setAgentForwarding(boolean)"], ["boolean", "org.apache.sshd.client.channel.PtyCapableChannelSession.isUsePty()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setUsePty(boolean)"], ["java.lang.String", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyType()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyType(java.lang.String)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyColumns()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyColumns(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyLines()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyLines(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyWidth()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyWidth(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyHeight()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyHeight(int)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyModes()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyModes(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setEnv(java.lang.String, java.lang.String)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.sendWindowChange(int, int)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.sendWindowChange(int, int, int, int)"], ["org.apache.sshd.client.session.ClientConnectionService", "org.apache.sshd.client.session.ClientConnectionService(org.apache.sshd.client.session.AbstractClientSession)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientConnectionService.getClientSession()"], ["org.apache.sshd.client.session.AbstractClientSession", "org.apache.sshd.client.session.ClientConnectionService.getSession()"], ["void", "org.apache.sshd.client.session.ClientConnectionService.start()"], ["org.apache.sshd.agent.common.AgentForwardSupport", "org.apache.sshd.client.session.ClientConnectionService.getAgentForwardSupport()"], ["org.apache.sshd.server.x11.X11ForwardSupport", "org.apache.sshd.client.session.ClientConnectionService.getX11ForwardSupport()"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.client.session.ClientConnectionService.getSession()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.session.ClientConnectionService.getSession()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.Throwable, java.lang.String, java.lang.String)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException.getPrompt()"], ["java.lang.String", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException.getLanguage()"], ["javax.security.auth.login.AppConfigurationEntry[]", "org.apache.sshd.server.auth.gss.CredentialHelper$FixedLoginConfiguration.getAppConfigurationEntry(java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.CredentialHelper$FixedLoginConfiguration.refresh()"], ["org.apache.sshd.server.auth.gss.UserAuthGSSFactory", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory()"], ["java.lang.String", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.getName()"], ["org.apache.sshd.server.auth.UserAuth", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.create()"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory$1.create()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Boolean", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)"], ["org.apache.sshd.server.shell.UnknownCommand", "org.apache.sshd.server.shell.UnknownCommand(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.getCommand()"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.getMessage()"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setInputStream(java.io.InputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setOutputStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setErrorStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setExitCallback(org.apache.sshd.server.ExitCallback)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.run()"], ["void", "org.apache.sshd.server.shell.UnknownCommand.start(org.apache.sshd.server.Environment)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.destroy()"], ["int", "org.apache.sshd.server.shell.UnknownCommand.hashCode()"], ["boolean", "org.apache.sshd.server.shell.UnknownCommand.equals(java.lang.Object)"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.toString()"], ["org.apache.sshd.server.channel.ChannelSession$CommandCloseable", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable(org.apache.sshd.server.channel.ChannelSession)"], ["boolean", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.isClosed()"], ["boolean", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.isClosing()"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["org.apache.sshd.common.future.CloseFuture", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.close(boolean)"], ["org.apache.sshd.server.x11.ChannelForwardedX11", "org.apache.sshd.server.x11.ChannelForwardedX11(org.apache.sshd.common.io.IoSession)"], ["synchronized", "org.apache.sshd.server.x11.ChannelForwardedX11.org.apache.sshd.client.future.OpenFuture open()"], ["void", "org.apache.sshd.server.x11.ChannelForwardedX11.handleEof()"], ["org.apache.sshd.server.global.KeepAliveHandler", "org.apache.sshd.server.global.KeepAliveHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.KeepAliveHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.KeepAliveHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.server.forward.AgentForwardingFilter", "org.apache.sshd.server.forward.AgentForwardingFilter.of(boolean)"], ["org.apache.sshd.server.forward.AcceptAllForwardingFilter", "org.apache.sshd.server.forward.AcceptAllForwardingFilter()"], ["org.apache.sshd.server.forward.TcpipServerChannel", "org.apache.sshd.server.forward.TcpipServerChannel(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpipServerChannel.getTcpipChannelType()"], ["java.net.SocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getLocalAddress()"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel.setLocalAddress(java.net.SocketAddress)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getTunnelEntrance()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getTunnelExit()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getOriginatorAddress()"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.server.forward.TcpipServerChannel.getIoSession()"], ["org.apache.sshd.agent.local.AgentServerProxy", "org.apache.sshd.agent.local.AgentServerProxy(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.AgentServerProxy.createClient()"], ["java.lang.String", "org.apache.sshd.agent.local.AgentServerProxy.getId()"], ["boolean", "org.apache.sshd.agent.local.AgentServerProxy.isOpen()"], ["void", "org.apache.sshd.agent.local.AgentServerProxy.close()"], ["synchronized", "org.apache.sshd.agent.unix.AprLibrary.org.apache.sshd.agent.unix.AprLibrary getInstance()"], ["synchronized", "org.apache.sshd.agent.unix.AprLibrary.boolean isInitialized()"], ["org.apache.sshd.agent.common.DefaultAgentForwardSupport", "org.apache.sshd.agent.common.DefaultAgentForwardSupport(org.apache.sshd.common.session.ConnectionService)"], ["java.lang.String", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.initialize()"], ["void", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.close()"], ["java.lang.String", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.toString()"], ["org.apache.sshd.common.file.util.BasePath", "org.apache.sshd.common.file.util.BasePath(FS, java.lang.String, java.util.List<java.lang.String>)"], ["FS", "org.apache.sshd.common.file.util.BasePath.getFileSystem()"], ["boolean", "org.apache.sshd.common.file.util.BasePath.isAbsolute()"], ["T", "org.apache.sshd.common.file.util.BasePath.getRoot()"], ["T", "org.apache.sshd.common.file.util.BasePath.getFileName()"], ["T", "org.apache.sshd.common.file.util.BasePath.getParent()"], ["int", "org.apache.sshd.common.file.util.BasePath.getNameCount()"], ["T", "org.apache.sshd.common.file.util.BasePath.getName(int)"], ["T", "org.apache.sshd.common.file.util.BasePath.subpath(int, int)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.startsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.startsWith(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.endsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.endsWith(java.lang.String)"], ["T", "org.apache.sshd.common.file.util.BasePath.normalize()"], ["T", "org.apache.sshd.common.file.util.BasePath.resolve(java.nio.file.Path)"], ["T", "org.apache.sshd.common.file.util.BasePath.resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolveSibling(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolveSibling(java.lang.String)"], ["T", "org.apache.sshd.common.file.util.BasePath.relativize(java.nio.file.Path)"], ["T", "org.apache.sshd.common.file.util.BasePath.toAbsolutePath()"], ["java.net.URI", "org.apache.sshd.common.file.util.BasePath.toUri()"], ["java.io.File", "org.apache.sshd.common.file.util.BasePath.toFile()"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.BasePath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...)"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.BasePath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...)"], ["int", "org.apache.sshd.common.file.util.BasePath.compareTo(java.nio.file.Path)"], ["int", "org.apache.sshd.common.file.util.BasePath.hashCode()"], ["boolean", "org.apache.sshd.common.file.util.BasePath.equals(java.lang.Object)"], ["java.lang.String", "org.apache.sshd.common.file.util.BasePath.toString()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.toAbsolutePath()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.relativize(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolve(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.normalize()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.subpath(int, int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getParent()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getFileName()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getRoot()"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.util.BasePath.getFileSystem()"], ["int", "org.apache.sshd.common.file.util.BasePath.compareTo(java.lang.Object)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.create(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.getIoServiceProvider()"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.newInstance(java.lang.Class<T>)"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.tryLoad(java.lang.String, java.util.ServiceLoader<T>)"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.newInstance(java.lang.Class<T>, java.lang.String)"], ["org.apache.sshd.common.io.DefaultIoServiceFactoryFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.getDefaultIoServiceFactoryFactoryInstance()"], ["org.apache.sshd.common.io.nio2.Nio2Session", "org.apache.sshd.common.io.nio2.Nio2Session(org.apache.sshd.common.io.nio2.Nio2Service, org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousSocketChannel)"], ["long", "org.apache.sshd.common.io.nio2.Nio2Session.getId()"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.getAttribute(java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.setAttribute(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.setAttributeIfAbsent(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.removeAttribute(java.lang.Object)"], ["java.net.SocketAddress", "org.apache.sshd.common.io.nio2.Nio2Session.getRemoteAddress()"], ["java.net.SocketAddress", "org.apache.sshd.common.io.nio2.Nio2Session.getLocalAddress()"], ["java.nio.channels.AsynchronousSocketChannel", "org.apache.sshd.common.io.nio2.Nio2Session.getSocket()"], ["org.apache.sshd.common.io.IoHandler", "org.apache.sshd.common.io.nio2.Nio2Session.getIoHandler()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.suspend()"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.io.nio2.Nio2Session.writePacket(org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.io.nio2.Nio2Service", "org.apache.sshd.common.io.nio2.Nio2Session.getService()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(int)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(byte[])"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(byte[], int, int)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(java.nio.ByteBuffer)"], ["java.lang.String", "org.apache.sshd.common.io.nio2.Nio2Session.toString()"], ["org.apache.sshd.common.io.IoService", "org.apache.sshd.common.io.nio2.Nio2Session.getService()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$7.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$7.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$7.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$9.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$9.isSupported()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$9.isGroupExchange()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>, java.math.BigInteger, java.math.BigInteger)"], ["byte[]", "org.apache.sshd.common.kex.DHG.getE()"], ["void", "org.apache.sshd.common.kex.DHG.setP(byte[])"], ["void", "org.apache.sshd.common.kex.DHG.setG(byte[])"], ["void", "org.apache.sshd.common.kex.DHG.setF(byte[])"], ["java.math.BigInteger", "org.apache.sshd.common.kex.DHG.getP()"], ["void", "org.apache.sshd.common.kex.DHG.setP(java.math.BigInteger)"], ["java.math.BigInteger", "org.apache.sshd.common.kex.DHG.getG()"], ["void", "org.apache.sshd.common.kex.DHG.setG(java.math.BigInteger)"], ["void", "org.apache.sshd.common.kex.DHG.setF(java.math.BigInteger)"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.DHG.getHash()"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream$1.operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream$1.operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getBuffer()"], ["org.apache.sshd.common.io.IoReadFuture", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.verify(long)"], ["int", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getRead()"], ["java.lang.Throwable", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getException()"], ["java.lang.Object", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.verify(long)"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulState[]", "org.apache.sshd.common.channel.AbstractChannel$GracefulState.values()"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulState", "org.apache.sshd.common.channel.AbstractChannel$GracefulState.valueOf(java.lang.String)"], ["org.apache.sshd.common.future.DefaultKeyExchangeFuture", "org.apache.sshd.common.future.DefaultKeyExchangeFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.verify(long)"], ["java.lang.Throwable", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.getException()"], ["java.lang.Object", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.verify(long)"], ["java.lang.String", "org.apache.sshd.common.forward.PortForwardingEventListener$1.toString()"], ["default", "org.apache.sshd.common.forward.PortForwardingInformationProvider.boolean isLocalPortForwardingStartedForPort(int)"], ["default", "org.apache.sshd.common.forward.PortForwardingInformationProvider.boolean isRemotePortForwardingStartedForPort(int)"], ["<T> T", "org.apache.sshd.common.session.Session.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["boolean", "org.apache.sshd.common.session.Session.isValidVersionPrefix(java.lang.String)"], ["<T> T", "org.apache.sshd.common.session.Session.resolveAttribute(org.apache.sshd.common.session.Session, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractSession.getSession(org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractSession.getSession(org.apache.sshd.common.io.IoSession, boolean)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.attachSession(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.session.helpers.AbstractSession)"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getServerVersion()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getClientVersion()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.common.session.helpers.AbstractSession.getKex()"], ["byte[]", "org.apache.sshd.common.session.helpers.AbstractSession.getSessionId()"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.common.session.helpers.AbstractSession.getIoSession()"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.session.helpers.AbstractSession.getFactoryManager()"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.session.helpers.AbstractSession.getParentPropertyResolver()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.session.helpers.AbstractSession.getProperties()"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractSession.getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractSession.resolveUnknownChannelReferenceHandler()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getNegotiatedKexParameter(org.apache.sshd.common.kex.KexProposalOption)"], ["org.apache.sshd.common.cipher.CipherInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getCipherInformation(boolean)"], ["org.apache.sshd.common.compression.CompressionInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getCompressionInformation(boolean)"], ["org.apache.sshd.common.mac.MacInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getMacInformation(boolean)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isAuthenticated()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setAuthenticated()"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.session.helpers.AbstractSession.getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.session.helpers.AbstractSession.resolveChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.messageReceived(org.apache.sshd.common.util.Readable)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.sendIgnoreMessage(byte...)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.sendDebugMessage(boolean, java.lang.Object, java.lang.String)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.exceptionCaught(java.lang.Throwable)"], ["<T extends org.apache.sshd.common.Service> T", "org.apache.sshd.common.session.helpers.AbstractSession.getService(java.lang.Class<T>)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.writePacket(org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.writePacket(org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.request(java.lang.String, org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.createBuffer(byte)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.createBuffer(byte, int)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.prepareBuffer(byte, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.disconnect(int, java.lang.String)"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getUsername()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setUsername(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.common.session.helpers.AbstractSession.getLock()"], ["org.apache.sshd.common.session.ReservedSessionMessagesHandler", "org.apache.sshd.common.session.helpers.AbstractSession.getReservedSessionMessagesHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addSessionListener(org.apache.sshd.common.session.SessionListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removeSessionListener(org.apache.sshd.common.session.SessionListener)"], ["org.apache.sshd.common.session.SessionListener", "org.apache.sshd.common.session.helpers.AbstractSession.getSessionListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.session.helpers.AbstractSession.getChannelListenerProxy()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.helpers.AbstractSession.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.common.session.helpers.AbstractSession.reExchangeKeys()"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.session.helpers.AbstractSession.getLocalForwardsBindings()"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isLocalPortForwardingStartedForPort(int)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.session.helpers.AbstractSession.getBoundLocalPortForward(int)"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.session.helpers.AbstractSession.getRemoteForwardsBindings()"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isRemotePortForwardingStartedForPort(int)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.session.helpers.AbstractSession.getBoundRemotePortForward(int)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.resetIdleTimeout()"], ["org.apache.sshd.common.session.Session$TimeoutStatus", "org.apache.sshd.common.session.helpers.AbstractSession.getTimeoutStatus()"], ["long", "org.apache.sshd.common.session.helpers.AbstractSession.getAuthTimeout()"], ["long", "org.apache.sshd.common.session.helpers.AbstractSession.getIdleTimeout()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.toString()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient.getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.client.kex.DHGClient.newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.client.kex.DHGClient.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["boolean", "org.apache.sshd.client.kex.DHGClient.next(int, org.apache.sshd.common.util.buffer.Buffer)"], ["long", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.getConnectTimeout()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.setConnectTimeout(long)"], ["long", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.getAuthenticationTimeout()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.setAuthenticationTimeout(long)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.sessionLogin(java.net.SocketAddress, java.lang.String, java.lang.String)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.sessionLogin(java.net.SocketAddress, java.lang.String, java.security.KeyPair)"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.wrap(org.apache.sshd.client.session.ClientSessionCreator, java.nio.channels.Channel)"], ["org.apache.sshd.client.channel.ChannelExec", "org.apache.sshd.client.channel.ChannelExec(java.lang.String)"], ["void", "org.apache.sshd.client.channel.ChannelExec.handleSuccess()"], ["void", "org.apache.sshd.client.channel.ChannelExec.handleFailure()"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder()"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.serverKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.hostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.clientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.filePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.ClientBuilder.build(boolean)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.builder()"], ["org.apache.sshd.common.helpers.AbstractFactoryManager", "org.apache.sshd.client.ClientBuilder.build(boolean)"], ["org.apache.sshd.client.session.ClientSessionImpl", "org.apache.sshd.client.session.ClientSessionImpl(org.apache.sshd.client.ClientFactoryManager, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.session.ClientSessionImpl.auth()"], ["void", "org.apache.sshd.client.session.ClientSessionImpl.exceptionCaught(java.lang.Throwable)"], ["void", "org.apache.sshd.client.session.ClientSessionImpl.switchToNextService()"], ["java.util.Map<java.lang.Object, java.lang.Object>", "org.apache.sshd.client.session.ClientSessionImpl.getMetadataMap()"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.server.auth.UserAuthFactory>, java.util.List<java.lang.String>)"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.CredentialHelper.creds(org.ietf.jgss.GSSManager, java.lang.String, java.lang.String)"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.CredentialHelper$G.run()"], ["java.lang.Object", "org.apache.sshd.server.auth.gss.CredentialHelper$G.run()"], ["org.apache.sshd.server.auth.AsyncAuthException", "org.apache.sshd.server.auth.AsyncAuthException()"], ["void", "org.apache.sshd.server.auth.AsyncAuthException.setAuthed(boolean)"], ["void", "org.apache.sshd.server.auth.AsyncAuthException.addListener(java.util.function.Consumer<? super java.lang.Boolean>)"], ["org.apache.sshd.server.auth.UserAuthNoneFactory", "org.apache.sshd.server.auth.UserAuthNoneFactory()"], ["org.apache.sshd.server.auth.UserAuthNone", "org.apache.sshd.server.auth.UserAuthNoneFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.UserAuthNoneFactory.create()"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry()"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry(java.lang.String, boolean)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.PromptEntry.getPrompt()"], ["void", "org.apache.sshd.server.auth.keyboard.PromptEntry.setPrompt(java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.PromptEntry.isEcho()"], ["void", "org.apache.sshd.server.auth.keyboard.PromptEntry.setEcho(boolean)"], ["<B extends org.apache.sshd.common.util.buffer.Buffer> B", "org.apache.sshd.server.auth.keyboard.PromptEntry.append(B)"], ["int", "org.apache.sshd.server.auth.keyboard.PromptEntry.hashCode()"], ["boolean", "org.apache.sshd.server.auth.keyboard.PromptEntry.equals(java.lang.Object)"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry.clone()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.PromptEntry.toString()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.PromptEntry.clone()"], ["org.apache.sshd.server.shell.TtyFilterInputStream", "org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)"], ["org.apache.sshd.server.shell.TtyFilterInputStream", "org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.void write(int)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.void write(byte[], int, int)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int available()"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int read()"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int read(byte[], int, int)"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable$1.run()"], ["org.apache.sshd.server.StandardEnvironment", "org.apache.sshd.server.StandardEnvironment()"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener, org.apache.sshd.server.Signal...)"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener)"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener, java.util.Collection<org.apache.sshd.server.Signal>)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.sshd.server.StandardEnvironment.getEnv()"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.server.StandardEnvironment.getPtyModes()"], ["void", "org.apache.sshd.server.StandardEnvironment.removeSignalListener(org.apache.sshd.server.SignalListener)"], ["void", "org.apache.sshd.server.StandardEnvironment.signal(org.apache.sshd.server.Signal)"], ["void", "org.apache.sshd.server.StandardEnvironment.set(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.StandardEnvironment.toString()"], ["org.apache.sshd.server.Signal[]", "org.apache.sshd.server.Signal.values()"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.valueOf(java.lang.String)"], ["int", "org.apache.sshd.server.Signal.getNumeric()"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.get(java.lang.String)"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.get(int)"], ["org.apache.sshd.server.global.NoMoreSessionsHandler", "org.apache.sshd.server.global.NoMoreSessionsHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.NoMoreSessionsHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.NoMoreSessionsHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.server.forward.StaticDecisionForwardingFilter", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter(boolean)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.isAccepted()"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.forward.ForwardedTcpipFactory", "org.apache.sshd.server.forward.ForwardedTcpipFactory()"], ["org.apache.sshd.server.session.ServerSessionImpl", "org.apache.sshd.server.session.ServerSessionImpl(org.apache.sshd.server.ServerFactoryManager, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.agent.local.AgentForwardedChannel", "org.apache.sshd.agent.local.AgentForwardedChannel(java.lang.String)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.AgentForwardedChannel.getAgent()"], ["org.apache.sshd.agent.local.ChannelAgentForwarding$AgentClient", "org.apache.sshd.agent.local.ChannelAgentForwarding$AgentClient(org.apache.sshd.agent.local.ChannelAgentForwarding)"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer()"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.agent.SshAgent, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.unix.AgentServer.getAgent()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.unix.AgentServer.getExecutorService()"], ["java.lang.String", "org.apache.sshd.agent.unix.AgentServer.start()"], ["void", "org.apache.sshd.agent.unix.AgentServer.close()"], ["java.lang.String", "org.apache.sshd.agent.common.AbstractAgentProxy.getChannelType()"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.setChannelType(java.lang.String)"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.common.AbstractAgentProxy.getExecutorService()"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.common.AbstractAgentProxy.getIdentities()"], ["byte[]", "org.apache.sshd.agent.common.AbstractAgentProxy.sign(java.security.PublicKey, byte[])"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.addIdentity(java.security.KeyPair, java.lang.String)"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.removeIdentity(java.security.PublicKey)"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.removeAllIdentities()"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.close()"], ["org.apache.sshd.common.file.root.RootedFileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystemProvider()"], ["java.lang.String", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getScheme()"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileSystem(java.net.URI, java.util.Map<java.lang.String, ?>)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileSystem(java.net.URI)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileSystem(java.nio.file.Path, java.util.Map<java.lang.String, ?>)"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getPath(java.net.URI)"], ["java.io.InputStream", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)"], ["java.io.OutputStream", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)"], ["java.nio.channels.FileChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...)"], ["java.nio.channels.AsynchronousFileChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newAsynchronousFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute<?>...)"], ["java.nio.channels.SeekableByteChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newByteChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createLink(java.nio.file.Path, java.nio.file.Path)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.delete(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.deleteIfExists(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readSymbolicLink(java.nio.file.Path)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.isSameFile(java.nio.file.Path, java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.isHidden(java.nio.file.Path)"], ["java.nio.file.FileStore", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileStore(java.nio.file.Path)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.checkAccess(java.nio.file.Path, java.nio.file.AccessMode...)"], ["<V extends java.nio.file.attribute.FileAttributeView> V", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileAttributeView(java.nio.file.Path, java.lang.Class<V>, java.nio.file.LinkOption...)"], ["<A extends java.nio.file.attribute.BasicFileAttributes> A", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readAttributes(java.nio.file.Path, java.lang.Class<A>, java.nio.file.LinkOption...)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...)"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException()"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.String)"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.Throwable)"], ["org.apache.sshd.common.io.nio2.Nio2Connector", "org.apache.sshd.common.io.nio2.Nio2Connector(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)"], ["org.apache.sshd.common.io.IoConnectFuture", "org.apache.sshd.common.io.nio2.Nio2Connector.connect(java.net.SocketAddress, java.net.SocketAddress)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.io.AbstractIoWriteFuture.verify(long)"], ["boolean", "org.apache.sshd.common.io.AbstractIoWriteFuture.isWritten()"], ["java.lang.Throwable", "org.apache.sshd.common.io.AbstractIoWriteFuture.getException()"], ["java.lang.Object", "org.apache.sshd.common.io.AbstractIoWriteFuture.verify(long)"], ["org.apache.sshd.common.kex.BuiltinDHFactories[]", "org.apache.sshd.common.kex.BuiltinDHFactories.values()"], ["org.apache.sshd.common.kex.BuiltinDHFactories", "org.apache.sshd.common.kex.BuiltinDHFactories.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.kex.BuiltinDHFactories.getName()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories.isSupported()"], ["java.lang.String", "org.apache.sshd.common.kex.BuiltinDHFactories.toString()"], ["void", "org.apache.sshd.common.kex.BuiltinDHFactories.registerExtension(org.apache.sshd.common.kex.DHFactory)"], ["org.apache.sshd.common.kex.DHFactory", "org.apache.sshd.common.kex.BuiltinDHFactories.unregisterExtension(java.lang.String)"], ["org.apache.sshd.common.kex.BuiltinDHFactories", "org.apache.sshd.common.kex.BuiltinDHFactories.fromFactoryName(java.lang.String)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories.isGroupExchange()"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.lang.String)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.lang.String...)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.common.kex.DHFactory", "org.apache.sshd.common.kex.BuiltinDHFactories.resolveFactory(java.lang.String)"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$12.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$12.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$12.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult(java.util.List<org.apache.sshd.common.kex.DHFactory>, java.util.List<java.lang.String>)"], ["org.apache.sshd.common.channel.ChannelOutputStream", "org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, org.slf4j.Logger, byte, boolean)"], ["org.apache.sshd.common.channel.ChannelOutputStream", "org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, long, org.slf4j.Logger, byte, boolean)"], ["org.apache.sshd.common.channel.AbstractChannel", "org.apache.sshd.common.channel.ChannelOutputStream.getChannel()"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isEofOnClose()"], ["void", "org.apache.sshd.common.channel.ChannelOutputStream.setNoDelay(boolean)"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isNoDelay()"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isOpen()"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void write(int)"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void write(byte[], int, int)"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void flush()"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void close()"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelOutputStream.toString()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelOutputStream.getChannel()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.Window(org.apache.sshd.common.channel.AbstractChannel, java.lang.Object, boolean, boolean)"], ["org.apache.sshd.common.channel.AbstractChannel", "org.apache.sshd.common.channel.Window.getChannel()"], ["long", "org.apache.sshd.common.channel.Window.getSize()"], ["long", "org.apache.sshd.common.channel.Window.getMaxSize()"], ["long", "org.apache.sshd.common.channel.Window.getPacketSize()"], ["void", "org.apache.sshd.common.channel.Window.init(org.apache.sshd.common.PropertyResolver)"], ["void", "org.apache.sshd.common.channel.Window.init(long, long, org.apache.sshd.common.PropertyResolver)"], ["void", "org.apache.sshd.common.channel.Window.expand(int)"], ["void", "org.apache.sshd.common.channel.Window.consume(long)"], ["void", "org.apache.sshd.common.channel.Window.consumeAndCheck(long)"], ["void", "org.apache.sshd.common.channel.Window.check(long)"], ["void", "org.apache.sshd.common.channel.Window.waitAndConsume(long, long)"], ["long", "org.apache.sshd.common.channel.Window.waitForSpace(long)"], ["boolean", "org.apache.sshd.common.channel.Window.isOpen()"], ["void", "org.apache.sshd.common.channel.Window.close()"], ["java.lang.String", "org.apache.sshd.common.channel.Window.toString()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.Window.getChannel()"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.SttySupport.getUnixPtyModes()"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.SttySupport.parsePtyModes(java.lang.String)"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalWidth()"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalHeight()"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalProperty(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.getTtyProps()"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.stty(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.exec(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.getSttyCommand()"], ["void", "org.apache.sshd.common.channel.SttySupport.setSttyCommand(java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String, java.lang.Throwable)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.getPortForwardingEventListenerProxy()"], ["org.apache.sshd.common.forward.DefaultForwarderFactory", "org.apache.sshd.common.forward.DefaultForwarderFactory()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwarderFactory.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.ForwardingFilter", "org.apache.sshd.common.forward.DefaultForwarderFactory.create(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.common.session.helpers.MissingAttachedSessionException", "org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String)"], ["org.apache.sshd.common.session.helpers.MissingAttachedSessionException", "org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.session.helpers.PendingWriteFuture", "org.apache.sshd.common.session.helpers.PendingWriteFuture(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.PendingWriteFuture.getBuffer()"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.setWritten()"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.setException(java.lang.Throwable)"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.client.auth.password.UserAuthPasswordFactory", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory()"], ["org.apache.sshd.client.auth.password.UserAuthPassword", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory.create()"], ["java.lang.Object", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory.create()"], ["org.apache.sshd.client.auth.pubkey.KeyAgentIdentity", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity(org.apache.sshd.agent.SshAgent, java.security.PublicKey, java.lang.String)"], ["java.security.PublicKey", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.getPublicKey()"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.getComment()"], ["byte[]", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.sign(byte[])"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.toString()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager)"], ["boolean", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.hasNext()"], ["org.apache.sshd.client.auth.pubkey.PublicKeyIdentity", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.next()"], ["boolean", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.isOpen()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.close()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.next()"], ["org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier(java.security.PublicKey)"], ["java.security.PublicKey", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier.getRequiredKey()"], ["boolean", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier", "org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier()"], ["boolean", "org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.channel.ChannelSubsystem", "org.apache.sshd.client.channel.ChannelSubsystem(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.channel.ChannelSubsystem.getSubsystem()"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.handleSuccess()"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.handleFailure()"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.onClose(java.lang.Runnable)"], ["java.lang.String", "org.apache.sshd.client.channel.ChannelSubsystem.toString()"], ["boolean", "org.apache.sshd.client.SshClient$2.isOpen()"], ["void", "org.apache.sshd.client.SshClient$2.close()"], ["void", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.getPortForwardingEventListenerProxy()"], ["org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker(org.apache.sshd.client.session.ClientSession, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["boolean", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.isLocalForwarding()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.getRemoteAddress()"], ["void", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.close()"], ["java.lang.String", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.toString()"], ["<S extends org.apache.sshd.server.SshServer> S", "org.apache.sshd.server.config.keys.ServerIdentity.setKeyPairProvider(S, java.util.Properties, boolean)"], ["org.apache.sshd.common.keyprovider.KeyPairProvider", "org.apache.sshd.server.config.keys.ServerIdentity.loadKeyPairProvider(java.util.Properties, boolean, java.nio.file.LinkOption...)"], ["java.util.Map<java.lang.String, java.security.KeyPair>", "org.apache.sshd.server.config.keys.ServerIdentity.loadIdentities(java.util.Properties, java.nio.file.LinkOption...)"], ["java.util.Map<java.lang.String, java.nio.file.Path>", "org.apache.sshd.server.config.keys.ServerIdentity.findIdentities(java.util.Properties, java.nio.file.LinkOption...)"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityType(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityFileName(org.apache.sshd.common.NamedResource)"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityFileName(java.lang.String)"], ["<S extends org.apache.sshd.server.SshServer> S", "org.apache.sshd.server.config.SshServerConfigFileReader.configure(S, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveServerForwarding(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.AgentForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveAgentForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.TcpForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveTcpForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.X11ForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveX11ForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["java.lang.Object", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveBanner(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.auth.password.StaticPasswordAuthenticator", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator(boolean)"], ["boolean", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator.isAccepted()"], ["boolean", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator.authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.auth.gss.GSSAuthenticator()"], ["org.ietf.jgss.GSSManager", "org.apache.sshd.server.auth.gss.GSSAuthenticator.getGSSManager()"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.GSSAuthenticator.getGSSCredential(org.ietf.jgss.GSSManager)"], ["boolean", "org.apache.sshd.server.auth.gss.GSSAuthenticator.validateInitialUser(org.apache.sshd.server.session.ServerSession, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.gss.GSSAuthenticator.validateIdentity(org.apache.sshd.server.session.ServerSession, java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.GSSAuthenticator.setServicePrincipalName(java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.GSSAuthenticator.setKeytabFile(java.lang.String)"], ["org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator(boolean)"], ["boolean", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator.isAccepted()"], ["boolean", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.security.PublicKey, java.lang.String, java.lang.String, java.util.List<java.security.cert.X509Certificate>)"], ["org.apache.sshd.server.auth.UserAuthNone", "org.apache.sshd.server.auth.UserAuthNone()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.UserAuthNone.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)"], ["org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["boolean", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionCreated(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionClosed(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory()"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()"], ["org.apache.sshd.server.shell.ProcessShellCommandFactory", "org.apache.sshd.server.shell.ProcessShellCommandFactory()"], ["java.lang.String", "org.apache.sshd.server.shell.ProcessShellCommandFactory.toString()"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.ProcessShellCommandFactory.createCommand(java.lang.String)"], ["org.apache.sshd.server.shell.TtyFilterOutputStream", "org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)"], ["org.apache.sshd.server.shell.TtyFilterOutputStream", "org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["void", "org.apache.sshd.server.shell.TtyFilterOutputStream.write(int)"], ["void", "org.apache.sshd.server.shell.TtyFilterOutputStream.write(byte[], int, int)"], ["org.apache.sshd.server.channel.AsyncDataReceiver", "org.apache.sshd.server.channel.AsyncDataReceiver(org.apache.sshd.common.channel.Channel)"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.server.channel.AsyncDataReceiver.getIn()"], ["int", "org.apache.sshd.server.channel.AsyncDataReceiver.data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int)"], ["void", "org.apache.sshd.server.channel.AsyncDataReceiver.close()"], ["org.apache.sshd.server.channel.ChannelSessionFactory", "org.apache.sshd.server.channel.ChannelSessionFactory()"], ["java.lang.String", "org.apache.sshd.server.channel.ChannelSessionFactory.getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.server.channel.ChannelSessionFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.channel.ChannelSessionFactory.create()"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder()"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.interactiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.publickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.ServerBuilder.build(boolean)"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.builder()"], ["org.apache.sshd.common.helpers.AbstractFactoryManager", "org.apache.sshd.server.ServerBuilder.build(boolean)"], ["org.apache.sshd.server.jaas.JaasPasswordAuthenticator", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator()"], ["org.apache.sshd.server.jaas.JaasPasswordAuthenticator", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.getDomain()"], ["void", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.setDomain(java.lang.String)"], ["boolean", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)"], ["boolean", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.authenticate(java.lang.String, java.lang.String)"], ["org.apache.sshd.server.global.OpenSshHostKeysHandler", "org.apache.sshd.server.global.OpenSshHostKeysHandler()"], ["org.apache.sshd.server.global.OpenSshHostKeysHandler", "org.apache.sshd.server.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)"], ["void", "org.apache.sshd.server.global.OpenSshHostKeysHandler.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.sessionCreated(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.sessionClosed(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)"], ["void", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.getPortForwardingEventListenerProxy()"], ["org.apache.sshd.agent.local.ChannelAgentForwardingFactory", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory(java.lang.String)"], ["java.lang.String", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.create()"], ["java.lang.Object", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.create()"], ["org.apache.sshd.agent.local.AgentImpl", "org.apache.sshd.agent.local.AgentImpl()"], ["boolean", "org.apache.sshd.agent.local.AgentImpl.isOpen()"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.local.AgentImpl.getIdentities()"], ["byte[]", "org.apache.sshd.agent.local.AgentImpl.sign(java.security.PublicKey, byte[])"], ["void", "org.apache.sshd.agent.local.AgentImpl.addIdentity(java.security.KeyPair, java.lang.String)"], ["void", "org.apache.sshd.agent.local.AgentImpl.removeIdentity(java.security.PublicKey)"], ["void", "org.apache.sshd.agent.local.AgentImpl.removeAllIdentities()"], ["void", "org.apache.sshd.agent.local.AgentImpl.close()"], ["org.apache.sshd.agent.unix.AgentServer$SshAgentSession", "org.apache.sshd.agent.unix.AgentServer$SshAgentSession(long, org.apache.sshd.agent.SshAgent)"], ["void", "org.apache.sshd.agent.unix.AgentServer$SshAgentSession.run()"], ["org.apache.sshd.common.file.util.MockPath", "org.apache.sshd.common.file.util.MockPath(java.lang.String)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.util.MockPath.getFileSystem()"], ["boolean", "org.apache.sshd.common.file.util.MockPath.isAbsolute()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getRoot()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getFileName()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getParent()"], ["int", "org.apache.sshd.common.file.util.MockPath.getNameCount()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.subpath(int, int)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.startsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.startsWith(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.endsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.endsWith(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.normalize()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolve(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolveSibling(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolveSibling(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.relativize(java.nio.file.Path)"], ["java.net.URI", "org.apache.sshd.common.file.util.MockPath.toUri()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.toAbsolutePath()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.toRealPath(java.nio.file.LinkOption...)"], ["java.io.File", "org.apache.sshd.common.file.util.MockPath.toFile()"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.MockPath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...)"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.MockPath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...)"], ["int", "org.apache.sshd.common.file.util.MockPath.compareTo(java.nio.file.Path)"], ["java.lang.String", "org.apache.sshd.common.file.util.MockPath.toString()"], ["int", "org.apache.sshd.common.file.util.MockPath.compareTo(java.lang.Object)"], ["org.apache.sshd.common.file.root.RootedFileSystem", "org.apache.sshd.common.file.root.RootedFileSystem(org.apache.sshd.common.file.root.RootedFileSystemProvider, java.nio.file.Path, java.util.Map<java.lang.String, ?>)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystem.getRootFileSystem()"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystem.getRoot()"], ["org.apache.sshd.common.file.root.RootedFileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystem.provider()"], ["void", "org.apache.sshd.common.file.root.RootedFileSystem.close()"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystem.isOpen()"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystem.isReadOnly()"], ["java.nio.file.attribute.UserPrincipalLookupService", "org.apache.sshd.common.file.root.RootedFileSystem.getUserPrincipalLookupService()"], ["java.lang.String", "org.apache.sshd.common.file.root.RootedFileSystem.toString()"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystem.provider()"], ["org.apache.sshd.common.io.nio2.Nio2Acceptor", "org.apache.sshd.common.io.nio2.Nio2Acceptor(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.bind(java.util.Collection<? extends java.net.SocketAddress>)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.bind(java.net.SocketAddress)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind(java.util.Collection<? extends java.net.SocketAddress>)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind(java.net.SocketAddress)"], ["java.lang.String", "org.apache.sshd.common.io.nio2.Nio2Acceptor.toString()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$6.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$6.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$6.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.KexProposalOption[]", "org.apache.sshd.common.kex.KexProposalOption.values()"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.valueOf(java.lang.String)"], ["int", "org.apache.sshd.common.kex.KexProposalOption.getProposalIndex()"], ["java.lang.String", "org.apache.sshd.common.kex.KexProposalOption.getDescription()"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.fromName(java.lang.String)"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.fromProposalIndex(int)"], ["org.apache.sshd.common.channel.BufferedIoOutputStream", "org.apache.sshd.common.channel.BufferedIoOutputStream(java.lang.Object, org.apache.sshd.common.io.IoOutputStream)"], ["java.lang.Object", "org.apache.sshd.common.channel.BufferedIoOutputStream.getId()"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.channel.BufferedIoOutputStream.writePacket(org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.common.channel.BufferedIoOutputStream.toString()"], ["default", "org.apache.sshd.common.channel.Channel.void addRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["default", "org.apache.sshd.common.channel.Channel.void removeRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["<T> T", "org.apache.sshd.common.channel.Channel.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.channel.Channel.resolveAttribute(org.apache.sshd.common.channel.Channel, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.channel.ChannelPipedOutputStream", "org.apache.sshd.common.channel.ChannelPipedOutputStream(org.apache.sshd.common.channel.ChannelPipedSink)"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.write(int)"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.write(byte[], int, int)"], ["boolean", "org.apache.sshd.common.channel.ChannelPipedOutputStream.isOpen()"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.flush()"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.close()"], ["org.apache.sshd.common.channel.ChannelPipedInputStream", "org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)"], ["org.apache.sshd.common.channel.ChannelPipedInputStream", "org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.channel.Window, long)"], ["boolean", "org.apache.sshd.common.channel.ChannelPipedInputStream.isOpen()"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.setTimeout(long)"], ["long", "org.apache.sshd.common.channel.ChannelPipedInputStream.getTimeout()"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.available()"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.read()"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.read(byte[], int, int)"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.eof()"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.close()"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.receive(byte[], int, int)"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String, java.lang.Throwable)"], ["int", "org.apache.sshd.common.channel.exception.SshChannelException.getChannelId()"], ["org.apache.sshd.common.forward.TcpipClientChannel", "org.apache.sshd.common.forward.TcpipClientChannel(org.apache.sshd.common.forward.TcpipClientChannel$Type, org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.common.forward.TcpipClientChannel.getOpenFuture()"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type", "org.apache.sshd.common.forward.TcpipClientChannel.getTcpipChannelType()"], ["synchronized", "org.apache.sshd.common.forward.TcpipClientChannel.org.apache.sshd.client.future.OpenFuture open()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.TcpipClientChannel.getTunnelEntrance()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.TcpipClientChannel.getTunnelExit()"], ["org.apache.sshd.common.session.SessionWorkBuffer", "org.apache.sshd.common.session.SessionWorkBuffer(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.session.SessionWorkBuffer.getSession()"], ["void", "org.apache.sshd.common.session.SessionWorkBuffer.clear(boolean)"], ["void", "org.apache.sshd.common.session.SessionWorkBuffer.forceClear(boolean)"], ["org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler.handleUnknownChannelCommand(org.apache.sshd.common.session.ConnectionService, byte, int, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getSession()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.start()"], ["org.apache.sshd.common.forward.ForwardingFilter", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getForwardingFilter()"], ["org.apache.sshd.server.x11.X11ForwardSupport", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getX11ForwardSupport()"], ["org.apache.sshd.agent.common.AgentForwardSupport", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getAgentForwardSupport()"], ["int", "org.apache.sshd.common.session.helpers.AbstractConnectionService.registerChannel(org.apache.sshd.common.channel.Channel)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.unregisterChannel(org.apache.sshd.common.channel.Channel)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.process(int, org.apache.sshd.common.util.buffer.Buffer)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.isAllowMoreSessions()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.setAllowMoreSessions(boolean)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelOpenConfirmation(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelOpenFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelData(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelExtendedData(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelEof(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelClose(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelRequest(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelSuccess(org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractConnectionService.resolveUnknownChannelReferenceHandler()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractConnectionService.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getSession()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory$1.create()"], ["org.apache.sshd.client.auth.pubkey.KeyPairIdentity", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity(org.apache.sshd.common.signature.SignatureFactoriesManager, org.apache.sshd.common.signature.SignatureFactoriesManager, java.security.KeyPair)"], ["java.security.PublicKey", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.getPublicKey()"], ["byte[]", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.sign(byte[])"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.toString()"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories[]", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.values()"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.valueOf(java.lang.String)"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.create()"], ["java.lang.String", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.getName()"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.fromFactoryName(java.lang.String)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String...)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.resolveFactory(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.create()"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path)"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path, java.nio.file.LinkOption...)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.getDelegateVerifier()"], ["org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.getModifiedServerKeyAcceptor()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.setModifiedServerKeyAcceptor(org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor)"], ["boolean", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["boolean", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.acceptModifiedServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey, java.security.PublicKey)"], ["org.apache.sshd.client.channel.ClientChannel$Streaming[]", "org.apache.sshd.client.channel.ClientChannel$Streaming.values()"], ["org.apache.sshd.client.channel.ClientChannel$Streaming", "org.apache.sshd.client.channel.ClientChannel$Streaming.valueOf(java.lang.String)"], ["org.apache.sshd.client.channel.ChannelSession", "org.apache.sshd.client.channel.ChannelSession()"], ["org.apache.sshd.client.session.ClientConnectionServiceFactory", "org.apache.sshd.client.session.ClientConnectionServiceFactory()"], ["java.lang.String", "org.apache.sshd.client.session.ClientConnectionServiceFactory.getName()"], ["org.apache.sshd.common.Service", "org.apache.sshd.client.session.ClientConnectionServiceFactory.create(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.client.session.ClientUserAuthService", "org.apache.sshd.client.session.ClientUserAuthService(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientUserAuthService.getSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientUserAuthService.getClientSession()"], ["void", "org.apache.sshd.client.session.ClientUserAuthService.start()"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.session.ClientUserAuthService.auth(java.lang.String)"], ["void", "org.apache.sshd.client.session.ClientUserAuthService.process(int, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.session.ClientUserAuthService.getSession()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$2.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$2.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$3.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$3.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.password.UserAuthPassword", "org.apache.sshd.server.auth.password.UserAuthPassword()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.password.UserAuthPassword.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased()"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getName()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getUsername()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getService()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.auth.AbstractUserAuth.getServerSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.auth.AbstractUserAuth.getSession()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.AbstractUserAuth.auth(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.Boolean", "org.apache.sshd.server.auth.AbstractUserAuth.next(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.server.auth.AbstractUserAuth.destroy()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.auth.AbstractUserAuth.getSession()"], ["org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator()"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator.generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>)"], ["org.apache.sshd.server.kex.Moduli$DhGroup", "org.apache.sshd.server.kex.Moduli$DhGroup(int, java.math.BigInteger, java.math.BigInteger)"], ["int", "org.apache.sshd.server.kex.Moduli$DhGroup.getSize()"], ["java.math.BigInteger", "org.apache.sshd.server.kex.Moduli$DhGroup.getG()"], ["java.math.BigInteger", "org.apache.sshd.server.kex.Moduli$DhGroup.getP()"], ["java.lang.String", "org.apache.sshd.server.kex.Moduli$DhGroup.toString()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.channel.AbstractServerChannel.getServerSession()"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.server.channel.AbstractServerChannel.open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.server.channel.AbstractServerChannel.handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.server.channel.AbstractServerChannel.handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["default", "org.apache.sshd.server.ExitCallback.void onExit(int)"], ["java.lang.String", "org.apache.sshd.server.command.AbstractCommandSupport.getCommand()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.command.AbstractCommandSupport.getSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.command.AbstractCommandSupport.getServerSession()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setSession(org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.server.command.AbstractCommandSupport.getExecutorService()"], ["java.io.InputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getInputStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setInputStream(java.io.InputStream)"], ["java.io.OutputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getOutputStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setOutputStream(java.io.OutputStream)"], ["java.io.OutputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getErrorStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setErrorStream(java.io.OutputStream)"], ["org.apache.sshd.server.ExitCallback", "org.apache.sshd.server.command.AbstractCommandSupport.getExitCallback()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setExitCallback(org.apache.sshd.server.ExitCallback)"], ["org.apache.sshd.server.Environment", "org.apache.sshd.server.command.AbstractCommandSupport.getEnvironment()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.start(org.apache.sshd.server.Environment)"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.destroy()"], ["java.lang.String", "org.apache.sshd.server.command.AbstractCommandSupport.toString()"], ["org.apache.sshd.server.forward.DirectTcpipFactory", "org.apache.sshd.server.forward.DirectTcpipFactory()"], ["org.apache.sshd.server.forward.X11ForwardingFilter", "org.apache.sshd.server.forward.X11ForwardingFilter.of(boolean)"], ["org.apache.sshd.server.session.ServerUserAuthServiceFactory", "org.apache.sshd.server.session.ServerUserAuthServiceFactory()"], ["org.apache.sshd.common.Service", "org.apache.sshd.server.session.ServerUserAuthServiceFactory.create(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.session.ServerUserAuthService", "org.apache.sshd.server.session.ServerUserAuthService(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.WelcomeBannerPhase", "org.apache.sshd.server.session.ServerUserAuthService.getWelcomePhase()"], ["void", "org.apache.sshd.server.session.ServerUserAuthService.start()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerUserAuthService.getSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerUserAuthService.getServerSession()"], ["synchronized", "org.apache.sshd.server.session.ServerUserAuthService.void process(int, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.server.session.ServerUserAuthService.sendWelcomeBanner(org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.ServerUserAuthService.getFactoryManager()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.session.ServerUserAuthService.getSession()"], ["org.apache.sshd.agent.unix.AgentServerProxy", "org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.agent.unix.AgentServerProxy", "org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["boolean", "org.apache.sshd.agent.unix.AgentServerProxy.isOpen()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.unix.AgentServerProxy.getExecutorService()"], ["java.lang.String", "org.apache.sshd.agent.unix.AgentServerProxy.getId()"], ["synchronized", "org.apache.sshd.agent.unix.AgentServerProxy.void close()"], ["java.io.IOException", "org.apache.sshd.agent.unix.AgentServerProxy.toIOException(int)"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider$1.close()"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory()"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory.create(org.apache.sshd.common.FactoryManager)"], ["java.lang.String", "org.apache.sshd.common.kex.KeyExchange.getGroupKexOpcodeName(int)"], ["java.lang.String", "org.apache.sshd.common.kex.KeyExchange.getSimpleKexOpcodeName(int)"], ["void", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getSession()"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getHash()"], ["byte[]", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getH()"], ["byte[]", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getK()"], ["java.lang.String", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getSession()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getG()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP1()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP14()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP15()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP16()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP17()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP18()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getOakleyGroupPrimeValue(java.lang.String)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.lang.String)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.InputStream)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.Reader)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.BufferedReader)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.util.stream.Stream<java.lang.String>)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.parseOakleyGroupPrimeValue(java.lang.String)"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$10.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$10.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$10.create(java.lang.Object[])"], ["org.apache.sshd.common.Service", "org.apache.sshd.common.ServiceFactory.create(java.util.Collection<? extends org.apache.sshd.common.ServiceFactory>, java.lang.String, org.apache.sshd.common.session.Session)"], ["default", "org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolverManager.org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver resolveChannelStreamPacketWriterResolver()"], ["default", "org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolverManager.org.apache.sshd.common.io.PacketWriter resolveChannelStreamPacketWriter(org.apache.sshd.common.channel.Channel, byte)"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type[]", "org.apache.sshd.common.forward.TcpipClientChannel$Type.values()"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type", "org.apache.sshd.common.forward.TcpipClientChannel$Type.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.forward.TcpipClientChannel$Type.getName()"], ["org.apache.sshd.common.forward.SocksProxy", "org.apache.sshd.common.forward.SocksProxy(org.apache.sshd.common.session.ConnectionService)"], ["void", "org.apache.sshd.common.forward.SocksProxy.sessionCreated(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.forward.SocksProxy.sessionClosed(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.forward.SocksProxy.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)"], ["void", "org.apache.sshd.common.forward.SocksProxy.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)"], ["org.apache.sshd.common.forward.SocksProxy$Socks5", "org.apache.sshd.common.forward.SocksProxy$Socks5(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.common.session.Session$TimeoutStatus[]", "org.apache.sshd.common.session.Session$TimeoutStatus.values()"], ["org.apache.sshd.common.session.Session$TimeoutStatus", "org.apache.sshd.common.session.Session$TimeoutStatus.valueOf(java.lang.String)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.sessionCreated(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.sessionClosed(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)"], ["org.apache.sshd.common.session.SessionListener$Event[]", "org.apache.sshd.common.session.SessionListener$Event.values()"], ["org.apache.sshd.common.session.SessionListener$Event", "org.apache.sshd.common.session.SessionListener$Event.valueOf(java.lang.String)"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.config.SshClientConfigFileReader.configure(C, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientHostKeys()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientHostname(java.lang.String)"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBased", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.create()"], ["java.lang.Object", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.create()"], ["org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.agent.SshAgent)"], ["boolean", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.hasNext()"], ["org.apache.sshd.client.auth.pubkey.KeyAgentIdentity", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.next()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.next()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.create()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.create()"], ["boolean", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.isInteractionAllowed(org.apache.sshd.client.session.ClientSession)"], ["java.lang.String[]", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.interactive(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean[])"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.getUpdatedPassword(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.toString()"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.java.lang.String getUserAuthFactoriesNameList()"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient$1.getName()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.client.kex.DHGEXClient$1.create()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient$1.toString()"], ["java.lang.Object", "org.apache.sshd.client.kex.DHGEXClient$1.create()"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.lang.String, int)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.lang.String, int, java.net.SocketAddress)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.net.SocketAddress)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(org.apache.sshd.client.config.hosts.HostConfigEntry)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress)"], ["boolean", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.isOpen()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.close()"], ["void", "org.apache.sshd.client.channel.ClientChannel.validateCommandExitStatusCode(java.lang.String, java.lang.Integer)"], ["org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler", "org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.Integer>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler.getName()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.getSession()"], ["java.lang.String", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.getSession()"], ["org.apache.sshd.client.future.DefaultConnectFuture", "org.apache.sshd.client.future.DefaultConnectFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.future.DefaultConnectFuture.verify(long)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.future.DefaultConnectFuture.getSession()"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultConnectFuture.getException()"], ["boolean", "org.apache.sshd.client.future.DefaultConnectFuture.isConnected()"], ["void", "org.apache.sshd.client.future.DefaultConnectFuture.setSession(org.apache.sshd.client.session.ClientSession)"], ["void", "org.apache.sshd.client.future.DefaultConnectFuture.setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultConnectFuture.verify(long)"], ["org.apache.sshd.client.session.ClientSession$ClientSessionEvent[]", "org.apache.sshd.client.session.ClientSession$ClientSessionEvent.values()"], ["org.apache.sshd.client.session.ClientSession$ClientSessionEvent", "org.apache.sshd.client.session.ClientSession$ClientSessionEvent.valueOf(java.lang.String)"], ["org.apache.sshd.client.session.forward.DynamicPortForwardingTracker", "org.apache.sshd.client.session.forward.DynamicPortForwardingTracker(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.forward.DynamicPortForwardingTracker.close()"], ["org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path)"], ["org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path, java.nio.file.LinkOption...)"], ["boolean", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["java.nio.file.Path", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator.getDefaultAuthorizedKeysFile()"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory()"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.create()"], ["boolean", "org.apache.sshd.server.auth.pubkey.StaticPublickeyAuthenticator.isAccepted()"], ["boolean", "org.apache.sshd.server.auth.pubkey.StaticPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories[]", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.values()"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.valueOf(java.lang.String)"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.create()"], ["java.lang.String", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.getName()"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.fromFactoryName(java.lang.String)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String...)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.resolveFactory(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.create()"], ["org.apache.sshd.server.shell.UnknownCommandFactory", "org.apache.sshd.server.shell.UnknownCommandFactory()"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommandFactory.toString()"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.UnknownCommandFactory.createCommand(java.lang.String)"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.server.kex.DHGEXServer$1.create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer$1.getName()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer$1.toString()"], ["java.lang.Object", "org.apache.sshd.server.kex.DHGEXServer$1.create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer.getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.server.kex.DHGServer.newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.server.kex.DHGServer.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["boolean", "org.apache.sshd.server.kex.DHGServer.next(int, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.server.x11.DefaultX11ForwardSupport", "org.apache.sshd.server.x11.DefaultX11ForwardSupport(org.apache.sshd.common.session.ConnectionService)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.close()"], ["synchronized", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.java.lang.String createDisplay(boolean, java.lang.String, java.lang.String, int)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.sessionCreated(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.sessionClosed(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)"], ["java.lang.String", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.toString()"], ["void", "org.apache.sshd.server.global.OpenSshHostKeysHandler$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["boolean", "org.apache.sshd.server.forward.TcpForwardingFilter$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.TcpForwardingFilter$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["java.lang.String", "org.apache.sshd.server.forward.TcpForwardingFilter$1.toString()"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.AbstractServerSession.getFactoryManager()"], ["org.apache.sshd.server.session.ServerProxyAcceptor", "org.apache.sshd.server.session.AbstractServerSession.getServerProxyAcceptor()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)"], ["java.net.SocketAddress", "org.apache.sshd.server.session.AbstractServerSession.getClientAddress()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setClientAddress(java.net.SocketAddress)"], ["org.apache.sshd.server.auth.password.PasswordAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getPasswordAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getPublickeyAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getKeyboardInteractiveAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getGSSAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)"], ["org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getHostBasedAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)"], ["void", "org.apache.sshd.server.session.AbstractServerSession.startService(java.lang.String)"], ["java.security.KeyPair", "org.apache.sshd.server.session.AbstractServerSession.getHostKey()"], ["int", "org.apache.sshd.server.session.AbstractServerSession.getActiveSessionCountForUser(java.lang.String)"], ["long", "org.apache.sshd.server.session.AbstractServerSession.getId()"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.server.session.AbstractServerSession.getFactoryManager()"], ["org.apache.sshd.agent.local.LocalAgentFactory", "org.apache.sshd.agent.local.LocalAgentFactory()"], ["org.apache.sshd.agent.local.LocalAgentFactory", "org.apache.sshd.agent.local.LocalAgentFactory(org.apache.sshd.agent.SshAgent)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.LocalAgentFactory.getAgent()"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.LocalAgentFactory.createClient(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.local.LocalAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.agent.unix.UnixAgentFactory", "org.apache.sshd.agent.unix.UnixAgentFactory()"], ["org.apache.sshd.agent.unix.UnixAgentFactory", "org.apache.sshd.agent.unix.UnixAgentFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.unix.UnixAgentFactory.createClient(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.unix.UnixAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)"], ["synchronized", "org.apache.sshd.agent.common.AbstractAgentClient.void messageReceived(org.apache.sshd.common.util.buffer.Buffer)"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.TcpForwardingFilter getTcpForwardingFilter()"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.AgentForwardingFilter getAgentForwardingFilter()"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.X11ForwardingFilter getX11ForwardingFilter()"], ["<T> T", "org.apache.sshd.common.FactoryManager.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.FactoryManager.resolveAttribute(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.file.root.RootedPath", "org.apache.sshd.common.file.root.RootedPath(org.apache.sshd.common.file.root.RootedFileSystem, java.lang.String, java.util.List<java.lang.String>)"], ["java.io.File", "org.apache.sshd.common.file.root.RootedPath.toFile()"], ["org.apache.sshd.common.file.root.RootedPath", "org.apache.sshd.common.file.root.RootedPath.toRealPath(java.nio.file.LinkOption...)"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedPath.toRealPath(java.nio.file.LinkOption[])"], ["org.apache.sshd.common.cipher.BuiltinCiphers$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getCiphers(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.mac.BuiltinMacs$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getMacs(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.signature.BuiltinSignatures$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getSignatures(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getKexFactories(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.compression.CompressionFactory", "org.apache.sshd.common.config.SshConfigFileReader.getCompression(org.apache.sshd.common.PropertyResolver)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configure(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCiphers(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCiphers(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureSignatures(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureSignatures(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureMacs(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureMacs(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureKeyExchanges(M, org.apache.sshd.common.PropertyResolver, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureKeyExchanges(M, java.lang.String, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCompression(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCompression(M, java.lang.String, boolean, boolean)"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.common.io.IoConnector", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory.createConnector(org.apache.sshd.common.io.IoHandler)"], ["org.apache.sshd.common.io.IoAcceptor", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory.createAcceptor(org.apache.sshd.common.io.IoHandler)"], ["void", "org.apache.sshd.common.io.nio2.Nio2CompletionHandler.completed(V, A)"], ["void", "org.apache.sshd.common.io.nio2.Nio2CompletionHandler.failed(java.lang.Throwable, A)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$4.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$4.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$4.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$8.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$8.isGroupExchange()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$8.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$8.create(java.lang.Object[])"], ["org.apache.sshd.common.channel.WindowClosedException", "org.apache.sshd.common.channel.WindowClosedException(java.lang.String)"], ["org.apache.sshd.common.channel.IoWriteFutureImpl", "org.apache.sshd.common.channel.IoWriteFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.channel.IoWriteFutureImpl.getBuffer()"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelListener$1.toString()"], ["org.apache.sshd.common.BaseBuilder", "org.apache.sshd.common.BaseBuilder()"], ["S", "org.apache.sshd.common.BaseBuilder.keyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)"], ["S", "org.apache.sshd.common.BaseBuilder.signatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["S", "org.apache.sshd.common.BaseBuilder.randomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)"], ["S", "org.apache.sshd.common.BaseBuilder.cipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)"], ["S", "org.apache.sshd.common.BaseBuilder.compressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)"], ["S", "org.apache.sshd.common.BaseBuilder.macFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)"], ["S", "org.apache.sshd.common.BaseBuilder.channelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)"], ["S", "org.apache.sshd.common.BaseBuilder.fileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)"], ["S", "org.apache.sshd.common.BaseBuilder.forwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)"], ["S", "org.apache.sshd.common.BaseBuilder.forwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)"], ["S", "org.apache.sshd.common.BaseBuilder.globalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)"], ["S", "org.apache.sshd.common.BaseBuilder.factory(org.apache.sshd.common.Factory<T>)"], ["S", "org.apache.sshd.common.BaseBuilder.channelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["S", "org.apache.sshd.common.BaseBuilder.unknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["T", "org.apache.sshd.common.BaseBuilder.build(boolean)"], ["T", "org.apache.sshd.common.BaseBuilder.build()"], ["java.lang.Object", "org.apache.sshd.common.BaseBuilder.build()"], ["void", "org.apache.sshd.common.forward.SocksProxy$Proxy.close()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.session.helpers.SessionTimeoutListener", "org.apache.sshd.common.session.helpers.SessionTimeoutListener()"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionCreated(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionClosed(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.run()"], ["default", "org.apache.sshd.common.session.ConnectionServiceRequestHandler.org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBased", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.init(org.apache.sshd.client.session.ClientSession, java.lang.String)"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setClientHostname(java.lang.String)"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive()"], ["void", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive.init(org.apache.sshd.client.session.ClientSession, java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive.getAuthCommandName(int)"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair()"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair(org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey)"], ["org.apache.sshd.client.config.hosts.KnownHostEntry", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.getHostEntry()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.setHostEntry(org.apache.sshd.client.config.hosts.KnownHostEntry)"], ["java.security.PublicKey", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.getServerKey()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.setServerKey(java.security.PublicKey)"], ["java.lang.String", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.toString()"], ["org.apache.sshd.client.channel.ChannelShell", "org.apache.sshd.client.channel.ChannelShell()"], ["void", "org.apache.sshd.client.channel.ChannelShell.handleSuccess()"], ["void", "org.apache.sshd.client.channel.ChannelShell.handleFailure()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.client.channel.exit.AbstractChannelExitRequestHandler.process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.client.channel.exit.AbstractChannelExitRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.client.future.DefaultAuthFuture", "org.apache.sshd.client.future.DefaultAuthFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.future.DefaultAuthFuture.verify(long)"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultAuthFuture.getException()"], ["boolean", "org.apache.sshd.client.future.DefaultAuthFuture.isSuccess()"], ["boolean", "org.apache.sshd.client.future.DefaultAuthFuture.isFailure()"], ["void", "org.apache.sshd.client.future.DefaultAuthFuture.setAuthed(boolean)"], ["void", "org.apache.sshd.client.future.DefaultAuthFuture.setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultAuthFuture.verify(long)"], ["org.apache.sshd.client.session.SessionFactory", "org.apache.sshd.client.session.SessionFactory(org.apache.sshd.client.ClientFactoryManager)"], ["org.apache.sshd.client.ClientFactoryManager", "org.apache.sshd.client.session.SessionFactory.getClient()"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int)"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress)"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry)"], ["boolean", "org.apache.sshd.client.session.forward.PortForwardingTracker.isOpen()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.PortForwardingTracker.getLocalAddress()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.PortForwardingTracker.getBoundAddress()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.forward.PortForwardingTracker.getClientSession()"], ["java.lang.String", "org.apache.sshd.client.session.forward.PortForwardingTracker.toString()"], ["org.apache.sshd.server.config.AllowTcpForwardingValue[]", "org.apache.sshd.server.config.AllowTcpForwardingValue.values()"], ["org.apache.sshd.server.config.AllowTcpForwardingValue", "org.apache.sshd.server.config.AllowTcpForwardingValue.valueOf(java.lang.String)"], ["org.apache.sshd.server.config.AllowTcpForwardingValue", "org.apache.sshd.server.config.AllowTcpForwardingValue.fromString(java.lang.String)"], ["org.apache.sshd.server.auth.WelcomeBannerPhase[]", "org.apache.sshd.server.auth.WelcomeBannerPhase.values()"], ["org.apache.sshd.server.auth.WelcomeBannerPhase", "org.apache.sshd.server.auth.WelcomeBannerPhase.valueOf(java.lang.String)"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getInteractionName()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setInteractionName(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getInteractionInstruction()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setInteractionInstruction(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getLanguageTag()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setLanguageTag(java.lang.String)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.addPrompt(java.lang.String, boolean)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.addPrompt(org.apache.sshd.server.auth.keyboard.PromptEntry)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setPrompts(java.util.Collection<? extends org.apache.sshd.server.auth.keyboard.PromptEntry>)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clearPrompts()"], ["<B extends org.apache.sshd.common.util.buffer.Buffer> B", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.append(B)"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clone()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.toString()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clone()"], ["org.apache.sshd.server.shell.ProcessShell", "org.apache.sshd.server.shell.ProcessShell(java.lang.String...)"], ["org.apache.sshd.server.shell.ProcessShell", "org.apache.sshd.server.shell.ProcessShell(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.shell.ProcessShell.getServerSession()"], ["void", "org.apache.sshd.server.shell.ProcessShell.setSession(org.apache.sshd.server.session.ServerSession)"], ["void", "org.apache.sshd.server.shell.ProcessShell.start(org.apache.sshd.server.Environment)"], ["java.io.OutputStream", "org.apache.sshd.server.shell.ProcessShell.getInputStream()"], ["java.io.InputStream", "org.apache.sshd.server.shell.ProcessShell.getOutputStream()"], ["java.io.InputStream", "org.apache.sshd.server.shell.ProcessShell.getErrorStream()"], ["boolean", "org.apache.sshd.server.shell.ProcessShell.isAlive()"], ["int", "org.apache.sshd.server.shell.ProcessShell.exitValue()"], ["void", "org.apache.sshd.server.shell.ProcessShell.destroy()"], ["java.lang.String", "org.apache.sshd.server.shell.ProcessShell.toString()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.server.kex.DHGServer$1.create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer$1.getName()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer$1.toString()"], ["java.lang.Object", "org.apache.sshd.server.kex.DHGServer$1.create()"], ["org.apache.sshd.server.channel.PipeDataReceiver", "org.apache.sshd.server.channel.PipeDataReceiver(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)"], ["java.io.InputStream", "org.apache.sshd.server.channel.PipeDataReceiver.getIn()"], ["void", "org.apache.sshd.server.channel.PipeDataReceiver.close()"], ["int", "org.apache.sshd.server.channel.PipeDataReceiver.data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int)"], ["org.apache.sshd.server.channel.ChannelSession", "org.apache.sshd.server.channel.ChannelSession()"], ["org.apache.sshd.server.channel.ChannelSession", "org.apache.sshd.server.channel.ChannelSession(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.channel.ChannelSession.getSession()"], ["void", "org.apache.sshd.server.channel.ChannelSession.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.server.channel.ChannelSession.handleEof()"], ["void", "org.apache.sshd.server.channel.ChannelSession.setDataReceiver(org.apache.sshd.server.channel.ChannelDataReceiver)"], ["org.apache.sshd.server.StandardEnvironment", "org.apache.sshd.server.channel.ChannelSession.getEnvironment()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.channel.ChannelSession.getSession()"], ["org.apache.sshd.server.forward.RejectAllForwardingFilter", "org.apache.sshd.server.forward.RejectAllForwardingFilter()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type[]", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.values()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.getName()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromString(java.lang.String)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromName(java.lang.String)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromEnumName(java.lang.String)"], ["org.apache.sshd.server.session.ServerConnectionServiceFactory", "org.apache.sshd.server.session.ServerConnectionServiceFactory()"], ["java.lang.String", "org.apache.sshd.server.session.ServerConnectionServiceFactory.getName()"], ["org.apache.sshd.common.Service", "org.apache.sshd.server.session.ServerConnectionServiceFactory.create(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerConnectionService.getServerSession()"], ["org.apache.sshd.server.session.AbstractServerSession", "org.apache.sshd.server.session.ServerConnectionService.getSession()"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.server.session.ServerConnectionService.getSession()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.session.ServerConnectionService.getSession()"], ["org.apache.sshd.agent.local.ChannelAgentForwarding", "org.apache.sshd.agent.local.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["void", "org.apache.sshd.agent.local.ChannelAgentForwarding.handleEof()"], ["org.apache.sshd.agent.unix.AgentClient", "org.apache.sshd.agent.unix.AgentClient(java.lang.String)"], ["org.apache.sshd.agent.unix.AgentClient", "org.apache.sshd.agent.unix.AgentClient(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["boolean", "org.apache.sshd.agent.unix.AgentClient.isOpen()"], ["void", "org.apache.sshd.agent.unix.AgentClient.run()"], ["void", "org.apache.sshd.agent.unix.AgentClient.close()"], ["org.apache.sshd.common.file.util.MockFileSystem", "org.apache.sshd.common.file.util.MockFileSystem(java.lang.String)"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.util.MockFileSystem.provider()"], ["void", "org.apache.sshd.common.file.util.MockFileSystem.close()"], ["boolean", "org.apache.sshd.common.file.util.MockFileSystem.isOpen()"], ["boolean", "org.apache.sshd.common.file.util.MockFileSystem.isReadOnly()"], ["java.lang.String", "org.apache.sshd.common.file.util.MockFileSystem.getSeparator()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockFileSystem.getPath(java.lang.String, java.lang.String...)"], ["java.nio.file.PathMatcher", "org.apache.sshd.common.file.util.MockFileSystem.getPathMatcher(java.lang.String)"], ["java.nio.file.attribute.UserPrincipalLookupService", "org.apache.sshd.common.file.util.MockFileSystem.getUserPrincipalLookupService()"], ["java.nio.file.WatchService", "org.apache.sshd.common.file.util.MockFileSystem.newWatchService()"], ["java.lang.String", "org.apache.sshd.common.file.util.MockFileSystem.toString()"], ["org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory()"], ["org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory(java.nio.file.Path)"], ["void", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.setDefaultHomeDir(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.getDefaultHomeDir()"], ["void", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.setUserHomeDir(java.lang.String, java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.getUserHomeDir(java.lang.String)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.createFileSystem(org.apache.sshd.common.session.Session)"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthServiceFactory.getName()"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void connectionEstablished(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress)"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void abortEstablishedConnection(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable)"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void connectionAccepted(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress)"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void abortAcceptedConnection(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable)"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.io.AbstractIoServiceFactory.getFactoryManager()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.common.io.AbstractIoServiceFactory.getExecutorService()"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.io.AbstractIoServiceFactory.getIoServiceEventListener()"], ["void", "org.apache.sshd.common.io.AbstractIoServiceFactory.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["int", "org.apache.sshd.common.io.AbstractIoServiceFactory.getNioWorkers(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories[]", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.values()"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getFactoryClassName()"], ["java.lang.Class<? extends org.apache.sshd.common.io.IoServiceFactoryFactory>", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getFactoryClass()"], ["java.lang.String", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getName()"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.create()"], ["boolean", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.isSupported()"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.fromFactoryName(java.lang.String)"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.fromFactoryClass(java.lang.Class<?>)"], ["java.lang.Object", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.create()"], ["org.apache.sshd.common.kex.KexState[]", "org.apache.sshd.common.kex.KexState.values()"], ["org.apache.sshd.common.kex.KexState", "org.apache.sshd.common.kex.KexState.valueOf(java.lang.String)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$3.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$3.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$3.create(java.lang.Object[])"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setKeyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setCipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setCompressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setMacFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.common.keyprovider.KeyPairProvider", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getKeyPairProvider()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setKeyPairProvider(org.apache.sshd.common.keyprovider.KeyPairProvider)"], ["default", "org.apache.sshd.common.channel.ChannelRequestHandler.org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.ChannelAsyncInputStream", "org.apache.sshd.common.channel.ChannelAsyncInputStream(org.apache.sshd.common.channel.Channel)"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelAsyncInputStream.getChannel()"], ["void", "org.apache.sshd.common.channel.ChannelAsyncInputStream.write(org.apache.sshd.common.util.Readable)"], ["org.apache.sshd.common.io.IoReadFuture", "org.apache.sshd.common.channel.ChannelAsyncInputStream.read(org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelAsyncInputStream.toString()"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable(org.apache.sshd.common.channel.AbstractChannel)"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.isClosing()"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.setClosing(boolean)"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.isClosed()"], ["org.apache.sshd.common.future.CloseFuture", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.close(boolean)"], ["java.lang.String", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.toString()"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelInitialized(org.apache.sshd.common.channel.Channel)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelOpenSuccess(org.apache.sshd.common.channel.Channel)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelOpenFailure(org.apache.sshd.common.channel.Channel, java.lang.Throwable)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelStateChanged(org.apache.sshd.common.channel.Channel, java.lang.String)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelClosed(org.apache.sshd.common.channel.Channel, java.lang.Throwable)"], ["<L extends org.apache.sshd.common.channel.ChannelListener> L", "org.apache.sshd.common.channel.ChannelListener.validateListener(L)"], ["org.apache.sshd.common.channel.PtyMode[]", "org.apache.sshd.common.channel.PtyMode.values()"], ["org.apache.sshd.common.channel.PtyMode", "org.apache.sshd.common.channel.PtyMode.valueOf(java.lang.String)"], ["int", "org.apache.sshd.common.channel.PtyMode.toInt()"], ["org.apache.sshd.common.channel.PtyMode", "org.apache.sshd.common.channel.PtyMode.fromInt(int)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.PtyMode.createEnabledOptions(org.apache.sshd.common.channel.PtyMode...)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.PtyMode.createEnabledOptions(java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, org.apache.sshd.common.channel.PtyMode)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(java.lang.Object)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(int)"], ["void", "org.apache.sshd.common.channel.BufferedIoOutputStream$1.operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.channel.BufferedIoOutputStream$1.operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceFactory()"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceFactoryFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setIoServiceFactoryFactory(org.apache.sshd.common.io.IoServiceFactoryFactory)"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceEventListener()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setRandomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getProperties()"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.helpers.AbstractFactoryManager.getParentPropertyResolver()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setParentPropertyResolver(org.apache.sshd.common.PropertyResolver)"], ["java.lang.String", "org.apache.sshd.common.helpers.AbstractFactoryManager.getVersion()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setChannelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)"], ["int", "org.apache.sshd.common.helpers.AbstractFactoryManager.getNioWorkers()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setNioWorkers(int)"], ["org.apache.sshd.agent.SshAgentFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getAgentFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setAgentFactory(org.apache.sshd.agent.SshAgentFactory)"], ["java.util.concurrent.ScheduledExecutorService", "org.apache.sshd.common.helpers.AbstractFactoryManager.getScheduledExecutorService()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService, boolean)"], ["org.apache.sshd.common.forward.ForwardingFilterFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getForwarderFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setForwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.common.helpers.AbstractFactoryManager.getForwardingFilter()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setForwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)"], ["org.apache.sshd.common.file.FileSystemFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getFileSystemFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setFileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setServiceFactories(java.util.List<org.apache.sshd.common.ServiceFactory>)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setGlobalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)"], ["org.apache.sshd.common.session.ReservedSessionMessagesHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.getReservedSessionMessagesHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.helpers.AbstractFactoryManager.getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.resolveUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addSessionListener(org.apache.sshd.common.session.SessionListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeSessionListener(org.apache.sshd.common.session.SessionListener)"], ["org.apache.sshd.common.session.SessionListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getSessionListenerProxy()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getChannelListenerProxy()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.sessionCreated(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.sessionClosed(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)"], ["org.apache.sshd.common.forward.DefaultForwardingFilter", "org.apache.sshd.common.forward.DefaultForwardingFilter(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwardingFilter.getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["boolean", "org.apache.sshd.common.forward.DefaultForwardingFilter.addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["boolean", "org.apache.sshd.common.forward.DefaultForwardingFilter.removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.forward.DefaultForwardingFilter.getSession()"], ["org.apache.sshd.common.session.ConnectionService", "org.apache.sshd.common.forward.DefaultForwardingFilter.getConnectionService()"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress getForwardedPort(int)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress localPortForwardingRequested(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void localPortForwardingCancelled(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["java.lang.String", "org.apache.sshd.common.forward.DefaultForwardingFilter.toString()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.DefaultForwardingFilter.getBoundLocalPortForward(int)"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getLocalForwardsBindings()"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getRemoteForwardsBindings()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.DefaultForwardingFilter.getBoundRemotePortForward(int)"], ["M", "org.apache.sshd.common.session.helpers.AbstractSessionFactory.getFactoryManager()"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.SshClient()"], ["org.apache.sshd.client.session.SessionFactory", "org.apache.sshd.client.SshClient.getSessionFactory()"], ["void", "org.apache.sshd.client.SshClient.setSessionFactory(org.apache.sshd.client.session.SessionFactory)"], ["org.apache.sshd.client.session.ClientProxyConnector", "org.apache.sshd.client.SshClient.getClientProxyConnector()"], ["void", "org.apache.sshd.client.SshClient.setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.SshClient.getServerKeyVerifier()"], ["void", "org.apache.sshd.client.SshClient.setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.config.hosts.HostConfigEntryResolver", "org.apache.sshd.client.SshClient.getHostConfigEntryResolver()"], ["void", "org.apache.sshd.client.SshClient.setHostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)"], ["org.apache.sshd.common.config.keys.FilePasswordProvider", "org.apache.sshd.client.SshClient.getFilePasswordProvider()"], ["void", "org.apache.sshd.client.SshClient.setFilePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)"], ["org.apache.sshd.client.config.keys.ClientIdentityLoader", "org.apache.sshd.client.SshClient.getClientIdentityLoader()"], ["void", "org.apache.sshd.client.SshClient.setClientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)"], ["org.apache.sshd.client.auth.keyboard.UserInteraction", "org.apache.sshd.client.SshClient.getUserInteraction()"], ["void", "org.apache.sshd.client.SshClient.setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)"], ["void", "org.apache.sshd.client.SshClient.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)"], ["org.apache.sshd.client.auth.AuthenticationIdentitiesProvider", "org.apache.sshd.client.SshClient.getRegisteredIdentities()"], ["org.apache.sshd.client.auth.password.PasswordIdentityProvider", "org.apache.sshd.client.SshClient.getPasswordIdentityProvider()"], ["void", "org.apache.sshd.client.SshClient.setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)"], ["void", "org.apache.sshd.client.SshClient.addPasswordIdentity(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.SshClient.removePasswordIdentity(java.lang.String)"], ["void", "org.apache.sshd.client.SshClient.addPublicKeyIdentity(java.security.KeyPair)"], ["java.security.KeyPair", "org.apache.sshd.client.SshClient.removePublicKeyIdentity(java.security.KeyPair)"], ["boolean", "org.apache.sshd.client.SshClient.isStarted()"], ["void", "org.apache.sshd.client.SshClient.start()"], ["void", "org.apache.sshd.client.SshClient.stop()"], ["void", "org.apache.sshd.client.SshClient.open()"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(java.lang.String, java.lang.String, int, java.net.SocketAddress)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress)"], ["java.lang.String", "org.apache.sshd.client.SshClient.toString()"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.SshClient.setUpDefaultSimpleClient()"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.SshClient.wrapAsSimpleClient(org.apache.sshd.client.SshClient)"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.SshClient.setUpDefaultClient()"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.SshClient.setKeyPairProvider(C, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...)"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.SshClient.setKeyPairProvider(C, java.nio.file.Path, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getClientSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getSession()"], ["void", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.remove()"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.AbstractUserAuth.getClientSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.AbstractUserAuth.getSession()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.getName()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.getService()"], ["void", "org.apache.sshd.client.auth.AbstractUserAuth.init(org.apache.sshd.client.session.ClientSession, java.lang.String)"], ["boolean", "org.apache.sshd.client.auth.AbstractUserAuth.process(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.auth.AbstractUserAuth.destroy()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.auth.AbstractUserAuth.getSession()"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.boolean isInteractionAllowed(org.apache.sshd.client.session.ClientSession)"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.void serverVersionInfo(org.apache.sshd.client.session.ClientSession, java.util.List<java.lang.String>)"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.void welcome(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.client.keyverifier.StaticServerKeyVerifier.isAccepted()"], ["boolean", "org.apache.sshd.client.keyverifier.StaticServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.getClientSession()"], ["void", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["java.security.PublicKey", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.getServerKey()"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.lang.String)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.lang.String)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.security.KeyPair)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.security.KeyPair)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.lang.String)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.lang.String)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.security.KeyPair)"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.security.KeyPair)"], ["org.apache.sshd.client.channel.ChannelDirectTcpip", "org.apache.sshd.client.channel.ChannelDirectTcpip(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.client.channel.ChannelDirectTcpip.org.apache.sshd.client.future.OpenFuture open()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.channel.ChannelDirectTcpip.getLocalSocketAddress()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.channel.ChannelDirectTcpip.getRemoteSocketAddress()"], ["org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler", "org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.String>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler.getName()"], ["org.apache.sshd.client.future.DefaultOpenFuture", "org.apache.sshd.client.future.DefaultOpenFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.client.future.DefaultOpenFuture.verify(long)"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultOpenFuture.getException()"], ["boolean", "org.apache.sshd.client.future.DefaultOpenFuture.isOpened()"], ["void", "org.apache.sshd.client.future.DefaultOpenFuture.setOpened()"], ["void", "org.apache.sshd.client.future.DefaultOpenFuture.setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultOpenFuture.verify(long)"], ["org.apache.sshd.client.session.ClientUserAuthServiceFactory", "org.apache.sshd.client.session.ClientUserAuthServiceFactory()"], ["org.apache.sshd.common.Service", "org.apache.sshd.client.session.ClientUserAuthServiceFactory.create(org.apache.sshd.common.session.Session)"], ["default", "org.apache.sshd.client.session.ClientSession.java.lang.String executeRemoteCommand(java.lang.String)"], ["default", "org.apache.sshd.client.session.ClientSession.java.lang.String executeRemoteCommand(java.lang.String, java.io.OutputStream, java.nio.charset.Charset)"], ["default", "org.apache.sshd.client.session.ClientSession.void executeRemoteCommand(java.lang.String, java.io.OutputStream, java.io.OutputStream, java.nio.charset.Charset)"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createLocalPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createRemotePortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.DynamicPortForwardingTracker createDynamicPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.keyprovider.KeyIdentityProvider", "org.apache.sshd.client.session.ClientSession.providerOf(org.apache.sshd.client.session.ClientSession)"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.common.FactoryManager getFactoryManager()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$4.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$4.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory$1.create()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.create()"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.toString()"], ["org.apache.sshd.server.shell.InteractiveProcessShellFactory", "org.apache.sshd.server.shell.InteractiveProcessShellFactory()"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory()"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory(java.lang.String...)"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory(java.util.List<java.lang.String>)"], ["void", "org.apache.sshd.server.shell.ProcessShellFactory.setCommand(java.lang.String...)"], ["void", "org.apache.sshd.server.shell.ProcessShellFactory.setCommand(java.util.List<java.lang.String>)"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.ProcessShellFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.shell.ProcessShellFactory.create()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.getServerSession()"], ["void", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["java.security.PublicKey", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.getServerKey()"], ["org.apache.sshd.server.channel.PuttyRequestHandler", "org.apache.sshd.server.channel.PuttyRequestHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.channel.PuttyRequestHandler.process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyRequest(java.lang.String)"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyClient(org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyClient(java.lang.String)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.server.channel.PuttyRequestHandler.resolveShellTtyOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.channel.PuttyRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.toString()"], ["org.apache.sshd.server.command.CommandFactory", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.getDelegateCommandFactory()"], ["void", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.setDelegateCommandFactory(org.apache.sshd.server.command.CommandFactory)"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.createCommand(java.lang.String)"], ["org.apache.sshd.server.global.CancelTcpipForwardHandler", "org.apache.sshd.server.global.CancelTcpipForwardHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.CancelTcpipForwardHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.CancelTcpipForwardHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.server.forward.ForwardingFilter.asForwardingFilter(org.apache.sshd.server.forward.AgentForwardingFilter, org.apache.sshd.server.forward.X11ForwardingFilter, org.apache.sshd.server.forward.TcpForwardingFilter)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getType()"], ["java.lang.String", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getName()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getExecutorService()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.create()"], ["java.lang.Object", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.create()"], ["org.apache.sshd.server.session.SessionFactory", "org.apache.sshd.server.session.SessionFactory(org.apache.sshd.server.ServerFactoryManager)"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.SessionFactory.getServer()"], ["default", "org.apache.sshd.server.session.ServerSession.org.apache.sshd.common.FactoryManager getFactoryManager()"], ["java.lang.String", "org.apache.sshd.agent.local.ProxyAgentFactory$1.getId()"], ["boolean", "org.apache.sshd.agent.local.ProxyAgentFactory$1.isOpen()"], ["void", "org.apache.sshd.agent.local.ProxyAgentFactory$1.close()"], ["boolean", "org.apache.sshd.agent.local.AgentForwardedChannel$1.isOpen()"], ["void", "org.apache.sshd.agent.local.AgentForwardedChannel$1.close()"], ["org.apache.sshd.agent.unix.ChannelAgentForwardingFactory", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String)"], ["org.apache.sshd.agent.unix.ChannelAgentForwardingFactory", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String, org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["java.lang.String", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.create()"], ["java.lang.Object", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.create()"], ["org.apache.sshd.agent.unix.ChannelAgentForwarding", "org.apache.sshd.agent.unix.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.common.file.util.BaseFileSystem", "org.apache.sshd.common.file.util.BaseFileSystem(java.nio.file.spi.FileSystemProvider)"], ["T", "org.apache.sshd.common.file.util.BaseFileSystem.getDefaultDir()"], ["boolean", "org.apache.sshd.common.file.util.BaseFileSystem.isReadOnly()"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.util.BaseFileSystem.provider()"], ["java.lang.String", "org.apache.sshd.common.file.util.BaseFileSystem.getSeparator()"], ["T", "org.apache.sshd.common.file.util.BaseFileSystem.getPath(java.lang.String, java.lang.String...)"], ["java.nio.file.PathMatcher", "org.apache.sshd.common.file.util.BaseFileSystem.getPathMatcher(java.lang.String)"], ["java.nio.file.WatchService", "org.apache.sshd.common.file.util.BaseFileSystem.newWatchService()"], ["org.apache.sshd.common.file.nativefs.NativeFileSystemFactory", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory()"], ["org.apache.sshd.common.file.nativefs.NativeFileSystemFactory", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory(boolean)"], ["java.lang.String", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.getUsersHomeDir()"], ["void", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.setUsersHomeDir(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.isCreateHome()"], ["void", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.setCreateHome(boolean)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.createFileSystem(org.apache.sshd.common.session.Session)"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthMethodFactory.getName()"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthMethodFactory.toString()"], ["void", "org.apache.sshd.common.io.AbstractIoServiceFactoryFactory.setExecutorServiceFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture(java.lang.Object, java.lang.Object, java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.getBuffer()"], ["void", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.setWritten()"], ["void", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.setException(java.lang.Throwable)"], ["org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.getSession()"], ["java.lang.Throwable", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.getException()"], ["boolean", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.isConnected()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.setSession(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.setException(java.lang.Throwable)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getCipherFactoriesNameList()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNames(java.util.Collection<java.lang.String>)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getCompressionFactoriesNameList()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNames(java.util.Collection<java.lang.String>)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getMacFactoriesNameList()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNames(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$2.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$2.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$2.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$1.create(java.lang.Object...)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$1.isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$1.create(java.lang.Object[])"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH()"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(java.lang.String)"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(org.apache.sshd.common.cipher.ECCurves)"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(java.security.spec.ECParameterSpec)"], ["byte[]", "org.apache.sshd.common.kex.ECDH.getE()"], ["void", "org.apache.sshd.common.kex.ECDH.setCurveParameters(java.security.spec.ECParameterSpec)"], ["void", "org.apache.sshd.common.kex.ECDH.setF(byte[])"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.ECDH.getHash()"], ["org.apache.sshd.common.channel.ChannelAsyncOutputStream", "org.apache.sshd.common.channel.ChannelAsyncOutputStream(org.apache.sshd.common.channel.Channel, byte)"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.getChannel()"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.onWindowExpanded()"], ["synchronized", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.toString()"], ["org.apache.sshd.common.channel.RequestHandler$Result[]", "org.apache.sshd.common.channel.RequestHandler$Result.values()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.channel.RequestHandler$Result.valueOf(java.lang.String)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.channel.RequestHandler$Result.fromName(java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String, java.lang.Throwable)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishingExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishedExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tearingDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tornDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishingDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishedDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tearingDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tornDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)"], ["<L extends org.apache.sshd.common.forward.PortForwardingEventListener> L", "org.apache.sshd.common.forward.PortForwardingEventListener.validateListener(L)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionCreated(org.apache.sshd.common.session.Session)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionNegotiationStart(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionNegotiationEnd(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.lang.Throwable)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionClosed(org.apache.sshd.common.session.Session)"], ["<L extends org.apache.sshd.common.session.SessionListener> L", "org.apache.sshd.common.session.SessionListener.validateListener(L)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.session.helpers.AbstractConnectionServiceRequestHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.session.helpers.AbstractConnectionServiceRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter()"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleIgnoreMessage(org.apache.sshd.common.session.Session, byte[], org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleDebugMessage(org.apache.sshd.common.session.Session, boolean, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer, long)"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory()"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()"], ["java.lang.Object", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.io.File)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.nio.file.Path, java.nio.file.LinkOption...)"], ["boolean", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier.isStrict()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient.getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.client.kex.DHGEXClient.newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.client.kex.DHGEXClient.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])"], ["boolean", "org.apache.sshd.client.kex.DHGEXClient.next(int, org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.client.channel.AbstractClientChannel.getChannelType()"], ["org.apache.sshd.client.channel.ClientChannel$Streaming", "org.apache.sshd.client.channel.AbstractClientChannel.getStreaming()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setStreaming(org.apache.sshd.client.channel.ClientChannel$Streaming)"], ["org.apache.sshd.common.io.IoOutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncIn()"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncOut()"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncErr()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedIn()"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getIn()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setIn(java.io.InputStream)"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedOut()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getOut()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setOut(java.io.OutputStream)"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedErr()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getErr()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setErr(java.io.OutputStream)"], ["synchronized", "org.apache.sshd.client.channel.AbstractClientChannel.org.apache.sshd.client.future.OpenFuture open()"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.client.channel.AbstractClientChannel.open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.Integer", "org.apache.sshd.client.channel.AbstractClientChannel.getExitStatus()"], ["java.lang.String", "org.apache.sshd.client.channel.AbstractClientChannel.getExitSignal()"], ["void", "org.apache.sshd.client.SshClient$1.operationComplete(org.apache.sshd.common.io.IoConnectFuture)"], ["java.lang.String", "org.apache.sshd.client.SshClient$1.toString()"], ["void", "org.apache.sshd.client.SshClient$1.operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.client.global.OpenSshHostKeysHandler", "org.apache.sshd.client.global.OpenSshHostKeysHandler()"], ["org.apache.sshd.client.global.OpenSshHostKeysHandler", "org.apache.sshd.client.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)"], ["org.apache.sshd.client.ClientFactoryManager", "org.apache.sshd.client.session.AbstractClientSession.getFactoryManager()"], ["java.net.SocketAddress", "org.apache.sshd.client.session.AbstractClientSession.getConnectAddress()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setConnectAddress(java.net.SocketAddress)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.session.AbstractClientSession.getServerKeyVerifier()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.auth.keyboard.UserInteraction", "org.apache.sshd.client.session.AbstractClientSession.getUserInteraction()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)"], ["org.apache.sshd.client.auth.AuthenticationIdentitiesProvider", "org.apache.sshd.client.session.AbstractClientSession.getRegisteredIdentities()"], ["org.apache.sshd.client.auth.password.PasswordIdentityProvider", "org.apache.sshd.client.session.AbstractClientSession.getPasswordIdentityProvider()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)"], ["org.apache.sshd.client.session.ClientProxyConnector", "org.apache.sshd.client.session.AbstractClientSession.getClientProxyConnector()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.addPasswordIdentity(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.session.AbstractClientSession.removePasswordIdentity(java.lang.String)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.addPublicKeyIdentity(java.security.KeyPair)"], ["java.security.KeyPair", "org.apache.sshd.client.session.AbstractClientSession.removePublicKeyIdentity(java.security.KeyPair)"], ["org.apache.sshd.client.channel.ClientChannel", "org.apache.sshd.client.session.AbstractClientSession.createChannel(java.lang.String)"], ["org.apache.sshd.client.channel.ClientChannel", "org.apache.sshd.client.session.AbstractClientSession.createChannel(java.lang.String, java.lang.String)"], ["org.apache.sshd.client.channel.ChannelExec", "org.apache.sshd.client.session.AbstractClientSession.createExecChannel(java.lang.String)"], ["org.apache.sshd.client.channel.ChannelSubsystem", "org.apache.sshd.client.session.AbstractClientSession.createSubsystemChannel(java.lang.String)"], ["org.apache.sshd.client.channel.ChannelDirectTcpip", "org.apache.sshd.client.session.AbstractClientSession.createDirectTcpipChannel(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.startService(java.lang.String)"], ["org.apache.sshd.client.channel.ChannelShell", "org.apache.sshd.client.session.AbstractClientSession.createShellChannel()"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.client.session.AbstractClientSession.switchToNoneCipher()"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.client.session.AbstractClientSession.getFactoryManager()"]]}