{"lucene-core-3.0.3.jar": [["java.lang.Package", "org.apache.lucene.LucenePackage.get()"], ["org.apache.lucene.analysis.ASCIIFoldingFilter", "org.apache.lucene.analysis.ASCIIFoldingFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.ASCIIFoldingFilter.incrementToken()"], ["void", "org.apache.lucene.analysis.ASCIIFoldingFilter.foldToASCII(char[], int)"], ["org.apache.lucene.analysis.Analyzer", "org.apache.lucene.analysis.Analyzer()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.Analyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["int", "org.apache.lucene.analysis.Analyzer.getPositionIncrementGap(java.lang.String)"], ["int", "org.apache.lucene.analysis.Analyzer.getOffsetGap(org.apache.lucene.document.Fieldable)"], ["void", "org.apache.lucene.analysis.Analyzer.close()"], ["org.apache.lucene.analysis.BaseCharFilter", "org.apache.lucene.analysis.BaseCharFilter(org.apache.lucene.analysis.CharStream)"], ["org.apache.lucene.analysis.CachingTokenFilter", "org.apache.lucene.analysis.CachingTokenFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.CachingTokenFilter.incrementToken()"], ["void", "org.apache.lucene.analysis.CachingTokenFilter.end()"], ["void", "org.apache.lucene.analysis.CachingTokenFilter.reset()"], ["boolean", "org.apache.lucene.analysis.CharArraySet$CharArraySetIterator.hasNext()"], ["char[]", "org.apache.lucene.analysis.CharArraySet$CharArraySetIterator.nextCharArray()"], ["java.lang.String", "org.apache.lucene.analysis.CharArraySet$CharArraySetIterator.next()"], ["void", "org.apache.lucene.analysis.CharArraySet$CharArraySetIterator.remove()"], ["java.lang.Object", "org.apache.lucene.analysis.CharArraySet$CharArraySetIterator.next()"], ["boolean", "org.apache.lucene.analysis.CharArraySet$UnmodifiableCharArraySet.add(java.lang.Object)"], ["boolean", "org.apache.lucene.analysis.CharArraySet$UnmodifiableCharArraySet.addAll(java.util.Collection<? extends java.lang.Object>)"], ["boolean", "org.apache.lucene.analysis.CharArraySet$UnmodifiableCharArraySet.add(char[])"], ["boolean", "org.apache.lucene.analysis.CharArraySet$UnmodifiableCharArraySet.add(java.lang.CharSequence)"], ["boolean", "org.apache.lucene.analysis.CharArraySet$UnmodifiableCharArraySet.add(java.lang.String)"], ["org.apache.lucene.analysis.CharArraySet", "org.apache.lucene.analysis.CharArraySet(int, boolean)"], ["org.apache.lucene.analysis.CharArraySet", "org.apache.lucene.analysis.CharArraySet(java.util.Collection<? extends java.lang.Object>, boolean)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.contains(char[], int, int)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.contains(java.lang.CharSequence)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.add(java.lang.CharSequence)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.add(java.lang.String)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.add(char[])"], ["int", "org.apache.lucene.analysis.CharArraySet.size()"], ["boolean", "org.apache.lucene.analysis.CharArraySet.isEmpty()"], ["boolean", "org.apache.lucene.analysis.CharArraySet.contains(java.lang.Object)"], ["boolean", "org.apache.lucene.analysis.CharArraySet.add(java.lang.Object)"], ["org.apache.lucene.analysis.CharArraySet", "org.apache.lucene.analysis.CharArraySet.unmodifiableSet(org.apache.lucene.analysis.CharArraySet)"], ["org.apache.lucene.analysis.CharArraySet", "org.apache.lucene.analysis.CharArraySet.copy(java.util.Set<?>)"], ["int", "org.apache.lucene.analysis.CharFilter.correctOffset(int)"], ["void", "org.apache.lucene.analysis.CharFilter.close()"], ["int", "org.apache.lucene.analysis.CharFilter.read(char[], int, int)"], ["boolean", "org.apache.lucene.analysis.CharFilter.markSupported()"], ["void", "org.apache.lucene.analysis.CharFilter.mark(int)"], ["void", "org.apache.lucene.analysis.CharFilter.reset()"], ["org.apache.lucene.analysis.CharStream", "org.apache.lucene.analysis.CharReader.get(java.io.Reader)"], ["int", "org.apache.lucene.analysis.CharReader.correctOffset(int)"], ["void", "org.apache.lucene.analysis.CharReader.close()"], ["int", "org.apache.lucene.analysis.CharReader.read(char[], int, int)"], ["boolean", "org.apache.lucene.analysis.CharReader.markSupported()"], ["void", "org.apache.lucene.analysis.CharReader.mark(int)"], ["void", "org.apache.lucene.analysis.CharReader.reset()"], ["org.apache.lucene.analysis.CharStream", "org.apache.lucene.analysis.CharStream()"], ["org.apache.lucene.analysis.CharTokenizer", "org.apache.lucene.analysis.CharTokenizer(java.io.Reader)"], ["org.apache.lucene.analysis.CharTokenizer", "org.apache.lucene.analysis.CharTokenizer(org.apache.lucene.util.AttributeSource, java.io.Reader)"], ["org.apache.lucene.analysis.CharTokenizer", "org.apache.lucene.analysis.CharTokenizer(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)"], ["boolean", "org.apache.lucene.analysis.CharTokenizer.incrementToken()"], ["void", "org.apache.lucene.analysis.CharTokenizer.end()"], ["void", "org.apache.lucene.analysis.CharTokenizer.reset(java.io.Reader)"], ["org.apache.lucene.analysis.ISOLatin1AccentFilter", "org.apache.lucene.analysis.ISOLatin1AccentFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.ISOLatin1AccentFilter.incrementToken()"], ["void", "org.apache.lucene.analysis.ISOLatin1AccentFilter.removeAccents(char[], int)"], ["org.apache.lucene.analysis.KeywordAnalyzer", "org.apache.lucene.analysis.KeywordAnalyzer()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.KeywordAnalyzer.tokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.KeywordAnalyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.KeywordTokenizer", "org.apache.lucene.analysis.KeywordTokenizer(java.io.Reader)"], ["org.apache.lucene.analysis.KeywordTokenizer", "org.apache.lucene.analysis.KeywordTokenizer(java.io.Reader, int)"], ["org.apache.lucene.analysis.KeywordTokenizer", "org.apache.lucene.analysis.KeywordTokenizer(org.apache.lucene.util.AttributeSource, java.io.Reader, int)"], ["org.apache.lucene.analysis.KeywordTokenizer", "org.apache.lucene.analysis.KeywordTokenizer(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, int)"], ["boolean", "org.apache.lucene.analysis.KeywordTokenizer.incrementToken()"], ["void", "org.apache.lucene.analysis.KeywordTokenizer.end()"], ["void", "org.apache.lucene.analysis.KeywordTokenizer.reset(java.io.Reader)"], ["org.apache.lucene.analysis.LengthFilter", "org.apache.lucene.analysis.LengthFilter(org.apache.lucene.analysis.TokenStream, int, int)"], ["boolean", "org.apache.lucene.analysis.LengthFilter.incrementToken()"], ["org.apache.lucene.analysis.LetterTokenizer", "org.apache.lucene.analysis.LetterTokenizer(java.io.Reader)"], ["org.apache.lucene.analysis.LetterTokenizer", "org.apache.lucene.analysis.LetterTokenizer(org.apache.lucene.util.AttributeSource, java.io.Reader)"], ["org.apache.lucene.analysis.LetterTokenizer", "org.apache.lucene.analysis.LetterTokenizer(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)"], ["org.apache.lucene.analysis.LowerCaseFilter", "org.apache.lucene.analysis.LowerCaseFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.LowerCaseFilter.incrementToken()"], ["org.apache.lucene.analysis.LowerCaseTokenizer", "org.apache.lucene.analysis.LowerCaseTokenizer(java.io.Reader)"], ["org.apache.lucene.analysis.LowerCaseTokenizer", "org.apache.lucene.analysis.LowerCaseTokenizer(org.apache.lucene.util.AttributeSource, java.io.Reader)"], ["org.apache.lucene.analysis.LowerCaseTokenizer", "org.apache.lucene.analysis.LowerCaseTokenizer(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)"], ["org.apache.lucene.analysis.MappingCharFilter", "org.apache.lucene.analysis.MappingCharFilter(org.apache.lucene.analysis.NormalizeCharMap, org.apache.lucene.analysis.CharStream)"], ["org.apache.lucene.analysis.MappingCharFilter", "org.apache.lucene.analysis.MappingCharFilter(org.apache.lucene.analysis.NormalizeCharMap, java.io.Reader)"], ["int", "org.apache.lucene.analysis.MappingCharFilter.read()"], ["int", "org.apache.lucene.analysis.MappingCharFilter.read(char[], int, int)"], ["org.apache.lucene.analysis.NormalizeCharMap", "org.apache.lucene.analysis.NormalizeCharMap()"], ["void", "org.apache.lucene.analysis.NormalizeCharMap.add(java.lang.String, java.lang.String)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream()"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream(int)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream(org.apache.lucene.util.AttributeSource, int)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream(org.apache.lucene.util.AttributeSource$AttributeFactory, int)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream.setLongValue(long)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream.setIntValue(int)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream.setDoubleValue(double)"], ["org.apache.lucene.analysis.NumericTokenStream", "org.apache.lucene.analysis.NumericTokenStream.setFloatValue(float)"], ["void", "org.apache.lucene.analysis.NumericTokenStream.reset()"], ["boolean", "org.apache.lucene.analysis.NumericTokenStream.incrementToken()"], ["java.lang.String", "org.apache.lucene.analysis.NumericTokenStream.toString()"], ["org.apache.lucene.analysis.PerFieldAnalyzerWrapper", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper(org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.analysis.PerFieldAnalyzerWrapper", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper(org.apache.lucene.analysis.Analyzer, java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer>)"], ["void", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.addAnalyzer(java.lang.String, org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.tokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.reusableTokenStream(java.lang.String, java.io.Reader)"], ["int", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.getPositionIncrementGap(java.lang.String)"], ["int", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.getOffsetGap(org.apache.lucene.document.Fieldable)"], ["java.lang.String", "org.apache.lucene.analysis.PerFieldAnalyzerWrapper.toString()"], ["org.apache.lucene.analysis.PorterStemFilter", "org.apache.lucene.analysis.PorterStemFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.PorterStemFilter.incrementToken()"], ["org.apache.lucene.analysis.PorterStemmer", "org.apache.lucene.analysis.PorterStemmer()"], ["void", "org.apache.lucene.analysis.PorterStemmer.reset()"], ["void", "org.apache.lucene.analysis.PorterStemmer.add(char)"], ["java.lang.String", "org.apache.lucene.analysis.PorterStemmer.toString()"], ["int", "org.apache.lucene.analysis.PorterStemmer.getResultLength()"], ["char[]", "org.apache.lucene.analysis.PorterStemmer.getResultBuffer()"], ["java.lang.String", "org.apache.lucene.analysis.PorterStemmer.stem(java.lang.String)"], ["boolean", "org.apache.lucene.analysis.PorterStemmer.stem(char[])"], ["boolean", "org.apache.lucene.analysis.PorterStemmer.stem(char[], int, int)"], ["boolean", "org.apache.lucene.analysis.PorterStemmer.stem(char[], int)"], ["boolean", "org.apache.lucene.analysis.PorterStemmer.stem()"], ["boolean", "org.apache.lucene.analysis.PorterStemmer.stem(int)"], ["void", "org.apache.lucene.analysis.PorterStemmer.main(java.lang.String[])"], ["org.apache.lucene.analysis.SimpleAnalyzer", "org.apache.lucene.analysis.SimpleAnalyzer()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.SimpleAnalyzer.tokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.SimpleAnalyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.StopAnalyzer", "org.apache.lucene.analysis.StopAnalyzer(org.apache.lucene.util.Version)"], ["org.apache.lucene.analysis.StopAnalyzer", "org.apache.lucene.analysis.StopAnalyzer(org.apache.lucene.util.Version, java.util.Set<?>)"], ["org.apache.lucene.analysis.StopAnalyzer", "org.apache.lucene.analysis.StopAnalyzer(org.apache.lucene.util.Version, java.io.File)"], ["org.apache.lucene.analysis.StopAnalyzer", "org.apache.lucene.analysis.StopAnalyzer(org.apache.lucene.util.Version, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.StopAnalyzer.tokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.StopAnalyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.StopFilter", "org.apache.lucene.analysis.StopFilter(boolean, org.apache.lucene.analysis.TokenStream, java.util.Set<?>, boolean)"], ["org.apache.lucene.analysis.StopFilter", "org.apache.lucene.analysis.StopFilter(boolean, org.apache.lucene.analysis.TokenStream, java.util.Set<?>)"], ["boolean", "org.apache.lucene.analysis.StopFilter.incrementToken()"], ["boolean", "org.apache.lucene.analysis.StopFilter.getEnablePositionIncrementsVersionDefault(org.apache.lucene.util.Version)"], ["boolean", "org.apache.lucene.analysis.StopFilter.getEnablePositionIncrements()"], ["void", "org.apache.lucene.analysis.StopFilter.setEnablePositionIncrements(boolean)"], ["boolean", "org.apache.lucene.analysis.TeeSinkTokenFilter$1.accept(org.apache.lucene.util.AttributeSource)"], ["org.apache.lucene.analysis.TeeSinkTokenFilter$SinkFilter", "org.apache.lucene.analysis.TeeSinkTokenFilter$SinkFilter()"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter$SinkFilter.reset()"], ["boolean", "org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream.incrementToken()"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream.end()"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream.reset()"], ["org.apache.lucene.analysis.TeeSinkTokenFilter", "org.apache.lucene.analysis.TeeSinkTokenFilter(org.apache.lucene.analysis.TokenStream)"], ["org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream", "org.apache.lucene.analysis.TeeSinkTokenFilter.newSinkTokenStream()"], ["org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream", "org.apache.lucene.analysis.TeeSinkTokenFilter.newSinkTokenStream(org.apache.lucene.analysis.TeeSinkTokenFilter$SinkFilter)"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter.addSinkTokenStream(org.apache.lucene.analysis.TeeSinkTokenFilter$SinkTokenStream)"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter.consumeAllTokens()"], ["boolean", "org.apache.lucene.analysis.TeeSinkTokenFilter.incrementToken()"], ["void", "org.apache.lucene.analysis.TeeSinkTokenFilter.end()"], ["org.apache.lucene.analysis.Token$TokenAttributeFactory", "org.apache.lucene.analysis.Token$TokenAttributeFactory(org.apache.lucene.util.AttributeSource$AttributeFactory)"], ["org.apache.lucene.util.AttributeImpl", "org.apache.lucene.analysis.Token$TokenAttributeFactory.createAttributeInstance(java.lang.Class<? extends org.apache.lucene.util.Attribute>)"], ["boolean", "org.apache.lucene.analysis.Token$TokenAttributeFactory.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.Token$TokenAttributeFactory.hashCode()"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token()"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(int, int, java.lang.String)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(int, int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(java.lang.String, int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(java.lang.String, int, int, java.lang.String)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(java.lang.String, int, int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token(char[], int, int, int, int)"], ["void", "org.apache.lucene.analysis.Token.setPositionIncrement(int)"], ["int", "org.apache.lucene.analysis.Token.getPositionIncrement()"], ["java.lang.String", "org.apache.lucene.analysis.Token.term()"], ["void", "org.apache.lucene.analysis.Token.setTermBuffer(char[], int, int)"], ["void", "org.apache.lucene.analysis.Token.setTermBuffer(java.lang.String)"], ["void", "org.apache.lucene.analysis.Token.setTermBuffer(java.lang.String, int, int)"], ["char[]", "org.apache.lucene.analysis.Token.termBuffer()"], ["char[]", "org.apache.lucene.analysis.Token.resizeTermBuffer(int)"], ["int", "org.apache.lucene.analysis.Token.termLength()"], ["void", "org.apache.lucene.analysis.Token.setTermLength(int)"], ["int", "org.apache.lucene.analysis.Token.startOffset()"], ["void", "org.apache.lucene.analysis.Token.setStartOffset(int)"], ["int", "org.apache.lucene.analysis.Token.endOffset()"], ["void", "org.apache.lucene.analysis.Token.setEndOffset(int)"], ["void", "org.apache.lucene.analysis.Token.setOffset(int, int)"], ["java.lang.String", "org.apache.lucene.analysis.Token.type()"], ["void", "org.apache.lucene.analysis.Token.setType(java.lang.String)"], ["int", "org.apache.lucene.analysis.Token.getFlags()"], ["void", "org.apache.lucene.analysis.Token.setFlags(int)"], ["org.apache.lucene.index.Payload", "org.apache.lucene.analysis.Token.getPayload()"], ["void", "org.apache.lucene.analysis.Token.setPayload(org.apache.lucene.index.Payload)"], ["java.lang.String", "org.apache.lucene.analysis.Token.toString()"], ["void", "org.apache.lucene.analysis.Token.clear()"], ["java.lang.Object", "org.apache.lucene.analysis.Token.clone()"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.clone(char[], int, int, int, int)"], ["boolean", "org.apache.lucene.analysis.Token.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.Token.hashCode()"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(char[], int, int, int, int, java.lang.String)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(char[], int, int, int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(java.lang.String, int, int, java.lang.String)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(java.lang.String, int, int, int, int, java.lang.String)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(java.lang.String, int, int)"], ["org.apache.lucene.analysis.Token", "org.apache.lucene.analysis.Token.reinit(java.lang.String, int, int, int, int)"], ["void", "org.apache.lucene.analysis.Token.reinit(org.apache.lucene.analysis.Token)"], ["void", "org.apache.lucene.analysis.Token.reinit(org.apache.lucene.analysis.Token, java.lang.String)"], ["void", "org.apache.lucene.analysis.Token.reinit(org.apache.lucene.analysis.Token, char[], int, int)"], ["void", "org.apache.lucene.analysis.Token.copyTo(org.apache.lucene.util.AttributeImpl)"], ["void", "org.apache.lucene.analysis.TokenFilter.end()"], ["void", "org.apache.lucene.analysis.TokenFilter.close()"], ["void", "org.apache.lucene.analysis.TokenFilter.reset()"], ["void", "org.apache.lucene.analysis.TokenStream.end()"], ["void", "org.apache.lucene.analysis.TokenStream.reset()"], ["void", "org.apache.lucene.analysis.TokenStream.close()"], ["void", "org.apache.lucene.analysis.Tokenizer.close()"], ["void", "org.apache.lucene.analysis.Tokenizer.reset(java.io.Reader)"], ["org.apache.lucene.analysis.WhitespaceAnalyzer", "org.apache.lucene.analysis.WhitespaceAnalyzer()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.WhitespaceAnalyzer.tokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.WhitespaceAnalyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.WhitespaceTokenizer", "org.apache.lucene.analysis.WhitespaceTokenizer(java.io.Reader)"], ["org.apache.lucene.analysis.WhitespaceTokenizer", "org.apache.lucene.analysis.WhitespaceTokenizer(org.apache.lucene.util.AttributeSource, java.io.Reader)"], ["org.apache.lucene.analysis.WhitespaceTokenizer", "org.apache.lucene.analysis.WhitespaceTokenizer(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)"], ["org.apache.lucene.analysis.WordlistLoader", "org.apache.lucene.analysis.WordlistLoader()"], ["java.util.HashMap<java.lang.String, java.lang.String>", "org.apache.lucene.analysis.WordlistLoader.getStemDict(java.io.File)"], ["org.apache.lucene.analysis.standard.StandardAnalyzer", "org.apache.lucene.analysis.standard.StandardAnalyzer(org.apache.lucene.util.Version)"], ["org.apache.lucene.analysis.standard.StandardAnalyzer", "org.apache.lucene.analysis.standard.StandardAnalyzer(org.apache.lucene.util.Version, java.util.Set<?>)"], ["org.apache.lucene.analysis.standard.StandardAnalyzer", "org.apache.lucene.analysis.standard.StandardAnalyzer(org.apache.lucene.util.Version, java.io.File)"], ["org.apache.lucene.analysis.standard.StandardAnalyzer", "org.apache.lucene.analysis.standard.StandardAnalyzer(org.apache.lucene.util.Version, java.io.Reader)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.standard.StandardAnalyzer.tokenStream(java.lang.String, java.io.Reader)"], ["void", "org.apache.lucene.analysis.standard.StandardAnalyzer.setMaxTokenLength(int)"], ["int", "org.apache.lucene.analysis.standard.StandardAnalyzer.getMaxTokenLength()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.analysis.standard.StandardAnalyzer.reusableTokenStream(java.lang.String, java.io.Reader)"], ["org.apache.lucene.analysis.standard.StandardFilter", "org.apache.lucene.analysis.standard.StandardFilter(org.apache.lucene.analysis.TokenStream)"], ["boolean", "org.apache.lucene.analysis.standard.StandardFilter.incrementToken()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizer.setMaxTokenLength(int)"], ["int", "org.apache.lucene.analysis.standard.StandardTokenizer.getMaxTokenLength()"], ["org.apache.lucene.analysis.standard.StandardTokenizer", "org.apache.lucene.analysis.standard.StandardTokenizer(org.apache.lucene.util.Version, java.io.Reader)"], ["org.apache.lucene.analysis.standard.StandardTokenizer", "org.apache.lucene.analysis.standard.StandardTokenizer(org.apache.lucene.util.Version, org.apache.lucene.util.AttributeSource, java.io.Reader)"], ["org.apache.lucene.analysis.standard.StandardTokenizer", "org.apache.lucene.analysis.standard.StandardTokenizer(org.apache.lucene.util.Version, org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)"], ["boolean", "org.apache.lucene.analysis.standard.StandardTokenizer.incrementToken()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizer.end()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizer.reset(java.io.Reader)"], ["boolean", "org.apache.lucene.analysis.standard.StandardTokenizer.isReplaceInvalidAcronym()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizer.setReplaceInvalidAcronym(boolean)"], ["int", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yychar()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yyclose()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yyreset(java.io.Reader)"], ["int", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yystate()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yybegin(int)"], ["java.lang.String", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yytext()"], ["char", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yycharat(int)"], ["int", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yylength()"], ["void", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.yypushback(int)"], ["int", "org.apache.lucene.analysis.standard.StandardTokenizerImpl.getNextToken()"], ["org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl()"], ["int", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.getFlags()"], ["void", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.setFlags(int)"], ["void", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.clear()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.FlagsAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl()"], ["int", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.startOffset()"], ["void", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.setOffset(int, int)"], ["int", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.endOffset()"], ["void", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.clear()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.OffsetAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl()"], ["org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl(org.apache.lucene.index.Payload)"], ["org.apache.lucene.index.Payload", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.getPayload()"], ["void", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.setPayload(org.apache.lucene.index.Payload)"], ["void", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.clear()"], ["java.lang.Object", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.clone()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.PayloadAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl()"], ["void", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.setPositionIncrement(int)"], ["int", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.getPositionIncrement()"], ["void", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.clear()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.PositionIncrementAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["org.apache.lucene.analysis.tokenattributes.TermAttributeImpl", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl()"], ["java.lang.String", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.term()"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.setTermBuffer(char[], int, int)"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.setTermBuffer(java.lang.String)"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.setTermBuffer(java.lang.String, int, int)"], ["char[]", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.termBuffer()"], ["char[]", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.resizeTermBuffer(int)"], ["int", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.termLength()"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.setTermLength(int)"], ["int", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.clear()"], ["java.lang.Object", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.clone()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.equals(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.toString()"], ["void", "org.apache.lucene.analysis.tokenattributes.TermAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl()"], ["org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl(java.lang.String)"], ["java.lang.String", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.type()"], ["void", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.setType(java.lang.String)"], ["void", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.clear()"], ["boolean", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.equals(java.lang.Object)"], ["int", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.hashCode()"], ["void", "org.apache.lucene.analysis.tokenattributes.TypeAttributeImpl.copyTo(org.apache.lucene.util.AttributeImpl)"], ["void", "org.apache.lucene.document.AbstractField.setBoost(float)"], ["float", "org.apache.lucene.document.AbstractField.getBoost()"], ["java.lang.String", "org.apache.lucene.document.AbstractField.name()"], ["boolean", "org.apache.lucene.document.AbstractField.isStored()"], ["boolean", "org.apache.lucene.document.AbstractField.isIndexed()"], ["boolean", "org.apache.lucene.document.AbstractField.isTokenized()"], ["boolean", "org.apache.lucene.document.AbstractField.isTermVectorStored()"], ["boolean", "org.apache.lucene.document.AbstractField.isStoreOffsetWithTermVector()"], ["boolean", "org.apache.lucene.document.AbstractField.isStorePositionWithTermVector()"], ["boolean", "org.apache.lucene.document.AbstractField.isBinary()"], ["byte[]", "org.apache.lucene.document.AbstractField.getBinaryValue()"], ["byte[]", "org.apache.lucene.document.AbstractField.getBinaryValue(byte[])"], ["int", "org.apache.lucene.document.AbstractField.getBinaryLength()"], ["int", "org.apache.lucene.document.AbstractField.getBinaryOffset()"], ["boolean", "org.apache.lucene.document.AbstractField.getOmitNorms()"], ["boolean", "org.apache.lucene.document.AbstractField.getOmitTermFreqAndPositions()"], ["void", "org.apache.lucene.document.AbstractField.setOmitNorms(boolean)"], ["void", "org.apache.lucene.document.AbstractField.setOmitTermFreqAndPositions(boolean)"], ["boolean", "org.apache.lucene.document.AbstractField.isLazy()"], ["java.lang.String", "org.apache.lucene.document.AbstractField.toString()"], ["byte[]", "org.apache.lucene.document.CompressionTools.compress(byte[], int, int, int)"], ["byte[]", "org.apache.lucene.document.CompressionTools.compress(byte[], int, int)"], ["byte[]", "org.apache.lucene.document.CompressionTools.compress(byte[])"], ["byte[]", "org.apache.lucene.document.CompressionTools.compressString(java.lang.String)"], ["byte[]", "org.apache.lucene.document.CompressionTools.compressString(java.lang.String, int)"], ["byte[]", "org.apache.lucene.document.CompressionTools.decompress(byte[])"], ["java.lang.String", "org.apache.lucene.document.CompressionTools.decompressString(byte[])"], ["java.lang.String", "org.apache.lucene.document.DateField.MIN_DATE_STRING()"], ["java.lang.String", "org.apache.lucene.document.DateField.MAX_DATE_STRING()"], ["java.lang.String", "org.apache.lucene.document.DateField.dateToString(java.util.Date)"], ["java.lang.String", "org.apache.lucene.document.DateField.timeToString(long)"], ["long", "org.apache.lucene.document.DateField.stringToTime(java.lang.String)"], ["java.util.Date", "org.apache.lucene.document.DateField.stringToDate(java.lang.String)"], ["java.lang.String", "org.apache.lucene.document.DateTools$Resolution.toString()"], ["synchronized", "org.apache.lucene.document.DateTools.java.lang.String dateToString(java.util.Date, org.apache.lucene.document.DateTools$Resolution)"], ["synchronized", "org.apache.lucene.document.DateTools.java.lang.String timeToString(long, org.apache.lucene.document.DateTools$Resolution)"], ["synchronized", "org.apache.lucene.document.DateTools.long stringToTime(java.lang.String)"], ["synchronized", "org.apache.lucene.document.DateTools.java.util.Date stringToDate(java.lang.String)"], ["synchronized", "org.apache.lucene.document.DateTools.java.util.Date round(java.util.Date, org.apache.lucene.document.DateTools$Resolution)"], ["synchronized", "org.apache.lucene.document.DateTools.long round(long, org.apache.lucene.document.DateTools$Resolution)"], ["org.apache.lucene.document.Document", "org.apache.lucene.document.Document()"], ["void", "org.apache.lucene.document.Document.setBoost(float)"], ["float", "org.apache.lucene.document.Document.getBoost()"], ["void", "org.apache.lucene.document.Document.add(org.apache.lucene.document.Fieldable)"], ["void", "org.apache.lucene.document.Document.removeField(java.lang.String)"], ["void", "org.apache.lucene.document.Document.removeFields(java.lang.String)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Document.getField(java.lang.String)"], ["org.apache.lucene.document.Fieldable", "org.apache.lucene.document.Document.getFieldable(java.lang.String)"], ["java.lang.String", "org.apache.lucene.document.Document.get(java.lang.String)"], ["org.apache.lucene.document.Field[]", "org.apache.lucene.document.Document.getFields(java.lang.String)"], ["org.apache.lucene.document.Fieldable[]", "org.apache.lucene.document.Document.getFieldables(java.lang.String)"], ["java.lang.String[]", "org.apache.lucene.document.Document.getValues(java.lang.String)"], ["byte[][]", "org.apache.lucene.document.Document.getBinaryValues(java.lang.String)"], ["byte[]", "org.apache.lucene.document.Document.getBinaryValue(java.lang.String)"], ["java.lang.String", "org.apache.lucene.document.Document.toString()"], ["boolean", "org.apache.lucene.document.Field$Index$1.isIndexed()"], ["boolean", "org.apache.lucene.document.Field$Index$1.isAnalyzed()"], ["boolean", "org.apache.lucene.document.Field$Index$1.omitNorms()"], ["boolean", "org.apache.lucene.document.Field$Index$2.isIndexed()"], ["boolean", "org.apache.lucene.document.Field$Index$2.isAnalyzed()"], ["boolean", "org.apache.lucene.document.Field$Index$2.omitNorms()"], ["boolean", "org.apache.lucene.document.Field$Index$3.isIndexed()"], ["boolean", "org.apache.lucene.document.Field$Index$3.isAnalyzed()"], ["boolean", "org.apache.lucene.document.Field$Index$3.omitNorms()"], ["boolean", "org.apache.lucene.document.Field$Index$4.isIndexed()"], ["boolean", "org.apache.lucene.document.Field$Index$4.isAnalyzed()"], ["boolean", "org.apache.lucene.document.Field$Index$4.omitNorms()"], ["boolean", "org.apache.lucene.document.Field$Index$5.isIndexed()"], ["boolean", "org.apache.lucene.document.Field$Index$5.isAnalyzed()"], ["boolean", "org.apache.lucene.document.Field$Index$5.omitNorms()"], ["org.apache.lucene.document.Field$Index[]", "org.apache.lucene.document.Field$Index.values()"], ["org.apache.lucene.document.Field$Index", "org.apache.lucene.document.Field$Index.valueOf(java.lang.String)"], ["org.apache.lucene.document.Field$Index", "org.apache.lucene.document.Field$Index.toIndex(boolean, boolean)"], ["org.apache.lucene.document.Field$Index", "org.apache.lucene.document.Field$Index.toIndex(boolean, boolean, boolean)"], ["boolean", "org.apache.lucene.document.Field$Store$1.isStored()"], ["boolean", "org.apache.lucene.document.Field$Store$2.isStored()"], ["org.apache.lucene.document.Field$Store[]", "org.apache.lucene.document.Field$Store.values()"], ["org.apache.lucene.document.Field$Store", "org.apache.lucene.document.Field$Store.valueOf(java.lang.String)"], ["boolean", "org.apache.lucene.document.Field$TermVector$1.isStored()"], ["boolean", "org.apache.lucene.document.Field$TermVector$1.withPositions()"], ["boolean", "org.apache.lucene.document.Field$TermVector$1.withOffsets()"], ["boolean", "org.apache.lucene.document.Field$TermVector$2.isStored()"], ["boolean", "org.apache.lucene.document.Field$TermVector$2.withPositions()"], ["boolean", "org.apache.lucene.document.Field$TermVector$2.withOffsets()"], ["boolean", "org.apache.lucene.document.Field$TermVector$3.isStored()"], ["boolean", "org.apache.lucene.document.Field$TermVector$3.withPositions()"], ["boolean", "org.apache.lucene.document.Field$TermVector$3.withOffsets()"], ["boolean", "org.apache.lucene.document.Field$TermVector$4.isStored()"], ["boolean", "org.apache.lucene.document.Field$TermVector$4.withPositions()"], ["boolean", "org.apache.lucene.document.Field$TermVector$4.withOffsets()"], ["boolean", "org.apache.lucene.document.Field$TermVector$5.isStored()"], ["boolean", "org.apache.lucene.document.Field$TermVector$5.withPositions()"], ["boolean", "org.apache.lucene.document.Field$TermVector$5.withOffsets()"], ["org.apache.lucene.document.Field$TermVector[]", "org.apache.lucene.document.Field$TermVector.values()"], ["org.apache.lucene.document.Field$TermVector", "org.apache.lucene.document.Field$TermVector.valueOf(java.lang.String)"], ["org.apache.lucene.document.Field$TermVector", "org.apache.lucene.document.Field$TermVector.toTermVector(boolean, boolean, boolean)"], ["java.lang.String", "org.apache.lucene.document.Field.stringValue()"], ["java.io.Reader", "org.apache.lucene.document.Field.readerValue()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.document.Field.tokenStreamValue()"], ["void", "org.apache.lucene.document.Field.setValue(java.lang.String)"], ["void", "org.apache.lucene.document.Field.setValue(java.io.Reader)"], ["void", "org.apache.lucene.document.Field.setValue(byte[])"], ["void", "org.apache.lucene.document.Field.setValue(byte[], int, int)"], ["void", "org.apache.lucene.document.Field.setTokenStream(org.apache.lucene.analysis.TokenStream)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, java.lang.String, org.apache.lucene.document.Field$Store, org.apache.lucene.document.Field$Index)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, java.lang.String, org.apache.lucene.document.Field$Store, org.apache.lucene.document.Field$Index, org.apache.lucene.document.Field$TermVector)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, boolean, java.lang.String, org.apache.lucene.document.Field$Store, org.apache.lucene.document.Field$Index, org.apache.lucene.document.Field$TermVector)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, java.io.Reader)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, java.io.Reader, org.apache.lucene.document.Field$TermVector)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, org.apache.lucene.analysis.TokenStream)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, org.apache.lucene.analysis.TokenStream, org.apache.lucene.document.Field$TermVector)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, byte[], org.apache.lucene.document.Field$Store)"], ["org.apache.lucene.document.Field", "org.apache.lucene.document.Field(java.lang.String, byte[], int, int, org.apache.lucene.document.Field$Store)"], ["org.apache.lucene.document.FieldSelectorResult[]", "org.apache.lucene.document.FieldSelectorResult.values()"], ["org.apache.lucene.document.FieldSelectorResult", "org.apache.lucene.document.FieldSelectorResult.valueOf(java.lang.String)"], ["org.apache.lucene.document.LoadFirstFieldSelector", "org.apache.lucene.document.LoadFirstFieldSelector()"], ["org.apache.lucene.document.FieldSelectorResult", "org.apache.lucene.document.LoadFirstFieldSelector.accept(java.lang.String)"], ["org.apache.lucene.document.MapFieldSelector", "org.apache.lucene.document.MapFieldSelector(java.util.Map<java.lang.String, org.apache.lucene.document.FieldSelectorResult>)"], ["org.apache.lucene.document.MapFieldSelector", "org.apache.lucene.document.MapFieldSelector(java.util.List<java.lang.String>)"], ["org.apache.lucene.document.MapFieldSelector", "org.apache.lucene.document.MapFieldSelector(java.lang.String...)"], ["org.apache.lucene.document.FieldSelectorResult", "org.apache.lucene.document.MapFieldSelector.accept(java.lang.String)"], ["org.apache.lucene.document.NumberTools", "org.apache.lucene.document.NumberTools()"], ["java.lang.String", "org.apache.lucene.document.NumberTools.longToString(long)"], ["long", "org.apache.lucene.document.NumberTools.stringToLong(java.lang.String)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField(java.lang.String)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField(java.lang.String, org.apache.lucene.document.Field$Store, boolean)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField(java.lang.String, int)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField(java.lang.String, int, org.apache.lucene.document.Field$Store, boolean)"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.document.NumericField.tokenStreamValue()"], ["byte[]", "org.apache.lucene.document.NumericField.getBinaryValue(byte[])"], ["java.io.Reader", "org.apache.lucene.document.NumericField.readerValue()"], ["java.lang.String", "org.apache.lucene.document.NumericField.stringValue()"], ["java.lang.Number", "org.apache.lucene.document.NumericField.getNumericValue()"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField.setLongValue(long)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField.setIntValue(int)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField.setDoubleValue(double)"], ["org.apache.lucene.document.NumericField", "org.apache.lucene.document.NumericField.setFloatValue(float)"], ["org.apache.lucene.document.SetBasedFieldSelector", "org.apache.lucene.document.SetBasedFieldSelector(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"], ["org.apache.lucene.document.FieldSelectorResult", "org.apache.lucene.document.SetBasedFieldSelector.accept(java.lang.String)"], ["void", "org.apache.lucene.index.AbstractAllTermDocs.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.AbstractAllTermDocs.seek(org.apache.lucene.index.TermEnum)"], ["int", "org.apache.lucene.index.AbstractAllTermDocs.doc()"], ["int", "org.apache.lucene.index.AbstractAllTermDocs.freq()"], ["boolean", "org.apache.lucene.index.AbstractAllTermDocs.next()"], ["int", "org.apache.lucene.index.AbstractAllTermDocs.read(int[], int[])"], ["boolean", "org.apache.lucene.index.AbstractAllTermDocs.skipTo(int)"], ["void", "org.apache.lucene.index.AbstractAllTermDocs.close()"], ["boolean", "org.apache.lucene.index.AllTermDocs.isDeleted(int)"], ["org.apache.lucene.index.BufferedDeletes", "org.apache.lucene.index.BufferedDeletes(boolean)"], ["org.apache.lucene.index.ByteBlockPool", "org.apache.lucene.index.ByteBlockPool(org.apache.lucene.index.ByteBlockPool$Allocator, boolean)"], ["void", "org.apache.lucene.index.ByteBlockPool.reset()"], ["void", "org.apache.lucene.index.ByteBlockPool.nextBuffer()"], ["int", "org.apache.lucene.index.ByteBlockPool.newSlice(int)"], ["int", "org.apache.lucene.index.ByteBlockPool.allocSlice(byte[], int)"], ["void", "org.apache.lucene.index.ByteSliceReader.init(org.apache.lucene.index.ByteBlockPool, int, int)"], ["boolean", "org.apache.lucene.index.ByteSliceReader.eof()"], ["byte", "org.apache.lucene.index.ByteSliceReader.readByte()"], ["long", "org.apache.lucene.index.ByteSliceReader.writeTo(org.apache.lucene.store.IndexOutput)"], ["void", "org.apache.lucene.index.ByteSliceReader.nextSlice()"], ["void", "org.apache.lucene.index.ByteSliceReader.readBytes(byte[], int, int)"], ["long", "org.apache.lucene.index.ByteSliceReader.getFilePointer()"], ["long", "org.apache.lucene.index.ByteSliceReader.length()"], ["void", "org.apache.lucene.index.ByteSliceReader.seek(long)"], ["void", "org.apache.lucene.index.ByteSliceReader.close()"], ["org.apache.lucene.index.ByteSliceWriter", "org.apache.lucene.index.ByteSliceWriter(org.apache.lucene.index.ByteBlockPool)"], ["void", "org.apache.lucene.index.ByteSliceWriter.init(int)"], ["void", "org.apache.lucene.index.ByteSliceWriter.writeByte(byte)"], ["void", "org.apache.lucene.index.ByteSliceWriter.writeBytes(byte[], int, int)"], ["int", "org.apache.lucene.index.ByteSliceWriter.getAddress()"], ["void", "org.apache.lucene.index.ByteSliceWriter.writeVInt(int)"], ["org.apache.lucene.index.CharBlockPool", "org.apache.lucene.index.CharBlockPool(org.apache.lucene.index.DocumentsWriter)"], ["void", "org.apache.lucene.index.CharBlockPool.reset()"], ["void", "org.apache.lucene.index.CharBlockPool.nextBuffer()"], ["void", "org.apache.lucene.index.CheckIndex$MySegmentTermDocs.seek(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.CheckIndex$Status$FieldNormStatus", "org.apache.lucene.index.CheckIndex$Status$FieldNormStatus()"], ["org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus", "org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus()"], ["org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus", "org.apache.lucene.index.CheckIndex$Status$StoredFieldStatus()"], ["org.apache.lucene.index.CheckIndex$Status$TermIndexStatus", "org.apache.lucene.index.CheckIndex$Status$TermIndexStatus()"], ["org.apache.lucene.index.CheckIndex$Status$TermVectorStatus", "org.apache.lucene.index.CheckIndex$Status$TermVectorStatus()"], ["org.apache.lucene.index.CheckIndex$Status", "org.apache.lucene.index.CheckIndex$Status()"], ["org.apache.lucene.index.CheckIndex", "org.apache.lucene.index.CheckIndex(org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.CheckIndex.setInfoStream(java.io.PrintStream)"], ["org.apache.lucene.index.CheckIndex$Status", "org.apache.lucene.index.CheckIndex.checkIndex()"], ["org.apache.lucene.index.CheckIndex$Status", "org.apache.lucene.index.CheckIndex.checkIndex(java.util.List<java.lang.String>)"], ["void", "org.apache.lucene.index.CheckIndex.fixIndex(org.apache.lucene.index.CheckIndex$Status)"], ["void", "org.apache.lucene.index.CheckIndex.main(java.lang.String[])"], ["java.lang.Object", "org.apache.lucene.index.CompoundFileReader$CSIndexInput.clone()"], ["void", "org.apache.lucene.index.CompoundFileReader$CSIndexInput.close()"], ["long", "org.apache.lucene.index.CompoundFileReader$CSIndexInput.length()"], ["org.apache.lucene.index.CompoundFileReader", "org.apache.lucene.index.CompoundFileReader(org.apache.lucene.store.Directory, java.lang.String)"], ["org.apache.lucene.index.CompoundFileReader", "org.apache.lucene.index.CompoundFileReader(org.apache.lucene.store.Directory, java.lang.String, int)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.CompoundFileReader.getDirectory()"], ["java.lang.String", "org.apache.lucene.index.CompoundFileReader.getName()"], ["synchronized", "org.apache.lucene.index.CompoundFileReader.void close()"], ["synchronized", "org.apache.lucene.index.CompoundFileReader.org.apache.lucene.store.IndexInput openInput(java.lang.String)"], ["synchronized", "org.apache.lucene.index.CompoundFileReader.org.apache.lucene.store.IndexInput openInput(java.lang.String, int)"], ["java.lang.String[]", "org.apache.lucene.index.CompoundFileReader.listAll()"], ["boolean", "org.apache.lucene.index.CompoundFileReader.fileExists(java.lang.String)"], ["long", "org.apache.lucene.index.CompoundFileReader.fileModified(java.lang.String)"], ["void", "org.apache.lucene.index.CompoundFileReader.touchFile(java.lang.String)"], ["void", "org.apache.lucene.index.CompoundFileReader.deleteFile(java.lang.String)"], ["void", "org.apache.lucene.index.CompoundFileReader.renameFile(java.lang.String, java.lang.String)"], ["long", "org.apache.lucene.index.CompoundFileReader.fileLength(java.lang.String)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.index.CompoundFileReader.createOutput(java.lang.String)"], ["org.apache.lucene.store.Lock", "org.apache.lucene.index.CompoundFileReader.makeLock(java.lang.String)"], ["org.apache.lucene.index.CompoundFileWriter", "org.apache.lucene.index.CompoundFileWriter(org.apache.lucene.store.Directory, java.lang.String)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.CompoundFileWriter.getDirectory()"], ["java.lang.String", "org.apache.lucene.index.CompoundFileWriter.getName()"], ["void", "org.apache.lucene.index.CompoundFileWriter.addFile(java.lang.String)"], ["void", "org.apache.lucene.index.CompoundFileWriter.close()"], ["org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread(org.apache.lucene.index.ConcurrentMergeScheduler, org.apache.lucene.index.IndexWriter, org.apache.lucene.index.MergePolicy$OneMerge)"], ["synchronized", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.void setRunningMerge(org.apache.lucene.index.MergePolicy$OneMerge)"], ["synchronized", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.org.apache.lucene.index.MergePolicy$OneMerge getRunningMerge()"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.setThreadPriority(int)"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run()"], ["java.lang.String", "org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.toString()"], ["org.apache.lucene.index.ConcurrentMergeScheduler", "org.apache.lucene.index.ConcurrentMergeScheduler()"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler.setMaxThreadCount(int)"], ["int", "org.apache.lucene.index.ConcurrentMergeScheduler.getMaxThreadCount()"], ["synchronized", "org.apache.lucene.index.ConcurrentMergeScheduler.int getMergeThreadPriority()"], ["synchronized", "org.apache.lucene.index.ConcurrentMergeScheduler.void setMergeThreadPriority(int)"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler.close()"], ["synchronized", "org.apache.lucene.index.ConcurrentMergeScheduler.void sync()"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler.merge(org.apache.lucene.index.IndexWriter)"], ["boolean", "org.apache.lucene.index.ConcurrentMergeScheduler.anyUnhandledExceptions()"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler.clearUnhandledExceptions()"], ["void", "org.apache.lucene.index.ConcurrentMergeScheduler.setTestMode()"], ["org.apache.lucene.index.CorruptIndexException", "org.apache.lucene.index.CorruptIndexException(java.lang.String)"], ["org.apache.lucene.index.DirectoryReader$MultiTermDocs", "org.apache.lucene.index.DirectoryReader$MultiTermDocs(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[])"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.doc()"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.freq()"], ["void", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.seek(org.apache.lucene.index.TermEnum)"], ["boolean", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.next()"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.read(int[], int[])"], ["boolean", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.skipTo(int)"], ["void", "org.apache.lucene.index.DirectoryReader$MultiTermDocs.close()"], ["org.apache.lucene.index.DirectoryReader$MultiTermEnum", "org.apache.lucene.index.DirectoryReader$MultiTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[], org.apache.lucene.index.Term)"], ["boolean", "org.apache.lucene.index.DirectoryReader$MultiTermEnum.next()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.DirectoryReader$MultiTermEnum.term()"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermEnum.docFreq()"], ["void", "org.apache.lucene.index.DirectoryReader$MultiTermEnum.close()"], ["org.apache.lucene.index.DirectoryReader$MultiTermPositions", "org.apache.lucene.index.DirectoryReader$MultiTermPositions(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[])"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermPositions.nextPosition()"], ["int", "org.apache.lucene.index.DirectoryReader$MultiTermPositions.getPayloadLength()"], ["byte[]", "org.apache.lucene.index.DirectoryReader$MultiTermPositions.getPayload(byte[], int)"], ["boolean", "org.apache.lucene.index.DirectoryReader$MultiTermPositions.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.index.DirectoryReader$ReaderCommit.toString()"], ["boolean", "org.apache.lucene.index.DirectoryReader$ReaderCommit.isOptimized()"], ["java.lang.String", "org.apache.lucene.index.DirectoryReader$ReaderCommit.getSegmentsFileName()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.DirectoryReader$ReaderCommit.getDirectory()"], ["long", "org.apache.lucene.index.DirectoryReader$ReaderCommit.getVersion()"], ["long", "org.apache.lucene.index.DirectoryReader$ReaderCommit.getGeneration()"], ["boolean", "org.apache.lucene.index.DirectoryReader$ReaderCommit.isDeleted()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.DirectoryReader$ReaderCommit.getUserData()"], ["void", "org.apache.lucene.index.DirectoryReader$ReaderCommit.delete()"], ["synchronized", "org.apache.lucene.index.DirectoryReader.java.lang.Object clone()"], ["synchronized", "org.apache.lucene.index.DirectoryReader.org.apache.lucene.index.IndexReader clone(boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.DirectoryReader.reopen()"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.DirectoryReader.reopen(boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.DirectoryReader.reopen(org.apache.lucene.index.IndexCommit)"], ["long", "org.apache.lucene.index.DirectoryReader.getVersion()"], ["org.apache.lucene.index.TermFreqVector[]", "org.apache.lucene.index.DirectoryReader.getTermFreqVectors(int)"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.DirectoryReader.getTermFreqVector(int, java.lang.String)"], ["void", "org.apache.lucene.index.DirectoryReader.getTermFreqVector(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.DirectoryReader.getTermFreqVector(int, org.apache.lucene.index.TermVectorMapper)"], ["boolean", "org.apache.lucene.index.DirectoryReader.isOptimized()"], ["int", "org.apache.lucene.index.DirectoryReader.numDocs()"], ["int", "org.apache.lucene.index.DirectoryReader.maxDoc()"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.DirectoryReader.document(int, org.apache.lucene.document.FieldSelector)"], ["boolean", "org.apache.lucene.index.DirectoryReader.isDeleted(int)"], ["boolean", "org.apache.lucene.index.DirectoryReader.hasDeletions()"], ["boolean", "org.apache.lucene.index.DirectoryReader.hasNorms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.DirectoryReader.byte[] norms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.DirectoryReader.void norms(java.lang.String, byte[], int)"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.DirectoryReader.terms()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.DirectoryReader.terms(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.DirectoryReader.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.DirectoryReader.termDocs()"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.DirectoryReader.termPositions()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.DirectoryReader.getCommitUserData()"], ["boolean", "org.apache.lucene.index.DirectoryReader.isCurrent()"], ["org.apache.lucene.index.IndexReader[]", "org.apache.lucene.index.DirectoryReader.getSequentialSubReaders()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.DirectoryReader.directory()"], ["int", "org.apache.lucene.index.DirectoryReader.getTermInfosIndexDivisor()"], ["org.apache.lucene.index.IndexCommit", "org.apache.lucene.index.DirectoryReader.getIndexCommit()"], ["long", "org.apache.lucene.index.DocFieldConsumers$PerDoc.sizeInBytes()"], ["void", "org.apache.lucene.index.DocFieldConsumers$PerDoc.finish()"], ["void", "org.apache.lucene.index.DocFieldConsumers$PerDoc.abort()"], ["org.apache.lucene.index.DocFieldConsumers", "org.apache.lucene.index.DocFieldConsumers(org.apache.lucene.index.DocFieldConsumer, org.apache.lucene.index.DocFieldConsumer)"], ["void", "org.apache.lucene.index.DocFieldConsumers.flush(java.util.Map<org.apache.lucene.index.DocFieldConsumerPerThread, java.util.Collection<org.apache.lucene.index.DocFieldConsumerPerField>>, org.apache.lucene.index.SegmentWriteState)"], ["void", "org.apache.lucene.index.DocFieldConsumers.closeDocStore(org.apache.lucene.index.SegmentWriteState)"], ["void", "org.apache.lucene.index.DocFieldConsumers.abort()"], ["boolean", "org.apache.lucene.index.DocFieldConsumers.freeRAM()"], ["org.apache.lucene.index.DocFieldConsumerPerThread", "org.apache.lucene.index.DocFieldConsumers.addThread(org.apache.lucene.index.DocFieldProcessorPerThread)"], ["org.apache.lucene.index.DocFieldConsumersPerField", "org.apache.lucene.index.DocFieldConsumersPerField(org.apache.lucene.index.DocFieldConsumersPerThread, org.apache.lucene.index.DocFieldConsumerPerField, org.apache.lucene.index.DocFieldConsumerPerField)"], ["void", "org.apache.lucene.index.DocFieldConsumersPerField.processFields(org.apache.lucene.document.Fieldable[], int)"], ["void", "org.apache.lucene.index.DocFieldConsumersPerField.abort()"], ["org.apache.lucene.index.DocFieldConsumersPerThread", "org.apache.lucene.index.DocFieldConsumersPerThread(org.apache.lucene.index.DocFieldProcessorPerThread, org.apache.lucene.index.DocFieldConsumers, org.apache.lucene.index.DocFieldConsumerPerThread, org.apache.lucene.index.DocFieldConsumerPerThread)"], ["void", "org.apache.lucene.index.DocFieldConsumersPerThread.startDocument()"], ["void", "org.apache.lucene.index.DocFieldConsumersPerThread.abort()"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.DocFieldConsumersPerThread.finishDocument()"], ["org.apache.lucene.index.DocFieldConsumerPerField", "org.apache.lucene.index.DocFieldConsumersPerThread.addField(org.apache.lucene.index.FieldInfo)"], ["org.apache.lucene.index.DocFieldProcessor", "org.apache.lucene.index.DocFieldProcessor(org.apache.lucene.index.DocumentsWriter, org.apache.lucene.index.DocFieldConsumer)"], ["void", "org.apache.lucene.index.DocFieldProcessor.closeDocStore(org.apache.lucene.index.SegmentWriteState)"], ["void", "org.apache.lucene.index.DocFieldProcessor.flush(java.util.Collection<org.apache.lucene.index.DocConsumerPerThread>, org.apache.lucene.index.SegmentWriteState)"], ["void", "org.apache.lucene.index.DocFieldProcessor.abort()"], ["boolean", "org.apache.lucene.index.DocFieldProcessor.freeRAM()"], ["org.apache.lucene.index.DocConsumerPerThread", "org.apache.lucene.index.DocFieldProcessor.addThread(org.apache.lucene.index.DocumentsWriterThreadState)"], ["org.apache.lucene.index.DocFieldProcessorPerField", "org.apache.lucene.index.DocFieldProcessorPerField(org.apache.lucene.index.DocFieldProcessorPerThread, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.DocFieldProcessorPerField.abort()"], ["long", "org.apache.lucene.index.DocFieldProcessorPerThread$PerDoc.sizeInBytes()"], ["void", "org.apache.lucene.index.DocFieldProcessorPerThread$PerDoc.finish()"], ["void", "org.apache.lucene.index.DocFieldProcessorPerThread$PerDoc.abort()"], ["org.apache.lucene.index.DocFieldProcessorPerThread", "org.apache.lucene.index.DocFieldProcessorPerThread(org.apache.lucene.index.DocumentsWriterThreadState, org.apache.lucene.index.DocFieldProcessor)"], ["void", "org.apache.lucene.index.DocFieldProcessorPerThread.abort()"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.DocFieldProcessorPerThread.processDocument()"], ["org.apache.lucene.index.DocInverter", "org.apache.lucene.index.DocInverter(org.apache.lucene.index.InvertedDocConsumer, org.apache.lucene.index.InvertedDocEndConsumer)"], ["void", "org.apache.lucene.index.DocInverter.closeDocStore(org.apache.lucene.index.SegmentWriteState)"], ["boolean", "org.apache.lucene.index.DocInverter.freeRAM()"], ["org.apache.lucene.index.DocFieldConsumerPerThread", "org.apache.lucene.index.DocInverter.addThread(org.apache.lucene.index.DocFieldProcessorPerThread)"], ["org.apache.lucene.index.DocInverterPerField", "org.apache.lucene.index.DocInverterPerField(org.apache.lucene.index.DocInverterPerThread, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.DocInverterPerField.processFields(org.apache.lucene.document.Fieldable[], int)"], ["void", "org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource.reinit(java.lang.String, int, int)"], ["org.apache.lucene.index.DocInverterPerThread", "org.apache.lucene.index.DocInverterPerThread(org.apache.lucene.index.DocFieldProcessorPerThread, org.apache.lucene.index.DocInverter)"], ["void", "org.apache.lucene.index.DocInverterPerThread.startDocument()"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.DocInverterPerThread.finishDocument()"], ["org.apache.lucene.index.DocFieldConsumerPerField", "org.apache.lucene.index.DocInverterPerThread.addField(org.apache.lucene.index.FieldInfo)"], ["boolean", "org.apache.lucene.index.DocumentsWriter$DocState.testPoint(java.lang.String)"], ["void", "org.apache.lucene.index.DocumentsWriter$DocState.clear()"], ["org.apache.lucene.index.DocumentsWriter$WaitQueue", "org.apache.lucene.index.DocumentsWriter$WaitQueue(org.apache.lucene.index.DocumentsWriter)"], ["synchronized", "org.apache.lucene.index.DocumentsWriter$WaitQueue.boolean add(org.apache.lucene.index.DocumentsWriter$DocWriter)"], ["org.apache.lucene.index.DocumentsWriterThreadState", "org.apache.lucene.index.DocumentsWriterThreadState(org.apache.lucene.index.DocumentsWriter)"], ["java.lang.Object", "org.apache.lucene.index.FieldInfo.clone()"], ["synchronized", "org.apache.lucene.index.FieldInfos.java.lang.Object clone()"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(org.apache.lucene.document.Document)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void addIndexed(java.util.Collection<java.lang.String>, boolean, boolean, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(java.util.Collection<java.lang.String>, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(java.lang.String, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(java.lang.String, boolean, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(java.lang.String, boolean, boolean, boolean, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.void add(java.lang.String, boolean, boolean, boolean, boolean, boolean)"], ["synchronized", "org.apache.lucene.index.FieldInfos.org.apache.lucene.index.FieldInfo add(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean)"], ["int", "org.apache.lucene.index.FieldInfos.fieldNumber(java.lang.String)"], ["org.apache.lucene.index.FieldInfo", "org.apache.lucene.index.FieldInfos.fieldInfo(java.lang.String)"], ["java.lang.String", "org.apache.lucene.index.FieldInfos.fieldName(int)"], ["org.apache.lucene.index.FieldInfo", "org.apache.lucene.index.FieldInfos.fieldInfo(int)"], ["int", "org.apache.lucene.index.FieldInfos.size()"], ["boolean", "org.apache.lucene.index.FieldInfos.hasVectors()"], ["void", "org.apache.lucene.index.FieldInfos.write(org.apache.lucene.store.Directory, java.lang.String)"], ["void", "org.apache.lucene.index.FieldInfos.write(org.apache.lucene.store.IndexOutput)"], ["org.apache.lucene.index.FieldInvertState", "org.apache.lucene.index.FieldInvertState()"], ["org.apache.lucene.index.FieldInvertState", "org.apache.lucene.index.FieldInvertState(int, int, int, int, float)"], ["int", "org.apache.lucene.index.FieldInvertState.getPosition()"], ["int", "org.apache.lucene.index.FieldInvertState.getLength()"], ["int", "org.apache.lucene.index.FieldInvertState.getNumOverlap()"], ["int", "org.apache.lucene.index.FieldInvertState.getOffset()"], ["float", "org.apache.lucene.index.FieldInvertState.getBoost()"], ["org.apache.lucene.util.AttributeSource", "org.apache.lucene.index.FieldInvertState.getAttributeSource()"], ["org.apache.lucene.index.FieldReaderException", "org.apache.lucene.index.FieldReaderException()"], ["org.apache.lucene.index.FieldReaderException", "org.apache.lucene.index.FieldReaderException(java.lang.Throwable)"], ["org.apache.lucene.index.FieldReaderException", "org.apache.lucene.index.FieldReaderException(java.lang.String)"], ["org.apache.lucene.index.FieldReaderException", "org.apache.lucene.index.FieldReaderException(java.lang.String, java.lang.Throwable)"], ["org.apache.lucene.index.FieldSortedTermVectorMapper", "org.apache.lucene.index.FieldSortedTermVectorMapper(java.util.Comparator<org.apache.lucene.index.TermVectorEntry>)"], ["org.apache.lucene.index.FieldSortedTermVectorMapper", "org.apache.lucene.index.FieldSortedTermVectorMapper(boolean, boolean, java.util.Comparator<org.apache.lucene.index.TermVectorEntry>)"], ["void", "org.apache.lucene.index.FieldSortedTermVectorMapper.map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])"], ["void", "org.apache.lucene.index.FieldSortedTermVectorMapper.setExpectations(java.lang.String, int, boolean, boolean)"], ["java.util.Map<java.lang.String, java.util.SortedSet<org.apache.lucene.index.TermVectorEntry>>", "org.apache.lucene.index.FieldSortedTermVectorMapper.getFieldToTerms()"], ["org.apache.lucene.index.FieldsReader$LazyField", "org.apache.lucene.index.FieldsReader$LazyField(org.apache.lucene.index.FieldsReader, java.lang.String, org.apache.lucene.document.Field$Store, int, long, boolean, boolean)"], ["org.apache.lucene.index.FieldsReader$LazyField", "org.apache.lucene.index.FieldsReader$LazyField(org.apache.lucene.index.FieldsReader, java.lang.String, org.apache.lucene.document.Field$Store, org.apache.lucene.document.Field$Index, org.apache.lucene.document.Field$TermVector, int, long, boolean, boolean)"], ["java.io.Reader", "org.apache.lucene.index.FieldsReader$LazyField.readerValue()"], ["org.apache.lucene.analysis.TokenStream", "org.apache.lucene.index.FieldsReader$LazyField.tokenStreamValue()"], ["java.lang.String", "org.apache.lucene.index.FieldsReader$LazyField.stringValue()"], ["long", "org.apache.lucene.index.FieldsReader$LazyField.getPointer()"], ["void", "org.apache.lucene.index.FieldsReader$LazyField.setPointer(long)"], ["int", "org.apache.lucene.index.FieldsReader$LazyField.getToRead()"], ["void", "org.apache.lucene.index.FieldsReader$LazyField.setToRead(int)"], ["byte[]", "org.apache.lucene.index.FieldsReader$LazyField.getBinaryValue(byte[])"], ["java.lang.Object", "org.apache.lucene.index.FieldsReader.clone()"], ["org.apache.lucene.index.FilterIndexReader$FilterTermDocs", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs(org.apache.lucene.index.TermDocs)"], ["void", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.seek(org.apache.lucene.index.TermEnum)"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.doc()"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.freq()"], ["boolean", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.next()"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.read(int[], int[])"], ["boolean", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.skipTo(int)"], ["void", "org.apache.lucene.index.FilterIndexReader$FilterTermDocs.close()"], ["org.apache.lucene.index.FilterIndexReader$FilterTermEnum", "org.apache.lucene.index.FilterIndexReader$FilterTermEnum(org.apache.lucene.index.TermEnum)"], ["boolean", "org.apache.lucene.index.FilterIndexReader$FilterTermEnum.next()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.FilterIndexReader$FilterTermEnum.term()"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermEnum.docFreq()"], ["void", "org.apache.lucene.index.FilterIndexReader$FilterTermEnum.close()"], ["org.apache.lucene.index.FilterIndexReader$FilterTermPositions", "org.apache.lucene.index.FilterIndexReader$FilterTermPositions(org.apache.lucene.index.TermPositions)"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermPositions.nextPosition()"], ["int", "org.apache.lucene.index.FilterIndexReader$FilterTermPositions.getPayloadLength()"], ["byte[]", "org.apache.lucene.index.FilterIndexReader$FilterTermPositions.getPayload(byte[], int)"], ["boolean", "org.apache.lucene.index.FilterIndexReader$FilterTermPositions.isPayloadAvailable()"], ["org.apache.lucene.index.FilterIndexReader", "org.apache.lucene.index.FilterIndexReader(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.FilterIndexReader.directory()"], ["org.apache.lucene.index.TermFreqVector[]", "org.apache.lucene.index.FilterIndexReader.getTermFreqVectors(int)"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.FilterIndexReader.getTermFreqVector(int, java.lang.String)"], ["void", "org.apache.lucene.index.FilterIndexReader.getTermFreqVector(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.FilterIndexReader.getTermFreqVector(int, org.apache.lucene.index.TermVectorMapper)"], ["int", "org.apache.lucene.index.FilterIndexReader.numDocs()"], ["int", "org.apache.lucene.index.FilterIndexReader.maxDoc()"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.FilterIndexReader.document(int, org.apache.lucene.document.FieldSelector)"], ["boolean", "org.apache.lucene.index.FilterIndexReader.isDeleted(int)"], ["boolean", "org.apache.lucene.index.FilterIndexReader.hasDeletions()"], ["boolean", "org.apache.lucene.index.FilterIndexReader.hasNorms(java.lang.String)"], ["byte[]", "org.apache.lucene.index.FilterIndexReader.norms(java.lang.String)"], ["void", "org.apache.lucene.index.FilterIndexReader.norms(java.lang.String, byte[], int)"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.FilterIndexReader.terms()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.FilterIndexReader.terms(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.FilterIndexReader.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.FilterIndexReader.termDocs()"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.FilterIndexReader.termDocs(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.FilterIndexReader.termPositions()"], ["long", "org.apache.lucene.index.FilterIndexReader.getVersion()"], ["boolean", "org.apache.lucene.index.FilterIndexReader.isCurrent()"], ["boolean", "org.apache.lucene.index.FilterIndexReader.isOptimized()"], ["org.apache.lucene.index.IndexReader[]", "org.apache.lucene.index.FilterIndexReader.getSequentialSubReaders()"], ["java.lang.Object", "org.apache.lucene.index.FilterIndexReader.getFieldCacheKey()"], ["java.lang.Object", "org.apache.lucene.index.FilterIndexReader.getDeletesCacheKey()"], ["org.apache.lucene.index.FormatPostingsFieldsWriter", "org.apache.lucene.index.FormatPostingsFieldsWriter(org.apache.lucene.index.SegmentWriteState, org.apache.lucene.index.FieldInfos)"], ["org.apache.lucene.index.FreqProxFieldMergeState", "org.apache.lucene.index.FreqProxFieldMergeState(org.apache.lucene.index.FreqProxTermsWriterPerField)"], ["boolean", "org.apache.lucene.index.FreqProxFieldMergeState.nextDoc()"], ["org.apache.lucene.index.TermsHashConsumerPerThread", "org.apache.lucene.index.FreqProxTermsWriter.addThread(org.apache.lucene.index.TermsHashPerThread)"], ["void", "org.apache.lucene.index.FreqProxTermsWriter.flush(java.util.Map<org.apache.lucene.index.TermsHashConsumerPerThread, java.util.Collection<org.apache.lucene.index.TermsHashConsumerPerField>>, org.apache.lucene.index.SegmentWriteState)"], ["org.apache.lucene.index.FreqProxTermsWriterPerField", "org.apache.lucene.index.FreqProxTermsWriterPerField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FreqProxTermsWriterPerThread, org.apache.lucene.index.FieldInfo)"], ["int", "org.apache.lucene.index.FreqProxTermsWriterPerField.compareTo(org.apache.lucene.index.FreqProxTermsWriterPerField)"], ["void", "org.apache.lucene.index.FreqProxTermsWriterPerField.abort()"], ["int", "org.apache.lucene.index.FreqProxTermsWriterPerField.compareTo(java.lang.Object)"], ["org.apache.lucene.index.FreqProxTermsWriterPerThread", "org.apache.lucene.index.FreqProxTermsWriterPerThread(org.apache.lucene.index.TermsHashPerThread)"], ["org.apache.lucene.index.TermsHashConsumerPerField", "org.apache.lucene.index.FreqProxTermsWriterPerThread.addField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.FreqProxTermsWriterPerThread.abort()"], ["org.apache.lucene.index.IndexCommit", "org.apache.lucene.index.IndexCommit()"], ["boolean", "org.apache.lucene.index.IndexCommit.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.IndexCommit.hashCode()"], ["long", "org.apache.lucene.index.IndexCommit.getTimestamp()"], ["org.apache.lucene.index.IndexFileDeleter$CommitPoint", "org.apache.lucene.index.IndexFileDeleter$CommitPoint(java.util.Collection<org.apache.lucene.index.IndexFileDeleter$CommitPoint>, org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfos)"], ["java.lang.String", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.toString()"], ["boolean", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.isOptimized()"], ["java.lang.String", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.getSegmentsFileName()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.getDirectory()"], ["long", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.getVersion()"], ["long", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.getGeneration()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.getUserData()"], ["void", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.delete()"], ["boolean", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.isDeleted()"], ["int", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.compareTo(org.apache.lucene.index.IndexFileDeleter$CommitPoint)"], ["int", "org.apache.lucene.index.IndexFileDeleter$CommitPoint.compareTo(java.lang.Object)"], ["int", "org.apache.lucene.index.IndexFileDeleter$RefCount.IncRef()"], ["int", "org.apache.lucene.index.IndexFileDeleter$RefCount.DecRef()"], ["org.apache.lucene.index.IndexFileDeleter", "org.apache.lucene.index.IndexFileDeleter(org.apache.lucene.store.Directory, org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.index.SegmentInfos, java.io.PrintStream, org.apache.lucene.index.DocumentsWriter, java.util.Set<java.lang.String>)"], ["org.apache.lucene.index.SegmentInfos", "org.apache.lucene.index.IndexFileDeleter.getLastSegmentInfos()"], ["void", "org.apache.lucene.index.IndexFileDeleter.refresh(java.lang.String)"], ["void", "org.apache.lucene.index.IndexFileDeleter.refresh()"], ["void", "org.apache.lucene.index.IndexFileDeleter.close()"], ["void", "org.apache.lucene.index.IndexFileDeleter.checkpoint(org.apache.lucene.index.SegmentInfos, boolean)"], ["boolean", "org.apache.lucene.index.IndexFileDeleter.exists(java.lang.String)"], ["boolean", "org.apache.lucene.index.IndexFileNameFilter.accept(java.io.File, java.lang.String)"], ["boolean", "org.apache.lucene.index.IndexFileNameFilter.isCFSFile(java.lang.String)"], ["org.apache.lucene.index.IndexFileNameFilter", "org.apache.lucene.index.IndexFileNameFilter.getFilter()"], ["java.lang.Object", "org.apache.lucene.index.IndexReader$1.doBody(java.lang.String)"], ["java.lang.String", "org.apache.lucene.index.IndexReader$FieldOption.toString()"], ["synchronized", "org.apache.lucene.index.IndexReader.int getRefCount()"], ["synchronized", "org.apache.lucene.index.IndexReader.void incRef()"], ["synchronized", "org.apache.lucene.index.IndexReader.void decRef()"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.store.Directory)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.store.Directory, boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.index.IndexCommit, boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.store.Directory, org.apache.lucene.index.IndexDeletionPolicy, boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.store.Directory, org.apache.lucene.index.IndexDeletionPolicy, boolean, int)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.index.IndexCommit, org.apache.lucene.index.IndexDeletionPolicy, boolean)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexReader.open(org.apache.lucene.index.IndexCommit, org.apache.lucene.index.IndexDeletionPolicy, boolean, int)"], ["synchronized", "org.apache.lucene.index.IndexReader.org.apache.lucene.index.IndexReader reopen()"], ["synchronized", "org.apache.lucene.index.IndexReader.org.apache.lucene.index.IndexReader reopen(boolean)"], ["synchronized", "org.apache.lucene.index.IndexReader.org.apache.lucene.index.IndexReader reopen(org.apache.lucene.index.IndexCommit)"], ["synchronized", "org.apache.lucene.index.IndexReader.java.lang.Object clone()"], ["synchronized", "org.apache.lucene.index.IndexReader.org.apache.lucene.index.IndexReader clone(boolean)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.IndexReader.directory()"], ["long", "org.apache.lucene.index.IndexReader.lastModified(org.apache.lucene.store.Directory)"], ["long", "org.apache.lucene.index.IndexReader.getCurrentVersion(org.apache.lucene.store.Directory)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.IndexReader.getCommitUserData(org.apache.lucene.store.Directory)"], ["long", "org.apache.lucene.index.IndexReader.getVersion()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.IndexReader.getCommitUserData()"], ["boolean", "org.apache.lucene.index.IndexReader.isCurrent()"], ["boolean", "org.apache.lucene.index.IndexReader.isOptimized()"], ["boolean", "org.apache.lucene.index.IndexReader.indexExists(org.apache.lucene.store.Directory)"], ["int", "org.apache.lucene.index.IndexReader.numDeletedDocs()"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.IndexReader.document(int)"], ["boolean", "org.apache.lucene.index.IndexReader.hasNorms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.IndexReader.void setNorm(int, java.lang.String, byte)"], ["void", "org.apache.lucene.index.IndexReader.setNorm(int, java.lang.String, float)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.IndexReader.termDocs(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.IndexReader.termPositions(org.apache.lucene.index.Term)"], ["synchronized", "org.apache.lucene.index.IndexReader.void deleteDocument(int)"], ["int", "org.apache.lucene.index.IndexReader.deleteDocuments(org.apache.lucene.index.Term)"], ["synchronized", "org.apache.lucene.index.IndexReader.void undeleteAll()"], ["synchronized", "org.apache.lucene.index.IndexReader.void flush()"], ["synchronized", "org.apache.lucene.index.IndexReader.void flush(java.util.Map<java.lang.String, java.lang.String>)"], ["synchronized", "org.apache.lucene.index.IndexReader.void commit(java.util.Map<java.lang.String, java.lang.String>)"], ["synchronized", "org.apache.lucene.index.IndexReader.void close()"], ["org.apache.lucene.index.IndexCommit", "org.apache.lucene.index.IndexReader.getIndexCommit()"], ["void", "org.apache.lucene.index.IndexReader.main(java.lang.String[])"], ["org.apache.lucene.index.IndexReader[]", "org.apache.lucene.index.IndexReader.getSequentialSubReaders()"], ["java.lang.Object", "org.apache.lucene.index.IndexReader.getFieldCacheKey()"], ["java.lang.Object", "org.apache.lucene.index.IndexReader.getDeletesCacheKey()"], ["long", "org.apache.lucene.index.IndexReader.getUniqueTermCount()"], ["int", "org.apache.lucene.index.IndexReader.getTermInfosIndexDivisor()"], ["org.apache.lucene.index.IndexWriter$IndexReaderWarmer", "org.apache.lucene.index.IndexWriter$IndexReaderWarmer()"], ["org.apache.lucene.index.IndexWriter$MaxFieldLength", "org.apache.lucene.index.IndexWriter$MaxFieldLength(int)"], ["int", "org.apache.lucene.index.IndexWriter$MaxFieldLength.getLimit()"], ["java.lang.String", "org.apache.lucene.index.IndexWriter$MaxFieldLength.toString()"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.boolean infoIsLive(org.apache.lucene.index.SegmentInfo)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.org.apache.lucene.index.SegmentInfo mapToLive(org.apache.lucene.index.SegmentInfo)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.void release(org.apache.lucene.index.SegmentReader)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.void release(org.apache.lucene.index.SegmentReader, boolean)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.org.apache.lucene.index.SegmentReader getReadOnlyClone(org.apache.lucene.index.SegmentInfo, boolean, int)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.org.apache.lucene.index.SegmentReader get(org.apache.lucene.index.SegmentInfo, boolean)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.org.apache.lucene.index.SegmentReader get(org.apache.lucene.index.SegmentInfo, boolean, int, int)"], ["synchronized", "org.apache.lucene.index.IndexWriter$ReaderPool.org.apache.lucene.index.SegmentReader getIfExists(org.apache.lucene.index.SegmentInfo)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexWriter.getReader()"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.index.IndexWriter.getReader(int)"], ["int", "org.apache.lucene.index.IndexWriter.numDeletedDocs(org.apache.lucene.index.SegmentInfo)"], ["void", "org.apache.lucene.index.IndexWriter.message(java.lang.String)"], ["boolean", "org.apache.lucene.index.IndexWriter.getUseCompoundFile()"], ["void", "org.apache.lucene.index.IndexWriter.setUseCompoundFile(boolean)"], ["void", "org.apache.lucene.index.IndexWriter.setSimilarity(org.apache.lucene.search.Similarity)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.index.IndexWriter.getSimilarity()"], ["void", "org.apache.lucene.index.IndexWriter.setTermIndexInterval(int)"], ["int", "org.apache.lucene.index.IndexWriter.getTermIndexInterval()"], ["org.apache.lucene.index.IndexWriter", "org.apache.lucene.index.IndexWriter(org.apache.lucene.store.Directory, org.apache.lucene.analysis.Analyzer, boolean, org.apache.lucene.index.IndexWriter$MaxFieldLength)"], ["org.apache.lucene.index.IndexWriter", "org.apache.lucene.index.IndexWriter(org.apache.lucene.store.Directory, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexWriter$MaxFieldLength)"], ["org.apache.lucene.index.IndexWriter", "org.apache.lucene.index.IndexWriter(org.apache.lucene.store.Directory, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.index.IndexWriter$MaxFieldLength)"], ["org.apache.lucene.index.IndexWriter", "org.apache.lucene.index.IndexWriter(org.apache.lucene.store.Directory, org.apache.lucene.analysis.Analyzer, boolean, org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.index.IndexWriter$MaxFieldLength)"], ["org.apache.lucene.index.IndexWriter", "org.apache.lucene.index.IndexWriter(org.apache.lucene.store.Directory, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexDeletionPolicy, org.apache.lucene.index.IndexWriter$MaxFieldLength, org.apache.lucene.index.IndexCommit)"], ["void", "org.apache.lucene.index.IndexWriter.setMergePolicy(org.apache.lucene.index.MergePolicy)"], ["org.apache.lucene.index.MergePolicy", "org.apache.lucene.index.IndexWriter.getMergePolicy()"], ["synchronized", "org.apache.lucene.index.IndexWriter.void setMergeScheduler(org.apache.lucene.index.MergeScheduler)"], ["org.apache.lucene.index.MergeScheduler", "org.apache.lucene.index.IndexWriter.getMergeScheduler()"], ["void", "org.apache.lucene.index.IndexWriter.setMaxMergeDocs(int)"], ["int", "org.apache.lucene.index.IndexWriter.getMaxMergeDocs()"], ["void", "org.apache.lucene.index.IndexWriter.setMaxFieldLength(int)"], ["int", "org.apache.lucene.index.IndexWriter.getMaxFieldLength()"], ["void", "org.apache.lucene.index.IndexWriter.setReaderTermsIndexDivisor(int)"], ["int", "org.apache.lucene.index.IndexWriter.getReaderTermsIndexDivisor()"], ["void", "org.apache.lucene.index.IndexWriter.setMaxBufferedDocs(int)"], ["int", "org.apache.lucene.index.IndexWriter.getMaxBufferedDocs()"], ["void", "org.apache.lucene.index.IndexWriter.setRAMBufferSizeMB(double)"], ["double", "org.apache.lucene.index.IndexWriter.getRAMBufferSizeMB()"], ["void", "org.apache.lucene.index.IndexWriter.setMaxBufferedDeleteTerms(int)"], ["int", "org.apache.lucene.index.IndexWriter.getMaxBufferedDeleteTerms()"], ["void", "org.apache.lucene.index.IndexWriter.setMergeFactor(int)"], ["int", "org.apache.lucene.index.IndexWriter.getMergeFactor()"], ["void", "org.apache.lucene.index.IndexWriter.setDefaultInfoStream(java.io.PrintStream)"], ["java.io.PrintStream", "org.apache.lucene.index.IndexWriter.getDefaultInfoStream()"], ["void", "org.apache.lucene.index.IndexWriter.setInfoStream(java.io.PrintStream)"], ["java.io.PrintStream", "org.apache.lucene.index.IndexWriter.getInfoStream()"], ["boolean", "org.apache.lucene.index.IndexWriter.verbose()"], ["void", "org.apache.lucene.index.IndexWriter.setWriteLockTimeout(long)"], ["long", "org.apache.lucene.index.IndexWriter.getWriteLockTimeout()"], ["void", "org.apache.lucene.index.IndexWriter.setDefaultWriteLockTimeout(long)"], ["long", "org.apache.lucene.index.IndexWriter.getDefaultWriteLockTimeout()"], ["void", "org.apache.lucene.index.IndexWriter.close()"], ["void", "org.apache.lucene.index.IndexWriter.close(boolean)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.IndexWriter.getDirectory()"], ["org.apache.lucene.analysis.Analyzer", "org.apache.lucene.index.IndexWriter.getAnalyzer()"], ["synchronized", "org.apache.lucene.index.IndexWriter.int maxDoc()"], ["synchronized", "org.apache.lucene.index.IndexWriter.int numDocs()"], ["synchronized", "org.apache.lucene.index.IndexWriter.boolean hasDeletions()"], ["void", "org.apache.lucene.index.IndexWriter.addDocument(org.apache.lucene.document.Document)"], ["void", "org.apache.lucene.index.IndexWriter.addDocument(org.apache.lucene.document.Document, org.apache.lucene.analysis.Analyzer)"], ["void", "org.apache.lucene.index.IndexWriter.deleteDocuments(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.IndexWriter.deleteDocuments(org.apache.lucene.index.Term...)"], ["void", "org.apache.lucene.index.IndexWriter.deleteDocuments(org.apache.lucene.search.Query)"], ["void", "org.apache.lucene.index.IndexWriter.deleteDocuments(org.apache.lucene.search.Query...)"], ["void", "org.apache.lucene.index.IndexWriter.updateDocument(org.apache.lucene.index.Term, org.apache.lucene.document.Document)"], ["void", "org.apache.lucene.index.IndexWriter.updateDocument(org.apache.lucene.index.Term, org.apache.lucene.document.Document, org.apache.lucene.analysis.Analyzer)"], ["void", "org.apache.lucene.index.IndexWriter.optimize()"], ["void", "org.apache.lucene.index.IndexWriter.optimize(int)"], ["void", "org.apache.lucene.index.IndexWriter.optimize(boolean)"], ["void", "org.apache.lucene.index.IndexWriter.optimize(int, boolean)"], ["void", "org.apache.lucene.index.IndexWriter.expungeDeletes(boolean)"], ["void", "org.apache.lucene.index.IndexWriter.expungeDeletes()"], ["void", "org.apache.lucene.index.IndexWriter.maybeMerge()"], ["void", "org.apache.lucene.index.IndexWriter.rollback()"], ["synchronized", "org.apache.lucene.index.IndexWriter.void deleteAll()"], ["synchronized", "org.apache.lucene.index.IndexWriter.void waitForMerges()"], ["void", "org.apache.lucene.index.IndexWriter.addIndexesNoOptimize(org.apache.lucene.store.Directory...)"], ["void", "org.apache.lucene.index.IndexWriter.addIndexes(org.apache.lucene.index.IndexReader...)"], ["void", "org.apache.lucene.index.IndexWriter.prepareCommit()"], ["void", "org.apache.lucene.index.IndexWriter.prepareCommit(java.util.Map<java.lang.String, java.lang.String>)"], ["void", "org.apache.lucene.index.IndexWriter.commit()"], ["void", "org.apache.lucene.index.IndexWriter.commit(java.util.Map<java.lang.String, java.lang.String>)"], ["long", "org.apache.lucene.index.IndexWriter.ramSizeInBytes()"], ["synchronized", "org.apache.lucene.index.IndexWriter.int numRamDocs()"], ["synchronized", "org.apache.lucene.index.IndexWriter.java.lang.String segString()"], ["boolean", "org.apache.lucene.index.IndexWriter.isLocked(org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.IndexWriter.unlock(org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.IndexWriter.setMergedSegmentWarmer(org.apache.lucene.index.IndexWriter$IndexReaderWarmer)"], ["org.apache.lucene.index.IndexWriter$IndexReaderWarmer", "org.apache.lucene.index.IndexWriter.getMergedSegmentWarmer()"], ["org.apache.lucene.index.IntBlockPool", "org.apache.lucene.index.IntBlockPool(org.apache.lucene.index.DocumentsWriter, boolean)"], ["void", "org.apache.lucene.index.IntBlockPool.reset()"], ["void", "org.apache.lucene.index.IntBlockPool.nextBuffer()"], ["org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy", "org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy()"], ["void", "org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy.onInit(java.util.List<? extends org.apache.lucene.index.IndexCommit>)"], ["void", "org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy.onCommit(java.util.List<? extends org.apache.lucene.index.IndexCommit>)"], ["org.apache.lucene.index.LogByteSizeMergePolicy", "org.apache.lucene.index.LogByteSizeMergePolicy(org.apache.lucene.index.IndexWriter)"], ["void", "org.apache.lucene.index.LogByteSizeMergePolicy.setMaxMergeMB(double)"], ["double", "org.apache.lucene.index.LogByteSizeMergePolicy.getMaxMergeMB()"], ["void", "org.apache.lucene.index.LogByteSizeMergePolicy.setMinMergeMB(double)"], ["double", "org.apache.lucene.index.LogByteSizeMergePolicy.getMinMergeMB()"], ["org.apache.lucene.index.LogDocMergePolicy", "org.apache.lucene.index.LogDocMergePolicy(org.apache.lucene.index.IndexWriter)"], ["void", "org.apache.lucene.index.LogDocMergePolicy.setMinMergeDocs(int)"], ["int", "org.apache.lucene.index.LogDocMergePolicy.getMinMergeDocs()"], ["org.apache.lucene.index.LogMergePolicy", "org.apache.lucene.index.LogMergePolicy(org.apache.lucene.index.IndexWriter)"], ["double", "org.apache.lucene.index.LogMergePolicy.getNoCFSRatio()"], ["void", "org.apache.lucene.index.LogMergePolicy.setNoCFSRatio(double)"], ["int", "org.apache.lucene.index.LogMergePolicy.getMergeFactor()"], ["void", "org.apache.lucene.index.LogMergePolicy.setMergeFactor(int)"], ["boolean", "org.apache.lucene.index.LogMergePolicy.useCompoundFile(org.apache.lucene.index.SegmentInfos, org.apache.lucene.index.SegmentInfo)"], ["void", "org.apache.lucene.index.LogMergePolicy.setUseCompoundFile(boolean)"], ["boolean", "org.apache.lucene.index.LogMergePolicy.getUseCompoundFile()"], ["boolean", "org.apache.lucene.index.LogMergePolicy.useCompoundDocStore(org.apache.lucene.index.SegmentInfos)"], ["void", "org.apache.lucene.index.LogMergePolicy.setUseCompoundDocStore(boolean)"], ["boolean", "org.apache.lucene.index.LogMergePolicy.getUseCompoundDocStore()"], ["void", "org.apache.lucene.index.LogMergePolicy.setCalibrateSizeByDeletes(boolean)"], ["boolean", "org.apache.lucene.index.LogMergePolicy.getCalibrateSizeByDeletes()"], ["void", "org.apache.lucene.index.LogMergePolicy.close()"], ["org.apache.lucene.index.MergePolicy$MergeSpecification", "org.apache.lucene.index.LogMergePolicy.findMergesForOptimize(org.apache.lucene.index.SegmentInfos, int, java.util.Set<org.apache.lucene.index.SegmentInfo>)"], ["org.apache.lucene.index.MergePolicy$MergeSpecification", "org.apache.lucene.index.LogMergePolicy.findMergesToExpungeDeletes(org.apache.lucene.index.SegmentInfos)"], ["org.apache.lucene.index.MergePolicy$MergeSpecification", "org.apache.lucene.index.LogMergePolicy.findMerges(org.apache.lucene.index.SegmentInfos)"], ["void", "org.apache.lucene.index.LogMergePolicy.setMaxMergeDocs(int)"], ["int", "org.apache.lucene.index.LogMergePolicy.getMaxMergeDocs()"], ["org.apache.lucene.index.MergeDocIDRemapper", "org.apache.lucene.index.MergeDocIDRemapper(org.apache.lucene.index.SegmentInfos, int[][], int[], org.apache.lucene.index.MergePolicy$OneMerge, int)"], ["int", "org.apache.lucene.index.MergeDocIDRemapper.remap(int)"], ["org.apache.lucene.index.MergePolicy$MergeAbortedException", "org.apache.lucene.index.MergePolicy$MergeAbortedException()"], ["org.apache.lucene.index.MergePolicy$MergeAbortedException", "org.apache.lucene.index.MergePolicy$MergeAbortedException(java.lang.String)"], ["org.apache.lucene.index.MergePolicy$MergeException", "org.apache.lucene.index.MergePolicy$MergeException(java.lang.String, org.apache.lucene.store.Directory)"], ["org.apache.lucene.index.MergePolicy$MergeException", "org.apache.lucene.index.MergePolicy$MergeException(java.lang.Throwable, org.apache.lucene.store.Directory)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.MergePolicy$MergeException.getDirectory()"], ["org.apache.lucene.index.MergePolicy$MergeSpecification", "org.apache.lucene.index.MergePolicy$MergeSpecification()"], ["void", "org.apache.lucene.index.MergePolicy$MergeSpecification.add(org.apache.lucene.index.MergePolicy$OneMerge)"], ["java.lang.String", "org.apache.lucene.index.MergePolicy$MergeSpecification.segString(org.apache.lucene.store.Directory)"], ["org.apache.lucene.index.MergePolicy$OneMerge", "org.apache.lucene.index.MergePolicy$OneMerge(org.apache.lucene.index.SegmentInfos, boolean)"], ["org.apache.lucene.index.MergePolicy", "org.apache.lucene.index.MergePolicy(org.apache.lucene.index.IndexWriter)"], ["org.apache.lucene.index.MergeScheduler", "org.apache.lucene.index.MergeScheduler()"], ["void", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.close()"], ["long", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.getFilePointer()"], ["long", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.length()"], ["byte", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.readByte()"], ["void", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.readBytes(byte[], int, int)"], ["void", "org.apache.lucene.index.MultiLevelSkipListReader$SkipBuffer.seek(long)"], ["org.apache.lucene.index.MultiLevelSkipListReader", "org.apache.lucene.index.MultiLevelSkipListReader(org.apache.lucene.store.IndexInput, int, int)"], ["org.apache.lucene.index.MultiReader", "org.apache.lucene.index.MultiReader(org.apache.lucene.index.IndexReader...)"], ["org.apache.lucene.index.MultiReader", "org.apache.lucene.index.MultiReader(org.apache.lucene.index.IndexReader[], boolean)"], ["synchronized", "org.apache.lucene.index.MultiReader.org.apache.lucene.index.IndexReader reopen()"], ["synchronized", "org.apache.lucene.index.MultiReader.java.lang.Object clone()"], ["org.apache.lucene.index.TermFreqVector[]", "org.apache.lucene.index.MultiReader.getTermFreqVectors(int)"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.MultiReader.getTermFreqVector(int, java.lang.String)"], ["void", "org.apache.lucene.index.MultiReader.getTermFreqVector(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.MultiReader.getTermFreqVector(int, org.apache.lucene.index.TermVectorMapper)"], ["boolean", "org.apache.lucene.index.MultiReader.isOptimized()"], ["int", "org.apache.lucene.index.MultiReader.numDocs()"], ["int", "org.apache.lucene.index.MultiReader.maxDoc()"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.MultiReader.document(int, org.apache.lucene.document.FieldSelector)"], ["boolean", "org.apache.lucene.index.MultiReader.isDeleted(int)"], ["boolean", "org.apache.lucene.index.MultiReader.hasDeletions()"], ["boolean", "org.apache.lucene.index.MultiReader.hasNorms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.MultiReader.byte[] norms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.MultiReader.void norms(java.lang.String, byte[], int)"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.MultiReader.terms()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.MultiReader.terms(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.MultiReader.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.MultiReader.termDocs()"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.MultiReader.termPositions()"], ["boolean", "org.apache.lucene.index.MultiReader.isCurrent()"], ["long", "org.apache.lucene.index.MultiReader.getVersion()"], ["org.apache.lucene.index.IndexReader[]", "org.apache.lucene.index.MultiReader.getSequentialSubReaders()"], ["boolean", "org.apache.lucene.index.MultipleTermPositions$TermPositionsQueue.lessThan(org.apache.lucene.index.TermPositions, org.apache.lucene.index.TermPositions)"], ["boolean", "org.apache.lucene.index.MultipleTermPositions$TermPositionsQueue.lessThan(java.lang.Object, java.lang.Object)"], ["org.apache.lucene.index.MultipleTermPositions", "org.apache.lucene.index.MultipleTermPositions(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term[])"], ["boolean", "org.apache.lucene.index.MultipleTermPositions.next()"], ["int", "org.apache.lucene.index.MultipleTermPositions.nextPosition()"], ["boolean", "org.apache.lucene.index.MultipleTermPositions.skipTo(int)"], ["int", "org.apache.lucene.index.MultipleTermPositions.doc()"], ["int", "org.apache.lucene.index.MultipleTermPositions.freq()"], ["void", "org.apache.lucene.index.MultipleTermPositions.close()"], ["void", "org.apache.lucene.index.MultipleTermPositions.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.MultipleTermPositions.seek(org.apache.lucene.index.TermEnum)"], ["int", "org.apache.lucene.index.MultipleTermPositions.read(int[], int[])"], ["int", "org.apache.lucene.index.MultipleTermPositions.getPayloadLength()"], ["byte[]", "org.apache.lucene.index.MultipleTermPositions.getPayload(byte[], int)"], ["boolean", "org.apache.lucene.index.MultipleTermPositions.isPayloadAvailable()"], ["org.apache.lucene.index.InvertedDocEndConsumerPerThread", "org.apache.lucene.index.NormsWriter.addThread(org.apache.lucene.index.DocInverterPerThread)"], ["void", "org.apache.lucene.index.NormsWriter.abort()"], ["void", "org.apache.lucene.index.NormsWriter.flush(java.util.Map<org.apache.lucene.index.InvertedDocEndConsumerPerThread, java.util.Collection<org.apache.lucene.index.InvertedDocEndConsumerPerField>>, org.apache.lucene.index.SegmentWriteState)"], ["void", "org.apache.lucene.index.NormsWriterPerField.reset()"], ["org.apache.lucene.index.NormsWriterPerField", "org.apache.lucene.index.NormsWriterPerField(org.apache.lucene.index.DocInverterPerField, org.apache.lucene.index.NormsWriterPerThread, org.apache.lucene.index.FieldInfo)"], ["int", "org.apache.lucene.index.NormsWriterPerField.compareTo(org.apache.lucene.index.NormsWriterPerField)"], ["int", "org.apache.lucene.index.NormsWriterPerField.compareTo(java.lang.Object)"], ["org.apache.lucene.index.NormsWriterPerThread", "org.apache.lucene.index.NormsWriterPerThread(org.apache.lucene.index.DocInverterPerThread, org.apache.lucene.index.NormsWriter)"], ["void", "org.apache.lucene.index.ParallelArrayTermVectorMapper.setExpectations(java.lang.String, int, boolean, boolean)"], ["void", "org.apache.lucene.index.ParallelArrayTermVectorMapper.map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.ParallelArrayTermVectorMapper.materializeVector()"], ["org.apache.lucene.index.ParallelReader$ParallelTermDocs", "org.apache.lucene.index.ParallelReader$ParallelTermDocs(org.apache.lucene.index.ParallelReader)"], ["org.apache.lucene.index.ParallelReader$ParallelTermDocs", "org.apache.lucene.index.ParallelReader$ParallelTermDocs(org.apache.lucene.index.ParallelReader, org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.doc()"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.freq()"], ["void", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.seek(org.apache.lucene.index.TermEnum)"], ["boolean", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.next()"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.read(int[], int[])"], ["boolean", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.skipTo(int)"], ["void", "org.apache.lucene.index.ParallelReader$ParallelTermDocs.close()"], ["org.apache.lucene.index.ParallelReader$ParallelTermEnum", "org.apache.lucene.index.ParallelReader$ParallelTermEnum(org.apache.lucene.index.ParallelReader)"], ["org.apache.lucene.index.ParallelReader$ParallelTermEnum", "org.apache.lucene.index.ParallelReader$ParallelTermEnum(org.apache.lucene.index.ParallelReader, org.apache.lucene.index.Term)"], ["boolean", "org.apache.lucene.index.ParallelReader$ParallelTermEnum.next()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.ParallelReader$ParallelTermEnum.term()"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermEnum.docFreq()"], ["void", "org.apache.lucene.index.ParallelReader$ParallelTermEnum.close()"], ["org.apache.lucene.index.ParallelReader$ParallelTermPositions", "org.apache.lucene.index.ParallelReader$ParallelTermPositions(org.apache.lucene.index.ParallelReader)"], ["org.apache.lucene.index.ParallelReader$ParallelTermPositions", "org.apache.lucene.index.ParallelReader$ParallelTermPositions(org.apache.lucene.index.ParallelReader, org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.ParallelReader$ParallelTermPositions.seek(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermPositions.nextPosition()"], ["int", "org.apache.lucene.index.ParallelReader$ParallelTermPositions.getPayloadLength()"], ["byte[]", "org.apache.lucene.index.ParallelReader$ParallelTermPositions.getPayload(byte[], int)"], ["boolean", "org.apache.lucene.index.ParallelReader$ParallelTermPositions.isPayloadAvailable()"], ["org.apache.lucene.index.ParallelReader", "org.apache.lucene.index.ParallelReader()"], ["org.apache.lucene.index.ParallelReader", "org.apache.lucene.index.ParallelReader(boolean)"], ["void", "org.apache.lucene.index.ParallelReader.add(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.index.ParallelReader.add(org.apache.lucene.index.IndexReader, boolean)"], ["synchronized", "org.apache.lucene.index.ParallelReader.java.lang.Object clone()"], ["synchronized", "org.apache.lucene.index.ParallelReader.org.apache.lucene.index.IndexReader reopen()"], ["int", "org.apache.lucene.index.ParallelReader.numDocs()"], ["int", "org.apache.lucene.index.ParallelReader.maxDoc()"], ["boolean", "org.apache.lucene.index.ParallelReader.hasDeletions()"], ["boolean", "org.apache.lucene.index.ParallelReader.isDeleted(int)"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.ParallelReader.document(int, org.apache.lucene.document.FieldSelector)"], ["org.apache.lucene.index.TermFreqVector[]", "org.apache.lucene.index.ParallelReader.getTermFreqVectors(int)"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.ParallelReader.getTermFreqVector(int, java.lang.String)"], ["void", "org.apache.lucene.index.ParallelReader.getTermFreqVector(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.ParallelReader.getTermFreqVector(int, org.apache.lucene.index.TermVectorMapper)"], ["boolean", "org.apache.lucene.index.ParallelReader.hasNorms(java.lang.String)"], ["byte[]", "org.apache.lucene.index.ParallelReader.norms(java.lang.String)"], ["void", "org.apache.lucene.index.ParallelReader.norms(java.lang.String, byte[], int)"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.ParallelReader.terms()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.ParallelReader.terms(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.ParallelReader.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.ParallelReader.termDocs(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.ParallelReader.termDocs()"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.ParallelReader.termPositions(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.ParallelReader.termPositions()"], ["boolean", "org.apache.lucene.index.ParallelReader.isCurrent()"], ["boolean", "org.apache.lucene.index.ParallelReader.isOptimized()"], ["long", "org.apache.lucene.index.ParallelReader.getVersion()"], ["org.apache.lucene.index.Payload", "org.apache.lucene.index.Payload()"], ["org.apache.lucene.index.Payload", "org.apache.lucene.index.Payload(byte[])"], ["org.apache.lucene.index.Payload", "org.apache.lucene.index.Payload(byte[], int, int)"], ["void", "org.apache.lucene.index.Payload.setData(byte[])"], ["void", "org.apache.lucene.index.Payload.setData(byte[], int, int)"], ["byte[]", "org.apache.lucene.index.Payload.getData()"], ["int", "org.apache.lucene.index.Payload.getOffset()"], ["int", "org.apache.lucene.index.Payload.length()"], ["byte", "org.apache.lucene.index.Payload.byteAt(int)"], ["byte[]", "org.apache.lucene.index.Payload.toByteArray()"], ["void", "org.apache.lucene.index.Payload.copyTo(byte[], int)"], ["java.lang.Object", "org.apache.lucene.index.Payload.clone()"], ["boolean", "org.apache.lucene.index.Payload.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.Payload.hashCode()"], ["org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo", "org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo(int, boolean)"], ["int", "org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo.getPosition()"], ["org.apache.lucene.index.PositionBasedTermVectorMapper", "org.apache.lucene.index.PositionBasedTermVectorMapper()"], ["org.apache.lucene.index.PositionBasedTermVectorMapper", "org.apache.lucene.index.PositionBasedTermVectorMapper(boolean)"], ["boolean", "org.apache.lucene.index.PositionBasedTermVectorMapper.isIgnoringPositions()"], ["void", "org.apache.lucene.index.PositionBasedTermVectorMapper.map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])"], ["void", "org.apache.lucene.index.PositionBasedTermVectorMapper.setExpectations(java.lang.String, int, boolean, boolean)"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.Integer, org.apache.lucene.index.PositionBasedTermVectorMapper$TVPositionInfo>>", "org.apache.lucene.index.PositionBasedTermVectorMapper.getFieldToTerms()"], ["boolean", "org.apache.lucene.index.ReadOnlySegmentReader.isDeleted(int)"], ["int", "org.apache.lucene.index.ReusableStringReader.read(char[])"], ["int", "org.apache.lucene.index.ReusableStringReader.read(char[], int, int)"], ["void", "org.apache.lucene.index.ReusableStringReader.close()"], ["java.lang.String", "org.apache.lucene.index.SegmentInfo.toString()"], ["org.apache.lucene.index.SegmentInfo", "org.apache.lucene.index.SegmentInfo(java.lang.String, int, org.apache.lucene.store.Directory)"], ["org.apache.lucene.index.SegmentInfo", "org.apache.lucene.index.SegmentInfo(java.lang.String, int, org.apache.lucene.store.Directory, boolean, boolean)"], ["org.apache.lucene.index.SegmentInfo", "org.apache.lucene.index.SegmentInfo(java.lang.String, int, org.apache.lucene.store.Directory, boolean, boolean, int, java.lang.String, boolean, boolean)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.SegmentInfo.getDiagnostics()"], ["long", "org.apache.lucene.index.SegmentInfo.sizeInBytes()"], ["boolean", "org.apache.lucene.index.SegmentInfo.hasDeletions()"], ["java.lang.Object", "org.apache.lucene.index.SegmentInfo.clone()"], ["java.lang.String", "org.apache.lucene.index.SegmentInfo.getDelFileName()"], ["boolean", "org.apache.lucene.index.SegmentInfo.hasSeparateNorms(int)"], ["boolean", "org.apache.lucene.index.SegmentInfo.hasSeparateNorms()"], ["java.lang.String", "org.apache.lucene.index.SegmentInfo.getNormFileName(int)"], ["boolean", "org.apache.lucene.index.SegmentInfo.getUseCompoundFile()"], ["int", "org.apache.lucene.index.SegmentInfo.getDelCount()"], ["int", "org.apache.lucene.index.SegmentInfo.getDocStoreOffset()"], ["boolean", "org.apache.lucene.index.SegmentInfo.getDocStoreIsCompoundFile()"], ["java.lang.String", "org.apache.lucene.index.SegmentInfo.getDocStoreSegment()"], ["boolean", "org.apache.lucene.index.SegmentInfo.getHasProx()"], ["java.lang.String", "org.apache.lucene.index.SegmentInfo.segString(org.apache.lucene.store.Directory)"], ["boolean", "org.apache.lucene.index.SegmentInfo.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.SegmentInfo.hashCode()"], ["org.apache.lucene.index.SegmentInfos$FindSegmentsFile", "org.apache.lucene.index.SegmentInfos$FindSegmentsFile(org.apache.lucene.store.Directory)"], ["java.lang.Object", "org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run()"], ["java.lang.Object", "org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(org.apache.lucene.index.IndexCommit)"], ["org.apache.lucene.index.SegmentInfos", "org.apache.lucene.index.SegmentInfos()"], ["org.apache.lucene.index.SegmentInfo", "org.apache.lucene.index.SegmentInfos.info(int)"], ["long", "org.apache.lucene.index.SegmentInfos.getCurrentSegmentGeneration(java.lang.String[])"], ["long", "org.apache.lucene.index.SegmentInfos.getCurrentSegmentGeneration(org.apache.lucene.store.Directory)"], ["java.lang.String", "org.apache.lucene.index.SegmentInfos.getCurrentSegmentFileName(java.lang.String[])"], ["java.lang.String", "org.apache.lucene.index.SegmentInfos.getCurrentSegmentFileName(org.apache.lucene.store.Directory)"], ["java.lang.String", "org.apache.lucene.index.SegmentInfos.getCurrentSegmentFileName()"], ["long", "org.apache.lucene.index.SegmentInfos.generationFromSegmentsFileName(java.lang.String)"], ["java.lang.String", "org.apache.lucene.index.SegmentInfos.getNextSegmentFileName()"], ["void", "org.apache.lucene.index.SegmentInfos.read(org.apache.lucene.store.Directory, java.lang.String)"], ["void", "org.apache.lucene.index.SegmentInfos.read(org.apache.lucene.store.Directory)"], ["java.lang.Object", "org.apache.lucene.index.SegmentInfos.clone()"], ["long", "org.apache.lucene.index.SegmentInfos.getVersion()"], ["long", "org.apache.lucene.index.SegmentInfos.getGeneration()"], ["long", "org.apache.lucene.index.SegmentInfos.getLastGeneration()"], ["long", "org.apache.lucene.index.SegmentInfos.readCurrentVersion(org.apache.lucene.store.Directory)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.SegmentInfos.readCurrentUserData(org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.SegmentInfos.setInfoStream(java.io.PrintStream)"], ["void", "org.apache.lucene.index.SegmentInfos.setDefaultGenFileRetryCount(int)"], ["int", "org.apache.lucene.index.SegmentInfos.getDefaultGenFileRetryCount()"], ["void", "org.apache.lucene.index.SegmentInfos.setDefaultGenFileRetryPauseMsec(int)"], ["int", "org.apache.lucene.index.SegmentInfos.getDefaultGenFileRetryPauseMsec()"], ["void", "org.apache.lucene.index.SegmentInfos.setDefaultGenLookaheadCount(int)"], ["int", "org.apache.lucene.index.SegmentInfos.getDefaultGenLookahedCount()"], ["java.io.PrintStream", "org.apache.lucene.index.SegmentInfos.getInfoStream()"], ["org.apache.lucene.index.SegmentInfos", "org.apache.lucene.index.SegmentInfos.range(int, int)"], ["synchronized", "org.apache.lucene.index.SegmentInfos.java.lang.String segString(org.apache.lucene.store.Directory)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.SegmentInfos.getUserData()"], ["boolean", "org.apache.lucene.index.SegmentInfos.hasExternalSegments(org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.SegmentMerger$1.work(double)"], ["void", "org.apache.lucene.index.SegmentMerger$2.work(double)"], ["org.apache.lucene.index.SegmentMerger$CheckAbort", "org.apache.lucene.index.SegmentMerger$CheckAbort(org.apache.lucene.index.MergePolicy$OneMerge, org.apache.lucene.store.Directory)"], ["void", "org.apache.lucene.index.SegmentMerger$CheckAbort.work(double)"], ["org.apache.lucene.index.SegmentReader$Norm", "org.apache.lucene.index.SegmentReader$Norm(org.apache.lucene.index.SegmentReader, org.apache.lucene.store.IndexInput, int, long)"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.void incRef()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.void decRef()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.void bytes(byte[], int, int)"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.byte[] bytes()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.byte[] copyOnWrite()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Norm.java.lang.Object clone()"], ["void", "org.apache.lucene.index.SegmentReader$Norm.reWrite(org.apache.lucene.index.SegmentInfo)"], ["java.lang.String", "org.apache.lucene.index.SegmentReader$Ref.toString()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Ref.int refCount()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Ref.int incRef()"], ["synchronized", "org.apache.lucene.index.SegmentReader$Ref.int decRef()"], ["org.apache.lucene.index.SegmentReader", "org.apache.lucene.index.SegmentReader()"], ["org.apache.lucene.index.SegmentReader", "org.apache.lucene.index.SegmentReader.get(boolean, org.apache.lucene.index.SegmentInfo, int)"], ["org.apache.lucene.index.SegmentReader", "org.apache.lucene.index.SegmentReader.get(boolean, org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, int, boolean, int)"], ["synchronized", "org.apache.lucene.index.SegmentReader.java.lang.Object clone()"], ["synchronized", "org.apache.lucene.index.SegmentReader.org.apache.lucene.index.IndexReader clone(boolean)"], ["boolean", "org.apache.lucene.index.SegmentReader.hasDeletions()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.SegmentReader.terms()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.SegmentReader.terms(org.apache.lucene.index.Term)"], ["org.apache.lucene.document.Document", "org.apache.lucene.index.SegmentReader.document(int, org.apache.lucene.document.FieldSelector)"], ["synchronized", "org.apache.lucene.index.SegmentReader.boolean isDeleted(int)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.SegmentReader.termDocs(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermDocs", "org.apache.lucene.index.SegmentReader.termDocs()"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.index.SegmentReader.termPositions()"], ["int", "org.apache.lucene.index.SegmentReader.docFreq(org.apache.lucene.index.Term)"], ["int", "org.apache.lucene.index.SegmentReader.numDocs()"], ["int", "org.apache.lucene.index.SegmentReader.maxDoc()"], ["synchronized", "org.apache.lucene.index.SegmentReader.boolean hasNorms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.SegmentReader.byte[] norms(java.lang.String)"], ["synchronized", "org.apache.lucene.index.SegmentReader.void norms(java.lang.String, byte[], int)"], ["org.apache.lucene.index.TermFreqVector", "org.apache.lucene.index.SegmentReader.getTermFreqVector(int, java.lang.String)"], ["void", "org.apache.lucene.index.SegmentReader.getTermFreqVector(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.SegmentReader.getTermFreqVector(int, org.apache.lucene.index.TermVectorMapper)"], ["org.apache.lucene.index.TermFreqVector[]", "org.apache.lucene.index.SegmentReader.getTermFreqVectors(int)"], ["java.lang.String", "org.apache.lucene.index.SegmentReader.getSegmentName()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.SegmentReader.directory()"], ["java.lang.Object", "org.apache.lucene.index.SegmentReader.getFieldCacheKey()"], ["java.lang.Object", "org.apache.lucene.index.SegmentReader.getDeletesCacheKey()"], ["long", "org.apache.lucene.index.SegmentReader.getUniqueTermCount()"], ["int", "org.apache.lucene.index.SegmentReader.getTermInfosIndexDivisor()"], ["void", "org.apache.lucene.index.SegmentTermDocs.seek(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.SegmentTermDocs.seek(org.apache.lucene.index.TermEnum)"], ["void", "org.apache.lucene.index.SegmentTermDocs.close()"], ["int", "org.apache.lucene.index.SegmentTermDocs.doc()"], ["int", "org.apache.lucene.index.SegmentTermDocs.freq()"], ["boolean", "org.apache.lucene.index.SegmentTermDocs.next()"], ["int", "org.apache.lucene.index.SegmentTermDocs.read(int[], int[])"], ["boolean", "org.apache.lucene.index.SegmentTermDocs.skipTo(int)"], ["boolean", "org.apache.lucene.index.SegmentTermEnum.next()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.SegmentTermEnum.term()"], ["int", "org.apache.lucene.index.SegmentTermEnum.docFreq()"], ["void", "org.apache.lucene.index.SegmentTermEnum.close()"], ["org.apache.lucene.index.SegmentTermPositionVector", "org.apache.lucene.index.SegmentTermPositionVector(java.lang.String, java.lang.String[], int[], int[][], org.apache.lucene.index.TermVectorOffsetInfo[][])"], ["org.apache.lucene.index.TermVectorOffsetInfo[]", "org.apache.lucene.index.SegmentTermPositionVector.getOffsets(int)"], ["int[]", "org.apache.lucene.index.SegmentTermPositionVector.getTermPositions(int)"], ["void", "org.apache.lucene.index.SegmentTermPositions.close()"], ["int", "org.apache.lucene.index.SegmentTermPositions.nextPosition()"], ["boolean", "org.apache.lucene.index.SegmentTermPositions.next()"], ["int", "org.apache.lucene.index.SegmentTermPositions.read(int[], int[])"], ["int", "org.apache.lucene.index.SegmentTermPositions.getPayloadLength()"], ["byte[]", "org.apache.lucene.index.SegmentTermPositions.getPayload(byte[], int)"], ["boolean", "org.apache.lucene.index.SegmentTermPositions.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.index.SegmentTermVector.getField()"], ["java.lang.String", "org.apache.lucene.index.SegmentTermVector.toString()"], ["int", "org.apache.lucene.index.SegmentTermVector.size()"], ["java.lang.String[]", "org.apache.lucene.index.SegmentTermVector.getTerms()"], ["int[]", "org.apache.lucene.index.SegmentTermVector.getTermFrequencies()"], ["int", "org.apache.lucene.index.SegmentTermVector.indexOf(java.lang.String)"], ["int[]", "org.apache.lucene.index.SegmentTermVector.indexesOf(java.lang.String[], int, int)"], ["org.apache.lucene.index.SegmentWriteState", "org.apache.lucene.index.SegmentWriteState(org.apache.lucene.index.DocumentsWriter, org.apache.lucene.store.Directory, java.lang.String, java.lang.String, int, int, int)"], ["java.lang.String", "org.apache.lucene.index.SegmentWriteState.segmentFileName(java.lang.String)"], ["org.apache.lucene.index.SerialMergeScheduler", "org.apache.lucene.index.SerialMergeScheduler()"], ["synchronized", "org.apache.lucene.index.SerialMergeScheduler.void merge(org.apache.lucene.index.IndexWriter)"], ["void", "org.apache.lucene.index.SerialMergeScheduler.close()"], ["java.lang.String", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.toString()"], ["java.lang.String", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.getSegmentsFileName()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.getDirectory()"], ["void", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.delete()"], ["boolean", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.isDeleted()"], ["long", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.getVersion()"], ["long", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.getGeneration()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.getUserData()"], ["boolean", "org.apache.lucene.index.SnapshotDeletionPolicy$MyCommitPoint.isOptimized()"], ["org.apache.lucene.index.SnapshotDeletionPolicy", "org.apache.lucene.index.SnapshotDeletionPolicy(org.apache.lucene.index.IndexDeletionPolicy)"], ["synchronized", "org.apache.lucene.index.SnapshotDeletionPolicy.void onInit(java.util.List<? extends org.apache.lucene.index.IndexCommit>)"], ["synchronized", "org.apache.lucene.index.SnapshotDeletionPolicy.void onCommit(java.util.List<? extends org.apache.lucene.index.IndexCommit>)"], ["synchronized", "org.apache.lucene.index.SnapshotDeletionPolicy.org.apache.lucene.index.IndexCommit snapshot()"], ["synchronized", "org.apache.lucene.index.SnapshotDeletionPolicy.void release()"], ["org.apache.lucene.index.SortedTermVectorMapper", "org.apache.lucene.index.SortedTermVectorMapper(java.util.Comparator<org.apache.lucene.index.TermVectorEntry>)"], ["org.apache.lucene.index.SortedTermVectorMapper", "org.apache.lucene.index.SortedTermVectorMapper(boolean, boolean, java.util.Comparator<org.apache.lucene.index.TermVectorEntry>)"], ["void", "org.apache.lucene.index.SortedTermVectorMapper.map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])"], ["void", "org.apache.lucene.index.SortedTermVectorMapper.setExpectations(java.lang.String, int, boolean, boolean)"], ["org.apache.lucene.index.StaleReaderException", "org.apache.lucene.index.StaleReaderException(java.lang.String)"], ["long", "org.apache.lucene.index.StoredFieldsWriter$PerDoc.sizeInBytes()"], ["void", "org.apache.lucene.index.StoredFieldsWriter$PerDoc.finish()"], ["org.apache.lucene.index.StoredFieldsWriter", "org.apache.lucene.index.StoredFieldsWriter(org.apache.lucene.index.DocumentsWriter, org.apache.lucene.index.FieldInfos)"], ["org.apache.lucene.index.StoredFieldsWriterPerThread", "org.apache.lucene.index.StoredFieldsWriter.addThread(org.apache.lucene.index.DocumentsWriter$DocState)"], ["synchronized", "org.apache.lucene.index.StoredFieldsWriter.void flush(org.apache.lucene.index.SegmentWriteState)"], ["synchronized", "org.apache.lucene.index.StoredFieldsWriter.void closeDocStore(org.apache.lucene.index.SegmentWriteState)"], ["boolean", "org.apache.lucene.index.StoredFieldsWriter.freeRAM()"], ["org.apache.lucene.index.StoredFieldsWriterPerThread", "org.apache.lucene.index.StoredFieldsWriterPerThread(org.apache.lucene.index.DocumentsWriter$DocState, org.apache.lucene.index.StoredFieldsWriter)"], ["void", "org.apache.lucene.index.StoredFieldsWriterPerThread.startDocument()"], ["void", "org.apache.lucene.index.StoredFieldsWriterPerThread.addField(org.apache.lucene.document.Fieldable, org.apache.lucene.index.FieldInfo)"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.StoredFieldsWriterPerThread.finishDocument()"], ["void", "org.apache.lucene.index.StoredFieldsWriterPerThread.abort()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.Term(java.lang.String, java.lang.String)"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.Term(java.lang.String)"], ["java.lang.String", "org.apache.lucene.index.Term.field()"], ["java.lang.String", "org.apache.lucene.index.Term.text()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.Term.createTerm(java.lang.String)"], ["boolean", "org.apache.lucene.index.Term.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.Term.hashCode()"], ["int", "org.apache.lucene.index.Term.compareTo(org.apache.lucene.index.Term)"], ["java.lang.String", "org.apache.lucene.index.Term.toString()"], ["int", "org.apache.lucene.index.Term.compareTo(java.lang.Object)"], ["int", "org.apache.lucene.index.TermBuffer.compareTo(org.apache.lucene.index.TermBuffer)"], ["void", "org.apache.lucene.index.TermBuffer.read(org.apache.lucene.store.IndexInput, org.apache.lucene.index.FieldInfos)"], ["void", "org.apache.lucene.index.TermBuffer.set(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.index.TermBuffer.set(org.apache.lucene.index.TermBuffer)"], ["void", "org.apache.lucene.index.TermBuffer.reset()"], ["org.apache.lucene.index.Term", "org.apache.lucene.index.TermBuffer.toTerm()"], ["org.apache.lucene.index.TermEnum", "org.apache.lucene.index.TermEnum()"], ["int", "org.apache.lucene.index.TermInfosReader.getSkipInterval()"], ["int", "org.apache.lucene.index.TermInfosReader.getMaxSkipLevels()"], ["org.apache.lucene.index.SegmentTermEnum", "org.apache.lucene.index.TermInfosReader.terms()"], ["org.apache.lucene.index.SegmentTermEnum", "org.apache.lucene.index.TermInfosReader.terms(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.TermVectorEntry", "org.apache.lucene.index.TermVectorEntry()"], ["org.apache.lucene.index.TermVectorEntry", "org.apache.lucene.index.TermVectorEntry(java.lang.String, java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])"], ["java.lang.String", "org.apache.lucene.index.TermVectorEntry.getField()"], ["int", "org.apache.lucene.index.TermVectorEntry.getFrequency()"], ["org.apache.lucene.index.TermVectorOffsetInfo[]", "org.apache.lucene.index.TermVectorEntry.getOffsets()"], ["int[]", "org.apache.lucene.index.TermVectorEntry.getPositions()"], ["java.lang.String", "org.apache.lucene.index.TermVectorEntry.getTerm()"], ["boolean", "org.apache.lucene.index.TermVectorEntry.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.TermVectorEntry.hashCode()"], ["java.lang.String", "org.apache.lucene.index.TermVectorEntry.toString()"], ["org.apache.lucene.index.TermVectorEntryFreqSortedComparator", "org.apache.lucene.index.TermVectorEntryFreqSortedComparator()"], ["int", "org.apache.lucene.index.TermVectorEntryFreqSortedComparator.compare(org.apache.lucene.index.TermVectorEntry, org.apache.lucene.index.TermVectorEntry)"], ["int", "org.apache.lucene.index.TermVectorEntryFreqSortedComparator.compare(java.lang.Object, java.lang.Object)"], ["boolean", "org.apache.lucene.index.TermVectorMapper.isIgnoringPositions()"], ["boolean", "org.apache.lucene.index.TermVectorMapper.isIgnoringOffsets()"], ["void", "org.apache.lucene.index.TermVectorMapper.setDocumentNumber(int)"], ["org.apache.lucene.index.TermVectorOffsetInfo", "org.apache.lucene.index.TermVectorOffsetInfo()"], ["org.apache.lucene.index.TermVectorOffsetInfo", "org.apache.lucene.index.TermVectorOffsetInfo(int, int)"], ["int", "org.apache.lucene.index.TermVectorOffsetInfo.getEndOffset()"], ["void", "org.apache.lucene.index.TermVectorOffsetInfo.setEndOffset(int)"], ["int", "org.apache.lucene.index.TermVectorOffsetInfo.getStartOffset()"], ["void", "org.apache.lucene.index.TermVectorOffsetInfo.setStartOffset(int)"], ["boolean", "org.apache.lucene.index.TermVectorOffsetInfo.equals(java.lang.Object)"], ["int", "org.apache.lucene.index.TermVectorOffsetInfo.hashCode()"], ["void", "org.apache.lucene.index.TermVectorsReader.get(int, java.lang.String, org.apache.lucene.index.TermVectorMapper)"], ["void", "org.apache.lucene.index.TermVectorsReader.get(int, org.apache.lucene.index.TermVectorMapper)"], ["long", "org.apache.lucene.index.TermVectorsTermsWriter$PerDoc.sizeInBytes()"], ["void", "org.apache.lucene.index.TermVectorsTermsWriter$PerDoc.finish()"], ["org.apache.lucene.index.TermVectorsTermsWriter", "org.apache.lucene.index.TermVectorsTermsWriter(org.apache.lucene.index.DocumentsWriter)"], ["org.apache.lucene.index.TermsHashConsumerPerThread", "org.apache.lucene.index.TermVectorsTermsWriter.addThread(org.apache.lucene.index.TermsHashPerThread)"], ["boolean", "org.apache.lucene.index.TermVectorsTermsWriter.freeRAM()"], ["void", "org.apache.lucene.index.TermVectorsTermsWriter.abort()"], ["org.apache.lucene.index.TermVectorsTermsWriterPerField", "org.apache.lucene.index.TermVectorsTermsWriterPerField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.TermVectorsTermsWriterPerThread, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.TermVectorsTermsWriterPerField.abort()"], ["org.apache.lucene.index.TermVectorsTermsWriterPerThread", "org.apache.lucene.index.TermVectorsTermsWriterPerThread(org.apache.lucene.index.TermsHashPerThread, org.apache.lucene.index.TermVectorsTermsWriter)"], ["void", "org.apache.lucene.index.TermVectorsTermsWriterPerThread.startDocument()"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.TermVectorsTermsWriterPerThread.finishDocument()"], ["org.apache.lucene.index.TermsHashConsumerPerField", "org.apache.lucene.index.TermVectorsTermsWriterPerThread.addField(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.TermVectorsTermsWriterPerThread.abort()"], ["org.apache.lucene.index.TermVectorsWriter", "org.apache.lucene.index.TermVectorsWriter(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.index.FieldInfos)"], ["void", "org.apache.lucene.index.TermVectorsWriter.addAllDocVectors(org.apache.lucene.index.TermFreqVector[])"], ["org.apache.lucene.index.TermsHash", "org.apache.lucene.index.TermsHash(org.apache.lucene.index.DocumentsWriter, boolean, org.apache.lucene.index.TermsHashConsumer, org.apache.lucene.index.TermsHash)"], ["void", "org.apache.lucene.index.TermsHash.abort()"], ["boolean", "org.apache.lucene.index.TermsHash.freeRAM()"], ["synchronized", "org.apache.lucene.index.TermsHash.void recyclePostings(org.apache.lucene.index.RawPostingList[], int)"], ["synchronized", "org.apache.lucene.index.TermsHash.void getPostings(org.apache.lucene.index.RawPostingList[])"], ["org.apache.lucene.index.TermsHashPerField", "org.apache.lucene.index.TermsHashPerField(org.apache.lucene.index.DocInverterPerField, org.apache.lucene.index.TermsHashPerThread, org.apache.lucene.index.TermsHashPerThread, org.apache.lucene.index.FieldInfo)"], ["void", "org.apache.lucene.index.TermsHashPerField.reset()"], ["synchronized", "org.apache.lucene.index.TermsHashPerField.void abort()"], ["void", "org.apache.lucene.index.TermsHashPerField.initReader(org.apache.lucene.index.ByteSliceReader, org.apache.lucene.index.RawPostingList, int)"], ["org.apache.lucene.index.RawPostingList[]", "org.apache.lucene.index.TermsHashPerField.sortPostings()"], ["void", "org.apache.lucene.index.TermsHashPerField.add(int)"], ["void", "org.apache.lucene.index.TermsHashPerField.writeBytes(int, byte[], int, int)"], ["org.apache.lucene.index.TermsHashPerThread", "org.apache.lucene.index.TermsHashPerThread(org.apache.lucene.index.DocInverterPerThread, org.apache.lucene.index.TermsHash, org.apache.lucene.index.TermsHash, org.apache.lucene.index.TermsHashPerThread)"], ["synchronized", "org.apache.lucene.index.TermsHashPerThread.void abort()"], ["void", "org.apache.lucene.index.TermsHashPerThread.startDocument()"], ["org.apache.lucene.index.DocumentsWriter$DocWriter", "org.apache.lucene.index.TermsHashPerThread.finishDocument()"], ["org.apache.lucene.messages.MessageImpl", "org.apache.lucene.messages.MessageImpl(java.lang.String)"], ["org.apache.lucene.messages.MessageImpl", "org.apache.lucene.messages.MessageImpl(java.lang.String, java.lang.Object...)"], ["java.lang.Object[]", "org.apache.lucene.messages.MessageImpl.getArguments()"], ["java.lang.String", "org.apache.lucene.messages.MessageImpl.getKey()"], ["java.lang.String", "org.apache.lucene.messages.MessageImpl.getLocalizedMessage()"], ["java.lang.String", "org.apache.lucene.messages.MessageImpl.getLocalizedMessage(java.util.Locale)"], ["java.lang.String", "org.apache.lucene.messages.MessageImpl.toString()"], ["java.lang.Object", "org.apache.lucene.messages.NLS$1.run()"], ["java.lang.String", "org.apache.lucene.messages.NLS.getLocalizedMessage(java.lang.String)"], ["java.lang.String", "org.apache.lucene.messages.NLS.getLocalizedMessage(java.lang.String, java.util.Locale)"], ["java.lang.String", "org.apache.lucene.messages.NLS.getLocalizedMessage(java.lang.String, java.util.Locale, java.lang.Object...)"], ["java.lang.String", "org.apache.lucene.messages.NLS.getLocalizedMessage(java.lang.String, java.lang.Object...)"], ["org.apache.lucene.queryParser.FastCharStream", "org.apache.lucene.queryParser.FastCharStream(java.io.Reader)"], ["char", "org.apache.lucene.queryParser.FastCharStream.readChar()"], ["char", "org.apache.lucene.queryParser.FastCharStream.BeginToken()"], ["void", "org.apache.lucene.queryParser.FastCharStream.backup(int)"], ["java.lang.String", "org.apache.lucene.queryParser.FastCharStream.GetImage()"], ["char[]", "org.apache.lucene.queryParser.FastCharStream.GetSuffix(int)"], ["void", "org.apache.lucene.queryParser.FastCharStream.Done()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getColumn()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getLine()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getEndColumn()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getEndLine()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getBeginColumn()"], ["int", "org.apache.lucene.queryParser.FastCharStream.getBeginLine()"], ["org.apache.lucene.queryParser.MultiFieldQueryParser", "org.apache.lucene.queryParser.MultiFieldQueryParser(org.apache.lucene.util.Version, java.lang.String[], org.apache.lucene.analysis.Analyzer, java.util.Map<java.lang.String, java.lang.Float>)"], ["org.apache.lucene.queryParser.MultiFieldQueryParser", "org.apache.lucene.queryParser.MultiFieldQueryParser(org.apache.lucene.util.Version, java.lang.String[], org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.MultiFieldQueryParser.parse(org.apache.lucene.util.Version, java.lang.String[], java.lang.String[], org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.MultiFieldQueryParser.parse(org.apache.lucene.util.Version, java.lang.String, java.lang.String[], org.apache.lucene.search.BooleanClause$Occur[], org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.MultiFieldQueryParser.parse(org.apache.lucene.util.Version, java.lang.String[], java.lang.String[], org.apache.lucene.search.BooleanClause$Occur[], org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.queryParser.ParseException", "org.apache.lucene.queryParser.ParseException(org.apache.lucene.queryParser.Token, int[][], java.lang.String[])"], ["org.apache.lucene.queryParser.ParseException", "org.apache.lucene.queryParser.ParseException()"], ["org.apache.lucene.queryParser.ParseException", "org.apache.lucene.queryParser.ParseException(java.lang.String)"], ["java.lang.String", "org.apache.lucene.queryParser.ParseException.getMessage()"], ["org.apache.lucene.queryParser.QueryParser$Operator[]", "org.apache.lucene.queryParser.QueryParser$Operator.values()"], ["org.apache.lucene.queryParser.QueryParser$Operator", "org.apache.lucene.queryParser.QueryParser$Operator.valueOf(java.lang.String)"], ["org.apache.lucene.queryParser.QueryParser", "org.apache.lucene.queryParser.QueryParser(org.apache.lucene.util.Version, java.lang.String, org.apache.lucene.analysis.Analyzer)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.QueryParser.parse(java.lang.String)"], ["org.apache.lucene.analysis.Analyzer", "org.apache.lucene.queryParser.QueryParser.getAnalyzer()"], ["java.lang.String", "org.apache.lucene.queryParser.QueryParser.getField()"], ["float", "org.apache.lucene.queryParser.QueryParser.getFuzzyMinSim()"], ["void", "org.apache.lucene.queryParser.QueryParser.setFuzzyMinSim(float)"], ["int", "org.apache.lucene.queryParser.QueryParser.getFuzzyPrefixLength()"], ["void", "org.apache.lucene.queryParser.QueryParser.setFuzzyPrefixLength(int)"], ["void", "org.apache.lucene.queryParser.QueryParser.setPhraseSlop(int)"], ["int", "org.apache.lucene.queryParser.QueryParser.getPhraseSlop()"], ["void", "org.apache.lucene.queryParser.QueryParser.setAllowLeadingWildcard(boolean)"], ["boolean", "org.apache.lucene.queryParser.QueryParser.getAllowLeadingWildcard()"], ["void", "org.apache.lucene.queryParser.QueryParser.setEnablePositionIncrements(boolean)"], ["boolean", "org.apache.lucene.queryParser.QueryParser.getEnablePositionIncrements()"], ["void", "org.apache.lucene.queryParser.QueryParser.setDefaultOperator(org.apache.lucene.queryParser.QueryParser$Operator)"], ["org.apache.lucene.queryParser.QueryParser$Operator", "org.apache.lucene.queryParser.QueryParser.getDefaultOperator()"], ["void", "org.apache.lucene.queryParser.QueryParser.setLowercaseExpandedTerms(boolean)"], ["boolean", "org.apache.lucene.queryParser.QueryParser.getLowercaseExpandedTerms()"], ["void", "org.apache.lucene.queryParser.QueryParser.setMultiTermRewriteMethod(org.apache.lucene.search.MultiTermQuery$RewriteMethod)"], ["org.apache.lucene.search.MultiTermQuery$RewriteMethod", "org.apache.lucene.queryParser.QueryParser.getMultiTermRewriteMethod()"], ["void", "org.apache.lucene.queryParser.QueryParser.setLocale(java.util.Locale)"], ["java.util.Locale", "org.apache.lucene.queryParser.QueryParser.getLocale()"], ["void", "org.apache.lucene.queryParser.QueryParser.setDateResolution(org.apache.lucene.document.DateTools$Resolution)"], ["void", "org.apache.lucene.queryParser.QueryParser.setDateResolution(java.lang.String, org.apache.lucene.document.DateTools$Resolution)"], ["org.apache.lucene.document.DateTools$Resolution", "org.apache.lucene.queryParser.QueryParser.getDateResolution(java.lang.String)"], ["void", "org.apache.lucene.queryParser.QueryParser.setRangeCollator(java.text.Collator)"], ["java.text.Collator", "org.apache.lucene.queryParser.QueryParser.getRangeCollator()"], ["java.lang.String", "org.apache.lucene.queryParser.QueryParser.escape(java.lang.String)"], ["void", "org.apache.lucene.queryParser.QueryParser.main(java.lang.String[])"], ["int", "org.apache.lucene.queryParser.QueryParser.Conjunction()"], ["int", "org.apache.lucene.queryParser.QueryParser.Modifiers()"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.QueryParser.TopLevelQuery(java.lang.String)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.QueryParser.Query(java.lang.String)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.QueryParser.Clause(java.lang.String)"], ["org.apache.lucene.search.Query", "org.apache.lucene.queryParser.QueryParser.Term(java.lang.String)"], ["void", "org.apache.lucene.queryParser.QueryParser.ReInit(org.apache.lucene.queryParser.CharStream)"], ["void", "org.apache.lucene.queryParser.QueryParser.ReInit(org.apache.lucene.queryParser.QueryParserTokenManager)"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.QueryParser.getNextToken()"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.QueryParser.getToken(int)"], ["org.apache.lucene.queryParser.ParseException", "org.apache.lucene.queryParser.QueryParser.generateParseException()"], ["void", "org.apache.lucene.queryParser.QueryParser.enable_tracing()"], ["void", "org.apache.lucene.queryParser.QueryParser.disable_tracing()"], ["void", "org.apache.lucene.queryParser.QueryParserTokenManager.setDebugStream(java.io.PrintStream)"], ["org.apache.lucene.queryParser.QueryParserTokenManager", "org.apache.lucene.queryParser.QueryParserTokenManager(org.apache.lucene.queryParser.CharStream)"], ["org.apache.lucene.queryParser.QueryParserTokenManager", "org.apache.lucene.queryParser.QueryParserTokenManager(org.apache.lucene.queryParser.CharStream, int)"], ["void", "org.apache.lucene.queryParser.QueryParserTokenManager.ReInit(org.apache.lucene.queryParser.CharStream)"], ["void", "org.apache.lucene.queryParser.QueryParserTokenManager.ReInit(org.apache.lucene.queryParser.CharStream, int)"], ["void", "org.apache.lucene.queryParser.QueryParserTokenManager.SwitchTo(int)"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.QueryParserTokenManager.getNextToken()"], ["java.lang.Object", "org.apache.lucene.queryParser.Token.getValue()"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.Token()"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.Token(int)"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.Token(int, java.lang.String)"], ["java.lang.String", "org.apache.lucene.queryParser.Token.toString()"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.Token.newToken(int, java.lang.String)"], ["org.apache.lucene.queryParser.Token", "org.apache.lucene.queryParser.Token.newToken(int)"], ["java.lang.String", "org.apache.lucene.queryParser.TokenMgrError.getMessage()"], ["org.apache.lucene.queryParser.TokenMgrError", "org.apache.lucene.queryParser.TokenMgrError()"], ["org.apache.lucene.queryParser.TokenMgrError", "org.apache.lucene.queryParser.TokenMgrError(java.lang.String, int)"], ["org.apache.lucene.queryParser.TokenMgrError", "org.apache.lucene.queryParser.TokenMgrError(boolean, int, int, int, java.lang.String, char, int)"], ["java.lang.String", "org.apache.lucene.search.BooleanClause$Occur$1.toString()"], ["java.lang.String", "org.apache.lucene.search.BooleanClause$Occur$2.toString()"], ["java.lang.String", "org.apache.lucene.search.BooleanClause$Occur$3.toString()"], ["org.apache.lucene.search.BooleanClause$Occur[]", "org.apache.lucene.search.BooleanClause$Occur.values()"], ["org.apache.lucene.search.BooleanClause$Occur", "org.apache.lucene.search.BooleanClause$Occur.valueOf(java.lang.String)"], ["org.apache.lucene.search.BooleanClause", "org.apache.lucene.search.BooleanClause(org.apache.lucene.search.Query, org.apache.lucene.search.BooleanClause$Occur)"], ["org.apache.lucene.search.BooleanClause$Occur", "org.apache.lucene.search.BooleanClause.getOccur()"], ["void", "org.apache.lucene.search.BooleanClause.setOccur(org.apache.lucene.search.BooleanClause$Occur)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.BooleanClause.getQuery()"], ["void", "org.apache.lucene.search.BooleanClause.setQuery(org.apache.lucene.search.Query)"], ["boolean", "org.apache.lucene.search.BooleanClause.isProhibited()"], ["boolean", "org.apache.lucene.search.BooleanClause.isRequired()"], ["boolean", "org.apache.lucene.search.BooleanClause.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.BooleanClause.hashCode()"], ["java.lang.String", "org.apache.lucene.search.BooleanClause.toString()"], ["float", "org.apache.lucene.search.BooleanQuery$1.coord(int, int)"], ["org.apache.lucene.search.BooleanQuery$BooleanWeight", "org.apache.lucene.search.BooleanQuery$BooleanWeight(org.apache.lucene.search.BooleanQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.BooleanQuery$BooleanWeight.getQuery()"], ["float", "org.apache.lucene.search.BooleanQuery$BooleanWeight.getValue()"], ["float", "org.apache.lucene.search.BooleanQuery$BooleanWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.BooleanQuery$BooleanWeight.normalize(float)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.BooleanQuery$BooleanWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["boolean", "org.apache.lucene.search.BooleanQuery$BooleanWeight.scoresDocsOutOfOrder()"], ["org.apache.lucene.search.BooleanQuery$TooManyClauses", "org.apache.lucene.search.BooleanQuery$TooManyClauses()"], ["java.lang.String", "org.apache.lucene.search.BooleanQuery$TooManyClauses.getMessage()"], ["int", "org.apache.lucene.search.BooleanQuery.getMaxClauseCount()"], ["void", "org.apache.lucene.search.BooleanQuery.setMaxClauseCount(int)"], ["org.apache.lucene.search.BooleanQuery", "org.apache.lucene.search.BooleanQuery()"], ["org.apache.lucene.search.BooleanQuery", "org.apache.lucene.search.BooleanQuery(boolean)"], ["boolean", "org.apache.lucene.search.BooleanQuery.isCoordDisabled()"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.BooleanQuery.getSimilarity(org.apache.lucene.search.Searcher)"], ["void", "org.apache.lucene.search.BooleanQuery.setMinimumNumberShouldMatch(int)"], ["int", "org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch()"], ["void", "org.apache.lucene.search.BooleanQuery.add(org.apache.lucene.search.Query, org.apache.lucene.search.BooleanClause$Occur)"], ["void", "org.apache.lucene.search.BooleanQuery.add(org.apache.lucene.search.BooleanClause)"], ["org.apache.lucene.search.BooleanClause[]", "org.apache.lucene.search.BooleanQuery.getClauses()"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.BooleanQuery.createWeight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.BooleanQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.search.BooleanQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.Object", "org.apache.lucene.search.BooleanQuery.clone()"], ["java.lang.String", "org.apache.lucene.search.BooleanQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.BooleanQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.BooleanQuery.hashCode()"], ["org.apache.lucene.search.BooleanScorer$BooleanScorerCollector", "org.apache.lucene.search.BooleanScorer$BooleanScorerCollector(int, org.apache.lucene.search.BooleanScorer$BucketTable)"], ["void", "org.apache.lucene.search.BooleanScorer$BooleanScorerCollector.collect(int)"], ["void", "org.apache.lucene.search.BooleanScorer$BooleanScorerCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.BooleanScorer$BooleanScorerCollector.setScorer(org.apache.lucene.search.Scorer)"], ["boolean", "org.apache.lucene.search.BooleanScorer$BooleanScorerCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.BooleanScorer$BucketScorer", "org.apache.lucene.search.BooleanScorer$BucketScorer()"], ["int", "org.apache.lucene.search.BooleanScorer$BucketScorer.advance(int)"], ["int", "org.apache.lucene.search.BooleanScorer$BucketScorer.docID()"], ["int", "org.apache.lucene.search.BooleanScorer$BucketScorer.nextDoc()"], ["float", "org.apache.lucene.search.BooleanScorer$BucketScorer.score()"], ["org.apache.lucene.search.BooleanScorer$BucketTable", "org.apache.lucene.search.BooleanScorer$BucketTable()"], ["org.apache.lucene.search.Collector", "org.apache.lucene.search.BooleanScorer$BucketTable.newCollector(int)"], ["int", "org.apache.lucene.search.BooleanScorer$BucketTable.size()"], ["org.apache.lucene.search.BooleanScorer$SubScorer", "org.apache.lucene.search.BooleanScorer$SubScorer(org.apache.lucene.search.Scorer, boolean, boolean, org.apache.lucene.search.Collector, org.apache.lucene.search.BooleanScorer$SubScorer)"], ["int", "org.apache.lucene.search.BooleanScorer.advance(int)"], ["int", "org.apache.lucene.search.BooleanScorer.docID()"], ["int", "org.apache.lucene.search.BooleanScorer.nextDoc()"], ["float", "org.apache.lucene.search.BooleanScorer.score()"], ["void", "org.apache.lucene.search.BooleanScorer.score(org.apache.lucene.search.Collector)"], ["java.lang.String", "org.apache.lucene.search.BooleanScorer.toString()"], ["float", "org.apache.lucene.search.BooleanScorer2$1.score()"], ["float", "org.apache.lucene.search.BooleanScorer2$2.score()"], ["float", "org.apache.lucene.search.BooleanScorer2$SingleMatchScorer.score()"], ["int", "org.apache.lucene.search.BooleanScorer2$SingleMatchScorer.docID()"], ["int", "org.apache.lucene.search.BooleanScorer2$SingleMatchScorer.nextDoc()"], ["int", "org.apache.lucene.search.BooleanScorer2$SingleMatchScorer.advance(int)"], ["org.apache.lucene.search.BooleanScorer2", "org.apache.lucene.search.BooleanScorer2(org.apache.lucene.search.Similarity, int, java.util.List<org.apache.lucene.search.Scorer>, java.util.List<org.apache.lucene.search.Scorer>, java.util.List<org.apache.lucene.search.Scorer>)"], ["void", "org.apache.lucene.search.BooleanScorer2.score(org.apache.lucene.search.Collector)"], ["int", "org.apache.lucene.search.BooleanScorer2.docID()"], ["int", "org.apache.lucene.search.BooleanScorer2.nextDoc()"], ["float", "org.apache.lucene.search.BooleanScorer2.score()"], ["int", "org.apache.lucene.search.BooleanScorer2.advance(int)"], ["org.apache.lucene.search.CachingSpanFilter", "org.apache.lucene.search.CachingSpanFilter(org.apache.lucene.search.SpanFilter)"], ["org.apache.lucene.search.CachingSpanFilter", "org.apache.lucene.search.CachingSpanFilter(org.apache.lucene.search.SpanFilter, org.apache.lucene.search.CachingWrapperFilter$DeletesMode)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.CachingSpanFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.SpanFilterResult", "org.apache.lucene.search.CachingSpanFilter.bitSpans(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.CachingSpanFilter.toString()"], ["boolean", "org.apache.lucene.search.CachingSpanFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.CachingSpanFilter.hashCode()"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.CachingWrapperFilter$1.mergeDeletes(org.apache.lucene.index.IndexReader, org.apache.lucene.search.DocIdSet)"], ["java.lang.Object", "org.apache.lucene.search.CachingWrapperFilter$1.mergeDeletes(org.apache.lucene.index.IndexReader, java.lang.Object)"], ["org.apache.lucene.search.CachingWrapperFilter$DeletesMode[]", "org.apache.lucene.search.CachingWrapperFilter$DeletesMode.values()"], ["org.apache.lucene.search.CachingWrapperFilter$DeletesMode", "org.apache.lucene.search.CachingWrapperFilter$DeletesMode.valueOf(java.lang.String)"], ["org.apache.lucene.search.CachingWrapperFilter$FilterCache", "org.apache.lucene.search.CachingWrapperFilter$FilterCache(org.apache.lucene.search.CachingWrapperFilter$DeletesMode)"], ["synchronized", "org.apache.lucene.search.CachingWrapperFilter$FilterCache.T get(org.apache.lucene.index.IndexReader, java.lang.Object, java.lang.Object)"], ["synchronized", "org.apache.lucene.search.CachingWrapperFilter$FilterCache.void put(java.lang.Object, java.lang.Object, T)"], ["org.apache.lucene.search.CachingWrapperFilter", "org.apache.lucene.search.CachingWrapperFilter(org.apache.lucene.search.Filter)"], ["org.apache.lucene.search.CachingWrapperFilter", "org.apache.lucene.search.CachingWrapperFilter(org.apache.lucene.search.Filter, org.apache.lucene.search.CachingWrapperFilter$DeletesMode)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.CachingWrapperFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.CachingWrapperFilter.toString()"], ["boolean", "org.apache.lucene.search.CachingWrapperFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.CachingWrapperFilter.hashCode()"], ["org.apache.lucene.search.Collector", "org.apache.lucene.search.Collector()"], ["org.apache.lucene.search.ComplexExplanation", "org.apache.lucene.search.ComplexExplanation()"], ["org.apache.lucene.search.ComplexExplanation", "org.apache.lucene.search.ComplexExplanation(boolean, float, java.lang.String)"], ["java.lang.Boolean", "org.apache.lucene.search.ComplexExplanation.getMatch()"], ["void", "org.apache.lucene.search.ComplexExplanation.setMatch(java.lang.Boolean)"], ["boolean", "org.apache.lucene.search.ComplexExplanation.isMatch()"], ["int", "org.apache.lucene.search.ConjunctionScorer$1.compare(org.apache.lucene.search.Scorer, org.apache.lucene.search.Scorer)"], ["int", "org.apache.lucene.search.ConjunctionScorer$1.compare(java.lang.Object, java.lang.Object)"], ["org.apache.lucene.search.ConjunctionScorer", "org.apache.lucene.search.ConjunctionScorer(org.apache.lucene.search.Similarity, java.util.Collection<org.apache.lucene.search.Scorer>)"], ["org.apache.lucene.search.ConjunctionScorer", "org.apache.lucene.search.ConjunctionScorer(org.apache.lucene.search.Similarity, org.apache.lucene.search.Scorer...)"], ["int", "org.apache.lucene.search.ConjunctionScorer.advance(int)"], ["int", "org.apache.lucene.search.ConjunctionScorer.docID()"], ["int", "org.apache.lucene.search.ConjunctionScorer.nextDoc()"], ["float", "org.apache.lucene.search.ConjunctionScorer.score()"], ["org.apache.lucene.search.ConstantScoreQuery$ConstantScorer", "org.apache.lucene.search.ConstantScoreQuery$ConstantScorer(org.apache.lucene.search.ConstantScoreQuery, org.apache.lucene.search.Similarity, org.apache.lucene.index.IndexReader, org.apache.lucene.search.Weight)"], ["int", "org.apache.lucene.search.ConstantScoreQuery$ConstantScorer.nextDoc()"], ["int", "org.apache.lucene.search.ConstantScoreQuery$ConstantScorer.docID()"], ["float", "org.apache.lucene.search.ConstantScoreQuery$ConstantScorer.score()"], ["int", "org.apache.lucene.search.ConstantScoreQuery$ConstantScorer.advance(int)"], ["org.apache.lucene.search.ConstantScoreQuery$ConstantWeight", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight(org.apache.lucene.search.ConstantScoreQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.getQuery()"], ["float", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.getValue()"], ["float", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.ConstantScoreQuery$ConstantWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.ConstantScoreQuery", "org.apache.lucene.search.ConstantScoreQuery(org.apache.lucene.search.Filter)"], ["org.apache.lucene.search.Filter", "org.apache.lucene.search.ConstantScoreQuery.getFilter()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.ConstantScoreQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.search.ConstantScoreQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.ConstantScoreQuery.createWeight(org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.ConstantScoreQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.ConstantScoreQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.ConstantScoreQuery.hashCode()"], ["org.apache.lucene.search.DefaultSimilarity", "org.apache.lucene.search.DefaultSimilarity()"], ["float", "org.apache.lucene.search.DefaultSimilarity.computeNorm(java.lang.String, org.apache.lucene.index.FieldInvertState)"], ["float", "org.apache.lucene.search.DefaultSimilarity.lengthNorm(java.lang.String, int)"], ["float", "org.apache.lucene.search.DefaultSimilarity.queryNorm(float)"], ["float", "org.apache.lucene.search.DefaultSimilarity.tf(float)"], ["float", "org.apache.lucene.search.DefaultSimilarity.sloppyFreq(int)"], ["float", "org.apache.lucene.search.DefaultSimilarity.idf(int, int)"], ["float", "org.apache.lucene.search.DefaultSimilarity.coord(int, int)"], ["void", "org.apache.lucene.search.DefaultSimilarity.setDiscountOverlaps(boolean)"], ["boolean", "org.apache.lucene.search.DefaultSimilarity.getDiscountOverlaps()"], ["org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight(org.apache.lucene.search.DisjunctionMaxQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.getQuery()"], ["float", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.getValue()"], ["float", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.DisjunctionMaxQuery", "org.apache.lucene.search.DisjunctionMaxQuery(float)"], ["org.apache.lucene.search.DisjunctionMaxQuery", "org.apache.lucene.search.DisjunctionMaxQuery(java.util.Collection<org.apache.lucene.search.Query>, float)"], ["void", "org.apache.lucene.search.DisjunctionMaxQuery.add(org.apache.lucene.search.Query)"], ["void", "org.apache.lucene.search.DisjunctionMaxQuery.add(java.util.Collection<org.apache.lucene.search.Query>)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.DisjunctionMaxQuery.createWeight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.DisjunctionMaxQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.Object", "org.apache.lucene.search.DisjunctionMaxQuery.clone()"], ["void", "org.apache.lucene.search.DisjunctionMaxQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.DisjunctionMaxQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.DisjunctionMaxQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.DisjunctionMaxQuery.hashCode()"], ["org.apache.lucene.search.DisjunctionMaxScorer", "org.apache.lucene.search.DisjunctionMaxScorer(float, org.apache.lucene.search.Similarity, org.apache.lucene.search.Scorer[], int)"], ["int", "org.apache.lucene.search.DisjunctionMaxScorer.nextDoc()"], ["int", "org.apache.lucene.search.DisjunctionMaxScorer.docID()"], ["float", "org.apache.lucene.search.DisjunctionMaxScorer.score()"], ["int", "org.apache.lucene.search.DisjunctionMaxScorer.advance(int)"], ["org.apache.lucene.search.DisjunctionSumScorer", "org.apache.lucene.search.DisjunctionSumScorer(java.util.List<org.apache.lucene.search.Scorer>, int)"], ["org.apache.lucene.search.DisjunctionSumScorer", "org.apache.lucene.search.DisjunctionSumScorer(java.util.List<org.apache.lucene.search.Scorer>)"], ["void", "org.apache.lucene.search.DisjunctionSumScorer.score(org.apache.lucene.search.Collector)"], ["int", "org.apache.lucene.search.DisjunctionSumScorer.nextDoc()"], ["float", "org.apache.lucene.search.DisjunctionSumScorer.score()"], ["int", "org.apache.lucene.search.DisjunctionSumScorer.docID()"], ["int", "org.apache.lucene.search.DisjunctionSumScorer.nrMatchers()"], ["int", "org.apache.lucene.search.DisjunctionSumScorer.advance(int)"], ["int", "org.apache.lucene.search.DocIdSet$1$1.advance(int)"], ["int", "org.apache.lucene.search.DocIdSet$1$1.docID()"], ["int", "org.apache.lucene.search.DocIdSet$1$1.nextDoc()"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.DocIdSet$1.iterator()"], ["boolean", "org.apache.lucene.search.DocIdSet$1.isCacheable()"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.DocIdSet()"], ["boolean", "org.apache.lucene.search.DocIdSet.isCacheable()"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.DocIdSetIterator()"], ["org.apache.lucene.search.Explanation$IDFExplanation", "org.apache.lucene.search.Explanation$IDFExplanation()"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.Explanation()"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.Explanation(float, java.lang.String)"], ["boolean", "org.apache.lucene.search.Explanation.isMatch()"], ["float", "org.apache.lucene.search.Explanation.getValue()"], ["void", "org.apache.lucene.search.Explanation.setValue(float)"], ["java.lang.String", "org.apache.lucene.search.Explanation.getDescription()"], ["void", "org.apache.lucene.search.Explanation.setDescription(java.lang.String)"], ["org.apache.lucene.search.Explanation[]", "org.apache.lucene.search.Explanation.getDetails()"], ["void", "org.apache.lucene.search.Explanation.addDetail(org.apache.lucene.search.Explanation)"], ["java.lang.String", "org.apache.lucene.search.Explanation.toString()"], ["java.lang.String", "org.apache.lucene.search.Explanation.toHtml()"], ["byte", "org.apache.lucene.search.FieldCache$1.parseByte(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$1.toString()"], ["double", "org.apache.lucene.search.FieldCache$10.parseDouble(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$10.toString()"], ["short", "org.apache.lucene.search.FieldCache$2.parseShort(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$2.toString()"], ["int", "org.apache.lucene.search.FieldCache$3.parseInt(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$3.toString()"], ["float", "org.apache.lucene.search.FieldCache$4.parseFloat(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$4.toString()"], ["long", "org.apache.lucene.search.FieldCache$5.parseLong(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$5.toString()"], ["double", "org.apache.lucene.search.FieldCache$6.parseDouble(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$6.toString()"], ["int", "org.apache.lucene.search.FieldCache$7.parseInt(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$7.toString()"], ["float", "org.apache.lucene.search.FieldCache$8.parseFloat(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$8.toString()"], ["long", "org.apache.lucene.search.FieldCache$9.parseLong(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$9.toString()"], ["org.apache.lucene.search.FieldCache$CacheEntry", "org.apache.lucene.search.FieldCache$CacheEntry()"], ["void", "org.apache.lucene.search.FieldCache$CacheEntry.estimateSize()"], ["void", "org.apache.lucene.search.FieldCache$CacheEntry.estimateSize(org.apache.lucene.util.RamUsageEstimator)"], ["java.lang.String", "org.apache.lucene.search.FieldCache$CacheEntry.getEstimatedSize()"], ["java.lang.String", "org.apache.lucene.search.FieldCache$CacheEntry.toString()"], ["org.apache.lucene.search.FieldCache$CreationPlaceholder", "org.apache.lucene.search.FieldCache$CreationPlaceholder()"], ["int", "org.apache.lucene.search.FieldCache$StringIndex.binarySearchLookup(java.lang.String)"], ["org.apache.lucene.search.FieldCache$StringIndex", "org.apache.lucene.search.FieldCache$StringIndex(int[], java.lang.String[])"], ["void", "org.apache.lucene.search.FieldCacheImpl$Cache.purge(org.apache.lucene.index.IndexReader)"], ["java.lang.Object", "org.apache.lucene.search.FieldCacheImpl$Cache.get(org.apache.lucene.index.IndexReader, org.apache.lucene.search.FieldCacheImpl$Entry)"], ["java.lang.Object", "org.apache.lucene.search.FieldCacheImpl$CacheEntryImpl.getReaderKey()"], ["java.lang.String", "org.apache.lucene.search.FieldCacheImpl$CacheEntryImpl.getFieldName()"], ["java.lang.Object", "org.apache.lucene.search.FieldCacheImpl$CacheEntryImpl.getCustom()"], ["java.lang.Object", "org.apache.lucene.search.FieldCacheImpl$CacheEntryImpl.getValue()"], ["boolean", "org.apache.lucene.search.FieldCacheImpl$Entry.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.FieldCacheImpl$Entry.hashCode()"], ["void", "org.apache.lucene.search.FieldCacheImpl.purgeAllCaches()"], ["void", "org.apache.lucene.search.FieldCacheImpl.purge(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.FieldCache$CacheEntry[]", "org.apache.lucene.search.FieldCacheImpl.getCacheEntries()"], ["byte[]", "org.apache.lucene.search.FieldCacheImpl.getBytes(org.apache.lucene.index.IndexReader, java.lang.String)"], ["byte[]", "org.apache.lucene.search.FieldCacheImpl.getBytes(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$ByteParser)"], ["short[]", "org.apache.lucene.search.FieldCacheImpl.getShorts(org.apache.lucene.index.IndexReader, java.lang.String)"], ["short[]", "org.apache.lucene.search.FieldCacheImpl.getShorts(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$ShortParser)"], ["int[]", "org.apache.lucene.search.FieldCacheImpl.getInts(org.apache.lucene.index.IndexReader, java.lang.String)"], ["int[]", "org.apache.lucene.search.FieldCacheImpl.getInts(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$IntParser)"], ["float[]", "org.apache.lucene.search.FieldCacheImpl.getFloats(org.apache.lucene.index.IndexReader, java.lang.String)"], ["float[]", "org.apache.lucene.search.FieldCacheImpl.getFloats(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$FloatParser)"], ["long[]", "org.apache.lucene.search.FieldCacheImpl.getLongs(org.apache.lucene.index.IndexReader, java.lang.String)"], ["long[]", "org.apache.lucene.search.FieldCacheImpl.getLongs(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$LongParser)"], ["double[]", "org.apache.lucene.search.FieldCacheImpl.getDoubles(org.apache.lucene.index.IndexReader, java.lang.String)"], ["double[]", "org.apache.lucene.search.FieldCacheImpl.getDoubles(org.apache.lucene.index.IndexReader, java.lang.String, org.apache.lucene.search.FieldCache$DoubleParser)"], ["java.lang.String[]", "org.apache.lucene.search.FieldCacheImpl.getStrings(org.apache.lucene.index.IndexReader, java.lang.String)"], ["org.apache.lucene.search.FieldCache$StringIndex", "org.apache.lucene.search.FieldCacheImpl.getStringIndex(org.apache.lucene.index.IndexReader, java.lang.String)"], ["void", "org.apache.lucene.search.FieldCacheImpl.setInfoStream(java.io.PrintStream)"], ["java.io.PrintStream", "org.apache.lucene.search.FieldCacheImpl.getInfoStream()"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$1.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$2.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$3.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$4.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$5.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$6.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheRangeFilter$7.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$1.docID()"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$1.nextDoc()"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$1.advance(int)"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$2.docID()"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$2.nextDoc()"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet$2.advance(int)"], ["boolean", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet.isCacheable()"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.FieldCacheRangeFilter$FieldCacheDocIdSet.iterator()"], ["java.lang.String", "org.apache.lucene.search.FieldCacheRangeFilter.toString()"], ["boolean", "org.apache.lucene.search.FieldCacheRangeFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.FieldCacheRangeFilter.hashCode()"], ["java.lang.String", "org.apache.lucene.search.FieldCacheRangeFilter.getField()"], ["boolean", "org.apache.lucene.search.FieldCacheRangeFilter.includesLower()"], ["boolean", "org.apache.lucene.search.FieldCacheRangeFilter.includesUpper()"], ["T", "org.apache.lucene.search.FieldCacheRangeFilter.getLowerVal()"], ["T", "org.apache.lucene.search.FieldCacheRangeFilter.getUpperVal()"], ["org.apache.lucene.search.FieldCache$Parser", "org.apache.lucene.search.FieldCacheRangeFilter.getParser()"], ["int", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet$FieldCacheTermsFilterDocIdSetIterator.docID()"], ["int", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet$FieldCacheTermsFilterDocIdSetIterator.nextDoc()"], ["int", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet$FieldCacheTermsFilterDocIdSetIterator.advance(int)"], ["org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet(org.apache.lucene.search.FieldCacheTermsFilter, org.apache.lucene.search.FieldCache$StringIndex)"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet.iterator()"], ["boolean", "org.apache.lucene.search.FieldCacheTermsFilter$FieldCacheTermsFilterDocIdSet.isCacheable()"], ["org.apache.lucene.search.FieldCacheTermsFilter", "org.apache.lucene.search.FieldCacheTermsFilter(java.lang.String, java.lang.String...)"], ["org.apache.lucene.search.FieldCache", "org.apache.lucene.search.FieldCacheTermsFilter.getFieldCache()"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.FieldCacheTermsFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["int", "org.apache.lucene.search.FieldComparator$ByteComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$ByteComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$ByteComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$ByteComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$ByteComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$ByteComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$DocComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$DocComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$DocComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$DocComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$DocComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$DocComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$DoubleComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$DoubleComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$DoubleComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$DoubleComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$DoubleComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$DoubleComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$FloatComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$FloatComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$FloatComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$FloatComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$FloatComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$FloatComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$IntComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$IntComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$IntComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$IntComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$IntComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$IntComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$LongComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$LongComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$LongComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$LongComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$LongComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$LongComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$RelevanceComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$RelevanceComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$RelevanceComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$RelevanceComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$RelevanceComparator.setBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$RelevanceComparator.setScorer(org.apache.lucene.search.Scorer)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$RelevanceComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$ShortComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$ShortComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$ShortComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$ShortComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$ShortComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$ShortComparator.value(int)"], ["int", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$StringComparatorLocale.value(int)"], ["org.apache.lucene.search.FieldComparator$StringOrdValComparator", "org.apache.lucene.search.FieldComparator$StringOrdValComparator(int, java.lang.String, int, boolean)"], ["int", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.value(int)"], ["java.lang.String[]", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.getValues()"], ["int", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.getBottomSlot()"], ["java.lang.String", "org.apache.lucene.search.FieldComparator$StringOrdValComparator.getField()"], ["int", "org.apache.lucene.search.FieldComparator$StringValComparator.compare(int, int)"], ["int", "org.apache.lucene.search.FieldComparator$StringValComparator.compareBottom(int)"], ["void", "org.apache.lucene.search.FieldComparator$StringValComparator.copy(int, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringValComparator.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.FieldComparator$StringValComparator.setBottom(int)"], ["java.lang.Comparable", "org.apache.lucene.search.FieldComparator$StringValComparator.value(int)"], ["org.apache.lucene.search.FieldComparator", "org.apache.lucene.search.FieldComparator()"], ["void", "org.apache.lucene.search.FieldComparator.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.FieldComparatorSource", "org.apache.lucene.search.FieldComparatorSource()"], ["org.apache.lucene.search.FieldDoc", "org.apache.lucene.search.FieldDoc(int, float)"], ["org.apache.lucene.search.FieldDoc", "org.apache.lucene.search.FieldDoc(int, float, java.lang.Comparable[])"], ["java.lang.String", "org.apache.lucene.search.FieldDoc.toString()"], ["java.lang.String", "org.apache.lucene.search.FieldValueHitQueue$Entry.toString()"], ["org.apache.lucene.search.FieldValueHitQueue$MultiComparatorsFieldValueHitQueue", "org.apache.lucene.search.FieldValueHitQueue$MultiComparatorsFieldValueHitQueue(org.apache.lucene.search.SortField[], int)"], ["org.apache.lucene.search.FieldValueHitQueue$OneComparatorFieldValueHitQueue", "org.apache.lucene.search.FieldValueHitQueue$OneComparatorFieldValueHitQueue(org.apache.lucene.search.SortField[], int)"], ["org.apache.lucene.search.FieldValueHitQueue", "org.apache.lucene.search.FieldValueHitQueue.create(org.apache.lucene.search.SortField[], int)"], ["org.apache.lucene.search.Filter", "org.apache.lucene.search.Filter()"], ["int", "org.apache.lucene.search.FilterManager$FilterCleaner$1.compare(java.util.Map$Entry<java.lang.Integer, org.apache.lucene.search.FilterManager$FilterItem>, java.util.Map$Entry<java.lang.Integer, org.apache.lucene.search.FilterManager$FilterItem>)"], ["int", "org.apache.lucene.search.FilterManager$FilterCleaner$1.compare(java.lang.Object, java.lang.Object)"], ["org.apache.lucene.search.FilterManager$FilterCleaner", "org.apache.lucene.search.FilterManager$FilterCleaner(org.apache.lucene.search.FilterManager)"], ["void", "org.apache.lucene.search.FilterManager$FilterCleaner.run()"], ["org.apache.lucene.search.FilterManager$FilterItem", "org.apache.lucene.search.FilterManager$FilterItem(org.apache.lucene.search.FilterManager, org.apache.lucene.search.Filter)"], ["synchronized", "org.apache.lucene.search.FilterManager.org.apache.lucene.search.FilterManager getInstance()"], ["void", "org.apache.lucene.search.FilterManager.setCacheSize(int)"], ["void", "org.apache.lucene.search.FilterManager.setCleanThreadSleepTime(long)"], ["org.apache.lucene.search.Filter", "org.apache.lucene.search.FilterManager.getFilter(org.apache.lucene.search.Filter)"], ["org.apache.lucene.search.FilteredDocIdSet", "org.apache.lucene.search.FilteredDocIdSet(org.apache.lucene.search.DocIdSet)"], ["boolean", "org.apache.lucene.search.FilteredDocIdSet.isCacheable()"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.FilteredDocIdSet.iterator()"], ["org.apache.lucene.search.FilteredDocIdSetIterator", "org.apache.lucene.search.FilteredDocIdSetIterator(org.apache.lucene.search.DocIdSetIterator)"], ["int", "org.apache.lucene.search.FilteredDocIdSetIterator.docID()"], ["int", "org.apache.lucene.search.FilteredDocIdSetIterator.nextDoc()"], ["int", "org.apache.lucene.search.FilteredDocIdSetIterator.advance(int)"], ["int", "org.apache.lucene.search.FilteredQuery$1$1.nextDoc()"], ["int", "org.apache.lucene.search.FilteredQuery$1$1.docID()"], ["int", "org.apache.lucene.search.FilteredQuery$1$1.advance(int)"], ["float", "org.apache.lucene.search.FilteredQuery$1$1.score()"], ["float", "org.apache.lucene.search.FilteredQuery$1.getValue()"], ["float", "org.apache.lucene.search.FilteredQuery$1.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.FilteredQuery$1.normalize(float)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.FilteredQuery$1.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.FilteredQuery$1.getQuery()"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.FilteredQuery$1.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.FilteredQuery", "org.apache.lucene.search.FilteredQuery(org.apache.lucene.search.Query, org.apache.lucene.search.Filter)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.FilteredQuery.createWeight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.FilteredQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.FilteredQuery.getQuery()"], ["org.apache.lucene.search.Filter", "org.apache.lucene.search.FilteredQuery.getFilter()"], ["void", "org.apache.lucene.search.FilteredQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.FilteredQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.FilteredQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.FilteredQuery.hashCode()"], ["org.apache.lucene.search.FilteredTermEnum", "org.apache.lucene.search.FilteredTermEnum()"], ["int", "org.apache.lucene.search.FilteredTermEnum.docFreq()"], ["boolean", "org.apache.lucene.search.FilteredTermEnum.next()"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.FilteredTermEnum.term()"], ["void", "org.apache.lucene.search.FilteredTermEnum.close()"], ["int", "org.apache.lucene.search.FuzzyQuery$ScoreTerm.compareTo(org.apache.lucene.search.FuzzyQuery$ScoreTerm)"], ["int", "org.apache.lucene.search.FuzzyQuery$ScoreTerm.compareTo(java.lang.Object)"], ["org.apache.lucene.search.FuzzyQuery", "org.apache.lucene.search.FuzzyQuery(org.apache.lucene.index.Term, float, int)"], ["org.apache.lucene.search.FuzzyQuery", "org.apache.lucene.search.FuzzyQuery(org.apache.lucene.index.Term, float)"], ["org.apache.lucene.search.FuzzyQuery", "org.apache.lucene.search.FuzzyQuery(org.apache.lucene.index.Term)"], ["float", "org.apache.lucene.search.FuzzyQuery.getMinSimilarity()"], ["int", "org.apache.lucene.search.FuzzyQuery.getPrefixLength()"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.FuzzyQuery.getTerm()"], ["void", "org.apache.lucene.search.FuzzyQuery.setRewriteMethod(org.apache.lucene.search.MultiTermQuery$RewriteMethod)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.FuzzyQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.FuzzyQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.FuzzyQuery.hashCode()"], ["boolean", "org.apache.lucene.search.FuzzyQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.FuzzyTermEnum", "org.apache.lucene.search.FuzzyTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term)"], ["org.apache.lucene.search.FuzzyTermEnum", "org.apache.lucene.search.FuzzyTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term, float)"], ["org.apache.lucene.search.FuzzyTermEnum", "org.apache.lucene.search.FuzzyTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term, float, int)"], ["float", "org.apache.lucene.search.FuzzyTermEnum.difference()"], ["boolean", "org.apache.lucene.search.FuzzyTermEnum.endEnum()"], ["void", "org.apache.lucene.search.FuzzyTermEnum.close()"], ["org.apache.lucene.search.IndexSearcher", "org.apache.lucene.search.IndexSearcher(org.apache.lucene.store.Directory)"], ["org.apache.lucene.search.IndexSearcher", "org.apache.lucene.search.IndexSearcher(org.apache.lucene.store.Directory, boolean)"], ["org.apache.lucene.search.IndexSearcher", "org.apache.lucene.search.IndexSearcher(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.IndexSearcher", "org.apache.lucene.search.IndexSearcher(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[])"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.search.IndexSearcher.getIndexReader()"], ["void", "org.apache.lucene.search.IndexSearcher.close()"], ["int", "org.apache.lucene.search.IndexSearcher.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.IndexSearcher.doc(int)"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.IndexSearcher.doc(int, org.apache.lucene.document.FieldSelector)"], ["int", "org.apache.lucene.search.IndexSearcher.maxDoc()"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.IndexSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int)"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.IndexSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.IndexSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort, boolean)"], ["void", "org.apache.lucene.search.IndexSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.IndexSearcher.rewrite(org.apache.lucene.search.Query)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.IndexSearcher.explain(org.apache.lucene.search.Weight, int)"], ["void", "org.apache.lucene.search.IndexSearcher.setDefaultFieldSortScoring(boolean, boolean)"], ["org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight(org.apache.lucene.search.MatchAllDocsQuery, org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.toString()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.getQuery()"], ["float", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.getValue()"], ["float", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["int", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer.docID()"], ["int", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer.nextDoc()"], ["float", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer.score()"], ["int", "org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer.advance(int)"], ["org.apache.lucene.search.MatchAllDocsQuery", "org.apache.lucene.search.MatchAllDocsQuery()"], ["org.apache.lucene.search.MatchAllDocsQuery", "org.apache.lucene.search.MatchAllDocsQuery(java.lang.String)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.MatchAllDocsQuery.createWeight(org.apache.lucene.search.Searcher)"], ["void", "org.apache.lucene.search.MatchAllDocsQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.MatchAllDocsQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.MatchAllDocsQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.MatchAllDocsQuery.hashCode()"], ["org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight(org.apache.lucene.search.MultiPhraseQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.getQuery()"], ["float", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.getValue()"], ["float", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.MultiPhraseQuery", "org.apache.lucene.search.MultiPhraseQuery()"], ["void", "org.apache.lucene.search.MultiPhraseQuery.setSlop(int)"], ["int", "org.apache.lucene.search.MultiPhraseQuery.getSlop()"], ["void", "org.apache.lucene.search.MultiPhraseQuery.add(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.search.MultiPhraseQuery.add(org.apache.lucene.index.Term[])"], ["void", "org.apache.lucene.search.MultiPhraseQuery.add(org.apache.lucene.index.Term[], int)"], ["int[]", "org.apache.lucene.search.MultiPhraseQuery.getPositions()"], ["void", "org.apache.lucene.search.MultiPhraseQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiPhraseQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.MultiPhraseQuery.createWeight(org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.MultiPhraseQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.MultiPhraseQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.MultiPhraseQuery.hashCode()"], ["void", "org.apache.lucene.search.MultiSearcher$1.setScorer(org.apache.lucene.search.Scorer)"], ["void", "org.apache.lucene.search.MultiSearcher$1.collect(int)"], ["void", "org.apache.lucene.search.MultiSearcher$1.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["boolean", "org.apache.lucene.search.MultiSearcher$1.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.MultiSearcher$CachedDfSource", "org.apache.lucene.search.MultiSearcher$CachedDfSource(java.util.Map<org.apache.lucene.index.Term, java.lang.Integer>, int, org.apache.lucene.search.Similarity)"], ["int", "org.apache.lucene.search.MultiSearcher$CachedDfSource.docFreq(org.apache.lucene.index.Term)"], ["int[]", "org.apache.lucene.search.MultiSearcher$CachedDfSource.docFreqs(org.apache.lucene.index.Term[])"], ["int", "org.apache.lucene.search.MultiSearcher$CachedDfSource.maxDoc()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiSearcher$CachedDfSource.rewrite(org.apache.lucene.search.Query)"], ["void", "org.apache.lucene.search.MultiSearcher$CachedDfSource.close()"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.MultiSearcher$CachedDfSource.doc(int)"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.MultiSearcher$CachedDfSource.doc(int, org.apache.lucene.document.FieldSelector)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.MultiSearcher$CachedDfSource.explain(org.apache.lucene.search.Weight, int)"], ["void", "org.apache.lucene.search.MultiSearcher$CachedDfSource.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.MultiSearcher$CachedDfSource.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int)"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.MultiSearcher$CachedDfSource.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)"], ["org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort(java.util.concurrent.locks.Lock, org.apache.lucene.search.Searchable, org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.HitQueue, int, int[])"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort.call()"], ["java.lang.Object", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort.call()"], ["org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort(java.util.concurrent.locks.Lock, org.apache.lucene.search.Searchable, org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.FieldDocSortedHitQueue, org.apache.lucene.search.Sort, int, int[])"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort.call()"], ["java.lang.Object", "org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort.call()"], ["org.apache.lucene.search.MultiSearcher", "org.apache.lucene.search.MultiSearcher(org.apache.lucene.search.Searchable...)"], ["org.apache.lucene.search.Searchable[]", "org.apache.lucene.search.MultiSearcher.getSearchables()"], ["void", "org.apache.lucene.search.MultiSearcher.close()"], ["int", "org.apache.lucene.search.MultiSearcher.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.MultiSearcher.doc(int)"], ["org.apache.lucene.document.Document", "org.apache.lucene.search.MultiSearcher.doc(int, org.apache.lucene.document.FieldSelector)"], ["int", "org.apache.lucene.search.MultiSearcher.subSearcher(int)"], ["int", "org.apache.lucene.search.MultiSearcher.subDoc(int)"], ["int", "org.apache.lucene.search.MultiSearcher.maxDoc()"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.MultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int)"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.MultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)"], ["void", "org.apache.lucene.search.MultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiSearcher.rewrite(org.apache.lucene.search.Query)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.MultiSearcher.explain(org.apache.lucene.search.Weight, int)"], ["void", "org.apache.lucene.search.MultiTermQuery$1.setTermCountCutoff(int)"], ["void", "org.apache.lucene.search.MultiTermQuery$1.setDocCountPercent(double)"], ["org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite()"], ["void", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.setTermCountCutoff(int)"], ["int", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.getTermCountCutoff()"], ["void", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.setDocCountPercent(double)"], ["double", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.getDocCountPercent()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery)"], ["int", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.hashCode()"], ["boolean", "org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.equals(java.lang.Object)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiTermQuery$ConstantScoreBooleanQueryRewrite.rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiTermQuery$ConstantScoreFilterRewrite.rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery)"], ["org.apache.lucene.search.MultiTermQuery$RewriteMethod", "org.apache.lucene.search.MultiTermQuery$RewriteMethod()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiTermQuery$ScoringBooleanQueryRewrite.rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery)"], ["org.apache.lucene.search.MultiTermQuery", "org.apache.lucene.search.MultiTermQuery()"], ["int", "org.apache.lucene.search.MultiTermQuery.getTotalNumberOfTerms()"], ["void", "org.apache.lucene.search.MultiTermQuery.clearTotalNumberOfTerms()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.MultiTermQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.MultiTermQuery$RewriteMethod", "org.apache.lucene.search.MultiTermQuery.getRewriteMethod()"], ["void", "org.apache.lucene.search.MultiTermQuery.setRewriteMethod(org.apache.lucene.search.MultiTermQuery$RewriteMethod)"], ["int", "org.apache.lucene.search.MultiTermQuery.hashCode()"], ["boolean", "org.apache.lucene.search.MultiTermQuery.equals(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.search.MultiTermQueryWrapperFilter.toString()"], ["boolean", "org.apache.lucene.search.MultiTermQueryWrapperFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.MultiTermQueryWrapperFilter.hashCode()"], ["int", "org.apache.lucene.search.MultiTermQueryWrapperFilter.getTotalNumberOfTerms()"], ["void", "org.apache.lucene.search.MultiTermQueryWrapperFilter.clearTotalNumberOfTerms()"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.MultiTermQueryWrapperFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.NumericRangeFilter.getField()"], ["boolean", "org.apache.lucene.search.NumericRangeFilter.includesMin()"], ["boolean", "org.apache.lucene.search.NumericRangeFilter.includesMax()"], ["T", "org.apache.lucene.search.NumericRangeFilter.getMin()"], ["T", "org.apache.lucene.search.NumericRangeFilter.getMax()"], ["void", "org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1.addRange(java.lang.String, java.lang.String)"], ["void", "org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2.addRange(java.lang.String, java.lang.String)"], ["float", "org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum.difference()"], ["boolean", "org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum.next()"], ["void", "org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum.close()"], ["java.lang.String", "org.apache.lucene.search.NumericRangeQuery.getField()"], ["boolean", "org.apache.lucene.search.NumericRangeQuery.includesMin()"], ["boolean", "org.apache.lucene.search.NumericRangeQuery.includesMax()"], ["T", "org.apache.lucene.search.NumericRangeQuery.getMin()"], ["T", "org.apache.lucene.search.NumericRangeQuery.getMax()"], ["java.lang.String", "org.apache.lucene.search.NumericRangeQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.NumericRangeQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.NumericRangeQuery.hashCode()"], ["java.lang.Integer", "org.apache.lucene.search.ParallelMultiSearcher$1.call()"], ["java.lang.Object", "org.apache.lucene.search.ParallelMultiSearcher$1.call()"], ["void", "org.apache.lucene.search.ParallelMultiSearcher$2.setScorer(org.apache.lucene.search.Scorer)"], ["void", "org.apache.lucene.search.ParallelMultiSearcher$2.collect(int)"], ["void", "org.apache.lucene.search.ParallelMultiSearcher$2.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["boolean", "org.apache.lucene.search.ParallelMultiSearcher$2.acceptsDocsOutOfOrder()"], ["boolean", "org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper.hasNext()"], ["void", "org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper.submit(java.util.concurrent.Callable<T>)"], ["T", "org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper.next()"], ["void", "org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper.remove()"], ["org.apache.lucene.search.ParallelMultiSearcher", "org.apache.lucene.search.ParallelMultiSearcher(org.apache.lucene.search.Searchable...)"], ["int", "org.apache.lucene.search.ParallelMultiSearcher.docFreq(org.apache.lucene.index.Term)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.ParallelMultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int)"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.ParallelMultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)"], ["void", "org.apache.lucene.search.ParallelMultiSearcher.search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)"], ["void", "org.apache.lucene.search.ParallelMultiSearcher.close()"], ["org.apache.lucene.search.PhraseQuery$PhraseWeight", "org.apache.lucene.search.PhraseQuery$PhraseWeight(org.apache.lucene.search.PhraseQuery, org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.PhraseQuery$PhraseWeight.toString()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.PhraseQuery$PhraseWeight.getQuery()"], ["float", "org.apache.lucene.search.PhraseQuery$PhraseWeight.getValue()"], ["float", "org.apache.lucene.search.PhraseQuery$PhraseWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.PhraseQuery$PhraseWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.PhraseQuery$PhraseWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.PhraseQuery$PhraseWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.PhraseQuery", "org.apache.lucene.search.PhraseQuery()"], ["void", "org.apache.lucene.search.PhraseQuery.setSlop(int)"], ["int", "org.apache.lucene.search.PhraseQuery.getSlop()"], ["void", "org.apache.lucene.search.PhraseQuery.add(org.apache.lucene.index.Term)"], ["void", "org.apache.lucene.search.PhraseQuery.add(org.apache.lucene.index.Term, int)"], ["org.apache.lucene.index.Term[]", "org.apache.lucene.search.PhraseQuery.getTerms()"], ["int[]", "org.apache.lucene.search.PhraseQuery.getPositions()"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.PhraseQuery.createWeight(org.apache.lucene.search.Searcher)"], ["void", "org.apache.lucene.search.PhraseQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.PhraseQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.PhraseQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.PhraseQuery.hashCode()"], ["int", "org.apache.lucene.search.PhraseScorer.docID()"], ["int", "org.apache.lucene.search.PhraseScorer.nextDoc()"], ["float", "org.apache.lucene.search.PhraseScorer.score()"], ["int", "org.apache.lucene.search.PhraseScorer.advance(int)"], ["float", "org.apache.lucene.search.PhraseScorer.currentFreq()"], ["java.lang.String", "org.apache.lucene.search.PhraseScorer.toString()"], ["org.apache.lucene.search.PositiveScoresOnlyCollector", "org.apache.lucene.search.PositiveScoresOnlyCollector(org.apache.lucene.search.Collector)"], ["void", "org.apache.lucene.search.PositiveScoresOnlyCollector.collect(int)"], ["void", "org.apache.lucene.search.PositiveScoresOnlyCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.PositiveScoresOnlyCollector.setScorer(org.apache.lucene.search.Scorer)"], ["boolean", "org.apache.lucene.search.PositiveScoresOnlyCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.PrefixFilter", "org.apache.lucene.search.PrefixFilter(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.PrefixFilter.getPrefix()"], ["java.lang.String", "org.apache.lucene.search.PrefixFilter.toString()"], ["org.apache.lucene.search.PrefixQuery", "org.apache.lucene.search.PrefixQuery(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.PrefixQuery.getPrefix()"], ["java.lang.String", "org.apache.lucene.search.PrefixQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.PrefixQuery.hashCode()"], ["boolean", "org.apache.lucene.search.PrefixQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.PrefixTermEnum", "org.apache.lucene.search.PrefixTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term)"], ["float", "org.apache.lucene.search.PrefixTermEnum.difference()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.Query()"], ["void", "org.apache.lucene.search.Query.setBoost(float)"], ["float", "org.apache.lucene.search.Query.getBoost()"], ["java.lang.String", "org.apache.lucene.search.Query.toString()"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.Query.createWeight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.Query.weight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.Query.rewrite(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.Query.combine(org.apache.lucene.search.Query[])"], ["void", "org.apache.lucene.search.Query.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.Query.mergeBooleanQueries(org.apache.lucene.search.BooleanQuery...)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.Query.getSimilarity(org.apache.lucene.search.Searcher)"], ["java.lang.Object", "org.apache.lucene.search.Query.clone()"], ["int", "org.apache.lucene.search.Query.hashCode()"], ["boolean", "org.apache.lucene.search.Query.equals(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.search.QueryTermVector.getField()"], ["org.apache.lucene.search.QueryTermVector", "org.apache.lucene.search.QueryTermVector(java.lang.String[])"], ["org.apache.lucene.search.QueryTermVector", "org.apache.lucene.search.QueryTermVector(java.lang.String, org.apache.lucene.analysis.Analyzer)"], ["java.lang.String", "org.apache.lucene.search.QueryTermVector.toString()"], ["int", "org.apache.lucene.search.QueryTermVector.size()"], ["java.lang.String[]", "org.apache.lucene.search.QueryTermVector.getTerms()"], ["int[]", "org.apache.lucene.search.QueryTermVector.getTermFrequencies()"], ["int", "org.apache.lucene.search.QueryTermVector.indexOf(java.lang.String)"], ["int[]", "org.apache.lucene.search.QueryTermVector.indexesOf(java.lang.String[], int, int)"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.search.QueryWrapperFilter$1.iterator()"], ["boolean", "org.apache.lucene.search.QueryWrapperFilter$1.isCacheable()"], ["org.apache.lucene.search.QueryWrapperFilter", "org.apache.lucene.search.QueryWrapperFilter(org.apache.lucene.search.Query)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.QueryWrapperFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.QueryWrapperFilter.toString()"], ["boolean", "org.apache.lucene.search.QueryWrapperFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.QueryWrapperFilter.hashCode()"], ["org.apache.lucene.search.ReqExclScorer", "org.apache.lucene.search.ReqExclScorer(org.apache.lucene.search.Scorer, org.apache.lucene.search.DocIdSetIterator)"], ["int", "org.apache.lucene.search.ReqExclScorer.nextDoc()"], ["int", "org.apache.lucene.search.ReqExclScorer.docID()"], ["float", "org.apache.lucene.search.ReqExclScorer.score()"], ["int", "org.apache.lucene.search.ReqExclScorer.advance(int)"], ["org.apache.lucene.search.ReqOptSumScorer", "org.apache.lucene.search.ReqOptSumScorer(org.apache.lucene.search.Scorer, org.apache.lucene.search.Scorer)"], ["int", "org.apache.lucene.search.ReqOptSumScorer.nextDoc()"], ["int", "org.apache.lucene.search.ReqOptSumScorer.advance(int)"], ["int", "org.apache.lucene.search.ReqOptSumScorer.docID()"], ["float", "org.apache.lucene.search.ReqOptSumScorer.score()"], ["org.apache.lucene.search.ScoreCachingWrappingScorer", "org.apache.lucene.search.ScoreCachingWrappingScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.ScoreCachingWrappingScorer.getSimilarity()"], ["float", "org.apache.lucene.search.ScoreCachingWrappingScorer.score()"], ["int", "org.apache.lucene.search.ScoreCachingWrappingScorer.docID()"], ["int", "org.apache.lucene.search.ScoreCachingWrappingScorer.nextDoc()"], ["void", "org.apache.lucene.search.ScoreCachingWrappingScorer.score(org.apache.lucene.search.Collector)"], ["int", "org.apache.lucene.search.ScoreCachingWrappingScorer.advance(int)"], ["org.apache.lucene.search.ScoreDoc", "org.apache.lucene.search.ScoreDoc(int, float)"], ["java.lang.String", "org.apache.lucene.search.ScoreDoc.toString()"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.Scorer.getSimilarity()"], ["void", "org.apache.lucene.search.Scorer.score(org.apache.lucene.search.Collector)"], ["org.apache.lucene.search.Searcher", "org.apache.lucene.search.Searcher()"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.Searcher.search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)"], ["void", "org.apache.lucene.search.Searcher.search(org.apache.lucene.search.Query, org.apache.lucene.search.Collector)"], ["void", "org.apache.lucene.search.Searcher.search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.Searcher.search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.Searcher.search(org.apache.lucene.search.Query, int)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.Searcher.explain(org.apache.lucene.search.Query, int)"], ["void", "org.apache.lucene.search.Searcher.setSimilarity(org.apache.lucene.search.Similarity)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.Searcher.getSimilarity()"], ["int[]", "org.apache.lucene.search.Searcher.docFreqs(org.apache.lucene.index.Term[])"], ["java.lang.String", "org.apache.lucene.search.Similarity$1.explain()"], ["float", "org.apache.lucene.search.Similarity$1.getIdf()"], ["float", "org.apache.lucene.search.Similarity$2.getIdf()"], ["java.lang.String", "org.apache.lucene.search.Similarity$2.explain()"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.Similarity()"], ["void", "org.apache.lucene.search.Similarity.setDefault(org.apache.lucene.search.Similarity)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.Similarity.getDefault()"], ["float", "org.apache.lucene.search.Similarity.decodeNorm(byte)"], ["float[]", "org.apache.lucene.search.Similarity.getNormDecoder()"], ["float", "org.apache.lucene.search.Similarity.computeNorm(java.lang.String, org.apache.lucene.index.FieldInvertState)"], ["byte", "org.apache.lucene.search.Similarity.encodeNorm(float)"], ["float", "org.apache.lucene.search.Similarity.tf(int)"], ["org.apache.lucene.search.Explanation$IDFExplanation", "org.apache.lucene.search.Similarity.idfExplain(org.apache.lucene.index.Term, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Explanation$IDFExplanation", "org.apache.lucene.search.Similarity.idfExplain(java.util.Collection<org.apache.lucene.index.Term>, org.apache.lucene.search.Searcher)"], ["float", "org.apache.lucene.search.Similarity.scorePayload(int, java.lang.String, int, int, byte[], int, int)"], ["org.apache.lucene.search.SimilarityDelegator", "org.apache.lucene.search.SimilarityDelegator(org.apache.lucene.search.Similarity)"], ["float", "org.apache.lucene.search.SimilarityDelegator.computeNorm(java.lang.String, org.apache.lucene.index.FieldInvertState)"], ["float", "org.apache.lucene.search.SimilarityDelegator.lengthNorm(java.lang.String, int)"], ["float", "org.apache.lucene.search.SimilarityDelegator.queryNorm(float)"], ["float", "org.apache.lucene.search.SimilarityDelegator.tf(float)"], ["float", "org.apache.lucene.search.SimilarityDelegator.sloppyFreq(int)"], ["float", "org.apache.lucene.search.SimilarityDelegator.idf(int, int)"], ["float", "org.apache.lucene.search.SimilarityDelegator.coord(int, int)"], ["float", "org.apache.lucene.search.SimilarityDelegator.scorePayload(int, java.lang.String, int, int, byte[], int, int)"], ["org.apache.lucene.search.SingleTermEnum", "org.apache.lucene.search.SingleTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term)"], ["float", "org.apache.lucene.search.SingleTermEnum.difference()"], ["org.apache.lucene.search.Sort", "org.apache.lucene.search.Sort()"], ["org.apache.lucene.search.Sort", "org.apache.lucene.search.Sort(org.apache.lucene.search.SortField)"], ["org.apache.lucene.search.Sort", "org.apache.lucene.search.Sort(org.apache.lucene.search.SortField...)"], ["void", "org.apache.lucene.search.Sort.setSort(org.apache.lucene.search.SortField)"], ["void", "org.apache.lucene.search.Sort.setSort(org.apache.lucene.search.SortField...)"], ["org.apache.lucene.search.SortField[]", "org.apache.lucene.search.Sort.getSort()"], ["java.lang.String", "org.apache.lucene.search.Sort.toString()"], ["boolean", "org.apache.lucene.search.Sort.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.Sort.hashCode()"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, int)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, int, boolean)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, org.apache.lucene.search.FieldCache$Parser)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, org.apache.lucene.search.FieldCache$Parser, boolean)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, java.util.Locale)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, java.util.Locale, boolean)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, org.apache.lucene.search.FieldComparatorSource)"], ["org.apache.lucene.search.SortField", "org.apache.lucene.search.SortField(java.lang.String, org.apache.lucene.search.FieldComparatorSource, boolean)"], ["java.lang.String", "org.apache.lucene.search.SortField.getField()"], ["int", "org.apache.lucene.search.SortField.getType()"], ["java.util.Locale", "org.apache.lucene.search.SortField.getLocale()"], ["org.apache.lucene.search.FieldCache$Parser", "org.apache.lucene.search.SortField.getParser()"], ["boolean", "org.apache.lucene.search.SortField.getReverse()"], ["org.apache.lucene.search.FieldComparatorSource", "org.apache.lucene.search.SortField.getComparatorSource()"], ["java.lang.String", "org.apache.lucene.search.SortField.toString()"], ["boolean", "org.apache.lucene.search.SortField.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.SortField.hashCode()"], ["org.apache.lucene.search.FieldComparator", "org.apache.lucene.search.SortField.getComparator(int, int)"], ["org.apache.lucene.search.SpanFilter", "org.apache.lucene.search.SpanFilter()"], ["org.apache.lucene.search.SpanFilterResult$PositionInfo", "org.apache.lucene.search.SpanFilterResult$PositionInfo(int)"], ["void", "org.apache.lucene.search.SpanFilterResult$PositionInfo.addPosition(int, int)"], ["int", "org.apache.lucene.search.SpanFilterResult$PositionInfo.getDoc()"], ["org.apache.lucene.search.SpanFilterResult$StartEnd", "org.apache.lucene.search.SpanFilterResult$StartEnd(int, int)"], ["int", "org.apache.lucene.search.SpanFilterResult$StartEnd.getEnd()"], ["int", "org.apache.lucene.search.SpanFilterResult$StartEnd.getStart()"], ["org.apache.lucene.search.SpanFilterResult", "org.apache.lucene.search.SpanFilterResult(org.apache.lucene.search.DocIdSet, java.util.List<org.apache.lucene.search.SpanFilterResult$PositionInfo>)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.SpanFilterResult.getDocIdSet()"], ["org.apache.lucene.search.SpanQueryFilter", "org.apache.lucene.search.SpanQueryFilter(org.apache.lucene.search.spans.SpanQuery)"], ["org.apache.lucene.search.DocIdSet", "org.apache.lucene.search.SpanQueryFilter.getDocIdSet(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.SpanFilterResult", "org.apache.lucene.search.SpanQueryFilter.bitSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.SpanQueryFilter.getQuery()"], ["java.lang.String", "org.apache.lucene.search.SpanQueryFilter.toString()"], ["boolean", "org.apache.lucene.search.SpanQueryFilter.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.SpanQueryFilter.hashCode()"], ["org.apache.lucene.search.TermQuery$TermWeight", "org.apache.lucene.search.TermQuery$TermWeight(org.apache.lucene.search.TermQuery, org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.TermQuery$TermWeight.toString()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.TermQuery$TermWeight.getQuery()"], ["float", "org.apache.lucene.search.TermQuery$TermWeight.getValue()"], ["float", "org.apache.lucene.search.TermQuery$TermWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.TermQuery$TermWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.TermQuery$TermWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.TermQuery$TermWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.TermQuery", "org.apache.lucene.search.TermQuery(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.TermQuery.getTerm()"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.TermQuery.createWeight(org.apache.lucene.search.Searcher)"], ["void", "org.apache.lucene.search.TermQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.TermQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.TermQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.TermQuery.hashCode()"], ["org.apache.lucene.search.TermRangeFilter", "org.apache.lucene.search.TermRangeFilter(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)"], ["org.apache.lucene.search.TermRangeFilter", "org.apache.lucene.search.TermRangeFilter(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, java.text.Collator)"], ["org.apache.lucene.search.TermRangeFilter", "org.apache.lucene.search.TermRangeFilter.Less(java.lang.String, java.lang.String)"], ["org.apache.lucene.search.TermRangeFilter", "org.apache.lucene.search.TermRangeFilter.More(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.TermRangeFilter.getField()"], ["java.lang.String", "org.apache.lucene.search.TermRangeFilter.getLowerTerm()"], ["java.lang.String", "org.apache.lucene.search.TermRangeFilter.getUpperTerm()"], ["boolean", "org.apache.lucene.search.TermRangeFilter.includesLower()"], ["boolean", "org.apache.lucene.search.TermRangeFilter.includesUpper()"], ["java.text.Collator", "org.apache.lucene.search.TermRangeFilter.getCollator()"], ["org.apache.lucene.search.TermRangeQuery", "org.apache.lucene.search.TermRangeQuery(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)"], ["org.apache.lucene.search.TermRangeQuery", "org.apache.lucene.search.TermRangeQuery(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, java.text.Collator)"], ["java.lang.String", "org.apache.lucene.search.TermRangeQuery.getField()"], ["java.lang.String", "org.apache.lucene.search.TermRangeQuery.getLowerTerm()"], ["java.lang.String", "org.apache.lucene.search.TermRangeQuery.getUpperTerm()"], ["boolean", "org.apache.lucene.search.TermRangeQuery.includesLower()"], ["boolean", "org.apache.lucene.search.TermRangeQuery.includesUpper()"], ["java.text.Collator", "org.apache.lucene.search.TermRangeQuery.getCollator()"], ["java.lang.String", "org.apache.lucene.search.TermRangeQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.TermRangeQuery.hashCode()"], ["boolean", "org.apache.lucene.search.TermRangeQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.TermRangeTermEnum", "org.apache.lucene.search.TermRangeTermEnum(org.apache.lucene.index.IndexReader, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, java.text.Collator)"], ["float", "org.apache.lucene.search.TermRangeTermEnum.difference()"], ["void", "org.apache.lucene.search.TermScorer.score(org.apache.lucene.search.Collector)"], ["int", "org.apache.lucene.search.TermScorer.docID()"], ["int", "org.apache.lucene.search.TermScorer.nextDoc()"], ["float", "org.apache.lucene.search.TermScorer.score()"], ["int", "org.apache.lucene.search.TermScorer.advance(int)"], ["java.lang.String", "org.apache.lucene.search.TermScorer.toString()"], ["long", "org.apache.lucene.search.TimeLimitingCollector$TimeExceededException.getTimeAllowed()"], ["long", "org.apache.lucene.search.TimeLimitingCollector$TimeExceededException.getTimeElapsed()"], ["int", "org.apache.lucene.search.TimeLimitingCollector$TimeExceededException.getLastDocCollected()"], ["void", "org.apache.lucene.search.TimeLimitingCollector$TimerThread.run()"], ["long", "org.apache.lucene.search.TimeLimitingCollector$TimerThread.getMilliseconds()"], ["org.apache.lucene.search.TimeLimitingCollector", "org.apache.lucene.search.TimeLimitingCollector(org.apache.lucene.search.Collector, long)"], ["long", "org.apache.lucene.search.TimeLimitingCollector.getResolution()"], ["void", "org.apache.lucene.search.TimeLimitingCollector.setResolution(long)"], ["boolean", "org.apache.lucene.search.TimeLimitingCollector.isGreedy()"], ["void", "org.apache.lucene.search.TimeLimitingCollector.setGreedy(boolean)"], ["void", "org.apache.lucene.search.TimeLimitingCollector.collect(int)"], ["void", "org.apache.lucene.search.TimeLimitingCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.TimeLimitingCollector.setScorer(org.apache.lucene.search.Scorer)"], ["boolean", "org.apache.lucene.search.TimeLimitingCollector.acceptsDocsOutOfOrder()"], ["float", "org.apache.lucene.search.TopDocs.getMaxScore()"], ["void", "org.apache.lucene.search.TopDocs.setMaxScore(float)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.TopDocs(int, org.apache.lucene.search.ScoreDoc[], float)"], ["int", "org.apache.lucene.search.TopDocsCollector.getTotalHits()"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.TopDocsCollector.topDocs()"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.TopDocsCollector.topDocs(int)"], ["org.apache.lucene.search.TopDocs", "org.apache.lucene.search.TopDocsCollector.topDocs(int, int)"], ["org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector", "org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector", "org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector.collect(int)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector.setScorer(org.apache.lucene.search.Scorer)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector(org.apache.lucene.search.FieldValueHitQueue, int, boolean)"], ["void", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldCollector", "org.apache.lucene.search.TopFieldCollector.create(org.apache.lucene.search.Sort, int, boolean, boolean, boolean, boolean)"], ["boolean", "org.apache.lucene.search.TopFieldCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopFieldDocs", "org.apache.lucene.search.TopFieldDocs(int, org.apache.lucene.search.ScoreDoc[], org.apache.lucene.search.SortField[], float)"], ["void", "org.apache.lucene.search.TopScoreDocCollector$InOrderTopScoreDocCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopScoreDocCollector$InOrderTopScoreDocCollector.acceptsDocsOutOfOrder()"], ["void", "org.apache.lucene.search.TopScoreDocCollector$OutOfOrderTopScoreDocCollector.collect(int)"], ["boolean", "org.apache.lucene.search.TopScoreDocCollector$OutOfOrderTopScoreDocCollector.acceptsDocsOutOfOrder()"], ["org.apache.lucene.search.TopScoreDocCollector", "org.apache.lucene.search.TopScoreDocCollector.create(int, boolean)"], ["void", "org.apache.lucene.search.TopScoreDocCollector.setNextReader(org.apache.lucene.index.IndexReader, int)"], ["void", "org.apache.lucene.search.TopScoreDocCollector.setScorer(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.Weight()"], ["boolean", "org.apache.lucene.search.Weight.scoresDocsOutOfOrder()"], ["org.apache.lucene.search.WildcardQuery", "org.apache.lucene.search.WildcardQuery(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.WildcardQuery.getTerm()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.WildcardQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.WildcardQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.WildcardQuery.hashCode()"], ["boolean", "org.apache.lucene.search.WildcardQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.WildcardTermEnum", "org.apache.lucene.search.WildcardTermEnum(org.apache.lucene.index.IndexReader, org.apache.lucene.index.Term)"], ["float", "org.apache.lucene.search.WildcardTermEnum.difference()"], ["boolean", "org.apache.lucene.search.WildcardTermEnum.endEnum()"], ["boolean", "org.apache.lucene.search.WildcardTermEnum.wildcardEquals(java.lang.String, int, java.lang.String, int)"], ["float", "org.apache.lucene.search.function.ByteFieldSource$1.floatVal(int)"], ["int", "org.apache.lucene.search.function.ByteFieldSource$1.intVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.ByteFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.ByteFieldSource", "org.apache.lucene.search.function.ByteFieldSource(java.lang.String)"], ["org.apache.lucene.search.function.ByteFieldSource", "org.apache.lucene.search.function.ByteFieldSource(java.lang.String, org.apache.lucene.search.FieldCache$ByteParser)"], ["java.lang.String", "org.apache.lucene.search.function.ByteFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.ByteFieldSource.getCachedFieldValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceEquals(org.apache.lucene.search.function.FieldCacheSource)"], ["int", "org.apache.lucene.search.function.ByteFieldSource.cachedFieldSourceHashCode()"], ["org.apache.lucene.search.function.CustomScoreProvider", "org.apache.lucene.search.function.CustomScoreProvider(org.apache.lucene.index.IndexReader)"], ["float", "org.apache.lucene.search.function.CustomScoreProvider.customScore(int, float, float[])"], ["float", "org.apache.lucene.search.function.CustomScoreProvider.customScore(int, float, float)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreProvider.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation[])"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreProvider.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation)"], ["float", "org.apache.lucene.search.function.CustomScoreQuery$1.customScore(int, float, float[])"], ["float", "org.apache.lucene.search.function.CustomScoreQuery$1.customScore(int, float, float)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreQuery$1.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation[])"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreQuery$1.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation)"], ["int", "org.apache.lucene.search.function.CustomScoreQuery$CustomScorer.nextDoc()"], ["int", "org.apache.lucene.search.function.CustomScoreQuery$CustomScorer.docID()"], ["float", "org.apache.lucene.search.function.CustomScoreQuery$CustomScorer.score()"], ["int", "org.apache.lucene.search.function.CustomScoreQuery$CustomScorer.advance(int)"], ["org.apache.lucene.search.function.CustomScoreQuery$CustomWeight", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight(org.apache.lucene.search.function.CustomScoreQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.getQuery()"], ["float", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.getValue()"], ["float", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["boolean", "org.apache.lucene.search.function.CustomScoreQuery$CustomWeight.scoresDocsOutOfOrder()"], ["org.apache.lucene.search.function.CustomScoreQuery", "org.apache.lucene.search.function.CustomScoreQuery(org.apache.lucene.search.Query)"], ["org.apache.lucene.search.function.CustomScoreQuery", "org.apache.lucene.search.function.CustomScoreQuery(org.apache.lucene.search.Query, org.apache.lucene.search.function.ValueSourceQuery)"], ["org.apache.lucene.search.function.CustomScoreQuery", "org.apache.lucene.search.function.CustomScoreQuery(org.apache.lucene.search.Query, org.apache.lucene.search.function.ValueSourceQuery...)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.function.CustomScoreQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.search.function.CustomScoreQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.Object", "org.apache.lucene.search.function.CustomScoreQuery.clone()"], ["java.lang.String", "org.apache.lucene.search.function.CustomScoreQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.function.CustomScoreQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.function.CustomScoreQuery.hashCode()"], ["float", "org.apache.lucene.search.function.CustomScoreQuery.customScore(int, float, float[])"], ["float", "org.apache.lucene.search.function.CustomScoreQuery.customScore(int, float, float)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreQuery.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation[])"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.CustomScoreQuery.customExplain(int, org.apache.lucene.search.Explanation, org.apache.lucene.search.Explanation)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.function.CustomScoreQuery.createWeight(org.apache.lucene.search.Searcher)"], ["boolean", "org.apache.lucene.search.function.CustomScoreQuery.isStrict()"], ["void", "org.apache.lucene.search.function.CustomScoreQuery.setStrict(boolean)"], ["java.lang.String", "org.apache.lucene.search.function.CustomScoreQuery.name()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.DocValues()"], ["int", "org.apache.lucene.search.function.DocValues.intVal(int)"], ["long", "org.apache.lucene.search.function.DocValues.longVal(int)"], ["double", "org.apache.lucene.search.function.DocValues.doubleVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.DocValues.strVal(int)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.DocValues.explain(int)"], ["float", "org.apache.lucene.search.function.DocValues.getMinValue()"], ["float", "org.apache.lucene.search.function.DocValues.getMaxValue()"], ["float", "org.apache.lucene.search.function.DocValues.getAverageValue()"], ["org.apache.lucene.search.function.FieldCacheSource", "org.apache.lucene.search.function.FieldCacheSource(java.lang.String)"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.FieldCacheSource.getValues(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.function.FieldCacheSource.description()"], ["boolean", "org.apache.lucene.search.function.FieldCacheSource.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.function.FieldCacheSource.hashCode()"], ["java.lang.String", "org.apache.lucene.search.function.FieldScoreQuery$Type.toString()"], ["org.apache.lucene.search.function.FieldScoreQuery", "org.apache.lucene.search.function.FieldScoreQuery(java.lang.String, org.apache.lucene.search.function.FieldScoreQuery$Type)"], ["float", "org.apache.lucene.search.function.FloatFieldSource$1.floatVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.FloatFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.FloatFieldSource", "org.apache.lucene.search.function.FloatFieldSource(java.lang.String)"], ["org.apache.lucene.search.function.FloatFieldSource", "org.apache.lucene.search.function.FloatFieldSource(java.lang.String, org.apache.lucene.search.FieldCache$FloatParser)"], ["java.lang.String", "org.apache.lucene.search.function.FloatFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.FloatFieldSource.getCachedFieldValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceEquals(org.apache.lucene.search.function.FieldCacheSource)"], ["int", "org.apache.lucene.search.function.FloatFieldSource.cachedFieldSourceHashCode()"], ["float", "org.apache.lucene.search.function.IntFieldSource$1.floatVal(int)"], ["int", "org.apache.lucene.search.function.IntFieldSource$1.intVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.IntFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.IntFieldSource", "org.apache.lucene.search.function.IntFieldSource(java.lang.String)"], ["org.apache.lucene.search.function.IntFieldSource", "org.apache.lucene.search.function.IntFieldSource(java.lang.String, org.apache.lucene.search.FieldCache$IntParser)"], ["java.lang.String", "org.apache.lucene.search.function.IntFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.IntFieldSource.getCachedFieldValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceEquals(org.apache.lucene.search.function.FieldCacheSource)"], ["int", "org.apache.lucene.search.function.IntFieldSource.cachedFieldSourceHashCode()"], ["float", "org.apache.lucene.search.function.OrdFieldSource$1.floatVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.OrdFieldSource$1.strVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.OrdFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.OrdFieldSource", "org.apache.lucene.search.function.OrdFieldSource(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.function.OrdFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.OrdFieldSource.getValues(org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.OrdFieldSource.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.function.OrdFieldSource.hashCode()"], ["float", "org.apache.lucene.search.function.ReverseOrdFieldSource$1.floatVal(int)"], ["int", "org.apache.lucene.search.function.ReverseOrdFieldSource$1.intVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.ReverseOrdFieldSource$1.strVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.ReverseOrdFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.ReverseOrdFieldSource", "org.apache.lucene.search.function.ReverseOrdFieldSource(java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.function.ReverseOrdFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.ReverseOrdFieldSource.getValues(org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.ReverseOrdFieldSource.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.function.ReverseOrdFieldSource.hashCode()"], ["float", "org.apache.lucene.search.function.ShortFieldSource$1.floatVal(int)"], ["int", "org.apache.lucene.search.function.ShortFieldSource$1.intVal(int)"], ["java.lang.String", "org.apache.lucene.search.function.ShortFieldSource$1.toString(int)"], ["org.apache.lucene.search.function.ShortFieldSource", "org.apache.lucene.search.function.ShortFieldSource(java.lang.String)"], ["org.apache.lucene.search.function.ShortFieldSource", "org.apache.lucene.search.function.ShortFieldSource(java.lang.String, org.apache.lucene.search.FieldCache$ShortParser)"], ["java.lang.String", "org.apache.lucene.search.function.ShortFieldSource.description()"], ["org.apache.lucene.search.function.DocValues", "org.apache.lucene.search.function.ShortFieldSource.getCachedFieldValues(org.apache.lucene.search.FieldCache, java.lang.String, org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceEquals(org.apache.lucene.search.function.FieldCacheSource)"], ["int", "org.apache.lucene.search.function.ShortFieldSource.cachedFieldSourceHashCode()"], ["org.apache.lucene.search.function.ValueSource", "org.apache.lucene.search.function.ValueSource()"], ["java.lang.String", "org.apache.lucene.search.function.ValueSource.toString()"], ["int", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer.nextDoc()"], ["int", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer.docID()"], ["int", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer.advance(int)"], ["float", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer.score()"], ["org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight(org.apache.lucene.search.function.ValueSourceQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.getQuery()"], ["float", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.getValue()"], ["float", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.function.ValueSourceQuery", "org.apache.lucene.search.function.ValueSourceQuery(org.apache.lucene.search.function.ValueSource)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.function.ValueSourceQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.search.function.ValueSourceQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.function.ValueSourceQuery.createWeight(org.apache.lucene.search.Searcher)"], ["java.lang.String", "org.apache.lucene.search.function.ValueSourceQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.function.ValueSourceQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.function.ValueSourceQuery.hashCode()"], ["org.apache.lucene.search.payloads.AveragePayloadFunction", "org.apache.lucene.search.payloads.AveragePayloadFunction()"], ["float", "org.apache.lucene.search.payloads.AveragePayloadFunction.currentScore(int, java.lang.String, int, int, int, float, float)"], ["float", "org.apache.lucene.search.payloads.AveragePayloadFunction.docScore(int, java.lang.String, int, float)"], ["int", "org.apache.lucene.search.payloads.AveragePayloadFunction.hashCode()"], ["boolean", "org.apache.lucene.search.payloads.AveragePayloadFunction.equals(java.lang.Object)"], ["org.apache.lucene.search.payloads.MaxPayloadFunction", "org.apache.lucene.search.payloads.MaxPayloadFunction()"], ["float", "org.apache.lucene.search.payloads.MaxPayloadFunction.currentScore(int, java.lang.String, int, int, int, float, float)"], ["float", "org.apache.lucene.search.payloads.MaxPayloadFunction.docScore(int, java.lang.String, int, float)"], ["int", "org.apache.lucene.search.payloads.MaxPayloadFunction.hashCode()"], ["boolean", "org.apache.lucene.search.payloads.MaxPayloadFunction.equals(java.lang.Object)"], ["org.apache.lucene.search.payloads.MinPayloadFunction", "org.apache.lucene.search.payloads.MinPayloadFunction()"], ["float", "org.apache.lucene.search.payloads.MinPayloadFunction.currentScore(int, java.lang.String, int, int, int, float, float)"], ["float", "org.apache.lucene.search.payloads.MinPayloadFunction.docScore(int, java.lang.String, int, float)"], ["int", "org.apache.lucene.search.payloads.MinPayloadFunction.hashCode()"], ["boolean", "org.apache.lucene.search.payloads.MinPayloadFunction.equals(java.lang.Object)"], ["org.apache.lucene.search.payloads.PayloadFunction", "org.apache.lucene.search.payloads.PayloadFunction()"], ["void", "org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer.getPayloads(org.apache.lucene.search.spans.Spans[])"], ["float", "org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer.score()"], ["org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight", "org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight(org.apache.lucene.search.payloads.PayloadNearQuery, org.apache.lucene.search.spans.SpanQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.payloads.PayloadNearQuery", "org.apache.lucene.search.payloads.PayloadNearQuery(org.apache.lucene.search.spans.SpanQuery[], int, boolean)"], ["org.apache.lucene.search.payloads.PayloadNearQuery", "org.apache.lucene.search.payloads.PayloadNearQuery(org.apache.lucene.search.spans.SpanQuery[], int, boolean, org.apache.lucene.search.payloads.PayloadFunction)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.payloads.PayloadNearQuery.createWeight(org.apache.lucene.search.Searcher)"], ["java.lang.Object", "org.apache.lucene.search.payloads.PayloadNearQuery.clone()"], ["java.lang.String", "org.apache.lucene.search.payloads.PayloadNearQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.payloads.PayloadNearQuery.hashCode()"], ["boolean", "org.apache.lucene.search.payloads.PayloadNearQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.payloads.PayloadSpanUtil", "org.apache.lucene.search.payloads.PayloadSpanUtil(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer", "org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer(org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight, org.apache.lucene.search.spans.TermSpans, org.apache.lucene.search.Weight, org.apache.lucene.search.Similarity, byte[])"], ["float", "org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer.score()"], ["org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight", "org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight(org.apache.lucene.search.payloads.PayloadTermQuery, org.apache.lucene.search.payloads.PayloadTermQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.payloads.PayloadTermQuery", "org.apache.lucene.search.payloads.PayloadTermQuery(org.apache.lucene.index.Term, org.apache.lucene.search.payloads.PayloadFunction)"], ["org.apache.lucene.search.payloads.PayloadTermQuery", "org.apache.lucene.search.payloads.PayloadTermQuery(org.apache.lucene.index.Term, org.apache.lucene.search.payloads.PayloadFunction, boolean)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.payloads.PayloadTermQuery.createWeight(org.apache.lucene.search.Searcher)"], ["int", "org.apache.lucene.search.payloads.PayloadTermQuery.hashCode()"], ["boolean", "org.apache.lucene.search.payloads.PayloadTermQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.spans.FieldMaskingSpanQuery", "org.apache.lucene.search.spans.FieldMaskingSpanQuery(org.apache.lucene.search.spans.SpanQuery, java.lang.String)"], ["java.lang.String", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.getField()"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.getMaskedQuery()"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["void", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.createWeight(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Similarity", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.getSimilarity(org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.spans.FieldMaskingSpanQuery.hashCode()"], ["int", "org.apache.lucene.search.spans.NearSpansOrdered$1.compare(org.apache.lucene.search.spans.Spans, org.apache.lucene.search.spans.Spans)"], ["int", "org.apache.lucene.search.spans.NearSpansOrdered$1.compare(java.lang.Object, java.lang.Object)"], ["org.apache.lucene.search.spans.NearSpansOrdered", "org.apache.lucene.search.spans.NearSpansOrdered(org.apache.lucene.search.spans.SpanNearQuery, org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.spans.NearSpansOrdered", "org.apache.lucene.search.spans.NearSpansOrdered(org.apache.lucene.search.spans.SpanNearQuery, org.apache.lucene.index.IndexReader, boolean)"], ["int", "org.apache.lucene.search.spans.NearSpansOrdered.doc()"], ["int", "org.apache.lucene.search.spans.NearSpansOrdered.start()"], ["int", "org.apache.lucene.search.spans.NearSpansOrdered.end()"], ["org.apache.lucene.search.spans.Spans[]", "org.apache.lucene.search.spans.NearSpansOrdered.getSubSpans()"], ["boolean", "org.apache.lucene.search.spans.NearSpansOrdered.isPayloadAvailable()"], ["boolean", "org.apache.lucene.search.spans.NearSpansOrdered.next()"], ["boolean", "org.apache.lucene.search.spans.NearSpansOrdered.skipTo(int)"], ["java.lang.String", "org.apache.lucene.search.spans.NearSpansOrdered.toString()"], ["org.apache.lucene.search.spans.NearSpansUnordered$CellQueue", "org.apache.lucene.search.spans.NearSpansUnordered$CellQueue(org.apache.lucene.search.spans.NearSpansUnordered, int)"], ["org.apache.lucene.search.spans.NearSpansUnordered$SpansCell", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell(org.apache.lucene.search.spans.NearSpansUnordered, org.apache.lucene.search.spans.Spans, int)"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.next()"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.skipTo(int)"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.doc()"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.start()"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.end()"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.NearSpansUnordered$SpansCell.toString()"], ["org.apache.lucene.search.spans.NearSpansUnordered", "org.apache.lucene.search.spans.NearSpansUnordered(org.apache.lucene.search.spans.SpanNearQuery, org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.spans.Spans[]", "org.apache.lucene.search.spans.NearSpansUnordered.getSubSpans()"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered.next()"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered.skipTo(int)"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered.doc()"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered.start()"], ["int", "org.apache.lucene.search.spans.NearSpansUnordered.end()"], ["boolean", "org.apache.lucene.search.spans.NearSpansUnordered.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.NearSpansUnordered.toString()"], ["boolean", "org.apache.lucene.search.spans.SpanFirstQuery$1.next()"], ["boolean", "org.apache.lucene.search.spans.SpanFirstQuery$1.skipTo(int)"], ["int", "org.apache.lucene.search.spans.SpanFirstQuery$1.doc()"], ["int", "org.apache.lucene.search.spans.SpanFirstQuery$1.start()"], ["int", "org.apache.lucene.search.spans.SpanFirstQuery$1.end()"], ["boolean", "org.apache.lucene.search.spans.SpanFirstQuery$1.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanFirstQuery$1.toString()"], ["org.apache.lucene.search.spans.SpanFirstQuery", "org.apache.lucene.search.spans.SpanFirstQuery(org.apache.lucene.search.spans.SpanQuery, int)"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.spans.SpanFirstQuery.getMatch()"], ["int", "org.apache.lucene.search.spans.SpanFirstQuery.getEnd()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanFirstQuery.getField()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanFirstQuery.toString(java.lang.String)"], ["java.lang.Object", "org.apache.lucene.search.spans.SpanFirstQuery.clone()"], ["void", "org.apache.lucene.search.spans.SpanFirstQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.SpanFirstQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.SpanFirstQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.spans.SpanFirstQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.spans.SpanFirstQuery.hashCode()"], ["org.apache.lucene.search.spans.SpanNearQuery", "org.apache.lucene.search.spans.SpanNearQuery(org.apache.lucene.search.spans.SpanQuery[], int, boolean)"], ["org.apache.lucene.search.spans.SpanNearQuery", "org.apache.lucene.search.spans.SpanNearQuery(org.apache.lucene.search.spans.SpanQuery[], int, boolean, boolean)"], ["org.apache.lucene.search.spans.SpanQuery[]", "org.apache.lucene.search.spans.SpanNearQuery.getClauses()"], ["int", "org.apache.lucene.search.spans.SpanNearQuery.getSlop()"], ["boolean", "org.apache.lucene.search.spans.SpanNearQuery.isInOrder()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanNearQuery.getField()"], ["void", "org.apache.lucene.search.spans.SpanNearQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.spans.SpanNearQuery.toString(java.lang.String)"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.SpanNearQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.SpanNearQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.Object", "org.apache.lucene.search.spans.SpanNearQuery.clone()"], ["boolean", "org.apache.lucene.search.spans.SpanNearQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.spans.SpanNearQuery.hashCode()"], ["boolean", "org.apache.lucene.search.spans.SpanNotQuery$1.next()"], ["boolean", "org.apache.lucene.search.spans.SpanNotQuery$1.skipTo(int)"], ["int", "org.apache.lucene.search.spans.SpanNotQuery$1.doc()"], ["int", "org.apache.lucene.search.spans.SpanNotQuery$1.start()"], ["int", "org.apache.lucene.search.spans.SpanNotQuery$1.end()"], ["boolean", "org.apache.lucene.search.spans.SpanNotQuery$1.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanNotQuery$1.toString()"], ["org.apache.lucene.search.spans.SpanNotQuery", "org.apache.lucene.search.spans.SpanNotQuery(org.apache.lucene.search.spans.SpanQuery, org.apache.lucene.search.spans.SpanQuery)"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.spans.SpanNotQuery.getInclude()"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.spans.SpanNotQuery.getExclude()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanNotQuery.getField()"], ["void", "org.apache.lucene.search.spans.SpanNotQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.spans.SpanNotQuery.toString(java.lang.String)"], ["java.lang.Object", "org.apache.lucene.search.spans.SpanNotQuery.clone()"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.SpanNotQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.SpanNotQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["boolean", "org.apache.lucene.search.spans.SpanNotQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.spans.SpanNotQuery.hashCode()"], ["boolean", "org.apache.lucene.search.spans.SpanOrQuery$1.next()"], ["boolean", "org.apache.lucene.search.spans.SpanOrQuery$1.skipTo(int)"], ["int", "org.apache.lucene.search.spans.SpanOrQuery$1.doc()"], ["int", "org.apache.lucene.search.spans.SpanOrQuery$1.start()"], ["int", "org.apache.lucene.search.spans.SpanOrQuery$1.end()"], ["boolean", "org.apache.lucene.search.spans.SpanOrQuery$1.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanOrQuery$1.toString()"], ["org.apache.lucene.search.spans.SpanOrQuery$SpanQueue", "org.apache.lucene.search.spans.SpanOrQuery$SpanQueue(org.apache.lucene.search.spans.SpanOrQuery, int)"], ["org.apache.lucene.search.spans.SpanOrQuery", "org.apache.lucene.search.spans.SpanOrQuery(org.apache.lucene.search.spans.SpanQuery...)"], ["org.apache.lucene.search.spans.SpanQuery[]", "org.apache.lucene.search.spans.SpanOrQuery.getClauses()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanOrQuery.getField()"], ["void", "org.apache.lucene.search.spans.SpanOrQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.Object", "org.apache.lucene.search.spans.SpanOrQuery.clone()"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.SpanOrQuery.rewrite(org.apache.lucene.index.IndexReader)"], ["java.lang.String", "org.apache.lucene.search.spans.SpanOrQuery.toString(java.lang.String)"], ["boolean", "org.apache.lucene.search.spans.SpanOrQuery.equals(java.lang.Object)"], ["int", "org.apache.lucene.search.spans.SpanOrQuery.hashCode()"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.SpanOrQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.spans.SpanQuery", "org.apache.lucene.search.spans.SpanQuery()"], ["org.apache.lucene.search.Weight", "org.apache.lucene.search.spans.SpanQuery.createWeight(org.apache.lucene.search.Searcher)"], ["int", "org.apache.lucene.search.spans.SpanScorer.nextDoc()"], ["int", "org.apache.lucene.search.spans.SpanScorer.advance(int)"], ["int", "org.apache.lucene.search.spans.SpanScorer.docID()"], ["float", "org.apache.lucene.search.spans.SpanScorer.score()"], ["org.apache.lucene.search.spans.SpanTermQuery", "org.apache.lucene.search.spans.SpanTermQuery(org.apache.lucene.index.Term)"], ["org.apache.lucene.index.Term", "org.apache.lucene.search.spans.SpanTermQuery.getTerm()"], ["java.lang.String", "org.apache.lucene.search.spans.SpanTermQuery.getField()"], ["void", "org.apache.lucene.search.spans.SpanTermQuery.extractTerms(java.util.Set<org.apache.lucene.index.Term>)"], ["java.lang.String", "org.apache.lucene.search.spans.SpanTermQuery.toString(java.lang.String)"], ["int", "org.apache.lucene.search.spans.SpanTermQuery.hashCode()"], ["boolean", "org.apache.lucene.search.spans.SpanTermQuery.equals(java.lang.Object)"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.SpanTermQuery.getSpans(org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.search.spans.SpanWeight", "org.apache.lucene.search.spans.SpanWeight(org.apache.lucene.search.spans.SpanQuery, org.apache.lucene.search.Searcher)"], ["org.apache.lucene.search.Query", "org.apache.lucene.search.spans.SpanWeight.getQuery()"], ["float", "org.apache.lucene.search.spans.SpanWeight.getValue()"], ["float", "org.apache.lucene.search.spans.SpanWeight.sumOfSquaredWeights()"], ["void", "org.apache.lucene.search.spans.SpanWeight.normalize(float)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.search.spans.SpanWeight.scorer(org.apache.lucene.index.IndexReader, boolean, boolean)"], ["org.apache.lucene.search.Explanation", "org.apache.lucene.search.spans.SpanWeight.explain(org.apache.lucene.index.IndexReader, int)"], ["org.apache.lucene.search.spans.Spans", "org.apache.lucene.search.spans.Spans()"], ["org.apache.lucene.search.spans.TermSpans", "org.apache.lucene.search.spans.TermSpans(org.apache.lucene.index.TermPositions, org.apache.lucene.index.Term)"], ["boolean", "org.apache.lucene.search.spans.TermSpans.next()"], ["boolean", "org.apache.lucene.search.spans.TermSpans.skipTo(int)"], ["int", "org.apache.lucene.search.spans.TermSpans.doc()"], ["int", "org.apache.lucene.search.spans.TermSpans.start()"], ["int", "org.apache.lucene.search.spans.TermSpans.end()"], ["boolean", "org.apache.lucene.search.spans.TermSpans.isPayloadAvailable()"], ["java.lang.String", "org.apache.lucene.search.spans.TermSpans.toString()"], ["org.apache.lucene.index.TermPositions", "org.apache.lucene.search.spans.TermSpans.getPositions()"], ["org.apache.lucene.store.AlreadyClosedException", "org.apache.lucene.store.AlreadyClosedException(java.lang.String)"], ["byte", "org.apache.lucene.store.BufferedIndexInput.readByte()"], ["org.apache.lucene.store.BufferedIndexInput", "org.apache.lucene.store.BufferedIndexInput()"], ["org.apache.lucene.store.BufferedIndexInput", "org.apache.lucene.store.BufferedIndexInput(int)"], ["void", "org.apache.lucene.store.BufferedIndexInput.setBufferSize(int)"], ["int", "org.apache.lucene.store.BufferedIndexInput.getBufferSize()"], ["void", "org.apache.lucene.store.BufferedIndexInput.readBytes(byte[], int, int)"], ["void", "org.apache.lucene.store.BufferedIndexInput.readBytes(byte[], int, int, boolean)"], ["long", "org.apache.lucene.store.BufferedIndexInput.getFilePointer()"], ["void", "org.apache.lucene.store.BufferedIndexInput.seek(long)"], ["java.lang.Object", "org.apache.lucene.store.BufferedIndexInput.clone()"], ["org.apache.lucene.store.BufferedIndexOutput", "org.apache.lucene.store.BufferedIndexOutput()"], ["void", "org.apache.lucene.store.BufferedIndexOutput.writeByte(byte)"], ["void", "org.apache.lucene.store.BufferedIndexOutput.writeBytes(byte[], int, int)"], ["void", "org.apache.lucene.store.BufferedIndexOutput.flush()"], ["void", "org.apache.lucene.store.BufferedIndexOutput.close()"], ["long", "org.apache.lucene.store.BufferedIndexOutput.getFilePointer()"], ["void", "org.apache.lucene.store.BufferedIndexOutput.seek(long)"], ["org.apache.lucene.store.ChecksumIndexInput", "org.apache.lucene.store.ChecksumIndexInput(org.apache.lucene.store.IndexInput)"], ["byte", "org.apache.lucene.store.ChecksumIndexInput.readByte()"], ["void", "org.apache.lucene.store.ChecksumIndexInput.readBytes(byte[], int, int)"], ["long", "org.apache.lucene.store.ChecksumIndexInput.getChecksum()"], ["void", "org.apache.lucene.store.ChecksumIndexInput.close()"], ["long", "org.apache.lucene.store.ChecksumIndexInput.getFilePointer()"], ["void", "org.apache.lucene.store.ChecksumIndexInput.seek(long)"], ["long", "org.apache.lucene.store.ChecksumIndexInput.length()"], ["org.apache.lucene.store.ChecksumIndexOutput", "org.apache.lucene.store.ChecksumIndexOutput(org.apache.lucene.store.IndexOutput)"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.writeByte(byte)"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.writeBytes(byte[], int, int)"], ["long", "org.apache.lucene.store.ChecksumIndexOutput.getChecksum()"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.flush()"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.close()"], ["long", "org.apache.lucene.store.ChecksumIndexOutput.getFilePointer()"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.seek(long)"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.prepareCommit()"], ["void", "org.apache.lucene.store.ChecksumIndexOutput.finishCommit()"], ["long", "org.apache.lucene.store.ChecksumIndexOutput.length()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.store.Directory()"], ["void", "org.apache.lucene.store.Directory.sync(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.Directory.openInput(java.lang.String, int)"], ["org.apache.lucene.store.Lock", "org.apache.lucene.store.Directory.makeLock(java.lang.String)"], ["void", "org.apache.lucene.store.Directory.clearLock(java.lang.String)"], ["void", "org.apache.lucene.store.Directory.setLockFactory(org.apache.lucene.store.LockFactory)"], ["org.apache.lucene.store.LockFactory", "org.apache.lucene.store.Directory.getLockFactory()"], ["java.lang.String", "org.apache.lucene.store.Directory.getLockID()"], ["java.lang.String", "org.apache.lucene.store.Directory.toString()"], ["void", "org.apache.lucene.store.Directory.copy(org.apache.lucene.store.Directory, org.apache.lucene.store.Directory, boolean)"], ["boolean", "org.apache.lucene.store.FSDirectory$1.accept(java.io.File, java.lang.String)"], ["org.apache.lucene.store.FSDirectory", "org.apache.lucene.store.FSDirectory.open(java.io.File)"], ["org.apache.lucene.store.FSDirectory", "org.apache.lucene.store.FSDirectory.open(java.io.File, org.apache.lucene.store.LockFactory)"], ["java.lang.String[]", "org.apache.lucene.store.FSDirectory.listAll(java.io.File)"], ["java.lang.String[]", "org.apache.lucene.store.FSDirectory.listAll()"], ["boolean", "org.apache.lucene.store.FSDirectory.fileExists(java.lang.String)"], ["long", "org.apache.lucene.store.FSDirectory.fileModified(java.lang.String)"], ["long", "org.apache.lucene.store.FSDirectory.fileModified(java.io.File, java.lang.String)"], ["void", "org.apache.lucene.store.FSDirectory.touchFile(java.lang.String)"], ["long", "org.apache.lucene.store.FSDirectory.fileLength(java.lang.String)"], ["void", "org.apache.lucene.store.FSDirectory.deleteFile(java.lang.String)"], ["void", "org.apache.lucene.store.FSDirectory.sync(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.FSDirectory.openInput(java.lang.String)"], ["java.lang.String", "org.apache.lucene.store.FSDirectory.getLockID()"], ["synchronized", "org.apache.lucene.store.FSDirectory.void close()"], ["java.io.File", "org.apache.lucene.store.FSDirectory.getFile()"], ["java.lang.String", "org.apache.lucene.store.FSDirectory.toString()"], ["void", "org.apache.lucene.store.FSDirectory.setReadChunkSize(int)"], ["int", "org.apache.lucene.store.FSDirectory.getReadChunkSize()"], ["org.apache.lucene.store.FSLockFactory", "org.apache.lucene.store.FSLockFactory()"], ["java.io.File", "org.apache.lucene.store.FSLockFactory.getLockDir()"], ["org.apache.lucene.store.FileSwitchDirectory", "org.apache.lucene.store.FileSwitchDirectory(java.util.Set<java.lang.String>, org.apache.lucene.store.Directory, org.apache.lucene.store.Directory, boolean)"], ["org.apache.lucene.store.Directory", "org.apache.lucene.store.FileSwitchDirectory.getPrimaryDir()"], ["org.apache.lucene.store.Directory", "org.apache.lucene.store.FileSwitchDirectory.getSecondaryDir()"], ["void", "org.apache.lucene.store.FileSwitchDirectory.close()"], ["java.lang.String[]", "org.apache.lucene.store.FileSwitchDirectory.listAll()"], ["java.lang.String", "org.apache.lucene.store.FileSwitchDirectory.getExtension(java.lang.String)"], ["boolean", "org.apache.lucene.store.FileSwitchDirectory.fileExists(java.lang.String)"], ["long", "org.apache.lucene.store.FileSwitchDirectory.fileModified(java.lang.String)"], ["void", "org.apache.lucene.store.FileSwitchDirectory.touchFile(java.lang.String)"], ["void", "org.apache.lucene.store.FileSwitchDirectory.deleteFile(java.lang.String)"], ["long", "org.apache.lucene.store.FileSwitchDirectory.fileLength(java.lang.String)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.FileSwitchDirectory.createOutput(java.lang.String)"], ["void", "org.apache.lucene.store.FileSwitchDirectory.sync(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.FileSwitchDirectory.openInput(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.IndexInput()"], ["void", "org.apache.lucene.store.IndexInput.readBytes(byte[], int, int, boolean)"], ["int", "org.apache.lucene.store.IndexInput.readInt()"], ["int", "org.apache.lucene.store.IndexInput.readVInt()"], ["long", "org.apache.lucene.store.IndexInput.readLong()"], ["long", "org.apache.lucene.store.IndexInput.readVLong()"], ["void", "org.apache.lucene.store.IndexInput.setModifiedUTF8StringsMode()"], ["java.lang.String", "org.apache.lucene.store.IndexInput.readString()"], ["void", "org.apache.lucene.store.IndexInput.readChars(char[], int, int)"], ["void", "org.apache.lucene.store.IndexInput.skipChars(int)"], ["java.lang.Object", "org.apache.lucene.store.IndexInput.clone()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.lucene.store.IndexInput.readStringStringMap()"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.IndexOutput()"], ["void", "org.apache.lucene.store.IndexOutput.writeBytes(byte[], int)"], ["void", "org.apache.lucene.store.IndexOutput.writeInt(int)"], ["void", "org.apache.lucene.store.IndexOutput.writeVInt(int)"], ["void", "org.apache.lucene.store.IndexOutput.writeLong(long)"], ["void", "org.apache.lucene.store.IndexOutput.writeVLong(long)"], ["void", "org.apache.lucene.store.IndexOutput.writeString(java.lang.String)"], ["void", "org.apache.lucene.store.IndexOutput.writeChars(java.lang.String, int, int)"], ["void", "org.apache.lucene.store.IndexOutput.writeChars(char[], int, int)"], ["void", "org.apache.lucene.store.IndexOutput.copyBytes(org.apache.lucene.store.IndexInput, long)"], ["void", "org.apache.lucene.store.IndexOutput.setLength(long)"], ["void", "org.apache.lucene.store.IndexOutput.writeStringStringMap(java.util.Map<java.lang.String, java.lang.String>)"], ["org.apache.lucene.store.Lock$With", "org.apache.lucene.store.Lock$With(org.apache.lucene.store.Lock, long)"], ["java.lang.Object", "org.apache.lucene.store.Lock$With.run()"], ["org.apache.lucene.store.Lock", "org.apache.lucene.store.Lock()"], ["boolean", "org.apache.lucene.store.Lock.obtain(long)"], ["org.apache.lucene.store.LockFactory", "org.apache.lucene.store.LockFactory()"], ["void", "org.apache.lucene.store.LockFactory.setLockPrefix(java.lang.String)"], ["java.lang.String", "org.apache.lucene.store.LockFactory.getLockPrefix()"], ["org.apache.lucene.store.LockObtainFailedException", "org.apache.lucene.store.LockObtainFailedException(java.lang.String)"], ["org.apache.lucene.store.LockReleaseFailedException", "org.apache.lucene.store.LockReleaseFailedException(java.lang.String)"], ["org.apache.lucene.store.LockStressTest", "org.apache.lucene.store.LockStressTest()"], ["void", "org.apache.lucene.store.LockStressTest.main(java.lang.String[])"], ["org.apache.lucene.store.LockVerifyServer", "org.apache.lucene.store.LockVerifyServer()"], ["void", "org.apache.lucene.store.LockVerifyServer.main(java.lang.String[])"], ["java.lang.Object", "org.apache.lucene.store.MMapDirectory$1.run()"], ["byte", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.readByte()"], ["void", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.readBytes(byte[], int, int)"], ["long", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.getFilePointer()"], ["void", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.seek(long)"], ["long", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.length()"], ["java.lang.Object", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.clone()"], ["void", "org.apache.lucene.store.MMapDirectory$MMapIndexInput.close()"], ["org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput(org.apache.lucene.store.MMapDirectory, java.io.RandomAccessFile, int)"], ["byte", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.readByte()"], ["void", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.readBytes(byte[], int, int)"], ["long", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.getFilePointer()"], ["void", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.seek(long)"], ["long", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.length()"], ["java.lang.Object", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.clone()"], ["void", "org.apache.lucene.store.MMapDirectory$MultiMMapIndexInput.close()"], ["org.apache.lucene.store.MMapDirectory", "org.apache.lucene.store.MMapDirectory(java.io.File, org.apache.lucene.store.LockFactory)"], ["org.apache.lucene.store.MMapDirectory", "org.apache.lucene.store.MMapDirectory(java.io.File)"], ["void", "org.apache.lucene.store.MMapDirectory.setUseUnmap(boolean)"], ["boolean", "org.apache.lucene.store.MMapDirectory.getUseUnmap()"], ["void", "org.apache.lucene.store.MMapDirectory.setMaxChunkSize(int)"], ["int", "org.apache.lucene.store.MMapDirectory.getMaxChunkSize()"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.MMapDirectory.openInput(java.lang.String, int)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.MMapDirectory.createOutput(java.lang.String)"], ["org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput", "org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput(java.io.File, int, int)"], ["void", "org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.close()"], ["org.apache.lucene.store.NIOFSDirectory", "org.apache.lucene.store.NIOFSDirectory(java.io.File, org.apache.lucene.store.LockFactory)"], ["org.apache.lucene.store.NIOFSDirectory", "org.apache.lucene.store.NIOFSDirectory(java.io.File)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.NIOFSDirectory.openInput(java.lang.String, int)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.NIOFSDirectory.createOutput(java.lang.String)"], ["org.apache.lucene.store.NativeFSLock", "org.apache.lucene.store.NativeFSLock(java.io.File, java.lang.String)"], ["synchronized", "org.apache.lucene.store.NativeFSLock.boolean obtain()"], ["synchronized", "org.apache.lucene.store.NativeFSLock.void release()"], ["synchronized", "org.apache.lucene.store.NativeFSLock.boolean isLocked()"], ["java.lang.String", "org.apache.lucene.store.NativeFSLock.toString()"], ["org.apache.lucene.store.NativeFSLockFactory", "org.apache.lucene.store.NativeFSLockFactory()"], ["org.apache.lucene.store.NativeFSLockFactory", "org.apache.lucene.store.NativeFSLockFactory(java.lang.String)"], ["org.apache.lucene.store.NativeFSLockFactory", "org.apache.lucene.store.NativeFSLockFactory(java.io.File)"], ["synchronized", "org.apache.lucene.store.NativeFSLockFactory.org.apache.lucene.store.Lock makeLock(java.lang.String)"], ["void", "org.apache.lucene.store.NativeFSLockFactory.clearLock(java.lang.String)"], ["boolean", "org.apache.lucene.store.NoLock.obtain()"], ["void", "org.apache.lucene.store.NoLock.release()"], ["boolean", "org.apache.lucene.store.NoLock.isLocked()"], ["java.lang.String", "org.apache.lucene.store.NoLock.toString()"], ["org.apache.lucene.store.NoLockFactory", "org.apache.lucene.store.NoLockFactory()"], ["org.apache.lucene.store.NoLockFactory", "org.apache.lucene.store.NoLockFactory.getNoLockFactory()"], ["org.apache.lucene.store.Lock", "org.apache.lucene.store.NoLockFactory.makeLock(java.lang.String)"], ["void", "org.apache.lucene.store.NoLockFactory.clearLock(java.lang.String)"], ["org.apache.lucene.store.NoSuchDirectoryException", "org.apache.lucene.store.NoSuchDirectoryException(java.lang.String)"], ["org.apache.lucene.store.RAMDirectory", "org.apache.lucene.store.RAMDirectory()"], ["org.apache.lucene.store.RAMDirectory", "org.apache.lucene.store.RAMDirectory(org.apache.lucene.store.Directory)"], ["synchronized", "org.apache.lucene.store.RAMDirectory.java.lang.String[] listAll()"], ["boolean", "org.apache.lucene.store.RAMDirectory.fileExists(java.lang.String)"], ["long", "org.apache.lucene.store.RAMDirectory.fileModified(java.lang.String)"], ["void", "org.apache.lucene.store.RAMDirectory.touchFile(java.lang.String)"], ["long", "org.apache.lucene.store.RAMDirectory.fileLength(java.lang.String)"], ["synchronized", "org.apache.lucene.store.RAMDirectory.long sizeInBytes()"], ["synchronized", "org.apache.lucene.store.RAMDirectory.void deleteFile(java.lang.String)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.RAMDirectory.createOutput(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.RAMDirectory.openInput(java.lang.String)"], ["void", "org.apache.lucene.store.RAMDirectory.close()"], ["synchronized", "org.apache.lucene.store.RAMFile.long getLength()"], ["synchronized", "org.apache.lucene.store.RAMFile.long getLastModified()"], ["synchronized", "org.apache.lucene.store.RAMFile.long getSizeInBytes()"], ["void", "org.apache.lucene.store.RAMInputStream.close()"], ["long", "org.apache.lucene.store.RAMInputStream.length()"], ["byte", "org.apache.lucene.store.RAMInputStream.readByte()"], ["void", "org.apache.lucene.store.RAMInputStream.readBytes(byte[], int, int)"], ["long", "org.apache.lucene.store.RAMInputStream.getFilePointer()"], ["void", "org.apache.lucene.store.RAMInputStream.seek(long)"], ["org.apache.lucene.store.RAMOutputStream", "org.apache.lucene.store.RAMOutputStream()"], ["org.apache.lucene.store.RAMOutputStream", "org.apache.lucene.store.RAMOutputStream(org.apache.lucene.store.RAMFile)"], ["void", "org.apache.lucene.store.RAMOutputStream.writeTo(org.apache.lucene.store.IndexOutput)"], ["void", "org.apache.lucene.store.RAMOutputStream.reset()"], ["void", "org.apache.lucene.store.RAMOutputStream.close()"], ["void", "org.apache.lucene.store.RAMOutputStream.seek(long)"], ["long", "org.apache.lucene.store.RAMOutputStream.length()"], ["void", "org.apache.lucene.store.RAMOutputStream.writeByte(byte)"], ["void", "org.apache.lucene.store.RAMOutputStream.writeBytes(byte[], int, int)"], ["void", "org.apache.lucene.store.RAMOutputStream.flush()"], ["long", "org.apache.lucene.store.RAMOutputStream.getFilePointer()"], ["long", "org.apache.lucene.store.RAMOutputStream.sizeInBytes()"], ["org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor(java.io.File, java.lang.String)"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.close()"], ["org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput(java.io.File, int, int)"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.close()"], ["long", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.length()"], ["java.lang.Object", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.clone()"], ["org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput(java.io.File)"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput.flushBuffer(byte[], int, int)"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput.close()"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput.seek(long)"], ["long", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput.length()"], ["void", "org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexOutput.setLength(long)"], ["org.apache.lucene.store.SimpleFSDirectory", "org.apache.lucene.store.SimpleFSDirectory(java.io.File, org.apache.lucene.store.LockFactory)"], ["org.apache.lucene.store.SimpleFSDirectory", "org.apache.lucene.store.SimpleFSDirectory(java.io.File)"], ["org.apache.lucene.store.IndexOutput", "org.apache.lucene.store.SimpleFSDirectory.createOutput(java.lang.String)"], ["org.apache.lucene.store.IndexInput", "org.apache.lucene.store.SimpleFSDirectory.openInput(java.lang.String, int)"], ["org.apache.lucene.store.SimpleFSLock", "org.apache.lucene.store.SimpleFSLock(java.io.File, java.lang.String)"], ["boolean", "org.apache.lucene.store.SimpleFSLock.obtain()"], ["void", "org.apache.lucene.store.SimpleFSLock.release()"], ["boolean", "org.apache.lucene.store.SimpleFSLock.isLocked()"], ["java.lang.String", "org.apache.lucene.store.SimpleFSLock.toString()"], ["org.apache.lucene.store.SimpleFSLockFactory", "org.apache.lucene.store.SimpleFSLockFactory()"], ["org.apache.lucene.store.SimpleFSLockFactory", "org.apache.lucene.store.SimpleFSLockFactory(java.io.File)"], ["org.apache.lucene.store.SimpleFSLockFactory", "org.apache.lucene.store.SimpleFSLockFactory(java.lang.String)"], ["org.apache.lucene.store.Lock", "org.apache.lucene.store.SimpleFSLockFactory.makeLock(java.lang.String)"], ["void", "org.apache.lucene.store.SimpleFSLockFactory.clearLock(java.lang.String)"], ["org.apache.lucene.store.SingleInstanceLock", "org.apache.lucene.store.SingleInstanceLock(java.util.HashSet<java.lang.String>, java.lang.String)"], ["boolean", "org.apache.lucene.store.SingleInstanceLock.obtain()"], ["void", "org.apache.lucene.store.SingleInstanceLock.release()"], ["boolean", "org.apache.lucene.store.SingleInstanceLock.isLocked()"], ["java.lang.String", "org.apache.lucene.store.SingleInstanceLock.toString()"], ["org.apache.lucene.store.SingleInstanceLockFactory", "org.apache.lucene.store.SingleInstanceLockFactory()"], ["org.apache.lucene.store.Lock", "org.apache.lucene.store.SingleInstanceLockFactory.makeLock(java.lang.String)"], ["void", "org.apache.lucene.store.SingleInstanceLockFactory.clearLock(java.lang.String)"], ["org.apache.lucene.store.VerifyingLockFactory$CheckedLock", "org.apache.lucene.store.VerifyingLockFactory$CheckedLock(org.apache.lucene.store.VerifyingLockFactory, org.apache.lucene.store.Lock)"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory$CheckedLock.boolean obtain(long)"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory$CheckedLock.boolean obtain()"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory$CheckedLock.boolean isLocked()"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory$CheckedLock.void release()"], ["org.apache.lucene.store.VerifyingLockFactory", "org.apache.lucene.store.VerifyingLockFactory(byte, org.apache.lucene.store.LockFactory, java.lang.String, int)"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory.org.apache.lucene.store.Lock makeLock(java.lang.String)"], ["synchronized", "org.apache.lucene.store.VerifyingLockFactory.void clearLock(java.lang.String)"], ["org.apache.lucene.util.ArrayUtil", "org.apache.lucene.util.ArrayUtil()"], ["int", "org.apache.lucene.util.ArrayUtil.parseInt(char[])"], ["int", "org.apache.lucene.util.ArrayUtil.parseInt(char[], int, int)"], ["int", "org.apache.lucene.util.ArrayUtil.parseInt(char[], int, int, int)"], ["int", "org.apache.lucene.util.ArrayUtil.getNextSize(int)"], ["int", "org.apache.lucene.util.ArrayUtil.getShrinkSize(int, int)"], ["int[]", "org.apache.lucene.util.ArrayUtil.grow(int[], int)"], ["int[]", "org.apache.lucene.util.ArrayUtil.grow(int[])"], ["int[]", "org.apache.lucene.util.ArrayUtil.shrink(int[], int)"], ["long[]", "org.apache.lucene.util.ArrayUtil.grow(long[], int)"], ["long[]", "org.apache.lucene.util.ArrayUtil.grow(long[])"], ["long[]", "org.apache.lucene.util.ArrayUtil.shrink(long[], int)"], ["byte[]", "org.apache.lucene.util.ArrayUtil.grow(byte[], int)"], ["byte[]", "org.apache.lucene.util.ArrayUtil.grow(byte[])"], ["byte[]", "org.apache.lucene.util.ArrayUtil.shrink(byte[], int)"], ["int", "org.apache.lucene.util.ArrayUtil.hashCode(char[], int, int)"], ["int", "org.apache.lucene.util.ArrayUtil.hashCode(byte[], int, int)"], ["org.apache.lucene.util.AttributeImpl", "org.apache.lucene.util.AttributeImpl()"], ["java.lang.String", "org.apache.lucene.util.AttributeImpl.toString()"], ["java.lang.Object", "org.apache.lucene.util.AttributeImpl.clone()"], ["void", "org.apache.lucene.util.AttributeSource$1.remove()"], ["org.apache.lucene.util.AttributeImpl", "org.apache.lucene.util.AttributeSource$1.next()"], ["boolean", "org.apache.lucene.util.AttributeSource$1.hasNext()"], ["java.lang.Object", "org.apache.lucene.util.AttributeSource$1.next()"], ["org.apache.lucene.util.AttributeImpl", "org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory.createAttributeInstance(java.lang.Class<? extends org.apache.lucene.util.Attribute>)"], ["org.apache.lucene.util.AttributeSource$AttributeFactory", "org.apache.lucene.util.AttributeSource$AttributeFactory()"], ["org.apache.lucene.util.AttributeSource$State", "org.apache.lucene.util.AttributeSource$State()"], ["java.lang.Object", "org.apache.lucene.util.AttributeSource$State.clone()"], ["org.apache.lucene.util.AttributeSource", "org.apache.lucene.util.AttributeSource()"], ["org.apache.lucene.util.AttributeSource", "org.apache.lucene.util.AttributeSource(org.apache.lucene.util.AttributeSource)"], ["org.apache.lucene.util.AttributeSource", "org.apache.lucene.util.AttributeSource(org.apache.lucene.util.AttributeSource$AttributeFactory)"], ["org.apache.lucene.util.AttributeSource$AttributeFactory", "org.apache.lucene.util.AttributeSource.getAttributeFactory()"], ["java.util.Iterator<java.lang.Class<? extends org.apache.lucene.util.Attribute>>", "org.apache.lucene.util.AttributeSource.getAttributeClassesIterator()"], ["void", "org.apache.lucene.util.AttributeSource.addAttributeImpl(org.apache.lucene.util.AttributeImpl)"], ["<A extends org.apache.lucene.util.Attribute> A", "org.apache.lucene.util.AttributeSource.addAttribute(java.lang.Class<A>)"], ["boolean", "org.apache.lucene.util.AttributeSource.hasAttributes()"], ["boolean", "org.apache.lucene.util.AttributeSource.hasAttribute(java.lang.Class<? extends org.apache.lucene.util.Attribute>)"], ["<A extends org.apache.lucene.util.Attribute> A", "org.apache.lucene.util.AttributeSource.getAttribute(java.lang.Class<A>)"], ["void", "org.apache.lucene.util.AttributeSource.clearAttributes()"], ["org.apache.lucene.util.AttributeSource$State", "org.apache.lucene.util.AttributeSource.captureState()"], ["void", "org.apache.lucene.util.AttributeSource.restoreState(org.apache.lucene.util.AttributeSource$State)"], ["int", "org.apache.lucene.util.AttributeSource.hashCode()"], ["boolean", "org.apache.lucene.util.AttributeSource.equals(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.util.AttributeSource.toString()"], ["org.apache.lucene.util.AttributeSource", "org.apache.lucene.util.AttributeSource.cloneAttributes()"], ["org.apache.lucene.util.AverageGuessMemoryModel", "org.apache.lucene.util.AverageGuessMemoryModel()"], ["int", "org.apache.lucene.util.AverageGuessMemoryModel.getArraySize()"], ["int", "org.apache.lucene.util.AverageGuessMemoryModel.getClassSize()"], ["int", "org.apache.lucene.util.AverageGuessMemoryModel.getPrimitiveSize(java.lang.Class)"], ["int", "org.apache.lucene.util.AverageGuessMemoryModel.getReferenceSize()"], ["org.apache.lucene.util.BitUtil", "org.apache.lucene.util.BitUtil()"], ["int", "org.apache.lucene.util.BitUtil.pop(long)"], ["long", "org.apache.lucene.util.BitUtil.pop_array(long[], int, int)"], ["long", "org.apache.lucene.util.BitUtil.pop_intersect(long[], long[], int, int)"], ["long", "org.apache.lucene.util.BitUtil.pop_union(long[], long[], int, int)"], ["long", "org.apache.lucene.util.BitUtil.pop_andnot(long[], long[], int, int)"], ["long", "org.apache.lucene.util.BitUtil.pop_xor(long[], long[], int, int)"], ["int", "org.apache.lucene.util.BitUtil.ntz(long)"], ["int", "org.apache.lucene.util.BitUtil.ntz(int)"], ["int", "org.apache.lucene.util.BitUtil.ntz2(long)"], ["int", "org.apache.lucene.util.BitUtil.ntz3(long)"], ["boolean", "org.apache.lucene.util.BitUtil.isPowerOfTwo(int)"], ["boolean", "org.apache.lucene.util.BitUtil.isPowerOfTwo(long)"], ["int", "org.apache.lucene.util.BitUtil.nextHighestPowerOfTwo(int)"], ["long", "org.apache.lucene.util.BitUtil.nextHighestPowerOfTwo(long)"], ["org.apache.lucene.util.BitVector", "org.apache.lucene.util.BitVector(int)"], ["java.lang.Object", "org.apache.lucene.util.BitVector.clone()"], ["void", "org.apache.lucene.util.BitVector.set(int)"], ["boolean", "org.apache.lucene.util.BitVector.getAndSet(int)"], ["void", "org.apache.lucene.util.BitVector.clear(int)"], ["boolean", "org.apache.lucene.util.BitVector.get(int)"], ["int", "org.apache.lucene.util.BitVector.size()"], ["int", "org.apache.lucene.util.BitVector.count()"], ["int", "org.apache.lucene.util.BitVector.getRecomputedCount()"], ["void", "org.apache.lucene.util.BitVector.write(org.apache.lucene.store.Directory, java.lang.String)"], ["org.apache.lucene.util.BitVector", "org.apache.lucene.util.BitVector(org.apache.lucene.store.Directory, java.lang.String)"], ["org.apache.lucene.util.BitVector", "org.apache.lucene.util.BitVector.subset(int, int)"], ["org.apache.lucene.util.CloseableThreadLocal", "org.apache.lucene.util.CloseableThreadLocal()"], ["T", "org.apache.lucene.util.CloseableThreadLocal.get()"], ["void", "org.apache.lucene.util.CloseableThreadLocal.set(T)"], ["void", "org.apache.lucene.util.CloseableThreadLocal.close()"], ["int", "org.apache.lucene.util.DocIdBitSet$DocIdBitSetIterator.docID()"], ["int", "org.apache.lucene.util.DocIdBitSet$DocIdBitSetIterator.nextDoc()"], ["int", "org.apache.lucene.util.DocIdBitSet$DocIdBitSetIterator.advance(int)"], ["org.apache.lucene.util.DocIdBitSet", "org.apache.lucene.util.DocIdBitSet(java.util.BitSet)"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.util.DocIdBitSet.iterator()"], ["boolean", "org.apache.lucene.util.DocIdBitSet.isCacheable()"], ["java.util.BitSet", "org.apache.lucene.util.DocIdBitSet.getBitSet()"], ["org.apache.lucene.util.DummyConcurrentLock", "org.apache.lucene.util.DummyConcurrentLock()"], ["void", "org.apache.lucene.util.DummyConcurrentLock.lock()"], ["void", "org.apache.lucene.util.DummyConcurrentLock.lockInterruptibly()"], ["boolean", "org.apache.lucene.util.DummyConcurrentLock.tryLock()"], ["boolean", "org.apache.lucene.util.DummyConcurrentLock.tryLock(long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.lucene.util.DummyConcurrentLock.unlock()"], ["java.util.concurrent.locks.Condition", "org.apache.lucene.util.DummyConcurrentLock.newCondition()"], ["org.apache.lucene.util.FieldCacheSanityChecker$Insanity", "org.apache.lucene.util.FieldCacheSanityChecker$Insanity(org.apache.lucene.util.FieldCacheSanityChecker$InsanityType, java.lang.String, org.apache.lucene.search.FieldCache$CacheEntry...)"], ["org.apache.lucene.util.FieldCacheSanityChecker$InsanityType", "org.apache.lucene.util.FieldCacheSanityChecker$Insanity.getType()"], ["java.lang.String", "org.apache.lucene.util.FieldCacheSanityChecker$Insanity.getMsg()"], ["org.apache.lucene.search.FieldCache$CacheEntry[]", "org.apache.lucene.util.FieldCacheSanityChecker$Insanity.getCacheEntries()"], ["java.lang.String", "org.apache.lucene.util.FieldCacheSanityChecker$Insanity.toString()"], ["java.lang.String", "org.apache.lucene.util.FieldCacheSanityChecker$InsanityType.toString()"], ["org.apache.lucene.util.FieldCacheSanityChecker$ReaderField", "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField(java.lang.Object, java.lang.String)"], ["int", "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.hashCode()"], ["boolean", "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.equals(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.util.FieldCacheSanityChecker$ReaderField.toString()"], ["org.apache.lucene.util.FieldCacheSanityChecker", "org.apache.lucene.util.FieldCacheSanityChecker()"], ["void", "org.apache.lucene.util.FieldCacheSanityChecker.setRamUsageEstimator(org.apache.lucene.util.RamUsageEstimator)"], ["org.apache.lucene.util.FieldCacheSanityChecker$Insanity[]", "org.apache.lucene.util.FieldCacheSanityChecker.checkSanity(org.apache.lucene.search.FieldCache)"], ["org.apache.lucene.util.FieldCacheSanityChecker$Insanity[]", "org.apache.lucene.util.FieldCacheSanityChecker.checkSanity(org.apache.lucene.search.FieldCache$CacheEntry...)"], ["org.apache.lucene.util.FieldCacheSanityChecker$Insanity[]", "org.apache.lucene.util.FieldCacheSanityChecker.check(org.apache.lucene.search.FieldCache$CacheEntry...)"], ["int", "org.apache.lucene.util.IndexableBinaryStringTools.getEncodedLength(java.nio.ByteBuffer)"], ["int", "org.apache.lucene.util.IndexableBinaryStringTools.getDecodedLength(java.nio.CharBuffer)"], ["void", "org.apache.lucene.util.IndexableBinaryStringTools.encode(java.nio.ByteBuffer, java.nio.CharBuffer)"], ["void", "org.apache.lucene.util.IndexableBinaryStringTools.decode(java.nio.CharBuffer, java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.lucene.util.IndexableBinaryStringTools.decode(java.nio.CharBuffer)"], ["java.nio.CharBuffer", "org.apache.lucene.util.IndexableBinaryStringTools.encode(java.nio.ByteBuffer)"], ["org.apache.lucene.util.MapOfSets", "org.apache.lucene.util.MapOfSets(java.util.Map<K, java.util.Set<V>>)"], ["java.util.Map<K, java.util.Set<V>>", "org.apache.lucene.util.MapOfSets.getMap()"], ["int", "org.apache.lucene.util.MapOfSets.put(K, V)"], ["int", "org.apache.lucene.util.MapOfSets.putAll(K, java.util.Collection<? extends V>)"], ["org.apache.lucene.util.MemoryModel", "org.apache.lucene.util.MemoryModel()"], ["org.apache.lucene.util.NamedThreadFactory", "org.apache.lucene.util.NamedThreadFactory(java.lang.String)"], ["java.lang.Thread", "org.apache.lucene.util.NamedThreadFactory.newThread(java.lang.Runnable)"], ["org.apache.lucene.util.NumericUtils$IntRangeBuilder", "org.apache.lucene.util.NumericUtils$IntRangeBuilder()"], ["void", "org.apache.lucene.util.NumericUtils$IntRangeBuilder.addRange(java.lang.String, java.lang.String)"], ["void", "org.apache.lucene.util.NumericUtils$IntRangeBuilder.addRange(int, int, int)"], ["org.apache.lucene.util.NumericUtils$LongRangeBuilder", "org.apache.lucene.util.NumericUtils$LongRangeBuilder()"], ["void", "org.apache.lucene.util.NumericUtils$LongRangeBuilder.addRange(java.lang.String, java.lang.String)"], ["void", "org.apache.lucene.util.NumericUtils$LongRangeBuilder.addRange(long, long, int)"], ["int", "org.apache.lucene.util.NumericUtils.longToPrefixCoded(long, int, char[])"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.longToPrefixCoded(long, int)"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.longToPrefixCoded(long)"], ["int", "org.apache.lucene.util.NumericUtils.intToPrefixCoded(int, int, char[])"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.intToPrefixCoded(int, int)"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.intToPrefixCoded(int)"], ["long", "org.apache.lucene.util.NumericUtils.prefixCodedToLong(java.lang.String)"], ["int", "org.apache.lucene.util.NumericUtils.prefixCodedToInt(java.lang.String)"], ["long", "org.apache.lucene.util.NumericUtils.doubleToSortableLong(double)"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.doubleToPrefixCoded(double)"], ["double", "org.apache.lucene.util.NumericUtils.sortableLongToDouble(long)"], ["double", "org.apache.lucene.util.NumericUtils.prefixCodedToDouble(java.lang.String)"], ["int", "org.apache.lucene.util.NumericUtils.floatToSortableInt(float)"], ["java.lang.String", "org.apache.lucene.util.NumericUtils.floatToPrefixCoded(float)"], ["float", "org.apache.lucene.util.NumericUtils.sortableIntToFloat(int)"], ["float", "org.apache.lucene.util.NumericUtils.prefixCodedToFloat(java.lang.String)"], ["void", "org.apache.lucene.util.NumericUtils.splitLongRange(org.apache.lucene.util.NumericUtils$LongRangeBuilder, int, long, long)"], ["void", "org.apache.lucene.util.NumericUtils.splitIntRange(org.apache.lucene.util.NumericUtils$IntRangeBuilder, int, int, int)"], ["org.apache.lucene.util.OpenBitSet", "org.apache.lucene.util.OpenBitSet(long)"], ["org.apache.lucene.util.OpenBitSet", "org.apache.lucene.util.OpenBitSet()"], ["org.apache.lucene.util.OpenBitSet", "org.apache.lucene.util.OpenBitSet(long[], int)"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.util.OpenBitSet.iterator()"], ["boolean", "org.apache.lucene.util.OpenBitSet.isCacheable()"], ["long", "org.apache.lucene.util.OpenBitSet.capacity()"], ["long", "org.apache.lucene.util.OpenBitSet.size()"], ["boolean", "org.apache.lucene.util.OpenBitSet.isEmpty()"], ["long[]", "org.apache.lucene.util.OpenBitSet.getBits()"], ["void", "org.apache.lucene.util.OpenBitSet.setBits(long[])"], ["int", "org.apache.lucene.util.OpenBitSet.getNumWords()"], ["void", "org.apache.lucene.util.OpenBitSet.setNumWords(int)"], ["boolean", "org.apache.lucene.util.OpenBitSet.get(int)"], ["boolean", "org.apache.lucene.util.OpenBitSet.fastGet(int)"], ["boolean", "org.apache.lucene.util.OpenBitSet.get(long)"], ["boolean", "org.apache.lucene.util.OpenBitSet.fastGet(long)"], ["int", "org.apache.lucene.util.OpenBitSet.getBit(int)"], ["void", "org.apache.lucene.util.OpenBitSet.set(long)"], ["void", "org.apache.lucene.util.OpenBitSet.fastSet(int)"], ["void", "org.apache.lucene.util.OpenBitSet.fastSet(long)"], ["void", "org.apache.lucene.util.OpenBitSet.set(long, long)"], ["void", "org.apache.lucene.util.OpenBitSet.fastClear(int)"], ["void", "org.apache.lucene.util.OpenBitSet.fastClear(long)"], ["void", "org.apache.lucene.util.OpenBitSet.clear(long)"], ["void", "org.apache.lucene.util.OpenBitSet.clear(int, int)"], ["void", "org.apache.lucene.util.OpenBitSet.clear(long, long)"], ["boolean", "org.apache.lucene.util.OpenBitSet.getAndSet(int)"], ["boolean", "org.apache.lucene.util.OpenBitSet.getAndSet(long)"], ["void", "org.apache.lucene.util.OpenBitSet.fastFlip(int)"], ["void", "org.apache.lucene.util.OpenBitSet.fastFlip(long)"], ["void", "org.apache.lucene.util.OpenBitSet.flip(long)"], ["boolean", "org.apache.lucene.util.OpenBitSet.flipAndGet(int)"], ["boolean", "org.apache.lucene.util.OpenBitSet.flipAndGet(long)"], ["void", "org.apache.lucene.util.OpenBitSet.flip(long, long)"], ["long", "org.apache.lucene.util.OpenBitSet.cardinality()"], ["long", "org.apache.lucene.util.OpenBitSet.intersectionCount(org.apache.lucene.util.OpenBitSet, org.apache.lucene.util.OpenBitSet)"], ["long", "org.apache.lucene.util.OpenBitSet.unionCount(org.apache.lucene.util.OpenBitSet, org.apache.lucene.util.OpenBitSet)"], ["long", "org.apache.lucene.util.OpenBitSet.andNotCount(org.apache.lucene.util.OpenBitSet, org.apache.lucene.util.OpenBitSet)"], ["long", "org.apache.lucene.util.OpenBitSet.xorCount(org.apache.lucene.util.OpenBitSet, org.apache.lucene.util.OpenBitSet)"], ["int", "org.apache.lucene.util.OpenBitSet.nextSetBit(int)"], ["long", "org.apache.lucene.util.OpenBitSet.nextSetBit(long)"], ["java.lang.Object", "org.apache.lucene.util.OpenBitSet.clone()"], ["void", "org.apache.lucene.util.OpenBitSet.intersect(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.union(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.remove(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.xor(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.and(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.or(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.andNot(org.apache.lucene.util.OpenBitSet)"], ["boolean", "org.apache.lucene.util.OpenBitSet.intersects(org.apache.lucene.util.OpenBitSet)"], ["void", "org.apache.lucene.util.OpenBitSet.ensureCapacityWords(int)"], ["void", "org.apache.lucene.util.OpenBitSet.ensureCapacity(long)"], ["void", "org.apache.lucene.util.OpenBitSet.trimTrailingZeros()"], ["int", "org.apache.lucene.util.OpenBitSet.bits2words(long)"], ["boolean", "org.apache.lucene.util.OpenBitSet.equals(java.lang.Object)"], ["int", "org.apache.lucene.util.OpenBitSet.hashCode()"], ["org.apache.lucene.util.OpenBitSetDISI", "org.apache.lucene.util.OpenBitSetDISI(org.apache.lucene.search.DocIdSetIterator, int)"], ["org.apache.lucene.util.OpenBitSetDISI", "org.apache.lucene.util.OpenBitSetDISI(int)"], ["void", "org.apache.lucene.util.OpenBitSetDISI.inPlaceOr(org.apache.lucene.search.DocIdSetIterator)"], ["void", "org.apache.lucene.util.OpenBitSetDISI.inPlaceAnd(org.apache.lucene.search.DocIdSetIterator)"], ["void", "org.apache.lucene.util.OpenBitSetDISI.inPlaceNot(org.apache.lucene.search.DocIdSetIterator)"], ["void", "org.apache.lucene.util.OpenBitSetDISI.inPlaceXor(org.apache.lucene.search.DocIdSetIterator)"], ["org.apache.lucene.util.OpenBitSetIterator", "org.apache.lucene.util.OpenBitSetIterator(org.apache.lucene.util.OpenBitSet)"], ["org.apache.lucene.util.OpenBitSetIterator", "org.apache.lucene.util.OpenBitSetIterator(long[], int)"], ["int", "org.apache.lucene.util.OpenBitSetIterator.nextDoc()"], ["int", "org.apache.lucene.util.OpenBitSetIterator.advance(int)"], ["int", "org.apache.lucene.util.OpenBitSetIterator.docID()"], ["java.lang.String", "org.apache.lucene.util.Parameter.toString()"], ["org.apache.lucene.util.PriorityQueue", "org.apache.lucene.util.PriorityQueue()"], ["T", "org.apache.lucene.util.PriorityQueue.add(T)"], ["T", "org.apache.lucene.util.PriorityQueue.insertWithOverflow(T)"], ["T", "org.apache.lucene.util.PriorityQueue.top()"], ["T", "org.apache.lucene.util.PriorityQueue.pop()"], ["T", "org.apache.lucene.util.PriorityQueue.updateTop()"], ["int", "org.apache.lucene.util.PriorityQueue.size()"], ["void", "org.apache.lucene.util.PriorityQueue.clear()"], ["org.apache.lucene.util.RamUsageEstimator", "org.apache.lucene.util.RamUsageEstimator()"], ["org.apache.lucene.util.RamUsageEstimator", "org.apache.lucene.util.RamUsageEstimator(boolean)"], ["org.apache.lucene.util.RamUsageEstimator", "org.apache.lucene.util.RamUsageEstimator(org.apache.lucene.util.MemoryModel)"], ["org.apache.lucene.util.RamUsageEstimator", "org.apache.lucene.util.RamUsageEstimator(org.apache.lucene.util.MemoryModel, boolean)"], ["long", "org.apache.lucene.util.RamUsageEstimator.estimateRamUsage(java.lang.Object)"], ["java.lang.String", "org.apache.lucene.util.RamUsageEstimator.humanReadableUnits(long, java.text.DecimalFormat)"], ["org.apache.lucene.util.ReaderUtil", "org.apache.lucene.util.ReaderUtil()"], ["void", "org.apache.lucene.util.ReaderUtil.gatherSubReaders(java.util.List<org.apache.lucene.index.IndexReader>, org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.util.ReaderUtil.subReader(int, org.apache.lucene.index.IndexReader)"], ["org.apache.lucene.index.IndexReader", "org.apache.lucene.util.ReaderUtil.subReader(org.apache.lucene.index.IndexReader, int)"], ["int", "org.apache.lucene.util.ReaderUtil.subIndex(int, int[])"], ["org.apache.lucene.util.ScorerDocQueue", "org.apache.lucene.util.ScorerDocQueue(int)"], ["void", "org.apache.lucene.util.ScorerDocQueue.put(org.apache.lucene.search.Scorer)"], ["boolean", "org.apache.lucene.util.ScorerDocQueue.insert(org.apache.lucene.search.Scorer)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.util.ScorerDocQueue.top()"], ["int", "org.apache.lucene.util.ScorerDocQueue.topDoc()"], ["float", "org.apache.lucene.util.ScorerDocQueue.topScore()"], ["boolean", "org.apache.lucene.util.ScorerDocQueue.topNextAndAdjustElsePop()"], ["boolean", "org.apache.lucene.util.ScorerDocQueue.topSkipToAndAdjustElsePop(int)"], ["org.apache.lucene.search.Scorer", "org.apache.lucene.util.ScorerDocQueue.pop()"], ["void", "org.apache.lucene.util.ScorerDocQueue.adjustTop()"], ["int", "org.apache.lucene.util.ScorerDocQueue.size()"], ["void", "org.apache.lucene.util.ScorerDocQueue.clear()"], ["org.apache.lucene.util.SimpleStringInterner", "org.apache.lucene.util.SimpleStringInterner(int, int)"], ["java.lang.String", "org.apache.lucene.util.SimpleStringInterner.intern(java.lang.String)"], ["org.apache.lucene.util.SmallFloat", "org.apache.lucene.util.SmallFloat()"], ["byte", "org.apache.lucene.util.SmallFloat.floatToByte(float, int, int)"], ["float", "org.apache.lucene.util.SmallFloat.byteToFloat(byte, int, int)"], ["byte", "org.apache.lucene.util.SmallFloat.floatToByte315(float)"], ["float", "org.apache.lucene.util.SmallFloat.byte315ToFloat(byte)"], ["byte", "org.apache.lucene.util.SmallFloat.floatToByte52(float)"], ["float", "org.apache.lucene.util.SmallFloat.byte52ToFloat(byte)"], ["int", "org.apache.lucene.util.SortedVIntList$1.docID()"], ["int", "org.apache.lucene.util.SortedVIntList$1.nextDoc()"], ["int", "org.apache.lucene.util.SortedVIntList$1.advance(int)"], ["org.apache.lucene.util.SortedVIntList", "org.apache.lucene.util.SortedVIntList(int...)"], ["org.apache.lucene.util.SortedVIntList", "org.apache.lucene.util.SortedVIntList(int[], int)"], ["org.apache.lucene.util.SortedVIntList", "org.apache.lucene.util.SortedVIntList(java.util.BitSet)"], ["org.apache.lucene.util.SortedVIntList", "org.apache.lucene.util.SortedVIntList(org.apache.lucene.util.OpenBitSet)"], ["org.apache.lucene.util.SortedVIntList", "org.apache.lucene.util.SortedVIntList(org.apache.lucene.search.DocIdSetIterator)"], ["int", "org.apache.lucene.util.SortedVIntList.size()"], ["int", "org.apache.lucene.util.SortedVIntList.getByteSize()"], ["boolean", "org.apache.lucene.util.SortedVIntList.isCacheable()"], ["org.apache.lucene.search.DocIdSetIterator", "org.apache.lucene.util.SortedVIntList.iterator()"], ["org.apache.lucene.util.SorterTemplate", "org.apache.lucene.util.SorterTemplate()"], ["void", "org.apache.lucene.util.SorterTemplate.quickSort(int, int)"], ["java.lang.String", "org.apache.lucene.util.StringHelper.intern(java.lang.String)"], ["int", "org.apache.lucene.util.StringHelper.bytesDifference(byte[], int, byte[], int)"], ["int", "org.apache.lucene.util.StringHelper.stringDifference(java.lang.String, java.lang.String)"], ["org.apache.lucene.util.StringInterner", "org.apache.lucene.util.StringInterner()"], ["java.lang.String", "org.apache.lucene.util.StringInterner.intern(java.lang.String)"], ["java.lang.String", "org.apache.lucene.util.StringInterner.intern(char[], int, int)"], ["org.apache.lucene.util.ThreadInterruptedException", "org.apache.lucene.util.ThreadInterruptedException(java.lang.InterruptedException)"], ["org.apache.lucene.util.ToStringUtils", "org.apache.lucene.util.ToStringUtils()"], ["java.lang.String", "org.apache.lucene.util.ToStringUtils.boost(float)"], ["org.apache.lucene.util.UnicodeUtil$UTF16Result", "org.apache.lucene.util.UnicodeUtil$UTF16Result()"], ["void", "org.apache.lucene.util.UnicodeUtil$UTF16Result.setLength(int)"], ["void", "org.apache.lucene.util.UnicodeUtil$UTF16Result.copyText(org.apache.lucene.util.UnicodeUtil$UTF16Result)"], ["org.apache.lucene.util.UnicodeUtil$UTF8Result", "org.apache.lucene.util.UnicodeUtil$UTF8Result()"], ["void", "org.apache.lucene.util.UnicodeUtil$UTF8Result.setLength(int)"], ["org.apache.lucene.util.UnicodeUtil", "org.apache.lucene.util.UnicodeUtil()"], ["void", "org.apache.lucene.util.UnicodeUtil.UTF16toUTF8(char[], int, org.apache.lucene.util.UnicodeUtil$UTF8Result)"], ["void", "org.apache.lucene.util.UnicodeUtil.UTF16toUTF8(char[], int, int, org.apache.lucene.util.UnicodeUtil$UTF8Result)"], ["void", "org.apache.lucene.util.UnicodeUtil.UTF16toUTF8(java.lang.String, int, int, org.apache.lucene.util.UnicodeUtil$UTF8Result)"], ["void", "org.apache.lucene.util.UnicodeUtil.UTF8toUTF16(byte[], int, int, org.apache.lucene.util.UnicodeUtil$UTF16Result)"], ["org.apache.lucene.util.Version[]", "org.apache.lucene.util.Version.values()"], ["org.apache.lucene.util.Version", "org.apache.lucene.util.Version.valueOf(java.lang.String)"], ["boolean", "org.apache.lucene.util.Version.onOrAfter(org.apache.lucene.util.Version)"], ["void", "org.apache.lucene.util.cache.Cache$SynchronizedCache.put(K, V)"], ["V", "org.apache.lucene.util.cache.Cache$SynchronizedCache.get(java.lang.Object)"], ["boolean", "org.apache.lucene.util.cache.Cache$SynchronizedCache.containsKey(java.lang.Object)"], ["void", "org.apache.lucene.util.cache.Cache$SynchronizedCache.close()"], ["org.apache.lucene.util.cache.Cache", "org.apache.lucene.util.cache.Cache()"], ["<K, V> org.apache.lucene.util.cache.Cache<K, V>", "org.apache.lucene.util.cache.Cache.synchronizedCache(org.apache.lucene.util.cache.Cache<K, V>)"], ["org.apache.lucene.util.cache.SimpleLRUCache", "org.apache.lucene.util.cache.SimpleLRUCache(int)"], ["void", "org.apache.lucene.util.cache.SimpleMapCache$SynchronizedSimpleMapCache.put(K, V)"], ["V", "org.apache.lucene.util.cache.SimpleMapCache$SynchronizedSimpleMapCache.get(java.lang.Object)"], ["boolean", "org.apache.lucene.util.cache.SimpleMapCache$SynchronizedSimpleMapCache.containsKey(java.lang.Object)"], ["void", "org.apache.lucene.util.cache.SimpleMapCache$SynchronizedSimpleMapCache.close()"], ["org.apache.lucene.util.cache.SimpleMapCache", "org.apache.lucene.util.cache.SimpleMapCache()"], ["org.apache.lucene.util.cache.SimpleMapCache", "org.apache.lucene.util.cache.SimpleMapCache(java.util.Map<K, V>)"], ["V", "org.apache.lucene.util.cache.SimpleMapCache.get(java.lang.Object)"], ["void", "org.apache.lucene.util.cache.SimpleMapCache.put(K, V)"], ["void", "org.apache.lucene.util.cache.SimpleMapCache.close()"], ["boolean", "org.apache.lucene.util.cache.SimpleMapCache.containsKey(java.lang.Object)"]]}