{"jetty-server-9.2.4.v20141103.jar": [["org.eclipse.jetty.server.HomeBaseWarning", "org.eclipse.jetty.server.HomeBaseWarning()"], ["org.eclipse.jetty.server.Server$DateField", "org.eclipse.jetty.server.Server$DateField(long, org.eclipse.jetty.http.HttpField)"], ["int", "org.eclipse.jetty.server.ResourceCache$1.compare(org.eclipse.jetty.server.ResourceCache$Content, org.eclipse.jetty.server.ResourceCache$Content)"], ["int", "org.eclipse.jetty.server.ResourceCache$1.compare(java.lang.Object, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$4.toString()"], ["org.eclipse.jetty.server.Request$MultiPartCleanerListener", "org.eclipse.jetty.server.Request$MultiPartCleanerListener()"], ["void", "org.eclipse.jetty.server.Request$MultiPartCleanerListener.requestDestroyed(javax.servlet.ServletRequestEvent)"], ["void", "org.eclipse.jetty.server.Request$MultiPartCleanerListener.requestInitialized(javax.servlet.ServletRequestEvent)"], ["org.eclipse.jetty.server.ResourceCache", "org.eclipse.jetty.server.ResourceCache(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.ResourceFactory, org.eclipse.jetty.http.MimeTypes, boolean, boolean)"], ["int", "org.eclipse.jetty.server.ResourceCache.getCachedSize()"], ["int", "org.eclipse.jetty.server.ResourceCache.getCachedFiles()"], ["int", "org.eclipse.jetty.server.ResourceCache.getMaxCachedFileSize()"], ["void", "org.eclipse.jetty.server.ResourceCache.setMaxCachedFileSize(int)"], ["int", "org.eclipse.jetty.server.ResourceCache.getMaxCacheSize()"], ["void", "org.eclipse.jetty.server.ResourceCache.setMaxCacheSize(int)"], ["int", "org.eclipse.jetty.server.ResourceCache.getMaxCachedFiles()"], ["void", "org.eclipse.jetty.server.ResourceCache.setMaxCachedFiles(int)"], ["boolean", "org.eclipse.jetty.server.ResourceCache.isUseFileMappedBuffer()"], ["void", "org.eclipse.jetty.server.ResourceCache.flushCache()"], ["org.eclipse.jetty.http.HttpContent", "org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache.toString()"], ["org.eclipse.jetty.server.AsyncContextEvent", "org.eclipse.jetty.server.AsyncContextEvent(org.eclipse.jetty.server.handler.ContextHandler$Context, org.eclipse.jetty.server.AsyncContextState, org.eclipse.jetty.server.HttpChannelState, org.eclipse.jetty.server.Request, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getSuspendedContext()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.AsyncContextEvent.getContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getDispatchContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.AsyncContextEvent.getServletContext()"], ["java.lang.String", "org.eclipse.jetty.server.AsyncContextEvent.getPath()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setTimeoutTask(org.eclipse.jetty.util.thread.Scheduler$Task)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.cancelTimeoutTask()"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.AsyncContextEvent.getAsyncContext()"], ["java.lang.Throwable", "org.eclipse.jetty.server.AsyncContextEvent.getThrowable()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setThrowable(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setDispatchContext(javax.servlet.ServletContext)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.setDispatchPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.completed()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.AsyncContextEvent.getHttpChannelState()"], ["void", "org.eclipse.jetty.server.AsyncContextEvent.run()"], ["org.eclipse.jetty.server.HttpConnection", "org.eclipse.jetty.server.HttpConnection.getCurrentConnection()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConnection.getHttpConfiguration()"], ["org.eclipse.jetty.server.HttpConnection", "org.eclipse.jetty.server.HttpConnection(org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.HttpConnection.getServer()"], ["org.eclipse.jetty.server.Connector", "org.eclipse.jetty.server.HttpConnection.getConnector()"], ["org.eclipse.jetty.http.HttpParser", "org.eclipse.jetty.server.HttpConnection.getParser()"], ["int", "org.eclipse.jetty.server.HttpConnection.getMessagesIn()"], ["int", "org.eclipse.jetty.server.HttpConnection.getMessagesOut()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.HttpConnection.getRequestBuffer()"], ["void", "org.eclipse.jetty.server.HttpConnection.onFillable()"], ["void", "org.eclipse.jetty.server.HttpConnection.completed()"], ["void", "org.eclipse.jetty.server.HttpConnection.onOpen()"], ["void", "org.eclipse.jetty.server.HttpConnection.onClose()"], ["void", "org.eclipse.jetty.server.HttpConnection.run()"], ["void", "org.eclipse.jetty.server.HttpConnection.send(org.eclipse.jetty.http.HttpGenerator$ResponseInfo, java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpConnection.send(java.nio.ByteBuffer, boolean, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpConnection.abort()"], ["org.eclipse.jetty.util.IteratingCallback$Action", "org.eclipse.jetty.server.HttpConnection$SendCallback.process()"], ["void", "org.eclipse.jetty.server.HttpConnection$SendCallback.onCompleteFailure(java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.HttpConnection$SendCallback.toString()"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.EndPoint, java.lang.Object)"], ["org.eclipse.jetty.server.Iso88591HttpWriter", "org.eclipse.jetty.server.Iso88591HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.Iso88591HttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.jmx.ServerMBean", "org.eclipse.jetty.server.jmx.ServerMBean(java.lang.Object)"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.jmx.ServerMBean.getContexts()"], ["long", "org.eclipse.jetty.server.jmx.ServerMBean.getStartupTime()"], ["org.eclipse.jetty.server.jmx.AbstractConnectorMBean", "org.eclipse.jetty.server.jmx.AbstractConnectorMBean(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.jmx.AbstractConnectorMBean.getObjectContextBasis()"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$3.toString()"], ["org.eclipse.jetty.server.ConnectorStatistics", "org.eclipse.jetty.server.ConnectorStatistics()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.onClosed(org.eclipse.jetty.io.Connection)"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getBytesIn()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getBytesOut()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnections()"], ["long", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionDurationStdDev()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesIn()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerConnectionStdDev()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionsOpen()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getConnectionsOpenMax()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOut()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionMax()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionMean()"], ["double", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerConnectionStdDev()"], ["long", "org.eclipse.jetty.server.ConnectorStatistics.getStartedMillis()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesInPerSecond()"], ["int", "org.eclipse.jetty.server.ConnectorStatistics.getMessagesOutPerSecond()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.doStart()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.doStop()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.reset()"], ["java.lang.String", "org.eclipse.jetty.server.ConnectorStatistics.dump()"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.ConnectorStatistics.addToAllConnectors(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConfiguration()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConfiguration(org.eclipse.jetty.server.HttpConfiguration)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.addCustomizer(org.eclipse.jetty.server.HttpConfiguration$Customizer)"], ["<T> T", "org.eclipse.jetty.server.HttpConfiguration.getCustomizer(java.lang.Class<T>)"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getOutputBufferSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getRequestHeaderSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getResponseHeaderSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getHeaderCacheSize()"], ["int", "org.eclipse.jetty.server.HttpConfiguration.getSecurePort()"], ["java.lang.String", "org.eclipse.jetty.server.HttpConfiguration.getSecureScheme()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendServerVersion(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendServerVersion()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendXPoweredBy(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendXPoweredBy()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSendDateHeader(boolean)"], ["boolean", "org.eclipse.jetty.server.HttpConfiguration.getSendDateHeader()"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setCustomizers(java.util.List<org.eclipse.jetty.server.HttpConfiguration$Customizer>)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setOutputBufferSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setRequestHeaderSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setResponseHeaderSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setHeaderCacheSize(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSecurePort(int)"], ["void", "org.eclipse.jetty.server.HttpConfiguration.setSecureScheme(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.HttpConfiguration.toString()"], ["org.eclipse.jetty.server.SecureRequestCustomizer", "org.eclipse.jetty.server.SecureRequestCustomizer()"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["void", "org.eclipse.jetty.server.SecureRequestCustomizer.customize(javax.net.ssl.SSLEngine, org.eclipse.jetty.server.Request)"], ["java.lang.String", "org.eclipse.jetty.server.SecureRequestCustomizer.toString()"], ["org.eclipse.jetty.server.HttpWriter", "org.eclipse.jetty.server.HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.HttpWriter.close()"], ["void", "org.eclipse.jetty.server.HttpWriter.flush()"], ["void", "org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)"], ["void", "org.eclipse.jetty.server.HttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.ShutdownMonitor", "org.eclipse.jetty.server.ShutdownMonitor.getInstance()"], ["synchronized", "org.eclipse.jetty.server.ShutdownMonitor.void register(org.eclipse.jetty.util.component.LifeCycle...)"], ["synchronized", "org.eclipse.jetty.server.ShutdownMonitor.void deregister(org.eclipse.jetty.util.component.LifeCycle)"], ["synchronized", "org.eclipse.jetty.server.ShutdownMonitor.boolean isRegistered(org.eclipse.jetty.util.component.LifeCycle)"], ["java.lang.String", "org.eclipse.jetty.server.ShutdownMonitor.getKey()"], ["int", "org.eclipse.jetty.server.ShutdownMonitor.getPort()"], ["java.net.ServerSocket", "org.eclipse.jetty.server.ShutdownMonitor.getServerSocket()"], ["boolean", "org.eclipse.jetty.server.ShutdownMonitor.isExitVm()"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setDebug(boolean)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setExitVm(boolean)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setKey(java.lang.String)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor.setPort(int)"], ["java.lang.String", "org.eclipse.jetty.server.ShutdownMonitor.toString()"], ["org.eclipse.jetty.server.HttpOutput$AsyncFlush", "org.eclipse.jetty.server.HttpOutput$AsyncFlush(org.eclipse.jetty.server.HttpOutput)"], ["java.lang.Object", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.clearAttributes()"], ["void", "org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, int, int, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.ServerConnector", "org.eclipse.jetty.server.ServerConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["boolean", "org.eclipse.jetty.server.ServerConnector.isOpen()"], ["int", "org.eclipse.jetty.server.ServerConnector.getSelectorPriorityDelta()"], ["void", "org.eclipse.jetty.server.ServerConnector.setSelectorPriorityDelta(int)"], ["boolean", "org.eclipse.jetty.server.ServerConnector.isInheritChannel()"], ["void", "org.eclipse.jetty.server.ServerConnector.setInheritChannel(boolean)"], ["void", "org.eclipse.jetty.server.ServerConnector.open()"], ["void", "org.eclipse.jetty.server.ServerConnector.close()"], ["void", "org.eclipse.jetty.server.ServerConnector.accept(int)"], ["org.eclipse.jetty.io.SelectorManager", "org.eclipse.jetty.server.ServerConnector.getSelectorManager()"], ["java.lang.Object", "org.eclipse.jetty.server.ServerConnector.getTransport()"], ["int", "org.eclipse.jetty.server.ServerConnector.getLocalPort()"], ["int", "org.eclipse.jetty.server.ServerConnector.getSoLingerTime()"], ["void", "org.eclipse.jetty.server.ServerConnector.setSoLingerTime(int)"], ["int", "org.eclipse.jetty.server.ServerConnector.getAcceptQueueSize()"], ["void", "org.eclipse.jetty.server.ServerConnector.setAcceptQueueSize(int)"], ["boolean", "org.eclipse.jetty.server.ServerConnector.getReuseAddress()"], ["void", "org.eclipse.jetty.server.ServerConnector.setReuseAddress(boolean)"], ["org.eclipse.jetty.server.AbstractNetworkConnector", "org.eclipse.jetty.server.AbstractNetworkConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.setHost(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNetworkConnector.getHost()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.setPort(int)"], ["int", "org.eclipse.jetty.server.AbstractNetworkConnector.getPort()"], ["int", "org.eclipse.jetty.server.AbstractNetworkConnector.getLocalPort()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.open()"], ["void", "org.eclipse.jetty.server.AbstractNetworkConnector.close()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNetworkConnector.toString()"], ["void", "org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread.run()"], ["org.eclipse.jetty.server.AsyncContextState", "org.eclipse.jetty.server.AsyncContextState(org.eclipse.jetty.server.HttpChannelState)"], ["void", "org.eclipse.jetty.server.AsyncContextState.addListener(javax.servlet.AsyncListener, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.AsyncContextState.addListener(javax.servlet.AsyncListener)"], ["void", "org.eclipse.jetty.server.AsyncContextState.complete()"], ["<T extends javax.servlet.AsyncListener> T", "org.eclipse.jetty.server.AsyncContextState.createListener(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch()"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextState.dispatch(javax.servlet.ServletContext, java.lang.String)"], ["javax.servlet.ServletRequest", "org.eclipse.jetty.server.AsyncContextState.getRequest()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.AsyncContextState.getResponse()"], ["long", "org.eclipse.jetty.server.AsyncContextState.getTimeout()"], ["boolean", "org.eclipse.jetty.server.AsyncContextState.hasOriginalRequestAndResponse()"], ["void", "org.eclipse.jetty.server.AsyncContextState.setTimeout(long)"], ["void", "org.eclipse.jetty.server.AsyncContextState.start(java.lang.Runnable)"], ["void", "org.eclipse.jetty.server.AsyncContextState.reset()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.AsyncContextState.getHttpChannelState()"], ["org.eclipse.jetty.server.AbstractConnector", "org.eclipse.jetty.server.AbstractConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.AbstractConnector.getServer()"], ["java.util.concurrent.Executor", "org.eclipse.jetty.server.AbstractConnector.getExecutor()"], ["org.eclipse.jetty.io.ByteBufferPool", "org.eclipse.jetty.server.AbstractConnector.getByteBufferPool()"], ["long", "org.eclipse.jetty.server.AbstractConnector.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setIdleTimeout(long)"], ["int", "org.eclipse.jetty.server.AbstractConnector.getAcceptors()"], ["void", "org.eclipse.jetty.server.AbstractConnector.join()"], ["void", "org.eclipse.jetty.server.AbstractConnector.join(long)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.getConnectionFactory(java.lang.String)"], ["<T> T", "org.eclipse.jetty.server.AbstractConnector.getConnectionFactory(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.AbstractConnector.addConnectionFactory(org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.removeConnectionFactory(java.lang.String)"], ["void", "org.eclipse.jetty.server.AbstractConnector.setConnectionFactories(java.util.Collection<org.eclipse.jetty.server.ConnectionFactory>)"], ["int", "org.eclipse.jetty.server.AbstractConnector.getAcceptorPriorityDelta()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setAcceptorPriorityDelta(int)"], ["void", "org.eclipse.jetty.server.AbstractConnector.clearConnectionFactories()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.getDefaultProtocol()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setDefaultProtocol(java.lang.String)"], ["org.eclipse.jetty.server.ConnectionFactory", "org.eclipse.jetty.server.AbstractConnector.getDefaultConnectionFactory()"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.server.AbstractConnector.getScheduler()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.getName()"], ["void", "org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector.toString()"], ["org.eclipse.jetty.server.AbstractNCSARequestLog", "org.eclipse.jetty.server.AbstractNCSARequestLog()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setIgnorePaths(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.AbstractNCSARequestLog.getIgnorePaths()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogCookies(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogCookies()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogServer(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogServer()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogLatency(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogLatency()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogDispatch(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.isLogDispatch()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setPreferProxiedForAddress(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.getPreferProxiedForAddress()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setExtended(boolean)"], ["boolean", "org.eclipse.jetty.server.AbstractNCSARequestLog.isExtended()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogDateFormat(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogDateFormat()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogLocale(java.util.Locale)"], ["java.util.Locale", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogLocale()"], ["void", "org.eclipse.jetty.server.AbstractNCSARequestLog.setLogTimeZone(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractNCSARequestLog.getLogTimeZone()"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.Response.getResponse(javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.Response(org.eclipse.jetty.server.HttpChannel<?>, org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.Response.setHeaders(org.eclipse.jetty.http.HttpContent)"], ["org.eclipse.jetty.server.HttpOutput", "org.eclipse.jetty.server.Response.getHttpOutput()"], ["void", "org.eclipse.jetty.server.Response.setHttpOutput(org.eclipse.jetty.server.HttpOutput)"], ["boolean", "org.eclipse.jetty.server.Response.isIncluding()"], ["void", "org.eclipse.jetty.server.Response.include()"], ["void", "org.eclipse.jetty.server.Response.included()"], ["void", "org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)"], ["void", "org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)"], ["void", "org.eclipse.jetty.server.Response.addSetCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.String, boolean, boolean, int)"], ["boolean", "org.eclipse.jetty.server.Response.containsHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeUrl(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendError(int)"], ["void", "org.eclipse.jetty.server.Response.sendError(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendProcessing()"], ["void", "org.eclipse.jetty.server.Response.sendRedirect(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.Response.setHeader(org.eclipse.jetty.http.HttpHeader, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.getHeader(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.Response.setStatus(int)"], ["void", "org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setStatusWithReason(int, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Response.getCharacterEncoding()"], ["java.lang.String", "org.eclipse.jetty.server.Response.getContentType()"], ["javax.servlet.ServletOutputStream", "org.eclipse.jetty.server.Response.getOutputStream()"], ["boolean", "org.eclipse.jetty.server.Response.isWriting()"], ["java.io.PrintWriter", "org.eclipse.jetty.server.Response.getWriter()"], ["void", "org.eclipse.jetty.server.Response.setContentLength(int)"], ["long", "org.eclipse.jetty.server.Response.getContentLength()"], ["boolean", "org.eclipse.jetty.server.Response.isAllContentWritten(long)"], ["void", "org.eclipse.jetty.server.Response.closeOutput()"], ["long", "org.eclipse.jetty.server.Response.getLongContentLength()"], ["void", "org.eclipse.jetty.server.Response.setLongContentLength(long)"], ["void", "org.eclipse.jetty.server.Response.setContentLengthLong(long)"], ["void", "org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setContentType(java.lang.String)"], ["void", "org.eclipse.jetty.server.Response.setBufferSize(int)"], ["int", "org.eclipse.jetty.server.Response.getBufferSize()"], ["void", "org.eclipse.jetty.server.Response.flushBuffer()"], ["void", "org.eclipse.jetty.server.Response.reset()"], ["void", "org.eclipse.jetty.server.Response.reset(boolean)"], ["void", "org.eclipse.jetty.server.Response.resetForForward()"], ["void", "org.eclipse.jetty.server.Response.resetBuffer()"], ["boolean", "org.eclipse.jetty.server.Response.isCommitted()"], ["void", "org.eclipse.jetty.server.Response.setLocale(java.util.Locale)"], ["java.util.Locale", "org.eclipse.jetty.server.Response.getLocale()"], ["int", "org.eclipse.jetty.server.Response.getStatus()"], ["java.lang.String", "org.eclipse.jetty.server.Response.getReason()"], ["org.eclipse.jetty.http.HttpFields", "org.eclipse.jetty.server.Response.getHttpFields()"], ["long", "org.eclipse.jetty.server.Response.getContentCount()"], ["java.lang.String", "org.eclipse.jetty.server.Response.toString()"], ["org.eclipse.jetty.server.HttpChannelState$Async[]", "org.eclipse.jetty.server.HttpChannelState$Async.values()"], ["org.eclipse.jetty.server.HttpChannelState$Async", "org.eclipse.jetty.server.HttpChannelState$Async.valueOf(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput$2.succeeded()"], ["void", "org.eclipse.jetty.server.HttpOutput$2.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.HttpOutput$InputStreamWritingCB", "org.eclipse.jetty.server.HttpOutput$InputStreamWritingCB(org.eclipse.jetty.server.HttpOutput, java.io.InputStream, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput$InputStreamWritingCB.onCompleteFailure(java.lang.Throwable)"], ["org.eclipse.jetty.server.HttpOutput$OutputState[]", "org.eclipse.jetty.server.HttpOutput$OutputState.values()"], ["org.eclipse.jetty.server.HttpOutput$OutputState", "org.eclipse.jetty.server.HttpOutput$OutputState.valueOf(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextState$2.run()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ErrorHandler()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.handler.ErrorHandler.badMessageError(int, java.lang.String, org.eclipse.jetty.http.HttpFields)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ErrorHandler.getCacheControl()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setCacheControl(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.isShowStacks()"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setShowStacks(boolean)"], ["void", "org.eclipse.jetty.server.handler.ErrorHandler.setShowMessageInTitle(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ErrorHandler.getShowMessageInTitle()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ErrorHandler.getErrorHandler(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.handler.ContextHandler)"], ["org.eclipse.jetty.server.handler.AbstractHandlerContainer", "org.eclipse.jetty.server.handler.AbstractHandlerContainer()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class<?>)"], ["<T extends org.eclipse.jetty.server.Handler> T", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class<T>)"], ["<T extends org.eclipse.jetty.server.HandlerContainer> T", "org.eclipse.jetty.server.handler.AbstractHandlerContainer.findContainerOf(org.eclipse.jetty.server.HandlerContainer, java.lang.Class<T>, org.eclipse.jetty.server.Handler)"], ["org.eclipse.jetty.server.handler.IPAccessHandler", "org.eclipse.jetty.server.handler.IPAccessHandler()"], ["org.eclipse.jetty.server.handler.IPAccessHandler", "org.eclipse.jetty.server.handler.IPAccessHandler(java.lang.String[], java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.addWhite(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.addBlack(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setWhite(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setBlack(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.setWhiteListByPath(boolean)"], ["void", "org.eclipse.jetty.server.handler.IPAccessHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.lang.String", "org.eclipse.jetty.server.handler.IPAccessHandler.dump()"], ["org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApproveSameSuffixAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean(java.lang.Object)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.getContextAttributes()"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.setContextAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.setContextAttribute(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.jmx.ContextHandlerMBean.removeContextAttribute(java.lang.String)"], ["org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean", "org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.handler.jmx.AbstractHandlerMBean.getObjectContextBasis()"], ["org.eclipse.jetty.server.handler.ContextHandlerCollection", "org.eclipse.jetty.server.handler.ContextHandlerCollection()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class<? extends org.eclipse.jetty.server.handler.ContextHandler>)"], ["org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApproveAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.IdleTimeoutHandler", "org.eclipse.jetty.server.handler.IdleTimeoutHandler()"], ["boolean", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.isApplyToAsync()"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.setApplyToAsync(boolean)"], ["long", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.getIdleTimeoutMs()"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.setIdleTimeoutMs(long)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandlerCollection$Branch.toString()"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler$1.onComplete(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler$1.onComplete(javax.servlet.AsyncEvent)"], ["org.eclipse.jetty.server.handler.HotSwapHandler", "org.eclipse.jetty.server.handler.HotSwapHandler()"], ["org.eclipse.jetty.server.Handler", "org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)"], ["void", "org.eclipse.jetty.server.handler.HotSwapHandler.destroy()"], ["org.eclipse.jetty.server.handler.AsyncDelayHandler", "org.eclipse.jetty.server.handler.AsyncDelayHandler()"], ["void", "org.eclipse.jetty.server.handler.AsyncDelayHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler$NullRequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)"], ["org.eclipse.jetty.server.handler.ContextHandler$Availability[]", "org.eclipse.jetty.server.handler.ContextHandler$Availability.values()"], ["org.eclipse.jetty.server.handler.ContextHandler$Availability", "org.eclipse.jetty.server.handler.ContextHandler$Availability.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.handler.DefaultHandler", "org.eclipse.jetty.server.handler.DefaultHandler()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["boolean", "org.eclipse.jetty.server.handler.DefaultHandler.getServeIcon()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.setServeIcon(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.DefaultHandler.getShowContexts()"], ["void", "org.eclipse.jetty.server.handler.DefaultHandler.setShowContexts(boolean)"], ["org.eclipse.jetty.server.handler.ContextHandler$NoContext", "org.eclipse.jetty.server.handler.ContextHandler$NoContext()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getContext(java.lang.String)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getMajorVersion()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getMimeType(java.lang.String)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getMinorVersion()"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getNamedDispatcher(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getRealPath(java.lang.String)"], ["java.net.URL", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getResource(java.lang.String)"], ["java.io.InputStream", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getResourceAsStream(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getServerInfo()"], ["javax.servlet.Servlet", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getServlet(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.log(java.lang.Exception, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.log(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getInitParameter(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getServletContextName()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getContextPath()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.setInitParameter(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addFilter(java.lang.String, javax.servlet.Filter)"], ["javax.servlet.FilterRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addFilter(java.lang.String, java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addServlet(java.lang.String, javax.servlet.Servlet)"], ["javax.servlet.ServletRegistration$Dynamic", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addServlet(java.lang.String, java.lang.String)"], ["<T extends javax.servlet.Filter> T", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.createFilter(java.lang.Class<T>)"], ["<T extends javax.servlet.Servlet> T", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.createServlet(java.lang.Class<T>)"], ["javax.servlet.FilterRegistration", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getFilterRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration>", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getFilterRegistrations()"], ["javax.servlet.ServletRegistration", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getServletRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration>", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getServletRegistrations()"], ["javax.servlet.SessionCookieConfig", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getSessionCookieConfig()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addListener(T)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["<T extends java.util.EventListener> T", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.createListener(java.lang.Class<T>)"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getClassLoader()"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getEffectiveMajorVersion()"], ["int", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getEffectiveMinorVersion()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.setEffectiveMajorVersion(int)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.setEffectiveMinorVersion(int)"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getJspConfigDescriptor()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.declareRoles(java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$NoContext.getVirtualServerName()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler$1.run()"], ["org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApprovePathPrefixAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)"], ["java.net.URL", "org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)"], ["java.io.InputStream", "org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.java.lang.Object getAttribute(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.void setAttribute(java.lang.String, java.lang.Object)"], ["synchronized", "org.eclipse.jetty.server.handler.ContextHandler$Context.void removeAttribute(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler$Context.toString()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(T)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["<T extends java.util.EventListener> T", "org.eclipse.jetty.server.handler.ContextHandler$Context.createListener(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.checkListener(java.lang.Class<? extends java.util.EventListener>)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setExtendedListenerTypes(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.isExtendedListenerTypes()"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler$Context.getClassLoader()"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.eclipse.jetty.server.handler.ContextHandler$Context.getJspConfigDescriptor()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.declareRoles(java.lang.String...)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler$Context.setEnabled(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$Context.isEnabled()"], ["<T> T", "org.eclipse.jetty.server.handler.ContextHandler$Context.createInstance(java.lang.Class<T>)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.handler.IdleTimeoutHandler$1.onComplete(javax.servlet.AsyncEvent)"], ["org.eclipse.jetty.server.handler.RequestLogHandler", "org.eclipse.jetty.server.handler.RequestLogHandler()"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)"], ["org.eclipse.jetty.server.RequestLog", "org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog()"], ["org.eclipse.jetty.server.handler.ScopedHandler", "org.eclipse.jetty.server.handler.ScopedHandler()"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.SecuredRedirectHandler", "org.eclipse.jetty.server.handler.SecuredRedirectHandler()"], ["void", "org.eclipse.jetty.server.handler.SecuredRedirectHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(org.eclipse.jetty.server.Server, java.lang.String)"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(java.lang.String)"], ["org.eclipse.jetty.server.handler.ShutdownHandler", "org.eclipse.jetty.server.handler.ShutdownHandler(java.lang.String, boolean, boolean)"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.sendShutdown()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.setExitJvm(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.ShutdownHandler.isSendShutdownAtStart()"], ["void", "org.eclipse.jetty.server.handler.ShutdownHandler.setSendShutdownAtStart(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ShutdownHandler.getShutdownToken()"], ["boolean", "org.eclipse.jetty.server.handler.ShutdownHandler.isExitJvm()"], ["org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases", "org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler$ApproveNonExistentDirectoryAliases.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.server.handler.StatisticsHandler", "org.eclipse.jetty.server.handler.StatisticsHandler()"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()"], ["void", "org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMean()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeStdDev()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatched()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActive()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActiveMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMax()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeTotal()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMean()"], ["double", "org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeStdDev()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequests()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequestsWaiting()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncRequestsWaitingMax()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getAsyncDispatches()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getExpires()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()"], ["int", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()"], ["long", "org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()"], ["java.lang.String", "org.eclipse.jetty.server.handler.StatisticsHandler.toStatsHTML()"], ["org.eclipse.jetty.server.handler.MovedContextHandler", "org.eclipse.jetty.server.handler.MovedContextHandler()"], ["org.eclipse.jetty.server.handler.MovedContextHandler", "org.eclipse.jetty.server.handler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardPathInfo()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardPathInfo(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isPermanent()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setPermanent(boolean)"], ["boolean", "org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardQuery()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardQuery(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.MovedContextHandler.getExpires()"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler.getContextHandler(javax.servlet.ServletContext)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler(java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.handler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.dump(java.lang.Appendable, java.lang.String)"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.handler.ContextHandler.getServletContext()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.getAllowNullPathInfo()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAllowNullPathInfo(boolean)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addVirtualHosts(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeVirtualHosts(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()"], ["java.lang.Object", "org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)"], ["org.eclipse.jetty.util.Attributes", "org.eclipse.jetty.server.handler.ContextHandler.getAttributes()"], ["java.lang.ClassLoader", "org.eclipse.jetty.server.handler.ContextHandler.getClassLoader()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getClassPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.setInitParameter(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.eclipse.jetty.server.handler.ContextHandler.getInitParams()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()"], ["java.util.EventListener[]", "org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeEventListener(java.util.EventListener)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isShutdown()"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isAvailable()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)"], ["org.eclipse.jetty.util.log.Logger", "org.eclipse.jetty.server.handler.ContextHandler.getLogger()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkVirtualHost(org.eclipse.jetty.server.Request)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkContextPath(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isProtectedTarget(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setProtectedTargets(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getProtectedTargets()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.checkManagedAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)"], ["org.eclipse.jetty.http.MimeTypes", "org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[])"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles()"], ["org.eclipse.jetty.server.handler.ErrorHandler", "org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMaxFormContentSize(int)"], ["int", "org.eclipse.jetty.server.handler.ContextHandler.getMaxFormKeys()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setMaxFormKeys(int)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.isCompactPath()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setCompactPath(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.toString()"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncodings()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.handler.ContextHandler.checkAlias(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URI)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.addAliasCheck(org.eclipse.jetty.server.handler.ContextHandler$AliasCheck)"], ["void", "org.eclipse.jetty.server.handler.ContextHandler.setAliasChecks(java.util.List<org.eclipse.jetty.server.handler.ContextHandler$AliasCheck>)"], ["org.eclipse.jetty.server.handler.DebugHandler", "org.eclipse.jetty.server.handler.DebugHandler()"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.io.OutputStream", "org.eclipse.jetty.server.handler.DebugHandler.getOutputStream()"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream)"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.onOpened(org.eclipse.jetty.io.Connection)"], ["void", "org.eclipse.jetty.server.handler.DebugHandler.onClosed(org.eclipse.jetty.io.Connection)"], ["org.eclipse.jetty.server.handler.AbstractHandler", "org.eclipse.jetty.server.handler.AbstractHandler()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.handler.AbstractHandler.getServer()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler.destroy()"], ["void", "org.eclipse.jetty.server.handler.AbstractHandler.dumpThis(java.lang.Appendable)"], ["org.eclipse.jetty.server.handler.HandlerWrapper", "org.eclipse.jetty.server.handler.HandlerWrapper()"], ["org.eclipse.jetty.server.Handler", "org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)"], ["void", "org.eclipse.jetty.server.handler.HandlerWrapper.destroy()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler$1.succeeded()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler$1.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.handler.HandlerCollection", "org.eclipse.jetty.server.handler.HandlerCollection()"], ["org.eclipse.jetty.server.handler.HandlerCollection", "org.eclipse.jetty.server.handler.HandlerCollection(boolean)"], ["org.eclipse.jetty.server.Handler[]", "org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)"], ["void", "org.eclipse.jetty.server.handler.HandlerCollection.destroy()"], ["java.lang.String", "org.eclipse.jetty.server.handler.HandlerCollection.toString()"], ["org.eclipse.jetty.server.handler.HandlerList", "org.eclipse.jetty.server.handler.HandlerList()"], ["void", "org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.ResourceHandler", "org.eclipse.jetty.server.handler.ResourceHandler()"], ["org.eclipse.jetty.http.MimeTypes", "org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isDirectoriesListed()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setDirectoriesListed(boolean)"], ["int", "org.eclipse.jetty.server.handler.ResourceHandler.getMinMemoryMappedContentLength()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMinMemoryMappedContentLength(int)"], ["int", "org.eclipse.jetty.server.handler.ResourceHandler.getMinAsyncContentLength()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setMinAsyncContentLength(int)"], ["boolean", "org.eclipse.jetty.server.handler.ResourceHandler.isEtags()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setEtags(boolean)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.doStart()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource()"], ["java.lang.String", "org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getStylesheet()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setStylesheet(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)"], ["java.lang.String[]", "org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles()"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[])"], ["void", "org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker", "org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker()"], ["boolean", "org.eclipse.jetty.server.handler.AllowSymLinkAliasChecker.check(java.lang.String, org.eclipse.jetty.util.resource.Resource)"], ["javax.security.auth.Subject", "org.eclipse.jetty.server.UserIdentity$1.getSubject()"], ["java.security.Principal", "org.eclipse.jetty.server.UserIdentity$1.getUserPrincipal()"], ["boolean", "org.eclipse.jetty.server.UserIdentity$1.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)"], ["java.lang.String", "org.eclipse.jetty.server.UserIdentity$1.toString()"], ["void", "org.eclipse.jetty.server.HttpChannel$CommitCallback.succeeded()"], ["void", "org.eclipse.jetty.server.HttpChannel$CommitCallback.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.adaptTo(java.sql.DatabaseMetaData)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.setBlobType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.setLongType(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getLongType()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getDBName()"], ["java.io.InputStream", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.isEmptyStringNull()"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.isRowIdReserved()"], ["org.eclipse.jetty.server.session.jmx.AbstractSessionManagerMBean", "org.eclipse.jetty.server.session.jmx.AbstractSessionManagerMBean(java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.session.jmx.AbstractSessionManagerMBean.getObjectContextBasis()"], ["org.eclipse.jetty.server.session.MemSession", "org.eclipse.jetty.server.session.MemSession(org.eclipse.jetty.server.session.AbstractSessionManager, long, long, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.eclipse.jetty.server.session.MemSession.getAttributeMap()"], ["int", "org.eclipse.jetty.server.session.MemSession.getAttributes()"], ["void", "org.eclipse.jetty.server.session.MemSession.clearAttributes()"], ["void", "org.eclipse.jetty.server.session.MemSession.addAttributes(java.util.Map<java.lang.String, java.lang.Object>)"], ["java.lang.Object", "org.eclipse.jetty.server.session.MemSession.doPutOrRemove(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.eclipse.jetty.server.session.MemSession.doGet(java.lang.String)"], ["org.eclipse.jetty.server.session.AbstractSessionManager", "org.eclipse.jetty.server.session.AbstractSessionManager()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.session.AbstractSessionManager.getContext()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.session.AbstractSessionManager.getContextHandler()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionPath()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge()"], ["org.eclipse.jetty.http.HttpCookie", "org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.clearEventListeners()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.doStart()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.doStop()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.getHttpOnly()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)"], ["org.eclipse.jetty.server.SessionIdManager", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdManager()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getMaxInactiveInterval()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionsMax()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionsTotal()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getRefreshCookieAge()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.getSecureCookies()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isSecureRequestOnly()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSecureRequestOnly(boolean)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie()"], ["org.eclipse.jetty.http.HttpCookie", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionDomain()"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessions()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterName()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterNamePrefix()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isUsingCookies()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.statsReset()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setHttpOnly(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setMaxInactiveInterval(int)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setRefreshCookieAge(int)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSessionCookie(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setUsingCookies(boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isNodeIdInSessionId()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setNodeIdInSessionId(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSession, boolean)"], ["long", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeMax()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isUsingURLs()"], ["javax.servlet.SessionCookieConfig", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookieConfig()"], ["long", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeTotal()"], ["double", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeMean()"], ["double", "org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeStdDev()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager.isCheckingRemoteSessionIdEncoding()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.setCheckingRemoteSessionIdEncoding(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager.doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession, java.lang.String, java.lang.Object, java.lang.Object)"], ["org.eclipse.jetty.server.SessionIdManager", "org.eclipse.jetty.server.session.AbstractSessionManager.getMetaManager()"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getTableName()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setTableName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getRowIdColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setRowIdColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getIdColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setIdColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getContextPathColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setContextPathColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getVirtualHostColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setVirtualHostColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLastNodeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setLastNodeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getAccessTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setAccessTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLastAccessTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setLastAccessTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getCreateTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setCreateTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getCookieTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setCookieTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLastSavedTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setLastSavedTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getExpiryTimeColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setExpiryTimeColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getMaxIntervalColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setMaxIntervalColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getMapColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.setMapColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getCreateStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverExpiryStatementAsString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverSessionStatementAsString(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getAlterTableForMaxIntervalAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getInsertSessionStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getDeleteSessionStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getUpdateSessionStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getUpdateSessionNodeStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getUpdateSessionAccessTimeStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getBoundedExpiredSessionsStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getSelectExpiredSessionsStatementAsString()"], ["java.sql.PreparedStatement", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLoadStatement(java.sql.Connection, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HashedSession.setMaxInactiveInterval(int)"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.void save(java.io.OutputStream)"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.void deIdle()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.void idle()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.boolean isIdled()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.boolean isSaveFailed()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.void saveFailed()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.void deIdleFailed()"], ["synchronized", "org.eclipse.jetty.server.session.HashedSession.boolean isDeIdleFailed()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$Scavenger.run()"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.SessionHandler()"], ["org.eclipse.jetty.server.session.SessionHandler", "org.eclipse.jetty.server.session.SessionHandler(org.eclipse.jetty.server.SessionManager)"], ["org.eclipse.jetty.server.SessionManager", "org.eclipse.jetty.server.session.SessionHandler.getSessionManager()"], ["void", "org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.removeEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.setDatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getIdColumn()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.setIdColumn(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getTableName()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.setTableName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getInsertStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getDeleteStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getSelectStatementAsString()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema.getCreateStatementAsString()"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager", "org.eclipse.jetty.server.session.JDBCSessionIdManager(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager", "org.eclipse.jetty.server.session.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.sql.Driver, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasource(javax.sql.DataSource)"], ["javax.sql.DataSource", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getDataSource()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getDriverClassName()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasourceName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getDatasourceName()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setBlobType(java.lang.String)"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getDbAdaptor()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDbAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getBlobType()"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getLongType()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setLongType(java.lang.String)"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getSessionIdTableSchema()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setSessionIdTableSchema(org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionIdTableSchema)"], ["org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getSessionTableSchema()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setSessionTableSchema(org.eclipse.jetty.server.session.JDBCSessionIdManager$SessionTableSchema)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setDeleteBlockSize(int)"], ["int", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getDeleteBlockSize()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)"], ["long", "org.eclipse.jetty.server.session.JDBCSessionIdManager.getScavengeInterval()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.renewSessionId(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager$1.run()"], ["org.eclipse.jetty.server.session.AbstractSession", "org.eclipse.jetty.server.session.AbstractSession.getSession()"], ["long", "org.eclipse.jetty.server.session.AbstractSession.getAccessed()"], ["long", "org.eclipse.jetty.server.session.AbstractSession.getCookieSetTime()"], ["long", "org.eclipse.jetty.server.session.AbstractSession.getCreationTime()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSession.getId()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSession.getNodeId()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSession.getClusterId()"], ["long", "org.eclipse.jetty.server.session.AbstractSession.getLastAccessedTime()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.setLastAccessedTime(long)"], ["int", "org.eclipse.jetty.server.session.AbstractSession.getMaxInactiveInterval()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.session.AbstractSession.getServletContext()"], ["javax.servlet.http.HttpSessionContext", "org.eclipse.jetty.server.session.AbstractSession.getSessionContext()"], ["java.lang.Object", "org.eclipse.jetty.server.session.AbstractSession.getValue(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.renewId(javax.servlet.http.HttpServletRequest)"], ["org.eclipse.jetty.server.SessionManager", "org.eclipse.jetty.server.session.AbstractSession.getSessionManager()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.invalidate()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSession.isIdChanged()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSession.isNew()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.putValue(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.removeValue(java.lang.String)"], ["java.lang.String[]", "org.eclipse.jetty.server.session.AbstractSession.getValueNames()"], ["java.lang.Object", "org.eclipse.jetty.server.session.AbstractSession.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.setIdChanged(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.setMaxInactiveInterval(int)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSession.toString()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.bindValue(java.lang.String, java.lang.Object)"], ["boolean", "org.eclipse.jetty.server.session.AbstractSession.isValid()"], ["int", "org.eclipse.jetty.server.session.AbstractSession.getRequests()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.setRequests(int)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.unbindValue(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.AbstractSession.willPassivate()"], ["void", "org.eclipse.jetty.server.session.AbstractSession.didActivate()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager$Saver.run()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager$Scavenger.run()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.session.AbstractSessionManager$1.getSession(java.lang.String)"], ["java.util.Enumeration", "org.eclipse.jetty.server.session.AbstractSessionManager$1.getIds()"], ["org.eclipse.jetty.server.session.AbstractSessionIdManager", "org.eclipse.jetty.server.session.AbstractSessionIdManager()"], ["org.eclipse.jetty.server.session.AbstractSessionIdManager", "org.eclipse.jetty.server.session.AbstractSessionIdManager(java.util.Random)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionIdManager.getWorkerName()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionIdManager.setWorkerName(java.lang.String)"], ["java.util.Random", "org.eclipse.jetty.server.session.AbstractSessionIdManager.getRandom()"], ["synchronized", "org.eclipse.jetty.server.session.AbstractSessionIdManager.void setRandom(java.util.Random)"], ["long", "org.eclipse.jetty.server.session.AbstractSessionIdManager.getReseed()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionIdManager.setReseed(long)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(long)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionIdManager.getClusterId(java.lang.String)"], ["org.eclipse.jetty.server.session.HashSessionManager", "org.eclipse.jetty.server.session.HashSessionManager()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.doStart()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.doStop()"], ["int", "org.eclipse.jetty.server.session.HashSessionManager.getScavengePeriod()"], ["int", "org.eclipse.jetty.server.session.HashSessionManager.getSessions()"], ["int", "org.eclipse.jetty.server.session.HashSessionManager.getIdleSavePeriod()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setIdleSavePeriod(int)"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)"], ["int", "org.eclipse.jetty.server.session.HashSessionManager.getSavePeriod()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)"], ["org.eclipse.jetty.server.session.AbstractSession", "org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setStoreDirectory(java.io.File)"], ["java.io.File", "org.eclipse.jetty.server.session.HashSessionManager.getStoreDirectory()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setLazyLoad(boolean)"], ["boolean", "org.eclipse.jetty.server.session.HashSessionManager.isLazyLoad()"], ["boolean", "org.eclipse.jetty.server.session.HashSessionManager.isDeleteUnrestorableSessions()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.setDeleteUnrestorableSessions(boolean)"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()"], ["void", "org.eclipse.jetty.server.session.HashSessionManager.saveSessions(boolean)"], ["org.eclipse.jetty.server.session.HashedSession", "org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream, org.eclipse.jetty.server.session.HashedSession)"], ["org.eclipse.jetty.server.session.HashSessionIdManager", "org.eclipse.jetty.server.session.HashSessionIdManager()"], ["org.eclipse.jetty.server.session.HashSessionIdManager", "org.eclipse.jetty.server.session.HashSessionIdManager(java.util.Random)"], ["boolean", "org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.HashSessionIdManager.renewSessionId(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.void setVirtualHost(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.java.lang.String getVirtualHost()"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.long getLastSaved()"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.void setLastSaved(long)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.void setExpiryTime(long)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.long getExpiryTime()"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.void setCanonicalContext(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.java.lang.String getCanonicalContext()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.setCookieSet(long)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.long getCookieSet()"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.void setLastNode(java.lang.String)"], ["synchronized", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.java.lang.String getLastNode()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.setMaxInactiveInterval(int)"], ["java.lang.String", "org.eclipse.jetty.server.session.JDBCSessionManager$Session.toString()"], ["org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig(org.eclipse.jetty.server.session.AbstractSessionManager)"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.getComment()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.getDomain()"], ["int", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.getMaxAge()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.getName()"], ["java.lang.String", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.getPath()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.isHttpOnly()"], ["boolean", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.isSecure()"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setComment(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setDomain(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setHttpOnly(boolean)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setMaxAge(int)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setName(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.session.AbstractSessionManager$CookieConfig.setSecure(boolean)"], ["org.eclipse.jetty.server.session.JDBCSessionManager", "org.eclipse.jetty.server.session.JDBCSessionManager()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager.setSaveInterval(long)"], ["long", "org.eclipse.jetty.server.session.JDBCSessionManager.getSaveInterval()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager.cacheInvalidate(org.eclipse.jetty.server.session.JDBCSessionManager$Session)"], ["org.eclipse.jetty.server.session.JDBCSessionManager$Session", "org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)"], ["int", "org.eclipse.jetty.server.session.JDBCSessionManager.getSessions()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager.doStart()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager.doStop()"], ["void", "org.eclipse.jetty.server.session.JDBCSessionManager.renewSessionId(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSession, boolean)"], ["org.eclipse.jetty.server.session.AbstractSession", "org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$2.toString()"], ["org.eclipse.jetty.server.NCSARequestLog", "org.eclipse.jetty.server.NCSARequestLog()"], ["org.eclipse.jetty.server.NCSARequestLog", "org.eclipse.jetty.server.NCSARequestLog(java.lang.String)"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getFilename()"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setRetainDays(int)"], ["int", "org.eclipse.jetty.server.NCSARequestLog.getRetainDays()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setAppend(boolean)"], ["boolean", "org.eclipse.jetty.server.NCSARequestLog.isAppend()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat()"], ["void", "org.eclipse.jetty.server.NCSARequestLog.write(java.lang.String)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector", "org.eclipse.jetty.server.nio.NetworkTrafficSelectChannelConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.HttpTransport, org.eclipse.jetty.server.HttpInput<java.nio.ByteBuffer>)"], ["void", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.earlyEOF()"], ["boolean", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.content(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.badMessage(int, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.headerComplete()"], ["void", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.abort()"], ["boolean", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.messageComplete()"], ["boolean", "org.eclipse.jetty.server.HttpConnection$HttpChannelOverHttp.content(java.lang.Object)"], ["org.eclipse.jetty.server.HttpInputOverHTTP", "org.eclipse.jetty.server.HttpInputOverHTTP(org.eclipse.jetty.server.HttpConnection)"], ["void", "org.eclipse.jetty.server.HttpInputOverHTTP.recycle()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInputOverHTTP.toString()"], ["void", "org.eclipse.jetty.server.HttpInputOverHTTP.content(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpInputOverHTTP.succeeded()"], ["void", "org.eclipse.jetty.server.HttpInputOverHTTP.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpInputOverHTTP.content(java.lang.Object)"], ["org.eclipse.jetty.server.HttpChannelState$Action[]", "org.eclipse.jetty.server.HttpChannelState$Action.values()"], ["org.eclipse.jetty.server.HttpChannelState$Action", "org.eclipse.jetty.server.HttpChannelState$Action.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.QueuedHttpInput", "org.eclipse.jetty.server.QueuedHttpInput()"], ["void", "org.eclipse.jetty.server.QueuedHttpInput.content(T)"], ["void", "org.eclipse.jetty.server.QueuedHttpInput.recycle()"], ["void", "org.eclipse.jetty.server.QueuedHttpInput.earlyEOF()"], ["void", "org.eclipse.jetty.server.QueuedHttpInput.messageComplete()"], ["org.eclipse.jetty.server.Authentication$Failed", "org.eclipse.jetty.server.Authentication$Failed(java.lang.String)"], ["void", "org.eclipse.jetty.server.AsyncContextState$1.onTimeout(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$1.onStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$1.onError(javax.servlet.AsyncEvent)"], ["void", "org.eclipse.jetty.server.AsyncContextState$1.onComplete(javax.servlet.AsyncEvent)"], ["org.eclipse.jetty.server.Response$ResponseWriter", "org.eclipse.jetty.server.Response$ResponseWriter(org.eclipse.jetty.server.HttpWriter, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.Response$ResponseWriter.isFor(java.lang.String)"], ["org.eclipse.jetty.server.ForwardedRequestCustomizer", "org.eclipse.jetty.server.ForwardedRequestCustomizer()"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getHostHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setHostHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedHostHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedHostHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedServerHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedServerHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedForHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedForHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedProtoHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedProtoHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedCipherSuiteHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedCipherSuiteHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.getForwardedSslSessionIdHeader()"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.setForwardedSslSessionIdHeader(java.lang.String)"], ["void", "org.eclipse.jetty.server.ForwardedRequestCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["java.lang.String", "org.eclipse.jetty.server.ForwardedRequestCustomizer.toString()"], ["org.eclipse.jetty.server.InclusiveByteRange", "org.eclipse.jetty.server.InclusiveByteRange(long, long)"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getFirst()"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getLast()"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getLast(long)"], ["long", "org.eclipse.jetty.server.InclusiveByteRange.getSize(long)"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)"], ["java.lang.String", "org.eclipse.jetty.server.InclusiveByteRange.toString()"], ["org.eclipse.jetty.server.HttpOutput$AsyncWrite", "org.eclipse.jetty.server.HttpOutput$AsyncWrite(org.eclipse.jetty.server.HttpOutput, byte[], int, int, boolean)"], ["org.eclipse.jetty.server.HttpOutput$AsyncWrite", "org.eclipse.jetty.server.HttpOutput$AsyncWrite(org.eclipse.jetty.server.HttpOutput, java.nio.ByteBuffer, boolean)"], ["org.eclipse.jetty.server.HttpOutput", "org.eclipse.jetty.server.HttpOutput(org.eclipse.jetty.server.HttpChannel<?>)"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isWritten()"], ["long", "org.eclipse.jetty.server.HttpOutput.getWritten()"], ["void", "org.eclipse.jetty.server.HttpOutput.reset()"], ["void", "org.eclipse.jetty.server.HttpOutput.reopen()"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isAllContentWritten()"], ["void", "org.eclipse.jetty.server.HttpOutput.close()"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isClosed()"], ["void", "org.eclipse.jetty.server.HttpOutput.flush()"], ["void", "org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)"], ["void", "org.eclipse.jetty.server.HttpOutput.write(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpOutput.write(int)"], ["void", "org.eclipse.jetty.server.HttpOutput.print(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.ByteBuffer)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.io.InputStream)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.channels.ReadableByteChannel)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(org.eclipse.jetty.http.HttpContent)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.ByteBuffer, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.io.InputStream, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(java.nio.channels.ReadableByteChannel, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput.sendContent(org.eclipse.jetty.http.HttpContent, org.eclipse.jetty.util.Callback)"], ["int", "org.eclipse.jetty.server.HttpOutput.getBufferSize()"], ["void", "org.eclipse.jetty.server.HttpOutput.setBufferSize(int)"], ["void", "org.eclipse.jetty.server.HttpOutput.resetBuffer()"], ["void", "org.eclipse.jetty.server.HttpOutput.setWriteListener(javax.servlet.WriteListener)"], ["boolean", "org.eclipse.jetty.server.HttpOutput.isReady()"], ["void", "org.eclipse.jetty.server.HttpOutput.run()"], ["java.lang.String", "org.eclipse.jetty.server.HttpOutput.toString()"], ["org.eclipse.jetty.server.HttpChannelState$State[]", "org.eclipse.jetty.server.HttpChannelState$State.values()"], ["org.eclipse.jetty.server.HttpChannelState$State", "org.eclipse.jetty.server.HttpChannelState$State.valueOf(java.lang.String)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.NetworkTrafficServerConnector", "org.eclipse.jetty.server.NetworkTrafficServerConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["void", "org.eclipse.jetty.server.NetworkTrafficServerConnector.addNetworkTrafficListener(org.eclipse.jetty.io.NetworkTrafficListener)"], ["void", "org.eclipse.jetty.server.NetworkTrafficServerConnector.removeNetworkTrafficListener(org.eclipse.jetty.io.NetworkTrafficListener)"], ["void", "org.eclipse.jetty.server.HttpChannel$CommitCallback$1.succeeded()"], ["void", "org.eclipse.jetty.server.HttpChannel$CommitCallback$1.failed(java.lang.Throwable)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, java.util.concurrent.Executor, org.eclipse.jetty.util.thread.Scheduler, org.eclipse.jetty.io.ByteBufferPool, int, org.eclipse.jetty.server.ConnectionFactory...)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory)"], ["org.eclipse.jetty.server.LocalConnector", "org.eclipse.jetty.server.LocalConnector(org.eclipse.jetty.server.Server, org.eclipse.jetty.server.ConnectionFactory, org.eclipse.jetty.util.ssl.SslContextFactory)"], ["java.lang.Object", "org.eclipse.jetty.server.LocalConnector.getTransport()"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, long, java.util.concurrent.TimeUnit)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponses(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.LocalConnector.getResponses(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit)"], ["org.eclipse.jetty.server.LocalConnector$LocalEndPoint", "org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$5.toString()"], ["org.eclipse.jetty.server.ServletResponseHttpWrapper", "org.eclipse.jetty.server.ServletResponseHttpWrapper(javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addCookie(javax.servlet.http.Cookie)"], ["boolean", "org.eclipse.jetty.server.ServletResponseHttpWrapper.containsHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeUrl(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.encodeRedirectUrl(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendError(int, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendError(int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.sendRedirect(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addDateHeader(java.lang.String, long)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addHeader(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.addIntHeader(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setStatus(int)"], ["void", "org.eclipse.jetty.server.ServletResponseHttpWrapper.setStatus(int, java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletResponseHttpWrapper.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.ServletResponseHttpWrapper.getStatus()"], ["void", "org.eclipse.jetty.server.HttpOutput$AsyncICB.onCompleteFailure(java.lang.Throwable)"], ["org.eclipse.jetty.server.EncodingHttpWriter", "org.eclipse.jetty.server.EncodingHttpWriter(org.eclipse.jetty.server.HttpOutput, java.lang.String)"], ["void", "org.eclipse.jetty.server.EncodingHttpWriter.write(char[], int, int)"], ["void", "org.eclipse.jetty.server.Request$1.close()"], ["org.eclipse.jetty.server.HttpChannelState$State", "org.eclipse.jetty.server.HttpChannelState.getState()"], ["void", "org.eclipse.jetty.server.HttpChannelState.addListener(javax.servlet.AsyncListener)"], ["void", "org.eclipse.jetty.server.HttpChannelState.setTimeout(long)"], ["long", "org.eclipse.jetty.server.HttpChannelState.getTimeout()"], ["org.eclipse.jetty.server.AsyncContextEvent", "org.eclipse.jetty.server.HttpChannelState.getAsyncContextEvent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState.toString()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannelState.getStatusString()"], ["void", "org.eclipse.jetty.server.HttpChannelState.startAsync(org.eclipse.jetty.server.AsyncContextEvent)"], ["void", "org.eclipse.jetty.server.HttpChannelState.dispatch(javax.servlet.ServletContext, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.complete()"], ["void", "org.eclipse.jetty.server.HttpChannelState.errorComplete()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isExpired()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isInitial()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isSuspended()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isAsyncStarted()"], ["boolean", "org.eclipse.jetty.server.HttpChannelState.isAsync()"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.HttpChannelState.getBaseRequest()"], ["org.eclipse.jetty.server.handler.ContextHandler", "org.eclipse.jetty.server.HttpChannelState.getContextHandler()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.HttpChannelState.getServletResponse()"], ["java.lang.Object", "org.eclipse.jetty.server.HttpChannelState.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpChannelState.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.HttpChannelState.onReadPossible()"], ["void", "org.eclipse.jetty.server.HttpChannelState.onWritePossible()"], ["org.eclipse.jetty.server.CookieCutter", "org.eclipse.jetty.server.CookieCutter()"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.CookieCutter.getCookies()"], ["void", "org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])"], ["void", "org.eclipse.jetty.server.CookieCutter.reset()"], ["void", "org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)"], ["org.eclipse.jetty.server.NegotiatingServerConnectionFactory", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory(java.lang.String, java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.getDefaultProtocol()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.setDefaultProtocol(java.lang.String)"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["java.lang.String", "org.eclipse.jetty.server.NegotiatingServerConnectionFactory.toString()"], ["void", "org.eclipse.jetty.server.HttpChannel$Commit100Callback.succeeded()"], ["void", "org.eclipse.jetty.server.HttpInput$State.waitForContent(org.eclipse.jetty.server.HttpInput<?>)"], ["int", "org.eclipse.jetty.server.HttpInput$State.noContent()"], ["boolean", "org.eclipse.jetty.server.HttpInput$State.isEOF()"], ["org.eclipse.jetty.server.ByteBufferQueuedHttpInput", "org.eclipse.jetty.server.ByteBufferQueuedHttpInput()"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory()"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory(java.lang.String)"], ["org.eclipse.jetty.server.SslConnectionFactory", "org.eclipse.jetty.server.SslConnectionFactory(org.eclipse.jetty.util.ssl.SslContextFactory, java.lang.String)"], ["org.eclipse.jetty.util.ssl.SslContextFactory", "org.eclipse.jetty.server.SslConnectionFactory.getSslContextFactory()"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.SslConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["java.lang.String", "org.eclipse.jetty.server.SslConnectionFactory.toString()"], ["org.eclipse.jetty.server.Slf4jRequestLog", "org.eclipse.jetty.server.Slf4jRequestLog()"], ["void", "org.eclipse.jetty.server.Slf4jRequestLog.setLoggerName(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Slf4jRequestLog.getLoggerName()"], ["void", "org.eclipse.jetty.server.Slf4jRequestLog.write(java.lang.String)"], ["org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable(org.eclipse.jetty.server.ShutdownMonitor)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.run()"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.stopInput(java.net.Socket)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.stopOutput(java.net.Socket)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.informClient(java.io.OutputStream, java.lang.String)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.stopLifeCycles(boolean)"], ["void", "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable.startListenSocket()"], ["org.eclipse.jetty.server.HostHeaderCustomizer", "org.eclipse.jetty.server.HostHeaderCustomizer(java.lang.String)"], ["org.eclipse.jetty.server.HostHeaderCustomizer", "org.eclipse.jetty.server.HostHeaderCustomizer(java.lang.String, int)"], ["void", "org.eclipse.jetty.server.HostHeaderCustomizer.customize(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.server.Request)"], ["org.eclipse.jetty.server.ClassLoaderDump", "org.eclipse.jetty.server.ClassLoaderDump(java.lang.ClassLoader)"], ["java.lang.String", "org.eclipse.jetty.server.ClassLoaderDump.dump()"], ["void", "org.eclipse.jetty.server.ClassLoaderDump.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.HttpInput.init(org.eclipse.jetty.server.HttpChannelState)"], ["java.lang.Object", "org.eclipse.jetty.server.HttpInput.lock()"], ["void", "org.eclipse.jetty.server.HttpInput.recycle()"], ["int", "org.eclipse.jetty.server.HttpInput.available()"], ["int", "org.eclipse.jetty.server.HttpInput.read()"], ["int", "org.eclipse.jetty.server.HttpInput.read(byte[], int, int)"], ["long", "org.eclipse.jetty.server.HttpInput.getContentRead()"], ["void", "org.eclipse.jetty.server.HttpInput.earlyEOF()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isEarlyEOF()"], ["void", "org.eclipse.jetty.server.HttpInput.messageComplete()"], ["void", "org.eclipse.jetty.server.HttpInput.consumeAll()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isAsync()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isEOF()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isFinished()"], ["boolean", "org.eclipse.jetty.server.HttpInput.isReady()"], ["void", "org.eclipse.jetty.server.HttpInput.setReadListener(javax.servlet.ReadListener)"], ["void", "org.eclipse.jetty.server.HttpInput.failed(java.lang.Throwable)"], ["void", "org.eclipse.jetty.server.HttpInput.run()"], ["org.eclipse.jetty.server.HttpOutput$ReadableByteChannelWritingCB", "org.eclipse.jetty.server.HttpOutput$ReadableByteChannelWritingCB(org.eclipse.jetty.server.HttpOutput, java.nio.channels.ReadableByteChannel, org.eclipse.jetty.util.Callback)"], ["void", "org.eclipse.jetty.server.HttpOutput$ReadableByteChannelWritingCB.onCompleteFailure(java.lang.Throwable)"], ["org.eclipse.jetty.server.LowResourceMonitor", "org.eclipse.jetty.server.LowResourceMonitor(org.eclipse.jetty.server.Server)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor.isLowOnResources()"], ["java.lang.String", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesReasons()"], ["long", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesStarted()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMonitoredConnectors(java.util.Collection<org.eclipse.jetty.server.Connector>)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getPeriod()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setPeriod(int)"], ["boolean", "org.eclipse.jetty.server.LowResourceMonitor.getMonitorThreads()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMonitorThreads(boolean)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getMaxConnections()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxConnections(int)"], ["long", "org.eclipse.jetty.server.LowResourceMonitor.getMaxMemory()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxMemory(long)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getLowResourcesIdleTimeout()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setLowResourcesIdleTimeout(int)"], ["int", "org.eclipse.jetty.server.LowResourceMonitor.getMaxLowResourcesTime()"], ["void", "org.eclipse.jetty.server.LowResourceMonitor.setMaxLowResourcesTime(int)"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.Request(org.eclipse.jetty.server.HttpChannel<?>, org.eclipse.jetty.server.HttpInput<?>)"], ["org.eclipse.jetty.http.HttpFields", "org.eclipse.jetty.server.Request.getHttpFields()"], ["void", "org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.Request.extractParameters()"], ["void", "org.eclipse.jetty.server.Request.extractFormParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.getAsyncContext()"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.Request.getHttpChannelState()"], ["java.lang.Object", "org.eclipse.jetty.server.Request.getAttribute(java.lang.String)"], ["org.eclipse.jetty.util.Attributes", "org.eclipse.jetty.server.Request.getAttributes()"], ["org.eclipse.jetty.server.Authentication", "org.eclipse.jetty.server.Request.getAuthentication()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getAuthType()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getCharacterEncoding()"], ["int", "org.eclipse.jetty.server.Request.getContentLength()"], ["long", "org.eclipse.jetty.server.Request.getContentLengthLong()"], ["long", "org.eclipse.jetty.server.Request.getContentRead()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getContentType()"], ["org.eclipse.jetty.server.handler.ContextHandler$Context", "org.eclipse.jetty.server.Request.getContext()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getContextPath()"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.Request.getCookies()"], ["long", "org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)"], ["javax.servlet.DispatcherType", "org.eclipse.jetty.server.Request.getDispatcherType()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.Request.getInputState()"], ["javax.servlet.ServletInputStream", "org.eclipse.jetty.server.Request.getInputStream()"], ["int", "org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)"], ["java.util.Locale", "org.eclipse.jetty.server.Request.getLocale()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getLocalAddr()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getLocalName()"], ["int", "org.eclipse.jetty.server.Request.getLocalPort()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getMethod()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.eclipse.jetty.server.Request.getParameterMap()"], ["java.lang.String[]", "org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setQueryParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["void", "org.eclipse.jetty.server.Request.setContentParameters(org.eclipse.jetty.util.MultiMap<java.lang.String>)"], ["void", "org.eclipse.jetty.server.Request.resetParameters()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getPathInfo()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getPathTranslated()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getProtocol()"], ["org.eclipse.jetty.http.HttpVersion", "org.eclipse.jetty.server.Request.getHttpVersion()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getQueryEncoding()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getQueryString()"], ["java.io.BufferedReader", "org.eclipse.jetty.server.Request.getReader()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRealPath(java.lang.String)"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.Request.getRemoteInetSocketAddress()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteAddr()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteHost()"], ["int", "org.eclipse.jetty.server.Request.getRemotePort()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRemoteUser()"], ["javax.servlet.RequestDispatcher", "org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRequestedSessionId()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getRequestURI()"], ["java.lang.StringBuffer", "org.eclipse.jetty.server.Request.getRequestURL()"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.Request.getResponse()"], ["java.lang.StringBuilder", "org.eclipse.jetty.server.Request.getRootURL()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getScheme()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServerName()"], ["int", "org.eclipse.jetty.server.Request.getServerPort()"], ["javax.servlet.ServletContext", "org.eclipse.jetty.server.Request.getServletContext()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServletName()"], ["java.lang.String", "org.eclipse.jetty.server.Request.getServletPath()"], ["javax.servlet.ServletResponse", "org.eclipse.jetty.server.Request.getServletResponse()"], ["java.lang.String", "org.eclipse.jetty.server.Request.changeSessionId()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.getSession()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.getSession(boolean)"], ["org.eclipse.jetty.server.SessionManager", "org.eclipse.jetty.server.Request.getSessionManager()"], ["long", "org.eclipse.jetty.server.Request.getTimeStamp()"], ["org.eclipse.jetty.http.HttpURI", "org.eclipse.jetty.server.Request.getUri()"], ["org.eclipse.jetty.server.UserIdentity", "org.eclipse.jetty.server.Request.getUserIdentity()"], ["org.eclipse.jetty.server.UserIdentity", "org.eclipse.jetty.server.Request.getResolvedUserIdentity()"], ["org.eclipse.jetty.server.UserIdentity$Scope", "org.eclipse.jetty.server.Request.getUserIdentityScope()"], ["java.security.Principal", "org.eclipse.jetty.server.Request.getUserPrincipal()"], ["boolean", "org.eclipse.jetty.server.Request.isHandled()"], ["boolean", "org.eclipse.jetty.server.Request.isAsyncStarted()"], ["boolean", "org.eclipse.jetty.server.Request.isAsyncSupported()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()"], ["boolean", "org.eclipse.jetty.server.Request.isRequestedSessionIdValid()"], ["boolean", "org.eclipse.jetty.server.Request.isSecure()"], ["void", "org.eclipse.jetty.server.Request.setSecure(boolean)"], ["boolean", "org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)"], ["void", "org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)"], ["void", "org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.Request.setAsyncSupported(boolean)"], ["void", "org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)"], ["void", "org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)"], ["void", "org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setContentType(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)"], ["boolean", "org.eclipse.jetty.server.Request.takeNewContext()"], ["void", "org.eclipse.jetty.server.Request.setContextPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])"], ["void", "org.eclipse.jetty.server.Request.setDispatcherType(javax.servlet.DispatcherType)"], ["void", "org.eclipse.jetty.server.Request.setHandled(boolean)"], ["void", "org.eclipse.jetty.server.Request.setMethod(org.eclipse.jetty.http.HttpMethod, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.Request.isHead()"], ["void", "org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setHttpVersion(org.eclipse.jetty.http.HttpVersion)"], ["void", "org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setQueryString(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setRemoteAddr(java.net.InetSocketAddress)"], ["void", "org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean)"], ["void", "org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setScheme(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setServerName(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setServerPort(int)"], ["void", "org.eclipse.jetty.server.Request.setServletPath(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)"], ["void", "org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager)"], ["void", "org.eclipse.jetty.server.Request.setTimeStamp(long)"], ["void", "org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)"], ["void", "org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.startAsync()"], ["javax.servlet.AsyncContext", "org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["java.lang.String", "org.eclipse.jetty.server.Request.toString()"], ["boolean", "org.eclipse.jetty.server.Request.authenticate(javax.servlet.http.HttpServletResponse)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.Request.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.login(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.Request.logout()"], ["void", "org.eclipse.jetty.server.Request.mergeQueryParameters(java.lang.String, boolean)"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.eclipse.jetty.server.Request.upgrade(java.lang.Class<T>)"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache$Content.getKey()"], ["boolean", "org.eclipse.jetty.server.ResourceCache$Content.isCached()"], ["boolean", "org.eclipse.jetty.server.ResourceCache$Content.isMiss()"], ["org.eclipse.jetty.util.resource.Resource", "org.eclipse.jetty.server.ResourceCache$Content.getResource()"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache$Content.getETag()"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache$Content.getLastModified()"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache$Content.getContentType()"], ["void", "org.eclipse.jetty.server.ResourceCache$Content.release()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.ResourceCache$Content.getIndirectBuffer()"], ["java.nio.ByteBuffer", "org.eclipse.jetty.server.ResourceCache$Content.getDirectBuffer()"], ["long", "org.eclipse.jetty.server.ResourceCache$Content.getContentLength()"], ["java.io.InputStream", "org.eclipse.jetty.server.ResourceCache$Content.getInputStream()"], ["java.nio.channels.ReadableByteChannel", "org.eclipse.jetty.server.ResourceCache$Content.getReadableByteChannel()"], ["java.lang.String", "org.eclipse.jetty.server.ResourceCache$Content.toString()"], ["org.eclipse.jetty.server.HttpChannel", "org.eclipse.jetty.server.HttpChannel(org.eclipse.jetty.server.Connector, org.eclipse.jetty.server.HttpConfiguration, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.HttpTransport, org.eclipse.jetty.server.HttpInput<T>)"], ["org.eclipse.jetty.server.HttpChannelState", "org.eclipse.jetty.server.HttpChannel.getState()"], ["org.eclipse.jetty.http.HttpVersion", "org.eclipse.jetty.server.HttpChannel.getHttpVersion()"], ["int", "org.eclipse.jetty.server.HttpChannel.getRequests()"], ["org.eclipse.jetty.server.Connector", "org.eclipse.jetty.server.HttpChannel.getConnector()"], ["org.eclipse.jetty.server.HttpTransport", "org.eclipse.jetty.server.HttpChannel.getHttpTransport()"], ["long", "org.eclipse.jetty.server.HttpChannel.getIdleTimeout()"], ["void", "org.eclipse.jetty.server.HttpChannel.setIdleTimeout(long)"], ["org.eclipse.jetty.io.ByteBufferPool", "org.eclipse.jetty.server.HttpChannel.getByteBufferPool()"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpChannel.getHttpConfiguration()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.HttpChannel.getServer()"], ["org.eclipse.jetty.server.Request", "org.eclipse.jetty.server.HttpChannel.getRequest()"], ["org.eclipse.jetty.server.Response", "org.eclipse.jetty.server.HttpChannel.getResponse()"], ["org.eclipse.jetty.io.EndPoint", "org.eclipse.jetty.server.HttpChannel.getEndPoint()"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.HttpChannel.getLocalAddress()"], ["java.net.InetSocketAddress", "org.eclipse.jetty.server.HttpChannel.getRemoteAddress()"], ["int", "org.eclipse.jetty.server.HttpChannel.getHeaderCacheSize()"], ["void", "org.eclipse.jetty.server.HttpChannel.continue100(int)"], ["void", "org.eclipse.jetty.server.HttpChannel.reset()"], ["void", "org.eclipse.jetty.server.HttpChannel.run()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.handle()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isExpecting100Continue()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isExpecting102Processing()"], ["java.lang.String", "org.eclipse.jetty.server.HttpChannel.toString()"], ["void", "org.eclipse.jetty.server.HttpChannel.proxied(java.lang.String, java.lang.String, java.lang.String, int, int)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.startRequest(org.eclipse.jetty.http.HttpMethod, java.lang.String, java.nio.ByteBuffer, org.eclipse.jetty.http.HttpVersion)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.parsedHeader(org.eclipse.jetty.http.HttpField)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.parsedHostHeader(java.lang.String, int)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.headerComplete()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.content(T)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.messageComplete()"], ["void", "org.eclipse.jetty.server.HttpChannel.earlyEOF()"], ["void", "org.eclipse.jetty.server.HttpChannel.badMessage(int, java.lang.String)"], ["boolean", "org.eclipse.jetty.server.HttpChannel.isCommitted()"], ["org.eclipse.jetty.util.thread.Scheduler", "org.eclipse.jetty.server.HttpChannel.getScheduler()"], ["boolean", "org.eclipse.jetty.server.HttpChannel.useDirectBuffers()"], ["void", "org.eclipse.jetty.server.HttpChannel.abort()"], ["org.eclipse.jetty.server.Response$OutputType[]", "org.eclipse.jetty.server.Response$OutputType.values()"], ["org.eclipse.jetty.server.Response$OutputType", "org.eclipse.jetty.server.Response$OutputType.valueOf(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.Authentication$1.toString()"], ["void", "org.eclipse.jetty.server.HttpInput$1.waitForContent(org.eclipse.jetty.server.HttpInput<?>)"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$1.toString()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server()"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(int)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(java.net.InetSocketAddress)"], ["org.eclipse.jetty.server.Server", "org.eclipse.jetty.server.Server(org.eclipse.jetty.util.thread.ThreadPool)"], ["java.lang.String", "org.eclipse.jetty.server.Server.getVersion()"], ["boolean", "org.eclipse.jetty.server.Server.getStopAtShutdown()"], ["void", "org.eclipse.jetty.server.Server.setStopTimeout(long)"], ["void", "org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)"], ["org.eclipse.jetty.server.Connector[]", "org.eclipse.jetty.server.Server.getConnectors()"], ["void", "org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)"], ["void", "org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)"], ["void", "org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])"], ["org.eclipse.jetty.util.thread.ThreadPool", "org.eclipse.jetty.server.Server.getThreadPool()"], ["boolean", "org.eclipse.jetty.server.Server.isDumpAfterStart()"], ["void", "org.eclipse.jetty.server.Server.setDumpAfterStart(boolean)"], ["boolean", "org.eclipse.jetty.server.Server.isDumpBeforeStop()"], ["void", "org.eclipse.jetty.server.Server.setDumpBeforeStop(boolean)"], ["org.eclipse.jetty.http.HttpField", "org.eclipse.jetty.server.Server.getDateField()"], ["void", "org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpChannel<?>)"], ["void", "org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpChannel<?>)"], ["void", "org.eclipse.jetty.server.Server.join()"], ["org.eclipse.jetty.server.SessionIdManager", "org.eclipse.jetty.server.Server.getSessionIdManager()"], ["void", "org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)"], ["void", "org.eclipse.jetty.server.Server.clearAttributes()"], ["java.lang.Object", "org.eclipse.jetty.server.Server.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)"], ["java.net.URI", "org.eclipse.jetty.server.Server.getURI()"], ["java.lang.String", "org.eclipse.jetty.server.Server.toString()"], ["void", "org.eclipse.jetty.server.Server.dump(java.lang.Appendable, java.lang.String)"], ["void", "org.eclipse.jetty.server.Server.main(java.lang.String...)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnectionFactory.getProtocol()"], ["int", "org.eclipse.jetty.server.AbstractConnectionFactory.getInputBufferSize()"], ["void", "org.eclipse.jetty.server.AbstractConnectionFactory.setInputBufferSize(int)"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnectionFactory.toString()"], ["org.eclipse.jetty.server.ConnectionFactory[]", "org.eclipse.jetty.server.AbstractConnectionFactory.getFactories(org.eclipse.jetty.util.ssl.SslContextFactory, org.eclipse.jetty.server.ConnectionFactory...)"], ["int", "org.eclipse.jetty.server.HttpInput$3.noContent()"], ["boolean", "org.eclipse.jetty.server.HttpInput$3.isEOF()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$3.toString()"], ["boolean", "org.eclipse.jetty.server.HttpInput$4.isEOF()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$4.toString()"], ["org.eclipse.jetty.server.Dispatcher", "org.eclipse.jetty.server.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)"], ["org.eclipse.jetty.server.Dispatcher", "org.eclipse.jetty.server.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["int", "org.eclipse.jetty.server.HttpInput$2.noContent()"], ["java.lang.String", "org.eclipse.jetty.server.HttpInput$2.toString()"], ["java.lang.Object", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.clearAttributes()"], ["void", "org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)"], ["void", "org.eclipse.jetty.server.LowResourceMonitor$1.run()"], ["void", "org.eclipse.jetty.server.AbstractConnector$Acceptor.run()"], ["java.lang.String", "org.eclipse.jetty.server.AbstractConnector$Acceptor.toString()"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog()"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog(java.util.concurrent.BlockingQueue<java.lang.String>)"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog(java.lang.String)"], ["org.eclipse.jetty.server.AsyncNCSARequestLog", "org.eclipse.jetty.server.AsyncNCSARequestLog(java.lang.String, java.util.concurrent.BlockingQueue<java.lang.String>)"], ["void", "org.eclipse.jetty.server.AsyncNCSARequestLog.write(java.lang.String)"], ["org.eclipse.jetty.server.HttpConnectionFactory", "org.eclipse.jetty.server.HttpConnectionFactory()"], ["org.eclipse.jetty.server.HttpConnectionFactory", "org.eclipse.jetty.server.HttpConnectionFactory(org.eclipse.jetty.server.HttpConfiguration)"], ["org.eclipse.jetty.server.HttpConfiguration", "org.eclipse.jetty.server.HttpConnectionFactory.getHttpConfiguration()"], ["org.eclipse.jetty.io.Connection", "org.eclipse.jetty.server.HttpConnectionFactory.newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint)"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.onOpen()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.onFillable()"], ["void", "org.eclipse.jetty.server.NegotiatingServerConnection.close()"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException()"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.String, java.lang.Throwable)"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.String)"], ["org.eclipse.jetty.server.QuietServletException", "org.eclipse.jetty.server.QuietServletException(java.lang.Throwable)"], ["org.eclipse.jetty.server.Utf8HttpWriter", "org.eclipse.jetty.server.Utf8HttpWriter(org.eclipse.jetty.server.HttpOutput)"], ["void", "org.eclipse.jetty.server.Utf8HttpWriter.write(char[], int, int)"], ["org.eclipse.jetty.server.LocalConnector$LocalEndPoint", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint(org.eclipse.jetty.server.LocalConnector)"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.addInput(java.lang.String)"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.close()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.onClose()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.shutdownOutput()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.waitUntilClosed()"], ["void", "org.eclipse.jetty.server.LocalConnector$LocalEndPoint.waitUntilClosedOrIdleFor(long, java.util.concurrent.TimeUnit)"], ["org.eclipse.jetty.server.ServletRequestHttpWrapper", "org.eclipse.jetty.server.ServletRequestHttpWrapper(javax.servlet.ServletRequest)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getAuthType()"], ["javax.servlet.http.Cookie[]", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getCookies()"], ["long", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getDateHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getHeader(java.lang.String)"], ["int", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getIntHeader(java.lang.String)"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getMethod()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPathInfo()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPathTranslated()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getContextPath()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getQueryString()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRemoteUser()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isUserInRole(java.lang.String)"], ["java.security.Principal", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getUserPrincipal()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestedSessionId()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestURI()"], ["java.lang.StringBuffer", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getRequestURL()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getServletPath()"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getSession(boolean)"], ["javax.servlet.http.HttpSession", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getSession()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdValid()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromCookie()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromURL()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.isRequestedSessionIdFromUrl()"], ["boolean", "org.eclipse.jetty.server.ServletRequestHttpWrapper.authenticate(javax.servlet.http.HttpServletResponse)"], ["javax.servlet.http.Part", "org.eclipse.jetty.server.ServletRequestHttpWrapper.getPart(java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletRequestHttpWrapper.login(java.lang.String, java.lang.String)"], ["void", "org.eclipse.jetty.server.ServletRequestHttpWrapper.logout()"], ["java.lang.String", "org.eclipse.jetty.server.ServletRequestHttpWrapper.changeSessionId()"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.eclipse.jetty.server.ServletRequestHttpWrapper.upgrade(java.lang.Class<T>)"]]}