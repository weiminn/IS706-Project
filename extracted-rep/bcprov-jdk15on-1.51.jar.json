{"bcprov-jdk15on-1.51.jar": [["org.bouncycastle.LICENSE", "org.bouncycastle.LICENSE()", "public org.bouncycastle.LICENSE()"], ["void", "org.bouncycastle.LICENSE.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["org.bouncycastle.apache.bzip2.CBZip2InputStream", "org.bouncycastle.apache.bzip2.CBZip2InputStream(java.io.InputStream)", "public org.bouncycastle.apache.bzip2.CBZip2InputStream(java.io.InputStream) throws java.io.IOException"], ["int", "org.bouncycastle.apache.bzip2.CBZip2InputStream.read()", "public int read()"], ["org.bouncycastle.apache.bzip2.CBZip2OutputStream", "org.bouncycastle.apache.bzip2.CBZip2OutputStream(java.io.OutputStream)", "public org.bouncycastle.apache.bzip2.CBZip2OutputStream(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.apache.bzip2.CBZip2OutputStream", "org.bouncycastle.apache.bzip2.CBZip2OutputStream(java.io.OutputStream, int)", "public org.bouncycastle.apache.bzip2.CBZip2OutputStream(java.io.OutputStream, int) throws java.io.IOException"], ["void", "org.bouncycastle.apache.bzip2.CBZip2OutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.apache.bzip2.CBZip2OutputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.apache.bzip2.CBZip2OutputStream.finish()", "public void finish() throws java.io.IOException"], ["void", "org.bouncycastle.apache.bzip2.CBZip2OutputStream.flush()", "public void flush() throws java.io.IOException"], ["org.bouncycastle.apache.bzip2.CRC", "org.bouncycastle.apache.bzip2.CRC()", "public org.bouncycastle.apache.bzip2.CRC()"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.ASN1Boolean.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Boolean getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.ASN1Boolean.getInstance(boolean)", "public static org.bouncycastle.asn1.ASN1Boolean getInstance(boolean)"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.ASN1Boolean.getInstance(int)", "public static org.bouncycastle.asn1.ASN1Boolean getInstance(int)"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.ASN1Boolean.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1Boolean getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.ASN1Boolean(boolean)", "public org.bouncycastle.asn1.ASN1Boolean(boolean)"], ["boolean", "org.bouncycastle.asn1.ASN1Boolean.isTrue()", "public boolean isTrue()"], ["int", "org.bouncycastle.asn1.ASN1Boolean.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1Boolean.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1EncodableVector", "org.bouncycastle.asn1.ASN1EncodableVector()", "public org.bouncycastle.asn1.ASN1EncodableVector()"], ["void", "org.bouncycastle.asn1.ASN1EncodableVector.add(org.bouncycastle.asn1.ASN1Encodable)", "public void add(org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.asn1.ASN1EncodableVector.addAll(org.bouncycastle.asn1.ASN1EncodableVector)", "public void addAll(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1EncodableVector.get(int)", "public org.bouncycastle.asn1.ASN1Encodable get(int)"], ["int", "org.bouncycastle.asn1.ASN1EncodableVector.size()", "public int size()"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.ASN1Enumerated.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.ASN1Enumerated.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1Enumerated getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.ASN1Enumerated(int)", "public org.bouncycastle.asn1.ASN1Enumerated(int)"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.ASN1Enumerated(java.math.BigInteger)", "public org.bouncycastle.asn1.ASN1Enumerated(java.math.BigInteger)"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.ASN1Enumerated(byte[])", "public org.bouncycastle.asn1.ASN1Enumerated(byte[])"], ["java.math.BigInteger", "org.bouncycastle.asn1.ASN1Enumerated.getValue()", "public java.math.BigInteger getValue()"], ["int", "org.bouncycastle.asn1.ASN1Enumerated.hashCode()", "public int hashCode()"], ["java.lang.Throwable", "org.bouncycastle.asn1.ASN1Exception.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ASN1GeneralizedTime.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ASN1GeneralizedTime.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ASN1GeneralizedTime(java.lang.String)", "public org.bouncycastle.asn1.ASN1GeneralizedTime(java.lang.String)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ASN1GeneralizedTime(java.util.Date)", "public org.bouncycastle.asn1.ASN1GeneralizedTime(java.util.Date)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ASN1GeneralizedTime(java.util.Date, java.util.Locale)", "public org.bouncycastle.asn1.ASN1GeneralizedTime(java.util.Date, java.util.Locale)"], ["java.lang.String", "org.bouncycastle.asn1.ASN1GeneralizedTime.getTimeString()", "public java.lang.String getTimeString()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1GeneralizedTime.getTime()", "public java.lang.String getTime()"], ["java.util.Date", "org.bouncycastle.asn1.ASN1GeneralizedTime.getDate()", "public java.util.Date getDate() throws java.text.ParseException"], ["int", "org.bouncycastle.asn1.ASN1GeneralizedTime.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.ASN1Generator", "org.bouncycastle.asn1.ASN1Generator(java.io.OutputStream)", "public org.bouncycastle.asn1.ASN1Generator(java.io.OutputStream)"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream)", "public org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream)"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(byte[])", "public org.bouncycastle.asn1.ASN1InputStream(byte[])"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(byte[], boolean)", "public org.bouncycastle.asn1.ASN1InputStream(byte[], boolean)"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, int)", "public org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, int)"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, boolean)", "public org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, boolean)"], ["org.bouncycastle.asn1.ASN1InputStream", "org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, int, boolean)", "public org.bouncycastle.asn1.ASN1InputStream(java.io.InputStream, int, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1InputStream.readObject()", "public org.bouncycastle.asn1.ASN1Primitive readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ASN1Integer.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ASN1Integer.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1Integer getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ASN1Integer(long)", "public org.bouncycastle.asn1.ASN1Integer(long)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ASN1Integer(java.math.BigInteger)", "public org.bouncycastle.asn1.ASN1Integer(java.math.BigInteger)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ASN1Integer(byte[])", "public org.bouncycastle.asn1.ASN1Integer(byte[])"], ["java.math.BigInteger", "org.bouncycastle.asn1.ASN1Integer.getValue()", "public java.math.BigInteger getValue()"], ["java.math.BigInteger", "org.bouncycastle.asn1.ASN1Integer.getPositiveValue()", "public java.math.BigInteger getPositiveValue()"], ["int", "org.bouncycastle.asn1.ASN1Integer.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1Integer.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Null", "org.bouncycastle.asn1.ASN1Null()", "public org.bouncycastle.asn1.ASN1Null()"], ["org.bouncycastle.asn1.ASN1Null", "org.bouncycastle.asn1.ASN1Null.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)"], ["int", "org.bouncycastle.asn1.ASN1Null.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1Null.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Object", "org.bouncycastle.asn1.ASN1Object()", "public org.bouncycastle.asn1.ASN1Object()"], ["byte[]", "org.bouncycastle.asn1.ASN1Object.getEncoded()", "public byte[] getEncoded() throws java.io.IOException"], ["byte[]", "org.bouncycastle.asn1.ASN1Object.getEncoded(java.lang.String)", "public byte[] getEncoded(java.lang.String) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.ASN1Object.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.ASN1Object.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Object.toASN1Object()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Object()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ASN1ObjectIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ASN1ObjectIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ASN1ObjectIdentifier(java.lang.String)", "public org.bouncycastle.asn1.ASN1ObjectIdentifier(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.ASN1ObjectIdentifier.getId()", "public java.lang.String getId()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ASN1ObjectIdentifier.branch(java.lang.String)", "public org.bouncycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)"], ["boolean", "org.bouncycastle.asn1.ASN1ObjectIdentifier.on(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public boolean on(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["int", "org.bouncycastle.asn1.ASN1ObjectIdentifier.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1ObjectIdentifier.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ASN1OctetString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ASN1OctetString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ASN1OctetString(byte[])", "public org.bouncycastle.asn1.ASN1OctetString(byte[])"], ["java.io.InputStream", "org.bouncycastle.asn1.ASN1OctetString.getOctetStream()", "public java.io.InputStream getOctetStream()"], ["org.bouncycastle.asn1.ASN1OctetStringParser", "org.bouncycastle.asn1.ASN1OctetString.parser()", "public org.bouncycastle.asn1.ASN1OctetStringParser parser()"], ["byte[]", "org.bouncycastle.asn1.ASN1OctetString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.ASN1OctetString.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1OctetString.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1OctetString.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream", "org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream(org.bouncycastle.asn1.ASN1OutputStream, java.io.OutputStream)", "public org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream(org.bouncycastle.asn1.ASN1OutputStream, java.io.OutputStream)"], ["void", "org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1OutputStream", "org.bouncycastle.asn1.ASN1OutputStream(java.io.OutputStream)", "public org.bouncycastle.asn1.ASN1OutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.asn1.ASN1OutputStream.writeObject(org.bouncycastle.asn1.ASN1Encodable)", "public void writeObject(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.ASN1OutputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.asn1.ASN1OutputStream.flush()", "public void flush() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1ParsingException", "org.bouncycastle.asn1.ASN1ParsingException(java.lang.String)", "public org.bouncycastle.asn1.ASN1ParsingException(java.lang.String)"], ["org.bouncycastle.asn1.ASN1ParsingException", "org.bouncycastle.asn1.ASN1ParsingException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.asn1.ASN1ParsingException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.asn1.ASN1ParsingException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Primitive.fromByteArray(byte[])", "public static org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[]) throws java.io.IOException"], ["boolean", "org.bouncycastle.asn1.ASN1Primitive.equals(java.lang.Object)", "public final boolean equals(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Primitive.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1Sequence$1.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Sequence$1.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Sequence$1.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ASN1Sequence.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ASN1Sequence.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.asn1.ASN1Sequence.toArray()", "public org.bouncycastle.asn1.ASN1Encodable[] toArray()"], ["java.util.Enumeration", "org.bouncycastle.asn1.ASN1Sequence.getObjects()", "public java.util.Enumeration getObjects()"], ["org.bouncycastle.asn1.ASN1SequenceParser", "org.bouncycastle.asn1.ASN1Sequence.parser()", "public org.bouncycastle.asn1.ASN1SequenceParser parser()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1Sequence.getObjectAt(int)", "public org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)"], ["int", "org.bouncycastle.asn1.ASN1Sequence.size()", "public int size()"], ["int", "org.bouncycastle.asn1.ASN1Sequence.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1Sequence.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1Set$1.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Set$1.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1Set$1.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.ASN1Set.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.ASN1Set.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["java.util.Enumeration", "org.bouncycastle.asn1.ASN1Set.getObjects()", "public java.util.Enumeration getObjects()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1Set.getObjectAt(int)", "public org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)"], ["int", "org.bouncycastle.asn1.ASN1Set.size()", "public int size()"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.asn1.ASN1Set.toArray()", "public org.bouncycastle.asn1.ASN1Encodable[] toArray()"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.ASN1Set.parser()", "public org.bouncycastle.asn1.ASN1SetParser parser()"], ["int", "org.bouncycastle.asn1.ASN1Set.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1Set.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1StreamParser", "org.bouncycastle.asn1.ASN1StreamParser(java.io.InputStream)", "public org.bouncycastle.asn1.ASN1StreamParser(java.io.InputStream)"], ["org.bouncycastle.asn1.ASN1StreamParser", "org.bouncycastle.asn1.ASN1StreamParser(java.io.InputStream, int)", "public org.bouncycastle.asn1.ASN1StreamParser(java.io.InputStream, int)"], ["org.bouncycastle.asn1.ASN1StreamParser", "org.bouncycastle.asn1.ASN1StreamParser(byte[])", "public org.bouncycastle.asn1.ASN1StreamParser(byte[])"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1StreamParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1TaggedObject", "org.bouncycastle.asn1.ASN1TaggedObject.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1TaggedObject getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1TaggedObject", "org.bouncycastle.asn1.ASN1TaggedObject.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1TaggedObject", "org.bouncycastle.asn1.ASN1TaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.ASN1TaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)"], ["int", "org.bouncycastle.asn1.ASN1TaggedObject.hashCode()", "public int hashCode()"], ["int", "org.bouncycastle.asn1.ASN1TaggedObject.getTagNo()", "public int getTagNo()"], ["boolean", "org.bouncycastle.asn1.ASN1TaggedObject.isExplicit()", "public boolean isExplicit()"], ["boolean", "org.bouncycastle.asn1.ASN1TaggedObject.isEmpty()", "public boolean isEmpty()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1TaggedObject.getObject()", "public org.bouncycastle.asn1.ASN1Primitive getObject()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ASN1TaggedObject.getObjectParser(int, boolean)", "public org.bouncycastle.asn1.ASN1Encodable getObjectParser(int, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ASN1TaggedObject.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1TaggedObject.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.ASN1UTCTime.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.ASN1UTCTime.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ASN1UTCTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.ASN1UTCTime(java.lang.String)", "public org.bouncycastle.asn1.ASN1UTCTime(java.lang.String)"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.ASN1UTCTime(java.util.Date)", "public org.bouncycastle.asn1.ASN1UTCTime(java.util.Date)"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.ASN1UTCTime(java.util.Date, java.util.Locale)", "public org.bouncycastle.asn1.ASN1UTCTime(java.util.Date, java.util.Locale)"], ["java.util.Date", "org.bouncycastle.asn1.ASN1UTCTime.getDate()", "public java.util.Date getDate() throws java.text.ParseException"], ["java.util.Date", "org.bouncycastle.asn1.ASN1UTCTime.getAdjustedDate()", "public java.util.Date getAdjustedDate() throws java.text.ParseException"], ["java.lang.String", "org.bouncycastle.asn1.ASN1UTCTime.getTime()", "public java.lang.String getTime()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1UTCTime.getAdjustedTime()", "public java.lang.String getAdjustedTime()"], ["int", "org.bouncycastle.asn1.ASN1UTCTime.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.ASN1UTCTime.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.BERApplicationSpecific", "org.bouncycastle.asn1.BERApplicationSpecific(int, org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.BERApplicationSpecific(int, org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.BERApplicationSpecificParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERApplicationSpecificParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERApplicationSpecificParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.BERConstructedOctetString", "org.bouncycastle.asn1.BERConstructedOctetString(byte[])", "public org.bouncycastle.asn1.BERConstructedOctetString(byte[])"], ["org.bouncycastle.asn1.BERConstructedOctetString", "org.bouncycastle.asn1.BERConstructedOctetString(java.util.Vector)", "public org.bouncycastle.asn1.BERConstructedOctetString(java.util.Vector)"], ["org.bouncycastle.asn1.BERConstructedOctetString", "org.bouncycastle.asn1.BERConstructedOctetString(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.BERConstructedOctetString(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.BERConstructedOctetString", "org.bouncycastle.asn1.BERConstructedOctetString(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.BERConstructedOctetString(org.bouncycastle.asn1.ASN1Encodable)"], ["byte[]", "org.bouncycastle.asn1.BERConstructedOctetString.getOctets()", "public byte[] getOctets()"], ["java.util.Enumeration", "org.bouncycastle.asn1.BERConstructedOctetString.getObjects()", "public java.util.Enumeration getObjects()"], ["org.bouncycastle.asn1.BEROctetString", "org.bouncycastle.asn1.BERConstructedOctetString.fromSequence(org.bouncycastle.asn1.ASN1Sequence)", "public static org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.BERGenerator", "org.bouncycastle.asn1.BERGenerator(java.io.OutputStream, int, boolean)", "public org.bouncycastle.asn1.BERGenerator(java.io.OutputStream, int, boolean)"], ["java.io.OutputStream", "org.bouncycastle.asn1.BERGenerator.getRawOutputStream()", "public java.io.OutputStream getRawOutputStream()"], ["boolean", "org.bouncycastle.asn1.BEROctetString$1.hasMoreElements()", "public boolean hasMoreElements()"], ["java.lang.Object", "org.bouncycastle.asn1.BEROctetString$1.nextElement()", "public java.lang.Object nextElement()"], ["org.bouncycastle.asn1.BEROctetString", "org.bouncycastle.asn1.BEROctetString(byte[])", "public org.bouncycastle.asn1.BEROctetString(byte[])"], ["org.bouncycastle.asn1.BEROctetString", "org.bouncycastle.asn1.BEROctetString(org.bouncycastle.asn1.ASN1OctetString[])", "public org.bouncycastle.asn1.BEROctetString(org.bouncycastle.asn1.ASN1OctetString[])"], ["byte[]", "org.bouncycastle.asn1.BEROctetString.getOctets()", "public byte[] getOctets()"], ["java.util.Enumeration", "org.bouncycastle.asn1.BEROctetString.getObjects()", "public java.util.Enumeration getObjects()"], ["void", "org.bouncycastle.asn1.BEROctetString.encode(org.bouncycastle.asn1.ASN1OutputStream)", "public void encode(org.bouncycastle.asn1.ASN1OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.asn1.BEROctetStringGenerator", "org.bouncycastle.asn1.BEROctetStringGenerator(java.io.OutputStream)", "public org.bouncycastle.asn1.BEROctetStringGenerator(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.asn1.BEROctetStringGenerator", "org.bouncycastle.asn1.BEROctetStringGenerator(java.io.OutputStream, int, boolean)", "public org.bouncycastle.asn1.BEROctetStringGenerator(java.io.OutputStream, int, boolean) throws java.io.IOException"], ["java.io.OutputStream", "org.bouncycastle.asn1.BEROctetStringGenerator.getOctetOutputStream()", "public java.io.OutputStream getOctetOutputStream()"], ["java.io.OutputStream", "org.bouncycastle.asn1.BEROctetStringGenerator.getOctetOutputStream(byte[])", "public java.io.OutputStream getOctetOutputStream(byte[])"], ["java.io.InputStream", "org.bouncycastle.asn1.BEROctetStringParser.getOctetStream()", "public java.io.InputStream getOctetStream()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BEROctetStringParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BEROctetStringParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.BEROutputStream", "org.bouncycastle.asn1.BEROutputStream(java.io.OutputStream)", "public org.bouncycastle.asn1.BEROutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.asn1.BEROutputStream.writeObject(java.lang.Object)", "public void writeObject(java.lang.Object) throws java.io.IOException"], ["org.bouncycastle.asn1.BERSequence", "org.bouncycastle.asn1.BERSequence()", "public org.bouncycastle.asn1.BERSequence()"], ["org.bouncycastle.asn1.BERSequence", "org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.BERSequence", "org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.BERSequence", "org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.BERSequence(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.BERSequenceGenerator", "org.bouncycastle.asn1.BERSequenceGenerator(java.io.OutputStream)", "public org.bouncycastle.asn1.BERSequenceGenerator(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.asn1.BERSequenceGenerator", "org.bouncycastle.asn1.BERSequenceGenerator(java.io.OutputStream, int, boolean)", "public org.bouncycastle.asn1.BERSequenceGenerator(java.io.OutputStream, int, boolean) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.BERSequenceGenerator.addObject(org.bouncycastle.asn1.ASN1Encodable)", "public void addObject(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.BERSequenceGenerator.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.BERSequenceParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERSequenceParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERSequenceParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.BERSet", "org.bouncycastle.asn1.BERSet()", "public org.bouncycastle.asn1.BERSet()"], ["org.bouncycastle.asn1.BERSet", "org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.BERSet", "org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.BERSet", "org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.BERSet(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.BERSetParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERSetParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERSetParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.BERTaggedObject", "org.bouncycastle.asn1.BERTaggedObject(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.BERTaggedObject(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.BERTaggedObject", "org.bouncycastle.asn1.BERTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.BERTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.BERTaggedObject", "org.bouncycastle.asn1.BERTaggedObject(int)", "public org.bouncycastle.asn1.BERTaggedObject(int)"], ["boolean", "org.bouncycastle.asn1.BERTaggedObjectParser.isConstructed()", "public boolean isConstructed()"], ["int", "org.bouncycastle.asn1.BERTaggedObjectParser.getTagNo()", "public int getTagNo()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.BERTaggedObjectParser.getObjectParser(int, boolean)", "public org.bouncycastle.asn1.ASN1Encodable getObjectParser(int, boolean) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERTaggedObjectParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.BERTaggedObjectParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.ConstructedOctetStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.ConstructedOctetStream.read()", "public int read() throws java.io.IOException"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.DERApplicationSpecific(int, byte[])", "public org.bouncycastle.asn1.DERApplicationSpecific(int, byte[])"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.DERApplicationSpecific(boolean, int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERApplicationSpecific(boolean, int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.DERApplicationSpecific.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)"], ["boolean", "org.bouncycastle.asn1.DERApplicationSpecific.isConstructed()", "public boolean isConstructed()"], ["byte[]", "org.bouncycastle.asn1.DERApplicationSpecific.getContents()", "public byte[] getContents()"], ["int", "org.bouncycastle.asn1.DERApplicationSpecific.getApplicationTag()", "public int getApplicationTag()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERApplicationSpecific.getObject()", "public org.bouncycastle.asn1.ASN1Primitive getObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERApplicationSpecific.getObject(int)", "public org.bouncycastle.asn1.ASN1Primitive getObject(int) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.DERApplicationSpecific.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERBMPString", "org.bouncycastle.asn1.DERBMPString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERBMPString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERBMPString", "org.bouncycastle.asn1.DERBMPString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERBMPString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERBMPString", "org.bouncycastle.asn1.DERBMPString(java.lang.String)", "public org.bouncycastle.asn1.DERBMPString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERBMPString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERBMPString.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.asn1.DERBMPString.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString(byte[], int)", "public org.bouncycastle.asn1.DERBitString(byte[], int)"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString(byte[])", "public org.bouncycastle.asn1.DERBitString(byte[])"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString(int)", "public org.bouncycastle.asn1.DERBitString(int)"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.DERBitString(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERBitString(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.asn1.DERBitString.getBytes()", "public byte[] getBytes()"], ["int", "org.bouncycastle.asn1.DERBitString.getPadBits()", "public int getPadBits()"], ["int", "org.bouncycastle.asn1.DERBitString.intValue()", "public int intValue()"], ["int", "org.bouncycastle.asn1.DERBitString.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.DERBitString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERBitString.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.DERBoolean", "org.bouncycastle.asn1.DERBoolean(boolean)", "public org.bouncycastle.asn1.DERBoolean(boolean)"], ["org.bouncycastle.asn1.DEREncodableVector", "org.bouncycastle.asn1.DEREncodableVector()", "public org.bouncycastle.asn1.DEREncodableVector()"], ["org.bouncycastle.asn1.DEREnumerated", "org.bouncycastle.asn1.DEREnumerated(java.math.BigInteger)", "public org.bouncycastle.asn1.DEREnumerated(java.math.BigInteger)"], ["org.bouncycastle.asn1.DEREnumerated", "org.bouncycastle.asn1.DEREnumerated(int)", "public org.bouncycastle.asn1.DEREnumerated(int)"], ["org.bouncycastle.asn1.DERExternal", "org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DERExternal", "org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Primitive, org.bouncycastle.asn1.DERTaggedObject)", "public org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Primitive, org.bouncycastle.asn1.DERTaggedObject)"], ["org.bouncycastle.asn1.DERExternal", "org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Primitive, int, org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.DERExternal(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Primitive, int, org.bouncycastle.asn1.ASN1Primitive)"], ["int", "org.bouncycastle.asn1.DERExternal.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERExternal.getDataValueDescriptor()", "public org.bouncycastle.asn1.ASN1Primitive getDataValueDescriptor()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.DERExternal.getDirectReference()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getDirectReference()"], ["int", "org.bouncycastle.asn1.DERExternal.getEncoding()", "public int getEncoding()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERExternal.getExternalContent()", "public org.bouncycastle.asn1.ASN1Primitive getExternalContent()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.DERExternal.getIndirectReference()", "public org.bouncycastle.asn1.ASN1Integer getIndirectReference()"], ["org.bouncycastle.asn1.DERExternalParser", "org.bouncycastle.asn1.DERExternalParser(org.bouncycastle.asn1.ASN1StreamParser)", "public org.bouncycastle.asn1.DERExternalParser(org.bouncycastle.asn1.ASN1StreamParser)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.DERExternalParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERExternalParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERExternalParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.DERGeneralString", "org.bouncycastle.asn1.DERGeneralString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERGeneralString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERGeneralString", "org.bouncycastle.asn1.DERGeneralString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERGeneralString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERGeneralString", "org.bouncycastle.asn1.DERGeneralString(java.lang.String)", "public org.bouncycastle.asn1.DERGeneralString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERGeneralString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERGeneralString.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERGeneralString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERGeneralString.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERGeneralizedTime", "org.bouncycastle.asn1.DERGeneralizedTime(java.util.Date)", "public org.bouncycastle.asn1.DERGeneralizedTime(java.util.Date)"], ["org.bouncycastle.asn1.DERGeneralizedTime", "org.bouncycastle.asn1.DERGeneralizedTime(java.lang.String)", "public org.bouncycastle.asn1.DERGeneralizedTime(java.lang.String)"], ["org.bouncycastle.asn1.DERGenerator", "org.bouncycastle.asn1.DERGenerator(java.io.OutputStream, int, boolean)", "public org.bouncycastle.asn1.DERGenerator(java.io.OutputStream, int, boolean)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.DERIA5String.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.DERIA5String.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.DERIA5String(java.lang.String)", "public org.bouncycastle.asn1.DERIA5String(java.lang.String)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.DERIA5String(java.lang.String, boolean)", "public org.bouncycastle.asn1.DERIA5String(java.lang.String, boolean)"], ["java.lang.String", "org.bouncycastle.asn1.DERIA5String.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERIA5String.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERIA5String.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERIA5String.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.DERIA5String.isIA5String(java.lang.String)", "public static boolean isIA5String(java.lang.String)"], ["org.bouncycastle.asn1.DERInteger", "org.bouncycastle.asn1.DERInteger(byte[])", "public org.bouncycastle.asn1.DERInteger(byte[])"], ["org.bouncycastle.asn1.DERInteger", "org.bouncycastle.asn1.DERInteger(java.math.BigInteger)", "public org.bouncycastle.asn1.DERInteger(java.math.BigInteger)"], ["org.bouncycastle.asn1.DERInteger", "org.bouncycastle.asn1.DERInteger(long)", "public org.bouncycastle.asn1.DERInteger(long)"], ["org.bouncycastle.asn1.DERNull", "org.bouncycastle.asn1.DERNull()", "public org.bouncycastle.asn1.DERNull()"], ["org.bouncycastle.asn1.DERNumericString", "org.bouncycastle.asn1.DERNumericString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERNumericString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERNumericString", "org.bouncycastle.asn1.DERNumericString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERNumericString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERNumericString", "org.bouncycastle.asn1.DERNumericString(java.lang.String)", "public org.bouncycastle.asn1.DERNumericString(java.lang.String)"], ["org.bouncycastle.asn1.DERNumericString", "org.bouncycastle.asn1.DERNumericString(java.lang.String, boolean)", "public org.bouncycastle.asn1.DERNumericString(java.lang.String, boolean)"], ["java.lang.String", "org.bouncycastle.asn1.DERNumericString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERNumericString.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERNumericString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERNumericString.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.DERNumericString.isNumericString(java.lang.String)", "public static boolean isNumericString(java.lang.String)"], ["org.bouncycastle.asn1.DERObjectIdentifier", "org.bouncycastle.asn1.DERObjectIdentifier(java.lang.String)", "public org.bouncycastle.asn1.DERObjectIdentifier(java.lang.String)"], ["org.bouncycastle.asn1.DEROctetString", "org.bouncycastle.asn1.DEROctetString(byte[])", "public org.bouncycastle.asn1.DEROctetString(byte[])"], ["org.bouncycastle.asn1.DEROctetString", "org.bouncycastle.asn1.DEROctetString(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DEROctetString(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["java.io.InputStream", "org.bouncycastle.asn1.DEROctetStringParser.getOctetStream()", "public java.io.InputStream getOctetStream()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DEROctetStringParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DEROctetStringParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.DEROutputStream", "org.bouncycastle.asn1.DEROutputStream(java.io.OutputStream)", "public org.bouncycastle.asn1.DEROutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.asn1.DEROutputStream.writeObject(org.bouncycastle.asn1.ASN1Encodable)", "public void writeObject(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.DERPrintableString", "org.bouncycastle.asn1.DERPrintableString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERPrintableString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERPrintableString", "org.bouncycastle.asn1.DERPrintableString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERPrintableString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERPrintableString", "org.bouncycastle.asn1.DERPrintableString(java.lang.String)", "public org.bouncycastle.asn1.DERPrintableString(java.lang.String)"], ["org.bouncycastle.asn1.DERPrintableString", "org.bouncycastle.asn1.DERPrintableString(java.lang.String, boolean)", "public org.bouncycastle.asn1.DERPrintableString(java.lang.String, boolean)"], ["java.lang.String", "org.bouncycastle.asn1.DERPrintableString.getString()", "public java.lang.String getString()"], ["byte[]", "org.bouncycastle.asn1.DERPrintableString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERPrintableString.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.asn1.DERPrintableString.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.asn1.DERPrintableString.isPrintableString(java.lang.String)", "public static boolean isPrintableString(java.lang.String)"], ["org.bouncycastle.asn1.DERSequence", "org.bouncycastle.asn1.DERSequence()", "public org.bouncycastle.asn1.DERSequence()"], ["org.bouncycastle.asn1.DERSequence", "org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DERSequence", "org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DERSequence", "org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.DERSequence(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.DERSequenceGenerator", "org.bouncycastle.asn1.DERSequenceGenerator(java.io.OutputStream)", "public org.bouncycastle.asn1.DERSequenceGenerator(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.asn1.DERSequenceGenerator", "org.bouncycastle.asn1.DERSequenceGenerator(java.io.OutputStream, int, boolean)", "public org.bouncycastle.asn1.DERSequenceGenerator(java.io.OutputStream, int, boolean) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.DERSequenceGenerator.addObject(org.bouncycastle.asn1.ASN1Encodable)", "public void addObject(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["java.io.OutputStream", "org.bouncycastle.asn1.DERSequenceGenerator.getRawOutputStream()", "public java.io.OutputStream getRawOutputStream()"], ["void", "org.bouncycastle.asn1.DERSequenceGenerator.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.DERSequenceParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERSequenceParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERSequenceParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.DERSet", "org.bouncycastle.asn1.DERSet()", "public org.bouncycastle.asn1.DERSet()"], ["org.bouncycastle.asn1.DERSet", "org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DERSet", "org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DERSet", "org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.DERSet(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.DERSetParser.readObject()", "public org.bouncycastle.asn1.ASN1Encodable readObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERSetParser.getLoadedObject()", "public org.bouncycastle.asn1.ASN1Primitive getLoadedObject() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.DERSetParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.DERT61String", "org.bouncycastle.asn1.DERT61String.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERT61String getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERT61String", "org.bouncycastle.asn1.DERT61String.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERT61String getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERT61String", "org.bouncycastle.asn1.DERT61String(byte[])", "public org.bouncycastle.asn1.DERT61String(byte[])"], ["org.bouncycastle.asn1.DERT61String", "org.bouncycastle.asn1.DERT61String(java.lang.String)", "public org.bouncycastle.asn1.DERT61String(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERT61String.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERT61String.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERT61String.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERT61String.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERT61UTF8String", "org.bouncycastle.asn1.DERT61UTF8String.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERT61UTF8String getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERT61UTF8String", "org.bouncycastle.asn1.DERT61UTF8String.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERT61UTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERT61UTF8String", "org.bouncycastle.asn1.DERT61UTF8String(byte[])", "public org.bouncycastle.asn1.DERT61UTF8String(byte[])"], ["org.bouncycastle.asn1.DERT61UTF8String", "org.bouncycastle.asn1.DERT61UTF8String(java.lang.String)", "public org.bouncycastle.asn1.DERT61UTF8String(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERT61UTF8String.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERT61UTF8String.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERT61UTF8String.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERT61UTF8String.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERTaggedObject", "org.bouncycastle.asn1.DERTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DERTaggedObject", "org.bouncycastle.asn1.DERTaggedObject(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DERTaggedObject(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DERUTCTime", "org.bouncycastle.asn1.DERUTCTime(java.util.Date)", "public org.bouncycastle.asn1.DERUTCTime(java.util.Date)"], ["org.bouncycastle.asn1.DERUTCTime", "org.bouncycastle.asn1.DERUTCTime(java.lang.String)", "public org.bouncycastle.asn1.DERUTCTime(java.lang.String)"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.DERUTF8String.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERUTF8String getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.DERUTF8String.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERUTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.DERUTF8String(java.lang.String)", "public org.bouncycastle.asn1.DERUTF8String(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERUTF8String.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERUTF8String.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.asn1.DERUTF8String.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERUniversalString", "org.bouncycastle.asn1.DERUniversalString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERUniversalString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERUniversalString", "org.bouncycastle.asn1.DERUniversalString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERUniversalString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERUniversalString", "org.bouncycastle.asn1.DERUniversalString(byte[])", "public org.bouncycastle.asn1.DERUniversalString(byte[])"], ["java.lang.String", "org.bouncycastle.asn1.DERUniversalString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERUniversalString.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERUniversalString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERUniversalString.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DERVisibleString", "org.bouncycastle.asn1.DERVisibleString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.DERVisibleString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERVisibleString", "org.bouncycastle.asn1.DERVisibleString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.DERVisibleString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.DERVisibleString", "org.bouncycastle.asn1.DERVisibleString(java.lang.String)", "public org.bouncycastle.asn1.DERVisibleString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.DERVisibleString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.DERVisibleString.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.DERVisibleString.getOctets()", "public byte[] getOctets()"], ["int", "org.bouncycastle.asn1.DERVisibleString.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.DLOutputStream", "org.bouncycastle.asn1.DLOutputStream(java.io.OutputStream)", "public org.bouncycastle.asn1.DLOutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.asn1.DLOutputStream.writeObject(org.bouncycastle.asn1.ASN1Encodable)", "public void writeObject(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.DLSequence", "org.bouncycastle.asn1.DLSequence()", "public org.bouncycastle.asn1.DLSequence()"], ["org.bouncycastle.asn1.DLSequence", "org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DLSequence", "org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DLSequence", "org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.DLSequence(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.DLSet", "org.bouncycastle.asn1.DLSet()", "public org.bouncycastle.asn1.DLSet()"], ["org.bouncycastle.asn1.DLSet", "org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.DLSet", "org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.DLSet", "org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.DLSet(org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.DLTaggedObject", "org.bouncycastle.asn1.DLTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.DLTaggedObject(boolean, int, org.bouncycastle.asn1.ASN1Encodable)"], ["int", "org.bouncycastle.asn1.DefiniteLengthInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.asn1.DefiniteLengthInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.IndefiniteLengthInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.IndefiniteLengthInputStream.read()", "public int read() throws java.io.IOException"], ["org.bouncycastle.asn1.LazyConstructionEnumeration", "org.bouncycastle.asn1.LazyConstructionEnumeration(byte[])", "public org.bouncycastle.asn1.LazyConstructionEnumeration(byte[])"], ["boolean", "org.bouncycastle.asn1.LazyConstructionEnumeration.hasMoreElements()", "public boolean hasMoreElements()"], ["java.lang.Object", "org.bouncycastle.asn1.LazyConstructionEnumeration.nextElement()", "public java.lang.Object nextElement()"], ["synchronized", "org.bouncycastle.asn1.LazyEncodedSequence.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)", "public synchronized org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)"], ["synchronized", "org.bouncycastle.asn1.LazyEncodedSequence.java.util.Enumeration getObjects()", "public synchronized java.util.Enumeration getObjects()"], ["synchronized", "org.bouncycastle.asn1.LazyEncodedSequence.int size()", "public synchronized int size()"], ["org.bouncycastle.asn1.OIDTokenizer", "org.bouncycastle.asn1.OIDTokenizer(java.lang.String)", "public org.bouncycastle.asn1.OIDTokenizer(java.lang.String)"], ["boolean", "org.bouncycastle.asn1.OIDTokenizer.hasMoreTokens()", "public boolean hasMoreTokens()"], ["java.lang.String", "org.bouncycastle.asn1.OIDTokenizer.nextToken()", "public java.lang.String nextToken()"], ["org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent(org.bouncycastle.asn1.cmp.CMPCertificate, org.bouncycastle.asn1.cmp.CMPCertificate, org.bouncycastle.asn1.cmp.CMPCertificate)", "public org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent(org.bouncycastle.asn1.cmp.CMPCertificate, org.bouncycastle.asn1.cmp.CMPCertificate, org.bouncycastle.asn1.cmp.CMPCertificate)"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent.getOldWithNew()", "public org.bouncycastle.asn1.cmp.CMPCertificate getOldWithNew()"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent.getNewWithOld()", "public org.bouncycastle.asn1.cmp.CMPCertificate getNewWithOld()"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent.getNewWithNew()", "public org.bouncycastle.asn1.cmp.CMPCertificate getNewWithNew()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CMPCertificate(org.bouncycastle.asn1.x509.AttributeCertificate)", "public org.bouncycastle.asn1.cmp.CMPCertificate(org.bouncycastle.asn1.x509.AttributeCertificate)"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CMPCertificate(org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.asn1.cmp.CMPCertificate(org.bouncycastle.asn1.x509.Certificate)"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CMPCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CMPCertificate getInstance(java.lang.Object)"], ["boolean", "org.bouncycastle.asn1.cmp.CMPCertificate.isX509v3PKCert()", "public boolean isX509v3PKCert()"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.asn1.cmp.CMPCertificate.getX509v3PKCert()", "public org.bouncycastle.asn1.x509.Certificate getX509v3PKCert()"], ["org.bouncycastle.asn1.x509.AttributeCertificate", "org.bouncycastle.asn1.cmp.CMPCertificate.getX509v2AttrCert()", "public org.bouncycastle.asn1.x509.AttributeCertificate getX509v2AttrCert()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CMPCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CRLAnnContent", "org.bouncycastle.asn1.cmp.CRLAnnContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CRLAnnContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CRLAnnContent", "org.bouncycastle.asn1.cmp.CRLAnnContent(org.bouncycastle.asn1.x509.CertificateList)", "public org.bouncycastle.asn1.cmp.CRLAnnContent(org.bouncycastle.asn1.x509.CertificateList)"], ["org.bouncycastle.asn1.x509.CertificateList[]", "org.bouncycastle.asn1.cmp.CRLAnnContent.getCertificateLists()", "public org.bouncycastle.asn1.x509.CertificateList[] getCertificateLists()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CRLAnnContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertConfirmContent", "org.bouncycastle.asn1.cmp.CertConfirmContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertConfirmContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CertStatus[]", "org.bouncycastle.asn1.cmp.CertConfirmContent.toCertStatusArray()", "public org.bouncycastle.asn1.cmp.CertStatus[] toCertStatusArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertConfirmContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertOrEncCert", "org.bouncycastle.asn1.cmp.CertOrEncCert.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertOrEncCert getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CertOrEncCert", "org.bouncycastle.asn1.cmp.CertOrEncCert(org.bouncycastle.asn1.cmp.CMPCertificate)", "public org.bouncycastle.asn1.cmp.CertOrEncCert(org.bouncycastle.asn1.cmp.CMPCertificate)"], ["org.bouncycastle.asn1.cmp.CertOrEncCert", "org.bouncycastle.asn1.cmp.CertOrEncCert(org.bouncycastle.asn1.crmf.EncryptedValue)", "public org.bouncycastle.asn1.cmp.CertOrEncCert(org.bouncycastle.asn1.crmf.EncryptedValue)"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.CertOrEncCert.getCertificate()", "public org.bouncycastle.asn1.cmp.CMPCertificate getCertificate()"], ["org.bouncycastle.asn1.crmf.EncryptedValue", "org.bouncycastle.asn1.cmp.CertOrEncCert.getEncryptedCert()", "public org.bouncycastle.asn1.crmf.EncryptedValue getEncryptedCert()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertOrEncCert.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertRepMessage", "org.bouncycastle.asn1.cmp.CertRepMessage.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertRepMessage getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CertRepMessage", "org.bouncycastle.asn1.cmp.CertRepMessage(org.bouncycastle.asn1.cmp.CMPCertificate[], org.bouncycastle.asn1.cmp.CertResponse[])", "public org.bouncycastle.asn1.cmp.CertRepMessage(org.bouncycastle.asn1.cmp.CMPCertificate[], org.bouncycastle.asn1.cmp.CertResponse[])"], ["org.bouncycastle.asn1.cmp.CMPCertificate[]", "org.bouncycastle.asn1.cmp.CertRepMessage.getCaPubs()", "public org.bouncycastle.asn1.cmp.CMPCertificate[] getCaPubs()"], ["org.bouncycastle.asn1.cmp.CertResponse[]", "org.bouncycastle.asn1.cmp.CertRepMessage.getResponse()", "public org.bouncycastle.asn1.cmp.CertResponse[] getResponse()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertRepMessage.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertResponse", "org.bouncycastle.asn1.cmp.CertResponse.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertResponse getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CertResponse", "org.bouncycastle.asn1.cmp.CertResponse(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public org.bouncycastle.asn1.cmp.CertResponse(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["org.bouncycastle.asn1.cmp.CertResponse", "org.bouncycastle.asn1.cmp.CertResponse(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.cmp.CertifiedKeyPair, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cmp.CertResponse(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.cmp.CertifiedKeyPair, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.CertResponse.getCertReqId()", "public org.bouncycastle.asn1.ASN1Integer getCertReqId()"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.CertResponse.getStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getStatus()"], ["org.bouncycastle.asn1.cmp.CertifiedKeyPair", "org.bouncycastle.asn1.cmp.CertResponse.getCertifiedKeyPair()", "public org.bouncycastle.asn1.cmp.CertifiedKeyPair getCertifiedKeyPair()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertResponse.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertStatus", "org.bouncycastle.asn1.cmp.CertStatus(byte[], java.math.BigInteger)", "public org.bouncycastle.asn1.cmp.CertStatus(byte[], java.math.BigInteger)"], ["org.bouncycastle.asn1.cmp.CertStatus", "org.bouncycastle.asn1.cmp.CertStatus(byte[], java.math.BigInteger, org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public org.bouncycastle.asn1.cmp.CertStatus(byte[], java.math.BigInteger, org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["org.bouncycastle.asn1.cmp.CertStatus", "org.bouncycastle.asn1.cmp.CertStatus.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertStatus getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.CertStatus.getCertHash()", "public org.bouncycastle.asn1.ASN1OctetString getCertHash()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.CertStatus.getCertReqId()", "public org.bouncycastle.asn1.ASN1Integer getCertReqId()"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.CertStatus.getStatusInfo()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getStatusInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertStatus.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.CertifiedKeyPair", "org.bouncycastle.asn1.cmp.CertifiedKeyPair.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.CertifiedKeyPair getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.CertifiedKeyPair", "org.bouncycastle.asn1.cmp.CertifiedKeyPair(org.bouncycastle.asn1.cmp.CertOrEncCert)", "public org.bouncycastle.asn1.cmp.CertifiedKeyPair(org.bouncycastle.asn1.cmp.CertOrEncCert)"], ["org.bouncycastle.asn1.cmp.CertifiedKeyPair", "org.bouncycastle.asn1.cmp.CertifiedKeyPair(org.bouncycastle.asn1.cmp.CertOrEncCert, org.bouncycastle.asn1.crmf.EncryptedValue, org.bouncycastle.asn1.crmf.PKIPublicationInfo)", "public org.bouncycastle.asn1.cmp.CertifiedKeyPair(org.bouncycastle.asn1.cmp.CertOrEncCert, org.bouncycastle.asn1.crmf.EncryptedValue, org.bouncycastle.asn1.crmf.PKIPublicationInfo)"], ["org.bouncycastle.asn1.cmp.CertOrEncCert", "org.bouncycastle.asn1.cmp.CertifiedKeyPair.getCertOrEncCert()", "public org.bouncycastle.asn1.cmp.CertOrEncCert getCertOrEncCert()"], ["org.bouncycastle.asn1.crmf.EncryptedValue", "org.bouncycastle.asn1.cmp.CertifiedKeyPair.getPrivateKey()", "public org.bouncycastle.asn1.crmf.EncryptedValue getPrivateKey()"], ["org.bouncycastle.asn1.crmf.PKIPublicationInfo", "org.bouncycastle.asn1.cmp.CertifiedKeyPair.getPublicationInfo()", "public org.bouncycastle.asn1.crmf.PKIPublicationInfo getPublicationInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.CertifiedKeyPair.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.Challenge", "org.bouncycastle.asn1.cmp.Challenge.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.Challenge getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.Challenge", "org.bouncycastle.asn1.cmp.Challenge(byte[], byte[])", "public org.bouncycastle.asn1.cmp.Challenge(byte[], byte[])"], ["org.bouncycastle.asn1.cmp.Challenge", "org.bouncycastle.asn1.cmp.Challenge(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], byte[])", "public org.bouncycastle.asn1.cmp.Challenge(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], byte[])"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cmp.Challenge.getOwf()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getOwf()"], ["byte[]", "org.bouncycastle.asn1.cmp.Challenge.getWitness()", "public byte[] getWitness()"], ["byte[]", "org.bouncycastle.asn1.cmp.Challenge.getChallenge()", "public byte[] getChallenge()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.Challenge.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.ErrorMsgContent", "org.bouncycastle.asn1.cmp.ErrorMsgContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.ErrorMsgContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.ErrorMsgContent", "org.bouncycastle.asn1.cmp.ErrorMsgContent(org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public org.bouncycastle.asn1.cmp.ErrorMsgContent(org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["org.bouncycastle.asn1.cmp.ErrorMsgContent", "org.bouncycastle.asn1.cmp.ErrorMsgContent(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIFreeText)", "public org.bouncycastle.asn1.cmp.ErrorMsgContent(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIFreeText)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.ErrorMsgContent.getPKIStatusInfo()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getPKIStatusInfo()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.ErrorMsgContent.getErrorCode()", "public org.bouncycastle.asn1.ASN1Integer getErrorCode()"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.ErrorMsgContent.getErrorDetails()", "public org.bouncycastle.asn1.cmp.PKIFreeText getErrorDetails()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.ErrorMsgContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.GenMsgContent", "org.bouncycastle.asn1.cmp.GenMsgContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.GenMsgContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.GenMsgContent", "org.bouncycastle.asn1.cmp.GenMsgContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue)", "public org.bouncycastle.asn1.cmp.GenMsgContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue)"], ["org.bouncycastle.asn1.cmp.GenMsgContent", "org.bouncycastle.asn1.cmp.GenMsgContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])", "public org.bouncycastle.asn1.cmp.GenMsgContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue[]", "org.bouncycastle.asn1.cmp.GenMsgContent.toInfoTypeAndValueArray()", "public org.bouncycastle.asn1.cmp.InfoTypeAndValue[] toInfoTypeAndValueArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.GenMsgContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.GenRepContent", "org.bouncycastle.asn1.cmp.GenRepContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.GenRepContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.GenRepContent", "org.bouncycastle.asn1.cmp.GenRepContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue)", "public org.bouncycastle.asn1.cmp.GenRepContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue)"], ["org.bouncycastle.asn1.cmp.GenRepContent", "org.bouncycastle.asn1.cmp.GenRepContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])", "public org.bouncycastle.asn1.cmp.GenRepContent(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue[]", "org.bouncycastle.asn1.cmp.GenRepContent.toInfoTypeAndValueArray()", "public org.bouncycastle.asn1.cmp.InfoTypeAndValue[] toInfoTypeAndValueArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.GenRepContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue", "org.bouncycastle.asn1.cmp.InfoTypeAndValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.InfoTypeAndValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue", "org.bouncycastle.asn1.cmp.InfoTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.cmp.InfoTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue", "org.bouncycastle.asn1.cmp.InfoTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cmp.InfoTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cmp.InfoTypeAndValue.getInfoType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getInfoType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cmp.InfoTypeAndValue.getInfoValue()", "public org.bouncycastle.asn1.ASN1Encodable getInfoValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.InfoTypeAndValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.KeyRecRepContent", "org.bouncycastle.asn1.cmp.KeyRecRepContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.KeyRecRepContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.KeyRecRepContent.getStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getStatus()"], ["org.bouncycastle.asn1.cmp.CMPCertificate", "org.bouncycastle.asn1.cmp.KeyRecRepContent.getNewSigCert()", "public org.bouncycastle.asn1.cmp.CMPCertificate getNewSigCert()"], ["org.bouncycastle.asn1.cmp.CMPCertificate[]", "org.bouncycastle.asn1.cmp.KeyRecRepContent.getCaCerts()", "public org.bouncycastle.asn1.cmp.CMPCertificate[] getCaCerts()"], ["org.bouncycastle.asn1.cmp.CertifiedKeyPair[]", "org.bouncycastle.asn1.cmp.KeyRecRepContent.getKeyPairHist()", "public org.bouncycastle.asn1.cmp.CertifiedKeyPair[] getKeyPairHist()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.KeyRecRepContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.OOBCertHash", "org.bouncycastle.asn1.cmp.OOBCertHash.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.OOBCertHash getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.OOBCertHash", "org.bouncycastle.asn1.cmp.OOBCertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.crmf.CertId, byte[])", "public org.bouncycastle.asn1.cmp.OOBCertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.crmf.CertId, byte[])"], ["org.bouncycastle.asn1.cmp.OOBCertHash", "org.bouncycastle.asn1.cmp.OOBCertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.crmf.CertId, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.cmp.OOBCertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.crmf.CertId, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cmp.OOBCertHash.getHashAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlg()"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.cmp.OOBCertHash.getCertId()", "public org.bouncycastle.asn1.crmf.CertId getCertId()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.cmp.OOBCertHash.getHashVal()", "public org.bouncycastle.asn1.DERBitString getHashVal()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.OOBCertHash.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PBMParameter", "org.bouncycastle.asn1.cmp.PBMParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PBMParameter getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PBMParameter", "org.bouncycastle.asn1.cmp.PBMParameter(byte[], org.bouncycastle.asn1.x509.AlgorithmIdentifier, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.cmp.PBMParameter(byte[], org.bouncycastle.asn1.x509.AlgorithmIdentifier, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.cmp.PBMParameter", "org.bouncycastle.asn1.cmp.PBMParameter(org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.cmp.PBMParameter(org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PBMParameter.getSalt()", "public org.bouncycastle.asn1.ASN1OctetString getSalt()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cmp.PBMParameter.getOwf()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getOwf()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.PBMParameter.getIterationCount()", "public org.bouncycastle.asn1.ASN1Integer getIterationCount()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cmp.PBMParameter.getMac()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getMac()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PBMParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIBody", "org.bouncycastle.asn1.cmp.PKIBody.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIBody getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIBody", "org.bouncycastle.asn1.cmp.PKIBody(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cmp.PKIBody(int, org.bouncycastle.asn1.ASN1Encodable)"], ["int", "org.bouncycastle.asn1.cmp.PKIBody.getType()", "public int getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cmp.PKIBody.getContent()", "public org.bouncycastle.asn1.ASN1Encodable getContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIBody.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIConfirmContent", "org.bouncycastle.asn1.cmp.PKIConfirmContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIConfirmContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIConfirmContent", "org.bouncycastle.asn1.cmp.PKIConfirmContent()", "public org.bouncycastle.asn1.cmp.PKIConfirmContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIConfirmContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIFailureInfo", "org.bouncycastle.asn1.cmp.PKIFailureInfo(int)", "public org.bouncycastle.asn1.cmp.PKIFailureInfo(int)"], ["org.bouncycastle.asn1.cmp.PKIFailureInfo", "org.bouncycastle.asn1.cmp.PKIFailureInfo(org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.cmp.PKIFailureInfo(org.bouncycastle.asn1.DERBitString)"], ["java.lang.String", "org.bouncycastle.asn1.cmp.PKIFailureInfo.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cmp.PKIFreeText getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIFreeText getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText(org.bouncycastle.asn1.DERUTF8String)", "public org.bouncycastle.asn1.cmp.PKIFreeText(org.bouncycastle.asn1.DERUTF8String)"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText(java.lang.String)", "public org.bouncycastle.asn1.cmp.PKIFreeText(java.lang.String)"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText(org.bouncycastle.asn1.DERUTF8String[])", "public org.bouncycastle.asn1.cmp.PKIFreeText(org.bouncycastle.asn1.DERUTF8String[])"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIFreeText(java.lang.String[])", "public org.bouncycastle.asn1.cmp.PKIFreeText(java.lang.String[])"], ["int", "org.bouncycastle.asn1.cmp.PKIFreeText.size()", "public int size()"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.cmp.PKIFreeText.getStringAt(int)", "public org.bouncycastle.asn1.DERUTF8String getStringAt(int)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIFreeText.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIHeader", "org.bouncycastle.asn1.cmp.PKIHeader.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIHeader getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIHeader", "org.bouncycastle.asn1.cmp.PKIHeader(int, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.cmp.PKIHeader(int, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.PKIHeader.getPvno()", "public org.bouncycastle.asn1.ASN1Integer getPvno()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.cmp.PKIHeader.getSender()", "public org.bouncycastle.asn1.x509.GeneralName getSender()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.cmp.PKIHeader.getRecipient()", "public org.bouncycastle.asn1.x509.GeneralName getRecipient()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.cmp.PKIHeader.getMessageTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getMessageTime()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cmp.PKIHeader.getProtectionAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getProtectionAlg()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PKIHeader.getSenderKID()", "public org.bouncycastle.asn1.ASN1OctetString getSenderKID()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PKIHeader.getRecipKID()", "public org.bouncycastle.asn1.ASN1OctetString getRecipKID()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PKIHeader.getTransactionID()", "public org.bouncycastle.asn1.ASN1OctetString getTransactionID()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PKIHeader.getSenderNonce()", "public org.bouncycastle.asn1.ASN1OctetString getSenderNonce()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cmp.PKIHeader.getRecipNonce()", "public org.bouncycastle.asn1.ASN1OctetString getRecipNonce()"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIHeader.getFreeText()", "public org.bouncycastle.asn1.cmp.PKIFreeText getFreeText()"], ["org.bouncycastle.asn1.cmp.InfoTypeAndValue[]", "org.bouncycastle.asn1.cmp.PKIHeader.getGeneralInfo()", "public org.bouncycastle.asn1.cmp.InfoTypeAndValue[] getGeneralInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIHeader.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder(int, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder(int, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setMessageTime(org.bouncycastle.asn1.ASN1GeneralizedTime)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setMessageTime(org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setProtectionAlg(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setProtectionAlg(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setSenderKID(byte[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setSenderKID(byte[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setSenderKID(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setSenderKID(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setRecipKID(byte[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setRecipKID(byte[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setRecipKID(org.bouncycastle.asn1.DEROctetString)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setRecipKID(org.bouncycastle.asn1.DEROctetString)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setTransactionID(byte[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setTransactionID(byte[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setTransactionID(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setTransactionID(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setSenderNonce(byte[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setSenderNonce(byte[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setSenderNonce(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setSenderNonce(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setRecipNonce(byte[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setRecipNonce(byte[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setRecipNonce(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setRecipNonce(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setFreeText(org.bouncycastle.asn1.cmp.PKIFreeText)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setFreeText(org.bouncycastle.asn1.cmp.PKIFreeText)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setGeneralInfo(org.bouncycastle.asn1.cmp.InfoTypeAndValue)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setGeneralInfo(org.bouncycastle.asn1.cmp.InfoTypeAndValue)"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setGeneralInfo(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setGeneralInfo(org.bouncycastle.asn1.cmp.InfoTypeAndValue[])"], ["org.bouncycastle.asn1.cmp.PKIHeaderBuilder", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.setGeneralInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cmp.PKIHeaderBuilder setGeneralInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cmp.PKIHeader", "org.bouncycastle.asn1.cmp.PKIHeaderBuilder.build()", "public org.bouncycastle.asn1.cmp.PKIHeader build()"], ["org.bouncycastle.asn1.cmp.PKIMessage", "org.bouncycastle.asn1.cmp.PKIMessage.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIMessage getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIMessage", "org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.cmp.CMPCertificate[])", "public org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.cmp.CMPCertificate[])"], ["org.bouncycastle.asn1.cmp.PKIMessage", "org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.cmp.PKIMessage", "org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody)", "public org.bouncycastle.asn1.cmp.PKIMessage(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody)"], ["org.bouncycastle.asn1.cmp.PKIHeader", "org.bouncycastle.asn1.cmp.PKIMessage.getHeader()", "public org.bouncycastle.asn1.cmp.PKIHeader getHeader()"], ["org.bouncycastle.asn1.cmp.PKIBody", "org.bouncycastle.asn1.cmp.PKIMessage.getBody()", "public org.bouncycastle.asn1.cmp.PKIBody getBody()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.cmp.PKIMessage.getProtection()", "public org.bouncycastle.asn1.DERBitString getProtection()"], ["org.bouncycastle.asn1.cmp.CMPCertificate[]", "org.bouncycastle.asn1.cmp.PKIMessage.getExtraCerts()", "public org.bouncycastle.asn1.cmp.CMPCertificate[] getExtraCerts()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIMessage.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIMessages", "org.bouncycastle.asn1.cmp.PKIMessages.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIMessages getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIMessages", "org.bouncycastle.asn1.cmp.PKIMessages(org.bouncycastle.asn1.cmp.PKIMessage)", "public org.bouncycastle.asn1.cmp.PKIMessages(org.bouncycastle.asn1.cmp.PKIMessage)"], ["org.bouncycastle.asn1.cmp.PKIMessages", "org.bouncycastle.asn1.cmp.PKIMessages(org.bouncycastle.asn1.cmp.PKIMessage[])", "public org.bouncycastle.asn1.cmp.PKIMessages(org.bouncycastle.asn1.cmp.PKIMessage[])"], ["org.bouncycastle.asn1.cmp.PKIMessage[]", "org.bouncycastle.asn1.cmp.PKIMessages.toPKIMessageArray()", "public org.bouncycastle.asn1.cmp.PKIMessage[] toPKIMessageArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIMessages.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIStatus", "org.bouncycastle.asn1.cmp.PKIStatus.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIStatus getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.cmp.PKIStatus.getValue()", "public java.math.BigInteger getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIStatus.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.PKIStatusInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cmp.PKIStatusInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.PKIStatusInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PKIStatusInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus)", "public org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus, org.bouncycastle.asn1.cmp.PKIFreeText)", "public org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus, org.bouncycastle.asn1.cmp.PKIFreeText)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus, org.bouncycastle.asn1.cmp.PKIFreeText, org.bouncycastle.asn1.cmp.PKIFailureInfo)", "public org.bouncycastle.asn1.cmp.PKIStatusInfo(org.bouncycastle.asn1.cmp.PKIStatus, org.bouncycastle.asn1.cmp.PKIFreeText, org.bouncycastle.asn1.cmp.PKIFailureInfo)"], ["java.math.BigInteger", "org.bouncycastle.asn1.cmp.PKIStatusInfo.getStatus()", "public java.math.BigInteger getStatus()"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PKIStatusInfo.getStatusString()", "public org.bouncycastle.asn1.cmp.PKIFreeText getStatusString()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.cmp.PKIStatusInfo.getFailInfo()", "public org.bouncycastle.asn1.DERBitString getFailInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PKIStatusInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.POPODecKeyChallContent", "org.bouncycastle.asn1.cmp.POPODecKeyChallContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.POPODecKeyChallContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.Challenge[]", "org.bouncycastle.asn1.cmp.POPODecKeyChallContent.toChallengeArray()", "public org.bouncycastle.asn1.cmp.Challenge[] toChallengeArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.POPODecKeyChallContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.POPODecKeyRespContent", "org.bouncycastle.asn1.cmp.POPODecKeyRespContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.POPODecKeyRespContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer[]", "org.bouncycastle.asn1.cmp.POPODecKeyRespContent.toASN1IntegerArray()", "public org.bouncycastle.asn1.ASN1Integer[] toASN1IntegerArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.POPODecKeyRespContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PollRepContent", "org.bouncycastle.asn1.cmp.PollRepContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PollRepContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PollRepContent", "org.bouncycastle.asn1.cmp.PollRepContent(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.cmp.PollRepContent(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.cmp.PollRepContent", "org.bouncycastle.asn1.cmp.PollRepContent(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIFreeText)", "public org.bouncycastle.asn1.cmp.PollRepContent(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.cmp.PKIFreeText)"], ["int", "org.bouncycastle.asn1.cmp.PollRepContent.size()", "public int size()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.PollRepContent.getCertReqId(int)", "public org.bouncycastle.asn1.ASN1Integer getCertReqId(int)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cmp.PollRepContent.getCheckAfter(int)", "public org.bouncycastle.asn1.ASN1Integer getCheckAfter(int)"], ["org.bouncycastle.asn1.cmp.PKIFreeText", "org.bouncycastle.asn1.cmp.PollRepContent.getReason(int)", "public org.bouncycastle.asn1.cmp.PKIFreeText getReason(int)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PollRepContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.PollReqContent", "org.bouncycastle.asn1.cmp.PollReqContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.PollReqContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PollReqContent", "org.bouncycastle.asn1.cmp.PollReqContent(org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.cmp.PollReqContent(org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.ASN1Integer[][]", "org.bouncycastle.asn1.cmp.PollReqContent.getCertReqIds()", "public org.bouncycastle.asn1.ASN1Integer[][] getCertReqIds()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.PollReqContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.ProtectedPart", "org.bouncycastle.asn1.cmp.ProtectedPart.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.ProtectedPart getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.ProtectedPart", "org.bouncycastle.asn1.cmp.ProtectedPart(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody)", "public org.bouncycastle.asn1.cmp.ProtectedPart(org.bouncycastle.asn1.cmp.PKIHeader, org.bouncycastle.asn1.cmp.PKIBody)"], ["org.bouncycastle.asn1.cmp.PKIHeader", "org.bouncycastle.asn1.cmp.ProtectedPart.getHeader()", "public org.bouncycastle.asn1.cmp.PKIHeader getHeader()"], ["org.bouncycastle.asn1.cmp.PKIBody", "org.bouncycastle.asn1.cmp.ProtectedPart.getBody()", "public org.bouncycastle.asn1.cmp.PKIBody getBody()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.ProtectedPart.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.RevAnnContent", "org.bouncycastle.asn1.cmp.RevAnnContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.RevAnnContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIStatus", "org.bouncycastle.asn1.cmp.RevAnnContent.getStatus()", "public org.bouncycastle.asn1.cmp.PKIStatus getStatus()"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.cmp.RevAnnContent.getCertId()", "public org.bouncycastle.asn1.crmf.CertId getCertId()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.cmp.RevAnnContent.getWillBeRevokedAt()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getWillBeRevokedAt()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.cmp.RevAnnContent.getBadSinceDate()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getBadSinceDate()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.cmp.RevAnnContent.getCrlDetails()", "public org.bouncycastle.asn1.x509.Extensions getCrlDetails()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.RevAnnContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.RevDetails", "org.bouncycastle.asn1.cmp.RevDetails.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.RevDetails getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.RevDetails", "org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate)", "public org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate)"], ["org.bouncycastle.asn1.cmp.RevDetails", "org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.x509.X509Extensions)", "public org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.cmp.RevDetails", "org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.cmp.RevDetails(org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.crmf.CertTemplate", "org.bouncycastle.asn1.cmp.RevDetails.getCertDetails()", "public org.bouncycastle.asn1.crmf.CertTemplate getCertDetails()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.cmp.RevDetails.getCrlEntryDetails()", "public org.bouncycastle.asn1.x509.Extensions getCrlEntryDetails()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.RevDetails.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.RevRepContent", "org.bouncycastle.asn1.cmp.RevRepContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.RevRepContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo[]", "org.bouncycastle.asn1.cmp.RevRepContent.getStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo[] getStatus()"], ["org.bouncycastle.asn1.crmf.CertId[]", "org.bouncycastle.asn1.cmp.RevRepContent.getRevCerts()", "public org.bouncycastle.asn1.crmf.CertId[] getRevCerts()"], ["org.bouncycastle.asn1.x509.CertificateList[]", "org.bouncycastle.asn1.cmp.RevRepContent.getCrls()", "public org.bouncycastle.asn1.x509.CertificateList[] getCrls()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.RevRepContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cmp.RevRepContentBuilder", "org.bouncycastle.asn1.cmp.RevRepContentBuilder()", "public org.bouncycastle.asn1.cmp.RevRepContentBuilder()"], ["org.bouncycastle.asn1.cmp.RevRepContentBuilder", "org.bouncycastle.asn1.cmp.RevRepContentBuilder.add(org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public org.bouncycastle.asn1.cmp.RevRepContentBuilder add(org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["org.bouncycastle.asn1.cmp.RevRepContentBuilder", "org.bouncycastle.asn1.cmp.RevRepContentBuilder.add(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.crmf.CertId)", "public org.bouncycastle.asn1.cmp.RevRepContentBuilder add(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.crmf.CertId)"], ["org.bouncycastle.asn1.cmp.RevRepContentBuilder", "org.bouncycastle.asn1.cmp.RevRepContentBuilder.addCrl(org.bouncycastle.asn1.x509.CertificateList)", "public org.bouncycastle.asn1.cmp.RevRepContentBuilder addCrl(org.bouncycastle.asn1.x509.CertificateList)"], ["org.bouncycastle.asn1.cmp.RevRepContent", "org.bouncycastle.asn1.cmp.RevRepContentBuilder.build()", "public org.bouncycastle.asn1.cmp.RevRepContent build()"], ["org.bouncycastle.asn1.cmp.RevReqContent", "org.bouncycastle.asn1.cmp.RevReqContent.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cmp.RevReqContent getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cmp.RevReqContent", "org.bouncycastle.asn1.cmp.RevReqContent(org.bouncycastle.asn1.cmp.RevDetails)", "public org.bouncycastle.asn1.cmp.RevReqContent(org.bouncycastle.asn1.cmp.RevDetails)"], ["org.bouncycastle.asn1.cmp.RevReqContent", "org.bouncycastle.asn1.cmp.RevReqContent(org.bouncycastle.asn1.cmp.RevDetails[])", "public org.bouncycastle.asn1.cmp.RevReqContent(org.bouncycastle.asn1.cmp.RevDetails[])"], ["org.bouncycastle.asn1.cmp.RevDetails[]", "org.bouncycastle.asn1.cmp.RevReqContent.toRevDetailsArray()", "public org.bouncycastle.asn1.cmp.RevDetails[] toRevDetailsArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cmp.RevReqContent.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.Attribute", "org.bouncycastle.asn1.cms.Attribute.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.Attribute getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.Attribute", "org.bouncycastle.asn1.cms.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.Attribute.getAttrType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAttrType()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.Attribute.getAttrValues()", "public org.bouncycastle.asn1.ASN1Set getAttrValues()"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.asn1.cms.Attribute.getAttributeValues()", "public org.bouncycastle.asn1.ASN1Encodable[] getAttributeValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.Attribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable(java.util.Hashtable)", "public org.bouncycastle.asn1.cms.AttributeTable(java.util.Hashtable)"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.cms.Attribute)", "public org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.cms.Attribute)"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.cms.Attributes)", "public org.bouncycastle.asn1.cms.AttributeTable(org.bouncycastle.asn1.cms.Attributes)"], ["org.bouncycastle.asn1.cms.Attribute", "org.bouncycastle.asn1.cms.AttributeTable.get(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.cms.Attribute get(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1EncodableVector", "org.bouncycastle.asn1.cms.AttributeTable.getAll(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["int", "org.bouncycastle.asn1.cms.AttributeTable.size()", "public int size()"], ["java.util.Hashtable", "org.bouncycastle.asn1.cms.AttributeTable.toHashtable()", "public java.util.Hashtable toHashtable()"], ["org.bouncycastle.asn1.ASN1EncodableVector", "org.bouncycastle.asn1.cms.AttributeTable.toASN1EncodableVector()", "public org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()"], ["org.bouncycastle.asn1.cms.Attributes", "org.bouncycastle.asn1.cms.AttributeTable.toASN1Structure()", "public org.bouncycastle.asn1.cms.Attributes toASN1Structure()"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable.add(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cms.AttributeTable add(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.cms.AttributeTable", "org.bouncycastle.asn1.cms.AttributeTable.remove(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.cms.AttributeTable remove(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.cms.Attributes", "org.bouncycastle.asn1.cms.Attributes(org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.cms.Attributes(org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.cms.Attributes", "org.bouncycastle.asn1.cms.Attributes.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.Attributes getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.Attribute[]", "org.bouncycastle.asn1.cms.Attributes.getAttributes()", "public org.bouncycastle.asn1.cms.Attribute[] getAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.Attributes.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.AuthEnvelopedData", "org.bouncycastle.asn1.cms.AuthEnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.AuthEnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.AuthEnvelopedData", "org.bouncycastle.asn1.cms.AuthEnvelopedData(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.AuthEnvelopedData(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.AuthEnvelopedData", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.AuthEnvelopedData", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1Set getRecipientInfos()"], ["org.bouncycastle.asn1.cms.EncryptedContentInfo", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getAuthEncryptedContentInfo()", "public org.bouncycastle.asn1.cms.EncryptedContentInfo getAuthEncryptedContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getAuthAttrs()", "public org.bouncycastle.asn1.ASN1Set getAuthAttrs()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getMac()", "public org.bouncycastle.asn1.ASN1OctetString getMac()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthEnvelopedData.getUnauthAttrs()", "public org.bouncycastle.asn1.ASN1Set getUnauthAttrs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.AuthEnvelopedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.AuthEnvelopedDataParser", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.AuthEnvelopedDataParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1SetParser getRecipientInfos() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.EncryptedContentInfoParser", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getAuthEncryptedContentInfo()", "public org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getAuthAttrs()", "public org.bouncycastle.asn1.ASN1SetParser getAuthAttrs() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getMac()", "public org.bouncycastle.asn1.ASN1OctetString getMac() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser.getUnauthAttrs()", "public org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.AuthenticatedData", "org.bouncycastle.asn1.cms.AuthenticatedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.AuthenticatedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.AuthenticatedData", "org.bouncycastle.asn1.cms.AuthenticatedData(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.AuthenticatedData(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.AuthenticatedData", "org.bouncycastle.asn1.cms.AuthenticatedData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.AuthenticatedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.AuthenticatedData", "org.bouncycastle.asn1.cms.AuthenticatedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.AuthenticatedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.AuthenticatedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.AuthenticatedData.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthenticatedData.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1Set getRecipientInfos()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.AuthenticatedData.getMacAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.AuthenticatedData.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.AuthenticatedData.getEncapsulatedContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfo getEncapsulatedContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthenticatedData.getAuthAttrs()", "public org.bouncycastle.asn1.ASN1Set getAuthAttrs()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.AuthenticatedData.getMac()", "public org.bouncycastle.asn1.ASN1OctetString getMac()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.AuthenticatedData.getUnauthAttrs()", "public org.bouncycastle.asn1.ASN1Set getUnauthAttrs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.AuthenticatedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.cms.AuthenticatedData.calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo)", "public static int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo)"], ["org.bouncycastle.asn1.cms.AuthenticatedDataParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.AuthenticatedDataParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1SetParser getRecipientInfos() throws java.io.IOException"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getMacAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm() throws java.io.IOException"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.ContentInfoParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getEnapsulatedContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfoParser getEnapsulatedContentInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.ContentInfoParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getEncapsulatedContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getAuthAttrs()", "public org.bouncycastle.asn1.ASN1SetParser getAuthAttrs() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getMac()", "public org.bouncycastle.asn1.ASN1OctetString getMac() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.AuthenticatedDataParser.getUnauthAttrs()", "public org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.CCMParameters", "org.bouncycastle.asn1.cms.CCMParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.CCMParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.CCMParameters", "org.bouncycastle.asn1.cms.CCMParameters(byte[], int)", "public org.bouncycastle.asn1.cms.CCMParameters(byte[], int)"], ["byte[]", "org.bouncycastle.asn1.cms.CCMParameters.getNonce()", "public byte[] getNonce()"], ["int", "org.bouncycastle.asn1.cms.CCMParameters.getIcvLen()", "public int getIcvLen()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.CCMParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.CompressedData", "org.bouncycastle.asn1.cms.CompressedData(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.cms.CompressedData(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.cms.CompressedData", "org.bouncycastle.asn1.cms.CompressedData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.CompressedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.CompressedData", "org.bouncycastle.asn1.cms.CompressedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.CompressedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.CompressedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.CompressedData.getCompressionAlgorithmIdentifier()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getCompressionAlgorithmIdentifier()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.CompressedData.getEncapContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfo getEncapContentInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.CompressedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.CompressedDataParser", "org.bouncycastle.asn1.cms.CompressedDataParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.CompressedDataParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.CompressedDataParser.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.CompressedDataParser.getCompressionAlgorithmIdentifier()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getCompressionAlgorithmIdentifier()"], ["org.bouncycastle.asn1.cms.ContentInfoParser", "org.bouncycastle.asn1.cms.CompressedDataParser.getEncapContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.ContentInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.ContentInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.ContentInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.ContentInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.ContentInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.ContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cms.ContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.ContentInfo.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.ContentInfo.getContent()", "public org.bouncycastle.asn1.ASN1Encodable getContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.ContentInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.ContentInfoParser", "org.bouncycastle.asn1.cms.ContentInfoParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.ContentInfoParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.ContentInfoParser.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.ContentInfoParser.getContent(int)", "public org.bouncycastle.asn1.ASN1Encodable getContent(int) throws java.io.IOException"], ["org.bouncycastle.asn1.cms.DigestedData", "org.bouncycastle.asn1.cms.DigestedData(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo, byte[])", "public org.bouncycastle.asn1.cms.DigestedData(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.ContentInfo, byte[])"], ["org.bouncycastle.asn1.cms.DigestedData", "org.bouncycastle.asn1.cms.DigestedData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.DigestedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.DigestedData", "org.bouncycastle.asn1.cms.DigestedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.DigestedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.DigestedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.DigestedData.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.DigestedData.getEncapContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfo getEncapContentInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.DigestedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["byte[]", "org.bouncycastle.asn1.cms.DigestedData.getDigest()", "public byte[] getDigest()"], ["org.bouncycastle.asn1.cms.EncryptedContentInfo", "org.bouncycastle.asn1.cms.EncryptedContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.EncryptedContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.EncryptedContentInfo", "org.bouncycastle.asn1.cms.EncryptedContentInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.EncryptedContentInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.EncryptedContentInfo.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.EncryptedContentInfo.getContentEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getContentEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.EncryptedContentInfo.getEncryptedContent()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.EncryptedContentInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.EncryptedContentInfoParser", "org.bouncycastle.asn1.cms.EncryptedContentInfoParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.EncryptedContentInfoParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.EncryptedContentInfoParser.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.EncryptedContentInfoParser.getContentEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getContentEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.EncryptedContentInfoParser.getEncryptedContent(int)", "public org.bouncycastle.asn1.ASN1Encodable getEncryptedContent(int) throws java.io.IOException"], ["org.bouncycastle.asn1.cms.EncryptedData", "org.bouncycastle.asn1.cms.EncryptedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.EncryptedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.EncryptedData", "org.bouncycastle.asn1.cms.EncryptedData(org.bouncycastle.asn1.cms.EncryptedContentInfo)", "public org.bouncycastle.asn1.cms.EncryptedData(org.bouncycastle.asn1.cms.EncryptedContentInfo)"], ["org.bouncycastle.asn1.cms.EncryptedData", "org.bouncycastle.asn1.cms.EncryptedData(org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.EncryptedData(org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.EncryptedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.EncryptedContentInfo", "org.bouncycastle.asn1.cms.EncryptedData.getEncryptedContentInfo()", "public org.bouncycastle.asn1.cms.EncryptedContentInfo getEncryptedContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.EncryptedData.getUnprotectedAttrs()", "public org.bouncycastle.asn1.ASN1Set getUnprotectedAttrs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.EncryptedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.EnvelopedData", "org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.EnvelopedData", "org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.cms.Attributes)", "public org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.EncryptedContentInfo, org.bouncycastle.asn1.cms.Attributes)"], ["org.bouncycastle.asn1.cms.EnvelopedData", "org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.EnvelopedData(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.EnvelopedData", "org.bouncycastle.asn1.cms.EnvelopedData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.EnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.EnvelopedData", "org.bouncycastle.asn1.cms.EnvelopedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.EnvelopedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.EnvelopedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.EnvelopedData.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.EnvelopedData.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1Set getRecipientInfos()"], ["org.bouncycastle.asn1.cms.EncryptedContentInfo", "org.bouncycastle.asn1.cms.EnvelopedData.getEncryptedContentInfo()", "public org.bouncycastle.asn1.cms.EncryptedContentInfo getEncryptedContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.EnvelopedData.getUnprotectedAttrs()", "public org.bouncycastle.asn1.ASN1Set getUnprotectedAttrs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.EnvelopedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.cms.EnvelopedData.calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)", "public static int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.EnvelopedDataParser", "org.bouncycastle.asn1.cms.EnvelopedDataParser(org.bouncycastle.asn1.ASN1SequenceParser)", "public org.bouncycastle.asn1.cms.EnvelopedDataParser(org.bouncycastle.asn1.ASN1SequenceParser) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.EnvelopedDataParser.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.EnvelopedDataParser.getOriginatorInfo()", "public org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.EnvelopedDataParser.getRecipientInfos()", "public org.bouncycastle.asn1.ASN1SetParser getRecipientInfos() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.EncryptedContentInfoParser", "org.bouncycastle.asn1.cms.EnvelopedDataParser.getEncryptedContentInfo()", "public org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.EnvelopedDataParser.getUnprotectedAttrs()", "public org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.Evidence", "org.bouncycastle.asn1.cms.Evidence(org.bouncycastle.asn1.cms.TimeStampTokenEvidence)", "public org.bouncycastle.asn1.cms.Evidence(org.bouncycastle.asn1.cms.TimeStampTokenEvidence)"], ["org.bouncycastle.asn1.cms.Evidence", "org.bouncycastle.asn1.cms.Evidence.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.Evidence getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.TimeStampTokenEvidence", "org.bouncycastle.asn1.cms.Evidence.getTstEvidence()", "public org.bouncycastle.asn1.cms.TimeStampTokenEvidence getTstEvidence()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.Evidence.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.GCMParameters", "org.bouncycastle.asn1.cms.GCMParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.GCMParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.GCMParameters", "org.bouncycastle.asn1.cms.GCMParameters(byte[], int)", "public org.bouncycastle.asn1.cms.GCMParameters(byte[], int)"], ["byte[]", "org.bouncycastle.asn1.cms.GCMParameters.getNonce()", "public byte[] getNonce()"], ["int", "org.bouncycastle.asn1.cms.GCMParameters.getIcvLen()", "public int getIcvLen()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.GCMParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.Certificate)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509CertificateStructure)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509CertificateStructure)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, java.math.BigInteger)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, java.math.BigInteger)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber.getName()", "public org.bouncycastle.asn1.x500.X500Name getName()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.IssuerAndSerialNumber.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.KEKIdentifier", "org.bouncycastle.asn1.cms.KEKIdentifier(byte[], org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)", "public org.bouncycastle.asn1.cms.KEKIdentifier(byte[], org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)"], ["org.bouncycastle.asn1.cms.KEKIdentifier", "org.bouncycastle.asn1.cms.KEKIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.KEKIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.KEKIdentifier", "org.bouncycastle.asn1.cms.KEKIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.KEKIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.KEKIdentifier.getKeyIdentifier()", "public org.bouncycastle.asn1.ASN1OctetString getKeyIdentifier()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.cms.KEKIdentifier.getDate()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getDate()"], ["org.bouncycastle.asn1.cms.OtherKeyAttribute", "org.bouncycastle.asn1.cms.KEKIdentifier.getOther()", "public org.bouncycastle.asn1.cms.OtherKeyAttribute getOther()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.KEKIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.KEKRecipientInfo", "org.bouncycastle.asn1.cms.KEKRecipientInfo(org.bouncycastle.asn1.cms.KEKIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.KEKRecipientInfo(org.bouncycastle.asn1.cms.KEKIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.KEKRecipientInfo", "org.bouncycastle.asn1.cms.KEKRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.KEKRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.KEKRecipientInfo", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.KEKRecipientInfo", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.KEKIdentifier", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getKekid()", "public org.bouncycastle.asn1.cms.KEKIdentifier getKekid()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getKeyEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.KEKRecipientInfo.getEncryptedKey()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.KEKRecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)", "public org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)", "public org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier.getIssuerAndSerialNumber()", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber getIssuerAndSerialNumber()"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier.getRKeyID()", "public org.bouncycastle.asn1.cms.RecipientKeyIdentifier getRKeyID()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo(org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo(org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getOriginator()", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getOriginator()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getUserKeyingMaterial()", "public org.bouncycastle.asn1.ASN1OctetString getUserKeyingMaterial()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getKeyEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.getRecipientEncryptedKeys()", "public org.bouncycastle.asn1.ASN1Sequence getRecipientEncryptedKeys()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.KeyTransRecipientInfo", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo(org.bouncycastle.asn1.cms.RecipientIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.KeyTransRecipientInfo(org.bouncycastle.asn1.cms.RecipientIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.KeyTransRecipientInfo", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.KeyTransRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.KeyTransRecipientInfo", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.KeyTransRecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.RecipientIdentifier", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.getRecipientIdentifier()", "public org.bouncycastle.asn1.cms.RecipientIdentifier getRecipientIdentifier()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.getKeyEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.getEncryptedKey()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.KeyTransRecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.MetaData", "org.bouncycastle.asn1.cms.MetaData(org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.DERIA5String, org.bouncycastle.asn1.cms.Attributes)", "public org.bouncycastle.asn1.cms.MetaData(org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.DERIA5String, org.bouncycastle.asn1.cms.Attributes)"], ["org.bouncycastle.asn1.cms.MetaData", "org.bouncycastle.asn1.cms.MetaData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.MetaData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.MetaData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["boolean", "org.bouncycastle.asn1.cms.MetaData.isHashProtected()", "public boolean isHashProtected()"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.cms.MetaData.getFileName()", "public org.bouncycastle.asn1.DERUTF8String getFileName()"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.cms.MetaData.getMediaType()", "public org.bouncycastle.asn1.DERIA5String getMediaType()"], ["org.bouncycastle.asn1.cms.Attributes", "org.bouncycastle.asn1.cms.MetaData.getOtherMetaData()", "public org.bouncycastle.asn1.cms.Attributes getOtherMetaData()"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.x509.SubjectKeyIdentifier)", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.x509.SubjectKeyIdentifier)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.cms.OriginatorPublicKey)", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.cms.OriginatorPublicKey)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getId()", "public org.bouncycastle.asn1.ASN1Encodable getId()"], ["org.bouncycastle.asn1.cms.IssuerAndSerialNumber", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getIssuerAndSerialNumber()", "public org.bouncycastle.asn1.cms.IssuerAndSerialNumber getIssuerAndSerialNumber()"], ["org.bouncycastle.asn1.x509.SubjectKeyIdentifier", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getSubjectKeyIdentifier()", "public org.bouncycastle.asn1.x509.SubjectKeyIdentifier getSubjectKeyIdentifier()"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.getOriginatorKey()", "public org.bouncycastle.asn1.cms.OriginatorPublicKey getOriginatorKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.OriginatorInfo(org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.OriginatorInfo(org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.OriginatorInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.OriginatorInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.OriginatorInfo", "org.bouncycastle.asn1.cms.OriginatorInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OriginatorInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.OriginatorInfo.getCertificates()", "public org.bouncycastle.asn1.ASN1Set getCertificates()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.OriginatorInfo.getCRLs()", "public org.bouncycastle.asn1.ASN1Set getCRLs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OriginatorInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.OriginatorPublicKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.cms.OriginatorPublicKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.OriginatorPublicKey(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.OriginatorPublicKey(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.OriginatorPublicKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.OriginatorPublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.OriginatorPublicKey.getAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.cms.OriginatorPublicKey.getPublicKey()", "public org.bouncycastle.asn1.DERBitString getPublicKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OriginatorPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.OtherKeyAttribute", "org.bouncycastle.asn1.cms.OtherKeyAttribute.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OtherKeyAttribute getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.OtherKeyAttribute", "org.bouncycastle.asn1.cms.OtherKeyAttribute(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.OtherKeyAttribute(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.OtherKeyAttribute", "org.bouncycastle.asn1.cms.OtherKeyAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cms.OtherKeyAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.OtherKeyAttribute.getKeyAttrId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getKeyAttrId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.OtherKeyAttribute.getKeyAttr()", "public org.bouncycastle.asn1.ASN1Encodable getKeyAttr()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OtherKeyAttribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.OtherRecipientInfo", "org.bouncycastle.asn1.cms.OtherRecipientInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cms.OtherRecipientInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.cms.OtherRecipientInfo", "org.bouncycastle.asn1.cms.OtherRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.OtherRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.OtherRecipientInfo", "org.bouncycastle.asn1.cms.OtherRecipientInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.OtherRecipientInfo", "org.bouncycastle.asn1.cms.OtherRecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.OtherRecipientInfo.getType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.OtherRecipientInfo.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OtherRecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.OtherRevocationInfoFormat", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.cms.OtherRevocationInfoFormat(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.cms.OtherRevocationInfoFormat", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.OtherRevocationInfoFormat", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat.getInfoFormat()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getInfoFormat()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat.getInfo()", "public org.bouncycastle.asn1.ASN1Encodable getInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.PasswordRecipientInfo", "org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.PasswordRecipientInfo", "org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.PasswordRecipientInfo", "org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.PasswordRecipientInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.PasswordRecipientInfo", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.PasswordRecipientInfo", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getKeyDerivationAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyDerivationAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getKeyEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.getEncryptedKey()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.PasswordRecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.RecipientEncryptedKey", "org.bouncycastle.asn1.cms.RecipientEncryptedKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.RecipientEncryptedKey", "org.bouncycastle.asn1.cms.RecipientEncryptedKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.RecipientEncryptedKey", "org.bouncycastle.asn1.cms.RecipientEncryptedKey(org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.RecipientEncryptedKey(org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier", "org.bouncycastle.asn1.cms.RecipientEncryptedKey.getIdentifier()", "public org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getIdentifier()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.RecipientEncryptedKey.getEncryptedKey()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.RecipientEncryptedKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.RecipientIdentifier", "org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)", "public org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)"], ["org.bouncycastle.asn1.cms.RecipientIdentifier", "org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.RecipientIdentifier", "org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.cms.RecipientIdentifier(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.cms.RecipientIdentifier", "org.bouncycastle.asn1.cms.RecipientIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.RecipientIdentifier getInstance(java.lang.Object)"], ["boolean", "org.bouncycastle.asn1.cms.RecipientIdentifier.isTagged()", "public boolean isTagged()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.RecipientIdentifier.getId()", "public org.bouncycastle.asn1.ASN1Encodable getId()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.RecipientIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KeyTransRecipientInfo)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KeyTransRecipientInfo)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KEKRecipientInfo)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.KEKRecipientInfo)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.PasswordRecipientInfo)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.PasswordRecipientInfo)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.OtherRecipientInfo)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.cms.OtherRecipientInfo)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.cms.RecipientInfo(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.cms.RecipientInfo", "org.bouncycastle.asn1.cms.RecipientInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.RecipientInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.RecipientInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["boolean", "org.bouncycastle.asn1.cms.RecipientInfo.isTagged()", "public boolean isTagged()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.RecipientInfo.getInfo()", "public org.bouncycastle.asn1.ASN1Encodable getInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.RecipientInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier(org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)", "public org.bouncycastle.asn1.cms.RecipientKeyIdentifier(org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier(byte[], org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)", "public org.bouncycastle.asn1.cms.RecipientKeyIdentifier(byte[], org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.cms.OtherKeyAttribute)"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier(byte[])", "public org.bouncycastle.asn1.cms.RecipientKeyIdentifier(byte[])"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.RecipientKeyIdentifier(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.RecipientKeyIdentifier", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.getSubjectKeyIdentifier()", "public org.bouncycastle.asn1.ASN1OctetString getSubjectKeyIdentifier()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.getDate()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getDate()"], ["org.bouncycastle.asn1.cms.OtherKeyAttribute", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.getOtherKeyAttribute()", "public org.bouncycastle.asn1.cms.OtherKeyAttribute getOtherKeyAttribute()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.RecipientKeyIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.SCVPReqRes", "org.bouncycastle.asn1.cms.SCVPReqRes.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.SCVPReqRes getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.SCVPReqRes", "org.bouncycastle.asn1.cms.SCVPReqRes(org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.cms.SCVPReqRes(org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.cms.SCVPReqRes", "org.bouncycastle.asn1.cms.SCVPReqRes(org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.cms.SCVPReqRes(org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.SCVPReqRes.getRequest()", "public org.bouncycastle.asn1.cms.ContentInfo getRequest()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.SCVPReqRes.getResponse()", "public org.bouncycastle.asn1.cms.ContentInfo getResponse()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.SCVPReqRes.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.SignedData", "org.bouncycastle.asn1.cms.SignedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.SignedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.SignedData", "org.bouncycastle.asn1.cms.SignedData(org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.SignedData(org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.cms.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.SignedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignedData.getDigestAlgorithms()", "public org.bouncycastle.asn1.ASN1Set getDigestAlgorithms()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.SignedData.getEncapContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfo getEncapContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignedData.getCertificates()", "public org.bouncycastle.asn1.ASN1Set getCertificates()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignedData.getCRLs()", "public org.bouncycastle.asn1.ASN1Set getCRLs()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignedData.getSignerInfos()", "public org.bouncycastle.asn1.ASN1Set getSignerInfos()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.SignedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.SignedDataParser", "org.bouncycastle.asn1.cms.SignedDataParser.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.SignedDataParser.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.SignedDataParser.getDigestAlgorithms()", "public org.bouncycastle.asn1.ASN1SetParser getDigestAlgorithms() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.ContentInfoParser", "org.bouncycastle.asn1.cms.SignedDataParser.getEncapContentInfo()", "public org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.SignedDataParser.getCertificates()", "public org.bouncycastle.asn1.ASN1SetParser getCertificates() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.SignedDataParser.getCrls()", "public org.bouncycastle.asn1.ASN1SetParser getCrls() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1SetParser", "org.bouncycastle.asn1.cms.SignedDataParser.getSignerInfos()", "public org.bouncycastle.asn1.ASN1SetParser getSignerInfos() throws java.io.IOException"], ["org.bouncycastle.asn1.cms.SignerIdentifier", "org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)", "public org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)"], ["org.bouncycastle.asn1.cms.SignerIdentifier", "org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.SignerIdentifier", "org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.cms.SignerIdentifier(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.cms.SignerIdentifier", "org.bouncycastle.asn1.cms.SignerIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.SignerIdentifier getInstance(java.lang.Object)"], ["boolean", "org.bouncycastle.asn1.cms.SignerIdentifier.isTagged()", "public boolean isTagged()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.cms.SignerIdentifier.getId()", "public org.bouncycastle.asn1.ASN1Encodable getId()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.SignerIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.SignerInfo", "org.bouncycastle.asn1.cms.SignerInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.SignerInfo getInstance(java.lang.Object) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.asn1.cms.SignerInfo", "org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.cms.SignerIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.cms.SignerIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.cms.SignerInfo", "org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.cms.SignerIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.Attributes, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.cms.Attributes)", "public org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.cms.SignerIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.cms.Attributes, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.cms.Attributes)"], ["org.bouncycastle.asn1.cms.SignerInfo", "org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cms.SignerInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.cms.SignerInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.cms.SignerIdentifier", "org.bouncycastle.asn1.cms.SignerInfo.getSID()", "public org.bouncycastle.asn1.cms.SignerIdentifier getSID()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignerInfo.getAuthenticatedAttributes()", "public org.bouncycastle.asn1.ASN1Set getAuthenticatedAttributes()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.SignerInfo.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.SignerInfo.getEncryptedDigest()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedDigest()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.cms.SignerInfo.getDigestEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.cms.SignerInfo.getUnauthenticatedAttributes()", "public org.bouncycastle.asn1.ASN1Set getUnauthenticatedAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.SignerInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.Time", "org.bouncycastle.asn1.cms.Time.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.Time", "org.bouncycastle.asn1.cms.Time(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.cms.Time(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.cms.Time", "org.bouncycastle.asn1.cms.Time(java.util.Date)", "public org.bouncycastle.asn1.cms.Time(java.util.Date)"], ["org.bouncycastle.asn1.cms.Time", "org.bouncycastle.asn1.cms.Time(java.util.Date, java.util.Locale)", "public org.bouncycastle.asn1.cms.Time(java.util.Date, java.util.Locale)"], ["org.bouncycastle.asn1.cms.Time", "org.bouncycastle.asn1.cms.Time.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.Time getInstance(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.cms.Time.getTime()", "public java.lang.String getTime()"], ["java.util.Date", "org.bouncycastle.asn1.cms.Time.getDate()", "public java.util.Date getDate()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.Time.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.TimeStampAndCRL", "org.bouncycastle.asn1.cms.TimeStampAndCRL(org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.cms.TimeStampAndCRL(org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.cms.TimeStampAndCRL", "org.bouncycastle.asn1.cms.TimeStampAndCRL.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.TimeStampAndCRL getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.cms.TimeStampAndCRL.getTimeStampToken()", "public org.bouncycastle.asn1.cms.ContentInfo getTimeStampToken()"], ["org.bouncycastle.asn1.x509.CertificateList", "org.bouncycastle.asn1.cms.TimeStampAndCRL.getCertificateList()", "public org.bouncycastle.asn1.x509.CertificateList getCertificateList()"], ["org.bouncycastle.asn1.x509.CertificateList", "org.bouncycastle.asn1.cms.TimeStampAndCRL.getCRL()", "public org.bouncycastle.asn1.x509.CertificateList getCRL()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.TimeStampAndCRL.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.TimeStampTokenEvidence", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence(org.bouncycastle.asn1.cms.TimeStampAndCRL[])", "public org.bouncycastle.asn1.cms.TimeStampTokenEvidence(org.bouncycastle.asn1.cms.TimeStampAndCRL[])"], ["org.bouncycastle.asn1.cms.TimeStampTokenEvidence", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence(org.bouncycastle.asn1.cms.TimeStampAndCRL)", "public org.bouncycastle.asn1.cms.TimeStampTokenEvidence(org.bouncycastle.asn1.cms.TimeStampAndCRL)"], ["org.bouncycastle.asn1.cms.TimeStampTokenEvidence", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.TimeStampTokenEvidence", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.TimeStampAndCRL[]", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence.toTimeStampAndCRLArray()", "public org.bouncycastle.asn1.cms.TimeStampAndCRL[] toTimeStampAndCRLArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.TimeStampTokenEvidence.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.TimeStampedData", "org.bouncycastle.asn1.cms.TimeStampedData(org.bouncycastle.asn1.DERIA5String, org.bouncycastle.asn1.cms.MetaData, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.cms.Evidence)", "public org.bouncycastle.asn1.cms.TimeStampedData(org.bouncycastle.asn1.DERIA5String, org.bouncycastle.asn1.cms.MetaData, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.cms.Evidence)"], ["org.bouncycastle.asn1.cms.TimeStampedData", "org.bouncycastle.asn1.cms.TimeStampedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.TimeStampedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.cms.TimeStampedData.getDataUri()", "public org.bouncycastle.asn1.DERIA5String getDataUri()"], ["org.bouncycastle.asn1.cms.MetaData", "org.bouncycastle.asn1.cms.TimeStampedData.getMetaData()", "public org.bouncycastle.asn1.cms.MetaData getMetaData()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.TimeStampedData.getContent()", "public org.bouncycastle.asn1.ASN1OctetString getContent()"], ["org.bouncycastle.asn1.cms.Evidence", "org.bouncycastle.asn1.cms.TimeStampedData.getTemporalEvidence()", "public org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.TimeStampedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.TimeStampedDataParser", "org.bouncycastle.asn1.cms.TimeStampedDataParser.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.TimeStampedDataParser getInstance(java.lang.Object) throws java.io.IOException"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.cms.TimeStampedDataParser.getDataUri()", "public org.bouncycastle.asn1.DERIA5String getDataUri()"], ["org.bouncycastle.asn1.cms.MetaData", "org.bouncycastle.asn1.cms.TimeStampedDataParser.getMetaData()", "public org.bouncycastle.asn1.cms.MetaData getMetaData()"], ["org.bouncycastle.asn1.ASN1OctetStringParser", "org.bouncycastle.asn1.cms.TimeStampedDataParser.getContent()", "public org.bouncycastle.asn1.ASN1OctetStringParser getContent()"], ["org.bouncycastle.asn1.cms.Evidence", "org.bouncycastle.asn1.cms.TimeStampedDataParser.getTemporalEvidence()", "public org.bouncycastle.asn1.cms.Evidence getTemporalEvidence() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.TimeStampedDataParser.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial(org.bouncycastle.asn1.cms.OriginatorPublicKey, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial(org.bouncycastle.asn1.cms.OriginatorPublicKey, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cms.OriginatorPublicKey", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial.getEphemeralPublicKey()", "public org.bouncycastle.asn1.cms.OriginatorPublicKey getEphemeralPublicKey()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial.getAddedukm()", "public org.bouncycastle.asn1.ASN1OctetString getAddedukm()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.AttributeTypeAndValue", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.AttributeTypeAndValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.AttributeTypeAndValue", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.crmf.AttributeTypeAndValue(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.crmf.AttributeTypeAndValue", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.crmf.AttributeTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue.getType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.AttributeTypeAndValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.crmf.CertId.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.CertId getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.crmf.CertId.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.crmf.CertId getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.crmf.CertId(org.bouncycastle.asn1.x509.GeneralName, java.math.BigInteger)", "public org.bouncycastle.asn1.crmf.CertId(org.bouncycastle.asn1.x509.GeneralName, java.math.BigInteger)"], ["org.bouncycastle.asn1.crmf.CertId", "org.bouncycastle.asn1.crmf.CertId(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.crmf.CertId(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.crmf.CertId.getIssuer()", "public org.bouncycastle.asn1.x509.GeneralName getIssuer()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.crmf.CertId.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.CertId.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertReqMessages", "org.bouncycastle.asn1.crmf.CertReqMessages.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.CertReqMessages getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.CertReqMessages", "org.bouncycastle.asn1.crmf.CertReqMessages(org.bouncycastle.asn1.crmf.CertReqMsg)", "public org.bouncycastle.asn1.crmf.CertReqMessages(org.bouncycastle.asn1.crmf.CertReqMsg)"], ["org.bouncycastle.asn1.crmf.CertReqMessages", "org.bouncycastle.asn1.crmf.CertReqMessages(org.bouncycastle.asn1.crmf.CertReqMsg[])", "public org.bouncycastle.asn1.crmf.CertReqMessages(org.bouncycastle.asn1.crmf.CertReqMsg[])"], ["org.bouncycastle.asn1.crmf.CertReqMsg[]", "org.bouncycastle.asn1.crmf.CertReqMessages.toCertReqMsgArray()", "public org.bouncycastle.asn1.crmf.CertReqMsg[] toCertReqMsgArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.CertReqMessages.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertReqMsg", "org.bouncycastle.asn1.crmf.CertReqMsg.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.CertReqMsg", "org.bouncycastle.asn1.crmf.CertReqMsg(org.bouncycastle.asn1.crmf.CertRequest, org.bouncycastle.asn1.crmf.ProofOfPossession, org.bouncycastle.asn1.crmf.AttributeTypeAndValue[])", "public org.bouncycastle.asn1.crmf.CertReqMsg(org.bouncycastle.asn1.crmf.CertRequest, org.bouncycastle.asn1.crmf.ProofOfPossession, org.bouncycastle.asn1.crmf.AttributeTypeAndValue[])"], ["org.bouncycastle.asn1.crmf.CertRequest", "org.bouncycastle.asn1.crmf.CertReqMsg.getCertReq()", "public org.bouncycastle.asn1.crmf.CertRequest getCertReq()"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.CertReqMsg.getPop()", "public org.bouncycastle.asn1.crmf.ProofOfPossession getPop()"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.CertReqMsg.getPopo()", "public org.bouncycastle.asn1.crmf.ProofOfPossession getPopo()"], ["org.bouncycastle.asn1.crmf.AttributeTypeAndValue[]", "org.bouncycastle.asn1.crmf.CertReqMsg.getRegInfo()", "public org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] getRegInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.CertReqMsg.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertRequest", "org.bouncycastle.asn1.crmf.CertRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.CertRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.CertRequest", "org.bouncycastle.asn1.crmf.CertRequest(int, org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.crmf.Controls)", "public org.bouncycastle.asn1.crmf.CertRequest(int, org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.crmf.Controls)"], ["org.bouncycastle.asn1.crmf.CertRequest", "org.bouncycastle.asn1.crmf.CertRequest(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.crmf.Controls)", "public org.bouncycastle.asn1.crmf.CertRequest(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.crmf.CertTemplate, org.bouncycastle.asn1.crmf.Controls)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.crmf.CertRequest.getCertReqId()", "public org.bouncycastle.asn1.ASN1Integer getCertReqId()"], ["org.bouncycastle.asn1.crmf.CertTemplate", "org.bouncycastle.asn1.crmf.CertRequest.getCertTemplate()", "public org.bouncycastle.asn1.crmf.CertTemplate getCertTemplate()"], ["org.bouncycastle.asn1.crmf.Controls", "org.bouncycastle.asn1.crmf.CertRequest.getControls()", "public org.bouncycastle.asn1.crmf.Controls getControls()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.CertRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertTemplate", "org.bouncycastle.asn1.crmf.CertTemplate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.CertTemplate getInstance(java.lang.Object)"], ["int", "org.bouncycastle.asn1.crmf.CertTemplate.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.crmf.CertTemplate.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.CertTemplate.getSigningAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigningAlg()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.crmf.CertTemplate.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.crmf.OptionalValidity", "org.bouncycastle.asn1.crmf.CertTemplate.getValidity()", "public org.bouncycastle.asn1.crmf.OptionalValidity getValidity()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.crmf.CertTemplate.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.crmf.CertTemplate.getPublicKey()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.CertTemplate.getIssuerUID()", "public org.bouncycastle.asn1.DERBitString getIssuerUID()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.CertTemplate.getSubjectUID()", "public org.bouncycastle.asn1.DERBitString getSubjectUID()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.crmf.CertTemplate.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.CertTemplate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder()", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder()"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setVersion(int)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setVersion(int)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setSerialNumber(org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setSerialNumber(org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setSigningAlg(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setSigningAlg(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setIssuer(org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setIssuer(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setValidity(org.bouncycastle.asn1.crmf.OptionalValidity)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setValidity(org.bouncycastle.asn1.crmf.OptionalValidity)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setSubject(org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setSubject(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setIssuerUID(org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setIssuerUID(org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setSubjectUID(org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setSubjectUID(org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setExtensions(org.bouncycastle.asn1.x509.X509Extensions)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setExtensions(org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.crmf.CertTemplateBuilder", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.crmf.CertTemplateBuilder setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.crmf.CertTemplate", "org.bouncycastle.asn1.crmf.CertTemplateBuilder.build()", "public org.bouncycastle.asn1.crmf.CertTemplate build()"], ["org.bouncycastle.asn1.crmf.Controls", "org.bouncycastle.asn1.crmf.Controls.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.Controls getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.Controls", "org.bouncycastle.asn1.crmf.Controls(org.bouncycastle.asn1.crmf.AttributeTypeAndValue)", "public org.bouncycastle.asn1.crmf.Controls(org.bouncycastle.asn1.crmf.AttributeTypeAndValue)"], ["org.bouncycastle.asn1.crmf.Controls", "org.bouncycastle.asn1.crmf.Controls(org.bouncycastle.asn1.crmf.AttributeTypeAndValue[])", "public org.bouncycastle.asn1.crmf.Controls(org.bouncycastle.asn1.crmf.AttributeTypeAndValue[])"], ["org.bouncycastle.asn1.crmf.AttributeTypeAndValue[]", "org.bouncycastle.asn1.crmf.Controls.toAttributeTypeAndValueArray()", "public org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.Controls.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.EncKeyWithID", "org.bouncycastle.asn1.crmf.EncKeyWithID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.EncKeyWithID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.EncKeyWithID", "org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"], ["org.bouncycastle.asn1.crmf.EncKeyWithID", "org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo, org.bouncycastle.asn1.DERUTF8String)", "public org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo, org.bouncycastle.asn1.DERUTF8String)"], ["org.bouncycastle.asn1.crmf.EncKeyWithID", "org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.crmf.EncKeyWithID(org.bouncycastle.asn1.pkcs.PrivateKeyInfo, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.crmf.EncKeyWithID.getPrivateKey()", "public org.bouncycastle.asn1.pkcs.PrivateKeyInfo getPrivateKey()"], ["boolean", "org.bouncycastle.asn1.crmf.EncKeyWithID.hasIdentifier()", "public boolean hasIdentifier()"], ["boolean", "org.bouncycastle.asn1.crmf.EncKeyWithID.isIdentifierUTF8String()", "public boolean isIdentifierUTF8String()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.EncKeyWithID.getIdentifier()", "public org.bouncycastle.asn1.ASN1Encodable getIdentifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.EncKeyWithID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.EncryptedKey", "org.bouncycastle.asn1.crmf.EncryptedKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.EncryptedKey", "org.bouncycastle.asn1.crmf.EncryptedKey(org.bouncycastle.asn1.cms.EnvelopedData)", "public org.bouncycastle.asn1.crmf.EncryptedKey(org.bouncycastle.asn1.cms.EnvelopedData)"], ["org.bouncycastle.asn1.crmf.EncryptedKey", "org.bouncycastle.asn1.crmf.EncryptedKey(org.bouncycastle.asn1.crmf.EncryptedValue)", "public org.bouncycastle.asn1.crmf.EncryptedKey(org.bouncycastle.asn1.crmf.EncryptedValue)"], ["boolean", "org.bouncycastle.asn1.crmf.EncryptedKey.isEncryptedValue()", "public boolean isEncryptedValue()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.EncryptedKey.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.EncryptedKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.EncryptedValue", "org.bouncycastle.asn1.crmf.EncryptedValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.EncryptedValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.EncryptedValue", "org.bouncycastle.asn1.crmf.EncryptedValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.EncryptedValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.EncryptedValue.getIntendedAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getIntendedAlg()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.EncryptedValue.getSymmAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSymmAlg()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.EncryptedValue.getEncSymmKey()", "public org.bouncycastle.asn1.DERBitString getEncSymmKey()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.EncryptedValue.getKeyAlg()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyAlg()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.crmf.EncryptedValue.getValueHint()", "public org.bouncycastle.asn1.ASN1OctetString getValueHint()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.EncryptedValue.getEncValue()", "public org.bouncycastle.asn1.DERBitString getEncValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.EncryptedValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.OptionalValidity", "org.bouncycastle.asn1.crmf.OptionalValidity.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.OptionalValidity getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.OptionalValidity", "org.bouncycastle.asn1.crmf.OptionalValidity(org.bouncycastle.asn1.x509.Time, org.bouncycastle.asn1.x509.Time)", "public org.bouncycastle.asn1.crmf.OptionalValidity(org.bouncycastle.asn1.x509.Time, org.bouncycastle.asn1.x509.Time)"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.crmf.OptionalValidity.getNotBefore()", "public org.bouncycastle.asn1.x509.Time getNotBefore()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.crmf.OptionalValidity.getNotAfter()", "public org.bouncycastle.asn1.x509.Time getNotAfter()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.OptionalValidity.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.PKIArchiveOptions", "org.bouncycastle.asn1.crmf.PKIArchiveOptions.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.PKIArchiveOptions getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.PKIArchiveOptions", "org.bouncycastle.asn1.crmf.PKIArchiveOptions(org.bouncycastle.asn1.crmf.EncryptedKey)", "public org.bouncycastle.asn1.crmf.PKIArchiveOptions(org.bouncycastle.asn1.crmf.EncryptedKey)"], ["org.bouncycastle.asn1.crmf.PKIArchiveOptions", "org.bouncycastle.asn1.crmf.PKIArchiveOptions(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.crmf.PKIArchiveOptions(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.crmf.PKIArchiveOptions", "org.bouncycastle.asn1.crmf.PKIArchiveOptions(boolean)", "public org.bouncycastle.asn1.crmf.PKIArchiveOptions(boolean)"], ["int", "org.bouncycastle.asn1.crmf.PKIArchiveOptions.getType()", "public int getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.PKIArchiveOptions.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.PKIArchiveOptions.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.PKIPublicationInfo", "org.bouncycastle.asn1.crmf.PKIPublicationInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.PKIPublicationInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.crmf.PKIPublicationInfo.getAction()", "public org.bouncycastle.asn1.ASN1Integer getAction()"], ["org.bouncycastle.asn1.crmf.SinglePubInfo[]", "org.bouncycastle.asn1.crmf.PKIPublicationInfo.getPubInfos()", "public org.bouncycastle.asn1.crmf.SinglePubInfo[] getPubInfos()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.PKIPublicationInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.PKMACValue", "org.bouncycastle.asn1.crmf.PKMACValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.PKMACValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.PKMACValue", "org.bouncycastle.asn1.crmf.PKMACValue.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.crmf.PKMACValue getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.crmf.PKMACValue", "org.bouncycastle.asn1.crmf.PKMACValue(org.bouncycastle.asn1.cmp.PBMParameter, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.PKMACValue(org.bouncycastle.asn1.cmp.PBMParameter, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.crmf.PKMACValue", "org.bouncycastle.asn1.crmf.PKMACValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.PKMACValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.PKMACValue.getAlgId()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgId()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.PKMACValue.getValue()", "public org.bouncycastle.asn1.DERBitString getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.PKMACValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.POPOPrivKey", "org.bouncycastle.asn1.crmf.POPOPrivKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.POPOPrivKey", "org.bouncycastle.asn1.crmf.POPOPrivKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.crmf.POPOPrivKey", "org.bouncycastle.asn1.crmf.POPOPrivKey(org.bouncycastle.asn1.crmf.SubsequentMessage)", "public org.bouncycastle.asn1.crmf.POPOPrivKey(org.bouncycastle.asn1.crmf.SubsequentMessage)"], ["int", "org.bouncycastle.asn1.crmf.POPOPrivKey.getType()", "public int getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.POPOPrivKey.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.POPOPrivKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.POPOSigningKey", "org.bouncycastle.asn1.crmf.POPOSigningKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.POPOSigningKey", "org.bouncycastle.asn1.crmf.POPOSigningKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.crmf.POPOSigningKey", "org.bouncycastle.asn1.crmf.POPOSigningKey(org.bouncycastle.asn1.crmf.POPOSigningKeyInput, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.crmf.POPOSigningKey(org.bouncycastle.asn1.crmf.POPOSigningKeyInput, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.crmf.POPOSigningKeyInput", "org.bouncycastle.asn1.crmf.POPOSigningKey.getPoposkInput()", "public org.bouncycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.crmf.POPOSigningKey.getAlgorithmIdentifier()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.crmf.POPOSigningKey.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.POPOSigningKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.POPOSigningKeyInput", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.POPOSigningKeyInput getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.POPOSigningKeyInput", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.asn1.crmf.POPOSigningKeyInput(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["org.bouncycastle.asn1.crmf.POPOSigningKeyInput", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput(org.bouncycastle.asn1.crmf.PKMACValue, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.asn1.crmf.POPOSigningKeyInput(org.bouncycastle.asn1.crmf.PKMACValue, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput.getSender()", "public org.bouncycastle.asn1.x509.GeneralName getSender()"], ["org.bouncycastle.asn1.crmf.PKMACValue", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput.getPublicKeyMAC()", "public org.bouncycastle.asn1.crmf.PKMACValue getPublicKeyMAC()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput.getPublicKey()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.POPOSigningKeyInput.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.ProofOfPossession.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.ProofOfPossession getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.ProofOfPossession()", "public org.bouncycastle.asn1.crmf.ProofOfPossession()"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.ProofOfPossession(org.bouncycastle.asn1.crmf.POPOSigningKey)", "public org.bouncycastle.asn1.crmf.ProofOfPossession(org.bouncycastle.asn1.crmf.POPOSigningKey)"], ["org.bouncycastle.asn1.crmf.ProofOfPossession", "org.bouncycastle.asn1.crmf.ProofOfPossession(int, org.bouncycastle.asn1.crmf.POPOPrivKey)", "public org.bouncycastle.asn1.crmf.ProofOfPossession(int, org.bouncycastle.asn1.crmf.POPOPrivKey)"], ["int", "org.bouncycastle.asn1.crmf.ProofOfPossession.getType()", "public int getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.crmf.ProofOfPossession.getObject()", "public org.bouncycastle.asn1.ASN1Encodable getObject()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.ProofOfPossession.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.SinglePubInfo", "org.bouncycastle.asn1.crmf.SinglePubInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.crmf.SinglePubInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.crmf.SinglePubInfo.getPubLocation()", "public org.bouncycastle.asn1.x509.GeneralName getPubLocation()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.crmf.SinglePubInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.crmf.SubsequentMessage", "org.bouncycastle.asn1.crmf.SubsequentMessage.valueOf(int)", "public static org.bouncycastle.asn1.crmf.SubsequentMessage valueOf(int)"], ["org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves()", "public org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves()"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.crypto.params.ECDomainParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.crypto.params.ECDomainParameters getByName(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, java.math.BigInteger)", "public org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, java.math.BigInteger)"], ["org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters(org.bouncycastle.asn1.ASN1Sequence)"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.getA()", "public java.math.BigInteger getA()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cryptopro.GOST28147Parameters", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cryptopro.GOST28147Parameters", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cryptopro.GOST28147Parameters", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cryptopro.GOST28147Parameters(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters.getEncryptionParamSet()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getEncryptionParamSet()"], ["byte[]", "org.bouncycastle.asn1.cryptopro.GOST28147Parameters.getIV()", "public byte[] getIV()"], ["org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters", "org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters()", "public org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters()"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters.getByName(java.lang.String)", "public static org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.GOST3410NamedParameters.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters(org.bouncycastle.asn1.ASN1Sequence)"], ["int", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getLKeySize()", "public int getLKeySize()"], ["int", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getKeySize()", "public int getKeySize()"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.getA()", "public java.math.BigInteger getA()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.getPublicKeyParamSet()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getPublicKeyParamSet()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.getDigestParamSet()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getDigestParamSet()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.getEncryptionParamSet()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getEncryptionParamSet()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.dvcs.CertEtcToken", "org.bouncycastle.asn1.dvcs.CertEtcToken(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.dvcs.CertEtcToken(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.dvcs.CertEtcToken", "org.bouncycastle.asn1.dvcs.CertEtcToken(org.bouncycastle.asn1.x509.Extension)", "public org.bouncycastle.asn1.dvcs.CertEtcToken(org.bouncycastle.asn1.x509.Extension)"], ["org.bouncycastle.asn1.dvcs.CertEtcToken", "org.bouncycastle.asn1.dvcs.CertEtcToken.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.CertEtcToken getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.CertEtcToken.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.dvcs.CertEtcToken.getTagNo()", "public int getTagNo()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.dvcs.CertEtcToken.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.dvcs.CertEtcToken.getExtension()", "public org.bouncycastle.asn1.x509.Extension getExtension()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.CertEtcToken.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.CertEtcToken[]", "org.bouncycastle.asn1.dvcs.CertEtcToken.arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)", "public static org.bouncycastle.asn1.dvcs.CertEtcToken[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfo(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.x509.DigestInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.dvcs.DVCSTime)", "public org.bouncycastle.asn1.dvcs.DVCSCertInfo(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.x509.DigestInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.dvcs.DVCSTime)"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformation", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getDvReqInfo()", "public org.bouncycastle.asn1.dvcs.DVCSRequestInformation getDvReqInfo()"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getMessageImprint()", "public org.bouncycastle.asn1.x509.DigestInfo getMessageImprint()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getResponseTime()", "public org.bouncycastle.asn1.dvcs.DVCSTime getResponseTime()"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getDvStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getDvStatus()"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getPolicy()", "public org.bouncycastle.asn1.x509.PolicyInformation getPolicy()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getReqSignature()", "public org.bouncycastle.asn1.ASN1Set getReqSignature()"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain[]", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getCerts()", "public org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.dvcs.DVCSCertInfo.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.x509.DigestInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.dvcs.DVCSTime)", "public org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.x509.DigestInfo, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.dvcs.DVCSTime)"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfo", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.build()", "public org.bouncycastle.asn1.dvcs.DVCSCertInfo build()"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setVersion(int)", "public void setVersion(int)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setDvReqInfo(org.bouncycastle.asn1.dvcs.DVCSRequestInformation)", "public void setDvReqInfo(org.bouncycastle.asn1.dvcs.DVCSRequestInformation)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setMessageImprint(org.bouncycastle.asn1.x509.DigestInfo)", "public void setMessageImprint(org.bouncycastle.asn1.x509.DigestInfo)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setSerialNumber(org.bouncycastle.asn1.ASN1Integer)", "public void setSerialNumber(org.bouncycastle.asn1.ASN1Integer)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setResponseTime(org.bouncycastle.asn1.dvcs.DVCSTime)", "public void setResponseTime(org.bouncycastle.asn1.dvcs.DVCSTime)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setDvStatus(org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public void setDvStatus(org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setPolicy(org.bouncycastle.asn1.x509.PolicyInformation)", "public void setPolicy(org.bouncycastle.asn1.x509.PolicyInformation)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setReqSignature(org.bouncycastle.asn1.ASN1Set)", "public void setReqSignature(org.bouncycastle.asn1.ASN1Set)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setCerts(org.bouncycastle.asn1.dvcs.TargetEtcChain[])", "public void setCerts(org.bouncycastle.asn1.dvcs.TargetEtcChain[])"], ["void", "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.dvcs.DVCSErrorNotice", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice(org.bouncycastle.asn1.cmp.PKIStatusInfo)", "public org.bouncycastle.asn1.dvcs.DVCSErrorNotice(org.bouncycastle.asn1.cmp.PKIStatusInfo)"], ["org.bouncycastle.asn1.dvcs.DVCSErrorNotice", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.dvcs.DVCSErrorNotice(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.dvcs.DVCSErrorNotice", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSErrorNotice", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.getTransactionStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getTransactionStatus()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.dvcs.DVCSErrorNotice.getTransactionIdentifier()", "public org.bouncycastle.asn1.x509.GeneralName getTransactionIdentifier()"], ["org.bouncycastle.asn1.dvcs.DVCSRequest", "org.bouncycastle.asn1.dvcs.DVCSRequest(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.dvcs.Data)", "public org.bouncycastle.asn1.dvcs.DVCSRequest(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.dvcs.Data)"], ["org.bouncycastle.asn1.dvcs.DVCSRequest", "org.bouncycastle.asn1.dvcs.DVCSRequest(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.dvcs.Data, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.dvcs.DVCSRequest(org.bouncycastle.asn1.dvcs.DVCSRequestInformation, org.bouncycastle.asn1.dvcs.Data, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.dvcs.DVCSRequest", "org.bouncycastle.asn1.dvcs.DVCSRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSRequest", "org.bouncycastle.asn1.dvcs.DVCSRequest.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSRequest.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.DVCSRequest.getData()", "public org.bouncycastle.asn1.dvcs.Data getData()"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformation", "org.bouncycastle.asn1.dvcs.DVCSRequest.getRequestInformation()", "public org.bouncycastle.asn1.dvcs.DVCSRequestInformation getRequestInformation()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.dvcs.DVCSRequest.getTransactionIdentifier()", "public org.bouncycastle.asn1.x509.GeneralName getTransactionIdentifier()"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformation", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformation", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.dvcs.ServiceType", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getService()", "public org.bouncycastle.asn1.dvcs.ServiceType getService()"], ["java.math.BigInteger", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getNonce()", "public java.math.BigInteger getNonce()"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getRequestTime()", "public org.bouncycastle.asn1.dvcs.DVCSTime getRequestTime()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getRequester()", "public org.bouncycastle.asn1.x509.GeneralNames getRequester()"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getRequestPolicy()", "public org.bouncycastle.asn1.x509.PolicyInformation getRequestPolicy()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getDVCS()", "public org.bouncycastle.asn1.x509.GeneralNames getDVCS()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getDataLocations()", "public org.bouncycastle.asn1.x509.GeneralNames getDataLocations()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.dvcs.DVCSRequestInformation.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.ServiceType)", "public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.ServiceType)"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation)", "public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation)"], ["org.bouncycastle.asn1.dvcs.DVCSRequestInformation", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.build()", "public org.bouncycastle.asn1.dvcs.DVCSRequestInformation build()"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setVersion(int)", "public void setVersion(int)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setNonce(java.math.BigInteger)", "public void setNonce(java.math.BigInteger)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setRequestTime(org.bouncycastle.asn1.dvcs.DVCSTime)", "public void setRequestTime(org.bouncycastle.asn1.dvcs.DVCSTime)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setRequester(org.bouncycastle.asn1.x509.GeneralName)", "public void setRequester(org.bouncycastle.asn1.x509.GeneralName)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setRequester(org.bouncycastle.asn1.x509.GeneralNames)", "public void setRequester(org.bouncycastle.asn1.x509.GeneralNames)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setRequestPolicy(org.bouncycastle.asn1.x509.PolicyInformation)", "public void setRequestPolicy(org.bouncycastle.asn1.x509.PolicyInformation)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setDVCS(org.bouncycastle.asn1.x509.GeneralName)", "public void setDVCS(org.bouncycastle.asn1.x509.GeneralName)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setDVCS(org.bouncycastle.asn1.x509.GeneralNames)", "public void setDVCS(org.bouncycastle.asn1.x509.GeneralNames)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setDataLocations(org.bouncycastle.asn1.x509.GeneralName)", "public void setDataLocations(org.bouncycastle.asn1.x509.GeneralName)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setDataLocations(org.bouncycastle.asn1.x509.GeneralNames)", "public void setDataLocations(org.bouncycastle.asn1.x509.GeneralNames)"], ["void", "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.dvcs.DVCSResponse", "org.bouncycastle.asn1.dvcs.DVCSResponse(org.bouncycastle.asn1.dvcs.DVCSCertInfo)", "public org.bouncycastle.asn1.dvcs.DVCSResponse(org.bouncycastle.asn1.dvcs.DVCSCertInfo)"], ["org.bouncycastle.asn1.dvcs.DVCSResponse", "org.bouncycastle.asn1.dvcs.DVCSResponse(org.bouncycastle.asn1.dvcs.DVCSErrorNotice)", "public org.bouncycastle.asn1.dvcs.DVCSResponse(org.bouncycastle.asn1.dvcs.DVCSErrorNotice)"], ["org.bouncycastle.asn1.dvcs.DVCSResponse", "org.bouncycastle.asn1.dvcs.DVCSResponse.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSResponse", "org.bouncycastle.asn1.dvcs.DVCSResponse.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.dvcs.DVCSCertInfo", "org.bouncycastle.asn1.dvcs.DVCSResponse.getCertInfo()", "public org.bouncycastle.asn1.dvcs.DVCSCertInfo getCertInfo()"], ["org.bouncycastle.asn1.dvcs.DVCSErrorNotice", "org.bouncycastle.asn1.dvcs.DVCSResponse.getErrorNotice()", "public org.bouncycastle.asn1.dvcs.DVCSErrorNotice getErrorNotice()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSResponse.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSResponse.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSTime(java.util.Date)", "public org.bouncycastle.asn1.dvcs.DVCSTime(java.util.Date)"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSTime(org.bouncycastle.asn1.ASN1GeneralizedTime)", "public org.bouncycastle.asn1.dvcs.DVCSTime(org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSTime(org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.dvcs.DVCSTime(org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSTime.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.DVCSTime getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.DVCSTime", "org.bouncycastle.asn1.dvcs.DVCSTime.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.DVCSTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.dvcs.DVCSTime.getGenTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getGenTime()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.dvcs.DVCSTime.getTimeStampToken()", "public org.bouncycastle.asn1.cms.ContentInfo getTimeStampToken()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.DVCSTime.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.DVCSTime.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data(byte[])", "public org.bouncycastle.asn1.dvcs.Data(byte[])"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.x509.DigestInfo)", "public org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.x509.DigestInfo)"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.dvcs.TargetEtcChain)", "public org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.dvcs.TargetEtcChain)"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.dvcs.TargetEtcChain[])", "public org.bouncycastle.asn1.dvcs.Data(org.bouncycastle.asn1.dvcs.TargetEtcChain[])"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.Data getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.Data", "org.bouncycastle.asn1.dvcs.Data.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.Data getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.Data.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.Data.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.dvcs.Data.getMessage()", "public org.bouncycastle.asn1.ASN1OctetString getMessage()"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.dvcs.Data.getMessageImprint()", "public org.bouncycastle.asn1.x509.DigestInfo getMessageImprint()"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain[]", "org.bouncycastle.asn1.dvcs.Data.getCerts()", "public org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()"], ["org.bouncycastle.asn1.dvcs.PathProcInput", "org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[])", "public org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[])"], ["org.bouncycastle.asn1.dvcs.PathProcInput", "org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[], boolean, boolean, boolean)", "public org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[], boolean, boolean, boolean)"], ["org.bouncycastle.asn1.dvcs.PathProcInput", "org.bouncycastle.asn1.dvcs.PathProcInput.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.PathProcInput", "org.bouncycastle.asn1.dvcs.PathProcInput.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.PathProcInput getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.PathProcInput.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.PathProcInput.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.PolicyInformation[]", "org.bouncycastle.asn1.dvcs.PathProcInput.getAcceptablePolicySet()", "public org.bouncycastle.asn1.x509.PolicyInformation[] getAcceptablePolicySet()"], ["boolean", "org.bouncycastle.asn1.dvcs.PathProcInput.isInhibitPolicyMapping()", "public boolean isInhibitPolicyMapping()"], ["boolean", "org.bouncycastle.asn1.dvcs.PathProcInput.isExplicitPolicyReqd()", "public boolean isExplicitPolicyReqd()"], ["boolean", "org.bouncycastle.asn1.dvcs.PathProcInput.isInhibitAnyPolicy()", "public boolean isInhibitAnyPolicy()"], ["org.bouncycastle.asn1.dvcs.ServiceType", "org.bouncycastle.asn1.dvcs.ServiceType(int)", "public org.bouncycastle.asn1.dvcs.ServiceType(int)"], ["org.bouncycastle.asn1.dvcs.ServiceType", "org.bouncycastle.asn1.dvcs.ServiceType.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.ServiceType getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.ServiceType", "org.bouncycastle.asn1.dvcs.ServiceType.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.ServiceType getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["java.math.BigInteger", "org.bouncycastle.asn1.dvcs.ServiceType.getValue()", "public java.math.BigInteger getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.ServiceType.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.ServiceType.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken)", "public org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken)"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.CertEtcToken[])", "public org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.CertEtcToken[])"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.PathProcInput)", "public org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.PathProcInput)"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.CertEtcToken[], org.bouncycastle.asn1.dvcs.PathProcInput)", "public org.bouncycastle.asn1.dvcs.TargetEtcChain(org.bouncycastle.asn1.dvcs.CertEtcToken, org.bouncycastle.asn1.dvcs.CertEtcToken[], org.bouncycastle.asn1.dvcs.PathProcInput)"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain", "org.bouncycastle.asn1.dvcs.TargetEtcChain.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.dvcs.TargetEtcChain.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.dvcs.TargetEtcChain.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.dvcs.CertEtcToken", "org.bouncycastle.asn1.dvcs.TargetEtcChain.getTarget()", "public org.bouncycastle.asn1.dvcs.CertEtcToken getTarget()"], ["org.bouncycastle.asn1.dvcs.CertEtcToken[]", "org.bouncycastle.asn1.dvcs.TargetEtcChain.getChain()", "public org.bouncycastle.asn1.dvcs.CertEtcToken[] getChain()"], ["org.bouncycastle.asn1.dvcs.PathProcInput", "org.bouncycastle.asn1.dvcs.TargetEtcChain.getPathProcInput()", "public org.bouncycastle.asn1.dvcs.PathProcInput getPathProcInput()"], ["org.bouncycastle.asn1.dvcs.TargetEtcChain[]", "org.bouncycastle.asn1.dvcs.TargetEtcChain.arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)", "public static org.bouncycastle.asn1.dvcs.TargetEtcChain[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.eac.BidirectionalMap", "org.bouncycastle.asn1.eac.BidirectionalMap()", "public org.bouncycastle.asn1.eac.BidirectionalMap()"], ["java.lang.Object", "org.bouncycastle.asn1.eac.BidirectionalMap.getReverse(java.lang.Object)", "public java.lang.Object getReverse(java.lang.Object)"], ["java.lang.Object", "org.bouncycastle.asn1.eac.BidirectionalMap.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["org.bouncycastle.asn1.eac.CVCertificate", "org.bouncycastle.asn1.eac.CVCertificate(org.bouncycastle.asn1.ASN1InputStream)", "public org.bouncycastle.asn1.eac.CVCertificate(org.bouncycastle.asn1.ASN1InputStream) throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CVCertificate", "org.bouncycastle.asn1.eac.CVCertificate(org.bouncycastle.asn1.eac.CertificateBody, byte[])", "public org.bouncycastle.asn1.eac.CVCertificate(org.bouncycastle.asn1.eac.CertificateBody, byte[]) throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CVCertificate", "org.bouncycastle.asn1.eac.CVCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.eac.CVCertificate getInstance(java.lang.Object)"], ["byte[]", "org.bouncycastle.asn1.eac.CVCertificate.getSignature()", "public byte[] getSignature()"], ["org.bouncycastle.asn1.eac.CertificateBody", "org.bouncycastle.asn1.eac.CVCertificate.getBody()", "public org.bouncycastle.asn1.eac.CertificateBody getBody()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.CVCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.eac.CVCertificate.getHolderAuthorization()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getHolderAuthorization() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.CVCertificate.getEffectiveDate()", "public org.bouncycastle.asn1.eac.PackedDate getEffectiveDate() throws java.io.IOException"], ["int", "org.bouncycastle.asn1.eac.CVCertificate.getCertificateType()", "public int getCertificateType()"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.CVCertificate.getExpirationDate()", "public org.bouncycastle.asn1.eac.PackedDate getExpirationDate() throws java.io.IOException"], ["int", "org.bouncycastle.asn1.eac.CVCertificate.getRole()", "public int getRole() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CertificationAuthorityReference", "org.bouncycastle.asn1.eac.CVCertificate.getAuthorityReference()", "public org.bouncycastle.asn1.eac.CertificationAuthorityReference getAuthorityReference() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CertificateHolderReference", "org.bouncycastle.asn1.eac.CVCertificate.getHolderReference()", "public org.bouncycastle.asn1.eac.CertificateHolderReference getHolderReference() throws java.io.IOException"], ["int", "org.bouncycastle.asn1.eac.CVCertificate.getHolderAuthorizationRole()", "public int getHolderAuthorizationRole() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.Flags", "org.bouncycastle.asn1.eac.CVCertificate.getHolderAuthorizationRights()", "public org.bouncycastle.asn1.eac.Flags getHolderAuthorizationRights() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CVCertificateRequest", "org.bouncycastle.asn1.eac.CVCertificateRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.eac.CVCertificateRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.eac.CertificateBody", "org.bouncycastle.asn1.eac.CVCertificateRequest.getCertificateBody()", "public org.bouncycastle.asn1.eac.CertificateBody getCertificateBody()"], ["org.bouncycastle.asn1.eac.PublicKeyDataObject", "org.bouncycastle.asn1.eac.CVCertificateRequest.getPublicKey()", "public org.bouncycastle.asn1.eac.PublicKeyDataObject getPublicKey()"], ["byte[]", "org.bouncycastle.asn1.eac.CVCertificateRequest.getInnerSignature()", "public byte[] getInnerSignature()"], ["byte[]", "org.bouncycastle.asn1.eac.CVCertificateRequest.getOuterSignature()", "public byte[] getOuterSignature()"], ["boolean", "org.bouncycastle.asn1.eac.CVCertificateRequest.hasOuterSignature()", "public boolean hasOuterSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.CVCertificateRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.eac.CertificateBody", "org.bouncycastle.asn1.eac.CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific, org.bouncycastle.asn1.eac.CertificationAuthorityReference, org.bouncycastle.asn1.eac.PublicKeyDataObject, org.bouncycastle.asn1.eac.CertificateHolderReference, org.bouncycastle.asn1.eac.CertificateHolderAuthorization, org.bouncycastle.asn1.eac.PackedDate, org.bouncycastle.asn1.eac.PackedDate)", "public org.bouncycastle.asn1.eac.CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific, org.bouncycastle.asn1.eac.CertificationAuthorityReference, org.bouncycastle.asn1.eac.PublicKeyDataObject, org.bouncycastle.asn1.eac.CertificateHolderReference, org.bouncycastle.asn1.eac.CertificateHolderAuthorization, org.bouncycastle.asn1.eac.PackedDate, org.bouncycastle.asn1.eac.PackedDate)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.CertificateBody.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateType()", "public int getCertificateType()"], ["org.bouncycastle.asn1.eac.CertificateBody", "org.bouncycastle.asn1.eac.CertificateBody.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.eac.CertificateBody getInstance(java.lang.Object) throws java.io.IOException"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateEffectiveDate()", "public org.bouncycastle.asn1.eac.PackedDate getCertificateEffectiveDate()"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateExpirationDate()", "public org.bouncycastle.asn1.eac.PackedDate getCertificateExpirationDate() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CertificateHolderAuthorization", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateHolderAuthorization()", "public org.bouncycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CertificateHolderReference", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateHolderReference()", "public org.bouncycastle.asn1.eac.CertificateHolderReference getCertificateHolderReference()"], ["org.bouncycastle.asn1.DERApplicationSpecific", "org.bouncycastle.asn1.eac.CertificateBody.getCertificateProfileIdentifier()", "public org.bouncycastle.asn1.DERApplicationSpecific getCertificateProfileIdentifier()"], ["org.bouncycastle.asn1.eac.CertificationAuthorityReference", "org.bouncycastle.asn1.eac.CertificateBody.getCertificationAuthorityReference()", "public org.bouncycastle.asn1.eac.CertificationAuthorityReference getCertificationAuthorityReference() throws java.io.IOException"], ["org.bouncycastle.asn1.eac.PublicKeyDataObject", "org.bouncycastle.asn1.eac.CertificateBody.getPublicKey()", "public org.bouncycastle.asn1.eac.PublicKeyDataObject getPublicKey()"], ["java.lang.String", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization.GetRoleDescription(int)", "public static java.lang.String GetRoleDescription(int)"], ["int", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization.GetFlag(java.lang.String)", "public static int GetFlag(java.lang.String)"], ["org.bouncycastle.asn1.eac.CertificateHolderAuthorization", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization(org.bouncycastle.asn1.ASN1ObjectIdentifier, int)", "public org.bouncycastle.asn1.eac.CertificateHolderAuthorization(org.bouncycastle.asn1.ASN1ObjectIdentifier, int) throws java.io.IOException"], ["org.bouncycastle.asn1.eac.CertificateHolderAuthorization", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization(org.bouncycastle.asn1.DERApplicationSpecific)", "public org.bouncycastle.asn1.eac.CertificateHolderAuthorization(org.bouncycastle.asn1.DERApplicationSpecific) throws java.io.IOException"], ["int", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization.getAccessRights()", "public int getAccessRights()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization.getOid()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOid()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.CertificateHolderAuthorization.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.eac.CertificateHolderReference", "org.bouncycastle.asn1.eac.CertificateHolderReference(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.asn1.eac.CertificateHolderReference(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.eac.CertificateHolderReference.getCountryCode()", "public java.lang.String getCountryCode()"], ["java.lang.String", "org.bouncycastle.asn1.eac.CertificateHolderReference.getHolderMnemonic()", "public java.lang.String getHolderMnemonic()"], ["java.lang.String", "org.bouncycastle.asn1.eac.CertificateHolderReference.getSequenceNumber()", "public java.lang.String getSequenceNumber()"], ["byte[]", "org.bouncycastle.asn1.eac.CertificateHolderReference.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.asn1.eac.CertificationAuthorityReference", "org.bouncycastle.asn1.eac.CertificationAuthorityReference(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.asn1.eac.CertificationAuthorityReference(java.lang.String, java.lang.String, java.lang.String)"], ["org.bouncycastle.asn1.eac.EACTags", "org.bouncycastle.asn1.eac.EACTags()", "public org.bouncycastle.asn1.eac.EACTags()"], ["int", "org.bouncycastle.asn1.eac.EACTags.getTag(int)", "public static int getTag(int)"], ["int", "org.bouncycastle.asn1.eac.EACTags.getTagNo(int)", "public static int getTagNo(int)"], ["int", "org.bouncycastle.asn1.eac.EACTags.encodeTag(org.bouncycastle.asn1.DERApplicationSpecific)", "public static int encodeTag(org.bouncycastle.asn1.DERApplicationSpecific)"], ["int", "org.bouncycastle.asn1.eac.EACTags.decodeTag(int)", "public static int decodeTag(int)"], ["org.bouncycastle.asn1.eac.ECDSAPublicKey", "org.bouncycastle.asn1.eac.ECDSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, byte[])", "public org.bouncycastle.asn1.eac.ECDSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, byte[]) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.asn1.eac.ECDSAPublicKey", "org.bouncycastle.asn1.eac.ECDSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, byte[], java.math.BigInteger, byte[], int)", "public org.bouncycastle.asn1.eac.ECDSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, byte[], java.math.BigInteger, byte[], int)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getUsage()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getUsage()"], ["byte[]", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getBasePointG()", "public byte[] getBasePointG()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getCofactorF()", "public java.math.BigInteger getCofactorF()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getFirstCoefA()", "public java.math.BigInteger getFirstCoefA()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getOrderOfBasePointR()", "public java.math.BigInteger getOrderOfBasePointR()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getPrimeModulusP()", "public java.math.BigInteger getPrimeModulusP()"], ["byte[]", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getPublicPointY()", "public byte[] getPublicPointY()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getSecondCoefB()", "public java.math.BigInteger getSecondCoefB()"], ["boolean", "org.bouncycastle.asn1.eac.ECDSAPublicKey.hasParameters()", "public boolean hasParameters()"], ["org.bouncycastle.asn1.ASN1EncodableVector", "org.bouncycastle.asn1.eac.ECDSAPublicKey.getASN1EncodableVector(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean)", "public org.bouncycastle.asn1.ASN1EncodableVector getASN1EncodableVector(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.ECDSAPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.eac.Flags$StringJoiner", "org.bouncycastle.asn1.eac.Flags$StringJoiner(org.bouncycastle.asn1.eac.Flags, java.lang.String)", "public org.bouncycastle.asn1.eac.Flags$StringJoiner(org.bouncycastle.asn1.eac.Flags, java.lang.String)"], ["void", "org.bouncycastle.asn1.eac.Flags$StringJoiner.add(java.lang.String)", "public void add(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.eac.Flags$StringJoiner.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.eac.Flags", "org.bouncycastle.asn1.eac.Flags()", "public org.bouncycastle.asn1.eac.Flags()"], ["org.bouncycastle.asn1.eac.Flags", "org.bouncycastle.asn1.eac.Flags(int)", "public org.bouncycastle.asn1.eac.Flags(int)"], ["void", "org.bouncycastle.asn1.eac.Flags.set(int)", "public void set(int)"], ["boolean", "org.bouncycastle.asn1.eac.Flags.isSet(int)", "public boolean isSet(int)"], ["int", "org.bouncycastle.asn1.eac.Flags.getFlags()", "public int getFlags()"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.PackedDate(java.lang.String)", "public org.bouncycastle.asn1.eac.PackedDate(java.lang.String)"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.PackedDate(java.util.Date)", "public org.bouncycastle.asn1.eac.PackedDate(java.util.Date)"], ["org.bouncycastle.asn1.eac.PackedDate", "org.bouncycastle.asn1.eac.PackedDate(java.util.Date, java.util.Locale)", "public org.bouncycastle.asn1.eac.PackedDate(java.util.Date, java.util.Locale)"], ["java.util.Date", "org.bouncycastle.asn1.eac.PackedDate.getDate()", "public java.util.Date getDate() throws java.text.ParseException"], ["int", "org.bouncycastle.asn1.eac.PackedDate.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.eac.PackedDate.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.eac.PackedDate.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.asn1.eac.PackedDate.getEncoding()", "public byte[] getEncoding()"], ["org.bouncycastle.asn1.eac.PublicKeyDataObject", "org.bouncycastle.asn1.eac.PublicKeyDataObject()", "public org.bouncycastle.asn1.eac.PublicKeyDataObject()"], ["org.bouncycastle.asn1.eac.PublicKeyDataObject", "org.bouncycastle.asn1.eac.PublicKeyDataObject.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.eac.RSAPublicKey", "org.bouncycastle.asn1.eac.RSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.eac.RSAPublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.eac.RSAPublicKey.getUsage()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getUsage()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.RSAPublicKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.RSAPublicKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.RSAPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.eac.UnsignedInteger", "org.bouncycastle.asn1.eac.UnsignedInteger(int, java.math.BigInteger)", "public org.bouncycastle.asn1.eac.UnsignedInteger(int, java.math.BigInteger)"], ["org.bouncycastle.asn1.eac.UnsignedInteger", "org.bouncycastle.asn1.eac.UnsignedInteger.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)"], ["int", "org.bouncycastle.asn1.eac.UnsignedInteger.getTagNo()", "public int getTagNo()"], ["java.math.BigInteger", "org.bouncycastle.asn1.eac.UnsignedInteger.getValue()", "public java.math.BigInteger getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.eac.UnsignedInteger.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CommitmentTypeIndication", "org.bouncycastle.asn1.esf.CommitmentTypeIndication(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.esf.CommitmentTypeIndication(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.esf.CommitmentTypeIndication", "org.bouncycastle.asn1.esf.CommitmentTypeIndication(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.esf.CommitmentTypeIndication(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.esf.CommitmentTypeIndication", "org.bouncycastle.asn1.esf.CommitmentTypeIndication.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CommitmentTypeIndication getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.CommitmentTypeIndication.getCommitmentTypeId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getCommitmentTypeId()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.esf.CommitmentTypeIndication.getCommitmentTypeQualifier()", "public org.bouncycastle.asn1.ASN1Sequence getCommitmentTypeQualifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CommitmentTypeIndication.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CommitmentTypeQualifier", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.esf.CommitmentTypeQualifier(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.esf.CommitmentTypeQualifier", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.esf.CommitmentTypeQualifier(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.esf.CommitmentTypeQualifier", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CommitmentTypeQualifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier.getCommitmentTypeIdentifier()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getCommitmentTypeIdentifier()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier.getQualifier()", "public org.bouncycastle.asn1.ASN1Encodable getQualifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CommitmentTypeQualifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CompleteRevocationRefs", "org.bouncycastle.asn1.esf.CompleteRevocationRefs.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CompleteRevocationRefs getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.CompleteRevocationRefs", "org.bouncycastle.asn1.esf.CompleteRevocationRefs(org.bouncycastle.asn1.esf.CrlOcspRef[])", "public org.bouncycastle.asn1.esf.CompleteRevocationRefs(org.bouncycastle.asn1.esf.CrlOcspRef[])"], ["org.bouncycastle.asn1.esf.CrlOcspRef[]", "org.bouncycastle.asn1.esf.CompleteRevocationRefs.getCrlOcspRefs()", "public org.bouncycastle.asn1.esf.CrlOcspRef[] getCrlOcspRefs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CompleteRevocationRefs.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CrlIdentifier", "org.bouncycastle.asn1.esf.CrlIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CrlIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.CrlIdentifier", "org.bouncycastle.asn1.esf.CrlIdentifier(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.ASN1UTCTime)", "public org.bouncycastle.asn1.esf.CrlIdentifier(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.ASN1UTCTime)"], ["org.bouncycastle.asn1.esf.CrlIdentifier", "org.bouncycastle.asn1.esf.CrlIdentifier(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.ASN1UTCTime, java.math.BigInteger)", "public org.bouncycastle.asn1.esf.CrlIdentifier(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.ASN1UTCTime, java.math.BigInteger)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.esf.CrlIdentifier.getCrlIssuer()", "public org.bouncycastle.asn1.x500.X500Name getCrlIssuer()"], ["org.bouncycastle.asn1.ASN1UTCTime", "org.bouncycastle.asn1.esf.CrlIdentifier.getCrlIssuedTime()", "public org.bouncycastle.asn1.ASN1UTCTime getCrlIssuedTime()"], ["java.math.BigInteger", "org.bouncycastle.asn1.esf.CrlIdentifier.getCrlNumber()", "public java.math.BigInteger getCrlNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CrlIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CrlListID", "org.bouncycastle.asn1.esf.CrlListID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CrlListID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.CrlListID", "org.bouncycastle.asn1.esf.CrlListID(org.bouncycastle.asn1.esf.CrlValidatedID[])", "public org.bouncycastle.asn1.esf.CrlListID(org.bouncycastle.asn1.esf.CrlValidatedID[])"], ["org.bouncycastle.asn1.esf.CrlValidatedID[]", "org.bouncycastle.asn1.esf.CrlListID.getCrls()", "public org.bouncycastle.asn1.esf.CrlValidatedID[] getCrls()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CrlListID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CrlOcspRef", "org.bouncycastle.asn1.esf.CrlOcspRef.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CrlOcspRef getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.CrlOcspRef", "org.bouncycastle.asn1.esf.CrlOcspRef(org.bouncycastle.asn1.esf.CrlListID, org.bouncycastle.asn1.esf.OcspListID, org.bouncycastle.asn1.esf.OtherRevRefs)", "public org.bouncycastle.asn1.esf.CrlOcspRef(org.bouncycastle.asn1.esf.CrlListID, org.bouncycastle.asn1.esf.OcspListID, org.bouncycastle.asn1.esf.OtherRevRefs)"], ["org.bouncycastle.asn1.esf.CrlListID", "org.bouncycastle.asn1.esf.CrlOcspRef.getCrlids()", "public org.bouncycastle.asn1.esf.CrlListID getCrlids()"], ["org.bouncycastle.asn1.esf.OcspListID", "org.bouncycastle.asn1.esf.CrlOcspRef.getOcspids()", "public org.bouncycastle.asn1.esf.OcspListID getOcspids()"], ["org.bouncycastle.asn1.esf.OtherRevRefs", "org.bouncycastle.asn1.esf.CrlOcspRef.getOtherRev()", "public org.bouncycastle.asn1.esf.OtherRevRefs getOtherRev()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CrlOcspRef.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.CrlValidatedID", "org.bouncycastle.asn1.esf.CrlValidatedID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.CrlValidatedID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.CrlValidatedID", "org.bouncycastle.asn1.esf.CrlValidatedID(org.bouncycastle.asn1.esf.OtherHash)", "public org.bouncycastle.asn1.esf.CrlValidatedID(org.bouncycastle.asn1.esf.OtherHash)"], ["org.bouncycastle.asn1.esf.CrlValidatedID", "org.bouncycastle.asn1.esf.CrlValidatedID(org.bouncycastle.asn1.esf.OtherHash, org.bouncycastle.asn1.esf.CrlIdentifier)", "public org.bouncycastle.asn1.esf.CrlValidatedID(org.bouncycastle.asn1.esf.OtherHash, org.bouncycastle.asn1.esf.CrlIdentifier)"], ["org.bouncycastle.asn1.esf.OtherHash", "org.bouncycastle.asn1.esf.CrlValidatedID.getCrlHash()", "public org.bouncycastle.asn1.esf.OtherHash getCrlHash()"], ["org.bouncycastle.asn1.esf.CrlIdentifier", "org.bouncycastle.asn1.esf.CrlValidatedID.getCrlIdentifier()", "public org.bouncycastle.asn1.esf.CrlIdentifier getCrlIdentifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.CrlValidatedID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OcspIdentifier", "org.bouncycastle.asn1.esf.OcspIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OcspIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OcspIdentifier", "org.bouncycastle.asn1.esf.OcspIdentifier(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime)", "public org.bouncycastle.asn1.esf.OcspIdentifier(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.esf.OcspIdentifier.getOcspResponderID()", "public org.bouncycastle.asn1.ocsp.ResponderID getOcspResponderID()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.esf.OcspIdentifier.getProducedAt()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getProducedAt()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OcspIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OcspListID", "org.bouncycastle.asn1.esf.OcspListID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OcspListID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OcspListID", "org.bouncycastle.asn1.esf.OcspListID(org.bouncycastle.asn1.esf.OcspResponsesID[])", "public org.bouncycastle.asn1.esf.OcspListID(org.bouncycastle.asn1.esf.OcspResponsesID[])"], ["org.bouncycastle.asn1.esf.OcspResponsesID[]", "org.bouncycastle.asn1.esf.OcspListID.getOcspResponses()", "public org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OcspListID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OcspResponsesID", "org.bouncycastle.asn1.esf.OcspResponsesID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OcspResponsesID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OcspResponsesID", "org.bouncycastle.asn1.esf.OcspResponsesID(org.bouncycastle.asn1.esf.OcspIdentifier)", "public org.bouncycastle.asn1.esf.OcspResponsesID(org.bouncycastle.asn1.esf.OcspIdentifier)"], ["org.bouncycastle.asn1.esf.OcspResponsesID", "org.bouncycastle.asn1.esf.OcspResponsesID(org.bouncycastle.asn1.esf.OcspIdentifier, org.bouncycastle.asn1.esf.OtherHash)", "public org.bouncycastle.asn1.esf.OcspResponsesID(org.bouncycastle.asn1.esf.OcspIdentifier, org.bouncycastle.asn1.esf.OtherHash)"], ["org.bouncycastle.asn1.esf.OcspIdentifier", "org.bouncycastle.asn1.esf.OcspResponsesID.getOcspIdentifier()", "public org.bouncycastle.asn1.esf.OcspIdentifier getOcspIdentifier()"], ["org.bouncycastle.asn1.esf.OtherHash", "org.bouncycastle.asn1.esf.OcspResponsesID.getOcspRepHash()", "public org.bouncycastle.asn1.esf.OtherHash getOcspRepHash()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OcspResponsesID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OtherHash", "org.bouncycastle.asn1.esf.OtherHash.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OtherHash getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OtherHash", "org.bouncycastle.asn1.esf.OtherHash(org.bouncycastle.asn1.esf.OtherHashAlgAndValue)", "public org.bouncycastle.asn1.esf.OtherHash(org.bouncycastle.asn1.esf.OtherHashAlgAndValue)"], ["org.bouncycastle.asn1.esf.OtherHash", "org.bouncycastle.asn1.esf.OtherHash(byte[])", "public org.bouncycastle.asn1.esf.OtherHash(byte[])"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.esf.OtherHash.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["byte[]", "org.bouncycastle.asn1.esf.OtherHash.getHashValue()", "public byte[] getHashValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OtherHash.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OtherHashAlgAndValue", "org.bouncycastle.asn1.esf.OtherHashAlgAndValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OtherHashAlgAndValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OtherHashAlgAndValue", "org.bouncycastle.asn1.esf.OtherHashAlgAndValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.esf.OtherHashAlgAndValue(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.esf.OtherHashAlgAndValue.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.esf.OtherHashAlgAndValue.getHashValue()", "public org.bouncycastle.asn1.ASN1OctetString getHashValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OtherHashAlgAndValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OtherRevRefs", "org.bouncycastle.asn1.esf.OtherRevRefs.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OtherRevRefs getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OtherRevRefs", "org.bouncycastle.asn1.esf.OtherRevRefs(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.esf.OtherRevRefs(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.OtherRevRefs.getOtherRevRefType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOtherRevRefType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.esf.OtherRevRefs.getOtherRevRefs()", "public org.bouncycastle.asn1.ASN1Encodable getOtherRevRefs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OtherRevRefs.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.OtherRevVals", "org.bouncycastle.asn1.esf.OtherRevVals.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.OtherRevVals getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.OtherRevVals", "org.bouncycastle.asn1.esf.OtherRevVals(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.esf.OtherRevVals(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.OtherRevVals.getOtherRevValType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOtherRevValType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.esf.OtherRevVals.getOtherRevVals()", "public org.bouncycastle.asn1.ASN1Encodable getOtherRevVals()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.OtherRevVals.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.RevocationValues", "org.bouncycastle.asn1.esf.RevocationValues.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.RevocationValues getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.RevocationValues", "org.bouncycastle.asn1.esf.RevocationValues(org.bouncycastle.asn1.x509.CertificateList[], org.bouncycastle.asn1.ocsp.BasicOCSPResponse[], org.bouncycastle.asn1.esf.OtherRevVals)", "public org.bouncycastle.asn1.esf.RevocationValues(org.bouncycastle.asn1.x509.CertificateList[], org.bouncycastle.asn1.ocsp.BasicOCSPResponse[], org.bouncycastle.asn1.esf.OtherRevVals)"], ["org.bouncycastle.asn1.x509.CertificateList[]", "org.bouncycastle.asn1.esf.RevocationValues.getCrlVals()", "public org.bouncycastle.asn1.x509.CertificateList[] getCrlVals()"], ["org.bouncycastle.asn1.ocsp.BasicOCSPResponse[]", "org.bouncycastle.asn1.esf.RevocationValues.getOcspVals()", "public org.bouncycastle.asn1.ocsp.BasicOCSPResponse[] getOcspVals()"], ["org.bouncycastle.asn1.esf.OtherRevVals", "org.bouncycastle.asn1.esf.RevocationValues.getOtherRevVals()", "public org.bouncycastle.asn1.esf.OtherRevVals getOtherRevVals()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.RevocationValues.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SPUserNotice", "org.bouncycastle.asn1.esf.SPUserNotice.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SPUserNotice getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SPUserNotice", "org.bouncycastle.asn1.esf.SPUserNotice(org.bouncycastle.asn1.x509.NoticeReference, org.bouncycastle.asn1.x509.DisplayText)", "public org.bouncycastle.asn1.esf.SPUserNotice(org.bouncycastle.asn1.x509.NoticeReference, org.bouncycastle.asn1.x509.DisplayText)"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.esf.SPUserNotice.getNoticeRef()", "public org.bouncycastle.asn1.x509.NoticeReference getNoticeRef()"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.esf.SPUserNotice.getExplicitText()", "public org.bouncycastle.asn1.x509.DisplayText getExplicitText()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SPUserNotice.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SPuri", "org.bouncycastle.asn1.esf.SPuri.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SPuri getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SPuri", "org.bouncycastle.asn1.esf.SPuri(org.bouncycastle.asn1.DERIA5String)", "public org.bouncycastle.asn1.esf.SPuri(org.bouncycastle.asn1.DERIA5String)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.esf.SPuri.getUri()", "public org.bouncycastle.asn1.DERIA5String getUri()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SPuri.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SigPolicyQualifierInfo", "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.esf.SigPolicyQualifierInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.esf.SigPolicyQualifierInfo", "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo.getSigPolicyQualifierId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getSigPolicyQualifierId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo.getSigQualifier()", "public org.bouncycastle.asn1.ASN1Encodable getSigQualifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SigPolicyQualifiers", "org.bouncycastle.asn1.esf.SigPolicyQualifiers.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SigPolicyQualifiers getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SigPolicyQualifiers", "org.bouncycastle.asn1.esf.SigPolicyQualifiers(org.bouncycastle.asn1.esf.SigPolicyQualifierInfo[])", "public org.bouncycastle.asn1.esf.SigPolicyQualifiers(org.bouncycastle.asn1.esf.SigPolicyQualifierInfo[])"], ["int", "org.bouncycastle.asn1.esf.SigPolicyQualifiers.size()", "public int size()"], ["org.bouncycastle.asn1.esf.SigPolicyQualifierInfo", "org.bouncycastle.asn1.esf.SigPolicyQualifiers.getInfoAt(int)", "public org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInfoAt(int)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SigPolicyQualifiers.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SignaturePolicyId", "org.bouncycastle.asn1.esf.SignaturePolicyId.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SignaturePolicyId getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SignaturePolicyId", "org.bouncycastle.asn1.esf.SignaturePolicyId(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.esf.OtherHashAlgAndValue)", "public org.bouncycastle.asn1.esf.SignaturePolicyId(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.esf.OtherHashAlgAndValue)"], ["org.bouncycastle.asn1.esf.SignaturePolicyId", "org.bouncycastle.asn1.esf.SignaturePolicyId(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.esf.OtherHashAlgAndValue, org.bouncycastle.asn1.esf.SigPolicyQualifiers)", "public org.bouncycastle.asn1.esf.SignaturePolicyId(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.esf.OtherHashAlgAndValue, org.bouncycastle.asn1.esf.SigPolicyQualifiers)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.esf.SignaturePolicyId.getSigPolicyId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getSigPolicyId()"], ["org.bouncycastle.asn1.esf.OtherHashAlgAndValue", "org.bouncycastle.asn1.esf.SignaturePolicyId.getSigPolicyHash()", "public org.bouncycastle.asn1.esf.OtherHashAlgAndValue getSigPolicyHash()"], ["org.bouncycastle.asn1.esf.SigPolicyQualifiers", "org.bouncycastle.asn1.esf.SignaturePolicyId.getSigPolicyQualifiers()", "public org.bouncycastle.asn1.esf.SigPolicyQualifiers getSigPolicyQualifiers()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SignaturePolicyId.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SignaturePolicyIdentifier", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SignaturePolicyIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SignaturePolicyIdentifier", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier()", "public org.bouncycastle.asn1.esf.SignaturePolicyIdentifier()"], ["org.bouncycastle.asn1.esf.SignaturePolicyIdentifier", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier(org.bouncycastle.asn1.esf.SignaturePolicyId)", "public org.bouncycastle.asn1.esf.SignaturePolicyIdentifier(org.bouncycastle.asn1.esf.SignaturePolicyId)"], ["org.bouncycastle.asn1.esf.SignaturePolicyId", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier.getSignaturePolicyId()", "public org.bouncycastle.asn1.esf.SignaturePolicyId getSignaturePolicyId()"], ["boolean", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier.isSignaturePolicyImplied()", "public boolean isSignaturePolicyImplied()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SignerAttribute", "org.bouncycastle.asn1.esf.SignerAttribute.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SignerAttribute getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.esf.SignerAttribute", "org.bouncycastle.asn1.esf.SignerAttribute(org.bouncycastle.asn1.x509.Attribute[])", "public org.bouncycastle.asn1.esf.SignerAttribute(org.bouncycastle.asn1.x509.Attribute[])"], ["org.bouncycastle.asn1.esf.SignerAttribute", "org.bouncycastle.asn1.esf.SignerAttribute(org.bouncycastle.asn1.x509.AttributeCertificate)", "public org.bouncycastle.asn1.esf.SignerAttribute(org.bouncycastle.asn1.x509.AttributeCertificate)"], ["java.lang.Object[]", "org.bouncycastle.asn1.esf.SignerAttribute.getValues()", "public java.lang.Object[] getValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SignerAttribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.esf.SignerLocation", "org.bouncycastle.asn1.esf.SignerLocation(org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.esf.SignerLocation(org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.DERUTF8String, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.esf.SignerLocation", "org.bouncycastle.asn1.esf.SignerLocation.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.esf.SignerLocation getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.esf.SignerLocation.getCountryName()", "public org.bouncycastle.asn1.DERUTF8String getCountryName()"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.esf.SignerLocation.getLocalityName()", "public org.bouncycastle.asn1.DERUTF8String getLocalityName()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.esf.SignerLocation.getPostalAddress()", "public org.bouncycastle.asn1.ASN1Sequence getPostalAddress()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.esf.SignerLocation.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.ContentHints", "org.bouncycastle.asn1.ess.ContentHints.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.ContentHints getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.ContentHints", "org.bouncycastle.asn1.ess.ContentHints(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ess.ContentHints(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ess.ContentHints", "org.bouncycastle.asn1.ess.ContentHints(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.DERUTF8String)", "public org.bouncycastle.asn1.ess.ContentHints(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.DERUTF8String)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ess.ContentHints.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.DERUTF8String", "org.bouncycastle.asn1.ess.ContentHints.getContentDescription()", "public org.bouncycastle.asn1.DERUTF8String getContentDescription()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.ContentHints.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.ContentIdentifier", "org.bouncycastle.asn1.ess.ContentIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.ContentIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.ContentIdentifier", "org.bouncycastle.asn1.ess.ContentIdentifier(byte[])", "public org.bouncycastle.asn1.ess.ContentIdentifier(byte[])"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ess.ContentIdentifier.getValue()", "public org.bouncycastle.asn1.ASN1OctetString getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.ContentIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.ESSCertID", "org.bouncycastle.asn1.ess.ESSCertID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.ESSCertID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.ESSCertID", "org.bouncycastle.asn1.ess.ESSCertID(byte[])", "public org.bouncycastle.asn1.ess.ESSCertID(byte[])"], ["org.bouncycastle.asn1.ess.ESSCertID", "org.bouncycastle.asn1.ess.ESSCertID(byte[], org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.ess.ESSCertID(byte[], org.bouncycastle.asn1.x509.IssuerSerial)"], ["byte[]", "org.bouncycastle.asn1.ess.ESSCertID.getCertHash()", "public byte[] getCertHash()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.ess.ESSCertID.getIssuerSerial()", "public org.bouncycastle.asn1.x509.IssuerSerial getIssuerSerial()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.ESSCertID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.ESSCertIDv2", "org.bouncycastle.asn1.ess.ESSCertIDv2.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.ESSCertIDv2 getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.ESSCertIDv2", "org.bouncycastle.asn1.ess.ESSCertIDv2(byte[])", "public org.bouncycastle.asn1.ess.ESSCertIDv2(byte[])"], ["org.bouncycastle.asn1.ess.ESSCertIDv2", "org.bouncycastle.asn1.ess.ESSCertIDv2(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.ess.ESSCertIDv2(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.ess.ESSCertIDv2", "org.bouncycastle.asn1.ess.ESSCertIDv2(byte[], org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.ess.ESSCertIDv2(byte[], org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.ess.ESSCertIDv2", "org.bouncycastle.asn1.ess.ESSCertIDv2(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.ess.ESSCertIDv2(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.ess.ESSCertIDv2.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["byte[]", "org.bouncycastle.asn1.ess.ESSCertIDv2.getCertHash()", "public byte[] getCertHash()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.ess.ESSCertIDv2.getIssuerSerial()", "public org.bouncycastle.asn1.x509.IssuerSerial getIssuerSerial()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.ESSCertIDv2.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.OtherCertID", "org.bouncycastle.asn1.ess.OtherCertID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.OtherCertID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.OtherCertID", "org.bouncycastle.asn1.ess.OtherCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.ess.OtherCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.ess.OtherCertID", "org.bouncycastle.asn1.ess.OtherCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.ess.OtherCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[], org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.ess.OtherCertID.getAlgorithmHash()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()"], ["byte[]", "org.bouncycastle.asn1.ess.OtherCertID.getCertHash()", "public byte[] getCertHash()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.ess.OtherCertID.getIssuerSerial()", "public org.bouncycastle.asn1.x509.IssuerSerial getIssuerSerial()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.OtherCertID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.OtherSigningCertificate", "org.bouncycastle.asn1.ess.OtherSigningCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.OtherSigningCertificate getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.OtherSigningCertificate", "org.bouncycastle.asn1.ess.OtherSigningCertificate(org.bouncycastle.asn1.ess.OtherCertID)", "public org.bouncycastle.asn1.ess.OtherSigningCertificate(org.bouncycastle.asn1.ess.OtherCertID)"], ["org.bouncycastle.asn1.ess.OtherCertID[]", "org.bouncycastle.asn1.ess.OtherSigningCertificate.getCerts()", "public org.bouncycastle.asn1.ess.OtherCertID[] getCerts()"], ["org.bouncycastle.asn1.x509.PolicyInformation[]", "org.bouncycastle.asn1.ess.OtherSigningCertificate.getPolicies()", "public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.OtherSigningCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.SigningCertificate", "org.bouncycastle.asn1.ess.SigningCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.SigningCertificate getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.SigningCertificate", "org.bouncycastle.asn1.ess.SigningCertificate(org.bouncycastle.asn1.ess.ESSCertID)", "public org.bouncycastle.asn1.ess.SigningCertificate(org.bouncycastle.asn1.ess.ESSCertID)"], ["org.bouncycastle.asn1.ess.ESSCertID[]", "org.bouncycastle.asn1.ess.SigningCertificate.getCerts()", "public org.bouncycastle.asn1.ess.ESSCertID[] getCerts()"], ["org.bouncycastle.asn1.x509.PolicyInformation[]", "org.bouncycastle.asn1.ess.SigningCertificate.getPolicies()", "public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.SigningCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ess.SigningCertificateV2", "org.bouncycastle.asn1.ess.SigningCertificateV2.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ess.SigningCertificateV2 getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ess.SigningCertificateV2", "org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2)", "public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2)"], ["org.bouncycastle.asn1.ess.SigningCertificateV2", "org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[])", "public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[])"], ["org.bouncycastle.asn1.ess.SigningCertificateV2", "org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[], org.bouncycastle.asn1.x509.PolicyInformation[])", "public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[], org.bouncycastle.asn1.x509.PolicyInformation[])"], ["org.bouncycastle.asn1.ess.ESSCertIDv2[]", "org.bouncycastle.asn1.ess.SigningCertificateV2.getCerts()", "public org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts()"], ["org.bouncycastle.asn1.x509.PolicyInformation[]", "org.bouncycastle.asn1.ess.SigningCertificateV2.getPolicies()", "public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ess.SigningCertificateV2.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.icao.CscaMasterList", "org.bouncycastle.asn1.icao.CscaMasterList.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.icao.CscaMasterList getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.icao.CscaMasterList", "org.bouncycastle.asn1.icao.CscaMasterList(org.bouncycastle.asn1.x509.Certificate[])", "public org.bouncycastle.asn1.icao.CscaMasterList(org.bouncycastle.asn1.x509.Certificate[])"], ["int", "org.bouncycastle.asn1.icao.CscaMasterList.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.x509.Certificate[]", "org.bouncycastle.asn1.icao.CscaMasterList.getCertStructs()", "public org.bouncycastle.asn1.x509.Certificate[] getCertStructs()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.icao.CscaMasterList.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.icao.DataGroupHash", "org.bouncycastle.asn1.icao.DataGroupHash.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.icao.DataGroupHash getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.icao.DataGroupHash", "org.bouncycastle.asn1.icao.DataGroupHash(int, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.icao.DataGroupHash(int, org.bouncycastle.asn1.ASN1OctetString)"], ["int", "org.bouncycastle.asn1.icao.DataGroupHash.getDataGroupNumber()", "public int getDataGroupNumber()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.icao.DataGroupHash.getDataGroupHashValue()", "public org.bouncycastle.asn1.ASN1OctetString getDataGroupHashValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.icao.DataGroupHash.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.icao.LDSSecurityObject", "org.bouncycastle.asn1.icao.LDSSecurityObject.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.icao.LDSSecurityObject getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.icao.LDSSecurityObject", "org.bouncycastle.asn1.icao.LDSSecurityObject(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.icao.DataGroupHash[])", "public org.bouncycastle.asn1.icao.LDSSecurityObject(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.icao.DataGroupHash[])"], ["org.bouncycastle.asn1.icao.LDSSecurityObject", "org.bouncycastle.asn1.icao.LDSSecurityObject(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.icao.DataGroupHash[], org.bouncycastle.asn1.icao.LDSVersionInfo)", "public org.bouncycastle.asn1.icao.LDSSecurityObject(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.icao.DataGroupHash[], org.bouncycastle.asn1.icao.LDSVersionInfo)"], ["int", "org.bouncycastle.asn1.icao.LDSSecurityObject.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.icao.LDSSecurityObject.getDigestAlgorithmIdentifier()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmIdentifier()"], ["org.bouncycastle.asn1.icao.DataGroupHash[]", "org.bouncycastle.asn1.icao.LDSSecurityObject.getDatagroupHash()", "public org.bouncycastle.asn1.icao.DataGroupHash[] getDatagroupHash()"], ["org.bouncycastle.asn1.icao.LDSVersionInfo", "org.bouncycastle.asn1.icao.LDSSecurityObject.getVersionInfo()", "public org.bouncycastle.asn1.icao.LDSVersionInfo getVersionInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.icao.LDSSecurityObject.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.icao.LDSVersionInfo", "org.bouncycastle.asn1.icao.LDSVersionInfo(java.lang.String, java.lang.String)", "public org.bouncycastle.asn1.icao.LDSVersionInfo(java.lang.String, java.lang.String)"], ["org.bouncycastle.asn1.icao.LDSVersionInfo", "org.bouncycastle.asn1.icao.LDSVersionInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.icao.LDSVersionInfo getInstance(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.icao.LDSVersionInfo.getLdsVersion()", "public java.lang.String getLdsVersion()"], ["java.lang.String", "org.bouncycastle.asn1.icao.LDSVersionInfo.getUnicodeVersion()", "public java.lang.String getUnicodeVersion()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.icao.LDSVersionInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.ocsp.CertHash", "org.bouncycastle.asn1.isismtt.ocsp.CertHash.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.ocsp.CertHash getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.ocsp.CertHash", "org.bouncycastle.asn1.isismtt.ocsp.CertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.isismtt.ocsp.CertHash(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.isismtt.ocsp.CertHash.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["byte[]", "org.bouncycastle.asn1.isismtt.ocsp.CertHash.getCertificateHash()", "public byte[] getCertificateHash()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.ocsp.CertHash.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate(org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate(org.bouncycastle.asn1.x509.Certificate)"], ["org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate(int, byte[])", "public org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate(int, byte[])"], ["int", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate.getType()", "public int getType()"], ["byte[]", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate.getCertificateBytes()", "public byte[] getCertificateBytes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax", "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax", "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax(java.lang.String)", "public org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax(java.lang.String)"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax.getInformation()", "public org.bouncycastle.asn1.x500.DirectoryString getInformation()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax", "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax", "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax.getAdmissionAuthority()", "public org.bouncycastle.asn1.x509.GeneralName getAdmissionAuthority()"], ["org.bouncycastle.asn1.isismtt.x509.Admissions[]", "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax.getContentsOfAdmissions()", "public org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()"], ["org.bouncycastle.asn1.isismtt.x509.Admissions", "org.bouncycastle.asn1.isismtt.x509.Admissions.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.Admissions getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.Admissions", "org.bouncycastle.asn1.isismtt.x509.Admissions(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.isismtt.x509.NamingAuthority, org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[])", "public org.bouncycastle.asn1.isismtt.x509.Admissions(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.isismtt.x509.NamingAuthority, org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[])"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.isismtt.x509.Admissions.getAdmissionAuthority()", "public org.bouncycastle.asn1.x509.GeneralName getAdmissionAuthority()"], ["org.bouncycastle.asn1.isismtt.x509.NamingAuthority", "org.bouncycastle.asn1.isismtt.x509.Admissions.getNamingAuthority()", "public org.bouncycastle.asn1.isismtt.x509.NamingAuthority getNamingAuthority()"], ["org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[]", "org.bouncycastle.asn1.isismtt.x509.Admissions.getProfessionInfos()", "public org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.Admissions.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(int)", "public org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(int)"], ["org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(boolean, java.lang.String)", "public org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(boolean, java.lang.String)"], ["org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(org.bouncycastle.asn1.ASN1GeneralizedTime)", "public org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority(org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.getType()", "public int getType()"], ["int", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.notYoungerThan()", "public int notYoungerThan()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.fullAgeAtCountry()", "public org.bouncycastle.asn1.ASN1Sequence fullAgeAtCountry()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority.getDateOfBirth()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getDateOfBirth()"], ["org.bouncycastle.asn1.isismtt.x509.MonetaryLimit", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.MonetaryLimit getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.MonetaryLimit", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit(java.lang.String, int, int)", "public org.bouncycastle.asn1.isismtt.x509.MonetaryLimit(java.lang.String, int, int)"], ["java.lang.String", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit.getCurrency()", "public java.lang.String getCurrency()"], ["java.math.BigInteger", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit.getAmount()", "public java.math.BigInteger getAmount()"], ["java.math.BigInteger", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit.getExponent()", "public java.math.BigInteger getExponent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.NamingAuthority", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.NamingAuthority", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.getNamingAuthorityId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getNamingAuthorityId()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.getNamingAuthorityText()", "public org.bouncycastle.asn1.x500.DirectoryString getNamingAuthorityText()"], ["java.lang.String", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.getNamingAuthorityUrl()", "public java.lang.String getNamingAuthorityUrl()"], ["org.bouncycastle.asn1.isismtt.x509.NamingAuthority", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String, org.bouncycastle.asn1.x500.DirectoryString)", "public org.bouncycastle.asn1.isismtt.x509.NamingAuthority(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String, org.bouncycastle.asn1.x500.DirectoryString)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.NamingAuthority.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax(java.lang.String, org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax(java.lang.String, org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax(java.lang.String, org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax(java.lang.String, org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.x509.GeneralName)"], ["java.lang.String", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.getCountry()", "public java.lang.String getCountry()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.getTypeOfSubstitution()", "public org.bouncycastle.asn1.x500.DirectoryString getTypeOfSubstitution()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.getThirdPerson()", "public org.bouncycastle.asn1.x509.GeneralName getThirdPerson()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.getCertRef()", "public org.bouncycastle.asn1.x509.IssuerSerial getCertRef()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.isismtt.x509.ProfessionInfo", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.ProfessionInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.ProfessionInfo", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo(org.bouncycastle.asn1.isismtt.x509.NamingAuthority, org.bouncycastle.asn1.x500.DirectoryString[], org.bouncycastle.asn1.ASN1ObjectIdentifier[], java.lang.String, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.isismtt.x509.ProfessionInfo(org.bouncycastle.asn1.isismtt.x509.NamingAuthority, org.bouncycastle.asn1.x500.DirectoryString[], org.bouncycastle.asn1.ASN1ObjectIdentifier[], java.lang.String, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getAddProfessionInfo()", "public org.bouncycastle.asn1.ASN1OctetString getAddProfessionInfo()"], ["org.bouncycastle.asn1.isismtt.x509.NamingAuthority", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getNamingAuthority()", "public org.bouncycastle.asn1.isismtt.x509.NamingAuthority getNamingAuthority()"], ["org.bouncycastle.asn1.x500.DirectoryString[]", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getProfessionItems()", "public org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getProfessionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()"], ["java.lang.String", "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo.getRegistrationNumber()", "public java.lang.String getRegistrationNumber()"], ["org.bouncycastle.asn1.isismtt.x509.Restriction", "org.bouncycastle.asn1.isismtt.x509.Restriction.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.isismtt.x509.Restriction getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.isismtt.x509.Restriction", "org.bouncycastle.asn1.isismtt.x509.Restriction(java.lang.String)", "public org.bouncycastle.asn1.isismtt.x509.Restriction(java.lang.String)"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.isismtt.x509.Restriction.getRestriction()", "public org.bouncycastle.asn1.x500.DirectoryString getRestriction()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.isismtt.x509.Restriction.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.misc.CAST5CBCParameters", "org.bouncycastle.asn1.misc.CAST5CBCParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.misc.CAST5CBCParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.misc.CAST5CBCParameters", "org.bouncycastle.asn1.misc.CAST5CBCParameters(byte[], int)", "public org.bouncycastle.asn1.misc.CAST5CBCParameters(byte[], int)"], ["org.bouncycastle.asn1.misc.CAST5CBCParameters", "org.bouncycastle.asn1.misc.CAST5CBCParameters(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.misc.CAST5CBCParameters(org.bouncycastle.asn1.ASN1Sequence)"], ["byte[]", "org.bouncycastle.asn1.misc.CAST5CBCParameters.getIV()", "public byte[] getIV()"], ["int", "org.bouncycastle.asn1.misc.CAST5CBCParameters.getKeyLength()", "public int getKeyLength()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.misc.CAST5CBCParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.misc.IDEACBCPar", "org.bouncycastle.asn1.misc.IDEACBCPar.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.misc.IDEACBCPar getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.misc.IDEACBCPar", "org.bouncycastle.asn1.misc.IDEACBCPar(byte[])", "public org.bouncycastle.asn1.misc.IDEACBCPar(byte[])"], ["org.bouncycastle.asn1.misc.IDEACBCPar", "org.bouncycastle.asn1.misc.IDEACBCPar(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.misc.IDEACBCPar(org.bouncycastle.asn1.ASN1Sequence)"], ["byte[]", "org.bouncycastle.asn1.misc.IDEACBCPar.getIV()", "public byte[] getIV()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.misc.IDEACBCPar.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.misc.NetscapeCertType", "org.bouncycastle.asn1.misc.NetscapeCertType(int)", "public org.bouncycastle.asn1.misc.NetscapeCertType(int)"], ["org.bouncycastle.asn1.misc.NetscapeCertType", "org.bouncycastle.asn1.misc.NetscapeCertType(org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.misc.NetscapeCertType(org.bouncycastle.asn1.DERBitString)"], ["java.lang.String", "org.bouncycastle.asn1.misc.NetscapeCertType.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.misc.NetscapeRevocationURL", "org.bouncycastle.asn1.misc.NetscapeRevocationURL(org.bouncycastle.asn1.DERIA5String)", "public org.bouncycastle.asn1.misc.NetscapeRevocationURL(org.bouncycastle.asn1.DERIA5String)"], ["java.lang.String", "org.bouncycastle.asn1.misc.NetscapeRevocationURL.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.misc.VerisignCzagExtension", "org.bouncycastle.asn1.misc.VerisignCzagExtension(org.bouncycastle.asn1.DERIA5String)", "public org.bouncycastle.asn1.misc.VerisignCzagExtension(org.bouncycastle.asn1.DERIA5String)"], ["java.lang.String", "org.bouncycastle.asn1.misc.VerisignCzagExtension.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge", "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge.getChallenge()", "public org.bouncycastle.asn1.DERIA5String getChallenge()"], ["org.bouncycastle.asn1.nist.NISTNamedCurves", "org.bouncycastle.asn1.nist.NISTNamedCurves()", "public org.bouncycastle.asn1.nist.NISTNamedCurves()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.nist.NISTNamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.nist.NISTNamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.nist.NISTNamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.nist.NISTNamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.nist.NISTNamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.ocsp.BasicOCSPResponse", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse(org.bouncycastle.asn1.ocsp.ResponseData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.ocsp.BasicOCSPResponse(org.bouncycastle.asn1.ocsp.ResponseData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ocsp.BasicOCSPResponse", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.BasicOCSPResponse", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getTbsResponseData()", "public org.bouncycastle.asn1.ocsp.ResponseData getTbsResponseData()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.getCerts()", "public org.bouncycastle.asn1.ASN1Sequence getCerts()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.BasicOCSPResponse.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.CertID", "org.bouncycastle.asn1.ocsp.CertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.ocsp.CertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.ocsp.CertID", "org.bouncycastle.asn1.ocsp.CertID.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.CertID getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.CertID", "org.bouncycastle.asn1.ocsp.CertID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.CertID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.ocsp.CertID.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ocsp.CertID.getIssuerNameHash()", "public org.bouncycastle.asn1.ASN1OctetString getIssuerNameHash()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ocsp.CertID.getIssuerKeyHash()", "public org.bouncycastle.asn1.ASN1OctetString getIssuerKeyHash()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ocsp.CertID.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.CertID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus()", "public org.bouncycastle.asn1.ocsp.CertStatus()"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus(org.bouncycastle.asn1.ocsp.RevokedInfo)", "public org.bouncycastle.asn1.ocsp.CertStatus(org.bouncycastle.asn1.ocsp.RevokedInfo)"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.ocsp.CertStatus(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus(org.bouncycastle.asn1.ASN1TaggedObject)", "public org.bouncycastle.asn1.ocsp.CertStatus(org.bouncycastle.asn1.ASN1TaggedObject)"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.CertStatus getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.CertStatus.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.CertStatus getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["int", "org.bouncycastle.asn1.ocsp.CertStatus.getTagNo()", "public int getTagNo()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.ocsp.CertStatus.getStatus()", "public org.bouncycastle.asn1.ASN1Encodable getStatus()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.CertStatus.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.CrlID", "org.bouncycastle.asn1.ocsp.CrlID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.CrlID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.ocsp.CrlID.getCrlUrl()", "public org.bouncycastle.asn1.DERIA5String getCrlUrl()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ocsp.CrlID.getCrlNum()", "public org.bouncycastle.asn1.ASN1Integer getCrlNum()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ocsp.CrlID.getCrlTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getCrlTime()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.CrlID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.OCSPRequest", "org.bouncycastle.asn1.ocsp.OCSPRequest(org.bouncycastle.asn1.ocsp.TBSRequest, org.bouncycastle.asn1.ocsp.Signature)", "public org.bouncycastle.asn1.ocsp.OCSPRequest(org.bouncycastle.asn1.ocsp.TBSRequest, org.bouncycastle.asn1.ocsp.Signature)"], ["org.bouncycastle.asn1.ocsp.OCSPRequest", "org.bouncycastle.asn1.ocsp.OCSPRequest.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.OCSPRequest", "org.bouncycastle.asn1.ocsp.OCSPRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.TBSRequest", "org.bouncycastle.asn1.ocsp.OCSPRequest.getTbsRequest()", "public org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()"], ["org.bouncycastle.asn1.ocsp.Signature", "org.bouncycastle.asn1.ocsp.OCSPRequest.getOptionalSignature()", "public org.bouncycastle.asn1.ocsp.Signature getOptionalSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.OCSPRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.OCSPResponse", "org.bouncycastle.asn1.ocsp.OCSPResponse(org.bouncycastle.asn1.ocsp.OCSPResponseStatus, org.bouncycastle.asn1.ocsp.ResponseBytes)", "public org.bouncycastle.asn1.ocsp.OCSPResponse(org.bouncycastle.asn1.ocsp.OCSPResponseStatus, org.bouncycastle.asn1.ocsp.ResponseBytes)"], ["org.bouncycastle.asn1.ocsp.OCSPResponse", "org.bouncycastle.asn1.ocsp.OCSPResponse.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.OCSPResponse", "org.bouncycastle.asn1.ocsp.OCSPResponse.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.OCSPResponseStatus", "org.bouncycastle.asn1.ocsp.OCSPResponse.getResponseStatus()", "public org.bouncycastle.asn1.ocsp.OCSPResponseStatus getResponseStatus()"], ["org.bouncycastle.asn1.ocsp.ResponseBytes", "org.bouncycastle.asn1.ocsp.OCSPResponse.getResponseBytes()", "public org.bouncycastle.asn1.ocsp.ResponseBytes getResponseBytes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.OCSPResponse.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.OCSPResponseStatus", "org.bouncycastle.asn1.ocsp.OCSPResponseStatus(int)", "public org.bouncycastle.asn1.ocsp.OCSPResponseStatus(int)"], ["org.bouncycastle.asn1.ocsp.OCSPResponseStatus", "org.bouncycastle.asn1.ocsp.OCSPResponseStatus.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.OCSPResponseStatus getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.ocsp.OCSPResponseStatus.getValue()", "public java.math.BigInteger getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.OCSPResponseStatus.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.Request", "org.bouncycastle.asn1.ocsp.Request(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.ocsp.Request(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ocsp.Request", "org.bouncycastle.asn1.ocsp.Request.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.Request getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.Request", "org.bouncycastle.asn1.ocsp.Request.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.Request getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.CertID", "org.bouncycastle.asn1.ocsp.Request.getReqCert()", "public org.bouncycastle.asn1.ocsp.CertID getReqCert()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.ocsp.Request.getSingleRequestExtensions()", "public org.bouncycastle.asn1.x509.Extensions getSingleRequestExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.Request.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.ocsp.ResponderID(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.ocsp.ResponderID(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.ocsp.ResponderID(org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.asn1.ocsp.ResponderID(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.ocsp.ResponderID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.ocsp.ResponderID.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.ResponderID getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["byte[]", "org.bouncycastle.asn1.ocsp.ResponderID.getKeyHash()", "public byte[] getKeyHash()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.ocsp.ResponderID.getName()", "public org.bouncycastle.asn1.x500.X500Name getName()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.ResponderID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.ResponseBytes", "org.bouncycastle.asn1.ocsp.ResponseBytes(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.ocsp.ResponseBytes(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.ocsp.ResponseBytes", "org.bouncycastle.asn1.ocsp.ResponseBytes(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.ocsp.ResponseBytes(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ocsp.ResponseBytes", "org.bouncycastle.asn1.ocsp.ResponseBytes.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.ResponseBytes", "org.bouncycastle.asn1.ocsp.ResponseBytes.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ocsp.ResponseBytes.getResponseType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getResponseType()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.ocsp.ResponseBytes.getResponse()", "public org.bouncycastle.asn1.ASN1OctetString getResponse()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.ResponseBytes.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.X509Extensions)", "public org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.ocsp.ResponseData(org.bouncycastle.asn1.ocsp.ResponderID, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.ResponseData.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.ResponseData getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.ResponseData", "org.bouncycastle.asn1.ocsp.ResponseData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.ResponseData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ocsp.ResponseData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.ocsp.ResponderID", "org.bouncycastle.asn1.ocsp.ResponseData.getResponderID()", "public org.bouncycastle.asn1.ocsp.ResponderID getResponderID()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ocsp.ResponseData.getProducedAt()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getProducedAt()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ocsp.ResponseData.getResponses()", "public org.bouncycastle.asn1.ASN1Sequence getResponses()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.ocsp.ResponseData.getResponseExtensions()", "public org.bouncycastle.asn1.x509.Extensions getResponseExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.ResponseData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.RevokedInfo", "org.bouncycastle.asn1.ocsp.RevokedInfo(org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.CRLReason)", "public org.bouncycastle.asn1.ocsp.RevokedInfo(org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.CRLReason)"], ["org.bouncycastle.asn1.ocsp.RevokedInfo", "org.bouncycastle.asn1.ocsp.RevokedInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.RevokedInfo", "org.bouncycastle.asn1.ocsp.RevokedInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ocsp.RevokedInfo.getRevocationTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getRevocationTime()"], ["org.bouncycastle.asn1.x509.CRLReason", "org.bouncycastle.asn1.ocsp.RevokedInfo.getRevocationReason()", "public org.bouncycastle.asn1.x509.CRLReason getRevocationReason()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.RevokedInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.ServiceLocator", "org.bouncycastle.asn1.ocsp.ServiceLocator()", "public org.bouncycastle.asn1.ocsp.ServiceLocator()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.ServiceLocator.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.Signature", "org.bouncycastle.asn1.ocsp.Signature(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.ocsp.Signature(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.ocsp.Signature", "org.bouncycastle.asn1.ocsp.Signature(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.ocsp.Signature(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ocsp.Signature", "org.bouncycastle.asn1.ocsp.Signature.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.Signature getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.Signature", "org.bouncycastle.asn1.ocsp.Signature.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.Signature getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.ocsp.Signature.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.ocsp.Signature.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ocsp.Signature.getCerts()", "public org.bouncycastle.asn1.ASN1Sequence getCerts()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.Signature.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.SingleResponse", "org.bouncycastle.asn1.ocsp.SingleResponse(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.ocsp.CertStatus, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.X509Extensions)", "public org.bouncycastle.asn1.ocsp.SingleResponse(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.ocsp.CertStatus, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.ocsp.SingleResponse", "org.bouncycastle.asn1.ocsp.SingleResponse(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.ocsp.CertStatus, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.ocsp.SingleResponse(org.bouncycastle.asn1.ocsp.CertID, org.bouncycastle.asn1.ocsp.CertStatus, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ocsp.SingleResponse", "org.bouncycastle.asn1.ocsp.SingleResponse.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.SingleResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.SingleResponse", "org.bouncycastle.asn1.ocsp.SingleResponse.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.SingleResponse getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ocsp.CertID", "org.bouncycastle.asn1.ocsp.SingleResponse.getCertID()", "public org.bouncycastle.asn1.ocsp.CertID getCertID()"], ["org.bouncycastle.asn1.ocsp.CertStatus", "org.bouncycastle.asn1.ocsp.SingleResponse.getCertStatus()", "public org.bouncycastle.asn1.ocsp.CertStatus getCertStatus()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ocsp.SingleResponse.getThisUpdate()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getThisUpdate()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.ocsp.SingleResponse.getNextUpdate()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getNextUpdate()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.ocsp.SingleResponse.getSingleExtensions()", "public org.bouncycastle.asn1.x509.Extensions getSingleExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.SingleResponse.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ocsp.TBSRequest", "org.bouncycastle.asn1.ocsp.TBSRequest(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.X509Extensions)", "public org.bouncycastle.asn1.ocsp.TBSRequest(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.ocsp.TBSRequest", "org.bouncycastle.asn1.ocsp.TBSRequest(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.ocsp.TBSRequest(org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.ASN1Sequence, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ocsp.TBSRequest", "org.bouncycastle.asn1.ocsp.TBSRequest.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.ocsp.TBSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ocsp.TBSRequest", "org.bouncycastle.asn1.ocsp.TBSRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ocsp.TBSRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.ocsp.TBSRequest.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.ocsp.TBSRequest.getRequestorName()", "public org.bouncycastle.asn1.x509.GeneralName getRequestorName()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.ocsp.TBSRequest.getRequestList()", "public org.bouncycastle.asn1.ASN1Sequence getRequestList()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.ocsp.TBSRequest.getRequestExtensions()", "public org.bouncycastle.asn1.x509.Extensions getRequestExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ocsp.TBSRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.oiw.ElGamalParameter", "org.bouncycastle.asn1.oiw.ElGamalParameter(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.oiw.ElGamalParameter(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.oiw.ElGamalParameter", "org.bouncycastle.asn1.oiw.ElGamalParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.oiw.ElGamalParameter getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.oiw.ElGamalParameter.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.asn1.oiw.ElGamalParameter.getG()", "public java.math.BigInteger getG()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.oiw.ElGamalParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.Attribute", "org.bouncycastle.asn1.pkcs.Attribute.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.Attribute", "org.bouncycastle.asn1.pkcs.Attribute(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.Attribute(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.pkcs.Attribute", "org.bouncycastle.asn1.pkcs.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.Attribute.getAttrType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAttrType()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.Attribute.getAttrValues()", "public org.bouncycastle.asn1.ASN1Set getAttrValues()"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.asn1.pkcs.Attribute.getAttributeValues()", "public org.bouncycastle.asn1.ASN1Encodable[] getAttributeValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.Attribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.AuthenticatedSafe", "org.bouncycastle.asn1.pkcs.AuthenticatedSafe.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.AuthenticatedSafe", "org.bouncycastle.asn1.pkcs.AuthenticatedSafe(org.bouncycastle.asn1.pkcs.ContentInfo[])", "public org.bouncycastle.asn1.pkcs.AuthenticatedSafe(org.bouncycastle.asn1.pkcs.ContentInfo[])"], ["org.bouncycastle.asn1.pkcs.ContentInfo[]", "org.bouncycastle.asn1.pkcs.AuthenticatedSafe.getContentInfo()", "public org.bouncycastle.asn1.pkcs.ContentInfo[] getContentInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.AuthenticatedSafe.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.CRLBag", "org.bouncycastle.asn1.pkcs.CRLBag.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.CRLBag getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.CRLBag", "org.bouncycastle.asn1.pkcs.CRLBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.CRLBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.CRLBag.getcrlId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getcrlId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.CRLBag.getCRLValue()", "public org.bouncycastle.asn1.ASN1Encodable getCRLValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.CRLBag.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.CertBag", "org.bouncycastle.asn1.pkcs.CertBag.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.CertBag getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.CertBag", "org.bouncycastle.asn1.pkcs.CertBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.CertBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.CertBag.getCertId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getCertId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.CertBag.getCertValue()", "public org.bouncycastle.asn1.ASN1Encodable getCertValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.CertBag.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.CertificationRequest", "org.bouncycastle.asn1.pkcs.CertificationRequest.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.CertificationRequest getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.CertificationRequest", "org.bouncycastle.asn1.pkcs.CertificationRequest(org.bouncycastle.asn1.pkcs.CertificationRequestInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.pkcs.CertificationRequest(org.bouncycastle.asn1.pkcs.CertificationRequestInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.pkcs.CertificationRequest", "org.bouncycastle.asn1.pkcs.CertificationRequest(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.CertificationRequest(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.pkcs.CertificationRequestInfo", "org.bouncycastle.asn1.pkcs.CertificationRequest.getCertificationRequestInfo()", "public org.bouncycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.CertificationRequest.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.pkcs.CertificationRequest.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.CertificationRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.CertificationRequestInfo", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.CertificationRequestInfo", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.pkcs.CertificationRequestInfo", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.pkcs.CertificationRequestInfo", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.getAttributes()", "public org.bouncycastle.asn1.ASN1Set getAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.CertificationRequestInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.ContentInfo", "org.bouncycastle.asn1.pkcs.ContentInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.ContentInfo", "org.bouncycastle.asn1.pkcs.ContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.ContentInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.ContentInfo.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.ContentInfo.getContent()", "public org.bouncycastle.asn1.ASN1Encodable getContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.ContentInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.DHParameter", "org.bouncycastle.asn1.pkcs.DHParameter(java.math.BigInteger, java.math.BigInteger, int)", "public org.bouncycastle.asn1.pkcs.DHParameter(java.math.BigInteger, java.math.BigInteger, int)"], ["org.bouncycastle.asn1.pkcs.DHParameter", "org.bouncycastle.asn1.pkcs.DHParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.DHParameter.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.DHParameter.getG()", "public java.math.BigInteger getG()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.DHParameter.getL()", "public java.math.BigInteger getL()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.DHParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.EncryptedData", "org.bouncycastle.asn1.pkcs.EncryptedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.EncryptedData", "org.bouncycastle.asn1.pkcs.EncryptedData(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.EncryptedData(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.EncryptedData.getContentType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.EncryptedData.getEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.pkcs.EncryptedData.getContent()", "public org.bouncycastle.asn1.ASN1OctetString getContent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.EncryptedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo", "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo", "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo.getEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()"], ["byte[]", "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo.getEncryptedData()", "public byte[] getEncryptedData()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.EncryptionScheme", "org.bouncycastle.asn1.pkcs.EncryptionScheme(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.EncryptionScheme(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.pkcs.EncryptionScheme", "org.bouncycastle.asn1.pkcs.EncryptionScheme.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.EncryptionScheme getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.EncryptionScheme.getAlgorithm()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.EncryptionScheme.getParameters()", "public org.bouncycastle.asn1.ASN1Encodable getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.EncryptionScheme.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, java.math.BigInteger)", "public org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, java.math.BigInteger)"], ["org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)", "public org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber.getName()", "public org.bouncycastle.asn1.x500.X500Name getName()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber.getCertificateSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getCertificateSerialNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.KeyDerivationFunc", "org.bouncycastle.asn1.pkcs.KeyDerivationFunc(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.KeyDerivationFunc(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.pkcs.KeyDerivationFunc", "org.bouncycastle.asn1.pkcs.KeyDerivationFunc.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.KeyDerivationFunc getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.KeyDerivationFunc.getAlgorithm()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.KeyDerivationFunc.getParameters()", "public org.bouncycastle.asn1.ASN1Encodable getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.KeyDerivationFunc.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.MacData", "org.bouncycastle.asn1.pkcs.MacData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.MacData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.MacData", "org.bouncycastle.asn1.pkcs.MacData(org.bouncycastle.asn1.x509.DigestInfo, byte[], int)", "public org.bouncycastle.asn1.pkcs.MacData(org.bouncycastle.asn1.x509.DigestInfo, byte[], int)"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.pkcs.MacData.getMac()", "public org.bouncycastle.asn1.x509.DigestInfo getMac()"], ["byte[]", "org.bouncycastle.asn1.pkcs.MacData.getSalt()", "public byte[] getSalt()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.MacData.getIterationCount()", "public java.math.BigInteger getIterationCount()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.MacData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PBEParameter", "org.bouncycastle.asn1.pkcs.PBEParameter(byte[], int)", "public org.bouncycastle.asn1.pkcs.PBEParameter(byte[], int)"], ["org.bouncycastle.asn1.pkcs.PBEParameter", "org.bouncycastle.asn1.pkcs.PBEParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.PBEParameter getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.PBEParameter.getIterationCount()", "public java.math.BigInteger getIterationCount()"], ["byte[]", "org.bouncycastle.asn1.pkcs.PBEParameter.getSalt()", "public byte[] getSalt()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PBEParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PBES2Algorithms", "org.bouncycastle.asn1.pkcs.PBES2Algorithms(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.PBES2Algorithms(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.PBES2Algorithms.getObjectId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getObjectId()"], ["org.bouncycastle.asn1.pkcs.KeyDerivationFunc", "org.bouncycastle.asn1.pkcs.PBES2Algorithms.getKeyDerivationFunc()", "public org.bouncycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()"], ["org.bouncycastle.asn1.pkcs.EncryptionScheme", "org.bouncycastle.asn1.pkcs.PBES2Algorithms.getEncryptionScheme()", "public org.bouncycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PBES2Algorithms.getASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive getASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PBES2Parameters", "org.bouncycastle.asn1.pkcs.PBES2Parameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.PBES2Parameters", "org.bouncycastle.asn1.pkcs.PBES2Parameters(org.bouncycastle.asn1.pkcs.KeyDerivationFunc, org.bouncycastle.asn1.pkcs.EncryptionScheme)", "public org.bouncycastle.asn1.pkcs.PBES2Parameters(org.bouncycastle.asn1.pkcs.KeyDerivationFunc, org.bouncycastle.asn1.pkcs.EncryptionScheme)"], ["org.bouncycastle.asn1.pkcs.KeyDerivationFunc", "org.bouncycastle.asn1.pkcs.PBES2Parameters.getKeyDerivationFunc()", "public org.bouncycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()"], ["org.bouncycastle.asn1.pkcs.EncryptionScheme", "org.bouncycastle.asn1.pkcs.PBES2Parameters.getEncryptionScheme()", "public org.bouncycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PBES2Parameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PBKDF2Params", "org.bouncycastle.asn1.pkcs.PBKDF2Params.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.PBKDF2Params", "org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int)", "public org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int)"], ["org.bouncycastle.asn1.pkcs.PBKDF2Params", "org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, int)", "public org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, int)"], ["org.bouncycastle.asn1.pkcs.PBKDF2Params", "org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.pkcs.PBKDF2Params", "org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.pkcs.PBKDF2Params(byte[], int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["byte[]", "org.bouncycastle.asn1.pkcs.PBKDF2Params.getSalt()", "public byte[] getSalt()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.PBKDF2Params.getIterationCount()", "public java.math.BigInteger getIterationCount()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.PBKDF2Params.getKeyLength()", "public java.math.BigInteger getKeyLength()"], ["boolean", "org.bouncycastle.asn1.pkcs.PBKDF2Params.isDefaultPrf()", "public boolean isDefaultPrf()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.PBKDF2Params.getPrf()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getPrf()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PBKDF2Params.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PKCS12PBEParams", "org.bouncycastle.asn1.pkcs.PKCS12PBEParams(byte[], int)", "public org.bouncycastle.asn1.pkcs.PKCS12PBEParams(byte[], int)"], ["org.bouncycastle.asn1.pkcs.PKCS12PBEParams", "org.bouncycastle.asn1.pkcs.PKCS12PBEParams.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.PKCS12PBEParams.getIterations()", "public java.math.BigInteger getIterations()"], ["byte[]", "org.bouncycastle.asn1.pkcs.PKCS12PBEParams.getIV()", "public byte[] getIV()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PKCS12PBEParams.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.Pfx", "org.bouncycastle.asn1.pkcs.Pfx.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.Pfx", "org.bouncycastle.asn1.pkcs.Pfx(org.bouncycastle.asn1.pkcs.ContentInfo, org.bouncycastle.asn1.pkcs.MacData)", "public org.bouncycastle.asn1.pkcs.Pfx(org.bouncycastle.asn1.pkcs.ContentInfo, org.bouncycastle.asn1.pkcs.MacData)"], ["org.bouncycastle.asn1.pkcs.ContentInfo", "org.bouncycastle.asn1.pkcs.Pfx.getAuthSafe()", "public org.bouncycastle.asn1.pkcs.ContentInfo getAuthSafe()"], ["org.bouncycastle.asn1.pkcs.MacData", "org.bouncycastle.asn1.pkcs.Pfx.getMacData()", "public org.bouncycastle.asn1.pkcs.MacData getMacData()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.Pfx.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable, org.bouncycastle.asn1.ASN1Set) throws java.io.IOException"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.PrivateKeyInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getPrivateKeyAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getAlgorithmId()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.parsePrivateKey()", "public org.bouncycastle.asn1.ASN1Encodable parsePrivateKey() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getPrivateKey()", "public org.bouncycastle.asn1.ASN1Primitive getPrivateKey()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getAttributes()", "public org.bouncycastle.asn1.ASN1Set getAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.PrivateKeyInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RC2CBCParameter", "org.bouncycastle.asn1.pkcs.RC2CBCParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RC2CBCParameter getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RC2CBCParameter", "org.bouncycastle.asn1.pkcs.RC2CBCParameter(byte[])", "public org.bouncycastle.asn1.pkcs.RC2CBCParameter(byte[])"], ["org.bouncycastle.asn1.pkcs.RC2CBCParameter", "org.bouncycastle.asn1.pkcs.RC2CBCParameter(int, byte[])", "public org.bouncycastle.asn1.pkcs.RC2CBCParameter(int, byte[])"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RC2CBCParameter.getRC2ParameterVersion()", "public java.math.BigInteger getRC2ParameterVersion()"], ["byte[]", "org.bouncycastle.asn1.pkcs.RC2CBCParameter.getIV()", "public byte[] getIV()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RC2CBCParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RSAESOAEPparams", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RSAESOAEPparams getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RSAESOAEPparams", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams()", "public org.bouncycastle.asn1.pkcs.RSAESOAEPparams()"], ["org.bouncycastle.asn1.pkcs.RSAESOAEPparams", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.asn1.pkcs.RSAESOAEPparams(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.pkcs.RSAESOAEPparams", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.RSAESOAEPparams(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams.getMaskGenAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getMaskGenAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams.getPSourceAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getPSourceAlgorithm()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RSAESOAEPparams.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKey", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKey", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKey", "org.bouncycastle.asn1.pkcs.RSAPrivateKey(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.pkcs.RSAPrivateKey(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getVersion()", "public java.math.BigInteger getVersion()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getPrivateExponent()", "public java.math.BigInteger getPrivateExponent()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getPrime1()", "public java.math.BigInteger getPrime1()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getPrime2()", "public java.math.BigInteger getPrime2()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getExponent1()", "public java.math.BigInteger getExponent1()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getExponent2()", "public java.math.BigInteger getExponent2()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.getCoefficient()", "public java.math.BigInteger getCoefficient()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RSAPrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure(org.bouncycastle.asn1.ASN1Sequence)"], ["int", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getVersion()", "public int getVersion()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getPrivateExponent()", "public java.math.BigInteger getPrivateExponent()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getPrime1()", "public java.math.BigInteger getPrime1()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getPrime2()", "public java.math.BigInteger getPrime2()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getExponent1()", "public java.math.BigInteger getExponent1()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getExponent2()", "public java.math.BigInteger getExponent2()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.getCoefficient()", "public java.math.BigInteger getCoefficient()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RSAPublicKey", "org.bouncycastle.asn1.pkcs.RSAPublicKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.pkcs.RSAPublicKey", "org.bouncycastle.asn1.pkcs.RSAPublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RSAPublicKey", "org.bouncycastle.asn1.pkcs.RSAPublicKey(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.pkcs.RSAPublicKey(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPublicKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSAPublicKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RSAPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.RSASSAPSSparams", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.RSASSAPSSparams getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.RSASSAPSSparams", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams()", "public org.bouncycastle.asn1.pkcs.RSASSAPSSparams()"], ["org.bouncycastle.asn1.pkcs.RSASSAPSSparams", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.pkcs.RSASSAPSSparams(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.getMaskGenAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getMaskGenAlgorithm()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.getSaltLength()", "public java.math.BigInteger getSaltLength()"], ["java.math.BigInteger", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.getTrailerField()", "public java.math.BigInteger getTrailerField()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.RSASSAPSSparams.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.SafeBag", "org.bouncycastle.asn1.pkcs.SafeBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.pkcs.SafeBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.pkcs.SafeBag", "org.bouncycastle.asn1.pkcs.SafeBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.SafeBag(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.pkcs.SafeBag", "org.bouncycastle.asn1.pkcs.SafeBag.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.pkcs.SafeBag.getBagId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getBagId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.pkcs.SafeBag.getBagValue()", "public org.bouncycastle.asn1.ASN1Encodable getBagValue()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SafeBag.getBagAttributes()", "public org.bouncycastle.asn1.ASN1Set getBagAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.SafeBag.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.SignedData", "org.bouncycastle.asn1.pkcs.SignedData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.SignedData", "org.bouncycastle.asn1.pkcs.SignedData(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.pkcs.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.SignedData(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.pkcs.ContentInfo, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.pkcs.SignedData", "org.bouncycastle.asn1.pkcs.SignedData(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.SignedData(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.pkcs.SignedData.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignedData.getDigestAlgorithms()", "public org.bouncycastle.asn1.ASN1Set getDigestAlgorithms()"], ["org.bouncycastle.asn1.pkcs.ContentInfo", "org.bouncycastle.asn1.pkcs.SignedData.getContentInfo()", "public org.bouncycastle.asn1.pkcs.ContentInfo getContentInfo()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignedData.getCertificates()", "public org.bouncycastle.asn1.ASN1Set getCertificates()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignedData.getCRLs()", "public org.bouncycastle.asn1.ASN1Set getCRLs()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignedData.getSignerInfos()", "public org.bouncycastle.asn1.ASN1Set getSignerInfos()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.SignedData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.pkcs.SignerInfo", "org.bouncycastle.asn1.pkcs.SignerInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.pkcs.SignerInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.pkcs.SignerInfo", "org.bouncycastle.asn1.pkcs.SignerInfo(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.pkcs.SignerInfo(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Set, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.pkcs.SignerInfo", "org.bouncycastle.asn1.pkcs.SignerInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.pkcs.SignerInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.pkcs.SignerInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber", "org.bouncycastle.asn1.pkcs.SignerInfo.getIssuerAndSerialNumber()", "public org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber getIssuerAndSerialNumber()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignerInfo.getAuthenticatedAttributes()", "public org.bouncycastle.asn1.ASN1Set getAuthenticatedAttributes()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.SignerInfo.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.pkcs.SignerInfo.getEncryptedDigest()", "public org.bouncycastle.asn1.ASN1OctetString getEncryptedDigest()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.pkcs.SignerInfo.getDigestEncryptionAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.pkcs.SignerInfo.getUnauthenticatedAttributes()", "public org.bouncycastle.asn1.ASN1Set getUnauthenticatedAttributes()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.pkcs.SignerInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.sec.ECPrivateKey", "org.bouncycastle.asn1.sec.ECPrivateKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.sec.ECPrivateKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.sec.ECPrivateKey", "org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger)", "public org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger)"], ["org.bouncycastle.asn1.sec.ECPrivateKey", "org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.sec.ECPrivateKey", "org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.sec.ECPrivateKey(java.math.BigInteger, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Encodable)"], ["java.math.BigInteger", "org.bouncycastle.asn1.sec.ECPrivateKey.getKey()", "public java.math.BigInteger getKey()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.sec.ECPrivateKey.getPublicKey()", "public org.bouncycastle.asn1.DERBitString getPublicKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.sec.ECPrivateKey.getParameters()", "public org.bouncycastle.asn1.ASN1Primitive getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.sec.ECPrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.sec.ECPrivateKeyStructure", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.sec.ECPrivateKeyStructure(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.sec.ECPrivateKeyStructure", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger)", "public org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger)"], ["org.bouncycastle.asn1.sec.ECPrivateKeyStructure", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.sec.ECPrivateKeyStructure", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.sec.ECPrivateKeyStructure(java.math.BigInteger, org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Encodable)"], ["java.math.BigInteger", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure.getKey()", "public java.math.BigInteger getKey()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure.getPublicKey()", "public org.bouncycastle.asn1.DERBitString getPublicKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure.getParameters()", "public org.bouncycastle.asn1.ASN1Primitive getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.sec.ECPrivateKeyStructure.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.sec.SECNamedCurves", "org.bouncycastle.asn1.sec.SECNamedCurves()", "public org.bouncycastle.asn1.sec.SECNamedCurves()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.sec.SECNamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.sec.SECNamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.sec.SECNamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.sec.SECNamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.sec.SECNamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.smime.SMIMECapabilities", "org.bouncycastle.asn1.smime.SMIMECapabilities.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.smime.SMIMECapabilities getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.smime.SMIMECapabilities", "org.bouncycastle.asn1.smime.SMIMECapabilities(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.smime.SMIMECapabilities(org.bouncycastle.asn1.ASN1Sequence)"], ["java.util.Vector", "org.bouncycastle.asn1.smime.SMIMECapabilities.getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.smime.SMIMECapabilities.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.smime.SMIMECapabilitiesAttribute", "org.bouncycastle.asn1.smime.SMIMECapabilitiesAttribute(org.bouncycastle.asn1.smime.SMIMECapabilityVector)", "public org.bouncycastle.asn1.smime.SMIMECapabilitiesAttribute(org.bouncycastle.asn1.smime.SMIMECapabilityVector)"], ["org.bouncycastle.asn1.smime.SMIMECapability", "org.bouncycastle.asn1.smime.SMIMECapability(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.smime.SMIMECapability(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.smime.SMIMECapability", "org.bouncycastle.asn1.smime.SMIMECapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.smime.SMIMECapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.smime.SMIMECapability", "org.bouncycastle.asn1.smime.SMIMECapability.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.smime.SMIMECapability getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.smime.SMIMECapability.getCapabilityID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getCapabilityID()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.smime.SMIMECapability.getParameters()", "public org.bouncycastle.asn1.ASN1Encodable getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.smime.SMIMECapability.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.smime.SMIMECapabilityVector", "org.bouncycastle.asn1.smime.SMIMECapabilityVector()", "public org.bouncycastle.asn1.smime.SMIMECapabilityVector()"], ["void", "org.bouncycastle.asn1.smime.SMIMECapabilityVector.addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public void addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["void", "org.bouncycastle.asn1.smime.SMIMECapabilityVector.addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, int)", "public void addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, int)"], ["void", "org.bouncycastle.asn1.smime.SMIMECapabilityVector.addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void addCapability(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1EncodableVector", "org.bouncycastle.asn1.smime.SMIMECapabilityVector.toASN1EncodableVector()", "public org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()"], ["org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute", "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)", "public org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)"], ["org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute", "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)", "public org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)"], ["org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute", "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute(org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves()", "public org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves.getOID(short, boolean)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(short, boolean)"], ["org.bouncycastle.asn1.tsp.Accuracy", "org.bouncycastle.asn1.tsp.Accuracy(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.tsp.Accuracy(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.tsp.Accuracy", "org.bouncycastle.asn1.tsp.Accuracy.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.tsp.Accuracy getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.Accuracy.getSeconds()", "public org.bouncycastle.asn1.ASN1Integer getSeconds()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.Accuracy.getMillis()", "public org.bouncycastle.asn1.ASN1Integer getMillis()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.Accuracy.getMicros()", "public org.bouncycastle.asn1.ASN1Integer getMicros()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.tsp.Accuracy.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.tsp.MessageImprint", "org.bouncycastle.asn1.tsp.MessageImprint.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.tsp.MessageImprint getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.tsp.MessageImprint", "org.bouncycastle.asn1.tsp.MessageImprint(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.tsp.MessageImprint(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.tsp.MessageImprint.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["byte[]", "org.bouncycastle.asn1.tsp.MessageImprint.getHashedMessage()", "public byte[] getHashedMessage()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.tsp.MessageImprint.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.tsp.TSTInfo", "org.bouncycastle.asn1.tsp.TSTInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.tsp.TSTInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.tsp.TSTInfo", "org.bouncycastle.asn1.tsp.TSTInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.tsp.MessageImprint, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.tsp.Accuracy, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.tsp.TSTInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.tsp.MessageImprint, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.tsp.Accuracy, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.GeneralName, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.TSTInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.tsp.MessageImprint", "org.bouncycastle.asn1.tsp.TSTInfo.getMessageImprint()", "public org.bouncycastle.asn1.tsp.MessageImprint getMessageImprint()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.tsp.TSTInfo.getPolicy()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicy()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.TSTInfo.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.tsp.Accuracy", "org.bouncycastle.asn1.tsp.TSTInfo.getAccuracy()", "public org.bouncycastle.asn1.tsp.Accuracy getAccuracy()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.tsp.TSTInfo.getGenTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getGenTime()"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.tsp.TSTInfo.getOrdering()", "public org.bouncycastle.asn1.ASN1Boolean getOrdering()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.TSTInfo.getNonce()", "public org.bouncycastle.asn1.ASN1Integer getNonce()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.tsp.TSTInfo.getTsa()", "public org.bouncycastle.asn1.x509.GeneralName getTsa()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.tsp.TSTInfo.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.tsp.TSTInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.tsp.TimeStampReq", "org.bouncycastle.asn1.tsp.TimeStampReq.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.tsp.TimeStampReq getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.tsp.TimeStampReq", "org.bouncycastle.asn1.tsp.TimeStampReq(org.bouncycastle.asn1.tsp.MessageImprint, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.asn1.tsp.TimeStampReq(org.bouncycastle.asn1.tsp.MessageImprint, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.TimeStampReq.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.tsp.MessageImprint", "org.bouncycastle.asn1.tsp.TimeStampReq.getMessageImprint()", "public org.bouncycastle.asn1.tsp.MessageImprint getMessageImprint()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.tsp.TimeStampReq.getReqPolicy()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getReqPolicy()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.tsp.TimeStampReq.getNonce()", "public org.bouncycastle.asn1.ASN1Integer getNonce()"], ["org.bouncycastle.asn1.ASN1Boolean", "org.bouncycastle.asn1.tsp.TimeStampReq.getCertReq()", "public org.bouncycastle.asn1.ASN1Boolean getCertReq()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.tsp.TimeStampReq.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.tsp.TimeStampReq.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.tsp.TimeStampResp", "org.bouncycastle.asn1.tsp.TimeStampResp.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.tsp.TimeStampResp getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.tsp.TimeStampResp", "org.bouncycastle.asn1.tsp.TimeStampResp(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.cms.ContentInfo)", "public org.bouncycastle.asn1.tsp.TimeStampResp(org.bouncycastle.asn1.cmp.PKIStatusInfo, org.bouncycastle.asn1.cms.ContentInfo)"], ["org.bouncycastle.asn1.cmp.PKIStatusInfo", "org.bouncycastle.asn1.tsp.TimeStampResp.getStatus()", "public org.bouncycastle.asn1.cmp.PKIStatusInfo getStatus()"], ["org.bouncycastle.asn1.cms.ContentInfo", "org.bouncycastle.asn1.tsp.TimeStampResp.getTimeStampToken()", "public org.bouncycastle.asn1.cms.ContentInfo getTimeStampToken()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.tsp.TimeStampResp.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ua.DSTU4145BinaryField", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ua.DSTU4145BinaryField getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ua.DSTU4145BinaryField", "org.bouncycastle.asn1.ua.DSTU4145BinaryField(int, int, int, int)", "public org.bouncycastle.asn1.ua.DSTU4145BinaryField(int, int, int, int)"], ["int", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.getM()", "public int getM()"], ["int", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.getK1()", "public int getK1()"], ["int", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.getK2()", "public int getK2()"], ["int", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.getK3()", "public int getK3()"], ["org.bouncycastle.asn1.ua.DSTU4145BinaryField", "org.bouncycastle.asn1.ua.DSTU4145BinaryField(int, int)", "public org.bouncycastle.asn1.ua.DSTU4145BinaryField(int, int)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ua.DSTU4145BinaryField.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ua.DSTU4145ECBinary", "org.bouncycastle.asn1.ua.DSTU4145ECBinary(org.bouncycastle.crypto.params.ECDomainParameters)", "public org.bouncycastle.asn1.ua.DSTU4145ECBinary(org.bouncycastle.crypto.params.ECDomainParameters)"], ["org.bouncycastle.asn1.ua.DSTU4145ECBinary", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ua.DSTU4145ECBinary getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ua.DSTU4145BinaryField", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getField()", "public org.bouncycastle.asn1.ua.DSTU4145BinaryField getField()"], ["java.math.BigInteger", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getA()", "public java.math.BigInteger getA()"], ["byte[]", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getB()", "public byte[] getB()"], ["java.math.BigInteger", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getN()", "public java.math.BigInteger getN()"], ["byte[]", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.getG()", "public byte[] getG()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ua.DSTU4145ECBinary.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ua.DSTU4145NamedCurves", "org.bouncycastle.asn1.ua.DSTU4145NamedCurves()", "public org.bouncycastle.asn1.ua.DSTU4145NamedCurves()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.ua.DSTU4145NamedCurves.getOIDs()", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier[] getOIDs()"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.asn1.ua.DSTU4145NamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.crypto.params.ECDomainParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ua.DSTU4145Params", "org.bouncycastle.asn1.ua.DSTU4145Params(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ua.DSTU4145Params(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ua.DSTU4145Params", "org.bouncycastle.asn1.ua.DSTU4145Params(org.bouncycastle.asn1.ua.DSTU4145ECBinary)", "public org.bouncycastle.asn1.ua.DSTU4145Params(org.bouncycastle.asn1.ua.DSTU4145ECBinary)"], ["boolean", "org.bouncycastle.asn1.ua.DSTU4145Params.isNamedCurve()", "public boolean isNamedCurve()"], ["org.bouncycastle.asn1.ua.DSTU4145ECBinary", "org.bouncycastle.asn1.ua.DSTU4145Params.getECBinary()", "public org.bouncycastle.asn1.ua.DSTU4145ECBinary getECBinary()"], ["byte[]", "org.bouncycastle.asn1.ua.DSTU4145Params.getDKE()", "public byte[] getDKE()"], ["byte[]", "org.bouncycastle.asn1.ua.DSTU4145Params.getDefaultDKE()", "public static byte[] getDefaultDKE()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.ua.DSTU4145Params.getNamedCurve()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getNamedCurve()"], ["org.bouncycastle.asn1.ua.DSTU4145Params", "org.bouncycastle.asn1.ua.DSTU4145Params.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ua.DSTU4145Params.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.ua.DSTU4145PointEncoder", "org.bouncycastle.asn1.ua.DSTU4145PointEncoder()", "public org.bouncycastle.asn1.ua.DSTU4145PointEncoder()"], ["byte[]", "org.bouncycastle.asn1.ua.DSTU4145PointEncoder.encodePoint(org.bouncycastle.math.ec.ECPoint)", "public static byte[] encodePoint(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.asn1.ua.DSTU4145PointEncoder.decodePoint(org.bouncycastle.math.ec.ECCurve, byte[])", "public static org.bouncycastle.math.ec.ECPoint decodePoint(org.bouncycastle.math.ec.ECCurve, byte[])"], ["org.bouncycastle.asn1.ua.DSTU4145PublicKey", "org.bouncycastle.asn1.ua.DSTU4145PublicKey(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.asn1.ua.DSTU4145PublicKey(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.asn1.ua.DSTU4145PublicKey", "org.bouncycastle.asn1.ua.DSTU4145PublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.ua.DSTU4145PublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.ua.DSTU4145PublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.util.ASN1Dump", "org.bouncycastle.asn1.util.ASN1Dump()", "public org.bouncycastle.asn1.util.ASN1Dump()"], ["java.lang.String", "org.bouncycastle.asn1.util.ASN1Dump.dumpAsString(java.lang.Object)", "public static java.lang.String dumpAsString(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.util.ASN1Dump.dumpAsString(java.lang.Object, boolean)", "public static java.lang.String dumpAsString(java.lang.Object, boolean)"], ["org.bouncycastle.asn1.util.DERDump", "org.bouncycastle.asn1.util.DERDump()", "public org.bouncycastle.asn1.util.DERDump()"], ["java.lang.String", "org.bouncycastle.asn1.util.DERDump.dumpAsString(org.bouncycastle.asn1.ASN1Primitive)", "public static java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Primitive)"], ["java.lang.String", "org.bouncycastle.asn1.util.DERDump.dumpAsString(org.bouncycastle.asn1.ASN1Encodable)", "public static java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.util.Dump", "org.bouncycastle.asn1.util.Dump()", "public org.bouncycastle.asn1.util.Dump()"], ["void", "org.bouncycastle.asn1.util.Dump.main(java.lang.String[])", "public static void main(java.lang.String[]) throws java.lang.Exception"], ["org.bouncycastle.asn1.x500.AttributeTypeAndValue", "org.bouncycastle.asn1.x500.AttributeTypeAndValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x500.AttributeTypeAndValue", "org.bouncycastle.asn1.x500.AttributeTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x500.AttributeTypeAndValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x500.AttributeTypeAndValue.getType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x500.AttributeTypeAndValue.getValue()", "public org.bouncycastle.asn1.ASN1Encodable getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x500.AttributeTypeAndValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x500.DirectoryString.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x500.DirectoryString getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x500.DirectoryString.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x500.DirectoryString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x500.DirectoryString(java.lang.String)", "public org.bouncycastle.asn1.x500.DirectoryString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.x500.DirectoryString.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.asn1.x500.DirectoryString.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x500.DirectoryString.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x500.RDN", "org.bouncycastle.asn1.x500.RDN.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x500.RDN", "org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x500.RDN", "org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue)", "public org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue)"], ["org.bouncycastle.asn1.x500.RDN", "org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])", "public org.bouncycastle.asn1.x500.RDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])"], ["boolean", "org.bouncycastle.asn1.x500.RDN.isMultiValued()", "public boolean isMultiValued()"], ["int", "org.bouncycastle.asn1.x500.RDN.size()", "public int size()"], ["org.bouncycastle.asn1.x500.AttributeTypeAndValue", "org.bouncycastle.asn1.x500.RDN.getFirst()", "public org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst()"], ["org.bouncycastle.asn1.x500.AttributeTypeAndValue[]", "org.bouncycastle.asn1.x500.RDN.getTypesAndValues()", "public org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x500.RDN.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name.getInstance(org.bouncycastle.asn1.x500.X500NameStyle, java.lang.Object)", "public static org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle, java.lang.Object)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.RDN[])", "public org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.RDN[])"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, org.bouncycastle.asn1.x500.RDN[])", "public org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, org.bouncycastle.asn1.x500.RDN[])"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name(java.lang.String)", "public org.bouncycastle.asn1.x500.X500Name(java.lang.String)"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, java.lang.String)", "public org.bouncycastle.asn1.x500.X500Name(org.bouncycastle.asn1.x500.X500NameStyle, java.lang.String)"], ["org.bouncycastle.asn1.x500.RDN[]", "org.bouncycastle.asn1.x500.X500Name.getRDNs()", "public org.bouncycastle.asn1.x500.RDN[] getRDNs()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x500.X500Name.getAttributeTypes()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()"], ["org.bouncycastle.asn1.x500.RDN[]", "org.bouncycastle.asn1.x500.X500Name.getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x500.RDN[] getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x500.X500Name.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.x500.X500Name.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.x500.X500Name.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.x500.X500Name.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.asn1.x500.X500Name.setDefaultStyle(org.bouncycastle.asn1.x500.X500NameStyle)", "public static void setDefaultStyle(org.bouncycastle.asn1.x500.X500NameStyle)"], ["org.bouncycastle.asn1.x500.X500NameStyle", "org.bouncycastle.asn1.x500.X500Name.getDefaultStyle()", "public static org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder()", "public org.bouncycastle.asn1.x500.X500NameBuilder()"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder(org.bouncycastle.asn1.x500.X500NameStyle)", "public org.bouncycastle.asn1.x500.X500NameBuilder(org.bouncycastle.asn1.x500.X500NameStyle)"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)", "public org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue)", "public org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue)"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[], java.lang.String[])", "public org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[], java.lang.String[])"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[], org.bouncycastle.asn1.ASN1Encodable[])", "public org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[], org.bouncycastle.asn1.ASN1Encodable[])"], ["org.bouncycastle.asn1.x500.X500NameBuilder", "org.bouncycastle.asn1.x500.X500NameBuilder.addMultiValuedRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])", "public org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x500.X500NameBuilder.build()", "public org.bouncycastle.asn1.x500.X500Name build()"], ["org.bouncycastle.asn1.x500.style.AbstractX500NameStyle", "org.bouncycastle.asn1.x500.style.AbstractX500NameStyle()", "public org.bouncycastle.asn1.x500.style.AbstractX500NameStyle()"], ["java.util.Hashtable", "org.bouncycastle.asn1.x500.style.AbstractX500NameStyle.copyHashTable(java.util.Hashtable)", "public static java.util.Hashtable copyHashTable(java.util.Hashtable)"], ["int", "org.bouncycastle.asn1.x500.style.AbstractX500NameStyle.calculateHashCode(org.bouncycastle.asn1.x500.X500Name)", "public int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x500.style.AbstractX500NameStyle.stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)", "public org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)"], ["boolean", "org.bouncycastle.asn1.x500.style.AbstractX500NameStyle.areEqual(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x500.X500Name)", "public boolean areEqual(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.x500.style.BCStrictStyle", "org.bouncycastle.asn1.x500.style.BCStrictStyle()", "public org.bouncycastle.asn1.x500.style.BCStrictStyle()"], ["boolean", "org.bouncycastle.asn1.x500.style.BCStrictStyle.areEqual(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x500.X500Name)", "public boolean areEqual(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x500.X500Name)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.BCStyle.oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.lang.String[]", "org.bouncycastle.asn1.x500.style.BCStyle.oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x500.style.BCStyle.attrNameToOID(java.lang.String)", "public org.bouncycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)"], ["org.bouncycastle.asn1.x500.RDN[]", "org.bouncycastle.asn1.x500.style.BCStyle.fromString(java.lang.String)", "public org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.BCStyle.toString(org.bouncycastle.asn1.x500.X500Name)", "public java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.x500.style.IETFUtils", "org.bouncycastle.asn1.x500.style.IETFUtils()", "public org.bouncycastle.asn1.x500.style.IETFUtils()"], ["org.bouncycastle.asn1.x500.RDN[]", "org.bouncycastle.asn1.x500.style.IETFUtils.rDNsFromString(java.lang.String, org.bouncycastle.asn1.x500.X500NameStyle)", "public static org.bouncycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String, org.bouncycastle.asn1.x500.X500NameStyle)"], ["java.lang.String[]", "org.bouncycastle.asn1.x500.style.IETFUtils.findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.util.Hashtable)", "public static java.lang.String[] findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.util.Hashtable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x500.style.IETFUtils.decodeAttrName(java.lang.String, java.util.Hashtable)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier decodeAttrName(java.lang.String, java.util.Hashtable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x500.style.IETFUtils.valueFromHexString(java.lang.String, int)", "public static org.bouncycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String, int) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.x500.style.IETFUtils.appendRDN(java.lang.StringBuffer, org.bouncycastle.asn1.x500.RDN, java.util.Hashtable)", "public static void appendRDN(java.lang.StringBuffer, org.bouncycastle.asn1.x500.RDN, java.util.Hashtable)"], ["void", "org.bouncycastle.asn1.x500.style.IETFUtils.appendTypeAndValue(java.lang.StringBuffer, org.bouncycastle.asn1.x500.AttributeTypeAndValue, java.util.Hashtable)", "public static void appendTypeAndValue(java.lang.StringBuffer, org.bouncycastle.asn1.x500.AttributeTypeAndValue, java.util.Hashtable)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.IETFUtils.valueToString(org.bouncycastle.asn1.ASN1Encodable)", "public static java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.IETFUtils.canonicalize(java.lang.String)", "public static java.lang.String canonicalize(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.IETFUtils.stripInternalSpaces(java.lang.String)", "public static java.lang.String stripInternalSpaces(java.lang.String)"], ["boolean", "org.bouncycastle.asn1.x500.style.IETFUtils.rDNAreEqual(org.bouncycastle.asn1.x500.RDN, org.bouncycastle.asn1.x500.RDN)", "public static boolean rDNAreEqual(org.bouncycastle.asn1.x500.RDN, org.bouncycastle.asn1.x500.RDN)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.RFC4519Style.oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.lang.String[]", "org.bouncycastle.asn1.x500.style.RFC4519Style.oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x500.style.RFC4519Style.attrNameToOID(java.lang.String)", "public org.bouncycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)"], ["org.bouncycastle.asn1.x500.RDN[]", "org.bouncycastle.asn1.x500.style.RFC4519Style.fromString(java.lang.String)", "public org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.RFC4519Style.toString(org.bouncycastle.asn1.x500.X500Name)", "public java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.x500.style.X500NameTokenizer", "org.bouncycastle.asn1.x500.style.X500NameTokenizer(java.lang.String)", "public org.bouncycastle.asn1.x500.style.X500NameTokenizer(java.lang.String)"], ["org.bouncycastle.asn1.x500.style.X500NameTokenizer", "org.bouncycastle.asn1.x500.style.X500NameTokenizer(java.lang.String, char)", "public org.bouncycastle.asn1.x500.style.X500NameTokenizer(java.lang.String, char)"], ["boolean", "org.bouncycastle.asn1.x500.style.X500NameTokenizer.hasMoreTokens()", "public boolean hasMoreTokens()"], ["java.lang.String", "org.bouncycastle.asn1.x500.style.X500NameTokenizer.nextToken()", "public java.lang.String nextToken()"], ["org.bouncycastle.asn1.x509.AccessDescription", "org.bouncycastle.asn1.x509.AccessDescription.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AccessDescription getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AccessDescription", "org.bouncycastle.asn1.x509.AccessDescription(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.AccessDescription(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.AccessDescription.getAccessMethod()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAccessMethod()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.AccessDescription.getAccessLocation()", "public org.bouncycastle.asn1.x509.GeneralName getAccessLocation()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AccessDescription.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.AccessDescription.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier(java.lang.String)", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier(java.lang.String)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.getAlgorithm()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.getObjectId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getObjectId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.getParameters()", "public org.bouncycastle.asn1.ASN1Encodable getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AlgorithmIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.AttCertIssuer", "org.bouncycastle.asn1.x509.AttCertIssuer.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AttCertIssuer", "org.bouncycastle.asn1.x509.AttCertIssuer.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.AttCertIssuer getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.AttCertIssuer", "org.bouncycastle.asn1.x509.AttCertIssuer(org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.AttCertIssuer(org.bouncycastle.asn1.x509.GeneralNames)"], ["org.bouncycastle.asn1.x509.AttCertIssuer", "org.bouncycastle.asn1.x509.AttCertIssuer(org.bouncycastle.asn1.x509.V2Form)", "public org.bouncycastle.asn1.x509.AttCertIssuer(org.bouncycastle.asn1.x509.V2Form)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.AttCertIssuer.getIssuer()", "public org.bouncycastle.asn1.ASN1Encodable getIssuer()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AttCertIssuer.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.AttCertValidityPeriod", "org.bouncycastle.asn1.x509.AttCertValidityPeriod.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AttCertValidityPeriod getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AttCertValidityPeriod", "org.bouncycastle.asn1.x509.AttCertValidityPeriod(org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime)", "public org.bouncycastle.asn1.x509.AttCertValidityPeriod(org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.x509.AttCertValidityPeriod.getNotBeforeTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getNotBeforeTime()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.x509.AttCertValidityPeriod.getNotAfterTime()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getNotAfterTime()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AttCertValidityPeriod.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Attribute", "org.bouncycastle.asn1.x509.Attribute.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Attribute getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Attribute", "org.bouncycastle.asn1.x509.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)", "public org.bouncycastle.asn1.x509.Attribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Set)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.Attribute.getAttrType()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAttrType()"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.asn1.x509.Attribute.getAttributeValues()", "public org.bouncycastle.asn1.ASN1Encodable[] getAttributeValues()"], ["org.bouncycastle.asn1.ASN1Set", "org.bouncycastle.asn1.x509.Attribute.getAttrValues()", "public org.bouncycastle.asn1.ASN1Set getAttrValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Attribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.AttributeCertificate", "org.bouncycastle.asn1.x509.AttributeCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AttributeCertificate getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AttributeCertificate", "org.bouncycastle.asn1.x509.AttributeCertificate(org.bouncycastle.asn1.x509.AttributeCertificateInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.x509.AttributeCertificate(org.bouncycastle.asn1.x509.AttributeCertificateInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.x509.AttributeCertificate", "org.bouncycastle.asn1.x509.AttributeCertificate(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.AttributeCertificate(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.AttributeCertificateInfo", "org.bouncycastle.asn1.x509.AttributeCertificate.getAcinfo()", "public org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AttributeCertificate.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.AttributeCertificate.getSignatureValue()", "public org.bouncycastle.asn1.DERBitString getSignatureValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AttributeCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.AttributeCertificateInfo", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.AttributeCertificateInfo", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getHolder()", "public org.bouncycastle.asn1.x509.Holder getHolder()"], ["org.bouncycastle.asn1.x509.AttCertIssuer", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getIssuer()", "public org.bouncycastle.asn1.x509.AttCertIssuer getIssuer()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getSignature()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x509.AttCertValidityPeriod", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getAttrCertValidityPeriod()", "public org.bouncycastle.asn1.x509.AttCertValidityPeriod getAttrCertValidityPeriod()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getAttributes()", "public org.bouncycastle.asn1.ASN1Sequence getAttributes()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getIssuerUniqueID()", "public org.bouncycastle.asn1.DERBitString getIssuerUniqueID()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AttributeCertificateInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.AuthorityInformationAccess", "org.bouncycastle.asn1.x509.AuthorityInformationAccess.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AuthorityInformationAccess", "org.bouncycastle.asn1.x509.AuthorityInformationAccess(org.bouncycastle.asn1.x509.AccessDescription)", "public org.bouncycastle.asn1.x509.AuthorityInformationAccess(org.bouncycastle.asn1.x509.AccessDescription)"], ["org.bouncycastle.asn1.x509.AuthorityInformationAccess", "org.bouncycastle.asn1.x509.AuthorityInformationAccess(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.AuthorityInformationAccess(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.AccessDescription[]", "org.bouncycastle.asn1.x509.AuthorityInformationAccess.getAccessDescriptions()", "public org.bouncycastle.asn1.x509.AccessDescription[] getAccessDescriptions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AuthorityInformationAccess.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.AuthorityInformationAccess.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.AuthorityKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(byte[])", "public org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(byte[])"], ["org.bouncycastle.asn1.x509.AuthorityKeyIdentifier", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(byte[], org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.AuthorityKeyIdentifier(byte[], org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)"], ["byte[]", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.getKeyIdentifier()", "public byte[] getKeyIdentifier()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.getAuthorityCertIssuer()", "public org.bouncycastle.asn1.x509.GeneralNames getAuthorityCertIssuer()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.getAuthorityCertSerialNumber()", "public java.math.BigInteger getAuthorityCertSerialNumber()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.BasicConstraints", "org.bouncycastle.asn1.x509.BasicConstraints.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.BasicConstraints getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.BasicConstraints", "org.bouncycastle.asn1.x509.BasicConstraints.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.BasicConstraints", "org.bouncycastle.asn1.x509.BasicConstraints.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.BasicConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.BasicConstraints", "org.bouncycastle.asn1.x509.BasicConstraints(boolean)", "public org.bouncycastle.asn1.x509.BasicConstraints(boolean)"], ["org.bouncycastle.asn1.x509.BasicConstraints", "org.bouncycastle.asn1.x509.BasicConstraints(int)", "public org.bouncycastle.asn1.x509.BasicConstraints(int)"], ["boolean", "org.bouncycastle.asn1.x509.BasicConstraints.isCA()", "public boolean isCA()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.BasicConstraints.getPathLenConstraint()", "public java.math.BigInteger getPathLenConstraint()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.BasicConstraints.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.BasicConstraints.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.CRLDistPoint", "org.bouncycastle.asn1.x509.CRLDistPoint.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.CRLDistPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.CRLDistPoint", "org.bouncycastle.asn1.x509.CRLDistPoint.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.CRLDistPoint", "org.bouncycastle.asn1.x509.CRLDistPoint(org.bouncycastle.asn1.x509.DistributionPoint[])", "public org.bouncycastle.asn1.x509.CRLDistPoint(org.bouncycastle.asn1.x509.DistributionPoint[])"], ["org.bouncycastle.asn1.x509.DistributionPoint[]", "org.bouncycastle.asn1.x509.CRLDistPoint.getDistributionPoints()", "public org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CRLDistPoint.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.CRLDistPoint.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.CRLNumber", "org.bouncycastle.asn1.x509.CRLNumber(java.math.BigInteger)", "public org.bouncycastle.asn1.x509.CRLNumber(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.CRLNumber.getCRLNumber()", "public java.math.BigInteger getCRLNumber()"], ["java.lang.String", "org.bouncycastle.asn1.x509.CRLNumber.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CRLNumber.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.CRLNumber", "org.bouncycastle.asn1.x509.CRLNumber.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CRLNumber getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.CRLReason", "org.bouncycastle.asn1.x509.CRLReason.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CRLReason getInstance(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.x509.CRLReason.toString()", "public java.lang.String toString()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.CRLReason.getValue()", "public java.math.BigInteger getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CRLReason.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.CRLReason", "org.bouncycastle.asn1.x509.CRLReason.lookup(int)", "public static org.bouncycastle.asn1.x509.CRLReason lookup(int)"], ["org.bouncycastle.asn1.x509.CertPolicyId", "org.bouncycastle.asn1.x509.CertPolicyId.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CertPolicyId getInstance(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.x509.CertPolicyId.getId()", "public java.lang.String getId()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CertPolicyId.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.asn1.x509.Certificate.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.Certificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.asn1.x509.Certificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.TBSCertificate", "org.bouncycastle.asn1.x509.Certificate.getTBSCertificate()", "public org.bouncycastle.asn1.x509.TBSCertificate getTBSCertificate()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.Certificate.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["int", "org.bouncycastle.asn1.x509.Certificate.getVersionNumber()", "public int getVersionNumber()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.Certificate.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.Certificate.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Certificate.getStartDate()", "public org.bouncycastle.asn1.x509.Time getStartDate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Certificate.getEndDate()", "public org.bouncycastle.asn1.x509.Time getEndDate()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.Certificate.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.Certificate.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.Certificate.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.Certificate.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Certificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.CertificateList", "org.bouncycastle.asn1.x509.CertificateList.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.CertificateList getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.CertificateList", "org.bouncycastle.asn1.x509.CertificateList.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CertificateList getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.CertificateList", "org.bouncycastle.asn1.x509.CertificateList(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.CertificateList(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.TBSCertList", "org.bouncycastle.asn1.x509.CertificateList.getTBSCertList()", "public org.bouncycastle.asn1.x509.TBSCertList getTBSCertList()"], ["org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[]", "org.bouncycastle.asn1.x509.CertificateList.getRevokedCertificates()", "public org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()"], ["java.util.Enumeration", "org.bouncycastle.asn1.x509.CertificateList.getRevokedCertificateEnumeration()", "public java.util.Enumeration getRevokedCertificateEnumeration()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.CertificateList.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.CertificateList.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["int", "org.bouncycastle.asn1.x509.CertificateList.getVersionNumber()", "public int getVersionNumber()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.CertificateList.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.CertificateList.getThisUpdate()", "public org.bouncycastle.asn1.x509.Time getThisUpdate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.CertificateList.getNextUpdate()", "public org.bouncycastle.asn1.x509.Time getNextUpdate()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CertificateList.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["int", "org.bouncycastle.asn1.x509.CertificateList.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.x509.CertificatePair", "org.bouncycastle.asn1.x509.CertificatePair.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CertificatePair getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.CertificatePair", "org.bouncycastle.asn1.x509.CertificatePair(org.bouncycastle.asn1.x509.Certificate, org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.asn1.x509.CertificatePair(org.bouncycastle.asn1.x509.Certificate, org.bouncycastle.asn1.x509.Certificate)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CertificatePair.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.asn1.x509.CertificatePair.getForward()", "public org.bouncycastle.asn1.x509.Certificate getForward()"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.asn1.x509.CertificatePair.getReverse()", "public org.bouncycastle.asn1.x509.Certificate getReverse()"], ["org.bouncycastle.asn1.x509.CertificatePolicies", "org.bouncycastle.asn1.x509.CertificatePolicies.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.CertificatePolicies getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.CertificatePolicies", "org.bouncycastle.asn1.x509.CertificatePolicies.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.CertificatePolicies getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.CertificatePolicies", "org.bouncycastle.asn1.x509.CertificatePolicies.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.CertificatePolicies fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.CertificatePolicies", "org.bouncycastle.asn1.x509.CertificatePolicies(org.bouncycastle.asn1.x509.PolicyInformation)", "public org.bouncycastle.asn1.x509.CertificatePolicies(org.bouncycastle.asn1.x509.PolicyInformation)"], ["org.bouncycastle.asn1.x509.CertificatePolicies", "org.bouncycastle.asn1.x509.CertificatePolicies(org.bouncycastle.asn1.x509.PolicyInformation[])", "public org.bouncycastle.asn1.x509.CertificatePolicies(org.bouncycastle.asn1.x509.PolicyInformation[])"], ["org.bouncycastle.asn1.x509.PolicyInformation[]", "org.bouncycastle.asn1.x509.CertificatePolicies.getPolicyInformation()", "public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicyInformation()"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.x509.CertificatePolicies.getPolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.PolicyInformation getPolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.CertificatePolicies.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.CertificatePolicies.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.DSAParameter", "org.bouncycastle.asn1.x509.DSAParameter.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.DSAParameter getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.DSAParameter", "org.bouncycastle.asn1.x509.DSAParameter.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DSAParameter", "org.bouncycastle.asn1.x509.DSAParameter(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.DSAParameter(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.DSAParameter.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.DSAParameter.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.DSAParameter.getG()", "public java.math.BigInteger getG()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.DSAParameter.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.x509.DigestInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.DigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.x509.DigestInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.x509.DigestInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.x509.DigestInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.x509.DigestInfo", "org.bouncycastle.asn1.x509.DigestInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.DigestInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.DigestInfo.getAlgorithmId()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()"], ["byte[]", "org.bouncycastle.asn1.x509.DigestInfo.getDigest()", "public byte[] getDigest()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.DigestInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.DisplayText(int, java.lang.String)", "public org.bouncycastle.asn1.x509.DisplayText(int, java.lang.String)"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.DisplayText(java.lang.String)", "public org.bouncycastle.asn1.x509.DisplayText(java.lang.String)"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.DisplayText.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.DisplayText getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.DisplayText.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.DisplayText getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.DisplayText.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.DisplayText.getString()", "public java.lang.String getString()"], ["org.bouncycastle.asn1.x509.DistributionPoint", "org.bouncycastle.asn1.x509.DistributionPoint.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.DistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.DistributionPoint", "org.bouncycastle.asn1.x509.DistributionPoint.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.DistributionPoint getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DistributionPoint", "org.bouncycastle.asn1.x509.DistributionPoint(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.DistributionPoint(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.DistributionPoint", "org.bouncycastle.asn1.x509.DistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, org.bouncycastle.asn1.x509.ReasonFlags, org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.DistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, org.bouncycastle.asn1.x509.ReasonFlags, org.bouncycastle.asn1.x509.GeneralNames)"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPoint.getDistributionPoint()", "public org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()"], ["org.bouncycastle.asn1.x509.ReasonFlags", "org.bouncycastle.asn1.x509.DistributionPoint.getReasons()", "public org.bouncycastle.asn1.x509.ReasonFlags getReasons()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.DistributionPoint.getCRLIssuer()", "public org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.DistributionPoint.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.DistributionPoint.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPointName.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.DistributionPointName getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPointName.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.DistributionPointName getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPointName(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.DistributionPointName(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPointName(org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.DistributionPointName(org.bouncycastle.asn1.x509.GeneralNames)"], ["int", "org.bouncycastle.asn1.x509.DistributionPointName.getType()", "public int getType()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.DistributionPointName.getName()", "public org.bouncycastle.asn1.ASN1Encodable getName()"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.DistributionPointName(org.bouncycastle.asn1.ASN1TaggedObject)", "public org.bouncycastle.asn1.x509.DistributionPointName(org.bouncycastle.asn1.ASN1TaggedObject)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.DistributionPointName.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.DistributionPointName.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.ExtendedKeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage(org.bouncycastle.asn1.x509.KeyPurposeId)", "public org.bouncycastle.asn1.x509.ExtendedKeyUsage(org.bouncycastle.asn1.x509.KeyPurposeId)"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage(org.bouncycastle.asn1.x509.KeyPurposeId[])", "public org.bouncycastle.asn1.x509.ExtendedKeyUsage(org.bouncycastle.asn1.x509.KeyPurposeId[])"], ["org.bouncycastle.asn1.x509.ExtendedKeyUsage", "org.bouncycastle.asn1.x509.ExtendedKeyUsage(java.util.Vector)", "public org.bouncycastle.asn1.x509.ExtendedKeyUsage(java.util.Vector)"], ["boolean", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.hasKeyPurposeId(org.bouncycastle.asn1.x509.KeyPurposeId)", "public boolean hasKeyPurposeId(org.bouncycastle.asn1.x509.KeyPurposeId)"], ["org.bouncycastle.asn1.x509.KeyPurposeId[]", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.getUsages()", "public org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()"], ["int", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.size()", "public int size()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.ExtendedKeyUsage.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])", "public org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x509.Extension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.x509.Extension.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Extension getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.Extension.getExtnId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getExtnId()"], ["boolean", "org.bouncycastle.asn1.x509.Extension.isCritical()", "public boolean isCritical()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x509.Extension.getExtnValue()", "public org.bouncycastle.asn1.ASN1OctetString getExtnValue()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.Extension.getParsedValue()", "public org.bouncycastle.asn1.ASN1Encodable getParsedValue()"], ["int", "org.bouncycastle.asn1.x509.Extension.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.x509.Extension.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Extension.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.Extensions.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.Extensions.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Extensions getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.Extensions(org.bouncycastle.asn1.x509.Extension)", "public org.bouncycastle.asn1.x509.Extensions(org.bouncycastle.asn1.x509.Extension)"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.Extensions(org.bouncycastle.asn1.x509.Extension[])", "public org.bouncycastle.asn1.x509.Extensions(org.bouncycastle.asn1.x509.Extension[])"], ["java.util.Enumeration", "org.bouncycastle.asn1.x509.Extensions.oids()", "public java.util.Enumeration oids()"], ["org.bouncycastle.asn1.x509.Extension", "org.bouncycastle.asn1.x509.Extensions.getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.Extensions.getExtensionParsedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getExtensionParsedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Extensions.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["boolean", "org.bouncycastle.asn1.x509.Extensions.equivalent(org.bouncycastle.asn1.x509.Extensions)", "public boolean equivalent(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.Extensions.getExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.Extensions.getNonCriticalExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getNonCriticalExtensionOIDs()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.Extensions.getCriticalExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getCriticalExtensionOIDs()"], ["org.bouncycastle.asn1.x509.ExtensionsGenerator", "org.bouncycastle.asn1.x509.ExtensionsGenerator()", "public org.bouncycastle.asn1.x509.ExtensionsGenerator()"], ["void", "org.bouncycastle.asn1.x509.ExtensionsGenerator.reset()", "public void reset()"], ["void", "org.bouncycastle.asn1.x509.ExtensionsGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["void", "org.bouncycastle.asn1.x509.ExtensionsGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])"], ["boolean", "org.bouncycastle.asn1.x509.ExtensionsGenerator.isEmpty()", "public boolean isEmpty()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.ExtensionsGenerator.generate()", "public org.bouncycastle.asn1.x509.Extensions generate()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName(org.bouncycastle.asn1.x509.X509Name)", "public org.bouncycastle.asn1.x509.GeneralName(org.bouncycastle.asn1.x509.X509Name)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName(org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.asn1.x509.GeneralName(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName(int, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.GeneralName(int, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName(int, java.lang.String)", "public org.bouncycastle.asn1.x509.GeneralName(int, java.lang.String)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralName.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.GeneralName getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["int", "org.bouncycastle.asn1.x509.GeneralName.getTagNo()", "public int getTagNo()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.GeneralName.getName()", "public org.bouncycastle.asn1.ASN1Encodable getName()"], ["java.lang.String", "org.bouncycastle.asn1.x509.GeneralName.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.GeneralName.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNames.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNames.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.GeneralNames getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNames.fromExtensions(org.bouncycastle.asn1.x509.Extensions, org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x509.GeneralNames fromExtensions(org.bouncycastle.asn1.x509.Extensions, org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNames(org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.GeneralNames(org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNames(org.bouncycastle.asn1.x509.GeneralName[])", "public org.bouncycastle.asn1.x509.GeneralNames(org.bouncycastle.asn1.x509.GeneralName[])"], ["org.bouncycastle.asn1.x509.GeneralName[]", "org.bouncycastle.asn1.x509.GeneralNames.getNames()", "public org.bouncycastle.asn1.x509.GeneralName[] getNames()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.GeneralNames.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.GeneralNames.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.GeneralNamesBuilder", "org.bouncycastle.asn1.x509.GeneralNamesBuilder()", "public org.bouncycastle.asn1.x509.GeneralNamesBuilder()"], ["org.bouncycastle.asn1.x509.GeneralNamesBuilder", "org.bouncycastle.asn1.x509.GeneralNamesBuilder.addNames(org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.GeneralNamesBuilder addNames(org.bouncycastle.asn1.x509.GeneralNames)"], ["org.bouncycastle.asn1.x509.GeneralNamesBuilder", "org.bouncycastle.asn1.x509.GeneralNamesBuilder.addName(org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.GeneralNamesBuilder addName(org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.GeneralNamesBuilder.build()", "public org.bouncycastle.asn1.x509.GeneralNames build()"], ["org.bouncycastle.asn1.x509.GeneralSubtree", "org.bouncycastle.asn1.x509.GeneralSubtree(org.bouncycastle.asn1.x509.GeneralName, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.GeneralSubtree(org.bouncycastle.asn1.x509.GeneralName, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.GeneralSubtree", "org.bouncycastle.asn1.x509.GeneralSubtree(org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.GeneralSubtree(org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.GeneralSubtree", "org.bouncycastle.asn1.x509.GeneralSubtree.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.GeneralSubtree getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.GeneralSubtree", "org.bouncycastle.asn1.x509.GeneralSubtree.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.GeneralSubtree.getBase()", "public org.bouncycastle.asn1.x509.GeneralName getBase()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.GeneralSubtree.getMinimum()", "public java.math.BigInteger getMinimum()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.GeneralSubtree.getMaximum()", "public java.math.BigInteger getMaximum()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.GeneralSubtree.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.IssuerSerial, int)", "public org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.IssuerSerial, int)"], ["int", "org.bouncycastle.asn1.x509.Holder.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.GeneralNames)"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.GeneralNames, int)", "public org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.GeneralNames, int)"], ["org.bouncycastle.asn1.x509.Holder", "org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.ObjectDigestInfo)", "public org.bouncycastle.asn1.x509.Holder(org.bouncycastle.asn1.x509.ObjectDigestInfo)"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.Holder.getBaseCertificateID()", "public org.bouncycastle.asn1.x509.IssuerSerial getBaseCertificateID()"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.Holder.getEntityName()", "public org.bouncycastle.asn1.x509.GeneralNames getEntityName()"], ["org.bouncycastle.asn1.x509.ObjectDigestInfo", "org.bouncycastle.asn1.x509.Holder.getObjectDigestInfo()", "public org.bouncycastle.asn1.x509.ObjectDigestInfo getObjectDigestInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Holder.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.IetfAttrSyntax", "org.bouncycastle.asn1.x509.IetfAttrSyntax.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.IetfAttrSyntax getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.IetfAttrSyntax.getPolicyAuthority()", "public org.bouncycastle.asn1.x509.GeneralNames getPolicyAuthority()"], ["int", "org.bouncycastle.asn1.x509.IetfAttrSyntax.getValueType()", "public int getValueType()"], ["java.lang.Object[]", "org.bouncycastle.asn1.x509.IetfAttrSyntax.getValues()", "public java.lang.Object[] getValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.IetfAttrSyntax.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.IssuerSerial.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.IssuerSerial.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.IssuerSerial getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.IssuerSerial.getIssuer()", "public org.bouncycastle.asn1.x509.GeneralNames getIssuer()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.IssuerSerial.getSerial()", "public org.bouncycastle.asn1.ASN1Integer getSerial()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.IssuerSerial.getIssuerUID()", "public org.bouncycastle.asn1.DERBitString getIssuerUID()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.IssuerSerial.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.IssuingDistributionPoint", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.IssuingDistributionPoint", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.IssuingDistributionPoint", "org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean, org.bouncycastle.asn1.x509.ReasonFlags, boolean, boolean)", "public org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean, org.bouncycastle.asn1.x509.ReasonFlags, boolean, boolean)"], ["org.bouncycastle.asn1.x509.IssuingDistributionPoint", "org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean)", "public org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean)"], ["boolean", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.onlyContainsUserCerts()", "public boolean onlyContainsUserCerts()"], ["boolean", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.onlyContainsCACerts()", "public boolean onlyContainsCACerts()"], ["boolean", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.isIndirectCRL()", "public boolean isIndirectCRL()"], ["boolean", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.onlyContainsAttributeCerts()", "public boolean onlyContainsAttributeCerts()"], ["org.bouncycastle.asn1.x509.DistributionPointName", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.getDistributionPoint()", "public org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()"], ["org.bouncycastle.asn1.x509.ReasonFlags", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.getOnlySomeReasons()", "public org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.IssuingDistributionPoint.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.KeyPurposeId", "org.bouncycastle.asn1.x509.KeyPurposeId(java.lang.String)", "public org.bouncycastle.asn1.x509.KeyPurposeId(java.lang.String)"], ["org.bouncycastle.asn1.x509.KeyPurposeId", "org.bouncycastle.asn1.x509.KeyPurposeId.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.KeyPurposeId getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.KeyPurposeId.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.KeyPurposeId.getId()", "public java.lang.String getId()"], ["org.bouncycastle.asn1.x509.KeyUsage", "org.bouncycastle.asn1.x509.KeyUsage.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.KeyUsage getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.KeyUsage", "org.bouncycastle.asn1.x509.KeyUsage.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.KeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.KeyUsage", "org.bouncycastle.asn1.x509.KeyUsage(int)", "public org.bouncycastle.asn1.x509.KeyUsage(int)"], ["boolean", "org.bouncycastle.asn1.x509.KeyUsage.hasUsages(int)", "public boolean hasUsages(int)"], ["byte[]", "org.bouncycastle.asn1.x509.KeyUsage.getBytes()", "public byte[] getBytes()"], ["int", "org.bouncycastle.asn1.x509.KeyUsage.getPadBits()", "public int getPadBits()"], ["java.lang.String", "org.bouncycastle.asn1.x509.KeyUsage.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.KeyUsage.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.NameConstraints", "org.bouncycastle.asn1.x509.NameConstraints.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.NameConstraints", "org.bouncycastle.asn1.x509.NameConstraints(org.bouncycastle.asn1.x509.GeneralSubtree[], org.bouncycastle.asn1.x509.GeneralSubtree[])", "public org.bouncycastle.asn1.x509.NameConstraints(org.bouncycastle.asn1.x509.GeneralSubtree[], org.bouncycastle.asn1.x509.GeneralSubtree[])"], ["org.bouncycastle.asn1.x509.GeneralSubtree[]", "org.bouncycastle.asn1.x509.NameConstraints.getPermittedSubtrees()", "public org.bouncycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees()"], ["org.bouncycastle.asn1.x509.GeneralSubtree[]", "org.bouncycastle.asn1.x509.NameConstraints.getExcludedSubtrees()", "public org.bouncycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.NameConstraints.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.x509.NoticeReference(java.lang.String, java.util.Vector)", "public org.bouncycastle.asn1.x509.NoticeReference(java.lang.String, java.util.Vector)"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.x509.NoticeReference(java.lang.String, org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.x509.NoticeReference(java.lang.String, org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.x509.NoticeReference(org.bouncycastle.asn1.x509.DisplayText, org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.asn1.x509.NoticeReference(org.bouncycastle.asn1.x509.DisplayText, org.bouncycastle.asn1.ASN1EncodableVector)"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.x509.NoticeReference.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.NoticeReference getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.NoticeReference.getOrganization()", "public org.bouncycastle.asn1.x509.DisplayText getOrganization()"], ["org.bouncycastle.asn1.ASN1Integer[]", "org.bouncycastle.asn1.x509.NoticeReference.getNoticeNumbers()", "public org.bouncycastle.asn1.ASN1Integer[] getNoticeNumbers()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.NoticeReference.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.ObjectDigestInfo", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.ObjectDigestInfo", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.ObjectDigestInfo", "org.bouncycastle.asn1.x509.ObjectDigestInfo(int, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.x509.ObjectDigestInfo(int, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.ASN1Enumerated", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getDigestedObjectType()", "public org.bouncycastle.asn1.ASN1Enumerated getDigestedObjectType()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getOtherObjectTypeID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOtherObjectTypeID()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getDigestAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.ObjectDigestInfo.getObjectDigest()", "public org.bouncycastle.asn1.DERBitString getObjectDigest()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.ObjectDigestInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.PolicyConstraints", "org.bouncycastle.asn1.x509.PolicyConstraints(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.PolicyConstraints(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.PolicyConstraints", "org.bouncycastle.asn1.x509.PolicyConstraints.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.PolicyConstraints", "org.bouncycastle.asn1.x509.PolicyConstraints.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.PolicyConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.PolicyConstraints.getRequireExplicitPolicyMapping()", "public java.math.BigInteger getRequireExplicitPolicyMapping()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.PolicyConstraints.getInhibitPolicyMapping()", "public java.math.BigInteger getInhibitPolicyMapping()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.PolicyConstraints.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.x509.PolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.PolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.x509.PolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.PolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.PolicyInformation", "org.bouncycastle.asn1.x509.PolicyInformation.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.PolicyInformation.getPolicyIdentifier()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()"], ["org.bouncycastle.asn1.ASN1Sequence", "org.bouncycastle.asn1.x509.PolicyInformation.getPolicyQualifiers()", "public org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.PolicyInformation.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.PolicyMappings", "org.bouncycastle.asn1.x509.PolicyMappings.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.PolicyMappings getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.PolicyMappings", "org.bouncycastle.asn1.x509.PolicyMappings(java.util.Hashtable)", "public org.bouncycastle.asn1.x509.PolicyMappings(java.util.Hashtable)"], ["org.bouncycastle.asn1.x509.PolicyMappings", "org.bouncycastle.asn1.x509.PolicyMappings(org.bouncycastle.asn1.x509.CertPolicyId, org.bouncycastle.asn1.x509.CertPolicyId)", "public org.bouncycastle.asn1.x509.PolicyMappings(org.bouncycastle.asn1.x509.CertPolicyId, org.bouncycastle.asn1.x509.CertPolicyId)"], ["org.bouncycastle.asn1.x509.PolicyMappings", "org.bouncycastle.asn1.x509.PolicyMappings(org.bouncycastle.asn1.x509.CertPolicyId[], org.bouncycastle.asn1.x509.CertPolicyId[])", "public org.bouncycastle.asn1.x509.PolicyMappings(org.bouncycastle.asn1.x509.CertPolicyId[], org.bouncycastle.asn1.x509.CertPolicyId[])"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.PolicyMappings.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.PolicyQualifierInfo", "org.bouncycastle.asn1.x509.PolicyQualifierInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.PolicyQualifierInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.x509.PolicyQualifierInfo", "org.bouncycastle.asn1.x509.PolicyQualifierInfo(java.lang.String)", "public org.bouncycastle.asn1.x509.PolicyQualifierInfo(java.lang.String)"], ["org.bouncycastle.asn1.x509.PolicyQualifierInfo", "org.bouncycastle.asn1.x509.PolicyQualifierInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.PolicyQualifierInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.PolicyQualifierInfo", "org.bouncycastle.asn1.x509.PolicyQualifierInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.PolicyQualifierInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.PolicyQualifierInfo.getPolicyQualifierId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyQualifierId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.PolicyQualifierInfo.getQualifier()", "public org.bouncycastle.asn1.ASN1Encodable getQualifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.PolicyQualifierInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod", "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod.getNotBefore()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getNotBefore()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod.getNotAfter()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getNotAfter()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.RSAPublicKeyStructure", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.RSAPublicKeyStructure", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.RSAPublicKeyStructure", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.x509.RSAPublicKeyStructure(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.x509.RSAPublicKeyStructure", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.RSAPublicKeyStructure(org.bouncycastle.asn1.ASN1Sequence)"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.RSAPublicKeyStructure.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.ReasonFlags", "org.bouncycastle.asn1.x509.ReasonFlags(int)", "public org.bouncycastle.asn1.x509.ReasonFlags(int)"], ["org.bouncycastle.asn1.x509.ReasonFlags", "org.bouncycastle.asn1.x509.ReasonFlags(org.bouncycastle.asn1.DERBitString)", "public org.bouncycastle.asn1.x509.ReasonFlags(org.bouncycastle.asn1.DERBitString)"], ["org.bouncycastle.asn1.x509.RoleSyntax", "org.bouncycastle.asn1.x509.RoleSyntax.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.RoleSyntax getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.RoleSyntax", "org.bouncycastle.asn1.x509.RoleSyntax(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.RoleSyntax(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.RoleSyntax", "org.bouncycastle.asn1.x509.RoleSyntax(org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.RoleSyntax(org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.RoleSyntax", "org.bouncycastle.asn1.x509.RoleSyntax(java.lang.String)", "public org.bouncycastle.asn1.x509.RoleSyntax(java.lang.String)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.RoleSyntax.getRoleAuthority()", "public org.bouncycastle.asn1.x509.GeneralNames getRoleAuthority()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.RoleSyntax.getRoleName()", "public org.bouncycastle.asn1.x509.GeneralName getRoleName()"], ["java.lang.String", "org.bouncycastle.asn1.x509.RoleSyntax.getRoleNameAsString()", "public java.lang.String getRoleNameAsString()"], ["java.lang.String[]", "org.bouncycastle.asn1.x509.RoleSyntax.getRoleAuthorityAsString()", "public java.lang.String[] getRoleAuthorityAsString()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.RoleSyntax.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.RoleSyntax.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.SubjectDirectoryAttributes", "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.SubjectDirectoryAttributes getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.SubjectDirectoryAttributes", "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes(java.util.Vector)", "public org.bouncycastle.asn1.x509.SubjectDirectoryAttributes(java.util.Vector)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.util.Vector", "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes.getAttributes()", "public java.util.Vector getAttributes()"], ["org.bouncycastle.asn1.x509.SubjectKeyIdentifier", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.SubjectKeyIdentifier", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.SubjectKeyIdentifier", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier.fromExtensions(org.bouncycastle.asn1.x509.Extensions)", "public static org.bouncycastle.asn1.x509.SubjectKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.SubjectKeyIdentifier", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier(byte[])", "public org.bouncycastle.asn1.x509.SubjectKeyIdentifier(byte[])"], ["byte[]", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier.getKeyIdentifier()", "public byte[] getKeyIdentifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.SubjectKeyIdentifier.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getAlgorithmId()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.parsePublicKey()", "public org.bouncycastle.asn1.ASN1Primitive parsePublicKey() throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getPublicKey()", "public org.bouncycastle.asn1.ASN1Primitive getPublicKey() throws java.io.IOException"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.getPublicKeyData()", "public org.bouncycastle.asn1.DERBitString getPublicKeyData()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.TBSCertList$CRLEntry", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.TBSCertList$CRLEntry getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.getUserCertificate()", "public org.bouncycastle.asn1.ASN1Integer getUserCertificate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.getRevocationDate()", "public org.bouncycastle.asn1.x509.Time getRevocationDate()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["boolean", "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry.hasExtensions()", "public boolean hasExtensions()"], ["boolean", "org.bouncycastle.asn1.x509.TBSCertList$EmptyEnumeration.hasMoreElements()", "public boolean hasMoreElements()"], ["java.lang.Object", "org.bouncycastle.asn1.x509.TBSCertList$EmptyEnumeration.nextElement()", "public java.lang.Object nextElement()"], ["boolean", "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration.hasMoreElements()", "public boolean hasMoreElements()"], ["java.lang.Object", "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration.nextElement()", "public java.lang.Object nextElement()"], ["org.bouncycastle.asn1.x509.TBSCertList", "org.bouncycastle.asn1.x509.TBSCertList.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.TBSCertList getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.TBSCertList", "org.bouncycastle.asn1.x509.TBSCertList.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.TBSCertList getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.TBSCertList", "org.bouncycastle.asn1.x509.TBSCertList(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.TBSCertList(org.bouncycastle.asn1.ASN1Sequence)"], ["int", "org.bouncycastle.asn1.x509.TBSCertList.getVersionNumber()", "public int getVersionNumber()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertList.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.TBSCertList.getSignature()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.TBSCertList.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertList.getThisUpdate()", "public org.bouncycastle.asn1.x509.Time getThisUpdate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertList.getNextUpdate()", "public org.bouncycastle.asn1.x509.Time getNextUpdate()"], ["org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[]", "org.bouncycastle.asn1.x509.TBSCertList.getRevokedCertificates()", "public org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()"], ["java.util.Enumeration", "org.bouncycastle.asn1.x509.TBSCertList.getRevokedCertificateEnumeration()", "public java.util.Enumeration getRevokedCertificateEnumeration()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.TBSCertList.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.TBSCertList.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.TBSCertificate", "org.bouncycastle.asn1.x509.TBSCertificate.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.TBSCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.TBSCertificate", "org.bouncycastle.asn1.x509.TBSCertificate.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.TBSCertificate getInstance(java.lang.Object)"], ["int", "org.bouncycastle.asn1.x509.TBSCertificate.getVersionNumber()", "public int getVersionNumber()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertificate.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertificate.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.TBSCertificate.getSignature()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.TBSCertificate.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertificate.getStartDate()", "public org.bouncycastle.asn1.x509.Time getStartDate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertificate.getEndDate()", "public org.bouncycastle.asn1.x509.Time getEndDate()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.TBSCertificate.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.TBSCertificate.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.TBSCertificate.getIssuerUniqueId()", "public org.bouncycastle.asn1.DERBitString getIssuerUniqueId()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.TBSCertificate.getSubjectUniqueId()", "public org.bouncycastle.asn1.DERBitString getSubjectUniqueId()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.asn1.x509.TBSCertificate.getExtensions()", "public org.bouncycastle.asn1.x509.Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.TBSCertificate.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.TBSCertificateStructure", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.TBSCertificateStructure", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.TBSCertificateStructure", "org.bouncycastle.asn1.x509.TBSCertificateStructure(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.TBSCertificateStructure(org.bouncycastle.asn1.ASN1Sequence)"], ["int", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getVersionNumber()", "public org.bouncycastle.asn1.ASN1Integer getVersionNumber()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getSignature()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getStartDate()", "public org.bouncycastle.asn1.x509.Time getStartDate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getEndDate()", "public org.bouncycastle.asn1.x509.Time getEndDate()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getIssuerUniqueId()", "public org.bouncycastle.asn1.DERBitString getIssuerUniqueId()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getSubjectUniqueId()", "public org.bouncycastle.asn1.DERBitString getSubjectUniqueId()"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.TBSCertificateStructure.getExtensions()", "public org.bouncycastle.asn1.x509.X509Extensions getExtensions()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.TBSCertificateStructure.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Target", "org.bouncycastle.asn1.x509.Target.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Target getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Target", "org.bouncycastle.asn1.x509.Target(int, org.bouncycastle.asn1.x509.GeneralName)", "public org.bouncycastle.asn1.x509.Target(int, org.bouncycastle.asn1.x509.GeneralName)"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.Target.getTargetGroup()", "public org.bouncycastle.asn1.x509.GeneralName getTargetGroup()"], ["org.bouncycastle.asn1.x509.GeneralName", "org.bouncycastle.asn1.x509.Target.getTargetName()", "public org.bouncycastle.asn1.x509.GeneralName getTargetName()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Target.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.TargetInformation", "org.bouncycastle.asn1.x509.TargetInformation.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Targets[]", "org.bouncycastle.asn1.x509.TargetInformation.getTargetsObjects()", "public org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()"], ["org.bouncycastle.asn1.x509.TargetInformation", "org.bouncycastle.asn1.x509.TargetInformation(org.bouncycastle.asn1.x509.Targets)", "public org.bouncycastle.asn1.x509.TargetInformation(org.bouncycastle.asn1.x509.Targets)"], ["org.bouncycastle.asn1.x509.TargetInformation", "org.bouncycastle.asn1.x509.TargetInformation(org.bouncycastle.asn1.x509.Target[])", "public org.bouncycastle.asn1.x509.TargetInformation(org.bouncycastle.asn1.x509.Target[])"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.TargetInformation.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Targets", "org.bouncycastle.asn1.x509.Targets.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Targets getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.Targets", "org.bouncycastle.asn1.x509.Targets(org.bouncycastle.asn1.x509.Target[])", "public org.bouncycastle.asn1.x509.Targets(org.bouncycastle.asn1.x509.Target[])"], ["org.bouncycastle.asn1.x509.Target[]", "org.bouncycastle.asn1.x509.Targets.getTargets()", "public org.bouncycastle.asn1.x509.Target[] getTargets()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Targets.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Time.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Time(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.x509.Time(org.bouncycastle.asn1.ASN1Primitive)"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Time(java.util.Date)", "public org.bouncycastle.asn1.x509.Time(java.util.Date)"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Time(java.util.Date, java.util.Locale)", "public org.bouncycastle.asn1.x509.Time(java.util.Date, java.util.Locale)"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.Time.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.Time getInstance(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.x509.Time.getTime()", "public java.lang.String getTime()"], ["java.util.Date", "org.bouncycastle.asn1.x509.Time.getDate()", "public java.util.Date getDate()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.Time.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.String", "org.bouncycastle.asn1.x509.Time.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.UserNotice", "org.bouncycastle.asn1.x509.UserNotice(org.bouncycastle.asn1.x509.NoticeReference, org.bouncycastle.asn1.x509.DisplayText)", "public org.bouncycastle.asn1.x509.UserNotice(org.bouncycastle.asn1.x509.NoticeReference, org.bouncycastle.asn1.x509.DisplayText)"], ["org.bouncycastle.asn1.x509.UserNotice", "org.bouncycastle.asn1.x509.UserNotice(org.bouncycastle.asn1.x509.NoticeReference, java.lang.String)", "public org.bouncycastle.asn1.x509.UserNotice(org.bouncycastle.asn1.x509.NoticeReference, java.lang.String)"], ["org.bouncycastle.asn1.x509.UserNotice", "org.bouncycastle.asn1.x509.UserNotice.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.UserNotice getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.NoticeReference", "org.bouncycastle.asn1.x509.UserNotice.getNoticeRef()", "public org.bouncycastle.asn1.x509.NoticeReference getNoticeRef()"], ["org.bouncycastle.asn1.x509.DisplayText", "org.bouncycastle.asn1.x509.UserNotice.getExplicitText()", "public org.bouncycastle.asn1.x509.DisplayText getExplicitText()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.UserNotice.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.V1TBSCertificateGenerator", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator()", "public org.bouncycastle.asn1.x509.V1TBSCertificateGenerator()"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setSerialNumber(org.bouncycastle.asn1.ASN1Integer)", "public void setSerialNumber(org.bouncycastle.asn1.ASN1Integer)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setIssuer(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuer(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setIssuer(org.bouncycastle.asn1.x500.X500Name)", "public void setIssuer(org.bouncycastle.asn1.x500.X500Name)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setStartDate(org.bouncycastle.asn1.x509.Time)", "public void setStartDate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setStartDate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setStartDate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setEndDate(org.bouncycastle.asn1.x509.Time)", "public void setEndDate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setEndDate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setEndDate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setSubject(org.bouncycastle.asn1.x509.X509Name)", "public void setSubject(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setSubject(org.bouncycastle.asn1.x500.X500Name)", "public void setSubject(org.bouncycastle.asn1.x500.X500Name)"], ["void", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public void setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["org.bouncycastle.asn1.x509.TBSCertificate", "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator.generateTBSCertificate()", "public org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()"], ["org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator()", "public org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator()"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setHolder(org.bouncycastle.asn1.x509.Holder)", "public void setHolder(org.bouncycastle.asn1.x509.Holder)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.addAttribute(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)", "public void addAttribute(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.addAttribute(org.bouncycastle.asn1.x509.Attribute)", "public void addAttribute(org.bouncycastle.asn1.x509.Attribute)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setSerialNumber(org.bouncycastle.asn1.ASN1Integer)", "public void setSerialNumber(org.bouncycastle.asn1.ASN1Integer)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setIssuer(org.bouncycastle.asn1.x509.AttCertIssuer)", "public void setIssuer(org.bouncycastle.asn1.x509.AttCertIssuer)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setStartDate(org.bouncycastle.asn1.ASN1GeneralizedTime)", "public void setStartDate(org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setEndDate(org.bouncycastle.asn1.ASN1GeneralizedTime)", "public void setEndDate(org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setIssuerUniqueID(org.bouncycastle.asn1.DERBitString)", "public void setIssuerUniqueID(org.bouncycastle.asn1.DERBitString)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setExtensions(org.bouncycastle.asn1.x509.X509Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)"], ["void", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.AttributeCertificateInfo", "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator.generateAttributeCertificateInfo()", "public org.bouncycastle.asn1.x509.AttributeCertificateInfo generateAttributeCertificateInfo()"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.V2Form getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.V2Form getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames)", "public org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.IssuerSerial)", "public org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.IssuerSerial)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.ObjectDigestInfo)", "public org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.ObjectDigestInfo)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.IssuerSerial, org.bouncycastle.asn1.x509.ObjectDigestInfo)", "public org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.x509.IssuerSerial, org.bouncycastle.asn1.x509.ObjectDigestInfo)"], ["org.bouncycastle.asn1.x509.V2Form", "org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.V2Form(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.GeneralNames", "org.bouncycastle.asn1.x509.V2Form.getIssuerName()", "public org.bouncycastle.asn1.x509.GeneralNames getIssuerName()"], ["org.bouncycastle.asn1.x509.IssuerSerial", "org.bouncycastle.asn1.x509.V2Form.getBaseCertificateID()", "public org.bouncycastle.asn1.x509.IssuerSerial getBaseCertificateID()"], ["org.bouncycastle.asn1.x509.ObjectDigestInfo", "org.bouncycastle.asn1.x509.V2Form.getObjectDigestInfo()", "public org.bouncycastle.asn1.x509.ObjectDigestInfo getObjectDigestInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.V2Form.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.V2TBSCertListGenerator", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator()", "public org.bouncycastle.asn1.x509.V2TBSCertListGenerator()"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setIssuer(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuer(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setIssuer(org.bouncycastle.asn1.x500.X500Name)", "public void setIssuer(org.bouncycastle.asn1.x500.X500Name)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setThisUpdate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setThisUpdate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setNextUpdate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setNextUpdate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setThisUpdate(org.bouncycastle.asn1.x509.Time)", "public void setThisUpdate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setNextUpdate(org.bouncycastle.asn1.x509.Time)", "public void setNextUpdate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.addCRLEntry(org.bouncycastle.asn1.ASN1Sequence)", "public void addCRLEntry(org.bouncycastle.asn1.ASN1Sequence)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1UTCTime, int)", "public void addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1UTCTime, int)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, int)", "public void addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, int)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, int, org.bouncycastle.asn1.ASN1GeneralizedTime)", "public void addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, int, org.bouncycastle.asn1.ASN1GeneralizedTime)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, org.bouncycastle.asn1.x509.Extensions)", "public void addCRLEntry(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x509.Time, org.bouncycastle.asn1.x509.Extensions)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setExtensions(org.bouncycastle.asn1.x509.X509Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)"], ["void", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.TBSCertList", "org.bouncycastle.asn1.x509.V2TBSCertListGenerator.generateTBSCertList()", "public org.bouncycastle.asn1.x509.TBSCertList generateTBSCertList()"], ["org.bouncycastle.asn1.x509.V3TBSCertificateGenerator", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator()", "public org.bouncycastle.asn1.x509.V3TBSCertificateGenerator()"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSerialNumber(org.bouncycastle.asn1.ASN1Integer)", "public void setSerialNumber(org.bouncycastle.asn1.ASN1Integer)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setIssuer(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuer(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setIssuer(org.bouncycastle.asn1.x500.X500Name)", "public void setIssuer(org.bouncycastle.asn1.x500.X500Name)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setStartDate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setStartDate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setStartDate(org.bouncycastle.asn1.x509.Time)", "public void setStartDate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setEndDate(org.bouncycastle.asn1.ASN1UTCTime)", "public void setEndDate(org.bouncycastle.asn1.ASN1UTCTime)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setEndDate(org.bouncycastle.asn1.x509.Time)", "public void setEndDate(org.bouncycastle.asn1.x509.Time)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSubject(org.bouncycastle.asn1.x509.X509Name)", "public void setSubject(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSubject(org.bouncycastle.asn1.x500.X500Name)", "public void setSubject(org.bouncycastle.asn1.x500.X500Name)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setIssuerUniqueID(org.bouncycastle.asn1.DERBitString)", "public void setIssuerUniqueID(org.bouncycastle.asn1.DERBitString)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSubjectUniqueID(org.bouncycastle.asn1.DERBitString)", "public void setSubjectUniqueID(org.bouncycastle.asn1.DERBitString)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public void setSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setExtensions(org.bouncycastle.asn1.x509.X509Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)"], ["void", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.setExtensions(org.bouncycastle.asn1.x509.Extensions)", "public void setExtensions(org.bouncycastle.asn1.x509.Extensions)"], ["org.bouncycastle.asn1.x509.TBSCertificate", "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator.generateTBSCertificate()", "public org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()"], ["org.bouncycastle.asn1.x509.X509CertificateStructure", "org.bouncycastle.asn1.x509.X509CertificateStructure.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.X509CertificateStructure", "org.bouncycastle.asn1.x509.X509CertificateStructure.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.X509CertificateStructure", "org.bouncycastle.asn1.x509.X509CertificateStructure(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.X509CertificateStructure(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.TBSCertificateStructure", "org.bouncycastle.asn1.x509.X509CertificateStructure.getTBSCertificate()", "public org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificate()"], ["int", "org.bouncycastle.asn1.x509.X509CertificateStructure.getVersion()", "public int getVersion()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x509.X509CertificateStructure.getSerialNumber()", "public org.bouncycastle.asn1.ASN1Integer getSerialNumber()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.X509CertificateStructure.getIssuer()", "public org.bouncycastle.asn1.x500.X500Name getIssuer()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.X509CertificateStructure.getStartDate()", "public org.bouncycastle.asn1.x509.Time getStartDate()"], ["org.bouncycastle.asn1.x509.Time", "org.bouncycastle.asn1.x509.X509CertificateStructure.getEndDate()", "public org.bouncycastle.asn1.x509.Time getEndDate()"], ["org.bouncycastle.asn1.x500.X500Name", "org.bouncycastle.asn1.x509.X509CertificateStructure.getSubject()", "public org.bouncycastle.asn1.x500.X500Name getSubject()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.asn1.x509.X509CertificateStructure.getSubjectPublicKeyInfo()", "public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.X509CertificateStructure.getSignatureAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x509.X509CertificateStructure.getSignature()", "public org.bouncycastle.asn1.DERBitString getSignature()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.X509CertificateStructure.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.X509DefaultEntryConverter", "org.bouncycastle.asn1.x509.X509DefaultEntryConverter()", "public org.bouncycastle.asn1.x509.X509DefaultEntryConverter()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.X509DefaultEntryConverter.getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)", "public org.bouncycastle.asn1.ASN1Primitive getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String)"], ["org.bouncycastle.asn1.x509.X509Extension", "org.bouncycastle.asn1.x509.X509Extension(org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x509.X509Extension(org.bouncycastle.asn1.ASN1Boolean, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x509.X509Extension", "org.bouncycastle.asn1.x509.X509Extension(boolean, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x509.X509Extension(boolean, org.bouncycastle.asn1.ASN1OctetString)"], ["boolean", "org.bouncycastle.asn1.x509.X509Extension.isCritical()", "public boolean isCritical()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x509.X509Extension.getValue()", "public org.bouncycastle.asn1.ASN1OctetString getValue()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.X509Extension.getParsedValue()", "public org.bouncycastle.asn1.ASN1Encodable getParsedValue()"], ["int", "org.bouncycastle.asn1.x509.X509Extension.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.x509.X509Extension.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.X509Extension.convertValueToObject(org.bouncycastle.asn1.x509.X509Extension)", "public static org.bouncycastle.asn1.ASN1Primitive convertValueToObject(org.bouncycastle.asn1.x509.X509Extension) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.X509Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.X509Extensions(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions(java.util.Hashtable)", "public org.bouncycastle.asn1.x509.X509Extensions(java.util.Hashtable)"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions(java.util.Vector, java.util.Hashtable)", "public org.bouncycastle.asn1.x509.X509Extensions(java.util.Vector, java.util.Hashtable)"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509Extensions(java.util.Vector, java.util.Vector)", "public org.bouncycastle.asn1.x509.X509Extensions(java.util.Vector, java.util.Vector)"], ["java.util.Enumeration", "org.bouncycastle.asn1.x509.X509Extensions.oids()", "public java.util.Enumeration oids()"], ["org.bouncycastle.asn1.x509.X509Extension", "org.bouncycastle.asn1.x509.X509Extensions.getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.X509Extensions.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["boolean", "org.bouncycastle.asn1.x509.X509Extensions.equivalent(org.bouncycastle.asn1.x509.X509Extensions)", "public boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.X509Extensions.getExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.X509Extensions.getNonCriticalExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getNonCriticalExtensionOIDs()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier[]", "org.bouncycastle.asn1.x509.X509Extensions.getCriticalExtensionOIDs()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier[] getCriticalExtensionOIDs()"], ["org.bouncycastle.asn1.x509.X509ExtensionsGenerator", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator()", "public org.bouncycastle.asn1.x509.X509ExtensionsGenerator()"], ["void", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator.reset()", "public void reset()"], ["void", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])"], ["boolean", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator.isEmpty()", "public boolean isEmpty()"], ["org.bouncycastle.asn1.x509.X509Extensions", "org.bouncycastle.asn1.x509.X509ExtensionsGenerator.generate()", "public org.bouncycastle.asn1.x509.X509Extensions generate()"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x509.X509Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.X509Name(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.util.Hashtable)", "public org.bouncycastle.asn1.x509.X509Name(java.util.Hashtable)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Hashtable)", "public org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Hashtable)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Hashtable, org.bouncycastle.asn1.x509.X509NameEntryConverter)", "public org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Hashtable, org.bouncycastle.asn1.x509.X509NameEntryConverter)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Vector)", "public org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Vector)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Vector, org.bouncycastle.asn1.x509.X509NameEntryConverter)", "public org.bouncycastle.asn1.x509.X509Name(java.util.Vector, java.util.Vector, org.bouncycastle.asn1.x509.X509NameEntryConverter)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.lang.String)", "public org.bouncycastle.asn1.x509.X509Name(java.lang.String)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)", "public org.bouncycastle.asn1.x509.X509Name(java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(boolean, java.lang.String)", "public org.bouncycastle.asn1.x509.X509Name(boolean, java.lang.String)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(boolean, java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)", "public org.bouncycastle.asn1.x509.X509Name(boolean, java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(boolean, java.util.Hashtable, java.lang.String)", "public org.bouncycastle.asn1.x509.X509Name(boolean, java.util.Hashtable, java.lang.String)"], ["org.bouncycastle.asn1.x509.X509Name", "org.bouncycastle.asn1.x509.X509Name(boolean, java.util.Hashtable, java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)", "public org.bouncycastle.asn1.x509.X509Name(boolean, java.util.Hashtable, java.lang.String, org.bouncycastle.asn1.x509.X509NameEntryConverter)"], ["java.util.Vector", "org.bouncycastle.asn1.x509.X509Name.getOIDs()", "public java.util.Vector getOIDs()"], ["java.util.Vector", "org.bouncycastle.asn1.x509.X509Name.getValues()", "public java.util.Vector getValues()"], ["java.util.Vector", "org.bouncycastle.asn1.x509.X509Name.getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.X509Name.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["boolean", "org.bouncycastle.asn1.x509.X509Name.equals(java.lang.Object, boolean)", "public boolean equals(java.lang.Object, boolean)"], ["int", "org.bouncycastle.asn1.x509.X509Name.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.asn1.x509.X509Name.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.asn1.x509.X509Name.toString(boolean, java.util.Hashtable)", "public java.lang.String toString(boolean, java.util.Hashtable)"], ["java.lang.String", "org.bouncycastle.asn1.x509.X509Name.toString()", "public java.lang.String toString()"], ["org.bouncycastle.asn1.x509.X509NameEntryConverter", "org.bouncycastle.asn1.x509.X509NameEntryConverter()", "public org.bouncycastle.asn1.x509.X509NameEntryConverter()"], ["org.bouncycastle.asn1.x509.X509NameTokenizer", "org.bouncycastle.asn1.x509.X509NameTokenizer(java.lang.String)", "public org.bouncycastle.asn1.x509.X509NameTokenizer(java.lang.String)"], ["org.bouncycastle.asn1.x509.X509NameTokenizer", "org.bouncycastle.asn1.x509.X509NameTokenizer(java.lang.String, char)", "public org.bouncycastle.asn1.x509.X509NameTokenizer(java.lang.String, char)"], ["boolean", "org.bouncycastle.asn1.x509.X509NameTokenizer.hasMoreTokens()", "public boolean hasMoreTokens()"], ["java.lang.String", "org.bouncycastle.asn1.x509.X509NameTokenizer.nextToken()", "public java.lang.String nextToken()"], ["org.bouncycastle.asn1.x509.qualified.BiometricData", "org.bouncycastle.asn1.x509.qualified.BiometricData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.BiometricData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.BiometricData", "org.bouncycastle.asn1.x509.qualified.BiometricData(org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.DERIA5String)", "public org.bouncycastle.asn1.x509.qualified.BiometricData(org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.DERIA5String)"], ["org.bouncycastle.asn1.x509.qualified.BiometricData", "org.bouncycastle.asn1.x509.qualified.BiometricData(org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x509.qualified.BiometricData(org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData", "org.bouncycastle.asn1.x509.qualified.BiometricData.getTypeOfBiometricData()", "public org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData getTypeOfBiometricData()"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.asn1.x509.qualified.BiometricData.getHashAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x509.qualified.BiometricData.getBiometricDataHash()", "public org.bouncycastle.asn1.ASN1OctetString getBiometricDataHash()"], ["org.bouncycastle.asn1.DERIA5String", "org.bouncycastle.asn1.x509.qualified.BiometricData.getSourceDataUri()", "public org.bouncycastle.asn1.DERIA5String getSourceDataUri()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.BiometricData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode(int)", "public org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode(int)"], ["org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode(java.lang.String)", "public org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode(java.lang.String)"], ["boolean", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode.isAlphabetic()", "public boolean isAlphabetic()"], ["java.lang.String", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode.getAlphabetic()", "public java.lang.String getAlphabetic()"], ["int", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode.getNumeric()", "public int getNumeric()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.qualified.MonetaryValue", "org.bouncycastle.asn1.x509.qualified.MonetaryValue.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.MonetaryValue getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.MonetaryValue", "org.bouncycastle.asn1.x509.qualified.MonetaryValue(org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode, int, int)", "public org.bouncycastle.asn1.x509.qualified.MonetaryValue(org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode, int, int)"], ["org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode", "org.bouncycastle.asn1.x509.qualified.MonetaryValue.getCurrency()", "public org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode getCurrency()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.qualified.MonetaryValue.getAmount()", "public java.math.BigInteger getAmount()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.qualified.MonetaryValue.getExponent()", "public java.math.BigInteger getExponent()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.MonetaryValue.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.qualified.QCStatement", "org.bouncycastle.asn1.x509.qualified.QCStatement.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.QCStatement getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.QCStatement", "org.bouncycastle.asn1.x509.qualified.QCStatement(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.qualified.QCStatement(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x509.qualified.QCStatement", "org.bouncycastle.asn1.x509.qualified.QCStatement(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.asn1.x509.qualified.QCStatement(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.qualified.QCStatement.getStatementId()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getStatementId()"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.asn1.x509.qualified.QCStatement.getStatementInfo()", "public org.bouncycastle.asn1.ASN1Encodable getStatementInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.QCStatement.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.qualified.SemanticsInformation", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.SemanticsInformation getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.SemanticsInformation", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName[])", "public org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.GeneralName[])"], ["org.bouncycastle.asn1.x509.qualified.SemanticsInformation", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x509.qualified.SemanticsInformation", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.x509.GeneralName[])", "public org.bouncycastle.asn1.x509.qualified.SemanticsInformation(org.bouncycastle.asn1.x509.GeneralName[])"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation.getSemanticsIdentifier()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getSemanticsIdentifier()"], ["org.bouncycastle.asn1.x509.GeneralName[]", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation.getNameRegistrationAuthorities()", "public org.bouncycastle.asn1.x509.GeneralName[] getNameRegistrationAuthorities()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.SemanticsInformation.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData(int)", "public org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData(int)"], ["org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["boolean", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.isPredefined()", "public boolean isPredefined()"], ["int", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.getPredefinedBiometricType()", "public int getPredefinedBiometricType()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.getBiometricDataOid()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getBiometricDataOid()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.sigi.NameOrPseudonym", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.sigi.NameOrPseudonym getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.sigi.NameOrPseudonym", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(org.bouncycastle.asn1.x500.DirectoryString)", "public org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(org.bouncycastle.asn1.x500.DirectoryString)"], ["org.bouncycastle.asn1.x509.sigi.NameOrPseudonym", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(java.lang.String)", "public org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(java.lang.String)"], ["org.bouncycastle.asn1.x509.sigi.NameOrPseudonym", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x509.sigi.NameOrPseudonym(org.bouncycastle.asn1.x500.DirectoryString, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym.getPseudonym()", "public org.bouncycastle.asn1.x500.DirectoryString getPseudonym()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym.getSurname()", "public org.bouncycastle.asn1.x500.DirectoryString getSurname()"], ["org.bouncycastle.asn1.x500.DirectoryString[]", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym.getGivenName()", "public org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x509.sigi.PersonalData", "org.bouncycastle.asn1.x509.sigi.PersonalData.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x509.sigi.PersonalData getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x509.sigi.PersonalData", "org.bouncycastle.asn1.x509.sigi.PersonalData(org.bouncycastle.asn1.x509.sigi.NameOrPseudonym, java.math.BigInteger, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x500.DirectoryString, java.lang.String, org.bouncycastle.asn1.x500.DirectoryString)", "public org.bouncycastle.asn1.x509.sigi.PersonalData(org.bouncycastle.asn1.x509.sigi.NameOrPseudonym, java.math.BigInteger, org.bouncycastle.asn1.ASN1GeneralizedTime, org.bouncycastle.asn1.x500.DirectoryString, java.lang.String, org.bouncycastle.asn1.x500.DirectoryString)"], ["org.bouncycastle.asn1.x509.sigi.NameOrPseudonym", "org.bouncycastle.asn1.x509.sigi.PersonalData.getNameOrPseudonym()", "public org.bouncycastle.asn1.x509.sigi.NameOrPseudonym getNameOrPseudonym()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x509.sigi.PersonalData.getNameDistinguisher()", "public java.math.BigInteger getNameDistinguisher()"], ["org.bouncycastle.asn1.ASN1GeneralizedTime", "org.bouncycastle.asn1.x509.sigi.PersonalData.getDateOfBirth()", "public org.bouncycastle.asn1.ASN1GeneralizedTime getDateOfBirth()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x509.sigi.PersonalData.getPlaceOfBirth()", "public org.bouncycastle.asn1.x500.DirectoryString getPlaceOfBirth()"], ["java.lang.String", "org.bouncycastle.asn1.x509.sigi.PersonalData.getGender()", "public java.lang.String getGender()"], ["org.bouncycastle.asn1.x500.DirectoryString", "org.bouncycastle.asn1.x509.sigi.PersonalData.getPostalAddress()", "public org.bouncycastle.asn1.x500.DirectoryString getPostalAddress()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x509.sigi.PersonalData.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.DHDomainParameters", "org.bouncycastle.asn1.x9.DHDomainParameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x9.DHDomainParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x9.DHDomainParameters", "org.bouncycastle.asn1.x9.DHDomainParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.DHDomainParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x9.DHDomainParameters", "org.bouncycastle.asn1.x9.DHDomainParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.asn1.x9.DHValidationParms)", "public org.bouncycastle.asn1.x9.DHDomainParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.asn1.x9.DHValidationParms)"], ["org.bouncycastle.asn1.x9.DHDomainParameters", "org.bouncycastle.asn1.x9.DHDomainParameters(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x9.DHValidationParms)", "public org.bouncycastle.asn1.x9.DHDomainParameters(org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.ASN1Integer, org.bouncycastle.asn1.x9.DHValidationParms)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHDomainParameters.getP()", "public org.bouncycastle.asn1.ASN1Integer getP()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHDomainParameters.getG()", "public org.bouncycastle.asn1.ASN1Integer getG()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHDomainParameters.getQ()", "public org.bouncycastle.asn1.ASN1Integer getQ()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHDomainParameters.getJ()", "public org.bouncycastle.asn1.ASN1Integer getJ()"], ["org.bouncycastle.asn1.x9.DHValidationParms", "org.bouncycastle.asn1.x9.DHDomainParameters.getValidationParms()", "public org.bouncycastle.asn1.x9.DHValidationParms getValidationParms()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.DHDomainParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.DHPublicKey", "org.bouncycastle.asn1.x9.DHPublicKey.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x9.DHPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x9.DHPublicKey", "org.bouncycastle.asn1.x9.DHPublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.DHPublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x9.DHPublicKey", "org.bouncycastle.asn1.x9.DHPublicKey(org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.x9.DHPublicKey(org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHPublicKey.getY()", "public org.bouncycastle.asn1.ASN1Integer getY()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.DHPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.DHValidationParms", "org.bouncycastle.asn1.x9.DHValidationParms.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x9.DHValidationParms getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x9.DHValidationParms", "org.bouncycastle.asn1.x9.DHValidationParms.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.DHValidationParms getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x9.DHValidationParms", "org.bouncycastle.asn1.x9.DHValidationParms(org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Integer)", "public org.bouncycastle.asn1.x9.DHValidationParms(org.bouncycastle.asn1.DERBitString, org.bouncycastle.asn1.ASN1Integer)"], ["org.bouncycastle.asn1.DERBitString", "org.bouncycastle.asn1.x9.DHValidationParms.getSeed()", "public org.bouncycastle.asn1.DERBitString getSeed()"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.asn1.x9.DHValidationParms.getPgenCounter()", "public org.bouncycastle.asn1.ASN1Integer getPgenCounter()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.DHValidationParms.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.ECNamedCurveTable", "org.bouncycastle.asn1.x9.ECNamedCurveTable()", "public org.bouncycastle.asn1.x9.ECNamedCurveTable()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.ECNamedCurveTable.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x9.ECNamedCurveTable.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.ECNamedCurveTable.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.x9.ECNamedCurveTable.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.x9.KeySpecificInfo", "org.bouncycastle.asn1.x9.KeySpecificInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x9.KeySpecificInfo(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x9.KeySpecificInfo", "org.bouncycastle.asn1.x9.KeySpecificInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x9.KeySpecificInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x9.KeySpecificInfo.getAlgorithm()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x9.KeySpecificInfo.getCounter()", "public org.bouncycastle.asn1.ASN1OctetString getCounter()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.KeySpecificInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.OtherInfo", "org.bouncycastle.asn1.x9.OtherInfo(org.bouncycastle.asn1.x9.KeySpecificInfo, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x9.OtherInfo(org.bouncycastle.asn1.x9.KeySpecificInfo, org.bouncycastle.asn1.ASN1OctetString, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x9.OtherInfo", "org.bouncycastle.asn1.x9.OtherInfo(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x9.OtherInfo(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.asn1.x9.KeySpecificInfo", "org.bouncycastle.asn1.x9.OtherInfo.getKeyInfo()", "public org.bouncycastle.asn1.x9.KeySpecificInfo getKeyInfo()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x9.OtherInfo.getPartyAInfo()", "public org.bouncycastle.asn1.ASN1OctetString getPartyAInfo()"], ["org.bouncycastle.asn1.ASN1OctetString", "org.bouncycastle.asn1.x9.OtherInfo.getSuppPubInfo()", "public org.bouncycastle.asn1.ASN1OctetString getSuppPubInfo()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.OtherInfo.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X962NamedCurves", "org.bouncycastle.asn1.x9.X962NamedCurves()", "public org.bouncycastle.asn1.x9.X962NamedCurves()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X962NamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X962NamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x9.X962NamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["java.lang.String", "org.bouncycastle.asn1.x9.X962NamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.asn1.x9.X962NamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.asn1.x9.X962Parameters", "org.bouncycastle.asn1.x9.X962Parameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.X962Parameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x9.X962Parameters", "org.bouncycastle.asn1.x9.X962Parameters.getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)", "public static org.bouncycastle.asn1.x9.X962Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)"], ["org.bouncycastle.asn1.x9.X962Parameters", "org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.x9.X9ECParameters)", "public org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.x9.X9ECParameters)"], ["org.bouncycastle.asn1.x9.X962Parameters", "org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.x9.X962Parameters", "org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.ASN1Primitive)", "public org.bouncycastle.asn1.x9.X962Parameters(org.bouncycastle.asn1.ASN1Primitive)"], ["boolean", "org.bouncycastle.asn1.x9.X962Parameters.isNamedCurve()", "public boolean isNamedCurve()"], ["boolean", "org.bouncycastle.asn1.x9.X962Parameters.isImplicitlyCA()", "public boolean isImplicitlyCA()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X962Parameters.getParameters()", "public org.bouncycastle.asn1.ASN1Primitive getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X962Parameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9Curve", "org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.math.ec.ECCurve)", "public org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.math.ec.ECCurve)"], ["org.bouncycastle.asn1.x9.X9Curve", "org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.math.ec.ECCurve, byte[])", "public org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.math.ec.ECCurve, byte[])"], ["org.bouncycastle.asn1.x9.X9Curve", "org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.asn1.x9.X9FieldID, org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.asn1.x9.X9Curve(org.bouncycastle.asn1.x9.X9FieldID, org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.asn1.x9.X9Curve.getCurve()", "public org.bouncycastle.math.ec.ECCurve getCurve()"], ["byte[]", "org.bouncycastle.asn1.x9.X9Curve.getSeed()", "public byte[] getSeed()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9Curve.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X9ECParameters.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.asn1.x9.X9ECParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.asn1.x9.X9ECParameters.getCurve()", "public org.bouncycastle.math.ec.ECCurve getCurve()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.asn1.x9.X9ECParameters.getG()", "public org.bouncycastle.math.ec.ECPoint getG()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x9.X9ECParameters.getN()", "public java.math.BigInteger getN()"], ["java.math.BigInteger", "org.bouncycastle.asn1.x9.X9ECParameters.getH()", "public java.math.BigInteger getH()"], ["byte[]", "org.bouncycastle.asn1.x9.X9ECParameters.getSeed()", "public byte[] getSeed()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9ECParameters.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9ECParametersHolder", "org.bouncycastle.asn1.x9.X9ECParametersHolder()", "public org.bouncycastle.asn1.x9.X9ECParametersHolder()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.asn1.x9.X9ECParametersHolder.getParameters()", "public org.bouncycastle.asn1.x9.X9ECParameters getParameters()"], ["org.bouncycastle.asn1.x9.X9ECPoint", "org.bouncycastle.asn1.x9.X9ECPoint(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.asn1.x9.X9ECPoint(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.asn1.x9.X9ECPoint", "org.bouncycastle.asn1.x9.X9ECPoint(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x9.X9ECPoint(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.asn1.x9.X9ECPoint.getPoint()", "public org.bouncycastle.math.ec.ECPoint getPoint()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9ECPoint.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9FieldElement", "org.bouncycastle.asn1.x9.X9FieldElement(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.asn1.x9.X9FieldElement(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.asn1.x9.X9FieldElement", "org.bouncycastle.asn1.x9.X9FieldElement(java.math.BigInteger, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x9.X9FieldElement(java.math.BigInteger, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.asn1.x9.X9FieldElement", "org.bouncycastle.asn1.x9.X9FieldElement(int, int, int, int, org.bouncycastle.asn1.ASN1OctetString)", "public org.bouncycastle.asn1.x9.X9FieldElement(int, int, int, int, org.bouncycastle.asn1.ASN1OctetString)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.asn1.x9.X9FieldElement.getValue()", "public org.bouncycastle.math.ec.ECFieldElement getValue()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9FieldElement.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9FieldID", "org.bouncycastle.asn1.x9.X9FieldID(java.math.BigInteger)", "public org.bouncycastle.asn1.x9.X9FieldID(java.math.BigInteger)"], ["org.bouncycastle.asn1.x9.X9FieldID", "org.bouncycastle.asn1.x9.X9FieldID(int, int)", "public org.bouncycastle.asn1.x9.X9FieldID(int, int)"], ["org.bouncycastle.asn1.x9.X9FieldID", "org.bouncycastle.asn1.x9.X9FieldID(int, int, int, int)", "public org.bouncycastle.asn1.x9.X9FieldID(int, int, int, int)"], ["org.bouncycastle.asn1.x9.X9FieldID", "org.bouncycastle.asn1.x9.X9FieldID.getInstance(java.lang.Object)", "public static org.bouncycastle.asn1.x9.X9FieldID getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.asn1.x9.X9FieldID.getIdentifier()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getIdentifier()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9FieldID.getParameters()", "public org.bouncycastle.asn1.ASN1Primitive getParameters()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.asn1.x9.X9FieldID.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.asn1.x9.X9IntegerConverter", "org.bouncycastle.asn1.x9.X9IntegerConverter()", "public org.bouncycastle.asn1.x9.X9IntegerConverter()"], ["int", "org.bouncycastle.asn1.x9.X9IntegerConverter.getByteLength(org.bouncycastle.math.ec.ECCurve)", "public int getByteLength(org.bouncycastle.math.ec.ECCurve)"], ["int", "org.bouncycastle.asn1.x9.X9IntegerConverter.getByteLength(org.bouncycastle.math.ec.ECFieldElement)", "public int getByteLength(org.bouncycastle.math.ec.ECFieldElement)"], ["byte[]", "org.bouncycastle.asn1.x9.X9IntegerConverter.integerToBytes(java.math.BigInteger, int)", "public byte[] integerToBytes(java.math.BigInteger, int)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.AsymmetricCipherKeyPair(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.AsymmetricCipherKeyPair(org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters)", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair(org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.AsymmetricCipherKeyPair.getPublic()", "public org.bouncycastle.crypto.params.AsymmetricKeyParameter getPublic()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.AsymmetricCipherKeyPair.getPrivate()", "public org.bouncycastle.crypto.params.AsymmetricKeyParameter getPrivate()"], ["org.bouncycastle.crypto.BufferedAsymmetricBlockCipher", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.crypto.BufferedAsymmetricBlockCipher(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.crypto.AsymmetricBlockCipher", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()"], ["int", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.getBufferPosition()", "public int getBufferPosition()"], ["void", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.getOutputBlockSize()", "public int getOutputBlockSize()"], ["void", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.processByte(byte)", "public void processByte(byte)"], ["void", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.processBytes(byte[], int, int)", "public void processBytes(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.doFinal()", "public byte[] doFinal() throws org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.BufferedBlockCipher", "org.bouncycastle.crypto.BufferedBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.BufferedBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.BufferedBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.BufferedBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.BufferedBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.BufferedBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.CipherKeyGenerator", "org.bouncycastle.crypto.CipherKeyGenerator()", "public org.bouncycastle.crypto.CipherKeyGenerator()"], ["void", "org.bouncycastle.crypto.CipherKeyGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["byte[]", "org.bouncycastle.crypto.CipherKeyGenerator.generateKey()", "public byte[] generateKey()"], ["org.bouncycastle.crypto.Commitment", "org.bouncycastle.crypto.Commitment(byte[], byte[])", "public org.bouncycastle.crypto.Commitment(byte[], byte[])"], ["byte[]", "org.bouncycastle.crypto.Commitment.getSecret()", "public byte[] getSecret()"], ["byte[]", "org.bouncycastle.crypto.Commitment.getCommitment()", "public byte[] getCommitment()"], ["org.bouncycastle.crypto.CryptoException", "org.bouncycastle.crypto.CryptoException()", "public org.bouncycastle.crypto.CryptoException()"], ["org.bouncycastle.crypto.CryptoException", "org.bouncycastle.crypto.CryptoException(java.lang.String)", "public org.bouncycastle.crypto.CryptoException(java.lang.String)"], ["org.bouncycastle.crypto.CryptoException", "org.bouncycastle.crypto.CryptoException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.crypto.CryptoException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.crypto.CryptoException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.crypto.DataLengthException", "org.bouncycastle.crypto.DataLengthException()", "public org.bouncycastle.crypto.DataLengthException()"], ["org.bouncycastle.crypto.DataLengthException", "org.bouncycastle.crypto.DataLengthException(java.lang.String)", "public org.bouncycastle.crypto.DataLengthException(java.lang.String)"], ["org.bouncycastle.crypto.EphemeralKeyPair", "org.bouncycastle.crypto.EphemeralKeyPair(org.bouncycastle.crypto.AsymmetricCipherKeyPair, org.bouncycastle.crypto.KeyEncoder)", "public org.bouncycastle.crypto.EphemeralKeyPair(org.bouncycastle.crypto.AsymmetricCipherKeyPair, org.bouncycastle.crypto.KeyEncoder)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.EphemeralKeyPair.getKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair getKeyPair()"], ["byte[]", "org.bouncycastle.crypto.EphemeralKeyPair.getEncodedPublicKey()", "public byte[] getEncodedPublicKey()"], ["org.bouncycastle.crypto.InvalidCipherTextException", "org.bouncycastle.crypto.InvalidCipherTextException()", "public org.bouncycastle.crypto.InvalidCipherTextException()"], ["org.bouncycastle.crypto.InvalidCipherTextException", "org.bouncycastle.crypto.InvalidCipherTextException(java.lang.String)", "public org.bouncycastle.crypto.InvalidCipherTextException(java.lang.String)"], ["org.bouncycastle.crypto.InvalidCipherTextException", "org.bouncycastle.crypto.InvalidCipherTextException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.crypto.InvalidCipherTextException(java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.crypto.KeyGenerationParameters", "org.bouncycastle.crypto.KeyGenerationParameters(java.security.SecureRandom, int)", "public org.bouncycastle.crypto.KeyGenerationParameters(java.security.SecureRandom, int)"], ["java.security.SecureRandom", "org.bouncycastle.crypto.KeyGenerationParameters.getRandom()", "public java.security.SecureRandom getRandom()"], ["int", "org.bouncycastle.crypto.KeyGenerationParameters.getStrength()", "public int getStrength()"], ["org.bouncycastle.crypto.MaxBytesExceededException", "org.bouncycastle.crypto.MaxBytesExceededException()", "public org.bouncycastle.crypto.MaxBytesExceededException()"], ["org.bouncycastle.crypto.MaxBytesExceededException", "org.bouncycastle.crypto.MaxBytesExceededException(java.lang.String)", "public org.bouncycastle.crypto.MaxBytesExceededException(java.lang.String)"], ["org.bouncycastle.crypto.OutputLengthException", "org.bouncycastle.crypto.OutputLengthException(java.lang.String)", "public org.bouncycastle.crypto.OutputLengthException(java.lang.String)"], ["void", "org.bouncycastle.crypto.PBEParametersGenerator.init(byte[], byte[], int)", "public void init(byte[], byte[], int)"], ["byte[]", "org.bouncycastle.crypto.PBEParametersGenerator.getPassword()", "public byte[] getPassword()"], ["byte[]", "org.bouncycastle.crypto.PBEParametersGenerator.getSalt()", "public byte[] getSalt()"], ["int", "org.bouncycastle.crypto.PBEParametersGenerator.getIterationCount()", "public int getIterationCount()"], ["byte[]", "org.bouncycastle.crypto.PBEParametersGenerator.PKCS5PasswordToBytes(char[])", "public static byte[] PKCS5PasswordToBytes(char[])"], ["byte[]", "org.bouncycastle.crypto.PBEParametersGenerator.PKCS5PasswordToUTF8Bytes(char[])", "public static byte[] PKCS5PasswordToUTF8Bytes(char[])"], ["byte[]", "org.bouncycastle.crypto.PBEParametersGenerator.PKCS12PasswordToBytes(char[])", "public static byte[] PKCS12PasswordToBytes(char[])"], ["org.bouncycastle.crypto.RuntimeCryptoException", "org.bouncycastle.crypto.RuntimeCryptoException()", "public org.bouncycastle.crypto.RuntimeCryptoException()"], ["org.bouncycastle.crypto.RuntimeCryptoException", "org.bouncycastle.crypto.RuntimeCryptoException(java.lang.String)", "public org.bouncycastle.crypto.RuntimeCryptoException(java.lang.String)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.StreamBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["byte", "org.bouncycastle.crypto.StreamBlockCipher.returnByte(byte)", "public final byte returnByte(byte)"], ["int", "org.bouncycastle.crypto.StreamBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["org.bouncycastle.crypto.agreement.DHAgreement", "org.bouncycastle.crypto.agreement.DHAgreement()", "public org.bouncycastle.crypto.agreement.DHAgreement()"], ["void", "org.bouncycastle.crypto.agreement.DHAgreement.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.DHAgreement.calculateMessage()", "public java.math.BigInteger calculateMessage()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.DHAgreement.calculateAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, java.math.BigInteger)", "public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, java.math.BigInteger)"], ["org.bouncycastle.crypto.agreement.DHBasicAgreement", "org.bouncycastle.crypto.agreement.DHBasicAgreement()", "public org.bouncycastle.crypto.agreement.DHBasicAgreement()"], ["void", "org.bouncycastle.crypto.agreement.DHBasicAgreement.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.agreement.DHBasicAgreement.getFieldSize()", "public int getFieldSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.DHBasicAgreement.calculateAgreement(org.bouncycastle.crypto.CipherParameters)", "public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.agreement.DHStandardGroups", "org.bouncycastle.crypto.agreement.DHStandardGroups()", "public org.bouncycastle.crypto.agreement.DHStandardGroups()"], ["org.bouncycastle.crypto.agreement.ECDHBasicAgreement", "org.bouncycastle.crypto.agreement.ECDHBasicAgreement()", "public org.bouncycastle.crypto.agreement.ECDHBasicAgreement()"], ["void", "org.bouncycastle.crypto.agreement.ECDHBasicAgreement.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.agreement.ECDHBasicAgreement.getFieldSize()", "public int getFieldSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.ECDHBasicAgreement.calculateAgreement(org.bouncycastle.crypto.CipherParameters)", "public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.agreement.ECDHCBasicAgreement", "org.bouncycastle.crypto.agreement.ECDHCBasicAgreement()", "public org.bouncycastle.crypto.agreement.ECDHCBasicAgreement()"], ["void", "org.bouncycastle.crypto.agreement.ECDHCBasicAgreement.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.agreement.ECDHCBasicAgreement.getFieldSize()", "public int getFieldSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.ECDHCBasicAgreement.calculateAgreement(org.bouncycastle.crypto.CipherParameters)", "public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.agreement.ECMQVBasicAgreement", "org.bouncycastle.crypto.agreement.ECMQVBasicAgreement()", "public org.bouncycastle.crypto.agreement.ECMQVBasicAgreement()"], ["void", "org.bouncycastle.crypto.agreement.ECMQVBasicAgreement.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.agreement.ECMQVBasicAgreement.getFieldSize()", "public int getFieldSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.ECMQVBasicAgreement.calculateAgreement(org.bouncycastle.crypto.CipherParameters)", "public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[])", "public org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[])"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[], org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup)", "public org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[], org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup)"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[], org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup, org.bouncycastle.crypto.Digest, java.security.SecureRandom)", "public org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant(java.lang.String, char[], org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup, org.bouncycastle.crypto.Digest, java.security.SecureRandom)"], ["int", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.getState()", "public int getState()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.createRound1PayloadToSend()", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload createRound1PayloadToSend()"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.validateRound1PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload)", "public void validateRound1PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.createRound2PayloadToSend()", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload createRound2PayloadToSend()"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.validateRound2PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload)", "public void validateRound2PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.calculateKeyingMaterial()", "public java.math.BigInteger calculateKeyingMaterial()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.createRound3PayloadToSend(java.math.BigInteger)", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload createRound3PayloadToSend(java.math.BigInteger)"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant.validateRound3PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload, java.math.BigInteger)", "public void validateRound3PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload, java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup", "org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup.getG()", "public java.math.BigInteger getG()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroups", "org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroups()", "public org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroups()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload(java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.math.BigInteger[])", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload(java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.math.BigInteger[])"], ["java.lang.String", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload.getParticipantId()", "public java.lang.String getParticipantId()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload.getGx1()", "public java.math.BigInteger getGx1()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload.getGx2()", "public java.math.BigInteger getGx2()"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload.getKnowledgeProofForX1()", "public java.math.BigInteger[] getKnowledgeProofForX1()"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload.getKnowledgeProofForX2()", "public java.math.BigInteger[] getKnowledgeProofForX2()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload(java.lang.String, java.math.BigInteger, java.math.BigInteger[])", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload(java.lang.String, java.math.BigInteger, java.math.BigInteger[])"], ["java.lang.String", "org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload.getParticipantId()", "public java.lang.String getParticipantId()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload.getA()", "public java.math.BigInteger getA()"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload.getKnowledgeProofForX2s()", "public java.math.BigInteger[] getKnowledgeProofForX2s()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload", "org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload(java.lang.String, java.math.BigInteger)", "public org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload(java.lang.String, java.math.BigInteger)"], ["java.lang.String", "org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload.getParticipantId()", "public java.lang.String getParticipantId()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload.getMacTag()", "public java.math.BigInteger getMacTag()"], ["org.bouncycastle.crypto.agreement.jpake.JPAKEUtil", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil()", "public org.bouncycastle.crypto.agreement.jpake.JPAKEUtil()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.generateX1(java.math.BigInteger, java.security.SecureRandom)", "public static java.math.BigInteger generateX1(java.math.BigInteger, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.generateX2(java.math.BigInteger, java.security.SecureRandom)", "public static java.math.BigInteger generateX2(java.math.BigInteger, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateS(char[])", "public static java.math.BigInteger calculateS(char[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateGx(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateGx(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateGA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateGA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateX2s(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateX2s(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.lang.String, org.bouncycastle.crypto.Digest, java.security.SecureRandom)", "public static java.math.BigInteger[] calculateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.lang.String, org.bouncycastle.crypto.Digest, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateGx4(java.math.BigInteger)", "public static void validateGx4(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateGa(java.math.BigInteger)", "public static void validateGa(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.lang.String, org.bouncycastle.crypto.Digest)", "public static void validateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.lang.String, org.bouncycastle.crypto.Digest) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateKeyingMaterial(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateKeyingMaterial(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateParticipantIdsDiffer(java.lang.String, java.lang.String)", "public static void validateParticipantIdsDiffer(java.lang.String, java.lang.String) throws org.bouncycastle.crypto.CryptoException"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateParticipantIdsEqual(java.lang.String, java.lang.String)", "public static void validateParticipantIdsEqual(java.lang.String, java.lang.String) throws org.bouncycastle.crypto.CryptoException"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateNotNull(java.lang.Object, java.lang.String)", "public static void validateNotNull(java.lang.Object, java.lang.String)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.calculateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)", "public static java.math.BigInteger calculateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil.validateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.math.BigInteger)", "public static void validateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.agreement.kdf.DHKDFParameters", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[])", "public org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[])"], ["org.bouncycastle.crypto.agreement.kdf.DHKDFParameters", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[], byte[])", "public org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[], byte[])"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters.getAlgorithm()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()"], ["int", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters.getKeySize()", "public int getKeySize()"], ["byte[]", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters.getZ()", "public byte[] getZ()"], ["byte[]", "org.bouncycastle.crypto.agreement.kdf.DHKDFParameters.getExtraInfo()", "public byte[] getExtraInfo()"], ["org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator", "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator", "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.agreement.srp.SRP6Client", "org.bouncycastle.crypto.agreement.srp.SRP6Client()", "public org.bouncycastle.crypto.agreement.srp.SRP6Client()"], ["void", "org.bouncycastle.crypto.agreement.srp.SRP6Client.init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom)", "public void init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Client.generateClientCredentials(byte[], byte[], byte[])", "public java.math.BigInteger generateClientCredentials(byte[], byte[], byte[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Client.calculateSecret(java.math.BigInteger)", "public java.math.BigInteger calculateSecret(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Client.calculateClientEvidenceMessage()", "public java.math.BigInteger calculateClientEvidenceMessage() throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.agreement.srp.SRP6Client.verifyServerEvidenceMessage(java.math.BigInteger)", "public boolean verifyServerEvidenceMessage(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Client.calculateSessionKey()", "public java.math.BigInteger calculateSessionKey() throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.agreement.srp.SRP6Server", "org.bouncycastle.crypto.agreement.srp.SRP6Server()", "public org.bouncycastle.crypto.agreement.srp.SRP6Server()"], ["void", "org.bouncycastle.crypto.agreement.srp.SRP6Server.init(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom)", "public void init(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Server.generateServerCredentials()", "public java.math.BigInteger generateServerCredentials()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Server.calculateSecret(java.math.BigInteger)", "public java.math.BigInteger calculateSecret(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.agreement.srp.SRP6Server.verifyClientEvidenceMessage(java.math.BigInteger)", "public boolean verifyClientEvidenceMessage(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Server.calculateServerEvidenceMessage()", "public java.math.BigInteger calculateServerEvidenceMessage() throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Server.calculateSessionKey()", "public java.math.BigInteger calculateSessionKey() throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.agreement.srp.SRP6Util", "org.bouncycastle.crypto.agreement.srp.SRP6Util()", "public org.bouncycastle.crypto.agreement.srp.SRP6Util()"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateK(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateK(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateU(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateU(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateX(org.bouncycastle.crypto.Digest, java.math.BigInteger, byte[], byte[], byte[])", "public static java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest, java.math.BigInteger, byte[], byte[], byte[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.generatePrivateValue(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)", "public static java.math.BigInteger generatePrivateValue(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.validatePublicValue(java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger validatePublicValue(java.math.BigInteger, java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateM1(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateM1(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateM2(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateM2(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6Util.calculateKey(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger calculateKey(org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator", "org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator()", "public org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator()"], ["void", "org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator.init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)", "public void init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)"], ["java.math.BigInteger", "org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator.generateVerifier(byte[], byte[], byte[])", "public java.math.BigInteger generateVerifier(byte[], byte[], byte[])"], ["org.bouncycastle.crypto.commitments.GeneralHashCommitter", "org.bouncycastle.crypto.commitments.GeneralHashCommitter(org.bouncycastle.crypto.ExtendedDigest, java.security.SecureRandom)", "public org.bouncycastle.crypto.commitments.GeneralHashCommitter(org.bouncycastle.crypto.ExtendedDigest, java.security.SecureRandom)"], ["org.bouncycastle.crypto.Commitment", "org.bouncycastle.crypto.commitments.GeneralHashCommitter.commit(byte[])", "public org.bouncycastle.crypto.Commitment commit(byte[])"], ["boolean", "org.bouncycastle.crypto.commitments.GeneralHashCommitter.isRevealed(org.bouncycastle.crypto.Commitment, byte[])", "public boolean isRevealed(org.bouncycastle.crypto.Commitment, byte[])"], ["org.bouncycastle.crypto.commitments.HashCommitter", "org.bouncycastle.crypto.commitments.HashCommitter(org.bouncycastle.crypto.ExtendedDigest, java.security.SecureRandom)", "public org.bouncycastle.crypto.commitments.HashCommitter(org.bouncycastle.crypto.ExtendedDigest, java.security.SecureRandom)"], ["org.bouncycastle.crypto.Commitment", "org.bouncycastle.crypto.commitments.HashCommitter.commit(byte[])", "public org.bouncycastle.crypto.Commitment commit(byte[])"], ["boolean", "org.bouncycastle.crypto.commitments.HashCommitter.isRevealed(org.bouncycastle.crypto.Commitment, byte[])", "public boolean isRevealed(org.bouncycastle.crypto.Commitment, byte[])"], ["org.bouncycastle.crypto.digests.GOST3411Digest", "org.bouncycastle.crypto.digests.GOST3411Digest()", "public org.bouncycastle.crypto.digests.GOST3411Digest()"], ["org.bouncycastle.crypto.digests.GOST3411Digest", "org.bouncycastle.crypto.digests.GOST3411Digest(byte[])", "public org.bouncycastle.crypto.digests.GOST3411Digest(byte[])"], ["org.bouncycastle.crypto.digests.GOST3411Digest", "org.bouncycastle.crypto.digests.GOST3411Digest(org.bouncycastle.crypto.digests.GOST3411Digest)", "public org.bouncycastle.crypto.digests.GOST3411Digest(org.bouncycastle.crypto.digests.GOST3411Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.GOST3411Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.GOST3411Digest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.GOST3411Digest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.GOST3411Digest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.GOST3411Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.GOST3411Digest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.GOST3411Digest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.GOST3411Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.GOST3411Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["void", "org.bouncycastle.crypto.digests.GeneralDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.GeneralDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.digests.GeneralDigest.finish()", "public void finish()"], ["void", "org.bouncycastle.crypto.digests.GeneralDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.GeneralDigest.getByteLength()", "public int getByteLength()"], ["void", "org.bouncycastle.crypto.digests.LongDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.LongDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.digests.LongDigest.finish()", "public void finish()"], ["void", "org.bouncycastle.crypto.digests.LongDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.LongDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.crypto.digests.MD2Digest", "org.bouncycastle.crypto.digests.MD2Digest()", "public org.bouncycastle.crypto.digests.MD2Digest()"], ["org.bouncycastle.crypto.digests.MD2Digest", "org.bouncycastle.crypto.digests.MD2Digest(org.bouncycastle.crypto.digests.MD2Digest)", "public org.bouncycastle.crypto.digests.MD2Digest(org.bouncycastle.crypto.digests.MD2Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.MD2Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.MD2Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.MD2Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.MD2Digest.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.digests.MD2Digest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.MD2Digest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.MD2Digest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.MD2Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.MD2Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.MD4Digest", "org.bouncycastle.crypto.digests.MD4Digest()", "public org.bouncycastle.crypto.digests.MD4Digest()"], ["org.bouncycastle.crypto.digests.MD4Digest", "org.bouncycastle.crypto.digests.MD4Digest(org.bouncycastle.crypto.digests.MD4Digest)", "public org.bouncycastle.crypto.digests.MD4Digest(org.bouncycastle.crypto.digests.MD4Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.MD4Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.MD4Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.MD4Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.MD4Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.MD4Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.MD4Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.MD5Digest", "org.bouncycastle.crypto.digests.MD5Digest()", "public org.bouncycastle.crypto.digests.MD5Digest()"], ["org.bouncycastle.crypto.digests.MD5Digest", "org.bouncycastle.crypto.digests.MD5Digest(org.bouncycastle.crypto.digests.MD5Digest)", "public org.bouncycastle.crypto.digests.MD5Digest(org.bouncycastle.crypto.digests.MD5Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.MD5Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.MD5Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.MD5Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.MD5Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.MD5Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.MD5Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.NonMemoableDigest", "org.bouncycastle.crypto.digests.NonMemoableDigest(org.bouncycastle.crypto.ExtendedDigest)", "public org.bouncycastle.crypto.digests.NonMemoableDigest(org.bouncycastle.crypto.ExtendedDigest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.NonMemoableDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.NonMemoableDigest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.NonMemoableDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.NonMemoableDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.NonMemoableDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.NonMemoableDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.NonMemoableDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.crypto.digests.NullDigest", "org.bouncycastle.crypto.digests.NullDigest()", "public org.bouncycastle.crypto.digests.NullDigest()"], ["java.lang.String", "org.bouncycastle.crypto.digests.NullDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.NullDigest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.NullDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.NullDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.NullDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.NullDigest.reset()", "public void reset()"], ["org.bouncycastle.crypto.digests.RIPEMD128Digest", "org.bouncycastle.crypto.digests.RIPEMD128Digest()", "public org.bouncycastle.crypto.digests.RIPEMD128Digest()"], ["org.bouncycastle.crypto.digests.RIPEMD128Digest", "org.bouncycastle.crypto.digests.RIPEMD128Digest(org.bouncycastle.crypto.digests.RIPEMD128Digest)", "public org.bouncycastle.crypto.digests.RIPEMD128Digest(org.bouncycastle.crypto.digests.RIPEMD128Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.RIPEMD128Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD128Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD128Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.RIPEMD128Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.RIPEMD128Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.RIPEMD128Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.RIPEMD160Digest", "org.bouncycastle.crypto.digests.RIPEMD160Digest()", "public org.bouncycastle.crypto.digests.RIPEMD160Digest()"], ["org.bouncycastle.crypto.digests.RIPEMD160Digest", "org.bouncycastle.crypto.digests.RIPEMD160Digest(org.bouncycastle.crypto.digests.RIPEMD160Digest)", "public org.bouncycastle.crypto.digests.RIPEMD160Digest(org.bouncycastle.crypto.digests.RIPEMD160Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.RIPEMD160Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD160Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD160Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.RIPEMD160Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.RIPEMD160Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.RIPEMD160Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.RIPEMD256Digest", "org.bouncycastle.crypto.digests.RIPEMD256Digest()", "public org.bouncycastle.crypto.digests.RIPEMD256Digest()"], ["org.bouncycastle.crypto.digests.RIPEMD256Digest", "org.bouncycastle.crypto.digests.RIPEMD256Digest(org.bouncycastle.crypto.digests.RIPEMD256Digest)", "public org.bouncycastle.crypto.digests.RIPEMD256Digest(org.bouncycastle.crypto.digests.RIPEMD256Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.RIPEMD256Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD256Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD256Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.RIPEMD256Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.RIPEMD256Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.RIPEMD256Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.RIPEMD320Digest", "org.bouncycastle.crypto.digests.RIPEMD320Digest()", "public org.bouncycastle.crypto.digests.RIPEMD320Digest()"], ["org.bouncycastle.crypto.digests.RIPEMD320Digest", "org.bouncycastle.crypto.digests.RIPEMD320Digest(org.bouncycastle.crypto.digests.RIPEMD320Digest)", "public org.bouncycastle.crypto.digests.RIPEMD320Digest(org.bouncycastle.crypto.digests.RIPEMD320Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.RIPEMD320Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD320Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.RIPEMD320Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.RIPEMD320Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.RIPEMD320Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.RIPEMD320Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.SHA1Digest", "org.bouncycastle.crypto.digests.SHA1Digest()", "public org.bouncycastle.crypto.digests.SHA1Digest()"], ["org.bouncycastle.crypto.digests.SHA1Digest", "org.bouncycastle.crypto.digests.SHA1Digest(org.bouncycastle.crypto.digests.SHA1Digest)", "public org.bouncycastle.crypto.digests.SHA1Digest(org.bouncycastle.crypto.digests.SHA1Digest)"], ["org.bouncycastle.crypto.digests.SHA1Digest", "org.bouncycastle.crypto.digests.SHA1Digest(byte[])", "public org.bouncycastle.crypto.digests.SHA1Digest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA1Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA1Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA1Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA1Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA1Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA1Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA1Digest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SHA224Digest", "org.bouncycastle.crypto.digests.SHA224Digest()", "public org.bouncycastle.crypto.digests.SHA224Digest()"], ["org.bouncycastle.crypto.digests.SHA224Digest", "org.bouncycastle.crypto.digests.SHA224Digest(org.bouncycastle.crypto.digests.SHA224Digest)", "public org.bouncycastle.crypto.digests.SHA224Digest(org.bouncycastle.crypto.digests.SHA224Digest)"], ["org.bouncycastle.crypto.digests.SHA224Digest", "org.bouncycastle.crypto.digests.SHA224Digest(byte[])", "public org.bouncycastle.crypto.digests.SHA224Digest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA224Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA224Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA224Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA224Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA224Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA224Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA224Digest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SHA256Digest", "org.bouncycastle.crypto.digests.SHA256Digest()", "public org.bouncycastle.crypto.digests.SHA256Digest()"], ["org.bouncycastle.crypto.digests.SHA256Digest", "org.bouncycastle.crypto.digests.SHA256Digest(org.bouncycastle.crypto.digests.SHA256Digest)", "public org.bouncycastle.crypto.digests.SHA256Digest(org.bouncycastle.crypto.digests.SHA256Digest)"], ["org.bouncycastle.crypto.digests.SHA256Digest", "org.bouncycastle.crypto.digests.SHA256Digest(byte[])", "public org.bouncycastle.crypto.digests.SHA256Digest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA256Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA256Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA256Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA256Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA256Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA256Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA256Digest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SHA384Digest", "org.bouncycastle.crypto.digests.SHA384Digest()", "public org.bouncycastle.crypto.digests.SHA384Digest()"], ["org.bouncycastle.crypto.digests.SHA384Digest", "org.bouncycastle.crypto.digests.SHA384Digest(org.bouncycastle.crypto.digests.SHA384Digest)", "public org.bouncycastle.crypto.digests.SHA384Digest(org.bouncycastle.crypto.digests.SHA384Digest)"], ["org.bouncycastle.crypto.digests.SHA384Digest", "org.bouncycastle.crypto.digests.SHA384Digest(byte[])", "public org.bouncycastle.crypto.digests.SHA384Digest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA384Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA384Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA384Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA384Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA384Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA384Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA384Digest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SHA3Digest", "org.bouncycastle.crypto.digests.SHA3Digest()", "public org.bouncycastle.crypto.digests.SHA3Digest()"], ["org.bouncycastle.crypto.digests.SHA3Digest", "org.bouncycastle.crypto.digests.SHA3Digest(int)", "public org.bouncycastle.crypto.digests.SHA3Digest(int)"], ["org.bouncycastle.crypto.digests.SHA3Digest", "org.bouncycastle.crypto.digests.SHA3Digest(org.bouncycastle.crypto.digests.SHA3Digest)", "public org.bouncycastle.crypto.digests.SHA3Digest(org.bouncycastle.crypto.digests.SHA3Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA3Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA3Digest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.SHA3Digest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.SHA3Digest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.SHA3Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA3Digest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.SHA3Digest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.crypto.digests.SHA512Digest", "org.bouncycastle.crypto.digests.SHA512Digest()", "public org.bouncycastle.crypto.digests.SHA512Digest()"], ["org.bouncycastle.crypto.digests.SHA512Digest", "org.bouncycastle.crypto.digests.SHA512Digest(org.bouncycastle.crypto.digests.SHA512Digest)", "public org.bouncycastle.crypto.digests.SHA512Digest(org.bouncycastle.crypto.digests.SHA512Digest)"], ["org.bouncycastle.crypto.digests.SHA512Digest", "org.bouncycastle.crypto.digests.SHA512Digest(byte[])", "public org.bouncycastle.crypto.digests.SHA512Digest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA512Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA512Digest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA512Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA512Digest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA512Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA512Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA512Digest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SHA512tDigest", "org.bouncycastle.crypto.digests.SHA512tDigest(int)", "public org.bouncycastle.crypto.digests.SHA512tDigest(int)"], ["org.bouncycastle.crypto.digests.SHA512tDigest", "org.bouncycastle.crypto.digests.SHA512tDigest(org.bouncycastle.crypto.digests.SHA512tDigest)", "public org.bouncycastle.crypto.digests.SHA512tDigest(org.bouncycastle.crypto.digests.SHA512tDigest)"], ["org.bouncycastle.crypto.digests.SHA512tDigest", "org.bouncycastle.crypto.digests.SHA512tDigest(byte[])", "public org.bouncycastle.crypto.digests.SHA512tDigest(byte[])"], ["java.lang.String", "org.bouncycastle.crypto.digests.SHA512tDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SHA512tDigest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SHA512tDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.SHA512tDigest.reset()", "public void reset()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SHA512tDigest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SHA512tDigest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["byte[]", "org.bouncycastle.crypto.digests.SHA512tDigest.getEncodedState()", "public byte[] getEncodedState()"], ["org.bouncycastle.crypto.digests.SM3Digest", "org.bouncycastle.crypto.digests.SM3Digest()", "public org.bouncycastle.crypto.digests.SM3Digest()"], ["org.bouncycastle.crypto.digests.SM3Digest", "org.bouncycastle.crypto.digests.SM3Digest(org.bouncycastle.crypto.digests.SM3Digest)", "public org.bouncycastle.crypto.digests.SM3Digest(org.bouncycastle.crypto.digests.SM3Digest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.SM3Digest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SM3Digest.getDigestSize()", "public int getDigestSize()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SM3Digest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SM3Digest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["void", "org.bouncycastle.crypto.digests.SM3Digest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.SM3Digest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["org.bouncycastle.crypto.digests.ShortenedDigest", "org.bouncycastle.crypto.digests.ShortenedDigest(org.bouncycastle.crypto.ExtendedDigest, int)", "public org.bouncycastle.crypto.digests.ShortenedDigest(org.bouncycastle.crypto.ExtendedDigest, int)"], ["java.lang.String", "org.bouncycastle.crypto.digests.ShortenedDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.ShortenedDigest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.ShortenedDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.ShortenedDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.ShortenedDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.ShortenedDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.ShortenedDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.crypto.digests.SkeinDigest", "org.bouncycastle.crypto.digests.SkeinDigest(int, int)", "public org.bouncycastle.crypto.digests.SkeinDigest(int, int)"], ["org.bouncycastle.crypto.digests.SkeinDigest", "org.bouncycastle.crypto.digests.SkeinDigest(org.bouncycastle.crypto.digests.SkeinDigest)", "public org.bouncycastle.crypto.digests.SkeinDigest(org.bouncycastle.crypto.digests.SkeinDigest)"], ["void", "org.bouncycastle.crypto.digests.SkeinDigest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SkeinDigest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["java.lang.String", "org.bouncycastle.crypto.digests.SkeinDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.SkeinDigest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.SkeinDigest.getByteLength()", "public int getByteLength()"], ["void", "org.bouncycastle.crypto.digests.SkeinDigest.init(org.bouncycastle.crypto.params.SkeinParameters)", "public void init(org.bouncycastle.crypto.params.SkeinParameters)"], ["void", "org.bouncycastle.crypto.digests.SkeinDigest.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.digests.SkeinDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.SkeinDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.SkeinDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["org.bouncycastle.crypto.digests.SkeinEngine$Configuration", "org.bouncycastle.crypto.digests.SkeinEngine$Configuration(long)", "public org.bouncycastle.crypto.digests.SkeinEngine$Configuration(long)"], ["byte[]", "org.bouncycastle.crypto.digests.SkeinEngine$Configuration.getBytes()", "public byte[] getBytes()"], ["org.bouncycastle.crypto.digests.SkeinEngine$Parameter", "org.bouncycastle.crypto.digests.SkeinEngine$Parameter(int, byte[])", "public org.bouncycastle.crypto.digests.SkeinEngine$Parameter(int, byte[])"], ["int", "org.bouncycastle.crypto.digests.SkeinEngine$Parameter.getType()", "public int getType()"], ["byte[]", "org.bouncycastle.crypto.digests.SkeinEngine$Parameter.getValue()", "public byte[] getValue()"], ["org.bouncycastle.crypto.digests.SkeinEngine$UBI", "org.bouncycastle.crypto.digests.SkeinEngine$UBI(org.bouncycastle.crypto.digests.SkeinEngine, int)", "public org.bouncycastle.crypto.digests.SkeinEngine$UBI(org.bouncycastle.crypto.digests.SkeinEngine, int)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UBI.reset(org.bouncycastle.crypto.digests.SkeinEngine$UBI)", "public void reset(org.bouncycastle.crypto.digests.SkeinEngine$UBI)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UBI.reset(int)", "public void reset(int)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UBI.update(byte[], int, int, long[])", "public void update(byte[], int, int, long[])"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UBI.doFinal(long[])", "public void doFinal(long[])"], ["org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak()", "public org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.reset(org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak)", "public void reset(org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.setType(int)", "public void setType(int)"], ["int", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.getType()", "public int getType()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.setFirst(boolean)", "public void setFirst(boolean)"], ["boolean", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.isFirst()", "public boolean isFirst()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.setFinal(boolean)", "public void setFinal(boolean)"], ["boolean", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.isFinal()", "public boolean isFinal()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.advancePosition(int)", "public void advancePosition(int)"], ["long[]", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.getWords()", "public long[] getWords()"], ["java.lang.String", "org.bouncycastle.crypto.digests.SkeinEngine$UbiTweak.toString()", "public java.lang.String toString()"], ["org.bouncycastle.crypto.digests.SkeinEngine", "org.bouncycastle.crypto.digests.SkeinEngine(int, int)", "public org.bouncycastle.crypto.digests.SkeinEngine(int, int)"], ["org.bouncycastle.crypto.digests.SkeinEngine", "org.bouncycastle.crypto.digests.SkeinEngine(org.bouncycastle.crypto.digests.SkeinEngine)", "public org.bouncycastle.crypto.digests.SkeinEngine(org.bouncycastle.crypto.digests.SkeinEngine)"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.SkeinEngine.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["int", "org.bouncycastle.crypto.digests.SkeinEngine.getOutputSize()", "public int getOutputSize()"], ["int", "org.bouncycastle.crypto.digests.SkeinEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine.init(org.bouncycastle.crypto.params.SkeinParameters)", "public void init(org.bouncycastle.crypto.params.SkeinParameters)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.SkeinEngine.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.SkeinEngine.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["org.bouncycastle.crypto.digests.TigerDigest", "org.bouncycastle.crypto.digests.TigerDigest()", "public org.bouncycastle.crypto.digests.TigerDigest()"], ["org.bouncycastle.crypto.digests.TigerDigest", "org.bouncycastle.crypto.digests.TigerDigest(org.bouncycastle.crypto.digests.TigerDigest)", "public org.bouncycastle.crypto.digests.TigerDigest(org.bouncycastle.crypto.digests.TigerDigest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.TigerDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.TigerDigest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.digests.TigerDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.TigerDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.digests.TigerDigest.unpackWord(long, byte[], int)", "public void unpackWord(long, byte[], int)"], ["int", "org.bouncycastle.crypto.digests.TigerDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.TigerDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.digests.TigerDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.TigerDigest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.TigerDigest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.digests.WhirlpoolDigest", "org.bouncycastle.crypto.digests.WhirlpoolDigest()", "public org.bouncycastle.crypto.digests.WhirlpoolDigest()"], ["org.bouncycastle.crypto.digests.WhirlpoolDigest", "org.bouncycastle.crypto.digests.WhirlpoolDigest(org.bouncycastle.crypto.digests.WhirlpoolDigest)", "public org.bouncycastle.crypto.digests.WhirlpoolDigest(org.bouncycastle.crypto.digests.WhirlpoolDigest)"], ["java.lang.String", "org.bouncycastle.crypto.digests.WhirlpoolDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.digests.WhirlpoolDigest.getDigestSize()", "public int getDigestSize()"], ["int", "org.bouncycastle.crypto.digests.WhirlpoolDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.digests.WhirlpoolDigest.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.digests.WhirlpoolDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.digests.WhirlpoolDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.digests.WhirlpoolDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.util.Memoable", "org.bouncycastle.crypto.digests.WhirlpoolDigest.copy()", "public org.bouncycastle.util.Memoable copy()"], ["void", "org.bouncycastle.crypto.digests.WhirlpoolDigest.reset(org.bouncycastle.util.Memoable)", "public void reset(org.bouncycastle.util.Memoable)"], ["org.bouncycastle.crypto.ec.CustomNamedCurves", "org.bouncycastle.crypto.ec.CustomNamedCurves()", "public org.bouncycastle.crypto.ec.CustomNamedCurves()"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.crypto.ec.CustomNamedCurves.getByName(java.lang.String)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.crypto.ec.CustomNamedCurves.getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.crypto.ec.CustomNamedCurves.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["java.lang.String", "org.bouncycastle.crypto.ec.CustomNamedCurves.getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.crypto.ec.CustomNamedCurves.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.crypto.ec.ECElGamalDecryptor", "org.bouncycastle.crypto.ec.ECElGamalDecryptor()", "public org.bouncycastle.crypto.ec.ECElGamalDecryptor()"], ["void", "org.bouncycastle.crypto.ec.ECElGamalDecryptor.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.ec.ECElGamalDecryptor.decrypt(org.bouncycastle.crypto.ec.ECPair)", "public org.bouncycastle.math.ec.ECPoint decrypt(org.bouncycastle.crypto.ec.ECPair)"], ["org.bouncycastle.crypto.ec.ECElGamalEncryptor", "org.bouncycastle.crypto.ec.ECElGamalEncryptor()", "public org.bouncycastle.crypto.ec.ECElGamalEncryptor()"], ["void", "org.bouncycastle.crypto.ec.ECElGamalEncryptor.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.ec.ECPair", "org.bouncycastle.crypto.ec.ECElGamalEncryptor.encrypt(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.crypto.ec.ECPair encrypt(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.crypto.ec.ECFixedTransform", "org.bouncycastle.crypto.ec.ECFixedTransform(java.math.BigInteger)", "public org.bouncycastle.crypto.ec.ECFixedTransform(java.math.BigInteger)"], ["void", "org.bouncycastle.crypto.ec.ECFixedTransform.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.ec.ECPair", "org.bouncycastle.crypto.ec.ECFixedTransform.transform(org.bouncycastle.crypto.ec.ECPair)", "public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair)"], ["java.math.BigInteger", "org.bouncycastle.crypto.ec.ECFixedTransform.getTransformValue()", "public java.math.BigInteger getTransformValue()"], ["org.bouncycastle.crypto.ec.ECNewPublicKeyTransform", "org.bouncycastle.crypto.ec.ECNewPublicKeyTransform()", "public org.bouncycastle.crypto.ec.ECNewPublicKeyTransform()"], ["void", "org.bouncycastle.crypto.ec.ECNewPublicKeyTransform.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.ec.ECPair", "org.bouncycastle.crypto.ec.ECNewPublicKeyTransform.transform(org.bouncycastle.crypto.ec.ECPair)", "public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair)"], ["org.bouncycastle.crypto.ec.ECNewRandomnessTransform", "org.bouncycastle.crypto.ec.ECNewRandomnessTransform()", "public org.bouncycastle.crypto.ec.ECNewRandomnessTransform()"], ["void", "org.bouncycastle.crypto.ec.ECNewRandomnessTransform.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["org.bouncycastle.crypto.ec.ECPair", "org.bouncycastle.crypto.ec.ECNewRandomnessTransform.transform(org.bouncycastle.crypto.ec.ECPair)", "public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair)"], ["java.math.BigInteger", "org.bouncycastle.crypto.ec.ECNewRandomnessTransform.getTransformValue()", "public java.math.BigInteger getTransformValue()"], ["org.bouncycastle.crypto.ec.ECPair", "org.bouncycastle.crypto.ec.ECPair(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.crypto.ec.ECPair(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.ec.ECPair.getX()", "public org.bouncycastle.math.ec.ECPoint getX()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.ec.ECPair.getY()", "public org.bouncycastle.math.ec.ECPoint getY()"], ["boolean", "org.bouncycastle.crypto.ec.ECPair.equals(org.bouncycastle.crypto.ec.ECPair)", "public boolean equals(org.bouncycastle.crypto.ec.ECPair)"], ["boolean", "org.bouncycastle.crypto.ec.ECPair.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.ec.ECPair.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.encodings.ISO9796d1Encoding", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.crypto.encodings.ISO9796d1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.crypto.AsymmetricBlockCipher", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.getUnderlyingCipher()", "public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.getOutputBlockSize()", "public int getOutputBlockSize()"], ["void", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.setPadBits(int)", "public void setPadBits(int)"], ["int", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.getPadBits()", "public int getPadBits()"], ["byte[]", "org.bouncycastle.crypto.encodings.ISO9796d1Encoding.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.encodings.OAEPEncoding", "org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.crypto.encodings.OAEPEncoding", "org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.encodings.OAEPEncoding", "org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, byte[])", "public org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, byte[])"], ["org.bouncycastle.crypto.encodings.OAEPEncoding", "org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, byte[])", "public org.bouncycastle.crypto.encodings.OAEPEncoding(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, byte[])"], ["org.bouncycastle.crypto.AsymmetricBlockCipher", "org.bouncycastle.crypto.encodings.OAEPEncoding.getUnderlyingCipher()", "public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.encodings.OAEPEncoding.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.encodings.OAEPEncoding.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.encodings.OAEPEncoding.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.encodings.OAEPEncoding.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["byte[]", "org.bouncycastle.crypto.encodings.OAEPEncoding.encodeBlock(byte[], int, int)", "public byte[] encodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["byte[]", "org.bouncycastle.crypto.encodings.OAEPEncoding.decodeBlock(byte[], int, int)", "public byte[] decodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["java.lang.Object", "org.bouncycastle.crypto.encodings.PKCS1Encoding$1.run()", "public java.lang.Object run()"], ["org.bouncycastle.crypto.encodings.PKCS1Encoding", "org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.crypto.encodings.PKCS1Encoding", "org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, int)", "public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, int)"], ["org.bouncycastle.crypto.encodings.PKCS1Encoding", "org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, byte[])", "public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, byte[])"], ["org.bouncycastle.crypto.AsymmetricBlockCipher", "org.bouncycastle.crypto.encodings.PKCS1Encoding.getUnderlyingCipher()", "public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.encodings.PKCS1Encoding.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.encodings.PKCS1Encoding.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.encodings.PKCS1Encoding.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.encodings.PKCS1Encoding.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.AESEngine", "org.bouncycastle.crypto.engines.AESEngine()", "public org.bouncycastle.crypto.engines.AESEngine()"], ["void", "org.bouncycastle.crypto.engines.AESEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.AESEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.AESEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.AESEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.AESEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.AESFastEngine", "org.bouncycastle.crypto.engines.AESFastEngine()", "public org.bouncycastle.crypto.engines.AESFastEngine()"], ["void", "org.bouncycastle.crypto.engines.AESFastEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.AESFastEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.AESFastEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.AESFastEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.AESFastEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.AESLightEngine", "org.bouncycastle.crypto.engines.AESLightEngine()", "public org.bouncycastle.crypto.engines.AESLightEngine()"], ["void", "org.bouncycastle.crypto.engines.AESLightEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.AESLightEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.AESLightEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.AESLightEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.AESLightEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.AESWrapEngine", "org.bouncycastle.crypto.engines.AESWrapEngine()", "public org.bouncycastle.crypto.engines.AESWrapEngine()"], ["org.bouncycastle.crypto.engines.AESWrapPadEngine", "org.bouncycastle.crypto.engines.AESWrapPadEngine()", "public org.bouncycastle.crypto.engines.AESWrapPadEngine()"], ["org.bouncycastle.crypto.engines.BlowfishEngine", "org.bouncycastle.crypto.engines.BlowfishEngine()", "public org.bouncycastle.crypto.engines.BlowfishEngine()"], ["void", "org.bouncycastle.crypto.engines.BlowfishEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.BlowfishEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.BlowfishEngine.processBlock(byte[], int, byte[], int)", "public final int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.BlowfishEngine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.BlowfishEngine.getBlockSize()", "public int getBlockSize()"], ["org.bouncycastle.crypto.engines.CAST5Engine", "org.bouncycastle.crypto.engines.CAST5Engine()", "public org.bouncycastle.crypto.engines.CAST5Engine()"], ["void", "org.bouncycastle.crypto.engines.CAST5Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.CAST5Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.CAST5Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.CAST5Engine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.CAST5Engine.getBlockSize()", "public int getBlockSize()"], ["org.bouncycastle.crypto.engines.CAST6Engine", "org.bouncycastle.crypto.engines.CAST6Engine()", "public org.bouncycastle.crypto.engines.CAST6Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.CAST6Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.CAST6Engine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.CAST6Engine.getBlockSize()", "public int getBlockSize()"], ["org.bouncycastle.crypto.engines.CamelliaEngine", "org.bouncycastle.crypto.engines.CamelliaEngine()", "public org.bouncycastle.crypto.engines.CamelliaEngine()"], ["void", "org.bouncycastle.crypto.engines.CamelliaEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.engines.CamelliaEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.CamelliaEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.CamelliaEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.engines.CamelliaEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.CamelliaLightEngine", "org.bouncycastle.crypto.engines.CamelliaLightEngine()", "public org.bouncycastle.crypto.engines.CamelliaLightEngine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.CamelliaLightEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.CamelliaLightEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.CamelliaLightEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.CamelliaLightEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.engines.CamelliaLightEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.CamelliaWrapEngine", "org.bouncycastle.crypto.engines.CamelliaWrapEngine()", "public org.bouncycastle.crypto.engines.CamelliaWrapEngine()"], ["org.bouncycastle.crypto.engines.ChaChaEngine", "org.bouncycastle.crypto.engines.ChaChaEngine()", "public org.bouncycastle.crypto.engines.ChaChaEngine()"], ["org.bouncycastle.crypto.engines.ChaChaEngine", "org.bouncycastle.crypto.engines.ChaChaEngine(int)", "public org.bouncycastle.crypto.engines.ChaChaEngine(int)"], ["java.lang.String", "org.bouncycastle.crypto.engines.ChaChaEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.ChaChaEngine.chachaCore(int, int[], int[])", "public static void chachaCore(int, int[], int[])"], ["org.bouncycastle.crypto.engines.CramerShoupCiphertext", "org.bouncycastle.crypto.engines.CramerShoupCiphertext()", "public org.bouncycastle.crypto.engines.CramerShoupCiphertext()"], ["org.bouncycastle.crypto.engines.CramerShoupCiphertext", "org.bouncycastle.crypto.engines.CramerShoupCiphertext(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.engines.CramerShoupCiphertext(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.engines.CramerShoupCiphertext", "org.bouncycastle.crypto.engines.CramerShoupCiphertext(byte[])", "public org.bouncycastle.crypto.engines.CramerShoupCiphertext(byte[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.getU1()", "public java.math.BigInteger getU1()"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.setU1(java.math.BigInteger)", "public void setU1(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.getU2()", "public java.math.BigInteger getU2()"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.setU2(java.math.BigInteger)", "public void setU2(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.getE()", "public java.math.BigInteger getE()"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.setE(java.math.BigInteger)", "public void setE(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.getV()", "public java.math.BigInteger getV()"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.setV(java.math.BigInteger)", "public void setV(java.math.BigInteger)"], ["java.lang.String", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.crypto.engines.CramerShoupCiphertext.toByteArray()", "public byte[] toByteArray()"], ["org.bouncycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException(java.lang.String)", "public org.bouncycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException(java.lang.String)"], ["org.bouncycastle.crypto.engines.CramerShoupCoreEngine", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine()", "public org.bouncycastle.crypto.engines.CramerShoupCoreEngine()"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.init(boolean, org.bouncycastle.crypto.CipherParameters, java.lang.String)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters, java.lang.String)"], ["void", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.convertInput(byte[], int, int)", "public java.math.BigInteger convertInput(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.convertOutput(java.math.BigInteger)", "public byte[] convertOutput(java.math.BigInteger)"], ["org.bouncycastle.crypto.engines.CramerShoupCiphertext", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.encryptBlock(java.math.BigInteger)", "public org.bouncycastle.crypto.engines.CramerShoupCiphertext encryptBlock(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.CramerShoupCoreEngine.decryptBlock(org.bouncycastle.crypto.engines.CramerShoupCiphertext)", "public java.math.BigInteger decryptBlock(org.bouncycastle.crypto.engines.CramerShoupCiphertext) throws org.bouncycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException"], ["org.bouncycastle.crypto.engines.DESEngine", "org.bouncycastle.crypto.engines.DESEngine()", "public org.bouncycastle.crypto.engines.DESEngine()"], ["void", "org.bouncycastle.crypto.engines.DESEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.DESEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.DESEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.DESEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.DESEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.DESedeEngine", "org.bouncycastle.crypto.engines.DESedeEngine()", "public org.bouncycastle.crypto.engines.DESedeEngine()"], ["void", "org.bouncycastle.crypto.engines.DESedeEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.DESedeEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.DESedeEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.DESedeEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.DESedeEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.DESedeWrapEngine", "org.bouncycastle.crypto.engines.DESedeWrapEngine()", "public org.bouncycastle.crypto.engines.DESedeWrapEngine()"], ["void", "org.bouncycastle.crypto.engines.DESedeWrapEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.DESedeWrapEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte[]", "org.bouncycastle.crypto.engines.DESedeWrapEngine.wrap(byte[], int, int)", "public byte[] wrap(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.DESedeWrapEngine.unwrap(byte[], int, int)", "public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.ElGamalEngine", "org.bouncycastle.crypto.engines.ElGamalEngine()", "public org.bouncycastle.crypto.engines.ElGamalEngine()"], ["void", "org.bouncycastle.crypto.engines.ElGamalEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.ElGamalEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.ElGamalEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.engines.ElGamalEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int)"], ["org.bouncycastle.crypto.engines.GOST28147Engine", "org.bouncycastle.crypto.engines.GOST28147Engine()", "public org.bouncycastle.crypto.engines.GOST28147Engine()"], ["void", "org.bouncycastle.crypto.engines.GOST28147Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.GOST28147Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.GOST28147Engine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.GOST28147Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.GOST28147Engine.reset()", "public void reset()"], ["byte[]", "org.bouncycastle.crypto.engines.GOST28147Engine.getSBox(java.lang.String)", "public static byte[] getSBox(java.lang.String)"], ["org.bouncycastle.crypto.engines.Grain128Engine", "org.bouncycastle.crypto.engines.Grain128Engine()", "public org.bouncycastle.crypto.engines.Grain128Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.Grain128Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.Grain128Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.engines.Grain128Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["void", "org.bouncycastle.crypto.engines.Grain128Engine.reset()", "public void reset()"], ["byte", "org.bouncycastle.crypto.engines.Grain128Engine.returnByte(byte)", "public byte returnByte(byte)"], ["org.bouncycastle.crypto.engines.Grainv1Engine", "org.bouncycastle.crypto.engines.Grainv1Engine()", "public org.bouncycastle.crypto.engines.Grainv1Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.Grainv1Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.Grainv1Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.engines.Grainv1Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["void", "org.bouncycastle.crypto.engines.Grainv1Engine.reset()", "public void reset()"], ["byte", "org.bouncycastle.crypto.engines.Grainv1Engine.returnByte(byte)", "public byte returnByte(byte)"], ["org.bouncycastle.crypto.engines.HC128Engine", "org.bouncycastle.crypto.engines.HC128Engine()", "public org.bouncycastle.crypto.engines.HC128Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.HC128Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.HC128Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.engines.HC128Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["void", "org.bouncycastle.crypto.engines.HC128Engine.reset()", "public void reset()"], ["byte", "org.bouncycastle.crypto.engines.HC128Engine.returnByte(byte)", "public byte returnByte(byte)"], ["org.bouncycastle.crypto.engines.HC256Engine", "org.bouncycastle.crypto.engines.HC256Engine()", "public org.bouncycastle.crypto.engines.HC256Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.HC256Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.HC256Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.engines.HC256Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["void", "org.bouncycastle.crypto.engines.HC256Engine.reset()", "public void reset()"], ["byte", "org.bouncycastle.crypto.engines.HC256Engine.returnByte(byte)", "public byte returnByte(byte)"], ["org.bouncycastle.crypto.engines.IDEAEngine", "org.bouncycastle.crypto.engines.IDEAEngine()", "public org.bouncycastle.crypto.engines.IDEAEngine()"], ["void", "org.bouncycastle.crypto.engines.IDEAEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.IDEAEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.IDEAEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.IDEAEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.IDEAEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.IESEngine", "org.bouncycastle.crypto.engines.IESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.engines.IESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac)"], ["org.bouncycastle.crypto.engines.IESEngine", "org.bouncycastle.crypto.engines.IESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac, org.bouncycastle.crypto.BufferedBlockCipher)", "public org.bouncycastle.crypto.engines.IESEngine(org.bouncycastle.crypto.BasicAgreement, org.bouncycastle.crypto.DerivationFunction, org.bouncycastle.crypto.Mac, org.bouncycastle.crypto.BufferedBlockCipher)"], ["void", "org.bouncycastle.crypto.engines.IESEngine.init(boolean, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.engines.IESEngine.init(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator)", "public void init(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator)"], ["void", "org.bouncycastle.crypto.engines.IESEngine.init(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.KeyParser)", "public void init(org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.CipherParameters, org.bouncycastle.crypto.KeyParser)"], ["org.bouncycastle.crypto.BufferedBlockCipher", "org.bouncycastle.crypto.engines.IESEngine.getCipher()", "public org.bouncycastle.crypto.BufferedBlockCipher getCipher()"], ["org.bouncycastle.crypto.Mac", "org.bouncycastle.crypto.engines.IESEngine.getMac()", "public org.bouncycastle.crypto.Mac getMac()"], ["byte[]", "org.bouncycastle.crypto.engines.IESEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.ISAACEngine", "org.bouncycastle.crypto.engines.ISAACEngine()", "public org.bouncycastle.crypto.engines.ISAACEngine()"], ["void", "org.bouncycastle.crypto.engines.ISAACEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte", "org.bouncycastle.crypto.engines.ISAACEngine.returnByte(byte)", "public byte returnByte(byte)"], ["int", "org.bouncycastle.crypto.engines.ISAACEngine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["java.lang.String", "org.bouncycastle.crypto.engines.ISAACEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.ISAACEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.NaccacheSternEngine", "org.bouncycastle.crypto.engines.NaccacheSternEngine()", "public org.bouncycastle.crypto.engines.NaccacheSternEngine()"], ["void", "org.bouncycastle.crypto.engines.NaccacheSternEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.engines.NaccacheSternEngine.setDebug(boolean)", "public void setDebug(boolean)"], ["int", "org.bouncycastle.crypto.engines.NaccacheSternEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.NaccacheSternEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.engines.NaccacheSternEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["byte[]", "org.bouncycastle.crypto.engines.NaccacheSternEngine.encrypt(java.math.BigInteger)", "public byte[] encrypt(java.math.BigInteger)"], ["byte[]", "org.bouncycastle.crypto.engines.NaccacheSternEngine.addCryptedBlocks(byte[], byte[])", "public byte[] addCryptedBlocks(byte[], byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["byte[]", "org.bouncycastle.crypto.engines.NaccacheSternEngine.processData(byte[])", "public byte[] processData(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.NoekeonEngine", "org.bouncycastle.crypto.engines.NoekeonEngine()", "public org.bouncycastle.crypto.engines.NoekeonEngine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.NoekeonEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.NoekeonEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.NoekeonEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.NoekeonEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.NoekeonEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.NullEngine", "org.bouncycastle.crypto.engines.NullEngine()", "public org.bouncycastle.crypto.engines.NullEngine()"], ["org.bouncycastle.crypto.engines.NullEngine", "org.bouncycastle.crypto.engines.NullEngine(int)", "public org.bouncycastle.crypto.engines.NullEngine(int)"], ["void", "org.bouncycastle.crypto.engines.NullEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.engines.NullEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.NullEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.NullEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.engines.NullEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.RC2Engine", "org.bouncycastle.crypto.engines.RC2Engine()", "public org.bouncycastle.crypto.engines.RC2Engine()"], ["void", "org.bouncycastle.crypto.engines.RC2Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.engines.RC2Engine.reset()", "public void reset()"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC2Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.RC2Engine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RC2Engine.processBlock(byte[], int, byte[], int)", "public final int processBlock(byte[], int, byte[], int)"], ["org.bouncycastle.crypto.engines.RC2WrapEngine", "org.bouncycastle.crypto.engines.RC2WrapEngine()", "public org.bouncycastle.crypto.engines.RC2WrapEngine()"], ["void", "org.bouncycastle.crypto.engines.RC2WrapEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC2WrapEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte[]", "org.bouncycastle.crypto.engines.RC2WrapEngine.wrap(byte[], int, int)", "public byte[] wrap(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.RC2WrapEngine.unwrap(byte[], int, int)", "public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.RC4Engine", "org.bouncycastle.crypto.engines.RC4Engine()", "public org.bouncycastle.crypto.engines.RC4Engine()"], ["void", "org.bouncycastle.crypto.engines.RC4Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC4Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte", "org.bouncycastle.crypto.engines.RC4Engine.returnByte(byte)", "public byte returnByte(byte)"], ["int", "org.bouncycastle.crypto.engines.RC4Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.RC4Engine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.RC532Engine", "org.bouncycastle.crypto.engines.RC532Engine()", "public org.bouncycastle.crypto.engines.RC532Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC532Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.RC532Engine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.RC532Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RC532Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.RC532Engine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.RC564Engine", "org.bouncycastle.crypto.engines.RC564Engine()", "public org.bouncycastle.crypto.engines.RC564Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC564Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.RC564Engine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.RC564Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RC564Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.RC564Engine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.RC6Engine", "org.bouncycastle.crypto.engines.RC6Engine()", "public org.bouncycastle.crypto.engines.RC6Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.RC6Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.RC6Engine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.RC6Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RC6Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.RC6Engine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.RFC3211WrapEngine", "org.bouncycastle.crypto.engines.RFC3211WrapEngine(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.engines.RFC3211WrapEngine(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.engines.RFC3211WrapEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RFC3211WrapEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte[]", "org.bouncycastle.crypto.engines.RFC3211WrapEngine.wrap(byte[], int, int)", "public byte[] wrap(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.RFC3211WrapEngine.unwrap(byte[], int, int)", "public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.RFC3394WrapEngine", "org.bouncycastle.crypto.engines.RFC3394WrapEngine(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.engines.RFC3394WrapEngine(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.engines.RFC3394WrapEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RFC3394WrapEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte[]", "org.bouncycastle.crypto.engines.RFC3394WrapEngine.wrap(byte[], int, int)", "public byte[] wrap(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.RFC3394WrapEngine.unwrap(byte[], int, int)", "public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.RFC5649WrapEngine", "org.bouncycastle.crypto.engines.RFC5649WrapEngine(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.engines.RFC5649WrapEngine(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.engines.RFC5649WrapEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RFC5649WrapEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte[]", "org.bouncycastle.crypto.engines.RFC5649WrapEngine.wrap(byte[], int, int)", "public byte[] wrap(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.RFC5649WrapEngine.unwrap(byte[], int, int)", "public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.engines.RSABlindedEngine", "org.bouncycastle.crypto.engines.RSABlindedEngine()", "public org.bouncycastle.crypto.engines.RSABlindedEngine()"], ["void", "org.bouncycastle.crypto.engines.RSABlindedEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RSABlindedEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RSABlindedEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.engines.RSABlindedEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int)"], ["org.bouncycastle.crypto.engines.RSABlindingEngine", "org.bouncycastle.crypto.engines.RSABlindingEngine()", "public org.bouncycastle.crypto.engines.RSABlindingEngine()"], ["void", "org.bouncycastle.crypto.engines.RSABlindingEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RSABlindingEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RSABlindingEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.engines.RSABlindingEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int)"], ["void", "org.bouncycastle.crypto.engines.RSACoreEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RSACoreEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RSACoreEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.RSACoreEngine.convertInput(byte[], int, int)", "public java.math.BigInteger convertInput(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.engines.RSACoreEngine.convertOutput(java.math.BigInteger)", "public byte[] convertOutput(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.engines.RSACoreEngine.processBlock(java.math.BigInteger)", "public java.math.BigInteger processBlock(java.math.BigInteger)"], ["org.bouncycastle.crypto.engines.RSAEngine", "org.bouncycastle.crypto.engines.RSAEngine()", "public org.bouncycastle.crypto.engines.RSAEngine()"], ["void", "org.bouncycastle.crypto.engines.RSAEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.RSAEngine.getInputBlockSize()", "public int getInputBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RSAEngine.getOutputBlockSize()", "public int getOutputBlockSize()"], ["byte[]", "org.bouncycastle.crypto.engines.RSAEngine.processBlock(byte[], int, int)", "public byte[] processBlock(byte[], int, int)"], ["org.bouncycastle.crypto.engines.RijndaelEngine", "org.bouncycastle.crypto.engines.RijndaelEngine()", "public org.bouncycastle.crypto.engines.RijndaelEngine()"], ["org.bouncycastle.crypto.engines.RijndaelEngine", "org.bouncycastle.crypto.engines.RijndaelEngine(int)", "public org.bouncycastle.crypto.engines.RijndaelEngine(int)"], ["void", "org.bouncycastle.crypto.engines.RijndaelEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.RijndaelEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.RijndaelEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.RijndaelEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.RijndaelEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.SEEDEngine", "org.bouncycastle.crypto.engines.SEEDEngine()", "public org.bouncycastle.crypto.engines.SEEDEngine()"], ["void", "org.bouncycastle.crypto.engines.SEEDEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.engines.SEEDEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.SEEDEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.SEEDEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.engines.SEEDEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.SEEDWrapEngine", "org.bouncycastle.crypto.engines.SEEDWrapEngine()", "public org.bouncycastle.crypto.engines.SEEDWrapEngine()"], ["org.bouncycastle.crypto.engines.Salsa20Engine", "org.bouncycastle.crypto.engines.Salsa20Engine()", "public org.bouncycastle.crypto.engines.Salsa20Engine()"], ["org.bouncycastle.crypto.engines.Salsa20Engine", "org.bouncycastle.crypto.engines.Salsa20Engine(int)", "public org.bouncycastle.crypto.engines.Salsa20Engine(int)"], ["void", "org.bouncycastle.crypto.engines.Salsa20Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.Salsa20Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["byte", "org.bouncycastle.crypto.engines.Salsa20Engine.returnByte(byte)", "public byte returnByte(byte)"], ["int", "org.bouncycastle.crypto.engines.Salsa20Engine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["long", "org.bouncycastle.crypto.engines.Salsa20Engine.skip(long)", "public long skip(long)"], ["long", "org.bouncycastle.crypto.engines.Salsa20Engine.seekTo(long)", "public long seekTo(long)"], ["long", "org.bouncycastle.crypto.engines.Salsa20Engine.getPosition()", "public long getPosition()"], ["void", "org.bouncycastle.crypto.engines.Salsa20Engine.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.engines.Salsa20Engine.salsaCore(int, int[], int[])", "public static void salsaCore(int, int[], int[])"], ["org.bouncycastle.crypto.engines.SerpentEngine", "org.bouncycastle.crypto.engines.SerpentEngine()", "public org.bouncycastle.crypto.engines.SerpentEngine()"], ["void", "org.bouncycastle.crypto.engines.SerpentEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.SerpentEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.SerpentEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.SerpentEngine.processBlock(byte[], int, byte[], int)", "public final int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.SerpentEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.Shacal2Engine", "org.bouncycastle.crypto.engines.Shacal2Engine()", "public org.bouncycastle.crypto.engines.Shacal2Engine()"], ["void", "org.bouncycastle.crypto.engines.Shacal2Engine.reset()", "public void reset()"], ["java.lang.String", "org.bouncycastle.crypto.engines.Shacal2Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.Shacal2Engine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.Shacal2Engine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.crypto.engines.Shacal2Engine.setKey(byte[])", "public void setKey(byte[])"], ["void", "org.bouncycastle.crypto.engines.Shacal2Engine.encryptBlock(byte[], int, byte[], int)", "public void encryptBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.Shacal2Engine.decryptBlock(byte[], int, byte[], int)", "public void decryptBlock(byte[], int, byte[], int)"], ["int", "org.bouncycastle.crypto.engines.Shacal2Engine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["org.bouncycastle.crypto.engines.SkipjackEngine", "org.bouncycastle.crypto.engines.SkipjackEngine()", "public org.bouncycastle.crypto.engines.SkipjackEngine()"], ["void", "org.bouncycastle.crypto.engines.SkipjackEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.SkipjackEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.SkipjackEngine.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.engines.SkipjackEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.SkipjackEngine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.SkipjackEngine.encryptBlock(byte[], int, byte[], int)", "public int encryptBlock(byte[], int, byte[], int)"], ["int", "org.bouncycastle.crypto.engines.SkipjackEngine.decryptBlock(byte[], int, byte[], int)", "public int decryptBlock(byte[], int, byte[], int)"], ["org.bouncycastle.crypto.engines.TEAEngine", "org.bouncycastle.crypto.engines.TEAEngine()", "public org.bouncycastle.crypto.engines.TEAEngine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.TEAEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.TEAEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.TEAEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.TEAEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.TEAEngine.reset()", "public void reset()"], ["org.bouncycastle.crypto.engines.ThreefishEngine$Threefish1024Cipher", "org.bouncycastle.crypto.engines.ThreefishEngine$Threefish1024Cipher(long[], long[])", "public org.bouncycastle.crypto.engines.ThreefishEngine$Threefish1024Cipher(long[], long[])"], ["org.bouncycastle.crypto.engines.ThreefishEngine$Threefish256Cipher", "org.bouncycastle.crypto.engines.ThreefishEngine$Threefish256Cipher(long[], long[])", "public org.bouncycastle.crypto.engines.ThreefishEngine$Threefish256Cipher(long[], long[])"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine$Threefish512Cipher.encryptBlock(long[], long[])", "public void encryptBlock(long[], long[])"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine$Threefish512Cipher.decryptBlock(long[], long[])", "public void decryptBlock(long[], long[])"], ["org.bouncycastle.crypto.engines.ThreefishEngine", "org.bouncycastle.crypto.engines.ThreefishEngine(int)", "public org.bouncycastle.crypto.engines.ThreefishEngine(int)"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine.init(boolean, long[], long[])", "public void init(boolean, long[], long[])"], ["java.lang.String", "org.bouncycastle.crypto.engines.ThreefishEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.ThreefishEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.ThreefishEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.engines.ThreefishEngine.processBlock(long[], long[])", "public int processBlock(long[], long[]) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["long", "org.bouncycastle.crypto.engines.ThreefishEngine.bytesToWord(byte[], int)", "public static long bytesToWord(byte[], int)"], ["void", "org.bouncycastle.crypto.engines.ThreefishEngine.wordToBytes(long, byte[], int)", "public static void wordToBytes(long, byte[], int)"], ["org.bouncycastle.crypto.engines.TwofishEngine", "org.bouncycastle.crypto.engines.TwofishEngine()", "public org.bouncycastle.crypto.engines.TwofishEngine()"], ["void", "org.bouncycastle.crypto.engines.TwofishEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.crypto.engines.TwofishEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.TwofishEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.TwofishEngine.reset()", "public void reset()"], ["int", "org.bouncycastle.crypto.engines.TwofishEngine.getBlockSize()", "public int getBlockSize()"], ["org.bouncycastle.crypto.engines.VMPCEngine", "org.bouncycastle.crypto.engines.VMPCEngine()", "public org.bouncycastle.crypto.engines.VMPCEngine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.VMPCEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.engines.VMPCEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.VMPCEngine.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.VMPCEngine.reset()", "public void reset()"], ["byte", "org.bouncycastle.crypto.engines.VMPCEngine.returnByte(byte)", "public byte returnByte(byte)"], ["org.bouncycastle.crypto.engines.VMPCKSA3Engine", "org.bouncycastle.crypto.engines.VMPCKSA3Engine()", "public org.bouncycastle.crypto.engines.VMPCKSA3Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.VMPCKSA3Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.engines.XSalsa20Engine", "org.bouncycastle.crypto.engines.XSalsa20Engine()", "public org.bouncycastle.crypto.engines.XSalsa20Engine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.XSalsa20Engine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.engines.XTEAEngine", "org.bouncycastle.crypto.engines.XTEAEngine()", "public org.bouncycastle.crypto.engines.XTEAEngine()"], ["java.lang.String", "org.bouncycastle.crypto.engines.XTEAEngine.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.engines.XTEAEngine.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.engines.XTEAEngine.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.engines.XTEAEngine.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int)"], ["void", "org.bouncycastle.crypto.engines.XTEAEngine.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.examples.DESExample.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["org.bouncycastle.crypto.examples.DESExample", "org.bouncycastle.crypto.examples.DESExample()", "public org.bouncycastle.crypto.examples.DESExample()"], ["org.bouncycastle.crypto.examples.DESExample", "org.bouncycastle.crypto.examples.DESExample(java.lang.String, java.lang.String, java.lang.String, boolean)", "public org.bouncycastle.crypto.examples.DESExample(java.lang.String, java.lang.String, java.lang.String, boolean)"], ["org.bouncycastle.crypto.examples.JPAKEExample", "org.bouncycastle.crypto.examples.JPAKEExample()", "public org.bouncycastle.crypto.examples.JPAKEExample()"], ["void", "org.bouncycastle.crypto.examples.JPAKEExample.main(java.lang.String[])", "public static void main(java.lang.String[]) throws org.bouncycastle.crypto.CryptoException"], ["void", "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.CramerShoupKeyPairGenerator", "org.bouncycastle.crypto.generators.CramerShoupKeyPairGenerator()", "public org.bouncycastle.crypto.generators.CramerShoupKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.CramerShoupKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.CramerShoupKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.CramerShoupParametersGenerator", "org.bouncycastle.crypto.generators.CramerShoupParametersGenerator()", "public org.bouncycastle.crypto.generators.CramerShoupParametersGenerator()"], ["void", "org.bouncycastle.crypto.generators.CramerShoupParametersGenerator.init(int, int, java.security.SecureRandom)", "public void init(int, int, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.CramerShoupParameters", "org.bouncycastle.crypto.generators.CramerShoupParametersGenerator.generateParameters()", "public org.bouncycastle.crypto.params.CramerShoupParameters generateParameters()"], ["org.bouncycastle.crypto.params.CramerShoupParameters", "org.bouncycastle.crypto.generators.CramerShoupParametersGenerator.generateParameters(org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.params.CramerShoupParameters generateParameters(org.bouncycastle.crypto.params.DHParameters)"], ["org.bouncycastle.crypto.generators.DESKeyGenerator", "org.bouncycastle.crypto.generators.DESKeyGenerator()", "public org.bouncycastle.crypto.generators.DESKeyGenerator()"], ["void", "org.bouncycastle.crypto.generators.DESKeyGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["byte[]", "org.bouncycastle.crypto.generators.DESKeyGenerator.generateKey()", "public byte[] generateKey()"], ["org.bouncycastle.crypto.generators.DESedeKeyGenerator", "org.bouncycastle.crypto.generators.DESedeKeyGenerator()", "public org.bouncycastle.crypto.generators.DESedeKeyGenerator()"], ["void", "org.bouncycastle.crypto.generators.DESedeKeyGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["byte[]", "org.bouncycastle.crypto.generators.DESedeKeyGenerator.generateKey()", "public byte[] generateKey()"], ["org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator", "org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator()", "public org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.DHKeyPairGenerator", "org.bouncycastle.crypto.generators.DHKeyPairGenerator()", "public org.bouncycastle.crypto.generators.DHKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.DHKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.DHKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.DHParametersGenerator", "org.bouncycastle.crypto.generators.DHParametersGenerator()", "public org.bouncycastle.crypto.generators.DHParametersGenerator()"], ["void", "org.bouncycastle.crypto.generators.DHParametersGenerator.init(int, int, java.security.SecureRandom)", "public void init(int, int, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.generators.DHParametersGenerator.generateParameters()", "public org.bouncycastle.crypto.params.DHParameters generateParameters()"], ["org.bouncycastle.crypto.generators.DSAKeyPairGenerator", "org.bouncycastle.crypto.generators.DSAKeyPairGenerator()", "public org.bouncycastle.crypto.generators.DSAKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.DSAKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.DSAKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.DSAParametersGenerator", "org.bouncycastle.crypto.generators.DSAParametersGenerator()", "public org.bouncycastle.crypto.generators.DSAParametersGenerator()"], ["org.bouncycastle.crypto.generators.DSAParametersGenerator", "org.bouncycastle.crypto.generators.DSAParametersGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.DSAParametersGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.generators.DSAParametersGenerator.init(int, int, java.security.SecureRandom)", "public void init(int, int, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.generators.DSAParametersGenerator.init(org.bouncycastle.crypto.params.DSAParameterGenerationParameters)", "public void init(org.bouncycastle.crypto.params.DSAParameterGenerationParameters)"], ["org.bouncycastle.crypto.params.DSAParameters", "org.bouncycastle.crypto.generators.DSAParametersGenerator.generateParameters()", "public org.bouncycastle.crypto.params.DSAParameters generateParameters()"], ["org.bouncycastle.crypto.generators.DSTU4145KeyPairGenerator", "org.bouncycastle.crypto.generators.DSTU4145KeyPairGenerator()", "public org.bouncycastle.crypto.generators.DSTU4145KeyPairGenerator()"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.DSTU4145KeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.ECKeyPairGenerator", "org.bouncycastle.crypto.generators.ECKeyPairGenerator()", "public org.bouncycastle.crypto.generators.ECKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.ECKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.ECKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator", "org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator()", "public org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.ElGamalParametersGenerator", "org.bouncycastle.crypto.generators.ElGamalParametersGenerator()", "public org.bouncycastle.crypto.generators.ElGamalParametersGenerator()"], ["void", "org.bouncycastle.crypto.generators.ElGamalParametersGenerator.init(int, int, java.security.SecureRandom)", "public void init(int, int, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.ElGamalParameters", "org.bouncycastle.crypto.generators.ElGamalParametersGenerator.generateParameters()", "public org.bouncycastle.crypto.params.ElGamalParameters generateParameters()"], ["org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator", "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator(org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator, org.bouncycastle.crypto.KeyEncoder)", "public org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator(org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator, org.bouncycastle.crypto.KeyEncoder)"], ["org.bouncycastle.crypto.EphemeralKeyPair", "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator.generate()", "public org.bouncycastle.crypto.EphemeralKeyPair generate()"], ["org.bouncycastle.crypto.generators.GOST3410KeyPairGenerator", "org.bouncycastle.crypto.generators.GOST3410KeyPairGenerator()", "public org.bouncycastle.crypto.generators.GOST3410KeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.GOST3410KeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.GOST3410KeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.GOST3410ParametersGenerator", "org.bouncycastle.crypto.generators.GOST3410ParametersGenerator()", "public org.bouncycastle.crypto.generators.GOST3410ParametersGenerator()"], ["void", "org.bouncycastle.crypto.generators.GOST3410ParametersGenerator.init(int, int, java.security.SecureRandom)", "public void init(int, int, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.GOST3410Parameters", "org.bouncycastle.crypto.generators.GOST3410ParametersGenerator.generateParameters()", "public org.bouncycastle.crypto.params.GOST3410Parameters generateParameters()"], ["org.bouncycastle.crypto.generators.HKDFBytesGenerator", "org.bouncycastle.crypto.generators.HKDFBytesGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.HKDFBytesGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.generators.HKDFBytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.generators.HKDFBytesGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.crypto.generators.HKDFBytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.KDF1BytesGenerator", "org.bouncycastle.crypto.generators.KDF1BytesGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.KDF1BytesGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.generators.KDF2BytesGenerator", "org.bouncycastle.crypto.generators.KDF2BytesGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.KDF2BytesGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.generators.KDFCounterBytesGenerator", "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator(org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.generators.KDFCounterBytesGenerator(org.bouncycastle.crypto.Mac)"], ["void", "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Mac", "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator.getMac()", "public org.bouncycastle.crypto.Mac getMac()"], ["int", "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator", "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator(org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator(org.bouncycastle.crypto.Mac)"], ["void", "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Mac", "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.getMac()", "public org.bouncycastle.crypto.Mac getMac()"], ["int", "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator", "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator(org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator(org.bouncycastle.crypto.Mac)"], ["void", "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Mac", "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator.getMac()", "public org.bouncycastle.crypto.Mac getMac()"], ["int", "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.MGF1BytesGenerator", "org.bouncycastle.crypto.generators.MGF1BytesGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.MGF1BytesGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.generators.MGF1BytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.generators.MGF1BytesGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.crypto.generators.MGF1BytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator", "org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator()", "public org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.NaccacheSternKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator", "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator()", "public org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator()"], ["void", "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator.init(byte[], byte[])", "public void init(byte[], byte[])"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator.generateDerivedParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator.generateDerivedParameters(int, int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator.generateDerivedMacParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"], ["org.bouncycastle.crypto.generators.PKCS12ParametersGenerator", "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.PKCS12ParametersGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator.generateDerivedParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator.generateDerivedParameters(int, int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator.generateDerivedMacParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"], ["org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator", "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator.generateDerivedParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator.generateDerivedParameters(int, int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator.generateDerivedMacParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"], ["org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator", "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator()", "public org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator()"], ["org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator", "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator.generateDerivedParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator.generateDerivedParameters(int, int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator.generateDerivedMacParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"], ["org.bouncycastle.crypto.generators.Poly1305KeyGenerator", "org.bouncycastle.crypto.generators.Poly1305KeyGenerator()", "public org.bouncycastle.crypto.generators.Poly1305KeyGenerator()"], ["void", "org.bouncycastle.crypto.generators.Poly1305KeyGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["byte[]", "org.bouncycastle.crypto.generators.Poly1305KeyGenerator.generateKey()", "public byte[] generateKey()"], ["void", "org.bouncycastle.crypto.generators.Poly1305KeyGenerator.clamp(byte[])", "public static void clamp(byte[])"], ["void", "org.bouncycastle.crypto.generators.Poly1305KeyGenerator.checkKey(byte[])", "public static void checkKey(byte[])"], ["org.bouncycastle.crypto.generators.RSABlindingFactorGenerator", "org.bouncycastle.crypto.generators.RSABlindingFactorGenerator()", "public org.bouncycastle.crypto.generators.RSABlindingFactorGenerator()"], ["void", "org.bouncycastle.crypto.generators.RSABlindingFactorGenerator.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.generators.RSABlindingFactorGenerator.generateBlindingFactor()", "public java.math.BigInteger generateBlindingFactor()"], ["org.bouncycastle.crypto.generators.RSAKeyPairGenerator", "org.bouncycastle.crypto.generators.RSAKeyPairGenerator()", "public org.bouncycastle.crypto.generators.RSAKeyPairGenerator()"], ["void", "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.generators.RSAKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.crypto.generators.SCrypt", "org.bouncycastle.crypto.generators.SCrypt()", "public org.bouncycastle.crypto.generators.SCrypt()"], ["byte[]", "org.bouncycastle.crypto.generators.SCrypt.generate(byte[], byte[], int, int, int, int)", "public static byte[] generate(byte[], byte[], int, int, int, int)"], ["org.bouncycastle.crypto.io.CipherIOException", "org.bouncycastle.crypto.io.CipherIOException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.crypto.io.CipherIOException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.crypto.io.CipherIOException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.BufferedBlockCipher)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.BufferedBlockCipher)"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.StreamCipher)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.StreamCipher)"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.modes.AEADBlockCipher)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.modes.AEADBlockCipher)"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.BufferedBlockCipher, int)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.BufferedBlockCipher, int)"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.StreamCipher, int)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.StreamCipher, int)"], ["org.bouncycastle.crypto.io.CipherInputStream", "org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.modes.AEADBlockCipher, int)", "public org.bouncycastle.crypto.io.CipherInputStream(java.io.InputStream, org.bouncycastle.crypto.modes.AEADBlockCipher, int)"], ["int", "org.bouncycastle.crypto.io.CipherInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.CipherInputStream.read(byte[])", "public int read(byte[]) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.CipherInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["long", "org.bouncycastle.crypto.io.CipherInputStream.skip(long)", "public long skip(long) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.CipherInputStream.available()", "public int available() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherInputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherInputStream.mark(int)", "public void mark(int)"], ["void", "org.bouncycastle.crypto.io.CipherInputStream.reset()", "public void reset() throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.io.CipherInputStream.markSupported()", "public boolean markSupported()"], ["org.bouncycastle.crypto.io.CipherOutputStream", "org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.BufferedBlockCipher)", "public org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.BufferedBlockCipher)"], ["org.bouncycastle.crypto.io.CipherOutputStream", "org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.StreamCipher)", "public org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.StreamCipher)"], ["org.bouncycastle.crypto.io.CipherOutputStream", "org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.modes.AEADBlockCipher)", "public org.bouncycastle.crypto.io.CipherOutputStream(java.io.OutputStream, org.bouncycastle.crypto.modes.AEADBlockCipher)"], ["void", "org.bouncycastle.crypto.io.CipherOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherOutputStream.write(byte[])", "public void write(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.CipherOutputStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.crypto.io.DigestInputStream", "org.bouncycastle.crypto.io.DigestInputStream(java.io.InputStream, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.io.DigestInputStream(java.io.InputStream, org.bouncycastle.crypto.Digest)"], ["int", "org.bouncycastle.crypto.io.DigestInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.DigestInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.io.DigestInputStream.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["org.bouncycastle.crypto.io.DigestOutputStream", "org.bouncycastle.crypto.io.DigestOutputStream(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.io.DigestOutputStream(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.io.DigestOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.DigestOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.io.DigestOutputStream.getDigest()", "public byte[] getDigest()"], ["org.bouncycastle.crypto.io.InvalidCipherTextIOException", "org.bouncycastle.crypto.io.InvalidCipherTextIOException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.crypto.io.InvalidCipherTextIOException(java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.crypto.io.MacInputStream", "org.bouncycastle.crypto.io.MacInputStream(java.io.InputStream, org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.io.MacInputStream(java.io.InputStream, org.bouncycastle.crypto.Mac)"], ["int", "org.bouncycastle.crypto.io.MacInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.MacInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.Mac", "org.bouncycastle.crypto.io.MacInputStream.getMac()", "public org.bouncycastle.crypto.Mac getMac()"], ["org.bouncycastle.crypto.io.MacOutputStream", "org.bouncycastle.crypto.io.MacOutputStream(org.bouncycastle.crypto.Mac)", "public org.bouncycastle.crypto.io.MacOutputStream(org.bouncycastle.crypto.Mac)"], ["void", "org.bouncycastle.crypto.io.MacOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.MacOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.io.MacOutputStream.getMac()", "public byte[] getMac()"], ["org.bouncycastle.crypto.io.SignerInputStream", "org.bouncycastle.crypto.io.SignerInputStream(java.io.InputStream, org.bouncycastle.crypto.Signer)", "public org.bouncycastle.crypto.io.SignerInputStream(java.io.InputStream, org.bouncycastle.crypto.Signer)"], ["int", "org.bouncycastle.crypto.io.SignerInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.io.SignerInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.io.SignerInputStream.getSigner()", "public org.bouncycastle.crypto.Signer getSigner()"], ["org.bouncycastle.crypto.io.SignerOutputStream", "org.bouncycastle.crypto.io.SignerOutputStream(org.bouncycastle.crypto.Signer)", "public org.bouncycastle.crypto.io.SignerOutputStream(org.bouncycastle.crypto.Signer)"], ["void", "org.bouncycastle.crypto.io.SignerOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.io.SignerOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.io.SignerOutputStream.getSigner()", "public org.bouncycastle.crypto.Signer getSigner()"], ["org.bouncycastle.crypto.kems.ECIESKeyEncapsulation", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom)", "public org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom)"], ["org.bouncycastle.crypto.kems.ECIESKeyEncapsulation", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom, boolean, boolean, boolean)", "public org.bouncycastle.crypto.kems.ECIESKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom, boolean, boolean, boolean)"], ["void", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation.encrypt(byte[], int, int)", "public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int, int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation.encrypt(byte[], int)", "public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation.decrypt(byte[], int, int, int)", "public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int, int, int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation.decrypt(byte[], int)", "public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int)"], ["org.bouncycastle.crypto.kems.RSAKeyEncapsulation", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom)", "public org.bouncycastle.crypto.kems.RSAKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation.encrypt(byte[], int, int)", "public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int, int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation.encrypt(byte[], int)", "public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation.decrypt(byte[], int, int, int)", "public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int, int, int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.kems.RSAKeyEncapsulation.decrypt(byte[], int)", "public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int)"], ["org.bouncycastle.crypto.macs.BlockCipherMac", "org.bouncycastle.crypto.macs.BlockCipherMac(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.BlockCipherMac(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.BlockCipherMac", "org.bouncycastle.crypto.macs.BlockCipherMac(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.BlockCipherMac(org.bouncycastle.crypto.BlockCipher, int)"], ["java.lang.String", "org.bouncycastle.crypto.macs.BlockCipherMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.BlockCipherMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.BlockCipherMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.BlockCipherMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.BlockCipherMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.BlockCipherMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.BlockCipherMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.CBCBlockCipherMac", "org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.CBCBlockCipherMac", "org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["org.bouncycastle.crypto.macs.CBCBlockCipherMac", "org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int)"], ["org.bouncycastle.crypto.macs.CBCBlockCipherMac", "org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.CBCBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["java.lang.String", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.CBCBlockCipherMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.CFBBlockCipherMac", "org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.CFBBlockCipherMac", "org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["org.bouncycastle.crypto.macs.CFBBlockCipherMac", "org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int)", "public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int)"], ["org.bouncycastle.crypto.macs.CFBBlockCipherMac", "org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.CFBBlockCipherMac(org.bouncycastle.crypto.BlockCipher, int, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["java.lang.String", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.CFBBlockCipherMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.CMac", "org.bouncycastle.crypto.macs.CMac(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.CMac(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.CMac", "org.bouncycastle.crypto.macs.CMac(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.CMac(org.bouncycastle.crypto.BlockCipher, int)"], ["java.lang.String", "org.bouncycastle.crypto.macs.CMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.CMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.CMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.CMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.CMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.CMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.CMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.CMacWithIV", "org.bouncycastle.crypto.macs.CMacWithIV(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.CMacWithIV(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.CMacWithIV", "org.bouncycastle.crypto.macs.CMacWithIV(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.CMacWithIV(org.bouncycastle.crypto.BlockCipher, int)"], ["org.bouncycastle.crypto.macs.GMac", "org.bouncycastle.crypto.macs.GMac(org.bouncycastle.crypto.modes.GCMBlockCipher)", "public org.bouncycastle.crypto.macs.GMac(org.bouncycastle.crypto.modes.GCMBlockCipher)"], ["org.bouncycastle.crypto.macs.GMac", "org.bouncycastle.crypto.macs.GMac(org.bouncycastle.crypto.modes.GCMBlockCipher, int)", "public org.bouncycastle.crypto.macs.GMac(org.bouncycastle.crypto.modes.GCMBlockCipher, int)"], ["void", "org.bouncycastle.crypto.macs.GMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.macs.GMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.GMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.GMac.update(byte)", "public void update(byte) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.GMac.update(byte[], int, int)", "public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.macs.GMac.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.GMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.GOST28147Mac", "org.bouncycastle.crypto.macs.GOST28147Mac()", "public org.bouncycastle.crypto.macs.GOST28147Mac()"], ["void", "org.bouncycastle.crypto.macs.GOST28147Mac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.macs.GOST28147Mac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.GOST28147Mac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.GOST28147Mac.update(byte)", "public void update(byte) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.GOST28147Mac.update(byte[], int, int)", "public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.macs.GOST28147Mac.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.GOST28147Mac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.HMac", "org.bouncycastle.crypto.macs.HMac(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.macs.HMac(org.bouncycastle.crypto.Digest)"], ["java.lang.String", "org.bouncycastle.crypto.macs.HMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.macs.HMac.getUnderlyingDigest()", "public org.bouncycastle.crypto.Digest getUnderlyingDigest()"], ["void", "org.bouncycastle.crypto.macs.HMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.HMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.HMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.HMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.HMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.HMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.ISO9797Alg3Mac", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.macs.ISO9797Alg3Mac", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["org.bouncycastle.crypto.macs.ISO9797Alg3Mac", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, int)"], ["org.bouncycastle.crypto.macs.ISO9797Alg3Mac", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.macs.ISO9797Alg3Mac(org.bouncycastle.crypto.BlockCipher, int, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["java.lang.String", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.ISO9797Alg3Mac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.MacCFBBlockCipher", "org.bouncycastle.crypto.macs.MacCFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.macs.MacCFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)"], ["void", "org.bouncycastle.crypto.macs.MacCFBBlockCipher.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.macs.MacCFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.MacCFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.macs.MacCFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.MacCFBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.OldHMac", "org.bouncycastle.crypto.macs.OldHMac(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.macs.OldHMac(org.bouncycastle.crypto.Digest)"], ["java.lang.String", "org.bouncycastle.crypto.macs.OldHMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.macs.OldHMac.getUnderlyingDigest()", "public org.bouncycastle.crypto.Digest getUnderlyingDigest()"], ["void", "org.bouncycastle.crypto.macs.OldHMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.macs.OldHMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.OldHMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.OldHMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.OldHMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.macs.OldHMac.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.Poly1305", "org.bouncycastle.crypto.macs.Poly1305()", "public org.bouncycastle.crypto.macs.Poly1305()"], ["org.bouncycastle.crypto.macs.Poly1305", "org.bouncycastle.crypto.macs.Poly1305(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.macs.Poly1305(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.macs.Poly1305.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.macs.Poly1305.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.Poly1305.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.Poly1305.update(byte)", "public void update(byte) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.Poly1305.update(byte[], int, int)", "public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.macs.Poly1305.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.Poly1305.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.SipHash", "org.bouncycastle.crypto.macs.SipHash()", "public org.bouncycastle.crypto.macs.SipHash()"], ["org.bouncycastle.crypto.macs.SipHash", "org.bouncycastle.crypto.macs.SipHash(int, int)", "public org.bouncycastle.crypto.macs.SipHash(int, int)"], ["java.lang.String", "org.bouncycastle.crypto.macs.SipHash.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.SipHash.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.SipHash.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.crypto.macs.SipHash.update(byte)", "public void update(byte) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.SipHash.update(byte[], int, int)", "public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["long", "org.bouncycastle.crypto.macs.SipHash.doFinal()", "public long doFinal() throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.macs.SipHash.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.SipHash.reset()", "public void reset()"], ["org.bouncycastle.crypto.macs.SkeinMac", "org.bouncycastle.crypto.macs.SkeinMac(int, int)", "public org.bouncycastle.crypto.macs.SkeinMac(int, int)"], ["org.bouncycastle.crypto.macs.SkeinMac", "org.bouncycastle.crypto.macs.SkeinMac(org.bouncycastle.crypto.macs.SkeinMac)", "public org.bouncycastle.crypto.macs.SkeinMac(org.bouncycastle.crypto.macs.SkeinMac)"], ["java.lang.String", "org.bouncycastle.crypto.macs.SkeinMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.macs.SkeinMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.macs.SkeinMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.SkeinMac.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.macs.SkeinMac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.macs.SkeinMac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.macs.SkeinMac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["org.bouncycastle.crypto.macs.VMPCMac", "org.bouncycastle.crypto.macs.VMPCMac()", "public org.bouncycastle.crypto.macs.VMPCMac()"], ["int", "org.bouncycastle.crypto.macs.VMPCMac.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["java.lang.String", "org.bouncycastle.crypto.macs.VMPCMac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.macs.VMPCMac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.macs.VMPCMac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.crypto.macs.VMPCMac.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.macs.VMPCMac.update(byte)", "public void update(byte) throws java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.macs.VMPCMac.update(byte[], int, int)", "public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["org.bouncycastle.crypto.modes.CBCBlockCipher", "org.bouncycastle.crypto.modes.CBCBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.CBCBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.CBCBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.modes.CBCBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.CBCBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.CBCBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.CBCBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.CBCBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream", "org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream(org.bouncycastle.crypto.modes.CCMBlockCipher)", "public org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream(org.bouncycastle.crypto.modes.CCMBlockCipher)"], ["byte[]", "org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream.getBuffer()", "public byte[] getBuffer()"], ["org.bouncycastle.crypto.modes.CCMBlockCipher", "org.bouncycastle.crypto.modes.CCMBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.CCMBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.CCMBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["void", "org.bouncycastle.crypto.modes.CCMBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.CCMBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.modes.CCMBlockCipher.processAADByte(byte)", "public void processAADByte(byte)"], ["void", "org.bouncycastle.crypto.modes.CCMBlockCipher.processAADBytes(byte[], int, int)", "public void processAADBytes(byte[], int, int)"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.modes.CCMBlockCipher.reset()", "public void reset()"], ["byte[]", "org.bouncycastle.crypto.modes.CCMBlockCipher.getMac()", "public byte[] getMac()"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["byte[]", "org.bouncycastle.crypto.modes.CCMBlockCipher.processPacket(byte[], int, int)", "public byte[] processPacket(byte[], int, int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["int", "org.bouncycastle.crypto.modes.CCMBlockCipher.processPacket(byte[], int, int, byte[], int)", "public int processPacket(byte[], int, int, byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException, org.bouncycastle.crypto.DataLengthException"], ["org.bouncycastle.crypto.modes.CFBBlockCipher", "org.bouncycastle.crypto.modes.CFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.modes.CFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)"], ["void", "org.bouncycastle.crypto.modes.CFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.CFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.CFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.CFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CFBBlockCipher.encryptBlock(byte[], int, byte[], int)", "public int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CFBBlockCipher.decryptBlock(byte[], int, byte[], int)", "public int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["byte[]", "org.bouncycastle.crypto.modes.CFBBlockCipher.getCurrentIV()", "public byte[] getCurrentIV()"], ["void", "org.bouncycastle.crypto.modes.CFBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.CTSBlockCipher", "org.bouncycastle.crypto.modes.CTSBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.CTSBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["int", "org.bouncycastle.crypto.modes.CTSBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.CTSBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.CTSBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CTSBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.CTSBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.modes.EAXBlockCipher", "org.bouncycastle.crypto.modes.EAXBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.EAXBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["java.lang.String", "org.bouncycastle.crypto.modes.EAXBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.EAXBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.getBlockSize()", "public int getBlockSize()"], ["void", "org.bouncycastle.crypto.modes.EAXBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.crypto.modes.EAXBlockCipher.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.modes.EAXBlockCipher.processAADByte(byte)", "public void processAADByte(byte)"], ["void", "org.bouncycastle.crypto.modes.EAXBlockCipher.processAADBytes(byte[], int, int)", "public void processAADBytes(byte[], int, int)"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["byte[]", "org.bouncycastle.crypto.modes.EAXBlockCipher.getMac()", "public byte[] getMac()"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.EAXBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["org.bouncycastle.crypto.modes.GCFBBlockCipher", "org.bouncycastle.crypto.modes.GCFBBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.GCFBBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.modes.GCFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.GCFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.GCFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.GCFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.GCFBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.GCMBlockCipher", "org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.modes.GCMBlockCipher", "org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier)", "public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.GCMBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["java.lang.String", "org.bouncycastle.crypto.modes.GCMBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.modes.GCMBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["byte[]", "org.bouncycastle.crypto.modes.GCMBlockCipher.getMac()", "public byte[] getMac()"], ["int", "org.bouncycastle.crypto.modes.GCMBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.GCMBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["void", "org.bouncycastle.crypto.modes.GCMBlockCipher.processAADByte(byte)", "public void processAADByte(byte)"], ["void", "org.bouncycastle.crypto.modes.GCMBlockCipher.processAADBytes(byte[], int, int)", "public void processAADBytes(byte[], int, int)"], ["int", "org.bouncycastle.crypto.modes.GCMBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.GCMBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.GCMBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.modes.GCMBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.GOFBBlockCipher", "org.bouncycastle.crypto.modes.GOFBBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.GOFBBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.modes.GOFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.GOFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.GOFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.GOFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.GOFBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.OCBBlockCipher", "org.bouncycastle.crypto.modes.OCBBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.OCBBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.OCBBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["java.lang.String", "org.bouncycastle.crypto.modes.OCBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.modes.OCBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["byte[]", "org.bouncycastle.crypto.modes.OCBBlockCipher.getMac()", "public byte[] getMac()"], ["int", "org.bouncycastle.crypto.modes.OCBBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.OCBBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["void", "org.bouncycastle.crypto.modes.OCBBlockCipher.processAADByte(byte)", "public void processAADByte(byte)"], ["void", "org.bouncycastle.crypto.modes.OCBBlockCipher.processAADBytes(byte[], int, int)", "public void processAADBytes(byte[], int, int)"], ["int", "org.bouncycastle.crypto.modes.OCBBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.OCBBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.crypto.modes.OCBBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.modes.OCBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.OFBBlockCipher", "org.bouncycastle.crypto.modes.OFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)", "public org.bouncycastle.crypto.modes.OFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int)"], ["void", "org.bouncycastle.crypto.modes.OFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.OFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.OFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.OFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.OFBBlockCipher.reset()", "public void reset()"], ["org.bouncycastle.crypto.modes.OldCTSBlockCipher", "org.bouncycastle.crypto.modes.OldCTSBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.OldCTSBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["int", "org.bouncycastle.crypto.modes.OldCTSBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.OldCTSBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.OldCTSBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.OldCTSBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.OldCTSBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["java.lang.String", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.modes.PGPCFBBlockCipher", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher(org.bouncycastle.crypto.BlockCipher, boolean)", "public org.bouncycastle.crypto.modes.PGPCFBBlockCipher(org.bouncycastle.crypto.BlockCipher, boolean)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["java.lang.String", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.reset()", "public void reset()"], ["void", "org.bouncycastle.crypto.modes.PGPCFBBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.crypto.modes.PaddedBlockCipher", "org.bouncycastle.crypto.modes.PaddedBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.PaddedBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["int", "org.bouncycastle.crypto.modes.PaddedBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.PaddedBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.modes.PaddedBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.PaddedBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.modes.PaddedBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.modes.SICBlockCipher", "org.bouncycastle.crypto.modes.SICBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.modes.SICBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.modes.SICBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.modes.SICBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.modes.SICBlockCipher.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.modes.SICBlockCipher.processBlock(byte[], int, byte[], int)", "public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["void", "org.bouncycastle.crypto.modes.SICBlockCipher.reset()", "public void reset()"], ["long", "org.bouncycastle.crypto.modes.SICBlockCipher.skip(long)", "public long skip(long)"], ["long", "org.bouncycastle.crypto.modes.SICBlockCipher.seekTo(long)", "public long seekTo(long)"], ["long", "org.bouncycastle.crypto.modes.SICBlockCipher.getPosition()", "public long getPosition()"], ["org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator", "org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator()", "public org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator()"], ["void", "org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator.init(byte[])", "public void init(byte[])"], ["void", "org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator.exponentiateX(long, byte[])", "public void exponentiateX(long, byte[])"], ["org.bouncycastle.crypto.modes.gcm.BasicGCMMultiplier", "org.bouncycastle.crypto.modes.gcm.BasicGCMMultiplier()", "public org.bouncycastle.crypto.modes.gcm.BasicGCMMultiplier()"], ["void", "org.bouncycastle.crypto.modes.gcm.BasicGCMMultiplier.init(byte[])", "public void init(byte[])"], ["void", "org.bouncycastle.crypto.modes.gcm.BasicGCMMultiplier.multiplyH(byte[])", "public void multiplyH(byte[])"], ["org.bouncycastle.crypto.modes.gcm.Tables1kGCMExponentiator", "org.bouncycastle.crypto.modes.gcm.Tables1kGCMExponentiator()", "public org.bouncycastle.crypto.modes.gcm.Tables1kGCMExponentiator()"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables1kGCMExponentiator.init(byte[])", "public void init(byte[])"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables1kGCMExponentiator.exponentiateX(long, byte[])", "public void exponentiateX(long, byte[])"], ["org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier", "org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier()", "public org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier()"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier.init(byte[])", "public void init(byte[])"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables64kGCMMultiplier.multiplyH(byte[])", "public void multiplyH(byte[])"], ["org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier", "org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier()", "public org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier()"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier.init(byte[])", "public void init(byte[])"], ["void", "org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier.multiplyH(byte[])", "public void multiplyH(byte[])"], ["org.bouncycastle.crypto.paddings.ISO10126d2Padding", "org.bouncycastle.crypto.paddings.ISO10126d2Padding()", "public org.bouncycastle.crypto.paddings.ISO10126d2Padding()"], ["void", "org.bouncycastle.crypto.paddings.ISO10126d2Padding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.ISO10126d2Padding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.ISO10126d2Padding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.ISO10126d2Padding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.ISO7816d4Padding", "org.bouncycastle.crypto.paddings.ISO7816d4Padding()", "public org.bouncycastle.crypto.paddings.ISO7816d4Padding()"], ["void", "org.bouncycastle.crypto.paddings.ISO7816d4Padding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.ISO7816d4Padding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.ISO7816d4Padding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.ISO7816d4Padding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.PKCS7Padding", "org.bouncycastle.crypto.paddings.PKCS7Padding()", "public org.bouncycastle.crypto.paddings.PKCS7Padding()"], ["void", "org.bouncycastle.crypto.paddings.PKCS7Padding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.PKCS7Padding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.PKCS7Padding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.PKCS7Padding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)", "public org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.paddings.BlockCipherPadding)"], ["org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher(org.bouncycastle.crypto.BlockCipher)", "public org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher(org.bouncycastle.crypto.BlockCipher)"], ["void", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["int", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException"], ["int", "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.TBCPadding", "org.bouncycastle.crypto.paddings.TBCPadding()", "public org.bouncycastle.crypto.paddings.TBCPadding()"], ["void", "org.bouncycastle.crypto.paddings.TBCPadding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.TBCPadding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.TBCPadding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.TBCPadding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.X923Padding", "org.bouncycastle.crypto.paddings.X923Padding()", "public org.bouncycastle.crypto.paddings.X923Padding()"], ["void", "org.bouncycastle.crypto.paddings.X923Padding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.X923Padding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.X923Padding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.X923Padding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.paddings.ZeroBytePadding", "org.bouncycastle.crypto.paddings.ZeroBytePadding()", "public org.bouncycastle.crypto.paddings.ZeroBytePadding()"], ["void", "org.bouncycastle.crypto.paddings.ZeroBytePadding.init(java.security.SecureRandom)", "public void init(java.security.SecureRandom) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.crypto.paddings.ZeroBytePadding.getPaddingName()", "public java.lang.String getPaddingName()"], ["int", "org.bouncycastle.crypto.paddings.ZeroBytePadding.addPadding(byte[], int)", "public int addPadding(byte[], int)"], ["int", "org.bouncycastle.crypto.paddings.ZeroBytePadding.padCount(byte[])", "public int padCount(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["org.bouncycastle.crypto.params.AEADParameters", "org.bouncycastle.crypto.params.AEADParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[])", "public org.bouncycastle.crypto.params.AEADParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[])"], ["org.bouncycastle.crypto.params.AEADParameters", "org.bouncycastle.crypto.params.AEADParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[], byte[])", "public org.bouncycastle.crypto.params.AEADParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[], byte[])"], ["org.bouncycastle.crypto.params.KeyParameter", "org.bouncycastle.crypto.params.AEADParameters.getKey()", "public org.bouncycastle.crypto.params.KeyParameter getKey()"], ["int", "org.bouncycastle.crypto.params.AEADParameters.getMacSize()", "public int getMacSize()"], ["byte[]", "org.bouncycastle.crypto.params.AEADParameters.getAssociatedText()", "public byte[] getAssociatedText()"], ["byte[]", "org.bouncycastle.crypto.params.AEADParameters.getNonce()", "public byte[] getNonce()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.params.AsymmetricKeyParameter(boolean)", "public org.bouncycastle.crypto.params.AsymmetricKeyParameter(boolean)"], ["boolean", "org.bouncycastle.crypto.params.AsymmetricKeyParameter.isPrivate()", "public boolean isPrivate()"], ["org.bouncycastle.crypto.params.CCMParameters", "org.bouncycastle.crypto.params.CCMParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[], byte[])", "public org.bouncycastle.crypto.params.CCMParameters(org.bouncycastle.crypto.params.KeyParameter, int, byte[], byte[])"], ["org.bouncycastle.crypto.params.CramerShoupKeyGenerationParameters", "org.bouncycastle.crypto.params.CramerShoupKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.CramerShoupParameters)", "public org.bouncycastle.crypto.params.CramerShoupKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.CramerShoupParameters)"], ["org.bouncycastle.crypto.params.CramerShoupParameters", "org.bouncycastle.crypto.params.CramerShoupKeyGenerationParameters.getParameters()", "public org.bouncycastle.crypto.params.CramerShoupParameters getParameters()"], ["org.bouncycastle.crypto.params.CramerShoupParameters", "org.bouncycastle.crypto.params.CramerShoupKeyParameters.getParameters()", "public org.bouncycastle.crypto.params.CramerShoupParameters getParameters()"], ["boolean", "org.bouncycastle.crypto.params.CramerShoupKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.CramerShoupKeyParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.CramerShoupParameters", "org.bouncycastle.crypto.params.CramerShoupParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.params.CramerShoupParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest)"], ["boolean", "org.bouncycastle.crypto.params.CramerShoupParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.CramerShoupParameters.hashCode()", "public int hashCode()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupParameters.getG1()", "public java.math.BigInteger getG1()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupParameters.getG2()", "public java.math.BigInteger getG2()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupParameters.getP()", "public java.math.BigInteger getP()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.params.CramerShoupParameters.getH()", "public org.bouncycastle.crypto.Digest getH()"], ["org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters(org.bouncycastle.crypto.params.CramerShoupParameters, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters(org.bouncycastle.crypto.params.CramerShoupParameters, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getX1()", "public java.math.BigInteger getX1()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getX2()", "public java.math.BigInteger getX2()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getY1()", "public java.math.BigInteger getY1()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getY2()", "public java.math.BigInteger getY2()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getZ()", "public java.math.BigInteger getZ()"], ["void", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.setPk(org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters)", "public void setPk(org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters)"], ["org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.getPk()", "public org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters getPk()"], ["int", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.CramerShoupPrivateKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters(org.bouncycastle.crypto.params.CramerShoupParameters, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters(org.bouncycastle.crypto.params.CramerShoupParameters, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters.getC()", "public java.math.BigInteger getC()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters.getD()", "public java.math.BigInteger getD()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters.getH()", "public java.math.BigInteger getH()"], ["int", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.CramerShoupPublicKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.DESParameters", "org.bouncycastle.crypto.params.DESParameters(byte[])", "public org.bouncycastle.crypto.params.DESParameters(byte[])"], ["boolean", "org.bouncycastle.crypto.params.DESParameters.isWeakKey(byte[], int)", "public static boolean isWeakKey(byte[], int)"], ["void", "org.bouncycastle.crypto.params.DESParameters.setOddParity(byte[])", "public static void setOddParity(byte[])"], ["org.bouncycastle.crypto.params.DESedeParameters", "org.bouncycastle.crypto.params.DESedeParameters(byte[])", "public org.bouncycastle.crypto.params.DESedeParameters(byte[])"], ["boolean", "org.bouncycastle.crypto.params.DESedeParameters.isWeakKey(byte[], int, int)", "public static boolean isWeakKey(byte[], int, int)"], ["boolean", "org.bouncycastle.crypto.params.DESedeParameters.isWeakKey(byte[], int)", "public static boolean isWeakKey(byte[], int)"], ["org.bouncycastle.crypto.params.DHKeyGenerationParameters", "org.bouncycastle.crypto.params.DHKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.params.DHKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHKeyGenerationParameters.getParameters()", "public org.bouncycastle.crypto.params.DHParameters getParameters()"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHKeyParameters.getParameters()", "public org.bouncycastle.crypto.params.DHParameters getParameters()"], ["boolean", "org.bouncycastle.crypto.params.DHKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.DHKeyParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)"], ["org.bouncycastle.crypto.params.DHParameters", "org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)", "public org.bouncycastle.crypto.params.DHParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int, java.math.BigInteger, org.bouncycastle.crypto.params.DHValidationParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHParameters.getG()", "public java.math.BigInteger getG()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHParameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHParameters.getJ()", "public java.math.BigInteger getJ()"], ["int", "org.bouncycastle.crypto.params.DHParameters.getM()", "public int getM()"], ["int", "org.bouncycastle.crypto.params.DHParameters.getL()", "public int getL()"], ["org.bouncycastle.crypto.params.DHValidationParameters", "org.bouncycastle.crypto.params.DHParameters.getValidationParameters()", "public org.bouncycastle.crypto.params.DHValidationParameters getValidationParameters()"], ["boolean", "org.bouncycastle.crypto.params.DHParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.DHParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.DHPrivateKeyParameters", "org.bouncycastle.crypto.params.DHPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.params.DHPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHPrivateKeyParameters.getX()", "public java.math.BigInteger getX()"], ["int", "org.bouncycastle.crypto.params.DHPrivateKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.DHPrivateKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.DHPublicKeyParameters", "org.bouncycastle.crypto.params.DHPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.params.DHPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DHParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DHPublicKeyParameters.getY()", "public java.math.BigInteger getY()"], ["int", "org.bouncycastle.crypto.params.DHPublicKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.DHPublicKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.DHValidationParameters", "org.bouncycastle.crypto.params.DHValidationParameters(byte[], int)", "public org.bouncycastle.crypto.params.DHValidationParameters(byte[], int)"], ["int", "org.bouncycastle.crypto.params.DHValidationParameters.getCounter()", "public int getCounter()"], ["byte[]", "org.bouncycastle.crypto.params.DHValidationParameters.getSeed()", "public byte[] getSeed()"], ["boolean", "org.bouncycastle.crypto.params.DHValidationParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.DHValidationParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.DSAKeyGenerationParameters", "org.bouncycastle.crypto.params.DSAKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.DSAParameters)", "public org.bouncycastle.crypto.params.DSAKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.DSAParameters)"], ["org.bouncycastle.crypto.params.DSAParameters", "org.bouncycastle.crypto.params.DSAKeyGenerationParameters.getParameters()", "public org.bouncycastle.crypto.params.DSAParameters getParameters()"], ["org.bouncycastle.crypto.params.DSAKeyParameters", "org.bouncycastle.crypto.params.DSAKeyParameters(boolean, org.bouncycastle.crypto.params.DSAParameters)", "public org.bouncycastle.crypto.params.DSAKeyParameters(boolean, org.bouncycastle.crypto.params.DSAParameters)"], ["org.bouncycastle.crypto.params.DSAParameters", "org.bouncycastle.crypto.params.DSAKeyParameters.getParameters()", "public org.bouncycastle.crypto.params.DSAParameters getParameters()"], ["org.bouncycastle.crypto.params.DSAParameterGenerationParameters", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters(int, int, int, java.security.SecureRandom)", "public org.bouncycastle.crypto.params.DSAParameterGenerationParameters(int, int, int, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.DSAParameterGenerationParameters", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters(int, int, int, java.security.SecureRandom, int)", "public org.bouncycastle.crypto.params.DSAParameterGenerationParameters(int, int, int, java.security.SecureRandom, int)"], ["int", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters.getL()", "public int getL()"], ["int", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters.getCertainty()", "public int getCertainty()"], ["java.security.SecureRandom", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters.getRandom()", "public java.security.SecureRandom getRandom()"], ["int", "org.bouncycastle.crypto.params.DSAParameterGenerationParameters.getUsageIndex()", "public int getUsageIndex()"], ["org.bouncycastle.crypto.params.DSAParameters", "org.bouncycastle.crypto.params.DSAParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.DSAParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.DSAParameters", "org.bouncycastle.crypto.params.DSAParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.DSAValidationParameters)", "public org.bouncycastle.crypto.params.DSAParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.DSAValidationParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DSAParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DSAParameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DSAParameters.getG()", "public java.math.BigInteger getG()"], ["org.bouncycastle.crypto.params.DSAValidationParameters", "org.bouncycastle.crypto.params.DSAParameters.getValidationParameters()", "public org.bouncycastle.crypto.params.DSAValidationParameters getValidationParameters()"], ["boolean", "org.bouncycastle.crypto.params.DSAParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.DSAParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.DSAPrivateKeyParameters", "org.bouncycastle.crypto.params.DSAPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DSAParameters)", "public org.bouncycastle.crypto.params.DSAPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DSAParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DSAPrivateKeyParameters.getX()", "public java.math.BigInteger getX()"], ["org.bouncycastle.crypto.params.DSAPublicKeyParameters", "org.bouncycastle.crypto.params.DSAPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DSAParameters)", "public org.bouncycastle.crypto.params.DSAPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.DSAParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.DSAPublicKeyParameters.getY()", "public java.math.BigInteger getY()"], ["org.bouncycastle.crypto.params.DSAValidationParameters", "org.bouncycastle.crypto.params.DSAValidationParameters(byte[], int)", "public org.bouncycastle.crypto.params.DSAValidationParameters(byte[], int)"], ["org.bouncycastle.crypto.params.DSAValidationParameters", "org.bouncycastle.crypto.params.DSAValidationParameters(byte[], int, int)", "public org.bouncycastle.crypto.params.DSAValidationParameters(byte[], int, int)"], ["int", "org.bouncycastle.crypto.params.DSAValidationParameters.getCounter()", "public int getCounter()"], ["byte[]", "org.bouncycastle.crypto.params.DSAValidationParameters.getSeed()", "public byte[] getSeed()"], ["int", "org.bouncycastle.crypto.params.DSAValidationParameters.getUsageIndex()", "public int getUsageIndex()"], ["int", "org.bouncycastle.crypto.params.DSAValidationParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.DSAValidationParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.crypto.params.ECDomainParameters(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.crypto.params.ECDomainParameters.getCurve()", "public org.bouncycastle.math.ec.ECCurve getCurve()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.params.ECDomainParameters.getG()", "public org.bouncycastle.math.ec.ECPoint getG()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ECDomainParameters.getN()", "public java.math.BigInteger getN()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ECDomainParameters.getH()", "public java.math.BigInteger getH()"], ["byte[]", "org.bouncycastle.crypto.params.ECDomainParameters.getSeed()", "public byte[] getSeed()"], ["org.bouncycastle.crypto.params.ECKeyGenerationParameters", "org.bouncycastle.crypto.params.ECKeyGenerationParameters(org.bouncycastle.crypto.params.ECDomainParameters, java.security.SecureRandom)", "public org.bouncycastle.crypto.params.ECKeyGenerationParameters(org.bouncycastle.crypto.params.ECDomainParameters, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.params.ECKeyGenerationParameters.getDomainParameters()", "public org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters()"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.params.ECKeyParameters.getParameters()", "public org.bouncycastle.crypto.params.ECDomainParameters getParameters()"], ["org.bouncycastle.crypto.params.ECNamedDomainParameters", "org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.ECNamedDomainParameters", "org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.ECNamedDomainParameters", "org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.crypto.params.ECNamedDomainParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.crypto.params.ECNamedDomainParameters.getName()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getName()"], ["org.bouncycastle.crypto.params.ECPrivateKeyParameters", "org.bouncycastle.crypto.params.ECPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ECDomainParameters)", "public org.bouncycastle.crypto.params.ECPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ECDomainParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ECPrivateKeyParameters.getD()", "public java.math.BigInteger getD()"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.params.ECPublicKeyParameters(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.crypto.params.ECDomainParameters)", "public org.bouncycastle.crypto.params.ECPublicKeyParameters(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.crypto.params.ECDomainParameters)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.params.ECPublicKeyParameters.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters", "org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.ElGamalParameters)", "public org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.ElGamalParameters)"], ["org.bouncycastle.crypto.params.ElGamalParameters", "org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters.getParameters()", "public org.bouncycastle.crypto.params.ElGamalParameters getParameters()"], ["org.bouncycastle.crypto.params.ElGamalParameters", "org.bouncycastle.crypto.params.ElGamalKeyParameters.getParameters()", "public org.bouncycastle.crypto.params.ElGamalParameters getParameters()"], ["int", "org.bouncycastle.crypto.params.ElGamalKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.ElGamalKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.ElGamalParameters", "org.bouncycastle.crypto.params.ElGamalParameters(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.ElGamalParameters(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.ElGamalParameters", "org.bouncycastle.crypto.params.ElGamalParameters(java.math.BigInteger, java.math.BigInteger, int)", "public org.bouncycastle.crypto.params.ElGamalParameters(java.math.BigInteger, java.math.BigInteger, int)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ElGamalParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ElGamalParameters.getG()", "public java.math.BigInteger getG()"], ["int", "org.bouncycastle.crypto.params.ElGamalParameters.getL()", "public int getL()"], ["boolean", "org.bouncycastle.crypto.params.ElGamalParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.ElGamalParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters", "org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ElGamalParameters)", "public org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ElGamalParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.ElGamalPublicKeyParameters", "org.bouncycastle.crypto.params.ElGamalPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ElGamalParameters)", "public org.bouncycastle.crypto.params.ElGamalPublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.ElGamalParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.ElGamalPublicKeyParameters.getY()", "public java.math.BigInteger getY()"], ["int", "org.bouncycastle.crypto.params.ElGamalPublicKeyParameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.ElGamalPublicKeyParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.GOST3410KeyGenerationParameters", "org.bouncycastle.crypto.params.GOST3410KeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.GOST3410Parameters)", "public org.bouncycastle.crypto.params.GOST3410KeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.crypto.params.GOST3410Parameters)"], ["org.bouncycastle.crypto.params.GOST3410Parameters", "org.bouncycastle.crypto.params.GOST3410KeyGenerationParameters.getParameters()", "public org.bouncycastle.crypto.params.GOST3410Parameters getParameters()"], ["org.bouncycastle.crypto.params.GOST3410KeyParameters", "org.bouncycastle.crypto.params.GOST3410KeyParameters(boolean, org.bouncycastle.crypto.params.GOST3410Parameters)", "public org.bouncycastle.crypto.params.GOST3410KeyParameters(boolean, org.bouncycastle.crypto.params.GOST3410Parameters)"], ["org.bouncycastle.crypto.params.GOST3410Parameters", "org.bouncycastle.crypto.params.GOST3410KeyParameters.getParameters()", "public org.bouncycastle.crypto.params.GOST3410Parameters getParameters()"], ["org.bouncycastle.crypto.params.GOST3410Parameters", "org.bouncycastle.crypto.params.GOST3410Parameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.GOST3410Parameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.GOST3410Parameters", "org.bouncycastle.crypto.params.GOST3410Parameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410ValidationParameters)", "public org.bouncycastle.crypto.params.GOST3410Parameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410ValidationParameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.GOST3410Parameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.GOST3410Parameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.GOST3410Parameters.getA()", "public java.math.BigInteger getA()"], ["org.bouncycastle.crypto.params.GOST3410ValidationParameters", "org.bouncycastle.crypto.params.GOST3410Parameters.getValidationParameters()", "public org.bouncycastle.crypto.params.GOST3410ValidationParameters getValidationParameters()"], ["int", "org.bouncycastle.crypto.params.GOST3410Parameters.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.crypto.params.GOST3410Parameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters", "org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410Parameters)", "public org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410Parameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters.getX()", "public java.math.BigInteger getX()"], ["org.bouncycastle.crypto.params.GOST3410PublicKeyParameters", "org.bouncycastle.crypto.params.GOST3410PublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410Parameters)", "public org.bouncycastle.crypto.params.GOST3410PublicKeyParameters(java.math.BigInteger, org.bouncycastle.crypto.params.GOST3410Parameters)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.GOST3410PublicKeyParameters.getY()", "public java.math.BigInteger getY()"], ["org.bouncycastle.crypto.params.GOST3410ValidationParameters", "org.bouncycastle.crypto.params.GOST3410ValidationParameters(int, int)", "public org.bouncycastle.crypto.params.GOST3410ValidationParameters(int, int)"], ["org.bouncycastle.crypto.params.GOST3410ValidationParameters", "org.bouncycastle.crypto.params.GOST3410ValidationParameters(long, long)", "public org.bouncycastle.crypto.params.GOST3410ValidationParameters(long, long)"], ["int", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.getC()", "public int getC()"], ["int", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.getX0()", "public int getX0()"], ["long", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.getCL()", "public long getCL()"], ["long", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.getX0L()", "public long getX0L()"], ["boolean", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.params.GOST3410ValidationParameters.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.params.HKDFParameters", "org.bouncycastle.crypto.params.HKDFParameters(byte[], byte[], byte[])", "public org.bouncycastle.crypto.params.HKDFParameters(byte[], byte[], byte[])"], ["org.bouncycastle.crypto.params.HKDFParameters", "org.bouncycastle.crypto.params.HKDFParameters.skipExtractParameters(byte[], byte[])", "public static org.bouncycastle.crypto.params.HKDFParameters skipExtractParameters(byte[], byte[])"], ["org.bouncycastle.crypto.params.HKDFParameters", "org.bouncycastle.crypto.params.HKDFParameters.defaultParameters(byte[])", "public static org.bouncycastle.crypto.params.HKDFParameters defaultParameters(byte[])"], ["byte[]", "org.bouncycastle.crypto.params.HKDFParameters.getIKM()", "public byte[] getIKM()"], ["boolean", "org.bouncycastle.crypto.params.HKDFParameters.skipExtract()", "public boolean skipExtract()"], ["byte[]", "org.bouncycastle.crypto.params.HKDFParameters.getSalt()", "public byte[] getSalt()"], ["byte[]", "org.bouncycastle.crypto.params.HKDFParameters.getInfo()", "public byte[] getInfo()"], ["org.bouncycastle.crypto.params.IESParameters", "org.bouncycastle.crypto.params.IESParameters(byte[], byte[], int)", "public org.bouncycastle.crypto.params.IESParameters(byte[], byte[], int)"], ["byte[]", "org.bouncycastle.crypto.params.IESParameters.getDerivationV()", "public byte[] getDerivationV()"], ["byte[]", "org.bouncycastle.crypto.params.IESParameters.getEncodingV()", "public byte[] getEncodingV()"], ["int", "org.bouncycastle.crypto.params.IESParameters.getMacKeySize()", "public int getMacKeySize()"], ["org.bouncycastle.crypto.params.IESWithCipherParameters", "org.bouncycastle.crypto.params.IESWithCipherParameters(byte[], byte[], int, int)", "public org.bouncycastle.crypto.params.IESWithCipherParameters(byte[], byte[], int, int)"], ["int", "org.bouncycastle.crypto.params.IESWithCipherParameters.getCipherKeySize()", "public int getCipherKeySize()"], ["org.bouncycastle.crypto.params.ISO18033KDFParameters", "org.bouncycastle.crypto.params.ISO18033KDFParameters(byte[])", "public org.bouncycastle.crypto.params.ISO18033KDFParameters(byte[])"], ["byte[]", "org.bouncycastle.crypto.params.ISO18033KDFParameters.getSeed()", "public byte[] getSeed()"], ["org.bouncycastle.crypto.params.KDFCounterParameters", "org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], int)", "public org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], int)"], ["org.bouncycastle.crypto.params.KDFCounterParameters", "org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], byte[], int)", "public org.bouncycastle.crypto.params.KDFCounterParameters(byte[], byte[], byte[], int)"], ["byte[]", "org.bouncycastle.crypto.params.KDFCounterParameters.getKI()", "public byte[] getKI()"], ["byte[]", "org.bouncycastle.crypto.params.KDFCounterParameters.getFixedInputData()", "public byte[] getFixedInputData()"], ["byte[]", "org.bouncycastle.crypto.params.KDFCounterParameters.getFixedInputDataCounterPrefix()", "public byte[] getFixedInputDataCounterPrefix()"], ["byte[]", "org.bouncycastle.crypto.params.KDFCounterParameters.getFixedInputDataCounterSuffix()", "public byte[] getFixedInputDataCounterSuffix()"], ["int", "org.bouncycastle.crypto.params.KDFCounterParameters.getR()", "public int getR()"], ["org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.createWithCounter(byte[], byte[], int)", "public static org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters createWithCounter(byte[], byte[], int)"], ["org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.createWithoutCounter(byte[], byte[])", "public static org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters createWithoutCounter(byte[], byte[])"], ["byte[]", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.getKI()", "public byte[] getKI()"], ["boolean", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.useCounter()", "public boolean useCounter()"], ["int", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.getR()", "public int getR()"], ["byte[]", "org.bouncycastle.crypto.params.KDFDoublePipelineIterationParameters.getFixedInputData()", "public byte[] getFixedInputData()"], ["org.bouncycastle.crypto.params.KDFFeedbackParameters", "org.bouncycastle.crypto.params.KDFFeedbackParameters.createWithCounter(byte[], byte[], byte[], int)", "public static org.bouncycastle.crypto.params.KDFFeedbackParameters createWithCounter(byte[], byte[], byte[], int)"], ["org.bouncycastle.crypto.params.KDFFeedbackParameters", "org.bouncycastle.crypto.params.KDFFeedbackParameters.createWithoutCounter(byte[], byte[], byte[])", "public static org.bouncycastle.crypto.params.KDFFeedbackParameters createWithoutCounter(byte[], byte[], byte[])"], ["byte[]", "org.bouncycastle.crypto.params.KDFFeedbackParameters.getKI()", "public byte[] getKI()"], ["byte[]", "org.bouncycastle.crypto.params.KDFFeedbackParameters.getIV()", "public byte[] getIV()"], ["boolean", "org.bouncycastle.crypto.params.KDFFeedbackParameters.useCounter()", "public boolean useCounter()"], ["int", "org.bouncycastle.crypto.params.KDFFeedbackParameters.getR()", "public int getR()"], ["byte[]", "org.bouncycastle.crypto.params.KDFFeedbackParameters.getFixedInputData()", "public byte[] getFixedInputData()"], ["org.bouncycastle.crypto.params.KDFParameters", "org.bouncycastle.crypto.params.KDFParameters(byte[], byte[])", "public org.bouncycastle.crypto.params.KDFParameters(byte[], byte[])"], ["byte[]", "org.bouncycastle.crypto.params.KDFParameters.getSharedSecret()", "public byte[] getSharedSecret()"], ["byte[]", "org.bouncycastle.crypto.params.KDFParameters.getIV()", "public byte[] getIV()"], ["org.bouncycastle.crypto.params.KeyParameter", "org.bouncycastle.crypto.params.KeyParameter(byte[])", "public org.bouncycastle.crypto.params.KeyParameter(byte[])"], ["org.bouncycastle.crypto.params.KeyParameter", "org.bouncycastle.crypto.params.KeyParameter(byte[], int, int)", "public org.bouncycastle.crypto.params.KeyParameter(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.params.KeyParameter.getKey()", "public byte[] getKey()"], ["org.bouncycastle.crypto.params.MGFParameters", "org.bouncycastle.crypto.params.MGFParameters(byte[])", "public org.bouncycastle.crypto.params.MGFParameters(byte[])"], ["org.bouncycastle.crypto.params.MGFParameters", "org.bouncycastle.crypto.params.MGFParameters(byte[], int, int)", "public org.bouncycastle.crypto.params.MGFParameters(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.params.MGFParameters.getSeed()", "public byte[] getSeed()"], ["org.bouncycastle.crypto.params.MQVPrivateParameters", "org.bouncycastle.crypto.params.MQVPrivateParameters(org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters)", "public org.bouncycastle.crypto.params.MQVPrivateParameters(org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters)"], ["org.bouncycastle.crypto.params.MQVPrivateParameters", "org.bouncycastle.crypto.params.MQVPrivateParameters(org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public org.bouncycastle.crypto.params.MQVPrivateParameters(org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.crypto.params.ECPublicKeyParameters)"], ["org.bouncycastle.crypto.params.ECPrivateKeyParameters", "org.bouncycastle.crypto.params.MQVPrivateParameters.getStaticPrivateKey()", "public org.bouncycastle.crypto.params.ECPrivateKeyParameters getStaticPrivateKey()"], ["org.bouncycastle.crypto.params.ECPrivateKeyParameters", "org.bouncycastle.crypto.params.MQVPrivateParameters.getEphemeralPrivateKey()", "public org.bouncycastle.crypto.params.ECPrivateKeyParameters getEphemeralPrivateKey()"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.params.MQVPrivateParameters.getEphemeralPublicKey()", "public org.bouncycastle.crypto.params.ECPublicKeyParameters getEphemeralPublicKey()"], ["org.bouncycastle.crypto.params.MQVPublicParameters", "org.bouncycastle.crypto.params.MQVPublicParameters(org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public org.bouncycastle.crypto.params.MQVPublicParameters(org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.crypto.params.ECPublicKeyParameters)"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.params.MQVPublicParameters.getStaticPublicKey()", "public org.bouncycastle.crypto.params.ECPublicKeyParameters getStaticPublicKey()"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.params.MQVPublicParameters.getEphemeralPublicKey()", "public org.bouncycastle.crypto.params.ECPublicKeyParameters getEphemeralPublicKey()"], ["org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters", "org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters(java.security.SecureRandom, int, int, int)", "public org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters(java.security.SecureRandom, int, int, int)"], ["org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters", "org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters(java.security.SecureRandom, int, int, int, boolean)", "public org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters(java.security.SecureRandom, int, int, int, boolean)"], ["int", "org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters.getCertainty()", "public int getCertainty()"], ["int", "org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters.getCntSmallPrimes()", "public int getCntSmallPrimes()"], ["boolean", "org.bouncycastle.crypto.params.NaccacheSternKeyGenerationParameters.isDebug()", "public boolean isDebug()"], ["org.bouncycastle.crypto.params.NaccacheSternKeyParameters", "org.bouncycastle.crypto.params.NaccacheSternKeyParameters(boolean, java.math.BigInteger, java.math.BigInteger, int)", "public org.bouncycastle.crypto.params.NaccacheSternKeyParameters(boolean, java.math.BigInteger, java.math.BigInteger, int)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.NaccacheSternKeyParameters.getG()", "public java.math.BigInteger getG()"], ["int", "org.bouncycastle.crypto.params.NaccacheSternKeyParameters.getLowerSigmaBound()", "public int getLowerSigmaBound()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.NaccacheSternKeyParameters.getModulus()", "public java.math.BigInteger getModulus()"], ["org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters", "org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters(java.math.BigInteger, java.math.BigInteger, int, java.util.Vector, java.math.BigInteger)", "public org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters(java.math.BigInteger, java.math.BigInteger, int, java.util.Vector, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters.getPhi_n()", "public java.math.BigInteger getPhi_n()"], ["java.util.Vector", "org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters.getSmallPrimes()", "public java.util.Vector getSmallPrimes()"], ["org.bouncycastle.crypto.params.ParametersWithIV", "org.bouncycastle.crypto.params.ParametersWithIV(org.bouncycastle.crypto.CipherParameters, byte[])", "public org.bouncycastle.crypto.params.ParametersWithIV(org.bouncycastle.crypto.CipherParameters, byte[])"], ["org.bouncycastle.crypto.params.ParametersWithIV", "org.bouncycastle.crypto.params.ParametersWithIV(org.bouncycastle.crypto.CipherParameters, byte[], int, int)", "public org.bouncycastle.crypto.params.ParametersWithIV(org.bouncycastle.crypto.CipherParameters, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.params.ParametersWithIV.getIV()", "public byte[] getIV()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.params.ParametersWithIV.getParameters()", "public org.bouncycastle.crypto.CipherParameters getParameters()"], ["org.bouncycastle.crypto.params.ParametersWithRandom", "org.bouncycastle.crypto.params.ParametersWithRandom(org.bouncycastle.crypto.CipherParameters, java.security.SecureRandom)", "public org.bouncycastle.crypto.params.ParametersWithRandom(org.bouncycastle.crypto.CipherParameters, java.security.SecureRandom)"], ["org.bouncycastle.crypto.params.ParametersWithRandom", "org.bouncycastle.crypto.params.ParametersWithRandom(org.bouncycastle.crypto.CipherParameters)", "public org.bouncycastle.crypto.params.ParametersWithRandom(org.bouncycastle.crypto.CipherParameters)"], ["java.security.SecureRandom", "org.bouncycastle.crypto.params.ParametersWithRandom.getRandom()", "public java.security.SecureRandom getRandom()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.params.ParametersWithRandom.getParameters()", "public org.bouncycastle.crypto.CipherParameters getParameters()"], ["org.bouncycastle.crypto.params.ParametersWithSBox", "org.bouncycastle.crypto.params.ParametersWithSBox(org.bouncycastle.crypto.CipherParameters, byte[])", "public org.bouncycastle.crypto.params.ParametersWithSBox(org.bouncycastle.crypto.CipherParameters, byte[])"], ["byte[]", "org.bouncycastle.crypto.params.ParametersWithSBox.getSBox()", "public byte[] getSBox()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.params.ParametersWithSBox.getParameters()", "public org.bouncycastle.crypto.CipherParameters getParameters()"], ["org.bouncycastle.crypto.params.ParametersWithSalt", "org.bouncycastle.crypto.params.ParametersWithSalt(org.bouncycastle.crypto.CipherParameters, byte[])", "public org.bouncycastle.crypto.params.ParametersWithSalt(org.bouncycastle.crypto.CipherParameters, byte[])"], ["org.bouncycastle.crypto.params.ParametersWithSalt", "org.bouncycastle.crypto.params.ParametersWithSalt(org.bouncycastle.crypto.CipherParameters, byte[], int, int)", "public org.bouncycastle.crypto.params.ParametersWithSalt(org.bouncycastle.crypto.CipherParameters, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.params.ParametersWithSalt.getSalt()", "public byte[] getSalt()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.crypto.params.ParametersWithSalt.getParameters()", "public org.bouncycastle.crypto.CipherParameters getParameters()"], ["org.bouncycastle.crypto.params.RC2Parameters", "org.bouncycastle.crypto.params.RC2Parameters(byte[])", "public org.bouncycastle.crypto.params.RC2Parameters(byte[])"], ["org.bouncycastle.crypto.params.RC2Parameters", "org.bouncycastle.crypto.params.RC2Parameters(byte[], int)", "public org.bouncycastle.crypto.params.RC2Parameters(byte[], int)"], ["byte[]", "org.bouncycastle.crypto.params.RC2Parameters.getKey()", "public byte[] getKey()"], ["int", "org.bouncycastle.crypto.params.RC2Parameters.getEffectiveKeyBits()", "public int getEffectiveKeyBits()"], ["org.bouncycastle.crypto.params.RC5Parameters", "org.bouncycastle.crypto.params.RC5Parameters(byte[], int)", "public org.bouncycastle.crypto.params.RC5Parameters(byte[], int)"], ["byte[]", "org.bouncycastle.crypto.params.RC5Parameters.getKey()", "public byte[] getKey()"], ["int", "org.bouncycastle.crypto.params.RC5Parameters.getRounds()", "public int getRounds()"], ["org.bouncycastle.crypto.params.RSABlindingParameters", "org.bouncycastle.crypto.params.RSABlindingParameters(org.bouncycastle.crypto.params.RSAKeyParameters, java.math.BigInteger)", "public org.bouncycastle.crypto.params.RSABlindingParameters(org.bouncycastle.crypto.params.RSAKeyParameters, java.math.BigInteger)"], ["org.bouncycastle.crypto.params.RSAKeyParameters", "org.bouncycastle.crypto.params.RSABlindingParameters.getPublicKey()", "public org.bouncycastle.crypto.params.RSAKeyParameters getPublicKey()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSABlindingParameters.getBlindingFactor()", "public java.math.BigInteger getBlindingFactor()"], ["org.bouncycastle.crypto.params.RSAKeyGenerationParameters", "org.bouncycastle.crypto.params.RSAKeyGenerationParameters(java.math.BigInteger, java.security.SecureRandom, int, int)", "public org.bouncycastle.crypto.params.RSAKeyGenerationParameters(java.math.BigInteger, java.security.SecureRandom, int, int)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAKeyGenerationParameters.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["int", "org.bouncycastle.crypto.params.RSAKeyGenerationParameters.getCertainty()", "public int getCertainty()"], ["org.bouncycastle.crypto.params.RSAKeyParameters", "org.bouncycastle.crypto.params.RSAKeyParameters(boolean, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.RSAKeyParameters(boolean, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAKeyParameters.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAKeyParameters.getExponent()", "public java.math.BigInteger getExponent()"], ["org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getDP()", "public java.math.BigInteger getDP()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getDQ()", "public java.math.BigInteger getDQ()"], ["java.math.BigInteger", "org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters.getQInv()", "public java.math.BigInteger getQInv()"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder()", "public org.bouncycastle.crypto.params.SkeinParameters$Builder()"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder(java.util.Hashtable)", "public org.bouncycastle.crypto.params.SkeinParameters$Builder(java.util.Hashtable)"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder(org.bouncycastle.crypto.params.SkeinParameters)", "public org.bouncycastle.crypto.params.SkeinParameters$Builder(org.bouncycastle.crypto.params.SkeinParameters)"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.set(int, byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder set(int, byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setKey(byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setKey(byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setPersonalisation(byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setPersonalisation(byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setPersonalisation(java.util.Date, java.lang.String, java.lang.String)", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setPersonalisation(java.util.Date, java.lang.String, java.lang.String)"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setPersonalisation(java.util.Date, java.util.Locale, java.lang.String, java.lang.String)", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setPersonalisation(java.util.Date, java.util.Locale, java.lang.String, java.lang.String)"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setPublicKey(byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setPublicKey(byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setKeyIdentifier(byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setKeyIdentifier(byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters$Builder", "org.bouncycastle.crypto.params.SkeinParameters$Builder.setNonce(byte[])", "public org.bouncycastle.crypto.params.SkeinParameters$Builder setNonce(byte[])"], ["org.bouncycastle.crypto.params.SkeinParameters", "org.bouncycastle.crypto.params.SkeinParameters$Builder.build()", "public org.bouncycastle.crypto.params.SkeinParameters build()"], ["org.bouncycastle.crypto.params.SkeinParameters", "org.bouncycastle.crypto.params.SkeinParameters()", "public org.bouncycastle.crypto.params.SkeinParameters()"], ["java.util.Hashtable", "org.bouncycastle.crypto.params.SkeinParameters.getParameters()", "public java.util.Hashtable getParameters()"], ["byte[]", "org.bouncycastle.crypto.params.SkeinParameters.getKey()", "public byte[] getKey()"], ["byte[]", "org.bouncycastle.crypto.params.SkeinParameters.getPersonalisation()", "public byte[] getPersonalisation()"], ["byte[]", "org.bouncycastle.crypto.params.SkeinParameters.getPublicKey()", "public byte[] getPublicKey()"], ["byte[]", "org.bouncycastle.crypto.params.SkeinParameters.getKeyIdentifier()", "public byte[] getKeyIdentifier()"], ["byte[]", "org.bouncycastle.crypto.params.SkeinParameters.getNonce()", "public byte[] getNonce()"], ["org.bouncycastle.crypto.params.TweakableBlockCipherParameters", "org.bouncycastle.crypto.params.TweakableBlockCipherParameters(org.bouncycastle.crypto.params.KeyParameter, byte[])", "public org.bouncycastle.crypto.params.TweakableBlockCipherParameters(org.bouncycastle.crypto.params.KeyParameter, byte[])"], ["org.bouncycastle.crypto.params.KeyParameter", "org.bouncycastle.crypto.params.TweakableBlockCipherParameters.getKey()", "public org.bouncycastle.crypto.params.KeyParameter getKey()"], ["byte[]", "org.bouncycastle.crypto.params.TweakableBlockCipherParameters.getTweak()", "public byte[] getTweak()"], ["org.bouncycastle.crypto.parsers.DHIESPublicKeyParser", "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser(org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.parsers.DHIESPublicKeyParser(org.bouncycastle.crypto.params.DHParameters)"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser.readKey(java.io.InputStream)", "public org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.parsers.ECIESPublicKeyParser", "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser(org.bouncycastle.crypto.params.ECDomainParameters)", "public org.bouncycastle.crypto.parsers.ECIESPublicKeyParser(org.bouncycastle.crypto.params.ECDomainParameters)"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser.readKey(java.io.InputStream)", "public org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1.isPredictionResistant()", "public boolean isPredictionResistant()"], ["byte[]", "org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1.getEntropy()", "public byte[] getEntropy()"], ["int", "org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1.entropySize()", "public int entropySize()"], ["org.bouncycastle.crypto.prng.BasicEntropySourceProvider", "org.bouncycastle.crypto.prng.BasicEntropySourceProvider(java.security.SecureRandom, boolean)", "public org.bouncycastle.crypto.prng.BasicEntropySourceProvider(java.security.SecureRandom, boolean)"], ["org.bouncycastle.crypto.prng.EntropySource", "org.bouncycastle.crypto.prng.BasicEntropySourceProvider.get(int)", "public org.bouncycastle.crypto.prng.EntropySource get(int)"], ["org.bouncycastle.crypto.prng.DigestRandomGenerator", "org.bouncycastle.crypto.prng.DigestRandomGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.prng.DigestRandomGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.prng.DigestRandomGenerator.addSeedMaterial(byte[])", "public void addSeedMaterial(byte[])"], ["void", "org.bouncycastle.crypto.prng.DigestRandomGenerator.addSeedMaterial(long)", "public void addSeedMaterial(long)"], ["void", "org.bouncycastle.crypto.prng.DigestRandomGenerator.nextBytes(byte[])", "public void nextBytes(byte[])"], ["void", "org.bouncycastle.crypto.prng.DigestRandomGenerator.nextBytes(byte[], int, int)", "public void nextBytes(byte[], int, int)"], ["org.bouncycastle.crypto.prng.FixedSecureRandom", "org.bouncycastle.crypto.prng.FixedSecureRandom(byte[])", "public org.bouncycastle.crypto.prng.FixedSecureRandom(byte[])"], ["org.bouncycastle.crypto.prng.FixedSecureRandom", "org.bouncycastle.crypto.prng.FixedSecureRandom(byte[][])", "public org.bouncycastle.crypto.prng.FixedSecureRandom(byte[][])"], ["org.bouncycastle.crypto.prng.FixedSecureRandom", "org.bouncycastle.crypto.prng.FixedSecureRandom(boolean, byte[])", "public org.bouncycastle.crypto.prng.FixedSecureRandom(boolean, byte[])"], ["org.bouncycastle.crypto.prng.FixedSecureRandom", "org.bouncycastle.crypto.prng.FixedSecureRandom(boolean, byte[][])", "public org.bouncycastle.crypto.prng.FixedSecureRandom(boolean, byte[][])"], ["void", "org.bouncycastle.crypto.prng.FixedSecureRandom.nextBytes(byte[])", "public void nextBytes(byte[])"], ["byte[]", "org.bouncycastle.crypto.prng.FixedSecureRandom.generateSeed(int)", "public byte[] generateSeed(int)"], ["int", "org.bouncycastle.crypto.prng.FixedSecureRandom.nextInt()", "public int nextInt()"], ["long", "org.bouncycastle.crypto.prng.FixedSecureRandom.nextLong()", "public long nextLong()"], ["boolean", "org.bouncycastle.crypto.prng.FixedSecureRandom.isExhausted()", "public boolean isExhausted()"], ["org.bouncycastle.crypto.prng.ReversedWindowGenerator", "org.bouncycastle.crypto.prng.ReversedWindowGenerator(org.bouncycastle.crypto.prng.RandomGenerator, int)", "public org.bouncycastle.crypto.prng.ReversedWindowGenerator(org.bouncycastle.crypto.prng.RandomGenerator, int)"], ["void", "org.bouncycastle.crypto.prng.ReversedWindowGenerator.addSeedMaterial(byte[])", "public void addSeedMaterial(byte[])"], ["void", "org.bouncycastle.crypto.prng.ReversedWindowGenerator.addSeedMaterial(long)", "public void addSeedMaterial(long)"], ["void", "org.bouncycastle.crypto.prng.ReversedWindowGenerator.nextBytes(byte[])", "public void nextBytes(byte[])"], ["void", "org.bouncycastle.crypto.prng.ReversedWindowGenerator.nextBytes(byte[], int, int)", "public void nextBytes(byte[], int, int)"], ["void", "org.bouncycastle.crypto.prng.SP800SecureRandom.setSeed(byte[])", "public void setSeed(byte[])"], ["void", "org.bouncycastle.crypto.prng.SP800SecureRandom.setSeed(long)", "public void setSeed(long)"], ["void", "org.bouncycastle.crypto.prng.SP800SecureRandom.nextBytes(byte[])", "public void nextBytes(byte[])"], ["byte[]", "org.bouncycastle.crypto.prng.SP800SecureRandom.generateSeed(int)", "public byte[] generateSeed(int)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider(org.bouncycastle.crypto.BlockCipher, int, byte[], byte[], int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider(org.bouncycastle.crypto.BlockCipher, int, byte[], byte[], int)"], ["org.bouncycastle.crypto.prng.drbg.SP80090DRBG", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider.get(org.bouncycastle.crypto.prng.EntropySource)", "public org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, byte[], byte[], int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, byte[], byte[], int)"], ["org.bouncycastle.crypto.prng.drbg.SP80090DRBG", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider.get(org.bouncycastle.crypto.prng.EntropySource)", "public org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider(org.bouncycastle.crypto.Digest, byte[], byte[], int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider(org.bouncycastle.crypto.Digest, byte[], byte[], int)"], ["org.bouncycastle.crypto.prng.drbg.SP80090DRBG", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider.get(org.bouncycastle.crypto.prng.EntropySource)", "public org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider(org.bouncycastle.crypto.Mac, byte[], byte[], int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider(org.bouncycastle.crypto.Mac, byte[], byte[], int)"], ["org.bouncycastle.crypto.prng.drbg.SP80090DRBG", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider.get(org.bouncycastle.crypto.prng.EntropySource)", "public org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider(org.bouncycastle.crypto.Digest, byte[], byte[], int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider(org.bouncycastle.crypto.Digest, byte[], byte[], int)"], ["org.bouncycastle.crypto.prng.drbg.SP80090DRBG", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider.get(org.bouncycastle.crypto.prng.EntropySource)", "public org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder()", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder()"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(java.security.SecureRandom, boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(java.security.SecureRandom, boolean)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(org.bouncycastle.crypto.prng.EntropySourceProvider)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(org.bouncycastle.crypto.prng.EntropySourceProvider)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.setPersonalizationString(byte[])", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setPersonalizationString(byte[])"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.setSecurityStrength(int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setSecurityStrength(int)"], ["org.bouncycastle.crypto.prng.SP800SecureRandomBuilder", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.setEntropyBitsRequired(int)", "public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setEntropyBitsRequired(int)"], ["org.bouncycastle.crypto.prng.SP800SecureRandom", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.buildHash(org.bouncycastle.crypto.Digest, byte[], boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandom buildHash(org.bouncycastle.crypto.Digest, byte[], boolean)"], ["org.bouncycastle.crypto.prng.SP800SecureRandom", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.buildCTR(org.bouncycastle.crypto.BlockCipher, int, byte[], boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandom buildCTR(org.bouncycastle.crypto.BlockCipher, int, byte[], boolean)"], ["org.bouncycastle.crypto.prng.SP800SecureRandom", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.buildHMAC(org.bouncycastle.crypto.Mac, byte[], boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandom buildHMAC(org.bouncycastle.crypto.Mac, byte[], boolean)"], ["org.bouncycastle.crypto.prng.SP800SecureRandom", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.buildDualEC(org.bouncycastle.crypto.Digest, byte[], boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandom buildDualEC(org.bouncycastle.crypto.Digest, byte[], boolean)"], ["org.bouncycastle.crypto.prng.SP800SecureRandom", "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder.buildDualEC(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, byte[], boolean)", "public org.bouncycastle.crypto.prng.SP800SecureRandom buildDualEC(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, byte[], boolean)"], ["void", "org.bouncycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator.run()", "public void run()"], ["byte[]", "org.bouncycastle.crypto.prng.ThreadedSeedGenerator$SeedGenerator.generateSeed(int, boolean)", "public byte[] generateSeed(int, boolean)"], ["org.bouncycastle.crypto.prng.ThreadedSeedGenerator", "org.bouncycastle.crypto.prng.ThreadedSeedGenerator()", "public org.bouncycastle.crypto.prng.ThreadedSeedGenerator()"], ["byte[]", "org.bouncycastle.crypto.prng.ThreadedSeedGenerator.generateSeed(int, boolean)", "public byte[] generateSeed(int, boolean)"], ["org.bouncycastle.crypto.prng.VMPCRandomGenerator", "org.bouncycastle.crypto.prng.VMPCRandomGenerator()", "public org.bouncycastle.crypto.prng.VMPCRandomGenerator()"], ["void", "org.bouncycastle.crypto.prng.VMPCRandomGenerator.addSeedMaterial(byte[])", "public void addSeedMaterial(byte[])"], ["void", "org.bouncycastle.crypto.prng.VMPCRandomGenerator.addSeedMaterial(long)", "public void addSeedMaterial(long)"], ["void", "org.bouncycastle.crypto.prng.VMPCRandomGenerator.nextBytes(byte[])", "public void nextBytes(byte[])"], ["void", "org.bouncycastle.crypto.prng.VMPCRandomGenerator.nextBytes(byte[], int, int)", "public void nextBytes(byte[], int, int)"], ["org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG", "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG(org.bouncycastle.crypto.BlockCipher, int, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])", "public org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG(org.bouncycastle.crypto.BlockCipher, int, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])"], ["int", "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.generate(byte[], byte[], boolean)", "public int generate(byte[], byte[], boolean)"], ["void", "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.reseed(byte[])", "public void reseed(byte[])"], ["org.bouncycastle.crypto.prng.drbg.DualECPoints", "org.bouncycastle.crypto.prng.drbg.DualECPoints(int, org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPoint, int)", "public org.bouncycastle.crypto.prng.drbg.DualECPoints(int, org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPoint, int)"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getSeedLen()", "public int getSeedLen()"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getMaxOutlen()", "public int getMaxOutlen()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getP()", "public org.bouncycastle.math.ec.ECPoint getP()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getSecurityStrength()", "public int getSecurityStrength()"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECPoints.getCofactor()", "public int getCofactor()"], ["org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG", "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG(org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])", "public org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG(org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])"], ["org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG", "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])", "public org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.generate(byte[], byte[], boolean)", "public int generate(byte[], byte[], boolean)"], ["void", "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG.reseed(byte[])", "public void reseed(byte[])"], ["org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG", "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG(org.bouncycastle.crypto.Mac, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])", "public org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG(org.bouncycastle.crypto.Mac, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])"], ["int", "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.generate(byte[], byte[], boolean)", "public int generate(byte[], byte[], boolean)"], ["void", "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG.reseed(byte[])", "public void reseed(byte[])"], ["org.bouncycastle.crypto.prng.drbg.HashSP800DRBG", "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG(org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])", "public org.bouncycastle.crypto.prng.drbg.HashSP800DRBG(org.bouncycastle.crypto.Digest, int, org.bouncycastle.crypto.prng.EntropySource, byte[], byte[])"], ["int", "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG.getBlockSize()", "public int getBlockSize()"], ["int", "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG.generate(byte[], byte[], boolean)", "public int generate(byte[], byte[], boolean)"], ["void", "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG.reseed(byte[])", "public void reseed(byte[])"], ["org.bouncycastle.crypto.signers.DSADigestSigner", "org.bouncycastle.crypto.signers.DSADigestSigner(org.bouncycastle.crypto.DSA, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.signers.DSADigestSigner(org.bouncycastle.crypto.DSA, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.signers.DSADigestSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.DSADigestSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.DSADigestSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.signers.DSADigestSigner.generateSignature()", "public byte[] generateSignature()"], ["boolean", "org.bouncycastle.crypto.signers.DSADigestSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["void", "org.bouncycastle.crypto.signers.DSADigestSigner.reset()", "public void reset()"], ["org.bouncycastle.crypto.signers.DSASigner", "org.bouncycastle.crypto.signers.DSASigner()", "public org.bouncycastle.crypto.signers.DSASigner()"], ["org.bouncycastle.crypto.signers.DSASigner", "org.bouncycastle.crypto.signers.DSASigner(org.bouncycastle.crypto.signers.DSAKCalculator)", "public org.bouncycastle.crypto.signers.DSASigner(org.bouncycastle.crypto.signers.DSAKCalculator)"], ["void", "org.bouncycastle.crypto.signers.DSASigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.DSASigner.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.DSASigner.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.DSTU4145Signer", "org.bouncycastle.crypto.signers.DSTU4145Signer()", "public org.bouncycastle.crypto.signers.DSTU4145Signer()"], ["void", "org.bouncycastle.crypto.signers.DSTU4145Signer.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.DSTU4145Signer.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.DSTU4145Signer.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.ECDSASigner", "org.bouncycastle.crypto.signers.ECDSASigner()", "public org.bouncycastle.crypto.signers.ECDSASigner()"], ["org.bouncycastle.crypto.signers.ECDSASigner", "org.bouncycastle.crypto.signers.ECDSASigner(org.bouncycastle.crypto.signers.DSAKCalculator)", "public org.bouncycastle.crypto.signers.ECDSASigner(org.bouncycastle.crypto.signers.DSAKCalculator)"], ["void", "org.bouncycastle.crypto.signers.ECDSASigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.ECDSASigner.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.ECDSASigner.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.ECGOST3410Signer", "org.bouncycastle.crypto.signers.ECGOST3410Signer()", "public org.bouncycastle.crypto.signers.ECGOST3410Signer()"], ["void", "org.bouncycastle.crypto.signers.ECGOST3410Signer.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.ECGOST3410Signer.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.ECGOST3410Signer.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.ECNRSigner", "org.bouncycastle.crypto.signers.ECNRSigner()", "public org.bouncycastle.crypto.signers.ECNRSigner()"], ["void", "org.bouncycastle.crypto.signers.ECNRSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.ECNRSigner.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.ECNRSigner.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.GOST3410Signer", "org.bouncycastle.crypto.signers.GOST3410Signer()", "public org.bouncycastle.crypto.signers.GOST3410Signer()"], ["void", "org.bouncycastle.crypto.signers.GOST3410Signer.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.crypto.signers.GOST3410Signer.generateSignature(byte[])", "public java.math.BigInteger[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.GOST3410Signer.verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)", "public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.crypto.signers.GenericSigner", "org.bouncycastle.crypto.signers.GenericSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.signers.GenericSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.signers.GenericSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.GenericSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.GenericSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.signers.GenericSigner.generateSignature()", "public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException"], ["boolean", "org.bouncycastle.crypto.signers.GenericSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["void", "org.bouncycastle.crypto.signers.GenericSigner.reset()", "public void reset()"], ["org.bouncycastle.crypto.signers.HMacDSAKCalculator", "org.bouncycastle.crypto.signers.HMacDSAKCalculator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.signers.HMacDSAKCalculator(org.bouncycastle.crypto.Digest)"], ["boolean", "org.bouncycastle.crypto.signers.HMacDSAKCalculator.isDeterministic()", "public boolean isDeterministic()"], ["void", "org.bouncycastle.crypto.signers.HMacDSAKCalculator.init(java.math.BigInteger, java.security.SecureRandom)", "public void init(java.math.BigInteger, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.signers.HMacDSAKCalculator.init(java.math.BigInteger, java.math.BigInteger, byte[])", "public void init(java.math.BigInteger, java.math.BigInteger, byte[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.signers.HMacDSAKCalculator.nextK()", "public java.math.BigInteger nextK()"], ["org.bouncycastle.crypto.signers.ISO9796d2PSSSigner", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, boolean)", "public org.bouncycastle.crypto.signers.ISO9796d2PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, boolean)"], ["org.bouncycastle.crypto.signers.ISO9796d2PSSSigner", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.crypto.signers.ISO9796d2PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.updateWithRecoveredMessage(byte[])", "public void updateWithRecoveredMessage(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.reset()", "public void reset()"], ["byte[]", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.generateSignature()", "public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.hasFullMessage()", "public boolean hasFullMessage()"], ["byte[]", "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner.getRecoveredMessage()", "public byte[] getRecoveredMessage()"], ["org.bouncycastle.crypto.signers.ISO9796d2Signer", "org.bouncycastle.crypto.signers.ISO9796d2Signer(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, boolean)", "public org.bouncycastle.crypto.signers.ISO9796d2Signer(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, boolean)"], ["org.bouncycastle.crypto.signers.ISO9796d2Signer", "org.bouncycastle.crypto.signers.ISO9796d2Signer(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.signers.ISO9796d2Signer(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2Signer.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2Signer.updateWithRecoveredMessage(byte[])", "public void updateWithRecoveredMessage(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2Signer.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2Signer.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.signers.ISO9796d2Signer.reset()", "public void reset()"], ["byte[]", "org.bouncycastle.crypto.signers.ISO9796d2Signer.generateSignature()", "public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.signers.ISO9796d2Signer.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["boolean", "org.bouncycastle.crypto.signers.ISO9796d2Signer.hasFullMessage()", "public boolean hasFullMessage()"], ["byte[]", "org.bouncycastle.crypto.signers.ISO9796d2Signer.getRecoveredMessage()", "public byte[] getRecoveredMessage()"], ["org.bouncycastle.crypto.signers.PSSSigner", "org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)"], ["org.bouncycastle.crypto.signers.PSSSigner", "org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int)"], ["org.bouncycastle.crypto.signers.PSSSigner", "org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, byte)", "public org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, byte)"], ["org.bouncycastle.crypto.signers.PSSSigner", "org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, byte)", "public org.bouncycastle.crypto.signers.PSSSigner(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, byte)"], ["void", "org.bouncycastle.crypto.signers.PSSSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.PSSSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.PSSSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.crypto.signers.PSSSigner.reset()", "public void reset()"], ["byte[]", "org.bouncycastle.crypto.signers.PSSSigner.generateSignature()", "public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException"], ["boolean", "org.bouncycastle.crypto.signers.PSSSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["org.bouncycastle.crypto.signers.RSADigestSigner", "org.bouncycastle.crypto.signers.RSADigestSigner(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.signers.RSADigestSigner(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.signers.RSADigestSigner", "org.bouncycastle.crypto.signers.RSADigestSigner(org.bouncycastle.crypto.Digest, org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.crypto.signers.RSADigestSigner(org.bouncycastle.crypto.Digest, org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.lang.String", "org.bouncycastle.crypto.signers.RSADigestSigner.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["void", "org.bouncycastle.crypto.signers.RSADigestSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["void", "org.bouncycastle.crypto.signers.RSADigestSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.signers.RSADigestSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.signers.RSADigestSigner.generateSignature()", "public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException"], ["boolean", "org.bouncycastle.crypto.signers.RSADigestSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["void", "org.bouncycastle.crypto.signers.RSADigestSigner.reset()", "public void reset()"], ["boolean", "org.bouncycastle.crypto.signers.RandomDSAKCalculator.isDeterministic()", "public boolean isDeterministic()"], ["void", "org.bouncycastle.crypto.signers.RandomDSAKCalculator.init(java.math.BigInteger, java.security.SecureRandom)", "public void init(java.math.BigInteger, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.signers.RandomDSAKCalculator.init(java.math.BigInteger, java.math.BigInteger, byte[])", "public void init(java.math.BigInteger, java.math.BigInteger, byte[])"], ["java.math.BigInteger", "org.bouncycastle.crypto.signers.RandomDSAKCalculator.nextK()", "public java.math.BigInteger nextK()"], ["org.bouncycastle.crypto.tls.AbstractTlsAgreementCredentials", "org.bouncycastle.crypto.tls.AbstractTlsAgreementCredentials()", "public org.bouncycastle.crypto.tls.AbstractTlsAgreementCredentials()"], ["org.bouncycastle.crypto.tls.AbstractTlsCipherFactory", "org.bouncycastle.crypto.tls.AbstractTlsCipherFactory()", "public org.bouncycastle.crypto.tls.AbstractTlsCipherFactory()"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.AbstractTlsCipherFactory.createCipher(org.bouncycastle.crypto.tls.TlsContext, int, int)", "public org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext, int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.AbstractTlsClient", "org.bouncycastle.crypto.tls.AbstractTlsClient()", "public org.bouncycastle.crypto.tls.AbstractTlsClient()"], ["org.bouncycastle.crypto.tls.AbstractTlsClient", "org.bouncycastle.crypto.tls.AbstractTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory)", "public org.bouncycastle.crypto.tls.AbstractTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.init(org.bouncycastle.crypto.tls.TlsClientContext)", "public void init(org.bouncycastle.crypto.tls.TlsClientContext)"], ["org.bouncycastle.crypto.tls.TlsSession", "org.bouncycastle.crypto.tls.AbstractTlsClient.getSessionToResume()", "public org.bouncycastle.crypto.tls.TlsSession getSessionToResume()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsClient.getClientHelloRecordLayerVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getClientHelloRecordLayerVersion()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsClient.getClientVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getClientVersion()"], ["java.util.Hashtable", "org.bouncycastle.crypto.tls.AbstractTlsClient.getClientExtensions()", "public java.util.Hashtable getClientExtensions() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsClient.getMinimumVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.notifyServerVersion(org.bouncycastle.crypto.tls.ProtocolVersion)", "public void notifyServerVersion(org.bouncycastle.crypto.tls.ProtocolVersion) throws java.io.IOException"], ["short[]", "org.bouncycastle.crypto.tls.AbstractTlsClient.getCompressionMethods()", "public short[] getCompressionMethods()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.notifySessionID(byte[])", "public void notifySessionID(byte[])"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.notifySelectedCipherSuite(int)", "public void notifySelectedCipherSuite(int)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.notifySelectedCompressionMethod(short)", "public void notifySelectedCompressionMethod(short)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.processServerExtensions(java.util.Hashtable)", "public void processServerExtensions(java.util.Hashtable) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.processServerSupplementalData(java.util.Vector)", "public void processServerSupplementalData(java.util.Vector) throws java.io.IOException"], ["java.util.Vector", "org.bouncycastle.crypto.tls.AbstractTlsClient.getClientSupplementalData()", "public java.util.Vector getClientSupplementalData() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCompression", "org.bouncycastle.crypto.tls.AbstractTlsClient.getCompression()", "public org.bouncycastle.crypto.tls.TlsCompression getCompression() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsClient.notifyNewSessionTicket(org.bouncycastle.crypto.tls.NewSessionTicket)", "public void notifyNewSessionTicket(org.bouncycastle.crypto.tls.NewSessionTicket) throws java.io.IOException"], ["org.bouncycastle.crypto.prng.RandomGenerator", "org.bouncycastle.crypto.tls.AbstractTlsContext.getNonceRandomGenerator()", "public org.bouncycastle.crypto.prng.RandomGenerator getNonceRandomGenerator()"], ["java.security.SecureRandom", "org.bouncycastle.crypto.tls.AbstractTlsContext.getSecureRandom()", "public java.security.SecureRandom getSecureRandom()"], ["org.bouncycastle.crypto.tls.SecurityParameters", "org.bouncycastle.crypto.tls.AbstractTlsContext.getSecurityParameters()", "public org.bouncycastle.crypto.tls.SecurityParameters getSecurityParameters()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsContext.getClientVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getClientVersion()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsContext.getServerVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getServerVersion()"], ["org.bouncycastle.crypto.tls.TlsSession", "org.bouncycastle.crypto.tls.AbstractTlsContext.getResumableSession()", "public org.bouncycastle.crypto.tls.TlsSession getResumableSession()"], ["java.lang.Object", "org.bouncycastle.crypto.tls.AbstractTlsContext.getUserObject()", "public java.lang.Object getUserObject()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsContext.setUserObject(java.lang.Object)", "public void setUserObject(java.lang.Object)"], ["byte[]", "org.bouncycastle.crypto.tls.AbstractTlsContext.exportKeyingMaterial(java.lang.String, byte[], int)", "public byte[] exportKeyingMaterial(java.lang.String, byte[], int)"], ["org.bouncycastle.crypto.tls.AbstractTlsCredentials", "org.bouncycastle.crypto.tls.AbstractTlsCredentials()", "public org.bouncycastle.crypto.tls.AbstractTlsCredentials()"], ["org.bouncycastle.crypto.tls.AbstractTlsEncryptionCredentials", "org.bouncycastle.crypto.tls.AbstractTlsEncryptionCredentials()", "public org.bouncycastle.crypto.tls.AbstractTlsEncryptionCredentials()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.requiresServerKeyExchange()", "public boolean requiresServerKeyExchange()"], ["byte[]", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.generateServerKeyExchange()", "public byte[] generateServerKeyExchange() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.skipServerKeyExchange()", "public void skipServerKeyExchange() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.processServerKeyExchange(java.io.InputStream)", "public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.skipClientCredentials()", "public void skipClientCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.processClientCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processClientCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange.processClientKeyExchange(java.io.InputStream)", "public void processClientKeyExchange(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.AbstractTlsPeer", "org.bouncycastle.crypto.tls.AbstractTlsPeer()", "public org.bouncycastle.crypto.tls.AbstractTlsPeer()"], ["boolean", "org.bouncycastle.crypto.tls.AbstractTlsPeer.shouldUseGMTUnixTime()", "public boolean shouldUseGMTUnixTime()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsPeer.notifySecureRenegotiation(boolean)", "public void notifySecureRenegotiation(boolean) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsPeer.notifyAlertRaised(short, short, java.lang.String, java.lang.Exception)", "public void notifyAlertRaised(short, short, java.lang.String, java.lang.Exception)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsPeer.notifyAlertReceived(short, short)", "public void notifyAlertReceived(short, short)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsPeer.notifyHandshakeComplete()", "public void notifyHandshakeComplete() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.AbstractTlsServer", "org.bouncycastle.crypto.tls.AbstractTlsServer()", "public org.bouncycastle.crypto.tls.AbstractTlsServer()"], ["org.bouncycastle.crypto.tls.AbstractTlsServer", "org.bouncycastle.crypto.tls.AbstractTlsServer(org.bouncycastle.crypto.tls.TlsCipherFactory)", "public org.bouncycastle.crypto.tls.AbstractTlsServer(org.bouncycastle.crypto.tls.TlsCipherFactory)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.init(org.bouncycastle.crypto.tls.TlsServerContext)", "public void init(org.bouncycastle.crypto.tls.TlsServerContext)"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.notifyClientVersion(org.bouncycastle.crypto.tls.ProtocolVersion)", "public void notifyClientVersion(org.bouncycastle.crypto.tls.ProtocolVersion) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.notifyOfferedCipherSuites(int[])", "public void notifyOfferedCipherSuites(int[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.notifyOfferedCompressionMethods(short[])", "public void notifyOfferedCompressionMethods(short[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.processClientExtensions(java.util.Hashtable)", "public void processClientExtensions(java.util.Hashtable) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.AbstractTlsServer.getServerVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getServerVersion() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.AbstractTlsServer.getSelectedCipherSuite()", "public int getSelectedCipherSuite() throws java.io.IOException"], ["short", "org.bouncycastle.crypto.tls.AbstractTlsServer.getSelectedCompressionMethod()", "public short getSelectedCompressionMethod() throws java.io.IOException"], ["java.util.Hashtable", "org.bouncycastle.crypto.tls.AbstractTlsServer.getServerExtensions()", "public java.util.Hashtable getServerExtensions() throws java.io.IOException"], ["java.util.Vector", "org.bouncycastle.crypto.tls.AbstractTlsServer.getServerSupplementalData()", "public java.util.Vector getServerSupplementalData() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatus", "org.bouncycastle.crypto.tls.AbstractTlsServer.getCertificateStatus()", "public org.bouncycastle.crypto.tls.CertificateStatus getCertificateStatus() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateRequest", "org.bouncycastle.crypto.tls.AbstractTlsServer.getCertificateRequest()", "public org.bouncycastle.crypto.tls.CertificateRequest getCertificateRequest() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.processClientSupplementalData(java.util.Vector)", "public void processClientSupplementalData(java.util.Vector) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsServer.notifyClientCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void notifyClientCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCompression", "org.bouncycastle.crypto.tls.AbstractTlsServer.getCompression()", "public org.bouncycastle.crypto.tls.TlsCompression getCompression() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.NewSessionTicket", "org.bouncycastle.crypto.tls.AbstractTlsServer.getNewSessionTicket()", "public org.bouncycastle.crypto.tls.NewSessionTicket getNewSessionTicket() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.AbstractTlsSigner", "org.bouncycastle.crypto.tls.AbstractTlsSigner()", "public org.bouncycastle.crypto.tls.AbstractTlsSigner()"], ["void", "org.bouncycastle.crypto.tls.AbstractTlsSigner.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["byte[]", "org.bouncycastle.crypto.tls.AbstractTlsSigner.generateRawSignature(org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public byte[] generateRawSignature(org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.tls.AbstractTlsSigner.verifyRawSignature(byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public boolean verifyRawSignature(byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.AbstractTlsSigner.createSigner(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.AbstractTlsSigner.createVerifyer(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.AbstractTlsSignerCredentials", "org.bouncycastle.crypto.tls.AbstractTlsSignerCredentials()", "public org.bouncycastle.crypto.tls.AbstractTlsSignerCredentials()"], ["org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm", "org.bouncycastle.crypto.tls.AbstractTlsSignerCredentials.getSignatureAndHashAlgorithm()", "public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm getSignatureAndHashAlgorithm()"], ["org.bouncycastle.crypto.tls.AlertDescription", "org.bouncycastle.crypto.tls.AlertDescription()", "public org.bouncycastle.crypto.tls.AlertDescription()"], ["org.bouncycastle.crypto.tls.AlertLevel", "org.bouncycastle.crypto.tls.AlertLevel()", "public org.bouncycastle.crypto.tls.AlertLevel()"], ["org.bouncycastle.crypto.tls.AlwaysValidVerifyer", "org.bouncycastle.crypto.tls.AlwaysValidVerifyer()", "public org.bouncycastle.crypto.tls.AlwaysValidVerifyer()"], ["boolean", "org.bouncycastle.crypto.tls.AlwaysValidVerifyer.isValid(org.bouncycastle.asn1.x509.Certificate[])", "public boolean isValid(org.bouncycastle.asn1.x509.Certificate[])"], ["org.bouncycastle.crypto.tls.BulkCipherAlgorithm", "org.bouncycastle.crypto.tls.BulkCipherAlgorithm()", "public org.bouncycastle.crypto.tls.BulkCipherAlgorithm()"], ["int", "org.bouncycastle.crypto.tls.ByteQueue.nextTwoPow(int)", "public static int nextTwoPow(int)"], ["org.bouncycastle.crypto.tls.ByteQueue", "org.bouncycastle.crypto.tls.ByteQueue()", "public org.bouncycastle.crypto.tls.ByteQueue()"], ["org.bouncycastle.crypto.tls.ByteQueue", "org.bouncycastle.crypto.tls.ByteQueue(int)", "public org.bouncycastle.crypto.tls.ByteQueue(int)"], ["void", "org.bouncycastle.crypto.tls.ByteQueue.read(byte[], int, int, int)", "public void read(byte[], int, int, int)"], ["void", "org.bouncycastle.crypto.tls.ByteQueue.addData(byte[], int, int)", "public void addData(byte[], int, int)"], ["void", "org.bouncycastle.crypto.tls.ByteQueue.removeData(int)", "public void removeData(int)"], ["void", "org.bouncycastle.crypto.tls.ByteQueue.removeData(byte[], int, int, int)", "public void removeData(byte[], int, int, int)"], ["byte[]", "org.bouncycastle.crypto.tls.ByteQueue.removeData(int, int)", "public byte[] removeData(int, int)"], ["int", "org.bouncycastle.crypto.tls.ByteQueue.size()", "public int size()"], ["org.bouncycastle.crypto.tls.CertChainType", "org.bouncycastle.crypto.tls.CertChainType()", "public org.bouncycastle.crypto.tls.CertChainType()"], ["boolean", "org.bouncycastle.crypto.tls.CertChainType.isValid(short)", "public static boolean isValid(short)"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.Certificate(org.bouncycastle.asn1.x509.Certificate[])", "public org.bouncycastle.crypto.tls.Certificate(org.bouncycastle.asn1.x509.Certificate[])"], ["org.bouncycastle.asn1.x509.Certificate[]", "org.bouncycastle.crypto.tls.Certificate.getCerts()", "public org.bouncycastle.asn1.x509.Certificate[] getCerts()"], ["org.bouncycastle.asn1.x509.Certificate[]", "org.bouncycastle.crypto.tls.Certificate.getCertificateList()", "public org.bouncycastle.asn1.x509.Certificate[] getCertificateList()"], ["org.bouncycastle.asn1.x509.Certificate", "org.bouncycastle.crypto.tls.Certificate.getCertificateAt(int)", "public org.bouncycastle.asn1.x509.Certificate getCertificateAt(int)"], ["int", "org.bouncycastle.crypto.tls.Certificate.getLength()", "public int getLength()"], ["boolean", "org.bouncycastle.crypto.tls.Certificate.isEmpty()", "public boolean isEmpty()"], ["void", "org.bouncycastle.crypto.tls.Certificate.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.Certificate.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateRequest", "org.bouncycastle.crypto.tls.CertificateRequest(short[], java.util.Vector, java.util.Vector)", "public org.bouncycastle.crypto.tls.CertificateRequest(short[], java.util.Vector, java.util.Vector)"], ["short[]", "org.bouncycastle.crypto.tls.CertificateRequest.getCertificateTypes()", "public short[] getCertificateTypes()"], ["java.util.Vector", "org.bouncycastle.crypto.tls.CertificateRequest.getSupportedSignatureAlgorithms()", "public java.util.Vector getSupportedSignatureAlgorithms()"], ["java.util.Vector", "org.bouncycastle.crypto.tls.CertificateRequest.getCertificateAuthorities()", "public java.util.Vector getCertificateAuthorities()"], ["void", "org.bouncycastle.crypto.tls.CertificateRequest.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateRequest", "org.bouncycastle.crypto.tls.CertificateRequest.parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream)", "public static org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatus", "org.bouncycastle.crypto.tls.CertificateStatus(short, java.lang.Object)", "public org.bouncycastle.crypto.tls.CertificateStatus(short, java.lang.Object)"], ["short", "org.bouncycastle.crypto.tls.CertificateStatus.getStatusType()", "public short getStatusType()"], ["java.lang.Object", "org.bouncycastle.crypto.tls.CertificateStatus.getResponse()", "public java.lang.Object getResponse()"], ["org.bouncycastle.asn1.ocsp.OCSPResponse", "org.bouncycastle.crypto.tls.CertificateStatus.getOCSPResponse()", "public org.bouncycastle.asn1.ocsp.OCSPResponse getOCSPResponse()"], ["void", "org.bouncycastle.crypto.tls.CertificateStatus.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatus", "org.bouncycastle.crypto.tls.CertificateStatus.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatusRequest", "org.bouncycastle.crypto.tls.CertificateStatusRequest(short, java.lang.Object)", "public org.bouncycastle.crypto.tls.CertificateStatusRequest(short, java.lang.Object)"], ["short", "org.bouncycastle.crypto.tls.CertificateStatusRequest.getStatusType()", "public short getStatusType()"], ["java.lang.Object", "org.bouncycastle.crypto.tls.CertificateStatusRequest.getRequest()", "public java.lang.Object getRequest()"], ["org.bouncycastle.crypto.tls.OCSPStatusRequest", "org.bouncycastle.crypto.tls.CertificateStatusRequest.getOCSPStatusRequest()", "public org.bouncycastle.crypto.tls.OCSPStatusRequest getOCSPStatusRequest()"], ["void", "org.bouncycastle.crypto.tls.CertificateStatusRequest.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatusRequest", "org.bouncycastle.crypto.tls.CertificateStatusRequest.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.CertificateStatusRequest parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatusType", "org.bouncycastle.crypto.tls.CertificateStatusType()", "public org.bouncycastle.crypto.tls.CertificateStatusType()"], ["org.bouncycastle.crypto.tls.CertificateURL", "org.bouncycastle.crypto.tls.CertificateURL(short, java.util.Vector)", "public org.bouncycastle.crypto.tls.CertificateURL(short, java.util.Vector)"], ["short", "org.bouncycastle.crypto.tls.CertificateURL.getType()", "public short getType()"], ["java.util.Vector", "org.bouncycastle.crypto.tls.CertificateURL.getURLAndHashList()", "public java.util.Vector getURLAndHashList()"], ["void", "org.bouncycastle.crypto.tls.CertificateURL.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateURL", "org.bouncycastle.crypto.tls.CertificateURL.parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream)", "public static org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.Chacha20Poly1305", "org.bouncycastle.crypto.tls.Chacha20Poly1305(org.bouncycastle.crypto.tls.TlsContext)", "public org.bouncycastle.crypto.tls.Chacha20Poly1305(org.bouncycastle.crypto.tls.TlsContext) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.Chacha20Poly1305.getPlaintextLimit(int)", "public int getPlaintextLimit(int)"], ["byte[]", "org.bouncycastle.crypto.tls.Chacha20Poly1305.encodePlaintext(long, short, byte[], int, int)", "public byte[] encodePlaintext(long, short, byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.Chacha20Poly1305.decodeCiphertext(long, short, byte[], int, int)", "public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ChangeCipherSpec", "org.bouncycastle.crypto.tls.ChangeCipherSpec()", "public org.bouncycastle.crypto.tls.ChangeCipherSpec()"], ["org.bouncycastle.crypto.tls.CipherSuite", "org.bouncycastle.crypto.tls.CipherSuite()", "public org.bouncycastle.crypto.tls.CipherSuite()"], ["org.bouncycastle.crypto.tls.CipherType", "org.bouncycastle.crypto.tls.CipherType()", "public org.bouncycastle.crypto.tls.CipherType()"], ["org.bouncycastle.crypto.tls.ClientAuthenticationType", "org.bouncycastle.crypto.tls.ClientAuthenticationType()", "public org.bouncycastle.crypto.tls.ClientAuthenticationType()"], ["org.bouncycastle.crypto.tls.ClientCertificateType", "org.bouncycastle.crypto.tls.ClientCertificateType()", "public org.bouncycastle.crypto.tls.ClientCertificateType()"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["org.bouncycastle.crypto.tls.TlsHandshakeHash", "org.bouncycastle.crypto.tls.CombinedHash.notifyPRFDetermined()", "public org.bouncycastle.crypto.tls.TlsHandshakeHash notifyPRFDetermined()"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.trackHashAlgorithm(short)", "public void trackHashAlgorithm(short)"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.sealHashAlgorithms()", "public void sealHashAlgorithms()"], ["org.bouncycastle.crypto.tls.TlsHandshakeHash", "org.bouncycastle.crypto.tls.CombinedHash.stopTracking()", "public org.bouncycastle.crypto.tls.TlsHandshakeHash stopTracking()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.CombinedHash.forkPRFHash()", "public org.bouncycastle.crypto.Digest forkPRFHash()"], ["byte[]", "org.bouncycastle.crypto.tls.CombinedHash.getFinalHash(short)", "public byte[] getFinalHash(short)"], ["java.lang.String", "org.bouncycastle.crypto.tls.CombinedHash.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.tls.CombinedHash.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.tls.CombinedHash.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.tls.CombinedHash.reset()", "public void reset()"], ["org.bouncycastle.crypto.tls.CompressionMethod", "org.bouncycastle.crypto.tls.CompressionMethod()", "public org.bouncycastle.crypto.tls.CompressionMethod()"], ["org.bouncycastle.crypto.tls.ConnectionEnd", "org.bouncycastle.crypto.tls.ConnectionEnd()", "public org.bouncycastle.crypto.tls.ConnectionEnd()"], ["org.bouncycastle.crypto.tls.ContentType", "org.bouncycastle.crypto.tls.ContentType()", "public org.bouncycastle.crypto.tls.ContentType()"], ["org.bouncycastle.crypto.tls.DTLSClientProtocol", "org.bouncycastle.crypto.tls.DTLSClientProtocol(java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.DTLSClientProtocol(java.security.SecureRandom)"], ["org.bouncycastle.crypto.tls.DTLSTransport", "org.bouncycastle.crypto.tls.DTLSClientProtocol.connect(org.bouncycastle.crypto.tls.TlsClient, org.bouncycastle.crypto.tls.DatagramTransport)", "public org.bouncycastle.crypto.tls.DTLSTransport connect(org.bouncycastle.crypto.tls.TlsClient, org.bouncycastle.crypto.tls.DatagramTransport) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSReassembler$Range.getStart()", "public int getStart()"], ["void", "org.bouncycastle.crypto.tls.DTLSReassembler$Range.setStart(int)", "public void setStart(int)"], ["int", "org.bouncycastle.crypto.tls.DTLSReassembler$Range.getEnd()", "public int getEnd()"], ["void", "org.bouncycastle.crypto.tls.DTLSReassembler$Range.setEnd(int)", "public void setEnd(int)"], ["int", "org.bouncycastle.crypto.tls.DTLSRecordLayer.getReceiveLimit()", "public int getReceiveLimit() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSRecordLayer.getSendLimit()", "public int getSendLimit() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSRecordLayer.receive(byte[], int, int, int)", "public int receive(byte[], int, int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.DTLSRecordLayer.send(byte[], int, int)", "public void send(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.DTLSRecordLayer.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.DTLSReliableHandshake$1.receivedHandshakeRecord(int, byte[], int, int)", "public void receivedHandshakeRecord(int, byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message.getSeq()", "public int getSeq()"], ["short", "org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message.getType()", "public short getType()"], ["byte[]", "org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message.getBody()", "public byte[] getBody()"], ["org.bouncycastle.crypto.tls.DTLSServerProtocol", "org.bouncycastle.crypto.tls.DTLSServerProtocol(java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.DTLSServerProtocol(java.security.SecureRandom)"], ["boolean", "org.bouncycastle.crypto.tls.DTLSServerProtocol.getVerifyRequests()", "public boolean getVerifyRequests()"], ["void", "org.bouncycastle.crypto.tls.DTLSServerProtocol.setVerifyRequests(boolean)", "public void setVerifyRequests(boolean)"], ["org.bouncycastle.crypto.tls.DTLSTransport", "org.bouncycastle.crypto.tls.DTLSServerProtocol.accept(org.bouncycastle.crypto.tls.TlsServer, org.bouncycastle.crypto.tls.DatagramTransport)", "public org.bouncycastle.crypto.tls.DTLSTransport accept(org.bouncycastle.crypto.tls.TlsServer, org.bouncycastle.crypto.tls.DatagramTransport) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSTransport.getReceiveLimit()", "public int getReceiveLimit() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSTransport.getSendLimit()", "public int getSendLimit() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.DTLSTransport.receive(byte[], int, int, int)", "public int receive(byte[], int, int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.DTLSTransport.send(byte[], int, int)", "public void send(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.DTLSTransport.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DefaultTlsAgreementCredentials", "org.bouncycastle.crypto.tls.DefaultTlsAgreementCredentials(org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.tls.DefaultTlsAgreementCredentials(org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.DefaultTlsAgreementCredentials.getCertificate()", "public org.bouncycastle.crypto.tls.Certificate getCertificate()"], ["byte[]", "org.bouncycastle.crypto.tls.DefaultTlsAgreementCredentials.generateAgreement(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public byte[] generateAgreement(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.DefaultTlsCipherFactory", "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory()", "public org.bouncycastle.crypto.tls.DefaultTlsCipherFactory()"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory.createCipher(org.bouncycastle.crypto.tls.TlsContext, int, int)", "public org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext, int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DefaultTlsClient", "org.bouncycastle.crypto.tls.DefaultTlsClient()", "public org.bouncycastle.crypto.tls.DefaultTlsClient()"], ["org.bouncycastle.crypto.tls.DefaultTlsClient", "org.bouncycastle.crypto.tls.DefaultTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory)", "public org.bouncycastle.crypto.tls.DefaultTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory)"], ["int[]", "org.bouncycastle.crypto.tls.DefaultTlsClient.getCipherSuites()", "public int[] getCipherSuites()"], ["org.bouncycastle.crypto.tls.TlsKeyExchange", "org.bouncycastle.crypto.tls.DefaultTlsClient.getKeyExchange()", "public org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.DefaultTlsClient.getCipher()", "public org.bouncycastle.crypto.tls.TlsCipher getCipher() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials", "org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials.getCertificate()", "public org.bouncycastle.crypto.tls.Certificate getCertificate()"], ["byte[]", "org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials.decryptPreMasterSecret(byte[])", "public byte[] decryptPreMasterSecret(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DefaultTlsServer", "org.bouncycastle.crypto.tls.DefaultTlsServer()", "public org.bouncycastle.crypto.tls.DefaultTlsServer()"], ["org.bouncycastle.crypto.tls.DefaultTlsServer", "org.bouncycastle.crypto.tls.DefaultTlsServer(org.bouncycastle.crypto.tls.TlsCipherFactory)", "public org.bouncycastle.crypto.tls.DefaultTlsServer(org.bouncycastle.crypto.tls.TlsCipherFactory)"], ["org.bouncycastle.crypto.tls.TlsCredentials", "org.bouncycastle.crypto.tls.DefaultTlsServer.getCredentials()", "public org.bouncycastle.crypto.tls.TlsCredentials getCredentials() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsKeyExchange", "org.bouncycastle.crypto.tls.DefaultTlsServer.getKeyExchange()", "public org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.DefaultTlsServer.getCipher()", "public org.bouncycastle.crypto.tls.TlsCipher getCipher() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials", "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials", "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm)", "public org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.params.AsymmetricKeyParameter, org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm)"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials.getCertificate()", "public org.bouncycastle.crypto.tls.Certificate getCertificate()"], ["byte[]", "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials.generateCertificateSignature(byte[])", "public byte[] generateCertificateSignature(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm", "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials.getSignatureAndHashAlgorithm()", "public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm getSignatureAndHashAlgorithm()"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["org.bouncycastle.crypto.tls.TlsHandshakeHash", "org.bouncycastle.crypto.tls.DeferredHash.notifyPRFDetermined()", "public org.bouncycastle.crypto.tls.TlsHandshakeHash notifyPRFDetermined()"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.trackHashAlgorithm(short)", "public void trackHashAlgorithm(short)"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.sealHashAlgorithms()", "public void sealHashAlgorithms()"], ["org.bouncycastle.crypto.tls.TlsHandshakeHash", "org.bouncycastle.crypto.tls.DeferredHash.stopTracking()", "public org.bouncycastle.crypto.tls.TlsHandshakeHash stopTracking()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.DeferredHash.forkPRFHash()", "public org.bouncycastle.crypto.Digest forkPRFHash()"], ["byte[]", "org.bouncycastle.crypto.tls.DeferredHash.getFinalHash(short)", "public byte[] getFinalHash(short)"], ["java.lang.String", "org.bouncycastle.crypto.tls.DeferredHash.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.crypto.tls.DeferredHash.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.tls.DeferredHash.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.tls.DeferredHash.reset()", "public void reset()"], ["org.bouncycastle.crypto.tls.DigestAlgorithm", "org.bouncycastle.crypto.tls.DigestAlgorithm()", "public org.bouncycastle.crypto.tls.DigestAlgorithm()"], ["org.bouncycastle.crypto.tls.DigitallySigned", "org.bouncycastle.crypto.tls.DigitallySigned(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[])", "public org.bouncycastle.crypto.tls.DigitallySigned(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[])"], ["org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm", "org.bouncycastle.crypto.tls.DigitallySigned.getAlgorithm()", "public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm getAlgorithm()"], ["byte[]", "org.bouncycastle.crypto.tls.DigitallySigned.getSignature()", "public byte[] getSignature()"], ["void", "org.bouncycastle.crypto.tls.DigitallySigned.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.DigitallySigned", "org.bouncycastle.crypto.tls.DigitallySigned.parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream)", "public static org.bouncycastle.crypto.tls.DigitallySigned parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ECBasisType", "org.bouncycastle.crypto.tls.ECBasisType()", "public org.bouncycastle.crypto.tls.ECBasisType()"], ["boolean", "org.bouncycastle.crypto.tls.ECBasisType.isValid(short)", "public static boolean isValid(short)"], ["org.bouncycastle.crypto.tls.ECCurveType", "org.bouncycastle.crypto.tls.ECCurveType()", "public org.bouncycastle.crypto.tls.ECCurveType()"], ["org.bouncycastle.crypto.tls.ECPointFormat", "org.bouncycastle.crypto.tls.ECPointFormat()", "public org.bouncycastle.crypto.tls.ECPointFormat()"], ["org.bouncycastle.crypto.tls.EncryptionAlgorithm", "org.bouncycastle.crypto.tls.EncryptionAlgorithm()", "public org.bouncycastle.crypto.tls.EncryptionAlgorithm()"], ["org.bouncycastle.crypto.tls.ExporterLabel", "org.bouncycastle.crypto.tls.ExporterLabel()", "public org.bouncycastle.crypto.tls.ExporterLabel()"], ["org.bouncycastle.crypto.tls.ExtensionType", "org.bouncycastle.crypto.tls.ExtensionType()", "public org.bouncycastle.crypto.tls.ExtensionType()"], ["org.bouncycastle.crypto.tls.HandshakeType", "org.bouncycastle.crypto.tls.HandshakeType()", "public org.bouncycastle.crypto.tls.HandshakeType()"], ["org.bouncycastle.crypto.tls.HashAlgorithm", "org.bouncycastle.crypto.tls.HashAlgorithm()", "public org.bouncycastle.crypto.tls.HashAlgorithm()"], ["org.bouncycastle.crypto.tls.HeartbeatExtension", "org.bouncycastle.crypto.tls.HeartbeatExtension(short)", "public org.bouncycastle.crypto.tls.HeartbeatExtension(short)"], ["short", "org.bouncycastle.crypto.tls.HeartbeatExtension.getMode()", "public short getMode()"], ["void", "org.bouncycastle.crypto.tls.HeartbeatExtension.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.HeartbeatExtension", "org.bouncycastle.crypto.tls.HeartbeatExtension.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.HeartbeatExtension parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.HeartbeatMessage", "org.bouncycastle.crypto.tls.HeartbeatMessage(short, byte[], int)", "public org.bouncycastle.crypto.tls.HeartbeatMessage(short, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.HeartbeatMessage.encode(org.bouncycastle.crypto.tls.TlsContext, java.io.OutputStream)", "public void encode(org.bouncycastle.crypto.tls.TlsContext, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.HeartbeatMessage", "org.bouncycastle.crypto.tls.HeartbeatMessage.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.HeartbeatMessage parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.HeartbeatMessageType", "org.bouncycastle.crypto.tls.HeartbeatMessageType()", "public org.bouncycastle.crypto.tls.HeartbeatMessageType()"], ["boolean", "org.bouncycastle.crypto.tls.HeartbeatMessageType.isValid(short)", "public static boolean isValid(short)"], ["org.bouncycastle.crypto.tls.HeartbeatMode", "org.bouncycastle.crypto.tls.HeartbeatMode()", "public org.bouncycastle.crypto.tls.HeartbeatMode()"], ["boolean", "org.bouncycastle.crypto.tls.HeartbeatMode.isValid(short)", "public static boolean isValid(short)"], ["org.bouncycastle.crypto.tls.KeyExchangeAlgorithm", "org.bouncycastle.crypto.tls.KeyExchangeAlgorithm()", "public org.bouncycastle.crypto.tls.KeyExchangeAlgorithm()"], ["org.bouncycastle.crypto.tls.LegacyTlsAuthentication", "org.bouncycastle.crypto.tls.LegacyTlsAuthentication(org.bouncycastle.crypto.tls.CertificateVerifyer)", "public org.bouncycastle.crypto.tls.LegacyTlsAuthentication(org.bouncycastle.crypto.tls.CertificateVerifyer)"], ["void", "org.bouncycastle.crypto.tls.LegacyTlsAuthentication.notifyServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void notifyServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.LegacyTlsClient", "org.bouncycastle.crypto.tls.LegacyTlsClient(org.bouncycastle.crypto.tls.CertificateVerifyer)", "public org.bouncycastle.crypto.tls.LegacyTlsClient(org.bouncycastle.crypto.tls.CertificateVerifyer)"], ["org.bouncycastle.crypto.tls.TlsAuthentication", "org.bouncycastle.crypto.tls.LegacyTlsClient.getAuthentication()", "public org.bouncycastle.crypto.tls.TlsAuthentication getAuthentication() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.MACAlgorithm", "org.bouncycastle.crypto.tls.MACAlgorithm()", "public org.bouncycastle.crypto.tls.MACAlgorithm()"], ["org.bouncycastle.crypto.tls.MaxFragmentLength", "org.bouncycastle.crypto.tls.MaxFragmentLength()", "public org.bouncycastle.crypto.tls.MaxFragmentLength()"], ["boolean", "org.bouncycastle.crypto.tls.MaxFragmentLength.isValid(short)", "public static boolean isValid(short)"], ["org.bouncycastle.crypto.tls.NameType", "org.bouncycastle.crypto.tls.NameType()", "public org.bouncycastle.crypto.tls.NameType()"], ["org.bouncycastle.crypto.tls.NamedCurve", "org.bouncycastle.crypto.tls.NamedCurve()", "public org.bouncycastle.crypto.tls.NamedCurve()"], ["boolean", "org.bouncycastle.crypto.tls.NamedCurve.isValid(int)", "public static boolean isValid(int)"], ["boolean", "org.bouncycastle.crypto.tls.NamedCurve.refersToASpecificNamedCurve(int)", "public static boolean refersToASpecificNamedCurve(int)"], ["org.bouncycastle.crypto.tls.NewSessionTicket", "org.bouncycastle.crypto.tls.NewSessionTicket(long, byte[])", "public org.bouncycastle.crypto.tls.NewSessionTicket(long, byte[])"], ["long", "org.bouncycastle.crypto.tls.NewSessionTicket.getTicketLifetimeHint()", "public long getTicketLifetimeHint()"], ["byte[]", "org.bouncycastle.crypto.tls.NewSessionTicket.getTicket()", "public byte[] getTicket()"], ["void", "org.bouncycastle.crypto.tls.NewSessionTicket.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.NewSessionTicket", "org.bouncycastle.crypto.tls.NewSessionTicket.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.NewSessionTicket parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.OCSPStatusRequest", "org.bouncycastle.crypto.tls.OCSPStatusRequest(java.util.Vector, org.bouncycastle.asn1.x509.Extensions)", "public org.bouncycastle.crypto.tls.OCSPStatusRequest(java.util.Vector, org.bouncycastle.asn1.x509.Extensions)"], ["java.util.Vector", "org.bouncycastle.crypto.tls.OCSPStatusRequest.getResponderIDList()", "public java.util.Vector getResponderIDList()"], ["org.bouncycastle.asn1.x509.Extensions", "org.bouncycastle.crypto.tls.OCSPStatusRequest.getRequestExtensions()", "public org.bouncycastle.asn1.x509.Extensions getRequestExtensions()"], ["void", "org.bouncycastle.crypto.tls.OCSPStatusRequest.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.OCSPStatusRequest", "org.bouncycastle.crypto.tls.OCSPStatusRequest.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.PRFAlgorithm", "org.bouncycastle.crypto.tls.PRFAlgorithm()", "public org.bouncycastle.crypto.tls.PRFAlgorithm()"], ["org.bouncycastle.crypto.tls.PSKTlsClient", "org.bouncycastle.crypto.tls.PSKTlsClient(org.bouncycastle.crypto.tls.TlsPSKIdentity)", "public org.bouncycastle.crypto.tls.PSKTlsClient(org.bouncycastle.crypto.tls.TlsPSKIdentity)"], ["org.bouncycastle.crypto.tls.PSKTlsClient", "org.bouncycastle.crypto.tls.PSKTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, org.bouncycastle.crypto.tls.TlsPSKIdentity)", "public org.bouncycastle.crypto.tls.PSKTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, org.bouncycastle.crypto.tls.TlsPSKIdentity)"], ["int[]", "org.bouncycastle.crypto.tls.PSKTlsClient.getCipherSuites()", "public int[] getCipherSuites()"], ["org.bouncycastle.crypto.tls.TlsKeyExchange", "org.bouncycastle.crypto.tls.PSKTlsClient.getKeyExchange()", "public org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.PSKTlsClient.getCipher()", "public org.bouncycastle.crypto.tls.TlsCipher getCipher() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.ProtocolVersion.getFullVersion()", "public int getFullVersion()"], ["int", "org.bouncycastle.crypto.tls.ProtocolVersion.getMajorVersion()", "public int getMajorVersion()"], ["int", "org.bouncycastle.crypto.tls.ProtocolVersion.getMinorVersion()", "public int getMinorVersion()"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.isDTLS()", "public boolean isDTLS()"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.isSSL()", "public boolean isSSL()"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.isTLS()", "public boolean isTLS()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.ProtocolVersion.getEquivalentTLSVersion()", "public org.bouncycastle.crypto.tls.ProtocolVersion getEquivalentTLSVersion()"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.isEqualOrEarlierVersionOf(org.bouncycastle.crypto.tls.ProtocolVersion)", "public boolean isEqualOrEarlierVersionOf(org.bouncycastle.crypto.tls.ProtocolVersion)"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.isLaterVersionOf(org.bouncycastle.crypto.tls.ProtocolVersion)", "public boolean isLaterVersionOf(org.bouncycastle.crypto.tls.ProtocolVersion)"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["boolean", "org.bouncycastle.crypto.tls.ProtocolVersion.equals(org.bouncycastle.crypto.tls.ProtocolVersion)", "public boolean equals(org.bouncycastle.crypto.tls.ProtocolVersion)"], ["int", "org.bouncycastle.crypto.tls.ProtocolVersion.hashCode()", "public int hashCode()"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.ProtocolVersion.get(int, int)", "public static org.bouncycastle.crypto.tls.ProtocolVersion get(int, int) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.crypto.tls.ProtocolVersion.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.crypto.tls.RecordStream.readRecord()", "public boolean readRecord() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SRPTlsClient", "org.bouncycastle.crypto.tls.SRPTlsClient(byte[], byte[])", "public org.bouncycastle.crypto.tls.SRPTlsClient(byte[], byte[])"], ["org.bouncycastle.crypto.tls.SRPTlsClient", "org.bouncycastle.crypto.tls.SRPTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, byte[], byte[])", "public org.bouncycastle.crypto.tls.SRPTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, byte[], byte[])"], ["int[]", "org.bouncycastle.crypto.tls.SRPTlsClient.getCipherSuites()", "public int[] getCipherSuites()"], ["java.util.Hashtable", "org.bouncycastle.crypto.tls.SRPTlsClient.getClientExtensions()", "public java.util.Hashtable getClientExtensions() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.SRPTlsClient.processServerExtensions(java.util.Hashtable)", "public void processServerExtensions(java.util.Hashtable) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsKeyExchange", "org.bouncycastle.crypto.tls.SRPTlsClient.getKeyExchange()", "public org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsCipher", "org.bouncycastle.crypto.tls.SRPTlsClient.getCipher()", "public org.bouncycastle.crypto.tls.TlsCipher getCipher() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SRTPProtectionProfile", "org.bouncycastle.crypto.tls.SRTPProtectionProfile()", "public org.bouncycastle.crypto.tls.SRTPProtectionProfile()"], ["org.bouncycastle.crypto.tls.SSL3Mac", "org.bouncycastle.crypto.tls.SSL3Mac(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.tls.SSL3Mac(org.bouncycastle.crypto.Digest)"], ["java.lang.String", "org.bouncycastle.crypto.tls.SSL3Mac.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.SSL3Mac.getUnderlyingDigest()", "public org.bouncycastle.crypto.Digest getUnderlyingDigest()"], ["void", "org.bouncycastle.crypto.tls.SSL3Mac.init(org.bouncycastle.crypto.CipherParameters)", "public void init(org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.crypto.tls.SSL3Mac.getMacSize()", "public int getMacSize()"], ["void", "org.bouncycastle.crypto.tls.SSL3Mac.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.crypto.tls.SSL3Mac.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.crypto.tls.SSL3Mac.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.crypto.tls.SSL3Mac.reset()", "public void reset()"], ["org.bouncycastle.crypto.tls.SecurityParameters", "org.bouncycastle.crypto.tls.SecurityParameters()", "public org.bouncycastle.crypto.tls.SecurityParameters()"], ["int", "org.bouncycastle.crypto.tls.SecurityParameters.getEntity()", "public int getEntity()"], ["int", "org.bouncycastle.crypto.tls.SecurityParameters.getCipherSuite()", "public int getCipherSuite()"], ["short", "org.bouncycastle.crypto.tls.SecurityParameters.getCompressionAlgorithm()", "public short getCompressionAlgorithm()"], ["int", "org.bouncycastle.crypto.tls.SecurityParameters.getPrfAlgorithm()", "public int getPrfAlgorithm()"], ["int", "org.bouncycastle.crypto.tls.SecurityParameters.getVerifyDataLength()", "public int getVerifyDataLength()"], ["byte[]", "org.bouncycastle.crypto.tls.SecurityParameters.getMasterSecret()", "public byte[] getMasterSecret()"], ["byte[]", "org.bouncycastle.crypto.tls.SecurityParameters.getClientRandom()", "public byte[] getClientRandom()"], ["byte[]", "org.bouncycastle.crypto.tls.SecurityParameters.getServerRandom()", "public byte[] getServerRandom()"], ["org.bouncycastle.crypto.tls.ServerDHParams", "org.bouncycastle.crypto.tls.ServerDHParams(org.bouncycastle.crypto.params.DHPublicKeyParameters)", "public org.bouncycastle.crypto.tls.ServerDHParams(org.bouncycastle.crypto.params.DHPublicKeyParameters)"], ["org.bouncycastle.crypto.params.DHPublicKeyParameters", "org.bouncycastle.crypto.tls.ServerDHParams.getPublicKey()", "public org.bouncycastle.crypto.params.DHPublicKeyParameters getPublicKey()"], ["void", "org.bouncycastle.crypto.tls.ServerDHParams.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerDHParams", "org.bouncycastle.crypto.tls.ServerDHParams.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.ServerDHParams parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerName", "org.bouncycastle.crypto.tls.ServerName(short, java.lang.Object)", "public org.bouncycastle.crypto.tls.ServerName(short, java.lang.Object)"], ["short", "org.bouncycastle.crypto.tls.ServerName.getNameType()", "public short getNameType()"], ["java.lang.Object", "org.bouncycastle.crypto.tls.ServerName.getName()", "public java.lang.Object getName()"], ["java.lang.String", "org.bouncycastle.crypto.tls.ServerName.getHostName()", "public java.lang.String getHostName()"], ["void", "org.bouncycastle.crypto.tls.ServerName.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerName", "org.bouncycastle.crypto.tls.ServerName.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.ServerName parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerNameList", "org.bouncycastle.crypto.tls.ServerNameList(java.util.Vector)", "public org.bouncycastle.crypto.tls.ServerNameList(java.util.Vector)"], ["java.util.Vector", "org.bouncycastle.crypto.tls.ServerNameList.getServerNameList()", "public java.util.Vector getServerNameList()"], ["void", "org.bouncycastle.crypto.tls.ServerNameList.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerNameList", "org.bouncycastle.crypto.tls.ServerNameList.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerOnlyTlsAuthentication", "org.bouncycastle.crypto.tls.ServerOnlyTlsAuthentication()", "public org.bouncycastle.crypto.tls.ServerOnlyTlsAuthentication()"], ["org.bouncycastle.crypto.tls.TlsCredentials", "org.bouncycastle.crypto.tls.ServerOnlyTlsAuthentication.getClientCredentials(org.bouncycastle.crypto.tls.CertificateRequest)", "public final org.bouncycastle.crypto.tls.TlsCredentials getClientCredentials(org.bouncycastle.crypto.tls.CertificateRequest)"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder()", "public org.bouncycastle.crypto.tls.SessionParameters$Builder()"], ["org.bouncycastle.crypto.tls.SessionParameters", "org.bouncycastle.crypto.tls.SessionParameters$Builder.build()", "public org.bouncycastle.crypto.tls.SessionParameters build()"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder.setCipherSuite(int)", "public org.bouncycastle.crypto.tls.SessionParameters$Builder setCipherSuite(int)"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder.setCompressionAlgorithm(short)", "public org.bouncycastle.crypto.tls.SessionParameters$Builder setCompressionAlgorithm(short)"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder.setMasterSecret(byte[])", "public org.bouncycastle.crypto.tls.SessionParameters$Builder setMasterSecret(byte[])"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder.setPeerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public org.bouncycastle.crypto.tls.SessionParameters$Builder setPeerCertificate(org.bouncycastle.crypto.tls.Certificate)"], ["org.bouncycastle.crypto.tls.SessionParameters$Builder", "org.bouncycastle.crypto.tls.SessionParameters$Builder.setServerExtensions(java.util.Hashtable)", "public org.bouncycastle.crypto.tls.SessionParameters$Builder setServerExtensions(java.util.Hashtable) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.SessionParameters.clear()", "public void clear()"], ["org.bouncycastle.crypto.tls.SessionParameters", "org.bouncycastle.crypto.tls.SessionParameters.copy()", "public org.bouncycastle.crypto.tls.SessionParameters copy()"], ["int", "org.bouncycastle.crypto.tls.SessionParameters.getCipherSuite()", "public int getCipherSuite()"], ["short", "org.bouncycastle.crypto.tls.SessionParameters.getCompressionAlgorithm()", "public short getCompressionAlgorithm()"], ["byte[]", "org.bouncycastle.crypto.tls.SessionParameters.getMasterSecret()", "public byte[] getMasterSecret()"], ["org.bouncycastle.crypto.tls.Certificate", "org.bouncycastle.crypto.tls.SessionParameters.getPeerCertificate()", "public org.bouncycastle.crypto.tls.Certificate getPeerCertificate()"], ["java.util.Hashtable", "org.bouncycastle.crypto.tls.SessionParameters.readServerExtensions()", "public java.util.Hashtable readServerExtensions() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SignatureAlgorithm", "org.bouncycastle.crypto.tls.SignatureAlgorithm()", "public org.bouncycastle.crypto.tls.SignatureAlgorithm()"], ["org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm(short, short)", "public org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm(short, short)"], ["short", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.getHash()", "public short getHash()"], ["short", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.getSignature()", "public short getSignature()"], ["boolean", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm", "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm.parse(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm parse(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.SupplementalDataEntry", "org.bouncycastle.crypto.tls.SupplementalDataEntry(int, byte[])", "public org.bouncycastle.crypto.tls.SupplementalDataEntry(int, byte[])"], ["int", "org.bouncycastle.crypto.tls.SupplementalDataEntry.getDataType()", "public int getDataType()"], ["byte[]", "org.bouncycastle.crypto.tls.SupplementalDataEntry.getData()", "public byte[] getData()"], ["org.bouncycastle.crypto.tls.SupplementalDataType", "org.bouncycastle.crypto.tls.SupplementalDataType()", "public org.bouncycastle.crypto.tls.SupplementalDataType()"], ["org.bouncycastle.crypto.tls.TlsAEADCipher", "org.bouncycastle.crypto.tls.TlsAEADCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.modes.AEADBlockCipher, org.bouncycastle.crypto.modes.AEADBlockCipher, int, int)", "public org.bouncycastle.crypto.tls.TlsAEADCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.modes.AEADBlockCipher, org.bouncycastle.crypto.modes.AEADBlockCipher, int, int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsAEADCipher.getPlaintextLimit(int)", "public int getPlaintextLimit(int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsAEADCipher.encodePlaintext(long, short, byte[], int, int)", "public byte[] encodePlaintext(long, short, byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsAEADCipher.decodeCiphertext(long, short, byte[], int, int)", "public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsMac", "org.bouncycastle.crypto.tls.TlsBlockCipher.getWriteMac()", "public org.bouncycastle.crypto.tls.TlsMac getWriteMac()"], ["org.bouncycastle.crypto.tls.TlsMac", "org.bouncycastle.crypto.tls.TlsBlockCipher.getReadMac()", "public org.bouncycastle.crypto.tls.TlsMac getReadMac()"], ["org.bouncycastle.crypto.tls.TlsBlockCipher", "org.bouncycastle.crypto.tls.TlsBlockCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.crypto.tls.TlsBlockCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsBlockCipher.getPlaintextLimit(int)", "public int getPlaintextLimit(int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsBlockCipher.encodePlaintext(long, short, byte[], int, int)", "public byte[] encodePlaintext(long, short, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsBlockCipher.decodeCiphertext(long, short, byte[], int, int)", "public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsClientContextImpl.isServer()", "public boolean isServer()"], ["org.bouncycastle.crypto.tls.TlsClientProtocol", "org.bouncycastle.crypto.tls.TlsClientProtocol(java.io.InputStream, java.io.OutputStream)", "public org.bouncycastle.crypto.tls.TlsClientProtocol(java.io.InputStream, java.io.OutputStream)"], ["org.bouncycastle.crypto.tls.TlsClientProtocol", "org.bouncycastle.crypto.tls.TlsClientProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.TlsClientProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.tls.TlsClientProtocol.connect(org.bouncycastle.crypto.tls.TlsClient)", "public void connect(org.bouncycastle.crypto.tls.TlsClient) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsDHEKeyExchange", "org.bouncycastle.crypto.tls.TlsDHEKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.tls.TlsDHEKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.params.DHParameters)"], ["void", "org.bouncycastle.crypto.tls.TlsDHEKeyExchange.processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsDHEKeyExchange.generateServerKeyExchange()", "public byte[] generateServerKeyExchange() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsDHEKeyExchange.processServerKeyExchange(java.io.InputStream)", "public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsDHKeyExchange", "org.bouncycastle.crypto.tls.TlsDHKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.params.DHParameters)", "public org.bouncycastle.crypto.tls.TlsDHKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.params.DHParameters)"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.skipServerCredentials()", "public void skipServerCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.requiresServerKeyExchange()", "public boolean requiresServerKeyExchange()"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.generateClientKeyExchange(java.io.OutputStream)", "public void generateClientKeyExchange(java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsDHKeyExchange.generatePremasterSecret()", "public byte[] generatePremasterSecret() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsDHUtils", "org.bouncycastle.crypto.tls.TlsDHUtils()", "public org.bouncycastle.crypto.tls.TlsDHUtils()"], ["boolean", "org.bouncycastle.crypto.tls.TlsDHUtils.areCompatibleParameters(org.bouncycastle.crypto.params.DHParameters, org.bouncycastle.crypto.params.DHParameters)", "public static boolean areCompatibleParameters(org.bouncycastle.crypto.params.DHParameters, org.bouncycastle.crypto.params.DHParameters)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsDHUtils.calculateDHBasicAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, org.bouncycastle.crypto.params.DHPrivateKeyParameters)", "public static byte[] calculateDHBasicAgreement(org.bouncycastle.crypto.params.DHPublicKeyParameters, org.bouncycastle.crypto.params.DHPrivateKeyParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.tls.TlsDHUtils.generateDHKeyPair(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters)", "public static org.bouncycastle.crypto.AsymmetricCipherKeyPair generateDHKeyPair(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters)"], ["org.bouncycastle.crypto.params.DHPrivateKeyParameters", "org.bouncycastle.crypto.tls.TlsDHUtils.generateEphemeralClientKeyExchange(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters, java.io.OutputStream)", "public static org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.DHPrivateKeyParameters", "org.bouncycastle.crypto.tls.TlsDHUtils.generateEphemeralServerKeyExchange(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters, java.io.OutputStream)", "public static org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralServerKeyExchange(java.security.SecureRandom, org.bouncycastle.crypto.params.DHParameters, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.DHPublicKeyParameters", "org.bouncycastle.crypto.tls.TlsDHUtils.validateDHPublicKey(org.bouncycastle.crypto.params.DHPublicKeyParameters)", "public static org.bouncycastle.crypto.params.DHPublicKeyParameters validateDHPublicKey(org.bouncycastle.crypto.params.DHPublicKeyParameters) throws java.io.IOException"], ["java.math.BigInteger", "org.bouncycastle.crypto.tls.TlsDHUtils.readDHParameter(java.io.InputStream)", "public static java.math.BigInteger readDHParameter(java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsDHUtils.writeDHParameter(java.math.BigInteger, java.io.OutputStream)", "public static void writeDHParameter(java.math.BigInteger, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsDSASigner", "org.bouncycastle.crypto.tls.TlsDSASigner()", "public org.bouncycastle.crypto.tls.TlsDSASigner()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsDSASigner.generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.tls.TlsDSASigner.verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.TlsDSASigner.createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.TlsDSASigner.createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.TlsDSSSigner", "org.bouncycastle.crypto.tls.TlsDSSSigner()", "public org.bouncycastle.crypto.tls.TlsDSSSigner()"], ["boolean", "org.bouncycastle.crypto.tls.TlsDSSSigner.isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public boolean isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.TlsECCUtils", "org.bouncycastle.crypto.tls.TlsECCUtils()", "public org.bouncycastle.crypto.tls.TlsECCUtils()"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.addSupportedEllipticCurvesExtension(java.util.Hashtable, int[])", "public static void addSupportedEllipticCurvesExtension(java.util.Hashtable, int[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.addSupportedPointFormatsExtension(java.util.Hashtable, short[])", "public static void addSupportedPointFormatsExtension(java.util.Hashtable, short[]) throws java.io.IOException"], ["int[]", "org.bouncycastle.crypto.tls.TlsECCUtils.getSupportedEllipticCurvesExtension(java.util.Hashtable)", "public static int[] getSupportedEllipticCurvesExtension(java.util.Hashtable) throws java.io.IOException"], ["short[]", "org.bouncycastle.crypto.tls.TlsECCUtils.getSupportedPointFormatsExtension(java.util.Hashtable)", "public static short[] getSupportedPointFormatsExtension(java.util.Hashtable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.createSupportedEllipticCurvesExtension(int[])", "public static byte[] createSupportedEllipticCurvesExtension(int[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.createSupportedPointFormatsExtension(short[])", "public static byte[] createSupportedPointFormatsExtension(short[]) throws java.io.IOException"], ["int[]", "org.bouncycastle.crypto.tls.TlsECCUtils.readSupportedEllipticCurvesExtension(byte[])", "public static int[] readSupportedEllipticCurvesExtension(byte[]) throws java.io.IOException"], ["short[]", "org.bouncycastle.crypto.tls.TlsECCUtils.readSupportedPointFormatsExtension(byte[])", "public static short[] readSupportedPointFormatsExtension(byte[]) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.crypto.tls.TlsECCUtils.getNameOfNamedCurve(int)", "public static java.lang.String getNameOfNamedCurve(int)"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.tls.TlsECCUtils.getParametersForNamedCurve(int)", "public static org.bouncycastle.crypto.params.ECDomainParameters getParametersForNamedCurve(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.hasAnySupportedNamedCurves()", "public static boolean hasAnySupportedNamedCurves()"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.containsECCCipherSuites(int[])", "public static boolean containsECCCipherSuites(int[])"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.isECCCipherSuite(int)", "public static boolean isECCCipherSuite(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.areOnSameCurve(org.bouncycastle.crypto.params.ECDomainParameters, org.bouncycastle.crypto.params.ECDomainParameters)", "public static boolean areOnSameCurve(org.bouncycastle.crypto.params.ECDomainParameters, org.bouncycastle.crypto.params.ECDomainParameters)"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.isSupportedNamedCurve(int)", "public static boolean isSupportedNamedCurve(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsECCUtils.isCompressionPreferred(short[], short)", "public static boolean isCompressionPreferred(short[], short)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.serializeECFieldElement(int, java.math.BigInteger)", "public static byte[] serializeECFieldElement(int, java.math.BigInteger) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.serializeECPoint(short[], org.bouncycastle.math.ec.ECPoint)", "public static byte[] serializeECPoint(short[], org.bouncycastle.math.ec.ECPoint) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.serializeECPublicKey(short[], org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public static byte[] serializeECPublicKey(short[], org.bouncycastle.crypto.params.ECPublicKeyParameters) throws java.io.IOException"], ["java.math.BigInteger", "org.bouncycastle.crypto.tls.TlsECCUtils.deserializeECFieldElement(int, byte[])", "public static java.math.BigInteger deserializeECFieldElement(int, byte[]) throws java.io.IOException"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.crypto.tls.TlsECCUtils.deserializeECPoint(short[], org.bouncycastle.math.ec.ECCurve, byte[])", "public static org.bouncycastle.math.ec.ECPoint deserializeECPoint(short[], org.bouncycastle.math.ec.ECCurve, byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.tls.TlsECCUtils.deserializeECPublicKey(short[], org.bouncycastle.crypto.params.ECDomainParameters, byte[])", "public static org.bouncycastle.crypto.params.ECPublicKeyParameters deserializeECPublicKey(short[], org.bouncycastle.crypto.params.ECDomainParameters, byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECCUtils.calculateECDHBasicAgreement(org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters)", "public static byte[] calculateECDHBasicAgreement(org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.crypto.params.ECPrivateKeyParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.crypto.tls.TlsECCUtils.generateECKeyPair(java.security.SecureRandom, org.bouncycastle.crypto.params.ECDomainParameters)", "public static org.bouncycastle.crypto.AsymmetricCipherKeyPair generateECKeyPair(java.security.SecureRandom, org.bouncycastle.crypto.params.ECDomainParameters)"], ["org.bouncycastle.crypto.params.ECPrivateKeyParameters", "org.bouncycastle.crypto.tls.TlsECCUtils.generateEphemeralClientKeyExchange(java.security.SecureRandom, short[], org.bouncycastle.crypto.params.ECDomainParameters, java.io.OutputStream)", "public static org.bouncycastle.crypto.params.ECPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom, short[], org.bouncycastle.crypto.params.ECDomainParameters, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.ECPublicKeyParameters", "org.bouncycastle.crypto.tls.TlsECCUtils.validateECPublicKey(org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public static org.bouncycastle.crypto.params.ECPublicKeyParameters validateECPublicKey(org.bouncycastle.crypto.params.ECPublicKeyParameters) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsECCUtils.readECExponent(int, java.io.InputStream)", "public static int readECExponent(int, java.io.InputStream) throws java.io.IOException"], ["java.math.BigInteger", "org.bouncycastle.crypto.tls.TlsECCUtils.readECFieldElement(int, java.io.InputStream)", "public static java.math.BigInteger readECFieldElement(int, java.io.InputStream) throws java.io.IOException"], ["java.math.BigInteger", "org.bouncycastle.crypto.tls.TlsECCUtils.readECParameter(java.io.InputStream)", "public static java.math.BigInteger readECParameter(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.ECDomainParameters", "org.bouncycastle.crypto.tls.TlsECCUtils.readECParameters(int[], short[], java.io.InputStream)", "public static org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[], short[], java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeECExponent(int, java.io.OutputStream)", "public static void writeECExponent(int, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeECFieldElement(org.bouncycastle.math.ec.ECFieldElement, java.io.OutputStream)", "public static void writeECFieldElement(org.bouncycastle.math.ec.ECFieldElement, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeECFieldElement(int, java.math.BigInteger, java.io.OutputStream)", "public static void writeECFieldElement(int, java.math.BigInteger, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeECParameter(java.math.BigInteger, java.io.OutputStream)", "public static void writeECParameter(java.math.BigInteger, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeExplicitECParameters(short[], org.bouncycastle.crypto.params.ECDomainParameters, java.io.OutputStream)", "public static void writeExplicitECParameters(short[], org.bouncycastle.crypto.params.ECDomainParameters, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeECPoint(short[], org.bouncycastle.math.ec.ECPoint, java.io.OutputStream)", "public static void writeECPoint(short[], org.bouncycastle.math.ec.ECPoint, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECCUtils.writeNamedECParameters(int, java.io.OutputStream)", "public static void writeNamedECParameters(int, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsECDHEKeyExchange", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange(int, java.util.Vector, int[], short[], short[])", "public org.bouncycastle.crypto.tls.TlsECDHEKeyExchange(int, java.util.Vector, int[], short[], short[])"], ["void", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange.processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange.generateServerKeyExchange()", "public byte[] generateServerKeyExchange() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange.processServerKeyExchange(java.io.InputStream)", "public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsECDHKeyExchange", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange(int, java.util.Vector, int[], short[], short[])", "public org.bouncycastle.crypto.tls.TlsECDHKeyExchange(int, java.util.Vector, int[], short[], short[])"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.skipServerCredentials()", "public void skipServerCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.requiresServerKeyExchange()", "public boolean requiresServerKeyExchange()"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.generateClientKeyExchange(java.io.OutputStream)", "public void generateClientKeyExchange(java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.processClientCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processClientCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.processClientKeyExchange(java.io.InputStream)", "public void processClientKeyExchange(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsECDHKeyExchange.generatePremasterSecret()", "public byte[] generatePremasterSecret() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsECDSASigner", "org.bouncycastle.crypto.tls.TlsECDSASigner()", "public org.bouncycastle.crypto.tls.TlsECDSASigner()"], ["boolean", "org.bouncycastle.crypto.tls.TlsECDSASigner.isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public boolean isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.TlsExtensionsUtils", "org.bouncycastle.crypto.tls.TlsExtensionsUtils()", "public org.bouncycastle.crypto.tls.TlsExtensionsUtils()"], ["java.util.Hashtable", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.ensureExtensionsInitialised(java.util.Hashtable)", "public static java.util.Hashtable ensureExtensionsInitialised(java.util.Hashtable)"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addEncryptThenMACExtension(java.util.Hashtable)", "public static void addEncryptThenMACExtension(java.util.Hashtable)"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addHeartbeatExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.HeartbeatExtension)", "public static void addHeartbeatExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.HeartbeatExtension) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addMaxFragmentLengthExtension(java.util.Hashtable, short)", "public static void addMaxFragmentLengthExtension(java.util.Hashtable, short) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addServerNameExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.ServerNameList)", "public static void addServerNameExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.ServerNameList) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addStatusRequestExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.CertificateStatusRequest)", "public static void addStatusRequestExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.CertificateStatusRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.addTruncatedHMacExtension(java.util.Hashtable)", "public static void addTruncatedHMacExtension(java.util.Hashtable)"], ["org.bouncycastle.crypto.tls.HeartbeatExtension", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.getHeartbeatExtension(java.util.Hashtable)", "public static org.bouncycastle.crypto.tls.HeartbeatExtension getHeartbeatExtension(java.util.Hashtable) throws java.io.IOException"], ["short", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.getMaxFragmentLengthExtension(java.util.Hashtable)", "public static short getMaxFragmentLengthExtension(java.util.Hashtable) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerNameList", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.getServerNameExtension(java.util.Hashtable)", "public static org.bouncycastle.crypto.tls.ServerNameList getServerNameExtension(java.util.Hashtable) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatusRequest", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.getStatusRequestExtension(java.util.Hashtable)", "public static org.bouncycastle.crypto.tls.CertificateStatusRequest getStatusRequestExtension(java.util.Hashtable) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.hasEncryptThenMACExtension(java.util.Hashtable)", "public static boolean hasEncryptThenMACExtension(java.util.Hashtable) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.hasTruncatedHMacExtension(java.util.Hashtable)", "public static boolean hasTruncatedHMacExtension(java.util.Hashtable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createEmptyExtensionData()", "public static byte[] createEmptyExtensionData()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createEncryptThenMACExtension()", "public static byte[] createEncryptThenMACExtension()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createHeartbeatExtension(org.bouncycastle.crypto.tls.HeartbeatExtension)", "public static byte[] createHeartbeatExtension(org.bouncycastle.crypto.tls.HeartbeatExtension) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createMaxFragmentLengthExtension(short)", "public static byte[] createMaxFragmentLengthExtension(short) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createServerNameExtension(org.bouncycastle.crypto.tls.ServerNameList)", "public static byte[] createServerNameExtension(org.bouncycastle.crypto.tls.ServerNameList) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createStatusRequestExtension(org.bouncycastle.crypto.tls.CertificateStatusRequest)", "public static byte[] createStatusRequestExtension(org.bouncycastle.crypto.tls.CertificateStatusRequest) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.createTruncatedHMacExtension()", "public static byte[] createTruncatedHMacExtension()"], ["boolean", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readEncryptThenMACExtension(byte[])", "public static boolean readEncryptThenMACExtension(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.HeartbeatExtension", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readHeartbeatExtension(byte[])", "public static org.bouncycastle.crypto.tls.HeartbeatExtension readHeartbeatExtension(byte[]) throws java.io.IOException"], ["short", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readMaxFragmentLengthExtension(byte[])", "public static short readMaxFragmentLengthExtension(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ServerNameList", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readServerNameExtension(byte[])", "public static org.bouncycastle.crypto.tls.ServerNameList readServerNameExtension(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.CertificateStatusRequest", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readStatusRequestExtension(byte[])", "public static org.bouncycastle.crypto.tls.CertificateStatusRequest readStatusRequestExtension(byte[]) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsExtensionsUtils.readTruncatedHMacExtension(byte[])", "public static boolean readTruncatedHMacExtension(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsFatalAlert", "org.bouncycastle.crypto.tls.TlsFatalAlert(short)", "public org.bouncycastle.crypto.tls.TlsFatalAlert(short)"], ["short", "org.bouncycastle.crypto.tls.TlsFatalAlert.getAlertDescription()", "public short getAlertDescription()"], ["int", "org.bouncycastle.crypto.tls.TlsInputStream.available()", "public int available() throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsInputStream.read()", "public int read() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsInputStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsMac", "org.bouncycastle.crypto.tls.TlsMac(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.Digest, byte[], int, int)", "public org.bouncycastle.crypto.tls.TlsMac(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.Digest, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsMac.getMACSecret()", "public byte[] getMACSecret()"], ["int", "org.bouncycastle.crypto.tls.TlsMac.getSize()", "public int getSize()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsMac.calculateMac(long, short, byte[], int, int)", "public byte[] calculateMac(long, short, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsMac.calculateMacConstantTime(long, short, byte[], int, int, int, byte[])", "public byte[] calculateMacConstantTime(long, short, byte[], int, int, int, byte[])"], ["org.bouncycastle.crypto.tls.TlsNullCipher", "org.bouncycastle.crypto.tls.TlsNullCipher(org.bouncycastle.crypto.tls.TlsContext)", "public org.bouncycastle.crypto.tls.TlsNullCipher(org.bouncycastle.crypto.tls.TlsContext)"], ["org.bouncycastle.crypto.tls.TlsNullCipher", "org.bouncycastle.crypto.tls.TlsNullCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.crypto.tls.TlsNullCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsNullCipher.getPlaintextLimit(int)", "public int getPlaintextLimit(int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsNullCipher.encodePlaintext(long, short, byte[], int, int)", "public byte[] encodePlaintext(long, short, byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsNullCipher.decodeCiphertext(long, short, byte[], int, int)", "public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsNullCompression", "org.bouncycastle.crypto.tls.TlsNullCompression()", "public org.bouncycastle.crypto.tls.TlsNullCompression()"], ["java.io.OutputStream", "org.bouncycastle.crypto.tls.TlsNullCompression.compress(java.io.OutputStream)", "public java.io.OutputStream compress(java.io.OutputStream)"], ["java.io.OutputStream", "org.bouncycastle.crypto.tls.TlsNullCompression.decompress(java.io.OutputStream)", "public java.io.OutputStream decompress(java.io.OutputStream)"], ["void", "org.bouncycastle.crypto.tls.TlsOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsOutputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsOutputStream.flush()", "public void flush() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsPSKKeyExchange", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.tls.TlsPSKIdentity, org.bouncycastle.crypto.params.DHParameters, int[], short[], short[])", "public org.bouncycastle.crypto.tls.TlsPSKKeyExchange(int, java.util.Vector, org.bouncycastle.crypto.tls.TlsPSKIdentity, org.bouncycastle.crypto.params.DHParameters, int[], short[], short[])"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.skipServerCredentials()", "public void skipServerCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.generateServerKeyExchange()", "public byte[] generateServerKeyExchange() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.requiresServerKeyExchange()", "public boolean requiresServerKeyExchange()"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.processServerKeyExchange(java.io.InputStream)", "public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.generateClientKeyExchange(java.io.OutputStream)", "public void generateClientKeyExchange(java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsPSKKeyExchange.generatePremasterSecret()", "public byte[] generatePremasterSecret() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsProtocol", "org.bouncycastle.crypto.tls.TlsProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.TlsProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)"], ["java.io.OutputStream", "org.bouncycastle.crypto.tls.TlsProtocol.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["java.io.InputStream", "org.bouncycastle.crypto.tls.TlsProtocol.getInputStream()", "public java.io.InputStream getInputStream()"], ["void", "org.bouncycastle.crypto.tls.TlsProtocol.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsProtocolHandler", "org.bouncycastle.crypto.tls.TlsProtocolHandler(java.io.InputStream, java.io.OutputStream)", "public org.bouncycastle.crypto.tls.TlsProtocolHandler(java.io.InputStream, java.io.OutputStream)"], ["org.bouncycastle.crypto.tls.TlsProtocolHandler", "org.bouncycastle.crypto.tls.TlsProtocolHandler(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.TlsProtocolHandler(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)"], ["org.bouncycastle.crypto.tls.TlsRSAKeyExchange", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange(java.util.Vector)", "public org.bouncycastle.crypto.tls.TlsRSAKeyExchange(java.util.Vector)"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.skipServerCredentials()", "public void skipServerCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.generateClientKeyExchange(java.io.OutputStream)", "public void generateClientKeyExchange(java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.processClientKeyExchange(java.io.InputStream)", "public void processClientKeyExchange(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsRSAKeyExchange.generatePremasterSecret()", "public byte[] generatePremasterSecret() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsRSASigner", "org.bouncycastle.crypto.tls.TlsRSASigner()", "public org.bouncycastle.crypto.tls.TlsRSASigner()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsRSASigner.generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["boolean", "org.bouncycastle.crypto.tls.TlsRSASigner.verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[])", "public boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.TlsRSASigner.createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.Signer", "org.bouncycastle.crypto.tls.TlsRSASigner.createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["boolean", "org.bouncycastle.crypto.tls.TlsRSASigner.isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public boolean isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.crypto.tls.TlsRSAUtils", "org.bouncycastle.crypto.tls.TlsRSAUtils()", "public org.bouncycastle.crypto.tls.TlsRSAUtils()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsRSAUtils.generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.params.RSAKeyParameters, java.io.OutputStream)", "public static byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.params.RSAKeyParameters, java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsRSAUtils.safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsEncryptionCredentials, byte[])", "public static byte[] safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsEncryptionCredentials, byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsRSAUtils.safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.params.RSAKeyParameters, byte[])", "public static byte[] safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.params.RSAKeyParameters, byte[])"], ["org.bouncycastle.crypto.tls.TlsSRPKeyExchange", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange(int, java.util.Vector, byte[], byte[])", "public org.bouncycastle.crypto.tls.TlsSRPKeyExchange(int, java.util.Vector, byte[], byte[])"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.init(org.bouncycastle.crypto.tls.TlsContext)", "public void init(org.bouncycastle.crypto.tls.TlsContext)"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.skipServerCredentials()", "public void skipServerCredentials() throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.processServerCertificate(org.bouncycastle.crypto.tls.Certificate)", "public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.requiresServerKeyExchange()", "public boolean requiresServerKeyExchange()"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.processServerKeyExchange(java.io.InputStream)", "public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest)", "public void validateCertificateRequest(org.bouncycastle.crypto.tls.CertificateRequest) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials)", "public void processClientCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.generateClientKeyExchange(java.io.OutputStream)", "public void generateClientKeyExchange(java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsSRPKeyExchange.generatePremasterSecret()", "public byte[] generatePremasterSecret() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsSRPUtils", "org.bouncycastle.crypto.tls.TlsSRPUtils()", "public org.bouncycastle.crypto.tls.TlsSRPUtils()"], ["void", "org.bouncycastle.crypto.tls.TlsSRPUtils.addSRPExtension(java.util.Hashtable, byte[])", "public static void addSRPExtension(java.util.Hashtable, byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsSRPUtils.getSRPExtension(java.util.Hashtable)", "public static byte[] getSRPExtension(java.util.Hashtable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsSRPUtils.createSRPExtension(byte[])", "public static byte[] createSRPExtension(byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsSRPUtils.readSRPExtension(byte[])", "public static byte[] readSRPExtension(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsSRTPUtils", "org.bouncycastle.crypto.tls.TlsSRTPUtils()", "public org.bouncycastle.crypto.tls.TlsSRTPUtils()"], ["void", "org.bouncycastle.crypto.tls.TlsSRTPUtils.addUseSRTPExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.UseSRTPData)", "public static void addUseSRTPExtension(java.util.Hashtable, org.bouncycastle.crypto.tls.UseSRTPData) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.UseSRTPData", "org.bouncycastle.crypto.tls.TlsSRTPUtils.getUseSRTPExtension(java.util.Hashtable)", "public static org.bouncycastle.crypto.tls.UseSRTPData getUseSRTPExtension(java.util.Hashtable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsSRTPUtils.createUseSRTPExtension(org.bouncycastle.crypto.tls.UseSRTPData)", "public static byte[] createUseSRTPExtension(org.bouncycastle.crypto.tls.UseSRTPData) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.UseSRTPData", "org.bouncycastle.crypto.tls.TlsSRTPUtils.readUseSRTPExtension(byte[])", "public static org.bouncycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[]) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsServerContextImpl.isServer()", "public boolean isServer()"], ["org.bouncycastle.crypto.tls.TlsServerProtocol", "org.bouncycastle.crypto.tls.TlsServerProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)", "public org.bouncycastle.crypto.tls.TlsServerProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom)"], ["void", "org.bouncycastle.crypto.tls.TlsServerProtocol.accept(org.bouncycastle.crypto.tls.TlsServer)", "public void accept(org.bouncycastle.crypto.tls.TlsServer) throws java.io.IOException"], ["synchronized", "org.bouncycastle.crypto.tls.TlsSessionImpl.org.bouncycastle.crypto.tls.SessionParameters exportSessionParameters()", "public synchronized org.bouncycastle.crypto.tls.SessionParameters exportSessionParameters()"], ["synchronized", "org.bouncycastle.crypto.tls.TlsSessionImpl.byte[] getSessionID()", "public synchronized byte[] getSessionID()"], ["synchronized", "org.bouncycastle.crypto.tls.TlsSessionImpl.void invalidate()", "public synchronized void invalidate()"], ["synchronized", "org.bouncycastle.crypto.tls.TlsSessionImpl.boolean isResumable()", "public synchronized boolean isResumable()"], ["org.bouncycastle.crypto.tls.TlsStreamCipher", "org.bouncycastle.crypto.tls.TlsStreamCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.crypto.tls.TlsStreamCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsStreamCipher", "org.bouncycastle.crypto.tls.TlsStreamCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, boolean)", "public org.bouncycastle.crypto.tls.TlsStreamCipher(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.StreamCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, boolean) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsStreamCipher.getPlaintextLimit(int)", "public int getPlaintextLimit(int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsStreamCipher.encodePlaintext(long, short, byte[], int, int)", "public byte[] encodePlaintext(long, short, byte[], int, int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsStreamCipher.decodeCiphertext(long, short, byte[], int, int)", "public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsUtils", "org.bouncycastle.crypto.tls.TlsUtils()", "public org.bouncycastle.crypto.tls.TlsUtils()"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint8(short)", "public static void checkUint8(short) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint8(int)", "public static void checkUint8(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint8(long)", "public static void checkUint8(long) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint16(int)", "public static void checkUint16(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint16(long)", "public static void checkUint16(long) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint24(int)", "public static void checkUint24(int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint24(long)", "public static void checkUint24(long) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint32(long)", "public static void checkUint32(long) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint48(long)", "public static void checkUint48(long) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.checkUint64(long)", "public static void checkUint64(long) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint8(short)", "public static boolean isValidUint8(short)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint8(int)", "public static boolean isValidUint8(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint8(long)", "public static boolean isValidUint8(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint16(int)", "public static boolean isValidUint16(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint16(long)", "public static boolean isValidUint16(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint24(int)", "public static boolean isValidUint24(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint24(long)", "public static boolean isValidUint24(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint32(long)", "public static boolean isValidUint32(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint48(long)", "public static boolean isValidUint48(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidUint64(long)", "public static boolean isValidUint64(long)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isSSL(org.bouncycastle.crypto.tls.TlsContext)", "public static boolean isSSL(org.bouncycastle.crypto.tls.TlsContext)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isTLSv11(org.bouncycastle.crypto.tls.TlsContext)", "public static boolean isTLSv11(org.bouncycastle.crypto.tls.TlsContext)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isTLSv12(org.bouncycastle.crypto.tls.TlsContext)", "public static boolean isTLSv12(org.bouncycastle.crypto.tls.TlsContext)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8(short, java.io.OutputStream)", "public static void writeUint8(short, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8(int, java.io.OutputStream)", "public static void writeUint8(int, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8(short, byte[], int)", "public static void writeUint8(short, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8(int, byte[], int)", "public static void writeUint8(int, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16(int, java.io.OutputStream)", "public static void writeUint16(int, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16(int, byte[], int)", "public static void writeUint16(int, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint24(int, java.io.OutputStream)", "public static void writeUint24(int, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint24(int, byte[], int)", "public static void writeUint24(int, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint32(long, java.io.OutputStream)", "public static void writeUint32(long, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint32(long, byte[], int)", "public static void writeUint32(long, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint48(long, java.io.OutputStream)", "public static void writeUint48(long, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint48(long, byte[], int)", "public static void writeUint48(long, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint64(long, java.io.OutputStream)", "public static void writeUint64(long, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint64(long, byte[], int)", "public static void writeUint64(long, byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeOpaque8(byte[], java.io.OutputStream)", "public static void writeOpaque8(byte[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeOpaque16(byte[], java.io.OutputStream)", "public static void writeOpaque16(byte[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeOpaque24(byte[], java.io.OutputStream)", "public static void writeOpaque24(byte[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8Array(short[], java.io.OutputStream)", "public static void writeUint8Array(short[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8Array(short[], byte[], int)", "public static void writeUint8Array(short[], byte[], int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8ArrayWithUint8Length(short[], java.io.OutputStream)", "public static void writeUint8ArrayWithUint8Length(short[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint8ArrayWithUint8Length(short[], byte[], int)", "public static void writeUint8ArrayWithUint8Length(short[], byte[], int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16Array(int[], java.io.OutputStream)", "public static void writeUint16Array(int[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16Array(int[], byte[], int)", "public static void writeUint16Array(int[], byte[], int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16ArrayWithUint16Length(int[], java.io.OutputStream)", "public static void writeUint16ArrayWithUint16Length(int[], java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeUint16ArrayWithUint16Length(int[], byte[], int)", "public static void writeUint16ArrayWithUint16Length(int[], byte[], int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.encodeOpaque8(byte[])", "public static byte[] encodeOpaque8(byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.encodeUint8ArrayWithUint8Length(short[])", "public static byte[] encodeUint8ArrayWithUint8Length(short[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.encodeUint16ArrayWithUint16Length(int[])", "public static byte[] encodeUint16ArrayWithUint16Length(int[]) throws java.io.IOException"], ["short", "org.bouncycastle.crypto.tls.TlsUtils.readUint8(java.io.InputStream)", "public static short readUint8(java.io.InputStream) throws java.io.IOException"], ["short", "org.bouncycastle.crypto.tls.TlsUtils.readUint8(byte[], int)", "public static short readUint8(byte[], int)"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readUint16(java.io.InputStream)", "public static int readUint16(java.io.InputStream) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readUint16(byte[], int)", "public static int readUint16(byte[], int)"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readUint24(java.io.InputStream)", "public static int readUint24(java.io.InputStream) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readUint24(byte[], int)", "public static int readUint24(byte[], int)"], ["long", "org.bouncycastle.crypto.tls.TlsUtils.readUint32(java.io.InputStream)", "public static long readUint32(java.io.InputStream) throws java.io.IOException"], ["long", "org.bouncycastle.crypto.tls.TlsUtils.readUint32(byte[], int)", "public static long readUint32(byte[], int)"], ["long", "org.bouncycastle.crypto.tls.TlsUtils.readUint48(java.io.InputStream)", "public static long readUint48(java.io.InputStream) throws java.io.IOException"], ["long", "org.bouncycastle.crypto.tls.TlsUtils.readUint48(byte[], int)", "public static long readUint48(byte[], int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.readAllOrNothing(int, java.io.InputStream)", "public static byte[] readAllOrNothing(int, java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.readFully(int, java.io.InputStream)", "public static byte[] readFully(int, java.io.InputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.readFully(byte[], java.io.InputStream)", "public static void readFully(byte[], java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.readOpaque8(java.io.InputStream)", "public static byte[] readOpaque8(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.readOpaque16(java.io.InputStream)", "public static byte[] readOpaque16(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.readOpaque24(java.io.InputStream)", "public static byte[] readOpaque24(java.io.InputStream) throws java.io.IOException"], ["short[]", "org.bouncycastle.crypto.tls.TlsUtils.readUint8Array(int, java.io.InputStream)", "public static short[] readUint8Array(int, java.io.InputStream) throws java.io.IOException"], ["int[]", "org.bouncycastle.crypto.tls.TlsUtils.readUint16Array(int, java.io.InputStream)", "public static int[] readUint16Array(int, java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.TlsUtils.readVersion(byte[], int)", "public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(byte[], int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.TlsUtils.readVersion(java.io.InputStream)", "public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readVersionRaw(byte[], int)", "public static int readVersionRaw(byte[], int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.readVersionRaw(java.io.InputStream)", "public static int readVersionRaw(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.crypto.tls.TlsUtils.readASN1Object(byte[])", "public static org.bouncycastle.asn1.ASN1Primitive readASN1Object(byte[]) throws java.io.IOException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.crypto.tls.TlsUtils.readDERObject(byte[])", "public static org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeGMTUnixTime(byte[], int)", "public static void writeGMTUnixTime(byte[], int)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, java.io.OutputStream)", "public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, java.io.OutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, byte[], int)", "public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, byte[], int)"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.getDefaultDSSSignatureAlgorithms()", "public static java.util.Vector getDefaultDSSSignatureAlgorithms()"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.getDefaultECDSASignatureAlgorithms()", "public static java.util.Vector getDefaultECDSASignatureAlgorithms()"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.getDefaultRSASignatureAlgorithms()", "public static java.util.Vector getDefaultRSASignatureAlgorithms()"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.getExtensionData(java.util.Hashtable, java.lang.Integer)", "public static byte[] getExtensionData(java.util.Hashtable, java.lang.Integer)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.hasExpectedEmptyExtensionData(java.util.Hashtable, java.lang.Integer, short)", "public static boolean hasExpectedEmptyExtensionData(java.util.Hashtable, java.lang.Integer, short) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.TlsSession", "org.bouncycastle.crypto.tls.TlsUtils.importSession(byte[], org.bouncycastle.crypto.tls.SessionParameters)", "public static org.bouncycastle.crypto.tls.TlsSession importSession(byte[], org.bouncycastle.crypto.tls.SessionParameters)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isSignatureAlgorithmsExtensionAllowed(org.bouncycastle.crypto.tls.ProtocolVersion)", "public static boolean isSignatureAlgorithmsExtensionAllowed(org.bouncycastle.crypto.tls.ProtocolVersion)"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.addSignatureAlgorithmsExtension(java.util.Hashtable, java.util.Vector)", "public static void addSignatureAlgorithmsExtension(java.util.Hashtable, java.util.Vector) throws java.io.IOException"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.getSignatureAlgorithmsExtension(java.util.Hashtable)", "public static java.util.Vector getSignatureAlgorithmsExtension(java.util.Hashtable) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.createSignatureAlgorithmsExtension(java.util.Vector)", "public static byte[] createSignatureAlgorithmsExtension(java.util.Vector) throws java.io.IOException"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.readSignatureAlgorithmsExtension(byte[])", "public static java.util.Vector readSignatureAlgorithmsExtension(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.TlsUtils.encodeSupportedSignatureAlgorithms(java.util.Vector, boolean, java.io.OutputStream)", "public static void encodeSupportedSignatureAlgorithms(java.util.Vector, boolean, java.io.OutputStream) throws java.io.IOException"], ["java.util.Vector", "org.bouncycastle.crypto.tls.TlsUtils.parseSupportedSignatureAlgorithms(boolean, java.io.InputStream)", "public static java.util.Vector parseSupportedSignatureAlgorithms(boolean, java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.PRF(org.bouncycastle.crypto.tls.TlsContext, byte[], java.lang.String, byte[], int)", "public static byte[] PRF(org.bouncycastle.crypto.tls.TlsContext, byte[], java.lang.String, byte[], int)"], ["byte[]", "org.bouncycastle.crypto.tls.TlsUtils.PRF_legacy(byte[], java.lang.String, byte[], int)", "public static byte[] PRF_legacy(byte[], java.lang.String, byte[], int)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.TlsUtils.createHash(short)", "public static org.bouncycastle.crypto.Digest createHash(short)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.TlsUtils.cloneHash(short, org.bouncycastle.crypto.Digest)", "public static org.bouncycastle.crypto.Digest cloneHash(short, org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.TlsUtils.createPRFHash(int)", "public static org.bouncycastle.crypto.Digest createPRFHash(int)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.crypto.tls.TlsUtils.clonePRFHash(int, org.bouncycastle.crypto.Digest)", "public static org.bouncycastle.crypto.Digest clonePRFHash(int, org.bouncycastle.crypto.Digest)"], ["short", "org.bouncycastle.crypto.tls.TlsUtils.getHashAlgorithmForPRFAlgorithm(int)", "public static short getHashAlgorithmForPRFAlgorithm(int)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.crypto.tls.TlsUtils.getOIDForHashAlgorithm(short)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOIDForHashAlgorithm(short)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.hasSigningCapability(short)", "public static boolean hasSigningCapability(short)"], ["org.bouncycastle.crypto.tls.TlsSigner", "org.bouncycastle.crypto.tls.TlsUtils.createTlsSigner(short)", "public static org.bouncycastle.crypto.tls.TlsSigner createTlsSigner(short)"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.getCipherType(int)", "public static int getCipherType(int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.TlsUtils.getEncryptionAlgorithm(int)", "public static int getEncryptionAlgorithm(int) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.ProtocolVersion", "org.bouncycastle.crypto.tls.TlsUtils.getMinimumVersion(int)", "public static org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion(int)"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isAEADCipherSuite(int)", "public static boolean isAEADCipherSuite(int) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isBlockCipherSuite(int)", "public static boolean isBlockCipherSuite(int) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isStreamCipherSuite(int)", "public static boolean isStreamCipherSuite(int) throws java.io.IOException"], ["boolean", "org.bouncycastle.crypto.tls.TlsUtils.isValidCipherSuiteForVersion(int, org.bouncycastle.crypto.tls.ProtocolVersion)", "public static boolean isValidCipherSuiteForVersion(int, org.bouncycastle.crypto.tls.ProtocolVersion)"], ["org.bouncycastle.crypto.tls.UDPTransport", "org.bouncycastle.crypto.tls.UDPTransport(java.net.DatagramSocket, int)", "public org.bouncycastle.crypto.tls.UDPTransport(java.net.DatagramSocket, int) throws java.io.IOException"], ["int", "org.bouncycastle.crypto.tls.UDPTransport.getReceiveLimit()", "public int getReceiveLimit()"], ["int", "org.bouncycastle.crypto.tls.UDPTransport.getSendLimit()", "public int getSendLimit()"], ["int", "org.bouncycastle.crypto.tls.UDPTransport.receive(byte[], int, int, int)", "public int receive(byte[], int, int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.UDPTransport.send(byte[], int, int)", "public void send(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.crypto.tls.UDPTransport.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.crypto.tls.URLAndHash", "org.bouncycastle.crypto.tls.URLAndHash(java.lang.String, byte[])", "public org.bouncycastle.crypto.tls.URLAndHash(java.lang.String, byte[])"], ["java.lang.String", "org.bouncycastle.crypto.tls.URLAndHash.getURL()", "public java.lang.String getURL()"], ["byte[]", "org.bouncycastle.crypto.tls.URLAndHash.getSHA1Hash()", "public byte[] getSHA1Hash()"], ["void", "org.bouncycastle.crypto.tls.URLAndHash.encode(java.io.OutputStream)", "public void encode(java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.URLAndHash", "org.bouncycastle.crypto.tls.URLAndHash.parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream)", "public static org.bouncycastle.crypto.tls.URLAndHash parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.tls.UseSRTPData", "org.bouncycastle.crypto.tls.UseSRTPData(int[], byte[])", "public org.bouncycastle.crypto.tls.UseSRTPData(int[], byte[])"], ["int[]", "org.bouncycastle.crypto.tls.UseSRTPData.getProtectionProfiles()", "public int[] getProtectionProfiles()"], ["byte[]", "org.bouncycastle.crypto.tls.UseSRTPData.getMki()", "public byte[] getMki()"], ["org.bouncycastle.crypto.tls.UserMappingType", "org.bouncycastle.crypto.tls.UserMappingType()", "public org.bouncycastle.crypto.tls.UserMappingType()"], ["org.bouncycastle.crypto.util.Pack", "org.bouncycastle.crypto.util.Pack()", "public org.bouncycastle.crypto.util.Pack()"], ["int", "org.bouncycastle.crypto.util.Pack.bigEndianToInt(byte[], int)", "public static int bigEndianToInt(byte[], int)"], ["void", "org.bouncycastle.crypto.util.Pack.bigEndianToInt(byte[], int, int[])", "public static void bigEndianToInt(byte[], int, int[])"], ["byte[]", "org.bouncycastle.crypto.util.Pack.intToBigEndian(int)", "public static byte[] intToBigEndian(int)"], ["void", "org.bouncycastle.crypto.util.Pack.intToBigEndian(int, byte[], int)", "public static void intToBigEndian(int, byte[], int)"], ["byte[]", "org.bouncycastle.crypto.util.Pack.intToBigEndian(int[])", "public static byte[] intToBigEndian(int[])"], ["void", "org.bouncycastle.crypto.util.Pack.intToBigEndian(int[], byte[], int)", "public static void intToBigEndian(int[], byte[], int)"], ["long", "org.bouncycastle.crypto.util.Pack.bigEndianToLong(byte[], int)", "public static long bigEndianToLong(byte[], int)"], ["void", "org.bouncycastle.crypto.util.Pack.bigEndianToLong(byte[], int, long[])", "public static void bigEndianToLong(byte[], int, long[])"], ["byte[]", "org.bouncycastle.crypto.util.Pack.longToBigEndian(long)", "public static byte[] longToBigEndian(long)"], ["void", "org.bouncycastle.crypto.util.Pack.longToBigEndian(long, byte[], int)", "public static void longToBigEndian(long, byte[], int)"], ["byte[]", "org.bouncycastle.crypto.util.Pack.longToBigEndian(long[])", "public static byte[] longToBigEndian(long[])"], ["void", "org.bouncycastle.crypto.util.Pack.longToBigEndian(long[], byte[], int)", "public static void longToBigEndian(long[], byte[], int)"], ["int", "org.bouncycastle.crypto.util.Pack.littleEndianToInt(byte[], int)", "public static int littleEndianToInt(byte[], int)"], ["void", "org.bouncycastle.crypto.util.Pack.littleEndianToInt(byte[], int, int[])", "public static void littleEndianToInt(byte[], int, int[])"], ["void", "org.bouncycastle.crypto.util.Pack.littleEndianToInt(byte[], int, int[], int, int)", "public static void littleEndianToInt(byte[], int, int[], int, int)"], ["byte[]", "org.bouncycastle.crypto.util.Pack.intToLittleEndian(int)", "public static byte[] intToLittleEndian(int)"], ["void", "org.bouncycastle.crypto.util.Pack.intToLittleEndian(int, byte[], int)", "public static void intToLittleEndian(int, byte[], int)"], ["byte[]", "org.bouncycastle.crypto.util.Pack.intToLittleEndian(int[])", "public static byte[] intToLittleEndian(int[])"], ["void", "org.bouncycastle.crypto.util.Pack.intToLittleEndian(int[], byte[], int)", "public static void intToLittleEndian(int[], byte[], int)"], ["long", "org.bouncycastle.crypto.util.Pack.littleEndianToLong(byte[], int)", "public static long littleEndianToLong(byte[], int)"], ["void", "org.bouncycastle.crypto.util.Pack.littleEndianToLong(byte[], int, long[])", "public static void littleEndianToLong(byte[], int, long[])"], ["byte[]", "org.bouncycastle.crypto.util.Pack.longToLittleEndian(long)", "public static byte[] longToLittleEndian(long)"], ["void", "org.bouncycastle.crypto.util.Pack.longToLittleEndian(long, byte[], int)", "public static void longToLittleEndian(long, byte[], int)"], ["byte[]", "org.bouncycastle.crypto.util.Pack.longToLittleEndian(long[])", "public static byte[] longToLittleEndian(long[])"], ["void", "org.bouncycastle.crypto.util.Pack.longToLittleEndian(long[], byte[], int)", "public static void longToLittleEndian(long[], byte[], int)"], ["org.bouncycastle.crypto.util.PrivateKeyFactory", "org.bouncycastle.crypto.util.PrivateKeyFactory()", "public org.bouncycastle.crypto.util.PrivateKeyFactory()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PrivateKeyFactory.createKey(byte[])", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PrivateKeyFactory.createKey(java.io.InputStream)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PrivateKeyFactory.createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["org.bouncycastle.crypto.util.PrivateKeyInfoFactory", "org.bouncycastle.crypto.util.PrivateKeyInfoFactory()", "public org.bouncycastle.crypto.util.PrivateKeyInfoFactory()"], ["org.bouncycastle.asn1.pkcs.PrivateKeyInfo", "org.bouncycastle.crypto.util.PrivateKeyInfoFactory.createPrivateKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public static org.bouncycastle.asn1.pkcs.PrivateKeyInfo createPrivateKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter) throws java.io.IOException"], ["org.bouncycastle.crypto.util.PublicKeyFactory", "org.bouncycastle.crypto.util.PublicKeyFactory()", "public org.bouncycastle.crypto.util.PublicKeyFactory()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PublicKeyFactory.createKey(byte[])", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[]) throws java.io.IOException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PublicKeyFactory.createKey(java.io.InputStream)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.crypto.util.PublicKeyFactory.createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory", "org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory()", "public org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory()"], ["org.bouncycastle.asn1.x509.SubjectPublicKeyInfo", "org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory.createSubjectPublicKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public static org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter) throws java.io.IOException"], ["org.bouncycastle.i18n.ErrorBundle", "org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.ErrorBundle", "org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["org.bouncycastle.i18n.ErrorBundle", "org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.ErrorBundle", "org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.ErrorBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["java.lang.String", "org.bouncycastle.i18n.ErrorBundle.getSummary(java.util.Locale, java.util.TimeZone)", "public java.lang.String getSummary(java.util.Locale, java.util.TimeZone) throws org.bouncycastle.i18n.MissingEntryException"], ["java.lang.String", "org.bouncycastle.i18n.ErrorBundle.getSummary(java.util.Locale)", "public java.lang.String getSummary(java.util.Locale) throws org.bouncycastle.i18n.MissingEntryException"], ["java.lang.String", "org.bouncycastle.i18n.ErrorBundle.getDetail(java.util.Locale, java.util.TimeZone)", "public java.lang.String getDetail(java.util.Locale, java.util.TimeZone) throws org.bouncycastle.i18n.MissingEntryException"], ["java.lang.String", "org.bouncycastle.i18n.ErrorBundle.getDetail(java.util.Locale)", "public java.lang.String getDetail(java.util.Locale) throws org.bouncycastle.i18n.MissingEntryException"], ["org.bouncycastle.i18n.LocaleString", "org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String)"], ["org.bouncycastle.i18n.LocaleString", "org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["org.bouncycastle.i18n.LocaleString", "org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.LocaleString(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["java.lang.String", "org.bouncycastle.i18n.LocaleString.getLocaleString(java.util.Locale)", "public java.lang.String getLocaleString(java.util.Locale)"], ["org.bouncycastle.i18n.LocalizedException", "org.bouncycastle.i18n.LocalizedException(org.bouncycastle.i18n.ErrorBundle)", "public org.bouncycastle.i18n.LocalizedException(org.bouncycastle.i18n.ErrorBundle)"], ["org.bouncycastle.i18n.LocalizedException", "org.bouncycastle.i18n.LocalizedException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable)", "public org.bouncycastle.i18n.LocalizedException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable)"], ["org.bouncycastle.i18n.ErrorBundle", "org.bouncycastle.i18n.LocalizedException.getErrorMessage()", "public org.bouncycastle.i18n.ErrorBundle getErrorMessage()"], ["java.lang.Throwable", "org.bouncycastle.i18n.LocalizedException.getCause()", "public java.lang.Throwable getCause()"], ["boolean", "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments.isEmpty()", "public boolean isEmpty()"], ["java.lang.Object[]", "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments.getArguments()", "public java.lang.Object[] getArguments()"], ["java.lang.Object[]", "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments.getFilteredArgs(java.util.Locale)", "public java.lang.Object[] getFilteredArgs(java.util.Locale)"], ["org.bouncycastle.i18n.filter.Filter", "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments.getFilter()", "public org.bouncycastle.i18n.filter.Filter getFilter()"], ["void", "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments.setFilter(org.bouncycastle.i18n.filter.Filter)", "public void setFilter(org.bouncycastle.i18n.filter.Filter)"], ["org.bouncycastle.i18n.LocalizedMessage", "org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.LocalizedMessage", "org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["org.bouncycastle.i18n.LocalizedMessage", "org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.LocalizedMessage", "org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.LocalizedMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["java.lang.String", "org.bouncycastle.i18n.LocalizedMessage.getEntry(java.lang.String, java.util.Locale, java.util.TimeZone)", "public java.lang.String getEntry(java.lang.String, java.util.Locale, java.util.TimeZone) throws org.bouncycastle.i18n.MissingEntryException"], ["void", "org.bouncycastle.i18n.LocalizedMessage.setFilter(org.bouncycastle.i18n.filter.Filter)", "public void setFilter(org.bouncycastle.i18n.filter.Filter)"], ["org.bouncycastle.i18n.filter.Filter", "org.bouncycastle.i18n.LocalizedMessage.getFilter()", "public org.bouncycastle.i18n.filter.Filter getFilter()"], ["void", "org.bouncycastle.i18n.LocalizedMessage.setClassLoader(java.lang.ClassLoader)", "public void setClassLoader(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.bouncycastle.i18n.LocalizedMessage.getClassLoader()", "public java.lang.ClassLoader getClassLoader()"], ["java.lang.String", "org.bouncycastle.i18n.LocalizedMessage.getId()", "public java.lang.String getId()"], ["java.lang.String", "org.bouncycastle.i18n.LocalizedMessage.getResource()", "public java.lang.String getResource()"], ["java.lang.Object[]", "org.bouncycastle.i18n.LocalizedMessage.getArguments()", "public java.lang.Object[] getArguments()"], ["void", "org.bouncycastle.i18n.LocalizedMessage.setExtraArgument(java.lang.Object)", "public void setExtraArgument(java.lang.Object)"], ["void", "org.bouncycastle.i18n.LocalizedMessage.setExtraArguments(java.lang.Object[])", "public void setExtraArguments(java.lang.Object[])"], ["java.lang.Object[]", "org.bouncycastle.i18n.LocalizedMessage.getExtraArgs()", "public java.lang.Object[] getExtraArgs()"], ["java.lang.String", "org.bouncycastle.i18n.LocalizedMessage.toString()", "public java.lang.String toString()"], ["org.bouncycastle.i18n.MessageBundle", "org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.MessageBundle", "org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["org.bouncycastle.i18n.MessageBundle", "org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.MessageBundle", "org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.MessageBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["java.lang.String", "org.bouncycastle.i18n.MessageBundle.getTitle(java.util.Locale, java.util.TimeZone)", "public java.lang.String getTitle(java.util.Locale, java.util.TimeZone) throws org.bouncycastle.i18n.MissingEntryException"], ["java.lang.String", "org.bouncycastle.i18n.MessageBundle.getTitle(java.util.Locale)", "public java.lang.String getTitle(java.util.Locale) throws org.bouncycastle.i18n.MissingEntryException"], ["org.bouncycastle.i18n.MissingEntryException", "org.bouncycastle.i18n.MissingEntryException(java.lang.String, java.lang.String, java.lang.String, java.util.Locale, java.lang.ClassLoader)", "public org.bouncycastle.i18n.MissingEntryException(java.lang.String, java.lang.String, java.lang.String, java.util.Locale, java.lang.ClassLoader)"], ["org.bouncycastle.i18n.MissingEntryException", "org.bouncycastle.i18n.MissingEntryException(java.lang.String, java.lang.Throwable, java.lang.String, java.lang.String, java.util.Locale, java.lang.ClassLoader)", "public org.bouncycastle.i18n.MissingEntryException(java.lang.String, java.lang.Throwable, java.lang.String, java.lang.String, java.util.Locale, java.lang.ClassLoader)"], ["java.lang.String", "org.bouncycastle.i18n.MissingEntryException.getKey()", "public java.lang.String getKey()"], ["java.lang.String", "org.bouncycastle.i18n.MissingEntryException.getResource()", "public java.lang.String getResource()"], ["java.lang.ClassLoader", "org.bouncycastle.i18n.MissingEntryException.getClassLoader()", "public java.lang.ClassLoader getClassLoader()"], ["java.util.Locale", "org.bouncycastle.i18n.MissingEntryException.getLocale()", "public java.util.Locale getLocale()"], ["java.lang.String", "org.bouncycastle.i18n.MissingEntryException.getDebugMsg()", "public java.lang.String getDebugMsg()"], ["org.bouncycastle.i18n.TextBundle", "org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.TextBundle", "org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["org.bouncycastle.i18n.TextBundle", "org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException"], ["org.bouncycastle.i18n.TextBundle", "org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])", "public org.bouncycastle.i18n.TextBundle(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) throws java.lang.NullPointerException, java.io.UnsupportedEncodingException"], ["java.lang.String", "org.bouncycastle.i18n.TextBundle.getText(java.util.Locale, java.util.TimeZone)", "public java.lang.String getText(java.util.Locale, java.util.TimeZone) throws org.bouncycastle.i18n.MissingEntryException"], ["java.lang.String", "org.bouncycastle.i18n.TextBundle.getText(java.util.Locale)", "public java.lang.String getText(java.util.Locale) throws org.bouncycastle.i18n.MissingEntryException"], ["org.bouncycastle.i18n.filter.HTMLFilter", "org.bouncycastle.i18n.filter.HTMLFilter()", "public org.bouncycastle.i18n.filter.HTMLFilter()"], ["java.lang.String", "org.bouncycastle.i18n.filter.HTMLFilter.doFilter(java.lang.String)", "public java.lang.String doFilter(java.lang.String)"], ["java.lang.String", "org.bouncycastle.i18n.filter.HTMLFilter.doFilterUrl(java.lang.String)", "public java.lang.String doFilterUrl(java.lang.String)"], ["org.bouncycastle.i18n.filter.SQLFilter", "org.bouncycastle.i18n.filter.SQLFilter()", "public org.bouncycastle.i18n.filter.SQLFilter()"], ["java.lang.String", "org.bouncycastle.i18n.filter.SQLFilter.doFilter(java.lang.String)", "public java.lang.String doFilter(java.lang.String)"], ["java.lang.String", "org.bouncycastle.i18n.filter.SQLFilter.doFilterUrl(java.lang.String)", "public java.lang.String doFilterUrl(java.lang.String)"], ["org.bouncycastle.i18n.filter.TrustedInput", "org.bouncycastle.i18n.filter.TrustedInput(java.lang.Object)", "public org.bouncycastle.i18n.filter.TrustedInput(java.lang.Object)"], ["java.lang.Object", "org.bouncycastle.i18n.filter.TrustedInput.getInput()", "public java.lang.Object getInput()"], ["java.lang.String", "org.bouncycastle.i18n.filter.TrustedInput.toString()", "public java.lang.String toString()"], ["org.bouncycastle.i18n.filter.UntrustedInput", "org.bouncycastle.i18n.filter.UntrustedInput(java.lang.Object)", "public org.bouncycastle.i18n.filter.UntrustedInput(java.lang.Object)"], ["java.lang.Object", "org.bouncycastle.i18n.filter.UntrustedInput.getInput()", "public java.lang.Object getInput()"], ["java.lang.String", "org.bouncycastle.i18n.filter.UntrustedInput.getString()", "public java.lang.String getString()"], ["java.lang.String", "org.bouncycastle.i18n.filter.UntrustedInput.toString()", "public java.lang.String toString()"], ["org.bouncycastle.i18n.filter.UntrustedUrlInput", "org.bouncycastle.i18n.filter.UntrustedUrlInput(java.lang.Object)", "public org.bouncycastle.i18n.filter.UntrustedUrlInput(java.lang.Object)"], ["org.bouncycastle.jcajce.io.CipherInputStream", "org.bouncycastle.jcajce.io.CipherInputStream(java.io.InputStream, javax.crypto.Cipher)", "public org.bouncycastle.jcajce.io.CipherInputStream(java.io.InputStream, javax.crypto.Cipher)"], ["int", "org.bouncycastle.jcajce.io.CipherInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.bouncycastle.jcajce.io.CipherInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["long", "org.bouncycastle.jcajce.io.CipherInputStream.skip(long)", "public long skip(long) throws java.io.IOException"], ["int", "org.bouncycastle.jcajce.io.CipherInputStream.available()", "public int available() throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.CipherInputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.CipherInputStream.mark(int)", "public void mark(int)"], ["void", "org.bouncycastle.jcajce.io.CipherInputStream.reset()", "public void reset() throws java.io.IOException"], ["boolean", "org.bouncycastle.jcajce.io.CipherInputStream.markSupported()", "public boolean markSupported()"], ["org.bouncycastle.jcajce.io.CipherOutputStream", "org.bouncycastle.jcajce.io.CipherOutputStream(java.io.OutputStream, javax.crypto.Cipher)", "public org.bouncycastle.jcajce.io.CipherOutputStream(java.io.OutputStream, javax.crypto.Cipher)"], ["void", "org.bouncycastle.jcajce.io.CipherOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.CipherOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.CipherOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.CipherOutputStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.jcajce.io.MacOutputStream", "org.bouncycastle.jcajce.io.MacOutputStream(javax.crypto.Mac)", "public org.bouncycastle.jcajce.io.MacOutputStream(javax.crypto.Mac)"], ["void", "org.bouncycastle.jcajce.io.MacOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.io.MacOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["byte[]", "org.bouncycastle.jcajce.io.MacOutputStream.getMac()", "public byte[] getMac()"], ["org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.DH", "org.bouncycastle.jcajce.provider.asymmetric.DH()", "public org.bouncycastle.jcajce.provider.asymmetric.DH()"], ["org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.DSA", "org.bouncycastle.jcajce.provider.asymmetric.DSA()", "public org.bouncycastle.jcajce.provider.asymmetric.DSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.DSTU4145", "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145()", "public org.bouncycastle.jcajce.provider.asymmetric.DSTU4145()"], ["org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.EC", "org.bouncycastle.jcajce.provider.asymmetric.EC()", "public org.bouncycastle.jcajce.provider.asymmetric.EC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.ECGOST", "org.bouncycastle.jcajce.provider.asymmetric.ECGOST()", "public org.bouncycastle.jcajce.provider.asymmetric.ECGOST()"], ["org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.ElGamal", "org.bouncycastle.jcajce.provider.asymmetric.ElGamal()", "public org.bouncycastle.jcajce.provider.asymmetric.ElGamal()"], ["org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.GOST", "org.bouncycastle.jcajce.provider.asymmetric.GOST()", "public org.bouncycastle.jcajce.provider.asymmetric.GOST()"], ["org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.IES", "org.bouncycastle.jcajce.provider.asymmetric.IES()", "public org.bouncycastle.jcajce.provider.asymmetric.IES()"], ["org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.RSA", "org.bouncycastle.jcajce.provider.asymmetric.RSA()", "public org.bouncycastle.jcajce.provider.asymmetric.RSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings", "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings()", "public org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.asymmetric.X509", "org.bouncycastle.jcajce.provider.asymmetric.X509()", "public org.bouncycastle.jcajce.provider.asymmetric.X509()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParameterGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParameterGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParameterGeneratorSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.getEncoded()", "public byte[] getEncoded()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.getY()", "public java.math.BigInteger getY()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$1.getEncoded(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public byte[] getEncoded(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IES", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IES()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IES()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithAES", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithAES()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithAES()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithDESede", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithDESede()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithDESede()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher(org.bouncycastle.crypto.engines.IESEngine)", "public org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher(org.bouncycastle.crypto.engines.IESEngine)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineGetBlockSize()", "public int engineGetBlockSize()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineGetKeySize(java.security.Key)", "public int engineGetKeySize(java.security.Key)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineGetIV()", "public byte[] engineGetIV()"], ["java.security.AlgorithmParameters", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineGetParameters()", "public java.security.AlgorithmParameters engineGetParameters()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineSetMode(java.lang.String)", "public void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineGetOutputSize(int)", "public int engineGetOutputSize(int)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineSetPadding(java.lang.String)", "public void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException, java.security.InvalidKeyException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineInit(int, java.security.Key, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineUpdate(byte[], int, int)", "public byte[] engineUpdate(byte[], int, int)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineUpdate(byte[], int, int, byte[], int)", "public int engineUpdate(byte[], int, int, byte[], int)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineDoFinal(byte[], int, int)", "public byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher.engineDoFinal(byte[], int, int, byte[], int)", "public int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.interfaces.DSAParams", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getParams()", "public java.security.interfaces.DSAParams getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.interfaces.DSAParams", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.getParams()", "public java.security.interfaces.DSAParams getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.getY()", "public java.math.BigInteger getY()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA224", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA224()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA224()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA256", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA256()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA256()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA512", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA512()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA512()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa224", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa224()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa224()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa256", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa256()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa256()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa384", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa384()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa384()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa512", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa512()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa512()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$noneDSA", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$noneDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$noneDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$stdDSA", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$stdDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner$stdDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil.isDsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static boolean isDsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.security.interfaces.ECPrivateKey)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.security.interfaces.ECPrivateKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(org.bouncycastle.jce.spec.ECPrivateKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(org.bouncycastle.jce.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.security.spec.ECPrivateKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.security.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getS()", "public java.math.BigInteger getS()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getD()", "public java.math.BigInteger getD()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.security.spec.ECPublicKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.security.spec.ECPublicKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(org.bouncycastle.jce.spec.ECPublicKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(org.bouncycastle.jce.spec.ECPublicKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.security.interfaces.ECPublicKey)", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey(java.security.interfaces.ECPublicKey)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getSbox()", "public byte[] getSbox()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.security.spec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getW()", "public java.security.spec.ECPoint getW()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.engineGetQ()", "public org.bouncycastle.math.ec.ECPoint engineGetQ()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey.hashCode()", "public int hashCode()"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi", "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe", "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe()", "public org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.security.interfaces.ECPrivateKey, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.security.interfaces.ECPrivateKey, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.jce.spec.ECPrivateKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.jce.spec.ECPrivateKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, java.security.spec.ECPrivateKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, java.security.spec.ECPrivateKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey, java.security.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey, java.security.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey, org.bouncycastle.jce.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey, org.bouncycastle.jce.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getS()", "public java.math.BigInteger getS()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getD()", "public java.math.BigInteger getD()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, java.security.spec.ECPublicKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, java.security.spec.ECPublicKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.jce.spec.ECPublicKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.jce.spec.ECPublicKeySpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.security.interfaces.ECPublicKey, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey(java.security.interfaces.ECPublicKey, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.security.spec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getW()", "public java.security.spec.ECPoint getW()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.engineGetQ()", "public org.bouncycastle.math.ec.ECPoint engineGetQ()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey.hashCode()", "public int hashCode()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$1.getEncoded(org.bouncycastle.crypto.params.AsymmetricKeyParameter)", "public byte[] getEncoded(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIES", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIES()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIES()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAES", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAES()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAES()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESede", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESede()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESede()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher(org.bouncycastle.crypto.engines.IESEngine)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher(org.bouncycastle.crypto.engines.IESEngine)"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher(org.bouncycastle.crypto.engines.IESEngine, int)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher(org.bouncycastle.crypto.engines.IESEngine, int)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineGetBlockSize()", "public int engineGetBlockSize()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineGetKeySize(java.security.Key)", "public int engineGetKeySize(java.security.Key)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineGetIV()", "public byte[] engineGetIV()"], ["java.security.AlgorithmParameters", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineGetParameters()", "public java.security.AlgorithmParameters engineGetParameters()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineSetMode(java.lang.String)", "public void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineGetOutputSize(int)", "public int engineGetOutputSize(int)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineSetPadding(java.lang.String)", "public void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException, java.security.InvalidKeyException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineInit(int, java.security.Key, java.security.SecureRandom)", "public void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineUpdate(byte[], int, int)", "public byte[] engineUpdate(byte[], int, int)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineUpdate(byte[], int, int, byte[], int)", "public int engineUpdate(byte[], int, int, byte[], int)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineDoFinal(byte[], int, int)", "public byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher.engineDoFinal(byte[], int, int, byte[], int)", "public int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DH", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DH()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DH()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDF", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDF()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDF()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQV", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQV()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQV()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1KDF", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1KDF()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1KDF()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDH", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDH()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDH()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDHC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDHC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDHC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECGOST3410", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECGOST3410()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECGOST3410()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC(java.lang.String, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC(java.lang.String, org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDHC", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDHC()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDHC()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECMQV", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECMQV()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECMQV()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi(java.lang.String)", "public org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi(java.lang.String)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$PlainDSAEncoder.encode(java.math.BigInteger, java.math.BigInteger)", "public byte[] encode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException"], ["java.math.BigInteger[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$PlainDSAEncoder.decode(byte[])", "public java.math.BigInteger[] decode(byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder.encode(java.math.BigInteger, java.math.BigInteger)", "public byte[] encode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException"], ["java.math.BigInteger[]", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder.decode(byte[])", "public java.math.BigInteger[] decode(byte[]) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA224", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA224()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA224()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA256", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA256()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA256()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA384", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA384()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA384()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA512", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA512()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA512()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSARipeMD160", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSARipeMD160()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSARipeMD160()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSAnone", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSAnone()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSAnone()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA224", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA224()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA224()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA384", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA384()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA384()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA512", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA512()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA512()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR224", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR224()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR224()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR256", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR256()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR256()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR384", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR384()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR384()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512()"], ["org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecPlainDSARP160", "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecPlainDSARP160()", "public org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecPlainDSARP160()"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.security.interfaces.ECPrivateKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.security.interfaces.ECPrivateKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(org.bouncycastle.jce.spec.ECPrivateKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(org.bouncycastle.jce.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.security.spec.ECPrivateKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.security.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getS()", "public java.math.BigInteger getS()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getD()", "public java.math.BigInteger getD()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.security.spec.ECPublicKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.security.spec.ECPublicKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(org.bouncycastle.jce.spec.ECPublicKeySpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(org.bouncycastle.jce.spec.ECPublicKeySpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.security.interfaces.ECPublicKey)", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey(java.security.interfaces.ECPublicKey)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.security.spec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getW()", "public java.security.spec.ECPoint getW()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.engineGetQ()", "public org.bouncycastle.math.ec.ECPoint engineGetQ()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.hashCode()", "public int hashCode()"], ["org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey.getGostParams()", "public org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getGostParams()"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi", "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getParameters()", "public org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.getY()", "public java.math.BigInteger getY()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$NoPadding", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$NoPadding()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$NoPadding()"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$PKCS1v1_5Padding", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$PKCS1v1_5Padding()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$PKCS1v1_5Padding()"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.ElGamalUtil", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.ElGamalUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.ElGamalUtil()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.ElGamalUtil.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.ElGamalUtil.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParameterGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParameterGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParameterGeneratorSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.interfaces.GOST3410Params", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getParameters()", "public org.bouncycastle.jce.interfaces.GOST3410Params getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.interfaces.GOST3410Params", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.getParameters()", "public org.bouncycastle.jce.interfaces.GOST3410Params getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.getY()", "public java.math.BigInteger getY()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey.hashCode()", "public int hashCode()"], ["org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi", "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi$IES", "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi$IES()", "public org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi$IES()"], ["org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi", "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi(org.bouncycastle.crypto.engines.IESEngine)", "public org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi(org.bouncycastle.crypto.engines.IESEngine)"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP", "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS", "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getEncoded()", "public byte[] getEncoded()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getPrimeP()", "public java.math.BigInteger getPrimeP()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getPrimeQ()", "public java.math.BigInteger getPrimeQ()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getPrimeExponentP()", "public java.math.BigInteger getPrimeExponentP()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getPrimeExponentQ()", "public java.math.BigInteger getPrimeExponentQ()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.getCrtCoefficient()", "public java.math.BigInteger getCrtCoefficient()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey.toString()", "public java.lang.String toString()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getPrivateExponent()", "public java.math.BigInteger getPrivateExponent()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.getEncoded()", "public byte[] getEncoded()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$ISO9796d1Padding", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$ISO9796d1Padding()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$ISO9796d1Padding()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$NoPadding", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$NoPadding()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$NoPadding()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$OAEPPadding", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$OAEPPadding()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$OAEPPadding()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PrivateOnly", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PrivateOnly()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PrivateOnly()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PublicOnly", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PublicOnly()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$PKCS1v1_5Padding_PublicOnly()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(javax.crypto.spec.OAEPParameterSpec)", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(javax.crypto.spec.OAEPParameterSpec)"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(boolean, boolean, org.bouncycastle.crypto.AsymmetricBlockCipher)", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi(boolean, boolean, org.bouncycastle.crypto.AsymmetricBlockCipher)"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD2", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD2()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD2()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD4", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD4()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD4()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD5", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD5()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$MD5()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD128", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD128()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD128()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD160", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD160()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD160()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD256", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD256()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$RIPEMD256()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA1", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA1()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA1()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA224", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA224()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA224()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA256", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA256()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA256()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA384", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA384()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA384()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA512", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA512()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$SHA512()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$noneRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$noneRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi$noneRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$MD5WithRSAEncryption", "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$MD5WithRSAEncryption()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$MD5WithRSAEncryption()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$RIPEMD160WithRSAEncryption", "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$RIPEMD160WithRSAEncryption()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$RIPEMD160WithRSAEncryption()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$SHA1WithRSAEncryption", "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$SHA1WithRSAEncryption()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi$SHA1WithRSAEncryption()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi(java.lang.String)", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi(java.lang.String)"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest(org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest(org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi, org.bouncycastle.crypto.Digest)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.getDigestSize()", "public int getDigestSize()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.update(byte[], int, int)", "public void update(byte[], int, int)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.doFinal(byte[], int)", "public int doFinal(byte[], int)"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.reset()", "public void reset()"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest.getByteLength()", "public int getByteLength()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$PSSwithRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$PSSwithRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$PSSwithRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA1withRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA1withRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA1withRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA224withRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA224withRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA224withRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA256withRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA256withRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA256withRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA384withRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA384withRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA384withRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA512withRSA", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA512withRSA()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$SHA512withRSA()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$nonePSS", "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$nonePSS()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$nonePSS()"], ["org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil", "org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil.isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static boolean isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi", "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi()", "public org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi()"], ["org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil", "org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util()", "public org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util()"], ["java.security.spec.EllipticCurve", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertCurve(org.bouncycastle.math.ec.ECCurve, byte[])", "public static java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve, byte[])"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertCurve(java.security.spec.EllipticCurve)", "public static org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertSpec(java.security.spec.EllipticCurve, org.bouncycastle.jce.spec.ECParameterSpec)", "public static java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertSpec(java.security.spec.ECParameterSpec, boolean)", "public static org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertPoint(java.security.spec.ECParameterSpec, java.security.spec.ECPoint, boolean)", "public static org.bouncycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec, java.security.spec.ECPoint, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util.convertPoint(org.bouncycastle.math.ec.ECCurve, java.security.spec.ECPoint, boolean)", "public static org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve, java.security.spec.ECPoint, boolean)"], ["org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil.getNamedCurveOid(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getNamedCurveOid(java.lang.String)"], ["org.bouncycastle.asn1.x9.X9ECParameters", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil.getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil.getCurveName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getCurveName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException", "org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jcajce.provider.asymmetric.util.GOST3410Util", "org.bouncycastle.jcajce.provider.asymmetric.util.GOST3410Util()", "public org.bouncycastle.jcajce.provider.asymmetric.util.GOST3410Util()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.GOST3410Util.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jcajce.provider.asymmetric.util.GOST3410Util.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.jcajce.provider.asymmetric.util.IESUtil", "org.bouncycastle.jcajce.provider.asymmetric.util.IESUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.util.IESUtil()"], ["org.bouncycastle.jce.spec.IESParameterSpec", "org.bouncycastle.jcajce.provider.asymmetric.util.IESUtil.guessParameterSpec(org.bouncycastle.crypto.engines.IESEngine)", "public static org.bouncycastle.jce.spec.IESParameterSpec guessParameterSpec(org.bouncycastle.crypto.engines.IESEngine)"], ["org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil()", "public org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil.getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public static byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil.getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public static byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"], ["org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl()", "public org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl.writeObject(java.io.ObjectOutputStream)", "public void writeObject(java.io.ObjectOutputStream) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl.readObject(java.io.ObjectInputStream)", "public void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException"], ["org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException(org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory, java.lang.Throwable)", "public org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException(org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory, java.lang.Throwable)"], ["org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException(org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory, java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException(org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory, java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory()", "public org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory()"], ["java.security.cert.Certificate", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCertificate(java.io.InputStream)", "public java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream) throws java.security.cert.CertificateException"], ["java.util.Collection", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCertificates(java.io.InputStream)", "public java.util.Collection engineGenerateCertificates(java.io.InputStream) throws java.security.cert.CertificateException"], ["java.security.cert.CRL", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCRL(java.io.InputStream)", "public java.security.cert.CRL engineGenerateCRL(java.io.InputStream) throws java.security.cert.CRLException"], ["java.util.Collection", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCRLs(java.io.InputStream)", "public java.util.Collection engineGenerateCRLs(java.io.InputStream) throws java.security.cert.CRLException"], ["java.util.Iterator", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGetCertPathEncodings()", "public java.util.Iterator engineGetCertPathEncodings()"], ["java.security.cert.CertPath", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCertPath(java.io.InputStream)", "public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) throws java.security.cert.CertificateException"], ["java.security.cert.CertPath", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCertPath(java.io.InputStream, java.lang.String)", "public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) throws java.security.cert.CertificateException"], ["java.security.cert.CertPath", "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory.engineGenerateCertPath(java.util.List)", "public java.security.cert.CertPath engineGenerateCertPath(java.util.List) throws java.security.cert.CertificateException"], ["java.lang.Throwable", "org.bouncycastle.jcajce.provider.asymmetric.x509.ExtCRLException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory", "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory()", "public org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory()"], ["java.util.Iterator", "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath.getEncodings()", "public java.util.Iterator getEncodings()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CertificateEncodingException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath.getEncoded(java.lang.String)", "public byte[] getEncoded(java.lang.String) throws java.security.cert.CertificateEncodingException"], ["java.util.List", "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath.getCertificates()", "public java.util.List getCertificates()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getCertificateIssuer()", "public javax.security.auth.x500.X500Principal getCertificateIssuer()"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CRLException"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["java.util.Date", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.getRevocationDate()", "public java.util.Date getRevocationDate()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.hasExtensions()", "public boolean hasExtensions()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CRLException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.verify(java.security.PublicKey)", "public void verify(java.security.PublicKey) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.verify(java.security.PublicKey, java.lang.String)", "public void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getVersion()", "public int getVersion()"], ["java.security.Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getIssuerDN()", "public java.security.Principal getIssuerDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getIssuerX500Principal()", "public javax.security.auth.x500.X500Principal getIssuerX500Principal()"], ["java.util.Date", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getThisUpdate()", "public java.util.Date getThisUpdate()"], ["java.util.Date", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getNextUpdate()", "public java.util.Date getNextUpdate()"], ["java.security.cert.X509CRLEntry", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getRevokedCertificate(java.math.BigInteger)", "public java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getRevokedCertificates()", "public java.util.Set getRevokedCertificates()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getTBSCertList()", "public byte[] getTBSCertList() throws java.security.cert.CRLException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getSignature()", "public byte[] getSignature()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getSigAlgName()", "public java.lang.String getSigAlgName()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getSigAlgOID()", "public java.lang.String getSigAlgOID()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.getSigAlgParams()", "public byte[] getSigAlgParams()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.isRevoked(java.security.cert.Certificate)", "public boolean isRevoked(java.security.cert.Certificate)"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject.hashCode()", "public int hashCode()"], ["org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject(org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject(org.bouncycastle.asn1.x509.Certificate) throws java.security.cert.CertificateParsingException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.checkValidity()", "public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.checkValidity(java.util.Date)", "public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getVersion()", "public int getVersion()"], ["java.math.BigInteger", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["java.security.Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getIssuerDN()", "public java.security.Principal getIssuerDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getIssuerX500Principal()", "public javax.security.auth.x500.X500Principal getIssuerX500Principal()"], ["java.security.Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSubjectDN()", "public java.security.Principal getSubjectDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSubjectX500Principal()", "public javax.security.auth.x500.X500Principal getSubjectX500Principal()"], ["java.util.Date", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getNotBefore()", "public java.util.Date getNotBefore()"], ["java.util.Date", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getNotAfter()", "public java.util.Date getNotAfter()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getTBSCertificate()", "public byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSignature()", "public byte[] getSignature()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSigAlgName()", "public java.lang.String getSigAlgName()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSigAlgOID()", "public java.lang.String getSigAlgOID()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSigAlgParams()", "public byte[] getSigAlgParams()"], ["boolean[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getIssuerUniqueID()", "public boolean[] getIssuerUniqueID()"], ["boolean[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSubjectUniqueID()", "public boolean[] getSubjectUniqueID()"], ["boolean[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getKeyUsage()", "public boolean[] getKeyUsage()"], ["java.util.List", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getExtendedKeyUsage()", "public java.util.List getExtendedKeyUsage() throws java.security.cert.CertificateParsingException"], ["int", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getBasicConstraints()", "public int getBasicConstraints()"], ["java.util.Collection", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getSubjectAlternativeNames()", "public java.util.Collection getSubjectAlternativeNames() throws java.security.cert.CertificateParsingException"], ["java.util.Collection", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getIssuerAlternativeNames()", "public java.util.Collection getIssuerAlternativeNames() throws java.security.cert.CertificateParsingException"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["java.util.Set", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["java.security.PublicKey", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getPublicKey()", "public java.security.PublicKey getPublicKey()"], ["byte[]", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CertificateEncodingException"], ["boolean", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["synchronized", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.int hashCode()", "public synchronized int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.verify(java.security.PublicKey)", "public final void verify(java.security.PublicKey) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["void", "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject.verify(java.security.PublicKey, java.lang.String)", "public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, char[])", "public org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, char[])"], ["org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, java.security.KeyStore$ProtectionParameter)", "public org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, java.security.KeyStore$ProtectionParameter)"], ["org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, char[], boolean)", "public org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, char[], boolean)"], ["org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, java.security.KeyStore$ProtectionParameter, boolean)", "public org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter(java.io.OutputStream, java.security.KeyStore$ProtectionParameter, boolean)"], ["java.io.OutputStream", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["java.security.KeyStore$ProtectionParameter", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter.getProtectionParameter()", "public java.security.KeyStore$ProtectionParameter getProtectionParameter()"], ["boolean", "org.bouncycastle.jcajce.provider.config.PKCS12StoreParameter.isForDEREncoding()", "public boolean isForDEREncoding()"], ["org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission(java.lang.String)", "public org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission(java.lang.String)"], ["org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission(java.lang.String, java.lang.String)", "public org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission(java.lang.String, java.lang.String)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission.getActions()", "public java.lang.String getActions()"], ["boolean", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission.implies(java.security.Permission)", "public boolean implies(java.security.Permission)"], ["boolean", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jcajce.provider.config.ProviderConfigurationPermission.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jcajce.provider.digest.BCMessageDigest.engineReset()", "public void engineReset()"], ["void", "org.bouncycastle.jcajce.provider.digest.BCMessageDigest.engineUpdate(byte)", "public void engineUpdate(byte)"], ["void", "org.bouncycastle.jcajce.provider.digest.BCMessageDigest.engineUpdate(byte[], int, int)", "public void engineUpdate(byte[], int, int)"], ["byte[]", "org.bouncycastle.jcajce.provider.digest.BCMessageDigest.engineDigest()", "public byte[] engineDigest()"], ["org.bouncycastle.jcajce.provider.digest.GOST3411$Digest", "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest()", "public org.bouncycastle.jcajce.provider.digest.GOST3411$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.GOST3411$HashMac", "org.bouncycastle.jcajce.provider.digest.GOST3411$HashMac()", "public org.bouncycastle.jcajce.provider.digest.GOST3411$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.GOST3411$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.GOST3411$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.GOST3411$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings", "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings()", "public org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.GOST3411$PBEWithMacKeyFactory", "org.bouncycastle.jcajce.provider.digest.GOST3411$PBEWithMacKeyFactory()", "public org.bouncycastle.jcajce.provider.digest.GOST3411$PBEWithMacKeyFactory()"], ["org.bouncycastle.jcajce.provider.digest.MD2$Digest", "org.bouncycastle.jcajce.provider.digest.MD2$Digest()", "public org.bouncycastle.jcajce.provider.digest.MD2$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.MD2$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.MD2$HashMac", "org.bouncycastle.jcajce.provider.digest.MD2$HashMac()", "public org.bouncycastle.jcajce.provider.digest.MD2$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.MD2$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.MD2$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.MD2$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.MD2$Mappings", "org.bouncycastle.jcajce.provider.digest.MD2$Mappings()", "public org.bouncycastle.jcajce.provider.digest.MD2$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.MD2$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.MD4$Digest", "org.bouncycastle.jcajce.provider.digest.MD4$Digest()", "public org.bouncycastle.jcajce.provider.digest.MD4$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.MD4$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.MD4$HashMac", "org.bouncycastle.jcajce.provider.digest.MD4$HashMac()", "public org.bouncycastle.jcajce.provider.digest.MD4$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.MD4$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.MD4$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.MD4$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.MD4$Mappings", "org.bouncycastle.jcajce.provider.digest.MD4$Mappings()", "public org.bouncycastle.jcajce.provider.digest.MD4$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.MD4$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.MD5$Digest", "org.bouncycastle.jcajce.provider.digest.MD5$Digest()", "public org.bouncycastle.jcajce.provider.digest.MD5$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.MD5$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.MD5$HashMac", "org.bouncycastle.jcajce.provider.digest.MD5$HashMac()", "public org.bouncycastle.jcajce.provider.digest.MD5$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.MD5$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.MD5$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.MD5$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.MD5$Mappings", "org.bouncycastle.jcajce.provider.digest.MD5$Mappings()", "public org.bouncycastle.jcajce.provider.digest.MD5$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.MD5$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD128$Digest", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Digest()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD128$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD128$HashMac", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$HashMac()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD128$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD128$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD128$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$Digest", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Digest()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$HashMac", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$HashMac()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmac", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmac()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmac()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmacKeyFactory", "org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmacKeyFactory()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD160$PBEWithHmacKeyFactory()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD256$Digest", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Digest()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD256$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD256$HashMac", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$HashMac()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD256$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD256$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD256$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD320$Digest", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Digest()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD320$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD320$HashMac", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$HashMac()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD320$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD320$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD320$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings()", "public org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1", "org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1(java.lang.String, int)", "public org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1(java.lang.String, int)"], ["org.bouncycastle.jcajce.provider.digest.SHA1$Digest", "org.bouncycastle.jcajce.provider.digest.SHA1$Digest()", "public org.bouncycastle.jcajce.provider.digest.SHA1$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA1$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA1$HashMac", "org.bouncycastle.jcajce.provider.digest.SHA1$HashMac()", "public org.bouncycastle.jcajce.provider.digest.SHA1$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.SHA1$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.SHA1$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.SHA1$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.SHA1$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA1$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA1$PBEWithMacKeyFactory", "org.bouncycastle.jcajce.provider.digest.SHA1$PBEWithMacKeyFactory()", "public org.bouncycastle.jcajce.provider.digest.SHA1$PBEWithMacKeyFactory()"], ["org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA18BIT", "org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA18BIT()", "public org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA18BIT()"], ["org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA1UTF8", "org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA1UTF8()", "public org.bouncycastle.jcajce.provider.digest.SHA1$PBKDF2WithHmacSHA1UTF8()"], ["org.bouncycastle.jcajce.provider.digest.SHA1$SHA1Mac", "org.bouncycastle.jcajce.provider.digest.SHA1$SHA1Mac()", "public org.bouncycastle.jcajce.provider.digest.SHA1$SHA1Mac()"], ["org.bouncycastle.jcajce.provider.digest.SHA224$Digest", "org.bouncycastle.jcajce.provider.digest.SHA224$Digest()", "public org.bouncycastle.jcajce.provider.digest.SHA224$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA224$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA224$HashMac", "org.bouncycastle.jcajce.provider.digest.SHA224$HashMac()", "public org.bouncycastle.jcajce.provider.digest.SHA224$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.SHA224$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.SHA224$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.SHA224$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.SHA224$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA224$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA256$Digest", "org.bouncycastle.jcajce.provider.digest.SHA256$Digest()", "public org.bouncycastle.jcajce.provider.digest.SHA256$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA256$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA256$HashMac", "org.bouncycastle.jcajce.provider.digest.SHA256$HashMac()", "public org.bouncycastle.jcajce.provider.digest.SHA256$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.SHA256$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.SHA256$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.SHA256$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.SHA256$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA256$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA256$PBEWithMacKeyFactory", "org.bouncycastle.jcajce.provider.digest.SHA256$PBEWithMacKeyFactory()", "public org.bouncycastle.jcajce.provider.digest.SHA256$PBEWithMacKeyFactory()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$Digest224", "org.bouncycastle.jcajce.provider.digest.SHA3$Digest224()", "public org.bouncycastle.jcajce.provider.digest.SHA3$Digest224()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$Digest256", "org.bouncycastle.jcajce.provider.digest.SHA3$Digest256()", "public org.bouncycastle.jcajce.provider.digest.SHA3$Digest256()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$Digest384", "org.bouncycastle.jcajce.provider.digest.SHA3$Digest384()", "public org.bouncycastle.jcajce.provider.digest.SHA3$Digest384()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$Digest512", "org.bouncycastle.jcajce.provider.digest.SHA3$Digest512()", "public org.bouncycastle.jcajce.provider.digest.SHA3$Digest512()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$DigestSHA3", "org.bouncycastle.jcajce.provider.digest.SHA3$DigestSHA3(int)", "public org.bouncycastle.jcajce.provider.digest.SHA3$DigestSHA3(int)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA3$DigestSHA3.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA3$HashMac224", "org.bouncycastle.jcajce.provider.digest.SHA3$HashMac224()", "public org.bouncycastle.jcajce.provider.digest.SHA3$HashMac224()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$HashMac256", "org.bouncycastle.jcajce.provider.digest.SHA3$HashMac256()", "public org.bouncycastle.jcajce.provider.digest.SHA3$HashMac256()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$HashMac384", "org.bouncycastle.jcajce.provider.digest.SHA3$HashMac384()", "public org.bouncycastle.jcajce.provider.digest.SHA3$HashMac384()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$HashMac512", "org.bouncycastle.jcajce.provider.digest.SHA3$HashMac512()", "public org.bouncycastle.jcajce.provider.digest.SHA3$HashMac512()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator224", "org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator224()", "public org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator224()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator256", "org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator256()", "public org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator256()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator384", "org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator384()", "public org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator384()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator512", "org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator512()", "public org.bouncycastle.jcajce.provider.digest.SHA3$KeyGenerator512()"], ["org.bouncycastle.jcajce.provider.digest.SHA3$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA3$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA384$Digest", "org.bouncycastle.jcajce.provider.digest.SHA384$Digest()", "public org.bouncycastle.jcajce.provider.digest.SHA384$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA384$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA384$HashMac", "org.bouncycastle.jcajce.provider.digest.SHA384$HashMac()", "public org.bouncycastle.jcajce.provider.digest.SHA384$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.SHA384$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.SHA384$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.SHA384$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.SHA384$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA384$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA384$OldSHA384", "org.bouncycastle.jcajce.provider.digest.SHA384$OldSHA384()", "public org.bouncycastle.jcajce.provider.digest.SHA384$OldSHA384()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$Digest", "org.bouncycastle.jcajce.provider.digest.SHA512$Digest()", "public org.bouncycastle.jcajce.provider.digest.SHA512$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA512$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA512$DigestT", "org.bouncycastle.jcajce.provider.digest.SHA512$DigestT(int)", "public org.bouncycastle.jcajce.provider.digest.SHA512$DigestT(int)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SHA512$DigestT.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SHA512$DigestT224", "org.bouncycastle.jcajce.provider.digest.SHA512$DigestT224()", "public org.bouncycastle.jcajce.provider.digest.SHA512$DigestT224()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$DigestT256", "org.bouncycastle.jcajce.provider.digest.SHA512$DigestT256()", "public org.bouncycastle.jcajce.provider.digest.SHA512$DigestT256()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$HashMac", "org.bouncycastle.jcajce.provider.digest.SHA512$HashMac()", "public org.bouncycastle.jcajce.provider.digest.SHA512$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT224", "org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT224()", "public org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT224()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT256", "org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT256()", "public org.bouncycastle.jcajce.provider.digest.SHA512$HashMacT256()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.SHA512$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.SHA512$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT224", "org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT224()", "public org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT224()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT256", "org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT256()", "public org.bouncycastle.jcajce.provider.digest.SHA512$KeyGeneratorT256()"], ["org.bouncycastle.jcajce.provider.digest.SHA512$Mappings", "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SHA512$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.SHA512$OldSHA512", "org.bouncycastle.jcajce.provider.digest.SHA512$OldSHA512()", "public org.bouncycastle.jcajce.provider.digest.SHA512$OldSHA512()"], ["org.bouncycastle.jcajce.provider.digest.SM3$Digest", "org.bouncycastle.jcajce.provider.digest.SM3$Digest()", "public org.bouncycastle.jcajce.provider.digest.SM3$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.SM3$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.SM3$Mappings", "org.bouncycastle.jcajce.provider.digest.SM3$Mappings()", "public org.bouncycastle.jcajce.provider.digest.SM3$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.SM3$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024(int)", "public org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024(int)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256(int)", "public org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256(int)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512(int)", "public org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512(int)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_1024", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_1024()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_1024()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_384", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_512", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_128", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_160", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_224", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_256", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_128", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_160", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_224", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_256", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_384", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_512", "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_1024", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_1024()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_1024()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_384", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_512", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_1024_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_128", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_160", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_224", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_256", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_256_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_128", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_160", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_224", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_256", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_384", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_512", "org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$HMacKeyGenerator_512_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_1024", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_1024()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_1024()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_384", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_512", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_128", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_160", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_224", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_256", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_128", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_160", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_224", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_256", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_384", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_512", "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$Mappings", "org.bouncycastle.jcajce.provider.digest.Skein$Mappings()", "public org.bouncycastle.jcajce.provider.digest.Skein$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.Skein$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_1024", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_1024()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_1024()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_384", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_512", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_1024_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_128", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_160", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_224", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_256", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_256_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_128", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_160", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_224", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_256", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_384", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_512", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMacKeyGenerator_512_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_1024", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_1024()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_1024()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_384", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_512", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_1024_512()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_128", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_160", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_224", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_256", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_256_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_128", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_128()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_128()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_160", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_160()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_160()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_224", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_224()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_224()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_256", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_256()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_256()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_384", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_384()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_384()"], ["org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_512", "org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_512()", "public org.bouncycastle.jcajce.provider.digest.Skein$SkeinMac_512_512()"], ["org.bouncycastle.jcajce.provider.digest.Tiger$Digest", "org.bouncycastle.jcajce.provider.digest.Tiger$Digest()", "public org.bouncycastle.jcajce.provider.digest.Tiger$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.Tiger$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.Tiger$HashMac", "org.bouncycastle.jcajce.provider.digest.Tiger$HashMac()", "public org.bouncycastle.jcajce.provider.digest.Tiger$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.Tiger$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.Tiger$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.Tiger$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.Tiger$Mappings", "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings()", "public org.bouncycastle.jcajce.provider.digest.Tiger$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithHashMac", "org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithHashMac()", "public org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithHashMac()"], ["org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithMacKeyFactory", "org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithMacKeyFactory()", "public org.bouncycastle.jcajce.provider.digest.Tiger$PBEWithMacKeyFactory()"], ["org.bouncycastle.jcajce.provider.digest.Tiger$TigerHmac", "org.bouncycastle.jcajce.provider.digest.Tiger$TigerHmac()", "public org.bouncycastle.jcajce.provider.digest.Tiger$TigerHmac()"], ["org.bouncycastle.jcajce.provider.digest.Whirlpool$Digest", "org.bouncycastle.jcajce.provider.digest.Whirlpool$Digest()", "public org.bouncycastle.jcajce.provider.digest.Whirlpool$Digest()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.digest.Whirlpool$Digest.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.bouncycastle.jcajce.provider.digest.Whirlpool$HashMac", "org.bouncycastle.jcajce.provider.digest.Whirlpool$HashMac()", "public org.bouncycastle.jcajce.provider.digest.Whirlpool$HashMac()"], ["org.bouncycastle.jcajce.provider.digest.Whirlpool$KeyGenerator", "org.bouncycastle.jcajce.provider.digest.Whirlpool$KeyGenerator()", "public org.bouncycastle.jcajce.provider.digest.Whirlpool$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings", "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings()", "public org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.keystore.BC$Mappings", "org.bouncycastle.jcajce.provider.keystore.BC$Mappings()", "public org.bouncycastle.jcajce.provider.keystore.BC$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.keystore.BC$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.keystore.BC", "org.bouncycastle.jcajce.provider.keystore.BC()", "public org.bouncycastle.jcajce.provider.keystore.BC()"], ["org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings", "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings()", "public org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.keystore.PKCS12", "org.bouncycastle.jcajce.provider.keystore.PKCS12()", "public org.bouncycastle.jcajce.provider.keystore.PKCS12()"], ["org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore()", "public org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore()"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore.engineLoad(java.io.InputStream, char[])", "public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore.engineStore(java.io.OutputStream, char[])", "public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std()", "public org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std()"], ["org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Version1", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Version1()", "public org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Version1()"], ["org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi(int)", "public org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi(int)"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.setRandom(java.security.SecureRandom)", "public void setRandom(java.security.SecureRandom)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineAliases()", "public java.util.Enumeration engineAliases()"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineContainsAlias(java.lang.String)", "public boolean engineContainsAlias(java.lang.String)"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineDeleteEntry(java.lang.String)", "public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException"], ["java.security.cert.Certificate", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineGetCertificate(java.lang.String)", "public java.security.cert.Certificate engineGetCertificate(java.lang.String)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineGetCertificateAlias(java.security.cert.Certificate)", "public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)"], ["java.security.cert.Certificate[]", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineGetCertificateChain(java.lang.String)", "public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)"], ["java.util.Date", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineGetCreationDate(java.lang.String)", "public java.util.Date engineGetCreationDate(java.lang.String)"], ["java.security.Key", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineGetKey(java.lang.String, char[])", "public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineIsCertificateEntry(java.lang.String)", "public boolean engineIsCertificateEntry(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineIsKeyEntry(java.lang.String)", "public boolean engineIsKeyEntry(java.lang.String)"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate)", "public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[])", "public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])", "public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException"], ["int", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineSize()", "public int engineSize()"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineLoad(java.io.InputStream, char[])", "public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineStore(java.io.OutputStream, char[])", "public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore()", "public org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore()"], ["org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore3DES", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore3DES()", "public org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$BCPKCS12KeyStore3DES()"], ["int", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore()", "public org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore()"], ["org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore3DES", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore3DES()", "public org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefPKCS12KeyStore3DES()"], ["int", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider.getKeySize(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public int getKeySize(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable.put(java.lang.String, java.lang.Object)", "public void put(java.lang.String, java.lang.Object)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable.keys()", "public java.util.Enumeration keys()"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable.remove(java.lang.String)", "public java.lang.Object remove(java.lang.String)"], ["java.lang.Object", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable.get(java.lang.String)", "public java.lang.Object get(java.lang.String)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable.elements()", "public java.util.Enumeration elements()"], ["org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi(java.security.Provider, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi(java.security.Provider, org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.setRandom(java.security.SecureRandom)", "public void setRandom(java.security.SecureRandom)"], ["java.util.Enumeration", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineAliases()", "public java.util.Enumeration engineAliases()"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineContainsAlias(java.lang.String)", "public boolean engineContainsAlias(java.lang.String)"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineDeleteEntry(java.lang.String)", "public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException"], ["java.security.cert.Certificate", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineGetCertificate(java.lang.String)", "public java.security.cert.Certificate engineGetCertificate(java.lang.String)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineGetCertificateAlias(java.security.cert.Certificate)", "public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)"], ["java.security.cert.Certificate[]", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineGetCertificateChain(java.lang.String)", "public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)"], ["java.util.Date", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineGetCreationDate(java.lang.String)", "public java.util.Date engineGetCreationDate(java.lang.String)"], ["java.security.Key", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineGetKey(java.lang.String, char[])", "public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineIsCertificateEntry(java.lang.String)", "public boolean engineIsCertificateEntry(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineIsKeyEntry(java.lang.String)", "public boolean engineIsKeyEntry(java.lang.String)"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate)", "public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[])", "public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])", "public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException"], ["int", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineSize()", "public int engineSize()"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(java.io.InputStream, char[])", "public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineStore(java.security.KeyStore$LoadStoreParameter)", "public void engineStore(java.security.KeyStore$LoadStoreParameter) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException"], ["void", "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineStore(java.io.OutputStream, char[])", "public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException"], ["org.bouncycastle.jcajce.provider.symmetric.AES$AESCMAC", "org.bouncycastle.jcajce.provider.symmetric.AES$AESCMAC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$AESCMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$AESGMAC", "org.bouncycastle.jcajce.provider.symmetric.AES$AESGMAC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$AESGMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.AES$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM", "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM()", "public org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$CBC", "org.bouncycastle.jcajce.provider.symmetric.AES$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$CFB", "org.bouncycastle.jcajce.provider.symmetric.AES$CFB()", "public org.bouncycastle.jcajce.provider.symmetric.AES$CFB()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.AES$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$ECB", "org.bouncycastle.jcajce.provider.symmetric.AES$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.AES$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$GCM", "org.bouncycastle.jcajce.provider.symmetric.AES$GCM()", "public org.bouncycastle.jcajce.provider.symmetric.AES$GCM()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen(int)", "public org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen(int)"], ["org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen128", "org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen128()", "public org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen128()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen192", "org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen192()", "public org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen192()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen256", "org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen256()", "public org.bouncycastle.jcajce.provider.symmetric.AES$KeyGen256()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$Mappings", "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.AES$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.AES$OFB", "org.bouncycastle.jcajce.provider.symmetric.AES$OFB()", "public org.bouncycastle.jcajce.provider.symmetric.AES$OFB()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithAESCBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithAESCBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithAESCBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And128BitAESCBCOpenSSL", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And128BitAESCBCOpenSSL()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And128BitAESCBCOpenSSL()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And192BitAESCBCOpenSSL", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And192BitAESCBCOpenSSL()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And192BitAESCBCOpenSSL()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And256BitAESCBCOpenSSL", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And256BitAESCBCOpenSSL()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithMD5And256BitAESCBCOpenSSL()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And128BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And128BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And128BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And192BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And192BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And192BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And256BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And256BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256And256BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd128BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd128BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd128BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd192BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd192BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd192BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd256BitAESBC", "org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd256BitAESBC()", "public org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHAAnd256BitAESBC()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.AES$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$RFC3211Wrap", "org.bouncycastle.jcajce.provider.symmetric.AES$RFC3211Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.AES$RFC3211Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$RFC5649Wrap", "org.bouncycastle.jcajce.provider.symmetric.AES$RFC5649Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.AES$RFC5649Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.AES$Wrap", "org.bouncycastle.jcajce.provider.symmetric.AES$Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.AES$Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$Base", "org.bouncycastle.jcajce.provider.symmetric.ARC4$Base()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.ARC4$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings", "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128Bit", "org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128Bit()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128Bit()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128BitKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128BitKeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd128BitKeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40Bit", "org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40Bit()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40Bit()"], ["org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40BitKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40BitKeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.ARC4$PBEWithSHAAnd40BitKeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.Blowfish$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Blowfish$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.Blowfish$CBC", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.Blowfish$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.Blowfish$ECB", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Blowfish$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Blowfish$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Blowfish$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$CBC", "org.bouncycastle.jcajce.provider.symmetric.CAST5$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$ECB", "org.bouncycastle.jcajce.provider.symmetric.CAST5$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.CAST5$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings", "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.CAST6$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$ECB", "org.bouncycastle.jcajce.provider.symmetric.CAST6$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$GMAC", "org.bouncycastle.jcajce.provider.symmetric.CAST6$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.CAST6$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings", "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.CAST6$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$CBC", "org.bouncycastle.jcajce.provider.symmetric.Camellia$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$CBC()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Camellia$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$ECB", "org.bouncycastle.jcajce.provider.symmetric.Camellia$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$GMAC", "org.bouncycastle.jcajce.provider.symmetric.Camellia$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen(int)", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen(int)"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen128", "org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen128()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen128()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen192", "org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen192()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen192()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen256", "org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen256()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$KeyGen256()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$RFC3211Wrap", "org.bouncycastle.jcajce.provider.symmetric.Camellia$RFC3211Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$RFC3211Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.Camellia$Wrap", "org.bouncycastle.jcajce.provider.symmetric.Camellia$Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.Camellia$Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.ChaCha$Base", "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Base()", "public org.bouncycastle.jcajce.provider.symmetric.ChaCha$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.ChaCha$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.ChaCha$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.ChaCha$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings", "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.DES$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.DES$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.DES$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$CBC", "org.bouncycastle.jcajce.provider.symmetric.DES$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.DES$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$CBCMAC", "org.bouncycastle.jcajce.provider.symmetric.DES$CBCMAC()", "public org.bouncycastle.jcajce.provider.symmetric.DES$CBCMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$CMAC", "org.bouncycastle.jcajce.provider.symmetric.DES$CMAC()", "public org.bouncycastle.jcajce.provider.symmetric.DES$CMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DES64", "org.bouncycastle.jcajce.provider.symmetric.DES$DES64()", "public org.bouncycastle.jcajce.provider.symmetric.DES$DES64()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DES64with7816d4", "org.bouncycastle.jcajce.provider.symmetric.DES$DES64with7816d4()", "public org.bouncycastle.jcajce.provider.symmetric.DES$DES64with7816d4()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3", "org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3()", "public org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3with7816d4", "org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3with7816d4()", "public org.bouncycastle.jcajce.provider.symmetric.DES$DES9797Alg3with7816d4()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DESCFB8", "org.bouncycastle.jcajce.provider.symmetric.DES$DESCFB8()", "public org.bouncycastle.jcajce.provider.symmetric.DES$DESCFB8()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, int, int, int, int)", "public org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, int, int, int, int)"], ["org.bouncycastle.jcajce.provider.symmetric.DES$ECB", "org.bouncycastle.jcajce.provider.symmetric.DES$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.DES$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DES$KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DES$KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator", "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator()", "public org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$Mappings", "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.DES$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DES$RFC3211", "org.bouncycastle.jcajce.provider.symmetric.DES$RFC3211()", "public org.bouncycastle.jcajce.provider.symmetric.DES$RFC3211()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.DESede$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$CBC", "org.bouncycastle.jcajce.provider.symmetric.DESede$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$CBCMAC", "org.bouncycastle.jcajce.provider.symmetric.DESede$CBCMAC()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$CBCMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$CMAC", "org.bouncycastle.jcajce.provider.symmetric.DESede$CMAC()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$CMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64", "org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64with7816d4", "org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64with7816d4()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$DESede64with7816d4()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$DESedeCFB8", "org.bouncycastle.jcajce.provider.symmetric.DESede$DESedeCFB8()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$DESedeCFB8()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$ECB", "org.bouncycastle.jcajce.provider.symmetric.DESede$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator", "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator3", "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator3()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator3()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings", "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2Key", "org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2Key()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2Key()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3Key", "org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3Key()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3Key()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$RFC3211", "org.bouncycastle.jcajce.provider.symmetric.DESede$RFC3211()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$RFC3211()"], ["org.bouncycastle.jcajce.provider.symmetric.DESede$Wrap", "org.bouncycastle.jcajce.provider.symmetric.DESede$Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.DESede$Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$CBC", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$ECB", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$GCFB", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$GCFB()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$GCFB()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen(int)", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$KeyGen(int)"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mac", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mac()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mac()"], ["org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Grain128$Base", "org.bouncycastle.jcajce.provider.symmetric.Grain128$Base()", "public org.bouncycastle.jcajce.provider.symmetric.Grain128$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.Grain128$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Grain128$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Grain128$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Grainv1$Base", "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Base()", "public org.bouncycastle.jcajce.provider.symmetric.Grainv1$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.Grainv1$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Grainv1$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Grainv1$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.HC128$Base", "org.bouncycastle.jcajce.provider.symmetric.HC128$Base()", "public org.bouncycastle.jcajce.provider.symmetric.HC128$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.HC128$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.HC128$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.HC128$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings", "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.HC256$Base", "org.bouncycastle.jcajce.provider.symmetric.HC256$Base()", "public org.bouncycastle.jcajce.provider.symmetric.HC256$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.HC256$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.HC256$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.HC256$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings", "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$CBC", "org.bouncycastle.jcajce.provider.symmetric.IDEA$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$CFB8Mac", "org.bouncycastle.jcajce.provider.symmetric.IDEA$CFB8Mac()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$CFB8Mac()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$ECB", "org.bouncycastle.jcajce.provider.symmetric.IDEA$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.IDEA$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$Mac", "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mac()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$Mac()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings", "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEA", "org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEA()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEA()"], ["org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEAKeyGen", "org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEAKeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.IDEA$PBEWithSHAAndIDEAKeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParams()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$ECB", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$GMAC", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Noekeon$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2", "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2(java.lang.String, int)", "public org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2(java.lang.String, int)"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings", "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$PBKDF2withUTF8", "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$PBKDF2withUTF8()", "public org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$PBKDF2withUTF8()"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings", "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$CBC", "org.bouncycastle.jcajce.provider.symmetric.RC2$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$CBCMAC", "org.bouncycastle.jcajce.provider.symmetric.RC2$CBCMAC()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$CBCMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$CFB8MAC", "org.bouncycastle.jcajce.provider.symmetric.RC2$CFB8MAC()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$CFB8MAC()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$ECB", "org.bouncycastle.jcajce.provider.symmetric.RC2$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$KeyGenerator", "org.bouncycastle.jcajce.provider.symmetric.RC2$KeyGenerator()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$KeyGenerator()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings", "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD2KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD2KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD2KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5AndRC2", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5AndRC2()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5AndRC2()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1AndRC2", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1AndRC2()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1AndRC2()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1KeyFactory", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1KeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1KeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitKeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitKeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitRC2", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitRC2()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitRC2()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitKeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitKeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitRC2", "org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitRC2()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitRC2()"], ["org.bouncycastle.jcajce.provider.symmetric.RC2$Wrap", "org.bouncycastle.jcajce.provider.symmetric.RC2$Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.RC2$Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$CBC32", "org.bouncycastle.jcajce.provider.symmetric.RC5$CBC32()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$CBC32()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$CFB8Mac32", "org.bouncycastle.jcajce.provider.symmetric.RC5$CFB8Mac32()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$CFB8Mac32()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$ECB32", "org.bouncycastle.jcajce.provider.symmetric.RC5$ECB32()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$ECB32()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$ECB64", "org.bouncycastle.jcajce.provider.symmetric.RC5$ECB64()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$ECB64()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen32", "org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen32()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen32()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen64", "org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen64()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$KeyGen64()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$Mac32", "org.bouncycastle.jcajce.provider.symmetric.RC5$Mac32()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$Mac32()"], ["org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings", "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$CBC", "org.bouncycastle.jcajce.provider.symmetric.RC6$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$CBC()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$CFB", "org.bouncycastle.jcajce.provider.symmetric.RC6$CFB()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$CFB()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.RC6$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$ECB", "org.bouncycastle.jcajce.provider.symmetric.RC6$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$GMAC", "org.bouncycastle.jcajce.provider.symmetric.RC6$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.RC6$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings", "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$OFB", "org.bouncycastle.jcajce.provider.symmetric.RC6$OFB()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$OFB()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.RC6$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Rijndael$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Rijndael$AlgParams()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Rijndael$ECB", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Rijndael$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Rijndael$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Rijndael$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$CBC", "org.bouncycastle.jcajce.provider.symmetric.SEED$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$CBC()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.SEED$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$ECB", "org.bouncycastle.jcajce.provider.symmetric.SEED$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$GMAC", "org.bouncycastle.jcajce.provider.symmetric.SEED$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.SEED$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings", "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.SEED$Wrap", "org.bouncycastle.jcajce.provider.symmetric.SEED$Wrap()", "public org.bouncycastle.jcajce.provider.symmetric.SEED$Wrap()"], ["org.bouncycastle.jcajce.provider.symmetric.Salsa20$Base", "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Base()", "public org.bouncycastle.jcajce.provider.symmetric.Salsa20$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.Salsa20$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Salsa20$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Salsa20$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Serpent$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$AlgParams()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Serpent$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$ECB", "org.bouncycastle.jcajce.provider.symmetric.Serpent$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Serpent$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Serpent$SerpentGMAC", "org.bouncycastle.jcajce.provider.symmetric.Serpent$SerpentGMAC()", "public org.bouncycastle.jcajce.provider.symmetric.Serpent$SerpentGMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParamGen", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParamGen()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParamGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$CBC", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$CBC()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$CBC()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$ECB", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.SipHash$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.SipHash$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.SipHash$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac24", "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac24()", "public org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac24()"], ["org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac48", "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac48()", "public org.bouncycastle.jcajce.provider.symmetric.SipHash$Mac48()"], ["org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings", "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$ECB", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mac", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mac()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mac()"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$MacCFB8", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$MacCFB8()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$MacCFB8()"], ["org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.TEA$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.TEA$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.TEA$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.TEA$ECB", "org.bouncycastle.jcajce.provider.symmetric.TEA$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.TEA$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.TEA$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.TEA$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.TEA$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings", "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_1024", "org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_1024()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_1024()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_256", "org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_256()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_256()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_512", "org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_512()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$AlgParams_512()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_1024", "org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_1024()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_1024()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_256", "org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_256()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_256()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_512", "org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_512()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$ECB_512()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_1024", "org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_1024()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_1024()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_256", "org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_256()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_256()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_512", "org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_512()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$KeyGen_512()"], ["org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.Twofish$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$AlgParams()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.Twofish$ECB$1.get()", "public org.bouncycastle.crypto.BlockCipher get()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$ECB", "org.bouncycastle.jcajce.provider.symmetric.Twofish$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$GMAC", "org.bouncycastle.jcajce.provider.symmetric.Twofish$GMAC()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$GMAC()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Twofish$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings", "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHA", "org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHA()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHA()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHAKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHAKeyFactory()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHAKeyFactory()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305", "org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305()"], ["org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305KeyGen", "org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.Twofish$Poly1305KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPC$Base", "org.bouncycastle.jcajce.provider.symmetric.VMPC$Base()", "public org.bouncycastle.jcajce.provider.symmetric.VMPC$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPC$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.VMPC$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.VMPC$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPC$Mac", "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mac()", "public org.bouncycastle.jcajce.provider.symmetric.VMPC$Mac()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings", "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Base", "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Base()", "public org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings", "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Base", "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Base()", "public org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Base()"], ["org.bouncycastle.jcajce.provider.symmetric.XSalsa20$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.XSalsa20$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings", "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.XTEA$AlgParams", "org.bouncycastle.jcajce.provider.symmetric.XTEA$AlgParams()", "public org.bouncycastle.jcajce.provider.symmetric.XTEA$AlgParams()"], ["org.bouncycastle.jcajce.provider.symmetric.XTEA$ECB", "org.bouncycastle.jcajce.provider.symmetric.XTEA$ECB()", "public org.bouncycastle.jcajce.provider.symmetric.XTEA$ECB()"], ["org.bouncycastle.jcajce.provider.symmetric.XTEA$KeyGen", "org.bouncycastle.jcajce.provider.symmetric.XTEA$KeyGen()", "public org.bouncycastle.jcajce.provider.symmetric.XTEA$KeyGen()"], ["org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings", "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings()", "public org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, int, int, javax.crypto.spec.PBEKeySpec, org.bouncycastle.crypto.CipherParameters)", "public org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, int, int, javax.crypto.spec.PBEKeySpec, org.bouncycastle.crypto.CipherParameters)"], ["java.lang.String", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getEncoded()", "public byte[] getEncoded()"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getIvSize()", "public int getIvSize()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getParam()", "public org.bouncycastle.crypto.CipherParameters getParam()"], ["char[]", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getPassword()", "public char[] getPassword()"], ["byte[]", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getSalt()", "public byte[] getSalt()"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getIterationCount()", "public int getIterationCount()"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.getOID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey.setTryWrongPKCS12Zero(boolean)", "public void setTryWrongPKCS12Zero(boolean)"], ["org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameterGenerator", "org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameterGenerator()", "public org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameterGenerator()"], ["org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters", "org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters()", "public org.bouncycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters()"], ["void", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["java.lang.String", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["boolean", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.wrapOnNoPadding()", "public boolean wrapOnNoPadding()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["void", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.updateAAD(byte[], int, int)", "public void updateAAD(byte[], int, int)"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, javax.crypto.BadPaddingException"], ["void", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException"], ["boolean", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.wrapOnNoPadding()", "public boolean wrapOnNoPadding()"], ["java.lang.String", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.getAlgorithmName()", "public java.lang.String getAlgorithmName()"], ["org.bouncycastle.crypto.BlockCipher", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.getUnderlyingCipher()", "public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.getOutputSize(int)", "public int getOutputSize(int)"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.getUpdateOutputSize(int)", "public int getUpdateOutputSize(int)"], ["void", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.updateAAD(byte[], int, int)", "public void updateAAD(byte[], int, int)"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException"], ["int", "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher.doFinal(byte[], int)", "public int doFinal(byte[], int) throws java.lang.IllegalStateException, javax.crypto.BadPaddingException"], ["org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters", "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters()", "public org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters()"], ["org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util", "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util()", "public org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util()"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util.makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey, java.security.spec.AlgorithmParameterSpec, java.lang.String)", "public static org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey, java.security.spec.AlgorithmParameterSpec, java.lang.String)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util.makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey, java.security.spec.AlgorithmParameterSpec)", "public static org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey, java.security.spec.AlgorithmParameterSpec)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util.makePBEParameters(javax.crypto.spec.PBEKeySpec, int, int, int, int)", "public static org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec, int, int, int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util.makePBEMacParameters(javax.crypto.spec.PBEKeySpec, int, int, int)", "public static org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec, int, int, int)"], ["org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory", "org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, int, int, int, int)", "public org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, int, int, int, int)"], ["org.bouncycastle.jcajce.provider.util.AlgorithmProvider", "org.bouncycastle.jcajce.provider.util.AlgorithmProvider()", "public org.bouncycastle.jcajce.provider.util.AlgorithmProvider()"], ["org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider", "org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider()", "public org.bouncycastle.jcajce.provider.util.AsymmetricAlgorithmProvider()"], ["org.bouncycastle.jcajce.provider.util.DigestFactory", "org.bouncycastle.jcajce.provider.util.DigestFactory()", "public org.bouncycastle.jcajce.provider.util.DigestFactory()"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.jcajce.provider.util.DigestFactory.getDigest(java.lang.String)", "public static org.bouncycastle.crypto.Digest getDigest(java.lang.String)"], ["boolean", "org.bouncycastle.jcajce.provider.util.DigestFactory.isSameDigest(java.lang.String, java.lang.String)", "public static boolean isSameDigest(java.lang.String, java.lang.String)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.jcajce.provider.util.DigestFactory.getOID(java.lang.String)", "public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOID(java.lang.String)"], ["org.bouncycastle.jcajce.provider.util.SecretKeyUtil", "org.bouncycastle.jcajce.provider.util.SecretKeyUtil()", "public org.bouncycastle.jcajce.provider.util.SecretKeyUtil()"], ["int", "org.bouncycastle.jcajce.provider.util.SecretKeyUtil.getKeySize(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static int getKeySize(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.jcajce.spec.GOST28147ParameterSpec", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(byte[])", "public org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(byte[])"], ["org.bouncycastle.jcajce.spec.GOST28147ParameterSpec", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(byte[], byte[])", "public org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(byte[], byte[])"], ["org.bouncycastle.jcajce.spec.GOST28147ParameterSpec", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(java.lang.String)", "public org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(java.lang.String)"], ["org.bouncycastle.jcajce.spec.GOST28147ParameterSpec", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(java.lang.String, byte[])", "public org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(java.lang.String, byte[])"], ["org.bouncycastle.jcajce.spec.GOST28147ParameterSpec", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(org.bouncycastle.asn1.ASN1ObjectIdentifier, byte[])", "public org.bouncycastle.jcajce.spec.GOST28147ParameterSpec(org.bouncycastle.asn1.ASN1ObjectIdentifier, byte[])"], ["byte[]", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec.getSbox()", "public byte[] getSbox()"], ["byte[]", "org.bouncycastle.jcajce.spec.GOST28147ParameterSpec.getIV()", "public byte[] getIV()"], ["org.bouncycastle.jcajce.spec.PBKDF2KeySpec", "org.bouncycastle.jcajce.spec.PBKDF2KeySpec(char[], byte[], int, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.jcajce.spec.PBKDF2KeySpec(char[], byte[], int, int, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.jcajce.spec.PBKDF2KeySpec.getPrf()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getPrf()"], ["org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec", "org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec(java.lang.String)", "public org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec(java.lang.String)"], ["java.lang.String", "org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jcajce.spec.RepeatedSecretKeySpec.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder()", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder()"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder(org.bouncycastle.jcajce.spec.SkeinParameterSpec)", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder(org.bouncycastle.jcajce.spec.SkeinParameterSpec)"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.set(int, byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder set(int, byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setKey(byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setKey(byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setPersonalisation(byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setPersonalisation(byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setPersonalisation(java.util.Date, java.lang.String, java.lang.String)", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setPersonalisation(java.util.Date, java.lang.String, java.lang.String)"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setPersonalisation(java.util.Date, java.util.Locale, java.lang.String, java.lang.String)", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setPersonalisation(java.util.Date, java.util.Locale, java.lang.String, java.lang.String)"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setPublicKey(byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setPublicKey(byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setKeyIdentifier(byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setKeyIdentifier(byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.setNonce(byte[])", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder setNonce(byte[])"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec", "org.bouncycastle.jcajce.spec.SkeinParameterSpec$Builder.build()", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec build()"], ["org.bouncycastle.jcajce.spec.SkeinParameterSpec", "org.bouncycastle.jcajce.spec.SkeinParameterSpec()", "public org.bouncycastle.jcajce.spec.SkeinParameterSpec()"], ["java.util.Map", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getParameters()", "public java.util.Map getParameters()"], ["byte[]", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getKey()", "public byte[] getKey()"], ["byte[]", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getPersonalisation()", "public byte[] getPersonalisation()"], ["byte[]", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getPublicKey()", "public byte[] getPublicKey()"], ["byte[]", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getKeyIdentifier()", "public byte[] getKeyIdentifier()"], ["byte[]", "org.bouncycastle.jcajce.spec.SkeinParameterSpec.getNonce()", "public byte[] getNonce()"], ["org.bouncycastle.jcajce.util.DefaultJcaJceHelper", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper()", "public org.bouncycastle.jcajce.util.DefaultJcaJceHelper()"], ["javax.crypto.Cipher", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createCipher(java.lang.String)", "public javax.crypto.Cipher createCipher(java.lang.String) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException"], ["javax.crypto.Mac", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createMac(java.lang.String)", "public javax.crypto.Mac createMac(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.KeyAgreement", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createKeyAgreement(java.lang.String)", "public javax.crypto.KeyAgreement createKeyAgreement(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.AlgorithmParameterGenerator", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createAlgorithmParameterGenerator(java.lang.String)", "public java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.AlgorithmParameters", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createAlgorithmParameters(java.lang.String)", "public java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.KeyGenerator", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createKeyGenerator(java.lang.String)", "public javax.crypto.KeyGenerator createKeyGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.KeyFactory", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createKeyFactory(java.lang.String)", "public java.security.KeyFactory createKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.SecretKeyFactory", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createSecretKeyFactory(java.lang.String)", "public javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.KeyPairGenerator", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createKeyPairGenerator(java.lang.String)", "public java.security.KeyPairGenerator createKeyPairGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.MessageDigest", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createDigest(java.lang.String)", "public java.security.MessageDigest createDigest(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.Signature", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createSignature(java.lang.String)", "public java.security.Signature createSignature(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.cert.CertificateFactory", "org.bouncycastle.jcajce.util.DefaultJcaJceHelper.createCertificateFactory(java.lang.String)", "public java.security.cert.CertificateFactory createCertificateFactory(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.cert.CertificateException"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jcajce.util.JcaJceUtils.extractParameters(java.security.AlgorithmParameters)", "public static org.bouncycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters) throws java.io.IOException"], ["void", "org.bouncycastle.jcajce.util.JcaJceUtils.loadParameters(java.security.AlgorithmParameters, org.bouncycastle.asn1.ASN1Encodable)", "public static void loadParameters(java.security.AlgorithmParameters, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.jcajce.util.JcaJceUtils.getDigestAlgName(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public static java.lang.String getDigestAlgName(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["org.bouncycastle.jcajce.util.NamedJcaJceHelper", "org.bouncycastle.jcajce.util.NamedJcaJceHelper(java.lang.String)", "public org.bouncycastle.jcajce.util.NamedJcaJceHelper(java.lang.String)"], ["javax.crypto.Cipher", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createCipher(java.lang.String)", "public javax.crypto.Cipher createCipher(java.lang.String) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.NoSuchProviderException"], ["javax.crypto.Mac", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createMac(java.lang.String)", "public javax.crypto.Mac createMac(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["javax.crypto.KeyAgreement", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyAgreement(java.lang.String)", "public javax.crypto.KeyAgreement createKeyAgreement(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.AlgorithmParameterGenerator", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createAlgorithmParameterGenerator(java.lang.String)", "public java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.AlgorithmParameters", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createAlgorithmParameters(java.lang.String)", "public java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["javax.crypto.KeyGenerator", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyGenerator(java.lang.String)", "public javax.crypto.KeyGenerator createKeyGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.KeyFactory", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(java.lang.String)", "public java.security.KeyFactory createKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["javax.crypto.SecretKeyFactory", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createSecretKeyFactory(java.lang.String)", "public javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.KeyPairGenerator", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyPairGenerator(java.lang.String)", "public java.security.KeyPairGenerator createKeyPairGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.MessageDigest", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createDigest(java.lang.String)", "public java.security.MessageDigest createDigest(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.Signature", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createSignature(java.lang.String)", "public java.security.Signature createSignature(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.cert.CertificateFactory", "org.bouncycastle.jcajce.util.NamedJcaJceHelper.createCertificateFactory(java.lang.String)", "public java.security.cert.CertificateFactory createCertificateFactory(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.cert.CertificateException, java.security.NoSuchProviderException"], ["org.bouncycastle.jcajce.util.ProviderJcaJceHelper", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper(java.security.Provider)", "public org.bouncycastle.jcajce.util.ProviderJcaJceHelper(java.security.Provider)"], ["javax.crypto.Cipher", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createCipher(java.lang.String)", "public javax.crypto.Cipher createCipher(java.lang.String) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException"], ["javax.crypto.Mac", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createMac(java.lang.String)", "public javax.crypto.Mac createMac(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.KeyAgreement", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createKeyAgreement(java.lang.String)", "public javax.crypto.KeyAgreement createKeyAgreement(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.AlgorithmParameterGenerator", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createAlgorithmParameterGenerator(java.lang.String)", "public java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.AlgorithmParameters", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createAlgorithmParameters(java.lang.String)", "public java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.KeyGenerator", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createKeyGenerator(java.lang.String)", "public javax.crypto.KeyGenerator createKeyGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.KeyFactory", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createKeyFactory(java.lang.String)", "public java.security.KeyFactory createKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["javax.crypto.SecretKeyFactory", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createSecretKeyFactory(java.lang.String)", "public javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.KeyPairGenerator", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createKeyPairGenerator(java.lang.String)", "public java.security.KeyPairGenerator createKeyPairGenerator(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.MessageDigest", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createDigest(java.lang.String)", "public java.security.MessageDigest createDigest(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.Signature", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createSignature(java.lang.String)", "public java.security.Signature createSignature(java.lang.String) throws java.security.NoSuchAlgorithmException"], ["java.security.cert.CertificateFactory", "org.bouncycastle.jcajce.util.ProviderJcaJceHelper.createCertificateFactory(java.lang.String)", "public java.security.cert.CertificateFactory createCertificateFactory(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.cert.CertificateException"], ["org.bouncycastle.jce.ECGOST3410NamedCurveTable", "org.bouncycastle.jce.ECGOST3410NamedCurveTable()", "public org.bouncycastle.jce.ECGOST3410NamedCurveTable()"], ["org.bouncycastle.jce.spec.ECNamedCurveParameterSpec", "org.bouncycastle.jce.ECGOST3410NamedCurveTable.getParameterSpec(java.lang.String)", "public static org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)"], ["java.util.Enumeration", "org.bouncycastle.jce.ECGOST3410NamedCurveTable.getNames()", "public static java.util.Enumeration getNames()"], ["java.lang.Throwable", "org.bouncycastle.jce.ECKeyUtil$UnexpectedException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jce.ECKeyUtil", "org.bouncycastle.jce.ECKeyUtil()", "public org.bouncycastle.jce.ECKeyUtil()"], ["java.security.PublicKey", "org.bouncycastle.jce.ECKeyUtil.publicToExplicitParameters(java.security.PublicKey, java.lang.String)", "public static java.security.PublicKey publicToExplicitParameters(java.security.PublicKey, java.lang.String) throws java.lang.IllegalArgumentException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.PublicKey", "org.bouncycastle.jce.ECKeyUtil.publicToExplicitParameters(java.security.PublicKey, java.security.Provider)", "public static java.security.PublicKey publicToExplicitParameters(java.security.PublicKey, java.security.Provider) throws java.lang.IllegalArgumentException, java.security.NoSuchAlgorithmException"], ["java.security.PrivateKey", "org.bouncycastle.jce.ECKeyUtil.privateToExplicitParameters(java.security.PrivateKey, java.lang.String)", "public static java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey, java.lang.String) throws java.lang.IllegalArgumentException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException"], ["java.security.PrivateKey", "org.bouncycastle.jce.ECKeyUtil.privateToExplicitParameters(java.security.PrivateKey, java.security.Provider)", "public static java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey, java.security.Provider) throws java.lang.IllegalArgumentException, java.security.NoSuchAlgorithmException"], ["org.bouncycastle.jce.ECNamedCurveTable", "org.bouncycastle.jce.ECNamedCurveTable()", "public org.bouncycastle.jce.ECNamedCurveTable()"], ["org.bouncycastle.jce.spec.ECNamedCurveParameterSpec", "org.bouncycastle.jce.ECNamedCurveTable.getParameterSpec(java.lang.String)", "public static org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)"], ["java.util.Enumeration", "org.bouncycastle.jce.ECNamedCurveTable.getNames()", "public static java.util.Enumeration getNames()"], ["org.bouncycastle.jce.ECPointUtil", "org.bouncycastle.jce.ECPointUtil()", "public org.bouncycastle.jce.ECPointUtil()"], ["java.security.spec.ECPoint", "org.bouncycastle.jce.ECPointUtil.decodePoint(java.security.spec.EllipticCurve, byte[])", "public static java.security.spec.ECPoint decodePoint(java.security.spec.EllipticCurve, byte[])"], ["org.bouncycastle.jce.MultiCertStoreParameters", "org.bouncycastle.jce.MultiCertStoreParameters(java.util.Collection)", "public org.bouncycastle.jce.MultiCertStoreParameters(java.util.Collection)"], ["org.bouncycastle.jce.MultiCertStoreParameters", "org.bouncycastle.jce.MultiCertStoreParameters(java.util.Collection, boolean)", "public org.bouncycastle.jce.MultiCertStoreParameters(java.util.Collection, boolean)"], ["java.util.Collection", "org.bouncycastle.jce.MultiCertStoreParameters.getCertStores()", "public java.util.Collection getCertStores()"], ["boolean", "org.bouncycastle.jce.MultiCertStoreParameters.getSearchAllStores()", "public boolean getSearchAllStores()"], ["java.lang.Object", "org.bouncycastle.jce.MultiCertStoreParameters.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(byte[])", "public org.bouncycastle.jce.PKCS10CertificationRequest(byte[])"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.jce.PKCS10CertificationRequest(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, org.bouncycastle.asn1.x509.X509Name, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey)", "public org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, org.bouncycastle.asn1.x509.X509Name, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, javax.security.auth.x500.X500Principal, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey)", "public org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, javax.security.auth.x500.X500Principal, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, javax.security.auth.x500.X500Principal, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey, java.lang.String)", "public org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, javax.security.auth.x500.X500Principal, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["org.bouncycastle.jce.PKCS10CertificationRequest", "org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, org.bouncycastle.asn1.x509.X509Name, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey, java.lang.String)", "public org.bouncycastle.jce.PKCS10CertificationRequest(java.lang.String, org.bouncycastle.asn1.x509.X509Name, java.security.PublicKey, org.bouncycastle.asn1.ASN1Set, java.security.PrivateKey, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["java.security.PublicKey", "org.bouncycastle.jce.PKCS10CertificationRequest.getPublicKey()", "public java.security.PublicKey getPublicKey() throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException"], ["java.security.PublicKey", "org.bouncycastle.jce.PKCS10CertificationRequest.getPublicKey(java.lang.String)", "public java.security.PublicKey getPublicKey(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException"], ["boolean", "org.bouncycastle.jce.PKCS10CertificationRequest.verify()", "public boolean verify() throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["boolean", "org.bouncycastle.jce.PKCS10CertificationRequest.verify(java.lang.String)", "public boolean verify(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["boolean", "org.bouncycastle.jce.PKCS10CertificationRequest.verify(java.security.PublicKey, java.lang.String)", "public boolean verify(java.security.PublicKey, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException"], ["byte[]", "org.bouncycastle.jce.PKCS10CertificationRequest.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.PKCS12Util", "org.bouncycastle.jce.PKCS12Util()", "public org.bouncycastle.jce.PKCS12Util()"], ["byte[]", "org.bouncycastle.jce.PKCS12Util.convertToDefiniteLength(byte[])", "public static byte[] convertToDefiniteLength(byte[]) throws java.io.IOException"], ["byte[]", "org.bouncycastle.jce.PKCS12Util.convertToDefiniteLength(byte[], char[], java.lang.String)", "public static byte[] convertToDefiniteLength(byte[], char[], java.lang.String) throws java.io.IOException"], ["org.bouncycastle.jce.PrincipalUtil", "org.bouncycastle.jce.PrincipalUtil()", "public org.bouncycastle.jce.PrincipalUtil()"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.PrincipalUtil.getIssuerX509Principal(java.security.cert.X509Certificate)", "public static org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.PrincipalUtil.getSubjectX509Principal(java.security.cert.X509Certificate)", "public static org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.PrincipalUtil.getIssuerX509Principal(java.security.cert.X509CRL)", "public static org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL) throws java.security.cert.CRLException"], ["org.bouncycastle.jce.X509KeyUsage", "org.bouncycastle.jce.X509KeyUsage(int)", "public org.bouncycastle.jce.X509KeyUsage(int)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.jce.X509KeyUsage.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder()", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder()"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder(java.lang.String, java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder(java.lang.String, java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setUserCertificateAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setUserCertificateAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCACertificateAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCACertificateAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCrossCertificateAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCrossCertificateAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCertificateRevocationListAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCertificateRevocationListAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setDeltaRevocationListAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setDeltaRevocationListAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAuthorityRevocationListAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAuthorityRevocationListAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeCertificateAttributeAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeCertificateAttributeAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAACertificateAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAACertificateAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeDescriptorCertificateAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeDescriptorCertificateAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeCertificateRevocationListAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeCertificateRevocationListAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeAuthorityRevocationListAttribute(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeAuthorityRevocationListAttribute(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapUserCertificateAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapUserCertificateAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapCACertificateAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapCACertificateAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapCrossCertificateAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapCrossCertificateAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapCertificateRevocationListAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapCertificateRevocationListAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapDeltaRevocationListAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapDeltaRevocationListAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAuthorityRevocationListAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAuthorityRevocationListAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAttributeCertificateAttributeAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAttributeCertificateAttributeAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAACertificateAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAACertificateAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAttributeDescriptorCertificateAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAttributeDescriptorCertificateAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAttributeCertificateRevocationListAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAttributeCertificateRevocationListAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setLdapAttributeAuthorityRevocationListAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setLdapAttributeAuthorityRevocationListAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setUserCertificateSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setUserCertificateSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCACertificateSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCACertificateSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCrossCertificateSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCrossCertificateSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setCertificateRevocationListIssuerAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setCertificateRevocationListIssuerAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setDeltaRevocationListIssuerAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setDeltaRevocationListIssuerAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAuthorityRevocationListIssuerAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAuthorityRevocationListIssuerAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeCertificateAttributeSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeCertificateAttributeSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAACertificateSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAACertificateSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeDescriptorCertificateSubjectAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeDescriptorCertificateSubjectAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeCertificateRevocationListIssuerAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeCertificateRevocationListIssuerAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setAttributeAuthorityRevocationListIssuerAttributeName(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setAttributeAuthorityRevocationListIssuerAttributeName(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.setSearchForSerialNumberIn(java.lang.String)", "public org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder setSearchForSerialNumberIn(java.lang.String)"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters", "org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder.build()", "public org.bouncycastle.jce.X509LDAPCertStoreParameters build()"], ["java.lang.Object", "org.bouncycastle.jce.X509LDAPCertStoreParameters.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.jce.X509LDAPCertStoreParameters.equal(java.lang.Object)", "public boolean equal(java.lang.Object)"], ["int", "org.bouncycastle.jce.X509LDAPCertStoreParameters.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAACertificateAttribute()", "public java.lang.String getAACertificateAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAACertificateSubjectAttributeName()", "public java.lang.String getAACertificateSubjectAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeAuthorityRevocationListAttribute()", "public java.lang.String getAttributeAuthorityRevocationListAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeAuthorityRevocationListIssuerAttributeName()", "public java.lang.String getAttributeAuthorityRevocationListIssuerAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeCertificateAttributeAttribute()", "public java.lang.String getAttributeCertificateAttributeAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeCertificateAttributeSubjectAttributeName()", "public java.lang.String getAttributeCertificateAttributeSubjectAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeCertificateRevocationListAttribute()", "public java.lang.String getAttributeCertificateRevocationListAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeCertificateRevocationListIssuerAttributeName()", "public java.lang.String getAttributeCertificateRevocationListIssuerAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeDescriptorCertificateAttribute()", "public java.lang.String getAttributeDescriptorCertificateAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAttributeDescriptorCertificateSubjectAttributeName()", "public java.lang.String getAttributeDescriptorCertificateSubjectAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAuthorityRevocationListAttribute()", "public java.lang.String getAuthorityRevocationListAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getAuthorityRevocationListIssuerAttributeName()", "public java.lang.String getAuthorityRevocationListIssuerAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getBaseDN()", "public java.lang.String getBaseDN()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCACertificateAttribute()", "public java.lang.String getCACertificateAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCACertificateSubjectAttributeName()", "public java.lang.String getCACertificateSubjectAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCertificateRevocationListAttribute()", "public java.lang.String getCertificateRevocationListAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCertificateRevocationListIssuerAttributeName()", "public java.lang.String getCertificateRevocationListIssuerAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCrossCertificateAttribute()", "public java.lang.String getCrossCertificateAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getCrossCertificateSubjectAttributeName()", "public java.lang.String getCrossCertificateSubjectAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getDeltaRevocationListAttribute()", "public java.lang.String getDeltaRevocationListAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getDeltaRevocationListIssuerAttributeName()", "public java.lang.String getDeltaRevocationListIssuerAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAACertificateAttributeName()", "public java.lang.String getLdapAACertificateAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAttributeAuthorityRevocationListAttributeName()", "public java.lang.String getLdapAttributeAuthorityRevocationListAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAttributeCertificateAttributeAttributeName()", "public java.lang.String getLdapAttributeCertificateAttributeAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAttributeCertificateRevocationListAttributeName()", "public java.lang.String getLdapAttributeCertificateRevocationListAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAttributeDescriptorCertificateAttributeName()", "public java.lang.String getLdapAttributeDescriptorCertificateAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapAuthorityRevocationListAttributeName()", "public java.lang.String getLdapAuthorityRevocationListAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapCACertificateAttributeName()", "public java.lang.String getLdapCACertificateAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapCertificateRevocationListAttributeName()", "public java.lang.String getLdapCertificateRevocationListAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapCrossCertificateAttributeName()", "public java.lang.String getLdapCrossCertificateAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapDeltaRevocationListAttributeName()", "public java.lang.String getLdapDeltaRevocationListAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapURL()", "public java.lang.String getLdapURL()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getLdapUserCertificateAttributeName()", "public java.lang.String getLdapUserCertificateAttributeName()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getSearchForSerialNumberIn()", "public java.lang.String getSearchForSerialNumberIn()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getUserCertificateAttribute()", "public java.lang.String getUserCertificateAttribute()"], ["java.lang.String", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getUserCertificateSubjectAttributeName()", "public java.lang.String getUserCertificateSubjectAttributeName()"], ["org.bouncycastle.jce.X509LDAPCertStoreParameters", "org.bouncycastle.jce.X509LDAPCertStoreParameters.getInstance(java.security.cert.LDAPCertStoreParameters)", "public static org.bouncycastle.jce.X509LDAPCertStoreParameters getInstance(java.security.cert.LDAPCertStoreParameters)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(byte[])", "public org.bouncycastle.jce.X509Principal(byte[]) throws java.io.IOException"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(org.bouncycastle.asn1.x509.X509Name)", "public org.bouncycastle.jce.X509Principal(org.bouncycastle.asn1.x509.X509Name)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.jce.X509Principal(org.bouncycastle.asn1.x500.X500Name)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(java.util.Hashtable)", "public org.bouncycastle.jce.X509Principal(java.util.Hashtable)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(java.util.Vector, java.util.Hashtable)", "public org.bouncycastle.jce.X509Principal(java.util.Vector, java.util.Hashtable)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(java.util.Vector, java.util.Vector)", "public org.bouncycastle.jce.X509Principal(java.util.Vector, java.util.Vector)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(java.lang.String)", "public org.bouncycastle.jce.X509Principal(java.lang.String)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(boolean, java.lang.String)", "public org.bouncycastle.jce.X509Principal(boolean, java.lang.String)"], ["org.bouncycastle.jce.X509Principal", "org.bouncycastle.jce.X509Principal(boolean, java.util.Hashtable, java.lang.String)", "public org.bouncycastle.jce.X509Principal(boolean, java.util.Hashtable, java.lang.String)"], ["java.lang.String", "org.bouncycastle.jce.X509Principal.getName()", "public java.lang.String getName()"], ["byte[]", "org.bouncycastle.jce.X509Principal.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.exception.ExtCertPathBuilderException", "org.bouncycastle.jce.exception.ExtCertPathBuilderException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jce.exception.ExtCertPathBuilderException(java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.jce.exception.ExtCertPathBuilderException", "org.bouncycastle.jce.exception.ExtCertPathBuilderException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)", "public org.bouncycastle.jce.exception.ExtCertPathBuilderException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)"], ["java.lang.Throwable", "org.bouncycastle.jce.exception.ExtCertPathBuilderException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jce.exception.ExtCertPathValidatorException", "org.bouncycastle.jce.exception.ExtCertPathValidatorException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jce.exception.ExtCertPathValidatorException(java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.jce.exception.ExtCertPathValidatorException", "org.bouncycastle.jce.exception.ExtCertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)", "public org.bouncycastle.jce.exception.ExtCertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int)"], ["java.lang.Throwable", "org.bouncycastle.jce.exception.ExtCertPathValidatorException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jce.exception.ExtCertificateEncodingException", "org.bouncycastle.jce.exception.ExtCertificateEncodingException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jce.exception.ExtCertificateEncodingException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.jce.exception.ExtCertificateEncodingException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jce.exception.ExtIOException", "org.bouncycastle.jce.exception.ExtIOException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.jce.exception.ExtIOException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.jce.exception.ExtIOException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.jce.netscape.NetscapeCertRequest", "org.bouncycastle.jce.netscape.NetscapeCertRequest(byte[])", "public org.bouncycastle.jce.netscape.NetscapeCertRequest(byte[]) throws java.io.IOException"], ["org.bouncycastle.jce.netscape.NetscapeCertRequest", "org.bouncycastle.jce.netscape.NetscapeCertRequest(org.bouncycastle.asn1.ASN1Sequence)", "public org.bouncycastle.jce.netscape.NetscapeCertRequest(org.bouncycastle.asn1.ASN1Sequence)"], ["org.bouncycastle.jce.netscape.NetscapeCertRequest", "org.bouncycastle.jce.netscape.NetscapeCertRequest(java.lang.String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.security.PublicKey)", "public org.bouncycastle.jce.netscape.NetscapeCertRequest(java.lang.String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.security.PublicKey) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.NoSuchProviderException"], ["java.lang.String", "org.bouncycastle.jce.netscape.NetscapeCertRequest.getChallenge()", "public java.lang.String getChallenge()"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.setChallenge(java.lang.String)", "public void setChallenge(java.lang.String)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.jce.netscape.NetscapeCertRequest.getSigningAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigningAlgorithm()"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.setSigningAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setSigningAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.x509.AlgorithmIdentifier", "org.bouncycastle.jce.netscape.NetscapeCertRequest.getKeyAlgorithm()", "public org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyAlgorithm()"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.setKeyAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public void setKeyAlgorithm(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["java.security.PublicKey", "org.bouncycastle.jce.netscape.NetscapeCertRequest.getPublicKey()", "public java.security.PublicKey getPublicKey()"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.setPublicKey(java.security.PublicKey)", "public void setPublicKey(java.security.PublicKey)"], ["boolean", "org.bouncycastle.jce.netscape.NetscapeCertRequest.verify(java.lang.String)", "public boolean verify(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.sign(java.security.PrivateKey)", "public void sign(java.security.PrivateKey) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException, java.security.spec.InvalidKeySpecException"], ["void", "org.bouncycastle.jce.netscape.NetscapeCertRequest.sign(java.security.PrivateKey, java.security.SecureRandom)", "public void sign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException, java.security.spec.InvalidKeySpecException"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.jce.netscape.NetscapeCertRequest.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["java.lang.Throwable", "org.bouncycastle.jce.provider.AnnotatedException.getCause()", "public java.lang.Throwable getCause()"], ["java.lang.Object", "org.bouncycastle.jce.provider.BouncyCastleProvider$1.run()", "public java.lang.Object run()"], ["org.bouncycastle.jce.provider.BouncyCastleProvider", "org.bouncycastle.jce.provider.BouncyCastleProvider()", "public org.bouncycastle.jce.provider.BouncyCastleProvider()"], ["void", "org.bouncycastle.jce.provider.BouncyCastleProvider.setParameter(java.lang.String, java.lang.Object)", "public void setParameter(java.lang.String, java.lang.Object)"], ["boolean", "org.bouncycastle.jce.provider.BouncyCastleProvider.hasAlgorithm(java.lang.String, java.lang.String)", "public boolean hasAlgorithm(java.lang.String, java.lang.String)"], ["void", "org.bouncycastle.jce.provider.BouncyCastleProvider.addAlgorithm(java.lang.String, java.lang.String)", "public void addAlgorithm(java.lang.String, java.lang.String)"], ["void", "org.bouncycastle.jce.provider.BouncyCastleProvider.addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)", "public void addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)"], ["java.security.PublicKey", "org.bouncycastle.jce.provider.BouncyCastleProvider.getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public static java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["java.security.PrivateKey", "org.bouncycastle.jce.provider.BouncyCastleProvider.getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public static java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.provider.BouncyCastleProviderConfiguration.getEcImplicitlyCa()", "public org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jce.provider.BouncyCastleProviderConfiguration.getDHDefaultParameters(int)", "public javax.crypto.spec.DHParameterSpec getDHDefaultParameters(int)"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithMD5AndDES", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithMD5AndDES()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithMD5AndDES()"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES()"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES2Key", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES2Key()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES2Key()"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES3Key", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES3Key()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHAAndDES3Key()"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndDES3Key", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndDES3Key()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndDES3Key()"], ["org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndTwofish", "org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndTwofish()", "public org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndTwofish()"], ["org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator", "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator(org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator.init(org.bouncycastle.crypto.DerivationParameters)", "public void init(org.bouncycastle.crypto.DerivationParameters)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["int", "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator.generateBytes(byte[], int, int)", "public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException"], ["org.bouncycastle.jce.provider.BrokenPBE$Util", "org.bouncycastle.jce.provider.BrokenPBE$Util()", "public org.bouncycastle.jce.provider.BrokenPBE$Util()"], ["org.bouncycastle.jce.provider.CertPathValidatorUtilities", "org.bouncycastle.jce.provider.CertPathValidatorUtilities()", "public org.bouncycastle.jce.provider.CertPathValidatorUtilities()"], ["java.util.Date", "org.bouncycastle.jce.provider.CertStatus.getRevocationDate()", "public java.util.Date getRevocationDate()"], ["void", "org.bouncycastle.jce.provider.CertStatus.setRevocationDate(java.util.Date)", "public void setRevocationDate(java.util.Date)"], ["int", "org.bouncycastle.jce.provider.CertStatus.getCertStatus()", "public int getCertStatus()"], ["void", "org.bouncycastle.jce.provider.CertStatus.setCertStatus(int)", "public void setCertStatus(int)"], ["org.bouncycastle.jce.provider.CertStoreCollectionSpi", "org.bouncycastle.jce.provider.CertStoreCollectionSpi(java.security.cert.CertStoreParameters)", "public org.bouncycastle.jce.provider.CertStoreCollectionSpi(java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException"], ["java.util.Collection", "org.bouncycastle.jce.provider.CertStoreCollectionSpi.engineGetCertificates(java.security.cert.CertSelector)", "public java.util.Collection engineGetCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException"], ["java.util.Collection", "org.bouncycastle.jce.provider.CertStoreCollectionSpi.engineGetCRLs(java.security.cert.CRLSelector)", "public java.util.Collection engineGetCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException"], ["org.bouncycastle.jce.provider.DHUtil", "org.bouncycastle.jce.provider.DHUtil()", "public org.bouncycastle.jce.provider.DHUtil()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jce.provider.DHUtil.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.jce.provider.DHUtil.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["java.lang.Throwable", "org.bouncycastle.jce.provider.ExtCRLException.getCause()", "public java.lang.Throwable getCause()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getX()", "public java.math.BigInteger getX()"], ["void", "org.bouncycastle.jce.provider.JCEDHPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.JCEDHPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEDHPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEDHPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEDHPublicKey.getEncoded()", "public byte[] getEncoded()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jce.provider.JCEDHPublicKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEDHPublicKey.getY()", "public java.math.BigInteger getY()"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.security.interfaces.ECPrivateKey)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.security.interfaces.ECPrivateKey)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.jce.spec.ECPrivateKeySpec)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.jce.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, java.security.spec.ECPrivateKeySpec)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, java.security.spec.ECPrivateKeySpec)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.jce.provider.JCEECPrivateKey)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.jce.provider.JCEECPrivateKey)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jce.provider.JCEECPublicKey, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jce.provider.JCEECPublicKey, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jce.provider.JCEECPublicKey, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters, org.bouncycastle.jce.provider.JCEECPublicKey, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jce.provider.JCEECPrivateKey", "org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)", "public org.bouncycastle.jce.provider.JCEECPrivateKey(java.lang.String, org.bouncycastle.crypto.params.ECPrivateKeyParameters)"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEECPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jce.provider.JCEECPrivateKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.provider.JCEECPrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEECPrivateKey.getS()", "public java.math.BigInteger getS()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEECPrivateKey.getD()", "public java.math.BigInteger getD()"], ["void", "org.bouncycastle.jce.provider.JCEECPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.JCEECPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.JCEECPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["void", "org.bouncycastle.jce.provider.JCEECPrivateKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jce.provider.JCEECPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.provider.JCEECPrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPrivateKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.jce.provider.JCEECPublicKey)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.jce.provider.JCEECPublicKey)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, java.security.spec.ECPublicKeySpec)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, java.security.spec.ECPublicKeySpec)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.jce.spec.ECPublicKeySpec)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.jce.spec.ECPublicKeySpec)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)"], ["org.bouncycastle.jce.provider.JCEECPublicKey", "org.bouncycastle.jce.provider.JCEECPublicKey(java.security.interfaces.ECPublicKey)", "public org.bouncycastle.jce.provider.JCEECPublicKey(java.security.interfaces.ECPublicKey)"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEECPublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.spec.ECParameterSpec", "org.bouncycastle.jce.provider.JCEECPublicKey.getParams()", "public java.security.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.provider.JCEECPublicKey.getParameters()", "public org.bouncycastle.jce.spec.ECParameterSpec getParameters()"], ["java.security.spec.ECPoint", "org.bouncycastle.jce.provider.JCEECPublicKey.getW()", "public java.security.spec.ECPoint getW()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jce.provider.JCEECPublicKey.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jce.provider.JCEECPublicKey.engineGetQ()", "public org.bouncycastle.math.ec.ECPoint engineGetQ()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEECPublicKey.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jce.provider.JCEECPublicKey.setPointFormat(java.lang.String)", "public void setPointFormat(java.lang.String)"], ["boolean", "org.bouncycastle.jce.provider.JCEECPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.provider.JCEECPublicKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getParameters()", "public org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getX()", "public java.math.BigInteger getX()"], ["void", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.JCEElGamalPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getParameters()", "public org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()"], ["javax.crypto.spec.DHParameterSpec", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getParams()", "public javax.crypto.spec.DHParameterSpec getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCEElGamalPublicKey.getY()", "public java.math.BigInteger getY()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getEncoded()", "public byte[] getEncoded()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getPrimeP()", "public java.math.BigInteger getPrimeP()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getPrimeQ()", "public java.math.BigInteger getPrimeQ()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getPrimeExponentP()", "public java.math.BigInteger getPrimeExponentP()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getPrimeExponentQ()", "public java.math.BigInteger getPrimeExponentQ()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.getCrtCoefficient()", "public java.math.BigInteger getCrtCoefficient()"], ["int", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey.toString()", "public java.lang.String toString()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getPrivateExponent()", "public java.math.BigInteger getPrivateExponent()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["boolean", "org.bouncycastle.jce.provider.JCERSAPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.provider.JCERSAPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jce.provider.JCERSAPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.JCERSAPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPublicKey.getModulus()", "public java.math.BigInteger getModulus()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JCERSAPublicKey.getPublicExponent()", "public java.math.BigInteger getPublicExponent()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JCERSAPublicKey.getEncoded()", "public byte[] getEncoded()"], ["int", "org.bouncycastle.jce.provider.JCERSAPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jce.provider.JCERSAPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.jce.provider.JCERSAPublicKey.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_CFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_CFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_CFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_OFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_OFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Blowfish_OFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$DES_CFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$DES_CFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$DES_CFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$DES_OFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$DES_OFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$DES_OFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$DESede_CFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$DESede_CFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$DESede_CFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$DESede_OFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$DESede_OFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$DESede_OFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_CFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_CFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_CFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_OFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_OFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Skipjack_OFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_CFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_CFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_CFB8()"], ["org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_OFB8", "org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_OFB8()", "public org.bouncycastle.jce.provider.JCEStreamCipher$Twofish_OFB8()"], ["java.lang.String", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.interfaces.DSAParams", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getParams()", "public java.security.interfaces.DSAParams getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getX()", "public java.math.BigInteger getX()"], ["boolean", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.hashCode()", "public int hashCode()"], ["void", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.JDKDSAPrivateKey.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jce.provider.JDKDSAPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.provider.JDKDSAPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.provider.JDKDSAPublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.security.interfaces.DSAParams", "org.bouncycastle.jce.provider.JDKDSAPublicKey.getParams()", "public java.security.interfaces.DSAParams getParams()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.JDKDSAPublicKey.getY()", "public java.math.BigInteger getY()"], ["java.lang.String", "org.bouncycastle.jce.provider.JDKDSAPublicKey.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.jce.provider.JDKDSAPublicKey.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jce.provider.JDKDSAPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.jce.provider.JDKPKCS12StoreParameter", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter()", "public org.bouncycastle.jce.provider.JDKPKCS12StoreParameter()"], ["java.io.OutputStream", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["java.security.KeyStore$ProtectionParameter", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.getProtectionParameter()", "public java.security.KeyStore$ProtectionParameter getProtectionParameter()"], ["boolean", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.isUseDEREncoding()", "public boolean isUseDEREncoding()"], ["void", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.setOutputStream(java.io.OutputStream)", "public void setOutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.setPassword(char[])", "public void setPassword(char[])"], ["void", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.setProtectionParameter(java.security.KeyStore$ProtectionParameter)", "public void setProtectionParameter(java.security.KeyStore$ProtectionParameter)"], ["void", "org.bouncycastle.jce.provider.JDKPKCS12StoreParameter.setUseDEREncoding(boolean)", "public void setUseDEREncoding(boolean)"], ["org.bouncycastle.jce.provider.MultiCertStoreSpi", "org.bouncycastle.jce.provider.MultiCertStoreSpi(java.security.cert.CertStoreParameters)", "public org.bouncycastle.jce.provider.MultiCertStoreSpi(java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException"], ["java.util.Collection", "org.bouncycastle.jce.provider.MultiCertStoreSpi.engineGetCertificates(java.security.cert.CertSelector)", "public java.util.Collection engineGetCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException"], ["java.util.Collection", "org.bouncycastle.jce.provider.MultiCertStoreSpi.engineGetCRLs(java.security.cert.CRLSelector)", "public java.util.Collection engineGetCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException"], ["org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator", "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator.generateDerivedParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator.generateDerivedParameters(int, int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)"], ["org.bouncycastle.crypto.CipherParameters", "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator.generateDerivedMacParameters(int)", "public org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"], ["org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi", "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi()", "public org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi()"], ["java.security.cert.CertPathBuilderResult", "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi.engineBuild(java.security.cert.CertPathParameters)", "public java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException"], ["org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi", "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi()", "public org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi()"], ["java.security.cert.CertPathValidatorResult", "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi.engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters)", "public java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException"], ["org.bouncycastle.jce.provider.PKIXCRLUtil", "org.bouncycastle.jce.provider.PKIXCRLUtil()", "public org.bouncycastle.jce.provider.PKIXCRLUtil()"], ["java.util.Set", "org.bouncycastle.jce.provider.PKIXCRLUtil.findCRLs(org.bouncycastle.x509.X509CRLStoreSelector, org.bouncycastle.x509.ExtendedPKIXParameters, java.util.Date)", "public java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector, org.bouncycastle.x509.ExtendedPKIXParameters, java.util.Date) throws org.bouncycastle.jce.provider.AnnotatedException"], ["java.util.Set", "org.bouncycastle.jce.provider.PKIXCRLUtil.findCRLs(org.bouncycastle.x509.X509CRLStoreSelector, java.security.cert.PKIXParameters)", "public java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector, java.security.cert.PKIXParameters) throws org.bouncycastle.jce.provider.AnnotatedException"], ["org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi", "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi()", "public org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi()"], ["java.security.cert.CertPathBuilderResult", "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi.engineBuild(java.security.cert.CertPathParameters)", "public java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException"], ["org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi", "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi()", "public org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi()"], ["java.security.cert.CertPathValidatorResult", "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi.engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters)", "public java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException"], ["org.bouncycastle.jce.provider.PKIXNameConstraintValidator", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator()", "public org.bouncycastle.jce.provider.PKIXNameConstraintValidator()"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.checkPermittedDN(org.bouncycastle.asn1.ASN1Sequence)", "public void checkPermittedDN(org.bouncycastle.asn1.ASN1Sequence) throws org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.checkExcludedDN(org.bouncycastle.asn1.ASN1Sequence)", "public void checkExcludedDN(org.bouncycastle.asn1.ASN1Sequence) throws org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.checkPermitted(org.bouncycastle.asn1.x509.GeneralName)", "public void checkPermitted(org.bouncycastle.asn1.x509.GeneralName) throws org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.checkExcluded(org.bouncycastle.asn1.x509.GeneralName)", "public void checkExcluded(org.bouncycastle.asn1.x509.GeneralName) throws org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)", "public void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])", "public void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.intersectEmptyPermittedSubtree(int)", "public void intersectEmptyPermittedSubtree(int)"], ["void", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)", "public void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)"], ["int", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.jce.provider.PKIXNameConstraintValidator.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException", "org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException(java.lang.String)", "public org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException(java.lang.String)"], ["org.bouncycastle.jce.provider.PKIXPolicyNode", "org.bouncycastle.jce.provider.PKIXPolicyNode(java.util.List, int, java.util.Set, java.security.cert.PolicyNode, java.util.Set, java.lang.String, boolean)", "public org.bouncycastle.jce.provider.PKIXPolicyNode(java.util.List, int, java.util.Set, java.security.cert.PolicyNode, java.util.Set, java.lang.String, boolean)"], ["void", "org.bouncycastle.jce.provider.PKIXPolicyNode.addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)", "public void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)"], ["java.util.Iterator", "org.bouncycastle.jce.provider.PKIXPolicyNode.getChildren()", "public java.util.Iterator getChildren()"], ["int", "org.bouncycastle.jce.provider.PKIXPolicyNode.getDepth()", "public int getDepth()"], ["java.util.Set", "org.bouncycastle.jce.provider.PKIXPolicyNode.getExpectedPolicies()", "public java.util.Set getExpectedPolicies()"], ["java.security.cert.PolicyNode", "org.bouncycastle.jce.provider.PKIXPolicyNode.getParent()", "public java.security.cert.PolicyNode getParent()"], ["java.util.Set", "org.bouncycastle.jce.provider.PKIXPolicyNode.getPolicyQualifiers()", "public java.util.Set getPolicyQualifiers()"], ["java.lang.String", "org.bouncycastle.jce.provider.PKIXPolicyNode.getValidPolicy()", "public java.lang.String getValidPolicy()"], ["boolean", "org.bouncycastle.jce.provider.PKIXPolicyNode.hasChildren()", "public boolean hasChildren()"], ["boolean", "org.bouncycastle.jce.provider.PKIXPolicyNode.isCritical()", "public boolean isCritical()"], ["void", "org.bouncycastle.jce.provider.PKIXPolicyNode.removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)", "public void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)"], ["void", "org.bouncycastle.jce.provider.PKIXPolicyNode.setCritical(boolean)", "public void setCritical(boolean)"], ["void", "org.bouncycastle.jce.provider.PKIXPolicyNode.setParent(org.bouncycastle.jce.provider.PKIXPolicyNode)", "public void setParent(org.bouncycastle.jce.provider.PKIXPolicyNode)"], ["java.lang.String", "org.bouncycastle.jce.provider.PKIXPolicyNode.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.bouncycastle.jce.provider.PKIXPolicyNode.toString(java.lang.String)", "public java.lang.String toString(java.lang.String)"], ["java.lang.Object", "org.bouncycastle.jce.provider.PKIXPolicyNode.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.jce.provider.PKIXPolicyNode", "org.bouncycastle.jce.provider.PKIXPolicyNode.copy()", "public org.bouncycastle.jce.provider.PKIXPolicyNode copy()"], ["org.bouncycastle.jce.provider.RFC3280CertPathUtilities", "org.bouncycastle.jce.provider.RFC3280CertPathUtilities()", "public org.bouncycastle.jce.provider.RFC3280CertPathUtilities()"], ["org.bouncycastle.jce.provider.X509AttrCertParser", "org.bouncycastle.jce.provider.X509AttrCertParser()", "public org.bouncycastle.jce.provider.X509AttrCertParser()"], ["void", "org.bouncycastle.jce.provider.X509AttrCertParser.engineInit(java.io.InputStream)", "public void engineInit(java.io.InputStream)"], ["java.lang.Object", "org.bouncycastle.jce.provider.X509AttrCertParser.engineRead()", "public java.lang.Object engineRead() throws org.bouncycastle.x509.util.StreamParsingException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509AttrCertParser.engineReadAll()", "public java.util.Collection engineReadAll() throws org.bouncycastle.x509.util.StreamParsingException"], ["org.bouncycastle.jce.provider.X509CRLEntryObject", "org.bouncycastle.jce.provider.X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry)", "public org.bouncycastle.jce.provider.X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry)"], ["org.bouncycastle.jce.provider.X509CRLEntryObject", "org.bouncycastle.jce.provider.X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry, boolean, org.bouncycastle.asn1.x500.X500Name)", "public org.bouncycastle.jce.provider.X509CRLEntryObject(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry, boolean, org.bouncycastle.asn1.x500.X500Name)"], ["boolean", "org.bouncycastle.jce.provider.X509CRLEntryObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jce.provider.X509CRLEntryObject.getCertificateIssuer()", "public javax.security.auth.x500.X500Principal getCertificateIssuer()"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CRLEntryObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CRLEntryObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLEntryObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["int", "org.bouncycastle.jce.provider.X509CRLEntryObject.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.jce.provider.X509CRLEntryObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLEntryObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CRLException"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.X509CRLEntryObject.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["java.util.Date", "org.bouncycastle.jce.provider.X509CRLEntryObject.getRevocationDate()", "public java.util.Date getRevocationDate()"], ["boolean", "org.bouncycastle.jce.provider.X509CRLEntryObject.hasExtensions()", "public boolean hasExtensions()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CRLEntryObject.toString()", "public java.lang.String toString()"], ["org.bouncycastle.jce.provider.X509CRLObject", "org.bouncycastle.jce.provider.X509CRLObject(org.bouncycastle.asn1.x509.CertificateList)", "public org.bouncycastle.jce.provider.X509CRLObject(org.bouncycastle.asn1.x509.CertificateList) throws java.security.cert.CRLException"], ["boolean", "org.bouncycastle.jce.provider.X509CRLObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CRLObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CRLObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CRLException"], ["void", "org.bouncycastle.jce.provider.X509CRLObject.verify(java.security.PublicKey)", "public void verify(java.security.PublicKey) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["void", "org.bouncycastle.jce.provider.X509CRLObject.verify(java.security.PublicKey, java.lang.String)", "public void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["int", "org.bouncycastle.jce.provider.X509CRLObject.getVersion()", "public int getVersion()"], ["java.security.Principal", "org.bouncycastle.jce.provider.X509CRLObject.getIssuerDN()", "public java.security.Principal getIssuerDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jce.provider.X509CRLObject.getIssuerX500Principal()", "public javax.security.auth.x500.X500Principal getIssuerX500Principal()"], ["java.util.Date", "org.bouncycastle.jce.provider.X509CRLObject.getThisUpdate()", "public java.util.Date getThisUpdate()"], ["java.util.Date", "org.bouncycastle.jce.provider.X509CRLObject.getNextUpdate()", "public java.util.Date getNextUpdate()"], ["java.security.cert.X509CRLEntry", "org.bouncycastle.jce.provider.X509CRLObject.getRevokedCertificate(java.math.BigInteger)", "public java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CRLObject.getRevokedCertificates()", "public java.util.Set getRevokedCertificates()"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLObject.getTBSCertList()", "public byte[] getTBSCertList() throws java.security.cert.CRLException"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLObject.getSignature()", "public byte[] getSignature()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CRLObject.getSigAlgName()", "public java.lang.String getSigAlgName()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CRLObject.getSigAlgOID()", "public java.lang.String getSigAlgOID()"], ["byte[]", "org.bouncycastle.jce.provider.X509CRLObject.getSigAlgParams()", "public byte[] getSigAlgParams()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CRLObject.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.jce.provider.X509CRLObject.isRevoked(java.security.cert.Certificate)", "public boolean isRevoked(java.security.cert.Certificate)"], ["boolean", "org.bouncycastle.jce.provider.X509CRLObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.provider.X509CRLObject.hashCode()", "public int hashCode()"], ["org.bouncycastle.jce.provider.X509CRLParser", "org.bouncycastle.jce.provider.X509CRLParser()", "public org.bouncycastle.jce.provider.X509CRLParser()"], ["void", "org.bouncycastle.jce.provider.X509CRLParser.engineInit(java.io.InputStream)", "public void engineInit(java.io.InputStream)"], ["java.lang.Object", "org.bouncycastle.jce.provider.X509CRLParser.engineRead()", "public java.lang.Object engineRead() throws org.bouncycastle.x509.util.StreamParsingException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509CRLParser.engineReadAll()", "public java.util.Collection engineReadAll() throws org.bouncycastle.x509.util.StreamParsingException"], ["org.bouncycastle.jce.provider.X509CertPairParser", "org.bouncycastle.jce.provider.X509CertPairParser()", "public org.bouncycastle.jce.provider.X509CertPairParser()"], ["void", "org.bouncycastle.jce.provider.X509CertPairParser.engineInit(java.io.InputStream)", "public void engineInit(java.io.InputStream)"], ["java.lang.Object", "org.bouncycastle.jce.provider.X509CertPairParser.engineRead()", "public java.lang.Object engineRead() throws org.bouncycastle.x509.util.StreamParsingException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509CertPairParser.engineReadAll()", "public java.util.Collection engineReadAll() throws org.bouncycastle.x509.util.StreamParsingException"], ["org.bouncycastle.jce.provider.X509CertParser", "org.bouncycastle.jce.provider.X509CertParser()", "public org.bouncycastle.jce.provider.X509CertParser()"], ["void", "org.bouncycastle.jce.provider.X509CertParser.engineInit(java.io.InputStream)", "public void engineInit(java.io.InputStream)"], ["java.lang.Object", "org.bouncycastle.jce.provider.X509CertParser.engineRead()", "public java.lang.Object engineRead() throws org.bouncycastle.x509.util.StreamParsingException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509CertParser.engineReadAll()", "public java.util.Collection engineReadAll() throws org.bouncycastle.x509.util.StreamParsingException"], ["org.bouncycastle.jce.provider.X509CertificateObject", "org.bouncycastle.jce.provider.X509CertificateObject(org.bouncycastle.asn1.x509.Certificate)", "public org.bouncycastle.jce.provider.X509CertificateObject(org.bouncycastle.asn1.x509.Certificate) throws java.security.cert.CertificateParsingException"], ["void", "org.bouncycastle.jce.provider.X509CertificateObject.checkValidity()", "public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["void", "org.bouncycastle.jce.provider.X509CertificateObject.checkValidity(java.util.Date)", "public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["int", "org.bouncycastle.jce.provider.X509CertificateObject.getVersion()", "public int getVersion()"], ["java.math.BigInteger", "org.bouncycastle.jce.provider.X509CertificateObject.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["java.security.Principal", "org.bouncycastle.jce.provider.X509CertificateObject.getIssuerDN()", "public java.security.Principal getIssuerDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jce.provider.X509CertificateObject.getIssuerX500Principal()", "public javax.security.auth.x500.X500Principal getIssuerX500Principal()"], ["java.security.Principal", "org.bouncycastle.jce.provider.X509CertificateObject.getSubjectDN()", "public java.security.Principal getSubjectDN()"], ["javax.security.auth.x500.X500Principal", "org.bouncycastle.jce.provider.X509CertificateObject.getSubjectX500Principal()", "public javax.security.auth.x500.X500Principal getSubjectX500Principal()"], ["java.util.Date", "org.bouncycastle.jce.provider.X509CertificateObject.getNotBefore()", "public java.util.Date getNotBefore()"], ["java.util.Date", "org.bouncycastle.jce.provider.X509CertificateObject.getNotAfter()", "public java.util.Date getNotAfter()"], ["byte[]", "org.bouncycastle.jce.provider.X509CertificateObject.getTBSCertificate()", "public byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException"], ["byte[]", "org.bouncycastle.jce.provider.X509CertificateObject.getSignature()", "public byte[] getSignature()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CertificateObject.getSigAlgName()", "public java.lang.String getSigAlgName()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CertificateObject.getSigAlgOID()", "public java.lang.String getSigAlgOID()"], ["byte[]", "org.bouncycastle.jce.provider.X509CertificateObject.getSigAlgParams()", "public byte[] getSigAlgParams()"], ["boolean[]", "org.bouncycastle.jce.provider.X509CertificateObject.getIssuerUniqueID()", "public boolean[] getIssuerUniqueID()"], ["boolean[]", "org.bouncycastle.jce.provider.X509CertificateObject.getSubjectUniqueID()", "public boolean[] getSubjectUniqueID()"], ["boolean[]", "org.bouncycastle.jce.provider.X509CertificateObject.getKeyUsage()", "public boolean[] getKeyUsage()"], ["java.util.List", "org.bouncycastle.jce.provider.X509CertificateObject.getExtendedKeyUsage()", "public java.util.List getExtendedKeyUsage() throws java.security.cert.CertificateParsingException"], ["int", "org.bouncycastle.jce.provider.X509CertificateObject.getBasicConstraints()", "public int getBasicConstraints()"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509CertificateObject.getSubjectAlternativeNames()", "public java.util.Collection getSubjectAlternativeNames() throws java.security.cert.CertificateParsingException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509CertificateObject.getIssuerAlternativeNames()", "public java.util.Collection getIssuerAlternativeNames() throws java.security.cert.CertificateParsingException"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CertificateObject.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["byte[]", "org.bouncycastle.jce.provider.X509CertificateObject.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["java.util.Set", "org.bouncycastle.jce.provider.X509CertificateObject.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["boolean", "org.bouncycastle.jce.provider.X509CertificateObject.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["java.security.PublicKey", "org.bouncycastle.jce.provider.X509CertificateObject.getPublicKey()", "public java.security.PublicKey getPublicKey()"], ["byte[]", "org.bouncycastle.jce.provider.X509CertificateObject.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CertificateEncodingException"], ["boolean", "org.bouncycastle.jce.provider.X509CertificateObject.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["synchronized", "org.bouncycastle.jce.provider.X509CertificateObject.int hashCode()", "public synchronized int hashCode()"], ["void", "org.bouncycastle.jce.provider.X509CertificateObject.setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public void setBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.asn1.ASN1Encodable", "org.bouncycastle.jce.provider.X509CertificateObject.getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)", "public org.bouncycastle.asn1.ASN1Encodable getBagAttribute(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], ["java.util.Enumeration", "org.bouncycastle.jce.provider.X509CertificateObject.getBagAttributeKeys()", "public java.util.Enumeration getBagAttributeKeys()"], ["java.lang.String", "org.bouncycastle.jce.provider.X509CertificateObject.toString()", "public java.lang.String toString()"], ["void", "org.bouncycastle.jce.provider.X509CertificateObject.verify(java.security.PublicKey)", "public final void verify(java.security.PublicKey) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["void", "org.bouncycastle.jce.provider.X509CertificateObject.verify(java.security.PublicKey, java.lang.String)", "public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["org.bouncycastle.jce.provider.X509LDAPCertStoreSpi", "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi(java.security.cert.CertStoreParameters)", "public org.bouncycastle.jce.provider.X509LDAPCertStoreSpi(java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi.engineGetCertificates(java.security.cert.CertSelector)", "public java.util.Collection engineGetCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi.engineGetCRLs(java.security.cert.CRLSelector)", "public java.util.Collection engineGetCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException"], ["org.bouncycastle.jce.provider.X509StoreAttrCertCollection", "org.bouncycastle.jce.provider.X509StoreAttrCertCollection()", "public org.bouncycastle.jce.provider.X509StoreAttrCertCollection()"], ["void", "org.bouncycastle.jce.provider.X509StoreAttrCertCollection.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreAttrCertCollection.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.jce.provider.X509StoreCRLCollection", "org.bouncycastle.jce.provider.X509StoreCRLCollection()", "public org.bouncycastle.jce.provider.X509StoreCRLCollection()"], ["void", "org.bouncycastle.jce.provider.X509StoreCRLCollection.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreCRLCollection.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.jce.provider.X509StoreCertCollection", "org.bouncycastle.jce.provider.X509StoreCertCollection()", "public org.bouncycastle.jce.provider.X509StoreCertCollection()"], ["void", "org.bouncycastle.jce.provider.X509StoreCertCollection.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreCertCollection.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.jce.provider.X509StoreCertPairCollection", "org.bouncycastle.jce.provider.X509StoreCertPairCollection()", "public org.bouncycastle.jce.provider.X509StoreCertPairCollection()"], ["void", "org.bouncycastle.jce.provider.X509StoreCertPairCollection.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreCertPairCollection.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts", "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts()", "public org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts()"], ["void", "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector) throws org.bouncycastle.util.StoreException"], ["org.bouncycastle.jce.provider.X509StoreLDAPCRLs", "org.bouncycastle.jce.provider.X509StoreLDAPCRLs()", "public org.bouncycastle.jce.provider.X509StoreLDAPCRLs()"], ["void", "org.bouncycastle.jce.provider.X509StoreLDAPCRLs.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreLDAPCRLs.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector) throws org.bouncycastle.util.StoreException"], ["org.bouncycastle.jce.provider.X509StoreLDAPCertPairs", "org.bouncycastle.jce.provider.X509StoreLDAPCertPairs()", "public org.bouncycastle.jce.provider.X509StoreLDAPCertPairs()"], ["void", "org.bouncycastle.jce.provider.X509StoreLDAPCertPairs.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreLDAPCertPairs.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector) throws org.bouncycastle.util.StoreException"], ["org.bouncycastle.jce.provider.X509StoreLDAPCerts", "org.bouncycastle.jce.provider.X509StoreLDAPCerts()", "public org.bouncycastle.jce.provider.X509StoreLDAPCerts()"], ["void", "org.bouncycastle.jce.provider.X509StoreLDAPCerts.engineInit(org.bouncycastle.x509.X509StoreParameters)", "public void engineInit(org.bouncycastle.x509.X509StoreParameters)"], ["java.util.Collection", "org.bouncycastle.jce.provider.X509StoreLDAPCerts.engineGetMatches(org.bouncycastle.util.Selector)", "public java.util.Collection engineGetMatches(org.bouncycastle.util.Selector) throws org.bouncycastle.util.StoreException"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.spec.ECKeySpec.getParams()", "public org.bouncycastle.jce.spec.ECParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ECNamedCurveGenParameterSpec", "org.bouncycastle.jce.spec.ECNamedCurveGenParameterSpec(java.lang.String)", "public org.bouncycastle.jce.spec.ECNamedCurveGenParameterSpec(java.lang.String)"], ["java.lang.String", "org.bouncycastle.jce.spec.ECNamedCurveGenParameterSpec.getName()", "public java.lang.String getName()"], ["org.bouncycastle.jce.spec.ECNamedCurveParameterSpec", "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveParameterSpec", "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveParameterSpec", "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.jce.spec.ECNamedCurveParameterSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["java.lang.String", "org.bouncycastle.jce.spec.ECNamedCurveParameterSpec.getName()", "public java.lang.String getName()"], ["org.bouncycastle.jce.spec.ECNamedCurveSpec", "org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveSpec", "org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveSpec", "org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveSpec", "org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECNamedCurveSpec", "org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.jce.spec.ECNamedCurveSpec(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["java.lang.String", "org.bouncycastle.jce.spec.ECNamedCurveSpec.getName()", "public java.lang.String getName()"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.jce.spec.ECParameterSpec", "org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])", "public org.bouncycastle.jce.spec.ECParameterSpec(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.jce.spec.ECParameterSpec.getCurve()", "public org.bouncycastle.math.ec.ECCurve getCurve()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jce.spec.ECParameterSpec.getG()", "public org.bouncycastle.math.ec.ECPoint getG()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ECParameterSpec.getN()", "public java.math.BigInteger getN()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ECParameterSpec.getH()", "public java.math.BigInteger getH()"], ["byte[]", "org.bouncycastle.jce.spec.ECParameterSpec.getSeed()", "public byte[] getSeed()"], ["boolean", "org.bouncycastle.jce.spec.ECParameterSpec.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.spec.ECParameterSpec.hashCode()", "public int hashCode()"], ["org.bouncycastle.jce.spec.ECPrivateKeySpec", "org.bouncycastle.jce.spec.ECPrivateKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jce.spec.ECPrivateKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ECParameterSpec)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ECPrivateKeySpec.getD()", "public java.math.BigInteger getD()"], ["org.bouncycastle.jce.spec.ECPublicKeySpec", "org.bouncycastle.jce.spec.ECPublicKeySpec(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.jce.spec.ECParameterSpec)", "public org.bouncycastle.jce.spec.ECPublicKeySpec(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.jce.spec.ECParameterSpec)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.jce.spec.ECPublicKeySpec.getQ()", "public org.bouncycastle.math.ec.ECPoint getQ()"], ["org.bouncycastle.jce.spec.ElGamalGenParameterSpec", "org.bouncycastle.jce.spec.ElGamalGenParameterSpec(int)", "public org.bouncycastle.jce.spec.ElGamalGenParameterSpec(int)"], ["int", "org.bouncycastle.jce.spec.ElGamalGenParameterSpec.getPrimeSize()", "public int getPrimeSize()"], ["org.bouncycastle.jce.spec.ElGamalKeySpec", "org.bouncycastle.jce.spec.ElGamalKeySpec(org.bouncycastle.jce.spec.ElGamalParameterSpec)", "public org.bouncycastle.jce.spec.ElGamalKeySpec(org.bouncycastle.jce.spec.ElGamalParameterSpec)"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jce.spec.ElGamalKeySpec.getParams()", "public org.bouncycastle.jce.spec.ElGamalParameterSpec getParams()"], ["org.bouncycastle.jce.spec.ElGamalParameterSpec", "org.bouncycastle.jce.spec.ElGamalParameterSpec(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.ElGamalParameterSpec(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ElGamalParameterSpec.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ElGamalParameterSpec.getG()", "public java.math.BigInteger getG()"], ["org.bouncycastle.jce.spec.ElGamalPrivateKeySpec", "org.bouncycastle.jce.spec.ElGamalPrivateKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ElGamalParameterSpec)", "public org.bouncycastle.jce.spec.ElGamalPrivateKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ElGamalParameterSpec)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ElGamalPrivateKeySpec.getX()", "public java.math.BigInteger getX()"], ["org.bouncycastle.jce.spec.ElGamalPublicKeySpec", "org.bouncycastle.jce.spec.ElGamalPublicKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ElGamalParameterSpec)", "public org.bouncycastle.jce.spec.ElGamalPublicKeySpec(java.math.BigInteger, org.bouncycastle.jce.spec.ElGamalParameterSpec)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.ElGamalPublicKeySpec.getY()", "public java.math.BigInteger getY()"], ["org.bouncycastle.jce.spec.GOST28147ParameterSpec", "org.bouncycastle.jce.spec.GOST28147ParameterSpec(byte[])", "public org.bouncycastle.jce.spec.GOST28147ParameterSpec(byte[])"], ["org.bouncycastle.jce.spec.GOST28147ParameterSpec", "org.bouncycastle.jce.spec.GOST28147ParameterSpec(byte[], byte[])", "public org.bouncycastle.jce.spec.GOST28147ParameterSpec(byte[], byte[])"], ["org.bouncycastle.jce.spec.GOST28147ParameterSpec", "org.bouncycastle.jce.spec.GOST28147ParameterSpec(java.lang.String)", "public org.bouncycastle.jce.spec.GOST28147ParameterSpec(java.lang.String)"], ["org.bouncycastle.jce.spec.GOST28147ParameterSpec", "org.bouncycastle.jce.spec.GOST28147ParameterSpec(java.lang.String, byte[])", "public org.bouncycastle.jce.spec.GOST28147ParameterSpec(java.lang.String, byte[])"], ["org.bouncycastle.jce.spec.GOST3410ParameterSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String, java.lang.String, java.lang.String)", "public org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String, java.lang.String, java.lang.String)"], ["org.bouncycastle.jce.spec.GOST3410ParameterSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String, java.lang.String)", "public org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String, java.lang.String)"], ["org.bouncycastle.jce.spec.GOST3410ParameterSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String)", "public org.bouncycastle.jce.spec.GOST3410ParameterSpec(java.lang.String)"], ["org.bouncycastle.jce.spec.GOST3410ParameterSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec(org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec)", "public org.bouncycastle.jce.spec.GOST3410ParameterSpec(org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec)"], ["java.lang.String", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.getPublicKeyParamSetOID()", "public java.lang.String getPublicKeyParamSetOID()"], ["org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.getPublicKeyParameters()", "public org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec getPublicKeyParameters()"], ["java.lang.String", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.getDigestParamSetOID()", "public java.lang.String getDigestParamSetOID()"], ["java.lang.String", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.getEncryptionParamSetOID()", "public java.lang.String getEncryptionParamSetOID()"], ["boolean", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.hashCode()", "public int hashCode()"], ["org.bouncycastle.jce.spec.GOST3410ParameterSpec", "org.bouncycastle.jce.spec.GOST3410ParameterSpec.fromPublicKeyAlg(org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters)", "public static org.bouncycastle.jce.spec.GOST3410ParameterSpec fromPublicKeyAlg(org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters)"], ["org.bouncycastle.jce.spec.GOST3410PrivateKeySpec", "org.bouncycastle.jce.spec.GOST3410PrivateKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.GOST3410PrivateKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PrivateKeySpec.getX()", "public java.math.BigInteger getX()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PrivateKeySpec.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PrivateKeySpec.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PrivateKeySpec.getA()", "public java.math.BigInteger getA()"], ["org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec.getA()", "public java.math.BigInteger getA()"], ["boolean", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.jce.spec.GOST3410PublicKeyParameterSetSpec.hashCode()", "public int hashCode()"], ["org.bouncycastle.jce.spec.GOST3410PublicKeySpec", "org.bouncycastle.jce.spec.GOST3410PublicKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.jce.spec.GOST3410PublicKeySpec(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeySpec.getY()", "public java.math.BigInteger getY()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeySpec.getP()", "public java.math.BigInteger getP()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeySpec.getQ()", "public java.math.BigInteger getQ()"], ["java.math.BigInteger", "org.bouncycastle.jce.spec.GOST3410PublicKeySpec.getA()", "public java.math.BigInteger getA()"], ["org.bouncycastle.jce.spec.IEKeySpec", "org.bouncycastle.jce.spec.IEKeySpec(java.security.PrivateKey, java.security.PublicKey)", "public org.bouncycastle.jce.spec.IEKeySpec(java.security.PrivateKey, java.security.PublicKey)"], ["java.security.PublicKey", "org.bouncycastle.jce.spec.IEKeySpec.getPublic()", "public java.security.PublicKey getPublic()"], ["java.security.PrivateKey", "org.bouncycastle.jce.spec.IEKeySpec.getPrivate()", "public java.security.PrivateKey getPrivate()"], ["java.lang.String", "org.bouncycastle.jce.spec.IEKeySpec.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.spec.IEKeySpec.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.spec.IEKeySpec.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.IESParameterSpec", "org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int)", "public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int)"], ["org.bouncycastle.jce.spec.IESParameterSpec", "org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int)", "public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int)"], ["org.bouncycastle.jce.spec.IESParameterSpec", "org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int, byte[])", "public org.bouncycastle.jce.spec.IESParameterSpec(byte[], byte[], int, int, byte[])"], ["byte[]", "org.bouncycastle.jce.spec.IESParameterSpec.getDerivationV()", "public byte[] getDerivationV()"], ["byte[]", "org.bouncycastle.jce.spec.IESParameterSpec.getEncodingV()", "public byte[] getEncodingV()"], ["int", "org.bouncycastle.jce.spec.IESParameterSpec.getMacKeySize()", "public int getMacKeySize()"], ["int", "org.bouncycastle.jce.spec.IESParameterSpec.getCipherKeySize()", "public int getCipherKeySize()"], ["byte[]", "org.bouncycastle.jce.spec.IESParameterSpec.getNonce()", "public byte[] getNonce()"], ["org.bouncycastle.jce.spec.MQVPrivateKeySpec", "org.bouncycastle.jce.spec.MQVPrivateKeySpec(java.security.PrivateKey, java.security.PrivateKey)", "public org.bouncycastle.jce.spec.MQVPrivateKeySpec(java.security.PrivateKey, java.security.PrivateKey)"], ["org.bouncycastle.jce.spec.MQVPrivateKeySpec", "org.bouncycastle.jce.spec.MQVPrivateKeySpec(java.security.PrivateKey, java.security.PrivateKey, java.security.PublicKey)", "public org.bouncycastle.jce.spec.MQVPrivateKeySpec(java.security.PrivateKey, java.security.PrivateKey, java.security.PublicKey)"], ["java.security.PrivateKey", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getStaticPrivateKey()", "public java.security.PrivateKey getStaticPrivateKey()"], ["java.security.PrivateKey", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getEphemeralPrivateKey()", "public java.security.PrivateKey getEphemeralPrivateKey()"], ["java.security.PublicKey", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getEphemeralPublicKey()", "public java.security.PublicKey getEphemeralPublicKey()"], ["java.lang.String", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.spec.MQVPrivateKeySpec.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.MQVPublicKeySpec", "org.bouncycastle.jce.spec.MQVPublicKeySpec(java.security.PublicKey, java.security.PublicKey)", "public org.bouncycastle.jce.spec.MQVPublicKeySpec(java.security.PublicKey, java.security.PublicKey)"], ["java.security.PublicKey", "org.bouncycastle.jce.spec.MQVPublicKeySpec.getStaticKey()", "public java.security.PublicKey getStaticKey()"], ["java.security.PublicKey", "org.bouncycastle.jce.spec.MQVPublicKeySpec.getEphemeralKey()", "public java.security.PublicKey getEphemeralKey()"], ["java.lang.String", "org.bouncycastle.jce.spec.MQVPublicKeySpec.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.jce.spec.MQVPublicKeySpec.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.jce.spec.MQVPublicKeySpec.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.jce.spec.RepeatedSecretKeySpec", "org.bouncycastle.jce.spec.RepeatedSecretKeySpec(java.lang.String)", "public org.bouncycastle.jce.spec.RepeatedSecretKeySpec(java.lang.String)"], ["org.bouncycastle.math.ec.AbstractECMultiplier", "org.bouncycastle.math.ec.AbstractECMultiplier()", "public org.bouncycastle.math.ec.AbstractECMultiplier()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.AbstractECMultiplier.multiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECPoint multiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.math.ec.DoubleAddMultiplier", "org.bouncycastle.math.ec.DoubleAddMultiplier()", "public org.bouncycastle.math.ec.DoubleAddMultiplier()"], ["org.bouncycastle.math.ec.ECAlgorithms", "org.bouncycastle.math.ec.ECAlgorithms()", "public org.bouncycastle.math.ec.ECAlgorithms()"], ["boolean", "org.bouncycastle.math.ec.ECAlgorithms.isF2mCurve(org.bouncycastle.math.ec.ECCurve)", "public static boolean isF2mCurve(org.bouncycastle.math.ec.ECCurve)"], ["boolean", "org.bouncycastle.math.ec.ECAlgorithms.isFpCurve(org.bouncycastle.math.ec.ECCurve)", "public static boolean isFpCurve(org.bouncycastle.math.ec.ECCurve)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.sumOfMultiplies(org.bouncycastle.math.ec.ECPoint[], java.math.BigInteger[])", "public static org.bouncycastle.math.ec.ECPoint sumOfMultiplies(org.bouncycastle.math.ec.ECPoint[], java.math.BigInteger[])"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public static org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.shamirsTrick(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public static org.bouncycastle.math.ec.ECPoint shamirsTrick(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.importPoint(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint)", "public static org.bouncycastle.math.ec.ECPoint importPoint(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint)"], ["void", "org.bouncycastle.math.ec.ECAlgorithms.montgomeryTrick(org.bouncycastle.math.ec.ECFieldElement[], int, int)", "public static void montgomeryTrick(org.bouncycastle.math.ec.ECFieldElement[], int, int)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.referenceMultiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)", "public static org.bouncycastle.math.ec.ECPoint referenceMultiply(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECAlgorithms.validatePoint(org.bouncycastle.math.ec.ECPoint)", "public static org.bouncycastle.math.ec.ECPoint validatePoint(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECCurve$Config", "org.bouncycastle.math.ec.ECCurve$Config.setCoordinateSystem(int)", "public org.bouncycastle.math.ec.ECCurve$Config setCoordinateSystem(int)"], ["org.bouncycastle.math.ec.ECCurve$Config", "org.bouncycastle.math.ec.ECCurve$Config.setEndomorphism(org.bouncycastle.math.ec.endo.ECEndomorphism)", "public org.bouncycastle.math.ec.ECCurve$Config setEndomorphism(org.bouncycastle.math.ec.endo.ECEndomorphism)"], ["org.bouncycastle.math.ec.ECCurve$Config", "org.bouncycastle.math.ec.ECCurve$Config.setMultiplier(org.bouncycastle.math.ec.ECMultiplier)", "public org.bouncycastle.math.ec.ECCurve$Config setMultiplier(org.bouncycastle.math.ec.ECMultiplier)"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.math.ec.ECCurve$Config.create()", "public org.bouncycastle.math.ec.ECCurve create()"], ["org.bouncycastle.math.ec.ECCurve$F2m", "org.bouncycastle.math.ec.ECCurve$F2m(int, int, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$F2m(int, int, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECCurve$F2m", "org.bouncycastle.math.ec.ECCurve$F2m(int, int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$F2m(int, int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECCurve$F2m", "org.bouncycastle.math.ec.ECCurve$F2m(int, int, int, int, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$F2m(int, int, int, int, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECCurve$F2m", "org.bouncycastle.math.ec.ECCurve$F2m(int, int, int, int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$F2m(int, int, int, int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["boolean", "org.bouncycastle.math.ec.ECCurve$F2m.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["int", "org.bouncycastle.math.ec.ECCurve$F2m.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECCurve$F2m.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve$F2m.createPoint(java.math.BigInteger, java.math.BigInteger, boolean)", "public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve$F2m.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["boolean", "org.bouncycastle.math.ec.ECCurve$F2m.isKoblitz()", "public boolean isKoblitz()"], ["int", "org.bouncycastle.math.ec.ECCurve$F2m.getM()", "public int getM()"], ["boolean", "org.bouncycastle.math.ec.ECCurve$F2m.isTrinomial()", "public boolean isTrinomial()"], ["int", "org.bouncycastle.math.ec.ECCurve$F2m.getK1()", "public int getK1()"], ["int", "org.bouncycastle.math.ec.ECCurve$F2m.getK2()", "public int getK2()"], ["int", "org.bouncycastle.math.ec.ECCurve$F2m.getK3()", "public int getK3()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECCurve$F2m.getN()", "public java.math.BigInteger getN()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECCurve$F2m.getH()", "public java.math.BigInteger getH()"], ["org.bouncycastle.math.ec.ECCurve$Fp", "org.bouncycastle.math.ec.ECCurve$Fp(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$Fp(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECCurve$Fp", "org.bouncycastle.math.ec.ECCurve$Fp(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECCurve$Fp(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["boolean", "org.bouncycastle.math.ec.ECCurve$Fp.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECCurve$Fp.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.ECCurve$Fp.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECCurve$Fp.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve$Fp.importPoint(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint importPoint(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve$Fp.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["int[]", "org.bouncycastle.math.ec.ECCurve.getAllCoordinateSystems()", "public static int[] getAllCoordinateSystems()"], ["org.bouncycastle.math.ec.ECCurve$Config", "org.bouncycastle.math.ec.ECCurve.configure()", "public org.bouncycastle.math.ec.ECCurve$Config configure()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.validatePoint(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECPoint validatePoint(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.validatePoint(java.math.BigInteger, java.math.BigInteger, boolean)", "public org.bouncycastle.math.ec.ECPoint validatePoint(java.math.BigInteger, java.math.BigInteger, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.createPoint(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.createPoint(java.math.BigInteger, java.math.BigInteger, boolean)", "public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean)"], ["boolean", "org.bouncycastle.math.ec.ECCurve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["org.bouncycastle.math.ec.PreCompInfo", "org.bouncycastle.math.ec.ECCurve.getPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String)", "public org.bouncycastle.math.ec.PreCompInfo getPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String)"], ["void", "org.bouncycastle.math.ec.ECCurve.setPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String, org.bouncycastle.math.ec.PreCompInfo)", "public void setPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String, org.bouncycastle.math.ec.PreCompInfo)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.importPoint(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint importPoint(org.bouncycastle.math.ec.ECPoint)"], ["void", "org.bouncycastle.math.ec.ECCurve.normalizeAll(org.bouncycastle.math.ec.ECPoint[])", "public void normalizeAll(org.bouncycastle.math.ec.ECPoint[])"], ["org.bouncycastle.math.field.FiniteField", "org.bouncycastle.math.ec.ECCurve.getField()", "public org.bouncycastle.math.field.FiniteField getField()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECCurve.getA()", "public org.bouncycastle.math.ec.ECFieldElement getA()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECCurve.getB()", "public org.bouncycastle.math.ec.ECFieldElement getB()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECCurve.getOrder()", "public java.math.BigInteger getOrder()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECCurve.getCofactor()", "public java.math.BigInteger getCofactor()"], ["int", "org.bouncycastle.math.ec.ECCurve.getCoordinateSystem()", "public int getCoordinateSystem()"], ["org.bouncycastle.math.ec.endo.ECEndomorphism", "org.bouncycastle.math.ec.ECCurve.getEndomorphism()", "public org.bouncycastle.math.ec.endo.ECEndomorphism getEndomorphism()"], ["synchronized", "org.bouncycastle.math.ec.ECCurve.org.bouncycastle.math.ec.ECMultiplier getMultiplier()", "public synchronized org.bouncycastle.math.ec.ECMultiplier getMultiplier()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECCurve.decodePoint(byte[])", "public org.bouncycastle.math.ec.ECPoint decodePoint(byte[])"], ["boolean", "org.bouncycastle.math.ec.ECCurve.equals(org.bouncycastle.math.ec.ECCurve)", "public boolean equals(org.bouncycastle.math.ec.ECCurve)"], ["boolean", "org.bouncycastle.math.ec.ECCurve.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.ECCurve.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.ECFieldElement$F2m", "org.bouncycastle.math.ec.ECFieldElement$F2m(int, int, int, int, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement$F2m(int, int, int, int, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECFieldElement$F2m", "org.bouncycastle.math.ec.ECFieldElement$F2m(int, int, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement$F2m(int, int, java.math.BigInteger)"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.bitLength()", "public int bitLength()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement$F2m.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement$F2m.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement$F2m.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECFieldElement$F2m.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.ECFieldElement$F2m.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getFieldSize()", "public int getFieldSize()"], ["void", "org.bouncycastle.math.ec.ECFieldElement$F2m.checkFieldElements(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public static void checkFieldElements(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$F2m.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getRepresentation()", "public int getRepresentation()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getM()", "public int getM()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getK1()", "public int getK1()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getK2()", "public int getK2()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.getK3()", "public int getK3()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement$F2m.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.ECFieldElement$F2m.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.ECFieldElement$Fp", "org.bouncycastle.math.ec.ECFieldElement$Fp(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement$Fp(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECFieldElement$Fp.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.ECFieldElement$Fp.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.ECFieldElement$Fp.getFieldSize()", "public int getFieldSize()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.ECFieldElement$Fp.getQ()", "public java.math.BigInteger getQ()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement$Fp.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement$Fp.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.ECFieldElement$Fp.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement()", "public org.bouncycastle.math.ec.ECFieldElement()"], ["int", "org.bouncycastle.math.ec.ECFieldElement.bitLength()", "public int bitLength()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement.isZero()", "public boolean isZero()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement.multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement.multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement.squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECFieldElement.squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["boolean", "org.bouncycastle.math.ec.ECFieldElement.testBitZero()", "public boolean testBitZero()"], ["java.lang.String", "org.bouncycastle.math.ec.ECFieldElement.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.math.ec.ECFieldElement.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$AbstractFp.subtract(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint subtract(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.ECPoint$F2m(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint$F2m(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.ECPoint$F2m(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.ECPoint$F2m(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint$F2m.getYCoord()", "public org.bouncycastle.math.ec.ECFieldElement getYCoord()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.scaleX(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint scaleX(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.scaleY(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint scaleY(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.ECPoint$F2m.addSimple(org.bouncycastle.math.ec.ECPoint$F2m)", "public org.bouncycastle.math.ec.ECPoint$F2m addSimple(org.bouncycastle.math.ec.ECPoint$F2m)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.subtract(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint subtract(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.ECPoint$F2m.subtractSimple(org.bouncycastle.math.ec.ECPoint$F2m)", "public org.bouncycastle.math.ec.ECPoint$F2m subtractSimple(org.bouncycastle.math.ec.ECPoint$F2m)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.ECPoint$F2m.tau()", "public org.bouncycastle.math.ec.ECPoint$F2m tau()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$F2m.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.ECPoint$Fp", "org.bouncycastle.math.ec.ECPoint$Fp(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint$Fp(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint$Fp", "org.bouncycastle.math.ec.ECPoint$Fp(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.ECPoint$Fp(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint$Fp.getZCoord(int)", "public org.bouncycastle.math.ec.ECFieldElement getZCoord(int)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.timesPow2(int)", "public org.bouncycastle.math.ec.ECPoint timesPow2(int)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint$Fp.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.getDetachedPoint()", "public final org.bouncycastle.math.ec.ECPoint getDetachedPoint()"], ["org.bouncycastle.math.ec.ECCurve", "org.bouncycastle.math.ec.ECPoint.getCurve()", "public org.bouncycastle.math.ec.ECCurve getCurve()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getX()", "public org.bouncycastle.math.ec.ECFieldElement getX()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getY()", "public org.bouncycastle.math.ec.ECFieldElement getY()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getAffineXCoord()", "public org.bouncycastle.math.ec.ECFieldElement getAffineXCoord()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getAffineYCoord()", "public org.bouncycastle.math.ec.ECFieldElement getAffineYCoord()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getXCoord()", "public org.bouncycastle.math.ec.ECFieldElement getXCoord()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getYCoord()", "public org.bouncycastle.math.ec.ECFieldElement getYCoord()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.ECPoint.getZCoord(int)", "public org.bouncycastle.math.ec.ECFieldElement getZCoord(int)"], ["org.bouncycastle.math.ec.ECFieldElement[]", "org.bouncycastle.math.ec.ECPoint.getZCoords()", "public org.bouncycastle.math.ec.ECFieldElement[] getZCoords()"], ["boolean", "org.bouncycastle.math.ec.ECPoint.isNormalized()", "public boolean isNormalized()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.normalize()", "public org.bouncycastle.math.ec.ECPoint normalize()"], ["boolean", "org.bouncycastle.math.ec.ECPoint.isInfinity()", "public boolean isInfinity()"], ["boolean", "org.bouncycastle.math.ec.ECPoint.isCompressed()", "public boolean isCompressed()"], ["boolean", "org.bouncycastle.math.ec.ECPoint.isValid()", "public boolean isValid()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.scaleX(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint scaleX(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.scaleY(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECPoint scaleY(org.bouncycastle.math.ec.ECFieldElement)"], ["boolean", "org.bouncycastle.math.ec.ECPoint.equals(org.bouncycastle.math.ec.ECPoint)", "public boolean equals(org.bouncycastle.math.ec.ECPoint)"], ["boolean", "org.bouncycastle.math.ec.ECPoint.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.ECPoint.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.math.ec.ECPoint.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.math.ec.ECPoint.getEncoded()", "public byte[] getEncoded()"], ["byte[]", "org.bouncycastle.math.ec.ECPoint.getEncoded(boolean)", "public byte[] getEncoded(boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.timesPow2(int)", "public org.bouncycastle.math.ec.ECPoint timesPow2(int)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ECPoint.multiply(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)"], ["org.bouncycastle.math.ec.FixedPointCombMultiplier", "org.bouncycastle.math.ec.FixedPointCombMultiplier()", "public org.bouncycastle.math.ec.FixedPointCombMultiplier()"], ["org.bouncycastle.math.ec.FixedPointPreCompInfo", "org.bouncycastle.math.ec.FixedPointPreCompInfo()", "public org.bouncycastle.math.ec.FixedPointPreCompInfo()"], ["org.bouncycastle.math.ec.ECPoint[]", "org.bouncycastle.math.ec.FixedPointPreCompInfo.getPreComp()", "public org.bouncycastle.math.ec.ECPoint[] getPreComp()"], ["void", "org.bouncycastle.math.ec.FixedPointPreCompInfo.setPreComp(org.bouncycastle.math.ec.ECPoint[])", "public void setPreComp(org.bouncycastle.math.ec.ECPoint[])"], ["int", "org.bouncycastle.math.ec.FixedPointPreCompInfo.getWidth()", "public int getWidth()"], ["void", "org.bouncycastle.math.ec.FixedPointPreCompInfo.setWidth(int)", "public void setWidth(int)"], ["org.bouncycastle.math.ec.FixedPointUtil", "org.bouncycastle.math.ec.FixedPointUtil()", "public org.bouncycastle.math.ec.FixedPointUtil()"], ["int", "org.bouncycastle.math.ec.FixedPointUtil.getCombSize(org.bouncycastle.math.ec.ECCurve)", "public static int getCombSize(org.bouncycastle.math.ec.ECCurve)"], ["org.bouncycastle.math.ec.FixedPointPreCompInfo", "org.bouncycastle.math.ec.FixedPointUtil.getFixedPointPreCompInfo(org.bouncycastle.math.ec.PreCompInfo)", "public static org.bouncycastle.math.ec.FixedPointPreCompInfo getFixedPointPreCompInfo(org.bouncycastle.math.ec.PreCompInfo)"], ["org.bouncycastle.math.ec.FixedPointPreCompInfo", "org.bouncycastle.math.ec.FixedPointUtil.precompute(org.bouncycastle.math.ec.ECPoint, int)", "public static org.bouncycastle.math.ec.FixedPointPreCompInfo precompute(org.bouncycastle.math.ec.ECPoint, int)"], ["org.bouncycastle.math.ec.GLVMultiplier", "org.bouncycastle.math.ec.GLVMultiplier(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.endo.GLVEndomorphism)", "public org.bouncycastle.math.ec.GLVMultiplier(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.endo.GLVEndomorphism)"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray(int)", "public org.bouncycastle.math.ec.LongArray(int)"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray(long[])", "public org.bouncycastle.math.ec.LongArray(long[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray(long[], int, int)", "public org.bouncycastle.math.ec.LongArray(long[], int, int)"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray(java.math.BigInteger)", "public org.bouncycastle.math.ec.LongArray(java.math.BigInteger)"], ["boolean", "org.bouncycastle.math.ec.LongArray.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.LongArray.isZero()", "public boolean isZero()"], ["int", "org.bouncycastle.math.ec.LongArray.getUsedLength()", "public int getUsedLength()"], ["int", "org.bouncycastle.math.ec.LongArray.getUsedLengthFrom(int)", "public int getUsedLengthFrom(int)"], ["int", "org.bouncycastle.math.ec.LongArray.degree()", "public int degree()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.LongArray.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.addOne()", "public org.bouncycastle.math.ec.LongArray addOne()"], ["void", "org.bouncycastle.math.ec.LongArray.addShiftedByWords(org.bouncycastle.math.ec.LongArray, int)", "public void addShiftedByWords(org.bouncycastle.math.ec.LongArray, int)"], ["int", "org.bouncycastle.math.ec.LongArray.getLength()", "public int getLength()"], ["boolean", "org.bouncycastle.math.ec.LongArray.testBitZero()", "public boolean testBitZero()"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modMultiplyLD(org.bouncycastle.math.ec.LongArray, int, int[])", "public org.bouncycastle.math.ec.LongArray modMultiplyLD(org.bouncycastle.math.ec.LongArray, int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modMultiply(org.bouncycastle.math.ec.LongArray, int, int[])", "public org.bouncycastle.math.ec.LongArray modMultiply(org.bouncycastle.math.ec.LongArray, int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modMultiplyAlt(org.bouncycastle.math.ec.LongArray, int, int[])", "public org.bouncycastle.math.ec.LongArray modMultiplyAlt(org.bouncycastle.math.ec.LongArray, int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modReduce(int, int[])", "public org.bouncycastle.math.ec.LongArray modReduce(int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.multiply(org.bouncycastle.math.ec.LongArray, int, int[])", "public org.bouncycastle.math.ec.LongArray multiply(org.bouncycastle.math.ec.LongArray, int, int[])"], ["void", "org.bouncycastle.math.ec.LongArray.reduce(int, int[])", "public void reduce(int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modSquare(int, int[])", "public org.bouncycastle.math.ec.LongArray modSquare(int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modSquareN(int, int, int[])", "public org.bouncycastle.math.ec.LongArray modSquareN(int, int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.square(int, int[])", "public org.bouncycastle.math.ec.LongArray square(int, int[])"], ["org.bouncycastle.math.ec.LongArray", "org.bouncycastle.math.ec.LongArray.modInverse(int, int[])", "public org.bouncycastle.math.ec.LongArray modInverse(int, int[])"], ["boolean", "org.bouncycastle.math.ec.LongArray.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.LongArray.hashCode()", "public int hashCode()"], ["java.lang.Object", "org.bouncycastle.math.ec.LongArray.clone()", "public java.lang.Object clone()"], ["java.lang.String", "org.bouncycastle.math.ec.LongArray.toString()", "public java.lang.String toString()"], ["org.bouncycastle.math.ec.MixedNafR2LMultiplier", "org.bouncycastle.math.ec.MixedNafR2LMultiplier()", "public org.bouncycastle.math.ec.MixedNafR2LMultiplier()"], ["org.bouncycastle.math.ec.MixedNafR2LMultiplier", "org.bouncycastle.math.ec.MixedNafR2LMultiplier(int, int)", "public org.bouncycastle.math.ec.MixedNafR2LMultiplier(int, int)"], ["org.bouncycastle.math.ec.MontgomeryLadderMultiplier", "org.bouncycastle.math.ec.MontgomeryLadderMultiplier()", "public org.bouncycastle.math.ec.MontgomeryLadderMultiplier()"], ["org.bouncycastle.math.ec.NafL2RMultiplier", "org.bouncycastle.math.ec.NafL2RMultiplier()", "public org.bouncycastle.math.ec.NafL2RMultiplier()"], ["org.bouncycastle.math.ec.NafR2LMultiplier", "org.bouncycastle.math.ec.NafR2LMultiplier()", "public org.bouncycastle.math.ec.NafR2LMultiplier()"], ["org.bouncycastle.math.ec.ReferenceMultiplier", "org.bouncycastle.math.ec.ReferenceMultiplier()", "public org.bouncycastle.math.ec.ReferenceMultiplier()"], ["org.bouncycastle.math.ec.ScaleXPointMap", "org.bouncycastle.math.ec.ScaleXPointMap(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ScaleXPointMap(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ScaleXPointMap.map(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint map(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ScaleYPointMap", "org.bouncycastle.math.ec.ScaleYPointMap(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ScaleYPointMap(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.ScaleYPointMap.map(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint map(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.getInstance(java.math.BigInteger, int)", "public static org.bouncycastle.math.ec.SimpleBigDecimal getInstance(java.math.BigInteger, int)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal(java.math.BigInteger, int)", "public org.bouncycastle.math.ec.SimpleBigDecimal(java.math.BigInteger, int)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.adjustScale(int)", "public org.bouncycastle.math.ec.SimpleBigDecimal adjustScale(int)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.add(org.bouncycastle.math.ec.SimpleBigDecimal)", "public org.bouncycastle.math.ec.SimpleBigDecimal add(org.bouncycastle.math.ec.SimpleBigDecimal)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.add(java.math.BigInteger)", "public org.bouncycastle.math.ec.SimpleBigDecimal add(java.math.BigInteger)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.negate()", "public org.bouncycastle.math.ec.SimpleBigDecimal negate()"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.subtract(org.bouncycastle.math.ec.SimpleBigDecimal)", "public org.bouncycastle.math.ec.SimpleBigDecimal subtract(org.bouncycastle.math.ec.SimpleBigDecimal)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.subtract(java.math.BigInteger)", "public org.bouncycastle.math.ec.SimpleBigDecimal subtract(java.math.BigInteger)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.multiply(org.bouncycastle.math.ec.SimpleBigDecimal)", "public org.bouncycastle.math.ec.SimpleBigDecimal multiply(org.bouncycastle.math.ec.SimpleBigDecimal)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.multiply(java.math.BigInteger)", "public org.bouncycastle.math.ec.SimpleBigDecimal multiply(java.math.BigInteger)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.divide(org.bouncycastle.math.ec.SimpleBigDecimal)", "public org.bouncycastle.math.ec.SimpleBigDecimal divide(org.bouncycastle.math.ec.SimpleBigDecimal)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.divide(java.math.BigInteger)", "public org.bouncycastle.math.ec.SimpleBigDecimal divide(java.math.BigInteger)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.SimpleBigDecimal.shiftLeft(int)", "public org.bouncycastle.math.ec.SimpleBigDecimal shiftLeft(int)"], ["int", "org.bouncycastle.math.ec.SimpleBigDecimal.compareTo(org.bouncycastle.math.ec.SimpleBigDecimal)", "public int compareTo(org.bouncycastle.math.ec.SimpleBigDecimal)"], ["int", "org.bouncycastle.math.ec.SimpleBigDecimal.compareTo(java.math.BigInteger)", "public int compareTo(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.SimpleBigDecimal.floor()", "public java.math.BigInteger floor()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.SimpleBigDecimal.round()", "public java.math.BigInteger round()"], ["int", "org.bouncycastle.math.ec.SimpleBigDecimal.intValue()", "public int intValue()"], ["long", "org.bouncycastle.math.ec.SimpleBigDecimal.longValue()", "public long longValue()"], ["int", "org.bouncycastle.math.ec.SimpleBigDecimal.getScale()", "public int getScale()"], ["java.lang.String", "org.bouncycastle.math.ec.SimpleBigDecimal.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.math.ec.SimpleBigDecimal.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.SimpleBigDecimal.hashCode()", "public int hashCode()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.Tnaf.norm(byte, org.bouncycastle.math.ec.ZTauElement)", "public static java.math.BigInteger norm(byte, org.bouncycastle.math.ec.ZTauElement)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.Tnaf.norm(byte, org.bouncycastle.math.ec.SimpleBigDecimal, org.bouncycastle.math.ec.SimpleBigDecimal)", "public static org.bouncycastle.math.ec.SimpleBigDecimal norm(byte, org.bouncycastle.math.ec.SimpleBigDecimal, org.bouncycastle.math.ec.SimpleBigDecimal)"], ["org.bouncycastle.math.ec.ZTauElement", "org.bouncycastle.math.ec.Tnaf.round(org.bouncycastle.math.ec.SimpleBigDecimal, org.bouncycastle.math.ec.SimpleBigDecimal, byte)", "public static org.bouncycastle.math.ec.ZTauElement round(org.bouncycastle.math.ec.SimpleBigDecimal, org.bouncycastle.math.ec.SimpleBigDecimal, byte)"], ["org.bouncycastle.math.ec.SimpleBigDecimal", "org.bouncycastle.math.ec.Tnaf.approximateDivisionByN(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, byte, int, int)", "public static org.bouncycastle.math.ec.SimpleBigDecimal approximateDivisionByN(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, byte, int, int)"], ["byte[]", "org.bouncycastle.math.ec.Tnaf.tauAdicNaf(byte, org.bouncycastle.math.ec.ZTauElement)", "public static byte[] tauAdicNaf(byte, org.bouncycastle.math.ec.ZTauElement)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.Tnaf.tau(org.bouncycastle.math.ec.ECPoint$F2m)", "public static org.bouncycastle.math.ec.ECPoint$F2m tau(org.bouncycastle.math.ec.ECPoint$F2m)"], ["byte", "org.bouncycastle.math.ec.Tnaf.getMu(org.bouncycastle.math.ec.ECCurve$F2m)", "public static byte getMu(org.bouncycastle.math.ec.ECCurve$F2m)"], ["java.math.BigInteger[]", "org.bouncycastle.math.ec.Tnaf.getLucas(byte, int, boolean)", "public static java.math.BigInteger[] getLucas(byte, int, boolean)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.Tnaf.getTw(byte, int)", "public static java.math.BigInteger getTw(byte, int)"], ["java.math.BigInteger[]", "org.bouncycastle.math.ec.Tnaf.getSi(org.bouncycastle.math.ec.ECCurve$F2m)", "public static java.math.BigInteger[] getSi(org.bouncycastle.math.ec.ECCurve$F2m)"], ["org.bouncycastle.math.ec.ZTauElement", "org.bouncycastle.math.ec.Tnaf.partModReduction(java.math.BigInteger, int, byte, java.math.BigInteger[], byte, byte)", "public static org.bouncycastle.math.ec.ZTauElement partModReduction(java.math.BigInteger, int, byte, java.math.BigInteger[], byte, byte)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.Tnaf.multiplyRTnaf(org.bouncycastle.math.ec.ECPoint$F2m, java.math.BigInteger)", "public static org.bouncycastle.math.ec.ECPoint$F2m multiplyRTnaf(org.bouncycastle.math.ec.ECPoint$F2m, java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.Tnaf.multiplyTnaf(org.bouncycastle.math.ec.ECPoint$F2m, org.bouncycastle.math.ec.ZTauElement)", "public static org.bouncycastle.math.ec.ECPoint$F2m multiplyTnaf(org.bouncycastle.math.ec.ECPoint$F2m, org.bouncycastle.math.ec.ZTauElement)"], ["org.bouncycastle.math.ec.ECPoint$F2m", "org.bouncycastle.math.ec.Tnaf.multiplyFromTnaf(org.bouncycastle.math.ec.ECPoint$F2m, byte[])", "public static org.bouncycastle.math.ec.ECPoint$F2m multiplyFromTnaf(org.bouncycastle.math.ec.ECPoint$F2m, byte[])"], ["byte[]", "org.bouncycastle.math.ec.Tnaf.tauAdicWNaf(byte, org.bouncycastle.math.ec.ZTauElement, byte, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.math.ec.ZTauElement[])", "public static byte[] tauAdicWNaf(byte, org.bouncycastle.math.ec.ZTauElement, byte, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.math.ec.ZTauElement[])"], ["org.bouncycastle.math.ec.ECPoint$F2m[]", "org.bouncycastle.math.ec.Tnaf.getPreComp(org.bouncycastle.math.ec.ECPoint$F2m, byte)", "public static org.bouncycastle.math.ec.ECPoint$F2m[] getPreComp(org.bouncycastle.math.ec.ECPoint$F2m, byte)"], ["org.bouncycastle.math.ec.WNafL2RMultiplier", "org.bouncycastle.math.ec.WNafL2RMultiplier()", "public org.bouncycastle.math.ec.WNafL2RMultiplier()"], ["org.bouncycastle.math.ec.WNafPreCompInfo", "org.bouncycastle.math.ec.WNafPreCompInfo()", "public org.bouncycastle.math.ec.WNafPreCompInfo()"], ["org.bouncycastle.math.ec.ECPoint[]", "org.bouncycastle.math.ec.WNafPreCompInfo.getPreComp()", "public org.bouncycastle.math.ec.ECPoint[] getPreComp()"], ["void", "org.bouncycastle.math.ec.WNafPreCompInfo.setPreComp(org.bouncycastle.math.ec.ECPoint[])", "public void setPreComp(org.bouncycastle.math.ec.ECPoint[])"], ["org.bouncycastle.math.ec.ECPoint[]", "org.bouncycastle.math.ec.WNafPreCompInfo.getPreCompNeg()", "public org.bouncycastle.math.ec.ECPoint[] getPreCompNeg()"], ["void", "org.bouncycastle.math.ec.WNafPreCompInfo.setPreCompNeg(org.bouncycastle.math.ec.ECPoint[])", "public void setPreCompNeg(org.bouncycastle.math.ec.ECPoint[])"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.WNafPreCompInfo.getTwice()", "public org.bouncycastle.math.ec.ECPoint getTwice()"], ["void", "org.bouncycastle.math.ec.WNafPreCompInfo.setTwice(org.bouncycastle.math.ec.ECPoint)", "public void setTwice(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.WNafUtil", "org.bouncycastle.math.ec.WNafUtil()", "public org.bouncycastle.math.ec.WNafUtil()"], ["int[]", "org.bouncycastle.math.ec.WNafUtil.generateCompactNaf(java.math.BigInteger)", "public static int[] generateCompactNaf(java.math.BigInteger)"], ["int[]", "org.bouncycastle.math.ec.WNafUtil.generateCompactWindowNaf(int, java.math.BigInteger)", "public static int[] generateCompactWindowNaf(int, java.math.BigInteger)"], ["byte[]", "org.bouncycastle.math.ec.WNafUtil.generateJSF(java.math.BigInteger, java.math.BigInteger)", "public static byte[] generateJSF(java.math.BigInteger, java.math.BigInteger)"], ["byte[]", "org.bouncycastle.math.ec.WNafUtil.generateNaf(java.math.BigInteger)", "public static byte[] generateNaf(java.math.BigInteger)"], ["byte[]", "org.bouncycastle.math.ec.WNafUtil.generateWindowNaf(int, java.math.BigInteger)", "public static byte[] generateWindowNaf(int, java.math.BigInteger)"], ["int", "org.bouncycastle.math.ec.WNafUtil.getNafWeight(java.math.BigInteger)", "public static int getNafWeight(java.math.BigInteger)"], ["org.bouncycastle.math.ec.WNafPreCompInfo", "org.bouncycastle.math.ec.WNafUtil.getWNafPreCompInfo(org.bouncycastle.math.ec.ECPoint)", "public static org.bouncycastle.math.ec.WNafPreCompInfo getWNafPreCompInfo(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.WNafPreCompInfo", "org.bouncycastle.math.ec.WNafUtil.getWNafPreCompInfo(org.bouncycastle.math.ec.PreCompInfo)", "public static org.bouncycastle.math.ec.WNafPreCompInfo getWNafPreCompInfo(org.bouncycastle.math.ec.PreCompInfo)"], ["int", "org.bouncycastle.math.ec.WNafUtil.getWindowSize(int)", "public static int getWindowSize(int)"], ["int", "org.bouncycastle.math.ec.WNafUtil.getWindowSize(int, int[])", "public static int getWindowSize(int, int[])"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.WNafUtil.mapPointWithPrecomp(org.bouncycastle.math.ec.ECPoint, int, boolean, org.bouncycastle.math.ec.ECPointMap)", "public static org.bouncycastle.math.ec.ECPoint mapPointWithPrecomp(org.bouncycastle.math.ec.ECPoint, int, boolean, org.bouncycastle.math.ec.ECPointMap)"], ["org.bouncycastle.math.ec.WNafPreCompInfo", "org.bouncycastle.math.ec.WNafUtil.precompute(org.bouncycastle.math.ec.ECPoint, int, boolean)", "public static org.bouncycastle.math.ec.WNafPreCompInfo precompute(org.bouncycastle.math.ec.ECPoint, int, boolean)"], ["org.bouncycastle.math.ec.WTauNafMultiplier", "org.bouncycastle.math.ec.WTauNafMultiplier()", "public org.bouncycastle.math.ec.WTauNafMultiplier()"], ["org.bouncycastle.math.ec.WTauNafPreCompInfo", "org.bouncycastle.math.ec.WTauNafPreCompInfo()", "public org.bouncycastle.math.ec.WTauNafPreCompInfo()"], ["org.bouncycastle.math.ec.ECPoint$F2m[]", "org.bouncycastle.math.ec.WTauNafPreCompInfo.getPreComp()", "public org.bouncycastle.math.ec.ECPoint$F2m[] getPreComp()"], ["void", "org.bouncycastle.math.ec.WTauNafPreCompInfo.setPreComp(org.bouncycastle.math.ec.ECPoint$F2m[])", "public void setPreComp(org.bouncycastle.math.ec.ECPoint$F2m[])"], ["org.bouncycastle.math.ec.ZSignedDigitL2RMultiplier", "org.bouncycastle.math.ec.ZSignedDigitL2RMultiplier()", "public org.bouncycastle.math.ec.ZSignedDigitL2RMultiplier()"], ["org.bouncycastle.math.ec.ZSignedDigitR2LMultiplier", "org.bouncycastle.math.ec.ZSignedDigitR2LMultiplier()", "public org.bouncycastle.math.ec.ZSignedDigitR2LMultiplier()"], ["org.bouncycastle.math.ec.ZTauElement", "org.bouncycastle.math.ec.ZTauElement(java.math.BigInteger, java.math.BigInteger)", "public org.bouncycastle.math.ec.ZTauElement(java.math.BigInteger, java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.djb.Curve25519", "org.bouncycastle.math.ec.custom.djb.Curve25519()", "public org.bouncycastle.math.ec.custom.djb.Curve25519()"], ["boolean", "org.bouncycastle.math.ec.custom.djb.Curve25519.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.djb.Curve25519.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.djb.Curve25519.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.djb.Curve25519Field", "org.bouncycastle.math.ec.custom.djb.Curve25519Field()", "public org.bouncycastle.math.ec.custom.djb.Curve25519Field()"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.reduce27(int, int[])", "public static void reduce27(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.djb.Curve25519Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement()", "public org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.djb.Curve25519FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.djb.Curve25519Point", "org.bouncycastle.math.ec.custom.djb.Curve25519Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.djb.Curve25519Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.djb.Curve25519Point", "org.bouncycastle.math.ec.custom.djb.Curve25519Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.djb.Curve25519Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.getZCoord(int)", "public org.bouncycastle.math.ec.ECFieldElement getZCoord(int)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.djb.Curve25519Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1Curve", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP192K1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1Field", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP192K1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192K1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192K1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1Point", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP192K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP192K1Point", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP192K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192K1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1Curve", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP192R1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1Field", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP192R1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP192R1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP192R1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1Point", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP192R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP192R1Point", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP192R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP192R1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1Curve", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP224K1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1Field", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP224K1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224K1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224K1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1Point", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP224K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP224K1Point", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP224K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224K1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1Curve", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP224R1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1Field", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP224R1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP224R1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1Point", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP224R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP224R1Point", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP224R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP224R1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1Curve", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP256K1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1Field", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP256K1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256K1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256K1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1Point", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP256K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP256K1Point", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP256K1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256K1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1Curve", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP256R1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1Field", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP256R1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.multiplyAddToExt(int[], int[], int[])", "public static void multiplyAddToExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP256R1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP256R1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1Point", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP256R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP256R1Point", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP256R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP256R1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1Curve", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP384R1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1Field", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP384R1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.addExt(int[], int[], int[])", "public static void addExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.reduce32(int, int[])", "public static void reduce32(int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.subtractExt(int[], int[], int[])", "public static void subtractExt(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP384R1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP384R1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1Point", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP384R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP384R1Point", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP384R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP384R1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1Curve", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve()", "public org.bouncycastle.math.ec.custom.sec.SecP521R1Curve()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve.supportsCoordinateSystem(int)", "public boolean supportsCoordinateSystem(int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve.getQ()", "public java.math.BigInteger getQ()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve.fromBigInteger(java.math.BigInteger)", "public org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Curve.getInfinity()", "public org.bouncycastle.math.ec.ECPoint getInfinity()"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1Field", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field()", "public org.bouncycastle.math.ec.custom.sec.SecP521R1Field()"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.add(int[], int[], int[])", "public static void add(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.addOne(int[], int[])", "public static void addOne(int[], int[])"], ["int[]", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.half(int[], int[])", "public static void half(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.multiply(int[], int[], int[])", "public static void multiply(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.negate(int[], int[])", "public static void negate(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.reduce(int[], int[])", "public static void reduce(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.reduce23(int[])", "public static void reduce23(int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.squareN(int[], int, int[])", "public static void squareN(int[], int, int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.subtract(int[], int[], int[])", "public static void subtract(int[], int[], int[])"], ["void", "org.bouncycastle.math.ec.custom.sec.SecP521R1Field.twice(int[], int[])", "public static void twice(int[], int[])"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement(java.math.BigInteger)", "public org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement(java.math.BigInteger)"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement()", "public org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.testBitZero()", "public boolean testBitZero()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.toBigInteger()", "public java.math.BigInteger toBigInteger()"], ["java.lang.String", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.getFieldSize()", "public int getFieldSize()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.add(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.addOne()", "public org.bouncycastle.math.ec.ECFieldElement addOne()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.subtract(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.multiply(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.divide(org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.negate()", "public org.bouncycastle.math.ec.ECFieldElement negate()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.square()", "public org.bouncycastle.math.ec.ECFieldElement square()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.invert()", "public org.bouncycastle.math.ec.ECFieldElement invert()"], ["org.bouncycastle.math.ec.ECFieldElement", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.sqrt()", "public org.bouncycastle.math.ec.ECFieldElement sqrt()"], ["boolean", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.ec.custom.sec.SecP521R1FieldElement.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1Point", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)", "public org.bouncycastle.math.ec.custom.sec.SecP521R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)"], ["org.bouncycastle.math.ec.custom.sec.SecP521R1Point", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)", "public org.bouncycastle.math.ec.custom.sec.SecP521R1Point(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point.add(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point.twice()", "public org.bouncycastle.math.ec.ECPoint twice()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point.twicePlus(org.bouncycastle.math.ec.ECPoint)", "public org.bouncycastle.math.ec.ECPoint twicePlus(org.bouncycastle.math.ec.ECPoint)"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point.threeTimes()", "public org.bouncycastle.math.ec.ECPoint threeTimes()"], ["org.bouncycastle.math.ec.ECPoint", "org.bouncycastle.math.ec.custom.sec.SecP521R1Point.negate()", "public org.bouncycastle.math.ec.ECPoint negate()"], ["org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism", "org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.endo.GLVTypeBParameters)", "public org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.endo.GLVTypeBParameters)"], ["java.math.BigInteger[]", "org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism.decomposeScalar(java.math.BigInteger)", "public java.math.BigInteger[] decomposeScalar(java.math.BigInteger)"], ["org.bouncycastle.math.ec.ECPointMap", "org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism.getPointMap()", "public org.bouncycastle.math.ec.ECPointMap getPointMap()"], ["boolean", "org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism.hasEfficientPointMap()", "public boolean hasEfficientPointMap()"], ["org.bouncycastle.math.ec.endo.GLVTypeBParameters", "org.bouncycastle.math.ec.endo.GLVTypeBParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.math.BigInteger[], java.math.BigInteger, java.math.BigInteger, int)", "public org.bouncycastle.math.ec.endo.GLVTypeBParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.math.BigInteger[], java.math.BigInteger, java.math.BigInteger, int)"], ["java.math.BigInteger", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getBeta()", "public java.math.BigInteger getBeta()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getLambda()", "public java.math.BigInteger getLambda()"], ["java.math.BigInteger[]", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getV1()", "public java.math.BigInteger[] getV1()"], ["java.math.BigInteger[]", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getV2()", "public java.math.BigInteger[] getV2()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getG1()", "public java.math.BigInteger getG1()"], ["java.math.BigInteger", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getG2()", "public java.math.BigInteger getG2()"], ["int", "org.bouncycastle.math.ec.endo.GLVTypeBParameters.getBits()", "public int getBits()"], ["org.bouncycastle.math.ec.tools.DiscoverEndomorphisms", "org.bouncycastle.math.ec.tools.DiscoverEndomorphisms()", "public org.bouncycastle.math.ec.tools.DiscoverEndomorphisms()"], ["void", "org.bouncycastle.math.ec.tools.DiscoverEndomorphisms.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["org.bouncycastle.math.field.FiniteFields", "org.bouncycastle.math.field.FiniteFields()", "public org.bouncycastle.math.field.FiniteFields()"], ["org.bouncycastle.math.field.PolynomialExtensionField", "org.bouncycastle.math.field.FiniteFields.getBinaryExtensionField(int[])", "public static org.bouncycastle.math.field.PolynomialExtensionField getBinaryExtensionField(int[])"], ["org.bouncycastle.math.field.FiniteField", "org.bouncycastle.math.field.FiniteFields.getPrimeField(java.math.BigInteger)", "public static org.bouncycastle.math.field.FiniteField getPrimeField(java.math.BigInteger)"], ["int", "org.bouncycastle.math.field.GF2Polynomial.getDegree()", "public int getDegree()"], ["int[]", "org.bouncycastle.math.field.GF2Polynomial.getExponentsPresent()", "public int[] getExponentsPresent()"], ["boolean", "org.bouncycastle.math.field.GF2Polynomial.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.field.GF2Polynomial.hashCode()", "public int hashCode()"], ["java.math.BigInteger", "org.bouncycastle.math.field.GenericPolynomialExtensionField.getCharacteristic()", "public java.math.BigInteger getCharacteristic()"], ["int", "org.bouncycastle.math.field.GenericPolynomialExtensionField.getDimension()", "public int getDimension()"], ["org.bouncycastle.math.field.FiniteField", "org.bouncycastle.math.field.GenericPolynomialExtensionField.getSubfield()", "public org.bouncycastle.math.field.FiniteField getSubfield()"], ["int", "org.bouncycastle.math.field.GenericPolynomialExtensionField.getDegree()", "public int getDegree()"], ["org.bouncycastle.math.field.Polynomial", "org.bouncycastle.math.field.GenericPolynomialExtensionField.getMinimalPolynomial()", "public org.bouncycastle.math.field.Polynomial getMinimalPolynomial()"], ["boolean", "org.bouncycastle.math.field.GenericPolynomialExtensionField.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.field.GenericPolynomialExtensionField.hashCode()", "public int hashCode()"], ["java.math.BigInteger", "org.bouncycastle.math.field.PrimeField.getCharacteristic()", "public java.math.BigInteger getCharacteristic()"], ["int", "org.bouncycastle.math.field.PrimeField.getDimension()", "public int getDimension()"], ["boolean", "org.bouncycastle.math.field.PrimeField.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.math.field.PrimeField.hashCode()", "public int hashCode()"], ["org.bouncycastle.math.raw.Mod", "org.bouncycastle.math.raw.Mod()", "public org.bouncycastle.math.raw.Mod()"], ["int", "org.bouncycastle.math.raw.Mod.inverse32(int)", "public static int inverse32(int)"], ["void", "org.bouncycastle.math.raw.Mod.invert(int[], int[], int[])", "public static void invert(int[], int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Mod.random(int[])", "public static int[] random(int[])"], ["void", "org.bouncycastle.math.raw.Mod.add(int[], int[], int[], int[])", "public static void add(int[], int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Mod.subtract(int[], int[], int[], int[])", "public static void subtract(int[], int[], int[], int[])"], ["org.bouncycastle.math.raw.Mont256", "org.bouncycastle.math.raw.Mont256()", "public org.bouncycastle.math.raw.Mont256()"], ["int", "org.bouncycastle.math.raw.Mont256.inverse32(int)", "public static int inverse32(int)"], ["void", "org.bouncycastle.math.raw.Mont256.multAdd(int[], int[], int[], int[], int)", "public static void multAdd(int[], int[], int[], int[], int)"], ["void", "org.bouncycastle.math.raw.Mont256.multAddXF(int[], int[], int[], int[])", "public static void multAddXF(int[], int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Mont256.reduce(int[], int[], int)", "public static void reduce(int[], int[], int)"], ["void", "org.bouncycastle.math.raw.Mont256.reduceXF(int[], int[])", "public static void reduceXF(int[], int[])"], ["org.bouncycastle.math.raw.Nat", "org.bouncycastle.math.raw.Nat()", "public org.bouncycastle.math.raw.Nat()"], ["int", "org.bouncycastle.math.raw.Nat.add(int, int[], int[], int[])", "public static int add(int, int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.add33At(int, int, int[], int)", "public static int add33At(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.add33At(int, int, int[], int, int)", "public static int add33At(int, int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.add33To(int, int, int[])", "public static int add33To(int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.add33To(int, int, int[], int)", "public static int add33To(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addBothTo(int, int[], int[], int[])", "public static int addBothTo(int, int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.addBothTo(int, int[], int, int[], int, int[], int)", "public static int addBothTo(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addDWordAt(int, long, int[], int)", "public static int addDWordAt(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addDWordAt(int, long, int[], int, int)", "public static int addDWordAt(int, long, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.addDWordTo(int, long, int[])", "public static int addDWordTo(int, long, int[])"], ["int", "org.bouncycastle.math.raw.Nat.addDWordTo(int, long, int[], int)", "public static int addDWordTo(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addTo(int, int[], int[])", "public static int addTo(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.addTo(int, int[], int, int[], int)", "public static int addTo(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addWordAt(int, int, int[], int)", "public static int addWordAt(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.addWordAt(int, int, int[], int, int)", "public static int addWordAt(int, int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.addWordTo(int, int, int[])", "public static int addWordTo(int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.addWordTo(int, int, int[], int)", "public static int addWordTo(int, int, int[], int)"], ["int[]", "org.bouncycastle.math.raw.Nat.copy(int, int[])", "public static int[] copy(int, int[])"], ["void", "org.bouncycastle.math.raw.Nat.copy(int, int[], int[])", "public static void copy(int, int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat.create(int)", "public static int[] create(int)"], ["int", "org.bouncycastle.math.raw.Nat.dec(int, int[])", "public static int dec(int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.dec(int, int[], int[])", "public static int dec(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.decAt(int, int[], int)", "public static int decAt(int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.decAt(int, int[], int, int)", "public static int decAt(int, int[], int, int)"], ["boolean", "org.bouncycastle.math.raw.Nat.eq(int, int[], int[])", "public static boolean eq(int, int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat.fromBigInteger(int, java.math.BigInteger)", "public static int[] fromBigInteger(int, java.math.BigInteger)"], ["int", "org.bouncycastle.math.raw.Nat.getBit(int[], int)", "public static int getBit(int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat.gte(int, int[], int[])", "public static boolean gte(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.inc(int, int[])", "public static int inc(int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.inc(int, int[], int[])", "public static int inc(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.incAt(int, int[], int)", "public static int incAt(int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.incAt(int, int[], int, int)", "public static int incAt(int, int[], int, int)"], ["boolean", "org.bouncycastle.math.raw.Nat.isOne(int, int[])", "public static boolean isOne(int, int[])"], ["boolean", "org.bouncycastle.math.raw.Nat.isZero(int, int[])", "public static boolean isZero(int, int[])"], ["void", "org.bouncycastle.math.raw.Nat.mul(int, int[], int[], int[])", "public static void mul(int, int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat.mul(int, int[], int, int[], int, int[], int)", "public static void mul(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.mulAddTo(int, int[], int[], int[])", "public static int mulAddTo(int, int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.mulAddTo(int, int[], int, int[], int, int[], int)", "public static int mulAddTo(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.mul31BothAdd(int, int, int[], int, int[], int[], int)", "public static int mul31BothAdd(int, int, int[], int, int[], int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.mulWord(int, int, int[], int[])", "public static int mulWord(int, int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.mulWord(int, int, int[], int, int[], int)", "public static int mulWord(int, int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.mulWordAddTo(int, int, int[], int, int[], int)", "public static int mulWordAddTo(int, int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.mulWordDwordAddAt(int, int, long, int[], int)", "public static int mulWordDwordAddAt(int, int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBit(int, int[], int)", "public static int shiftDownBit(int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBit(int, int[], int, int)", "public static int shiftDownBit(int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBit(int, int[], int, int[])", "public static int shiftDownBit(int, int[], int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBit(int, int[], int, int, int[], int)", "public static int shiftDownBit(int, int[], int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBits(int, int[], int, int)", "public static int shiftDownBits(int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBits(int, int[], int, int, int)", "public static int shiftDownBits(int, int[], int, int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBits(int, int[], int, int, int[])", "public static int shiftDownBits(int, int[], int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownBits(int, int[], int, int, int, int[], int)", "public static int shiftDownBits(int, int[], int, int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftDownWord(int, int[], int)", "public static int shiftDownWord(int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBit(int, int[], int)", "public static int shiftUpBit(int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBit(int, int[], int, int)", "public static int shiftUpBit(int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBit(int, int[], int, int[])", "public static int shiftUpBit(int, int[], int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBit(int, int[], int, int, int[], int)", "public static int shiftUpBit(int, int[], int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBits(int, int[], int, int)", "public static int shiftUpBits(int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBits(int, int[], int, int, int)", "public static int shiftUpBits(int, int[], int, int, int)"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBits(int, int[], int, int, int[])", "public static int shiftUpBits(int, int[], int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.shiftUpBits(int, int[], int, int, int, int[], int)", "public static int shiftUpBits(int, int[], int, int, int, int[], int)"], ["void", "org.bouncycastle.math.raw.Nat.square(int, int[], int[])", "public static void square(int, int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat.square(int, int[], int, int[], int)", "public static void square(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.squareWordAdd(int[], int, int[])", "public static int squareWordAdd(int[], int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.squareWordAdd(int[], int, int, int[], int)", "public static int squareWordAdd(int[], int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.sub(int, int[], int[], int[])", "public static int sub(int, int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.sub(int, int[], int, int[], int, int[], int)", "public static int sub(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.sub33At(int, int, int[], int)", "public static int sub33At(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.sub33At(int, int, int[], int, int)", "public static int sub33At(int, int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.sub33From(int, int, int[])", "public static int sub33From(int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.sub33From(int, int, int[], int)", "public static int sub33From(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subBothFrom(int, int[], int[], int[])", "public static int subBothFrom(int, int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.subBothFrom(int, int[], int, int[], int, int[], int)", "public static int subBothFrom(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subDWordAt(int, long, int[], int)", "public static int subDWordAt(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subDWordAt(int, long, int[], int, int)", "public static int subDWordAt(int, long, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.subDWordFrom(int, long, int[])", "public static int subDWordFrom(int, long, int[])"], ["int", "org.bouncycastle.math.raw.Nat.subDWordFrom(int, long, int[], int)", "public static int subDWordFrom(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subFrom(int, int[], int[])", "public static int subFrom(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat.subFrom(int, int[], int, int[], int)", "public static int subFrom(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subWordAt(int, int, int[], int)", "public static int subWordAt(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat.subWordAt(int, int, int[], int, int)", "public static int subWordAt(int, int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat.subWordFrom(int, int, int[])", "public static int subWordFrom(int, int, int[])"], ["int", "org.bouncycastle.math.raw.Nat.subWordFrom(int, int, int[], int)", "public static int subWordFrom(int, int, int[], int)"], ["java.math.BigInteger", "org.bouncycastle.math.raw.Nat.toBigInteger(int, int[])", "public static java.math.BigInteger toBigInteger(int, int[])"], ["void", "org.bouncycastle.math.raw.Nat.zero(int, int[])", "public static void zero(int, int[])"], ["org.bouncycastle.math.raw.Nat192", "org.bouncycastle.math.raw.Nat192()", "public org.bouncycastle.math.raw.Nat192()"], ["int", "org.bouncycastle.math.raw.Nat192.add(int[], int[], int[])", "public static int add(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.addBothTo(int[], int[], int[])", "public static int addBothTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.addTo(int[], int[])", "public static int addTo(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.addTo(int[], int, int[], int, int)", "public static int addTo(int[], int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat192.addToEachOther(int[], int, int[], int)", "public static int addToEachOther(int[], int, int[], int)"], ["void", "org.bouncycastle.math.raw.Nat192.copy(int[], int[])", "public static void copy(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat192.create()", "public static int[] create()"], ["int[]", "org.bouncycastle.math.raw.Nat192.createExt()", "public static int[] createExt()"], ["boolean", "org.bouncycastle.math.raw.Nat192.diff(int[], int, int[], int, int[], int)", "public static boolean diff(int[], int, int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat192.eq(int[], int[])", "public static boolean eq(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat192.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["int", "org.bouncycastle.math.raw.Nat192.getBit(int[], int)", "public static int getBit(int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat192.gte(int[], int[])", "public static boolean gte(int[], int[])"], ["boolean", "org.bouncycastle.math.raw.Nat192.gte(int[], int, int[], int)", "public static boolean gte(int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat192.isOne(int[])", "public static boolean isOne(int[])"], ["boolean", "org.bouncycastle.math.raw.Nat192.isZero(int[])", "public static boolean isZero(int[])"], ["void", "org.bouncycastle.math.raw.Nat192.mul(int[], int[], int[])", "public static void mul(int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat192.mul(int[], int, int[], int, int[], int)", "public static void mul(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mulAddTo(int[], int[], int[])", "public static int mulAddTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.mulAddTo(int[], int, int[], int, int[], int)", "public static int mulAddTo(int[], int, int[], int, int[], int)"], ["long", "org.bouncycastle.math.raw.Nat192.mul33Add(int, int[], int, int[], int, int[], int)", "public static long mul33Add(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mulWordAddExt(int, int[], int, int[], int)", "public static int mulWordAddExt(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mul33DWordAdd(int, long, int[], int)", "public static int mul33DWordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mul33WordAdd(int, int, int[], int)", "public static int mul33WordAdd(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mulWordDwordAdd(int, long, int[], int)", "public static int mulWordDwordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.mulWord(int, int[], int[], int)", "public static int mulWord(int, int[], int[], int)"], ["void", "org.bouncycastle.math.raw.Nat192.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat192.square(int[], int, int[], int)", "public static void square(int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.sub(int[], int[], int[])", "public static int sub(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.sub(int[], int, int[], int, int[], int)", "public static int sub(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat192.subBothFrom(int[], int[], int[])", "public static int subBothFrom(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.subFrom(int[], int[])", "public static int subFrom(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat192.subFrom(int[], int, int[], int)", "public static int subFrom(int[], int, int[], int)"], ["java.math.BigInteger", "org.bouncycastle.math.raw.Nat192.toBigInteger(int[])", "public static java.math.BigInteger toBigInteger(int[])"], ["void", "org.bouncycastle.math.raw.Nat192.zero(int[])", "public static void zero(int[])"], ["org.bouncycastle.math.raw.Nat224", "org.bouncycastle.math.raw.Nat224()", "public org.bouncycastle.math.raw.Nat224()"], ["int", "org.bouncycastle.math.raw.Nat224.add(int[], int[], int[])", "public static int add(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.add(int[], int, int[], int, int[], int)", "public static int add(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.addBothTo(int[], int[], int[])", "public static int addBothTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.addBothTo(int[], int, int[], int, int[], int)", "public static int addBothTo(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.addTo(int[], int[])", "public static int addTo(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.addTo(int[], int, int[], int, int)", "public static int addTo(int[], int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat224.addToEachOther(int[], int, int[], int)", "public static int addToEachOther(int[], int, int[], int)"], ["void", "org.bouncycastle.math.raw.Nat224.copy(int[], int[])", "public static void copy(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat224.create()", "public static int[] create()"], ["int[]", "org.bouncycastle.math.raw.Nat224.createExt()", "public static int[] createExt()"], ["boolean", "org.bouncycastle.math.raw.Nat224.diff(int[], int, int[], int, int[], int)", "public static boolean diff(int[], int, int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat224.eq(int[], int[])", "public static boolean eq(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat224.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["int", "org.bouncycastle.math.raw.Nat224.getBit(int[], int)", "public static int getBit(int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat224.gte(int[], int[])", "public static boolean gte(int[], int[])"], ["boolean", "org.bouncycastle.math.raw.Nat224.gte(int[], int, int[], int)", "public static boolean gte(int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat224.isOne(int[])", "public static boolean isOne(int[])"], ["boolean", "org.bouncycastle.math.raw.Nat224.isZero(int[])", "public static boolean isZero(int[])"], ["void", "org.bouncycastle.math.raw.Nat224.mul(int[], int[], int[])", "public static void mul(int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat224.mul(int[], int, int[], int, int[], int)", "public static void mul(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mulAddTo(int[], int[], int[])", "public static int mulAddTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.mulAddTo(int[], int, int[], int, int[], int)", "public static int mulAddTo(int[], int, int[], int, int[], int)"], ["long", "org.bouncycastle.math.raw.Nat224.mul33Add(int, int[], int, int[], int, int[], int)", "public static long mul33Add(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mulByWord(int, int[])", "public static int mulByWord(int, int[])"], ["int", "org.bouncycastle.math.raw.Nat224.mulByWordAddTo(int, int[], int[])", "public static int mulByWordAddTo(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.mulWordAddTo(int, int[], int, int[], int)", "public static int mulWordAddTo(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mul33DWordAdd(int, long, int[], int)", "public static int mul33DWordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mul33WordAdd(int, int, int[], int)", "public static int mul33WordAdd(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mulWordDwordAdd(int, long, int[], int)", "public static int mulWordDwordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.mulWord(int, int[], int[], int)", "public static int mulWord(int, int[], int[], int)"], ["void", "org.bouncycastle.math.raw.Nat224.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat224.square(int[], int, int[], int)", "public static void square(int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.sub(int[], int[], int[])", "public static int sub(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.sub(int[], int, int[], int, int[], int)", "public static int sub(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat224.subBothFrom(int[], int[], int[])", "public static int subBothFrom(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.subFrom(int[], int[])", "public static int subFrom(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat224.subFrom(int[], int, int[], int)", "public static int subFrom(int[], int, int[], int)"], ["java.math.BigInteger", "org.bouncycastle.math.raw.Nat224.toBigInteger(int[])", "public static java.math.BigInteger toBigInteger(int[])"], ["void", "org.bouncycastle.math.raw.Nat224.zero(int[])", "public static void zero(int[])"], ["org.bouncycastle.math.raw.Nat256", "org.bouncycastle.math.raw.Nat256()", "public org.bouncycastle.math.raw.Nat256()"], ["int", "org.bouncycastle.math.raw.Nat256.add(int[], int[], int[])", "public static int add(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.add(int[], int, int[], int, int[], int)", "public static int add(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.addBothTo(int[], int[], int[])", "public static int addBothTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.addBothTo(int[], int, int[], int, int[], int)", "public static int addBothTo(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.addTo(int[], int[])", "public static int addTo(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.addTo(int[], int, int[], int, int)", "public static int addTo(int[], int, int[], int, int)"], ["int", "org.bouncycastle.math.raw.Nat256.addToEachOther(int[], int, int[], int)", "public static int addToEachOther(int[], int, int[], int)"], ["void", "org.bouncycastle.math.raw.Nat256.copy(int[], int[])", "public static void copy(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat256.create()", "public static int[] create()"], ["int[]", "org.bouncycastle.math.raw.Nat256.createExt()", "public static int[] createExt()"], ["boolean", "org.bouncycastle.math.raw.Nat256.diff(int[], int, int[], int, int[], int)", "public static boolean diff(int[], int, int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat256.eq(int[], int[])", "public static boolean eq(int[], int[])"], ["int[]", "org.bouncycastle.math.raw.Nat256.fromBigInteger(java.math.BigInteger)", "public static int[] fromBigInteger(java.math.BigInteger)"], ["int", "org.bouncycastle.math.raw.Nat256.getBit(int[], int)", "public static int getBit(int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat256.gte(int[], int[])", "public static boolean gte(int[], int[])"], ["boolean", "org.bouncycastle.math.raw.Nat256.gte(int[], int, int[], int)", "public static boolean gte(int[], int, int[], int)"], ["boolean", "org.bouncycastle.math.raw.Nat256.isOne(int[])", "public static boolean isOne(int[])"], ["boolean", "org.bouncycastle.math.raw.Nat256.isZero(int[])", "public static boolean isZero(int[])"], ["void", "org.bouncycastle.math.raw.Nat256.mul(int[], int[], int[])", "public static void mul(int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat256.mul(int[], int, int[], int, int[], int)", "public static void mul(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mulAddTo(int[], int[], int[])", "public static int mulAddTo(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.mulAddTo(int[], int, int[], int, int[], int)", "public static int mulAddTo(int[], int, int[], int, int[], int)"], ["long", "org.bouncycastle.math.raw.Nat256.mul33Add(int, int[], int, int[], int, int[], int)", "public static long mul33Add(int, int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mulByWord(int, int[])", "public static int mulByWord(int, int[])"], ["int", "org.bouncycastle.math.raw.Nat256.mulByWordAddTo(int, int[], int[])", "public static int mulByWordAddTo(int, int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.mulWordAddTo(int, int[], int, int[], int)", "public static int mulWordAddTo(int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mul33DWordAdd(int, long, int[], int)", "public static int mul33DWordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mul33WordAdd(int, int, int[], int)", "public static int mul33WordAdd(int, int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mulWordDwordAdd(int, long, int[], int)", "public static int mulWordDwordAdd(int, long, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.mulWord(int, int[], int[], int)", "public static int mulWord(int, int[], int[], int)"], ["void", "org.bouncycastle.math.raw.Nat256.square(int[], int[])", "public static void square(int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat256.square(int[], int, int[], int)", "public static void square(int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.sub(int[], int[], int[])", "public static int sub(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.sub(int[], int, int[], int, int[], int)", "public static int sub(int[], int, int[], int, int[], int)"], ["int", "org.bouncycastle.math.raw.Nat256.subBothFrom(int[], int[], int[])", "public static int subBothFrom(int[], int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.subFrom(int[], int[])", "public static int subFrom(int[], int[])"], ["int", "org.bouncycastle.math.raw.Nat256.subFrom(int[], int, int[], int)", "public static int subFrom(int[], int, int[], int)"], ["java.math.BigInteger", "org.bouncycastle.math.raw.Nat256.toBigInteger(int[])", "public static java.math.BigInteger toBigInteger(int[])"], ["void", "org.bouncycastle.math.raw.Nat256.zero(int[])", "public static void zero(int[])"], ["org.bouncycastle.math.raw.Nat384", "org.bouncycastle.math.raw.Nat384()", "public org.bouncycastle.math.raw.Nat384()"], ["void", "org.bouncycastle.math.raw.Nat384.mul(int[], int[], int[])", "public static void mul(int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat384.square(int[], int[])", "public static void square(int[], int[])"], ["org.bouncycastle.math.raw.Nat512", "org.bouncycastle.math.raw.Nat512()", "public org.bouncycastle.math.raw.Nat512()"], ["void", "org.bouncycastle.math.raw.Nat512.mul(int[], int[], int[])", "public static void mul(int[], int[], int[])"], ["void", "org.bouncycastle.math.raw.Nat512.square(int[], int[])", "public static void square(int[], int[])"], ["org.bouncycastle.pqc.asn1.GMSSPrivateKey", "org.bouncycastle.pqc.asn1.GMSSPrivateKey(int[], byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.asn1.x509.AlgorithmIdentifier)", "public org.bouncycastle.pqc.asn1.GMSSPrivateKey(int[], byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.asn1.x509.AlgorithmIdentifier)"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.GMSSPrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.GMSSPublicKey", "org.bouncycastle.pqc.asn1.GMSSPublicKey(byte[])", "public org.bouncycastle.pqc.asn1.GMSSPublicKey(byte[])"], ["org.bouncycastle.pqc.asn1.GMSSPublicKey", "org.bouncycastle.pqc.asn1.GMSSPublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.GMSSPublicKey getInstance(java.lang.Object)"], ["byte[]", "org.bouncycastle.pqc.asn1.GMSSPublicKey.getPublicKey()", "public byte[] getPublicKey()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.GMSSPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getOID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()"], ["int", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getP()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey", "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey getInstance(java.lang.Object)"], ["org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.getOID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()"], ["int", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey", "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.pqc.asn1.McEliecePrivateKey", "org.bouncycastle.pqc.asn1.McEliecePrivateKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.asn1.McEliecePrivateKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.asn1.McEliecePrivateKey", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getOID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()"], ["int", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getSInv()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getSInv()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getP1()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP1()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getP2()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP2()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.McEliecePrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.McEliecePublicKey", "org.bouncycastle.pqc.asn1.McEliecePublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.asn1.McEliecePublicKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.asn1.ASN1ObjectIdentifier", "org.bouncycastle.pqc.asn1.McEliecePublicKey.getOID()", "public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()"], ["int", "org.bouncycastle.pqc.asn1.McEliecePublicKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.asn1.McEliecePublicKey.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.asn1.McEliecePublicKey.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.McEliecePublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.McEliecePublicKey", "org.bouncycastle.pqc.asn1.McEliecePublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.McEliecePublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.pqc.asn1.ParSet", "org.bouncycastle.pqc.asn1.ParSet(int, int[], int[], int[])", "public org.bouncycastle.pqc.asn1.ParSet(int, int[], int[], int[])"], ["org.bouncycastle.pqc.asn1.ParSet", "org.bouncycastle.pqc.asn1.ParSet.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.ParSet getInstance(java.lang.Object)"], ["int", "org.bouncycastle.pqc.asn1.ParSet.getT()", "public int getT()"], ["int[]", "org.bouncycastle.pqc.asn1.ParSet.getH()", "public int[] getH()"], ["int[]", "org.bouncycastle.pqc.asn1.ParSet.getW()", "public int[] getW()"], ["int[]", "org.bouncycastle.pqc.asn1.ParSet.getK()", "public int[] getK()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.ParSet.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.RainbowPrivateKey", "org.bouncycastle.pqc.asn1.RainbowPrivateKey(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])", "public org.bouncycastle.pqc.asn1.RainbowPrivateKey(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])"], ["org.bouncycastle.pqc.asn1.RainbowPrivateKey", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.RainbowPrivateKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["short[][]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getInvA1()", "public short[][] getInvA1()"], ["short[]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getB1()", "public short[] getB1()"], ["short[]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getB2()", "public short[] getB2()"], ["short[][]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getInvA2()", "public short[][] getInvA2()"], ["org.bouncycastle.pqc.crypto.rainbow.Layer[]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getLayers()", "public org.bouncycastle.pqc.crypto.rainbow.Layer[] getLayers()"], ["int[]", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.getVi()", "public int[] getVi()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.RainbowPrivateKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.asn1.RainbowPublicKey", "org.bouncycastle.pqc.asn1.RainbowPublicKey(int, short[][], short[][], short[])", "public org.bouncycastle.pqc.asn1.RainbowPublicKey(int, short[][], short[][], short[])"], ["org.bouncycastle.pqc.asn1.RainbowPublicKey", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getInstance(java.lang.Object)", "public static org.bouncycastle.pqc.asn1.RainbowPublicKey getInstance(java.lang.Object)"], ["org.bouncycastle.asn1.ASN1Integer", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getVersion()", "public org.bouncycastle.asn1.ASN1Integer getVersion()"], ["int", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getDocLength()", "public int getDocLength()"], ["short[][]", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getCoeffQuadratic()", "public short[][] getCoeffQuadratic()"], ["short[][]", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getCoeffSingular()", "public short[][] getCoeffSingular()"], ["short[]", "org.bouncycastle.pqc.asn1.RainbowPublicKey.getCoeffScalar()", "public short[] getCoeffScalar()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.pqc.asn1.RainbowPublicKey.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.pqc.crypto.DigestingMessageSigner", "org.bouncycastle.pqc.crypto.DigestingMessageSigner(org.bouncycastle.pqc.crypto.MessageSigner, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.DigestingMessageSigner(org.bouncycastle.pqc.crypto.MessageSigner, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.generateSignature()", "public byte[] generateSignature()"], ["boolean", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.verify(byte[])", "public boolean verify(byte[])"], ["void", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.reset()", "public void reset()"], ["boolean", "org.bouncycastle.pqc.crypto.DigestingMessageSigner.verifySignature(byte[])", "public boolean verifySignature(byte[])"], ["org.bouncycastle.pqc.crypto.gmss.GMSSKeyGenerationParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.crypto.gmss.GMSSKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyGenerationParameters.getParameters()", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters getParameters()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator(org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)", "public org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator(org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator.initialize(org.bouncycastle.crypto.KeyGenerationParameters)", "public void initialize(org.bouncycastle.crypto.KeyGenerationParameters)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSKeyParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyParameters(boolean, org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.crypto.gmss.GMSSKeyParameters(boolean, org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSKeyParameters.getParameters()", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters getParameters()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSLeaf", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, byte[][], int[])", "public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, byte[][], int[])"], ["org.bouncycastle.pqc.crypto.gmss.GMSSLeaf", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, int, int, byte[])", "public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf(org.bouncycastle.crypto.Digest, int, int, byte[])"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf.getLeaf()", "public byte[] getLeaf()"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf.getStatByte()", "public byte[][] getStatByte()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf.getStatInt()", "public int[] getStatInt()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int, int[], int[], int[])", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int, int[], int[], int[]) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int)", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters(int) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters.getNumOfLayers()", "public int getNumOfLayers()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters.getHeightOfTrees()", "public int[] getHeightOfTrees()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters.getWinternitzParameter()", "public int[] getWinternitzParameter()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSParameters.getK()", "public int[] getK()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters(byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)", "public org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters(byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"], ["org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters(int[], byte[][], byte[][], byte[][][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)", "public org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters(int[], byte[][], byte[][], byte[][][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.isUsed()", "public boolean isUsed()"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.markUsed()", "public void markUsed()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextKey()", "public org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters nextKey()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getIndex()", "public int[] getIndex()"], ["int", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getIndex(int)", "public int getIndex(int)"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getCurrentSeeds()", "public byte[][] getCurrentSeeds()"], ["byte[][][]", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getCurrentAuthPaths()", "public byte[][][] getCurrentAuthPaths()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getSubtreeRootSig(int)", "public byte[] getSubtreeRootSig(int)"], ["org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getName()", "public org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider getName()"], ["int", "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.getNumLeafs(int)", "public int getNumLeafs(int)"], ["org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters", "org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters.getPublicKey()", "public byte[] getPublicKey()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc(org.bouncycastle.crypto.Digest, byte[][], int[], org.bouncycastle.pqc.crypto.gmss.Treehash[], java.util.Vector[])", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc(org.bouncycastle.crypto.Digest, byte[][], int[], org.bouncycastle.pqc.crypto.gmss.Treehash[], java.util.Vector[])"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc(int, int, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc(int, int, org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.initialize(java.util.Vector)", "public void initialize(java.util.Vector)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.update(byte[], byte[])", "public void update(byte[], byte[])"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.update(byte[])", "public void update(byte[])"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.initializeTreehashSeed(byte[], int)", "public void initializeTreehashSeed(byte[], int)"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.wasInitialized()", "public boolean wasInitialized()"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.wasFinished()", "public boolean wasFinished()"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getAuthPath()", "public byte[][] getAuthPath()"], ["org.bouncycastle.pqc.crypto.gmss.Treehash[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getTreehash()", "public org.bouncycastle.pqc.crypto.gmss.Treehash[] getTreehash()"], ["java.util.Vector[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getRetain()", "public java.util.Vector[] getRetain()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getRoot()", "public byte[] getRoot()"], ["java.util.Vector", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getStack()", "public java.util.Vector getStack()"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getStatByte()", "public byte[][] getStatByte()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.getStatInt()", "public int[] getStatInt()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootSig", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig(org.bouncycastle.crypto.Digest, byte[][], int[])", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootSig(org.bouncycastle.crypto.Digest, byte[][], int[])"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootSig", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig(org.bouncycastle.crypto.Digest, int, int)", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootSig(org.bouncycastle.crypto.Digest, int, int)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.initSign(byte[], byte[])", "public void initSign(byte[], byte[])"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.updateSign()", "public boolean updateSign()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.getSig()", "public byte[] getSig()"], ["int", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.getLog(int)", "public int getLog(int)"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.getStatByte()", "public byte[][] getStatByte()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.getStatInt()", "public int[] getStatInt()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.getStatLong()", "public byte[] getStatLong()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSSigner", "org.bouncycastle.pqc.crypto.gmss.GMSSSigner(org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)", "public org.bouncycastle.pqc.crypto.gmss.GMSSSigner(org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"], ["void", "org.bouncycastle.pqc.crypto.gmss.GMSSSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.GMSSSigner.generateSignature(byte[])", "public byte[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.GMSSSigner.verifySignature(byte[], byte[])", "public boolean verifySignature(byte[], byte[])"], ["org.bouncycastle.pqc.crypto.gmss.Treehash", "org.bouncycastle.pqc.crypto.gmss.Treehash(org.bouncycastle.crypto.Digest, byte[][], int[])", "public org.bouncycastle.pqc.crypto.gmss.Treehash(org.bouncycastle.crypto.Digest, byte[][], int[])"], ["org.bouncycastle.pqc.crypto.gmss.Treehash", "org.bouncycastle.pqc.crypto.gmss.Treehash(java.util.Vector, int, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.gmss.Treehash(java.util.Vector, int, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.initializeSeed(byte[])", "public void initializeSeed(byte[])"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.initialize()", "public void initialize()"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom, byte[])", "public void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom, byte[])"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.destroy()", "public void destroy()"], ["int", "org.bouncycastle.pqc.crypto.gmss.Treehash.getLowestNodeHeight()", "public int getLowestNodeHeight()"], ["int", "org.bouncycastle.pqc.crypto.gmss.Treehash.getFirstNodeHeight()", "public int getFirstNodeHeight()"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.Treehash.wasInitialized()", "public boolean wasInitialized()"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.Treehash.wasFinished()", "public boolean wasFinished()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.Treehash.getFirstNode()", "public byte[] getFirstNode()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.Treehash.getSeedActive()", "public byte[] getSeedActive()"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.setFirstNode(byte[])", "public void setFirstNode(byte[])"], ["void", "org.bouncycastle.pqc.crypto.gmss.Treehash.updateNextSeed(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom)", "public void updateNextSeed(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom)"], ["java.util.Vector", "org.bouncycastle.pqc.crypto.gmss.Treehash.getTailStack()", "public java.util.Vector getTailStack()"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.Treehash.getStatByte()", "public byte[][] getStatByte()"], ["int[]", "org.bouncycastle.pqc.crypto.gmss.Treehash.getStatInt()", "public int[] getStatInt()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.gmss.Treehash.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom", "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom(org.bouncycastle.crypto.Digest)"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom.nextSeed(byte[])", "public byte[] nextSeed(byte[])"], ["org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil()", "public org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.intToBytesLittleEndian(int)", "public byte[] intToBytesLittleEndian(int)"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.bytesToIntLittleEndian(byte[])", "public int bytesToIntLittleEndian(byte[])"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.bytesToIntLittleEndian(byte[], int)", "public int bytesToIntLittleEndian(byte[], int)"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.concatenateArray(byte[][])", "public byte[] concatenateArray(byte[][])"], ["void", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.printArray(java.lang.String, byte[][])", "public void printArray(java.lang.String, byte[][])"], ["void", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.printArray(java.lang.String, byte[])", "public void printArray(java.lang.String, byte[])"], ["boolean", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.testPowerOfTwo(int)", "public boolean testPowerOfTwo(int)"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.GMSSUtil.getLog(int)", "public int getLog(int)"], ["org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify(org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify(org.bouncycastle.crypto.Digest, int)"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify.getSignatureLength()", "public int getSignatureLength()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify.Verify(byte[], byte[])", "public byte[] Verify(byte[], byte[])"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify.getLog(int)", "public int getLog(int)"], ["org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature(byte[], org.bouncycastle.crypto.Digest, int)", "public org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature(byte[], org.bouncycastle.crypto.Digest, int)"], ["byte[][]", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature.getPrivateKey()", "public byte[][] getPrivateKey()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature.getPublicKey()", "public byte[] getPublicKey()"], ["byte[]", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature.getSignature(byte[])", "public byte[] getSignature(byte[])"], ["int", "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature.getLog(int)", "public int getLog(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.crypto.mceliece.Conversions.encode(int, int, byte[])", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector encode(int, int, byte[])"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.Conversions.decode(int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static byte[] decode(int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.Conversions.signConversion(int, int, byte[])", "public static byte[] signConversion(int, int, byte[])"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyGenerationParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyGenerationParameters.getParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getParameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyPairGenerator", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyPairGenerator()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyPairGenerator()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters(boolean, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters(boolean, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters.getParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getParameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters(int, int)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters(int, int)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters(org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters(org.bouncycastle.crypto.Digest)"], ["org.bouncycastle.crypto.Digest", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters.getDigest()", "public org.bouncycastle.crypto.Digest getDigest()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Primitives.encryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector encryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Primitives.decryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector[] decryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[][], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[][], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getK()", "public int getK()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getP()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters(java.lang.String, int, int, byte[], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters(java.lang.String, int, int, byte[], org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters.getMatrixG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getMatrixG()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters.getK()", "public int getK()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher.getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters)", "public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher.initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)", "public void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[]) throws java.lang.Exception"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws java.lang.Exception"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.messageEncrypt()", "public byte[] messageEncrypt()"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[])"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher.reset()", "public void reset()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters.getParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters getParameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters(boolean, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters(boolean, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters.getParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters getParameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher.getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters)", "public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher.initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)", "public void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[]) throws java.lang.Exception"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws java.lang.Exception"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.messageEncrypt()", "public byte[] messageEncrypt()"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[])"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher.reset()", "public void reset()"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher()", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters)", "public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters)", "public void initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)", "public void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[])"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws java.lang.Exception"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.messageEncrypt()", "public byte[] messageEncrypt()"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[])"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher.reset()", "public void reset()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int, int)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int, int) throws java.lang.IllegalArgumentException"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int, int, int)", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters(int, int, int) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters.getM()", "public int getM()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters.getT()", "public int getT()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McElieceParameters.getFieldPoly()", "public int getFieldPoly()"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher()", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher()"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters)", "public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters)", "public void initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)", "public void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[]) throws java.lang.Exception"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws java.lang.Exception"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher(org.bouncycastle.pqc.crypto.MessageEncryptor, org.bouncycastle.crypto.Digest)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.messageEncrypt()", "public byte[] messageEncrypt()"], ["byte[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[])"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.update(byte)", "public void update(byte)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.update(byte[], int, int)", "public void update(byte[], int, int)"], ["void", "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher.reset()", "public void reset()"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[], byte[], byte[][], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[], byte[], byte[][], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getSInv()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getSInv()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getP1()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP1()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getP2()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP2()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters(java.lang.String, int, int, byte[], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)", "public org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters(java.lang.String, int, int, byte[], org.bouncycastle.pqc.crypto.mceliece.McElieceParameters)"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["java.lang.String", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters.getOIDString()", "public java.lang.String getOIDString()"], ["int", "org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters.getK()", "public int getK()"], ["org.bouncycastle.pqc.crypto.rainbow.Layer", "org.bouncycastle.pqc.crypto.rainbow.Layer(byte, byte, short[][][], short[][][], short[][], short[])", "public org.bouncycastle.pqc.crypto.rainbow.Layer(byte, byte, short[][][], short[][][], short[][], short[])"], ["org.bouncycastle.pqc.crypto.rainbow.Layer", "org.bouncycastle.pqc.crypto.rainbow.Layer(int, int, java.security.SecureRandom)", "public org.bouncycastle.pqc.crypto.rainbow.Layer(int, int, java.security.SecureRandom)"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.Layer.plugInVinegars(short[])", "public short[][] plugInVinegars(short[])"], ["int", "org.bouncycastle.pqc.crypto.rainbow.Layer.getVi()", "public int getVi()"], ["int", "org.bouncycastle.pqc.crypto.rainbow.Layer.getViNext()", "public int getViNext()"], ["int", "org.bouncycastle.pqc.crypto.rainbow.Layer.getOi()", "public int getOi()"], ["short[][][]", "org.bouncycastle.pqc.crypto.rainbow.Layer.getCoeffAlpha()", "public short[][][] getCoeffAlpha()"], ["short[][][]", "org.bouncycastle.pqc.crypto.rainbow.Layer.getCoeffBeta()", "public short[][][] getCoeffBeta()"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.Layer.getCoeffGamma()", "public short[][] getCoeffGamma()"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.Layer.getCoeffEta()", "public short[] getCoeffEta()"], ["boolean", "org.bouncycastle.pqc.crypto.rainbow.Layer.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.crypto.rainbow.Layer.hashCode()", "public int hashCode()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.rainbow.RainbowParameters)", "public org.bouncycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters(java.security.SecureRandom, org.bouncycastle.pqc.crypto.rainbow.RainbowParameters)"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters.getParameters()", "public org.bouncycastle.pqc.crypto.rainbow.RainbowParameters getParameters()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator()", "public org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator()"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.genKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()"], ["void", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.initialize(org.bouncycastle.crypto.KeyGenerationParameters)", "public void initialize(org.bouncycastle.crypto.KeyGenerationParameters)"], ["void", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.init(org.bouncycastle.crypto.KeyGenerationParameters)", "public void init(org.bouncycastle.crypto.KeyGenerationParameters)"], ["org.bouncycastle.crypto.AsymmetricCipherKeyPair", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.generateKeyPair()", "public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowKeyParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyParameters(boolean, int)", "public org.bouncycastle.pqc.crypto.rainbow.RainbowKeyParameters(boolean, int)"], ["int", "org.bouncycastle.pqc.crypto.rainbow.RainbowKeyParameters.getDocLength()", "public int getDocLength()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowParameters()", "public org.bouncycastle.pqc.crypto.rainbow.RainbowParameters()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowParameters(int[])", "public org.bouncycastle.pqc.crypto.rainbow.RainbowParameters(int[])"], ["int", "org.bouncycastle.pqc.crypto.rainbow.RainbowParameters.getNumOfLayers()", "public int getNumOfLayers()"], ["int", "org.bouncycastle.pqc.crypto.rainbow.RainbowParameters.getDocLength()", "public int getDocLength()"], ["int[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowParameters.getVi()", "public int[] getVi()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])", "public org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getB1()", "public short[] getB1()"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getInvA1()", "public short[][] getInvA1()"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getB2()", "public short[] getB2()"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getInvA2()", "public short[][] getInvA2()"], ["org.bouncycastle.pqc.crypto.rainbow.Layer[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getLayers()", "public org.bouncycastle.pqc.crypto.rainbow.Layer[] getLayers()"], ["int[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters.getVi()", "public int[] getVi()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters", "org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters(int, short[][], short[][], short[])", "public org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters(int, short[][], short[][], short[])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters.getCoeffQuadratic()", "public short[][] getCoeffQuadratic()"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters.getCoeffSingular()", "public short[][] getCoeffSingular()"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters.getCoeffScalar()", "public short[] getCoeffScalar()"], ["org.bouncycastle.pqc.crypto.rainbow.RainbowSigner", "org.bouncycastle.pqc.crypto.rainbow.RainbowSigner()", "public org.bouncycastle.pqc.crypto.rainbow.RainbowSigner()"], ["void", "org.bouncycastle.pqc.crypto.rainbow.RainbowSigner.init(boolean, org.bouncycastle.crypto.CipherParameters)", "public void init(boolean, org.bouncycastle.crypto.CipherParameters)"], ["byte[]", "org.bouncycastle.pqc.crypto.rainbow.RainbowSigner.generateSignature(byte[])", "public byte[] generateSignature(byte[])"], ["boolean", "org.bouncycastle.pqc.crypto.rainbow.RainbowSigner.verifySignature(byte[], byte[])", "public boolean verifySignature(byte[], byte[])"], ["org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField()", "public org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField()"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.solveEquation(short[][], short[])", "public short[] solveEquation(short[][], short[])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.inverse(short[][])", "public short[][] inverse(short[][])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.multiplyMatrix(short[][], short[][])", "public short[][] multiplyMatrix(short[][], short[][]) throws java.lang.RuntimeException"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.multiplyMatrix(short[][], short[])", "public short[] multiplyMatrix(short[][], short[]) throws java.lang.RuntimeException"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.addVect(short[], short[])", "public short[] addVect(short[], short[])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.multVects(short[], short[])", "public short[][] multVects(short[], short[])"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.multVect(short, short[])", "public short[] multVect(short, short[])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.multMatrix(short, short[][])", "public short[][] multMatrix(short, short[][])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.ComputeInField.addSquareMatrix(short[][], short[][])", "public short[][] addSquareMatrix(short[][], short[][])"], ["org.bouncycastle.pqc.crypto.rainbow.util.GF2Field", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field()", "public org.bouncycastle.pqc.crypto.rainbow.util.GF2Field()"], ["short", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field.addElem(short, short)", "public static short addElem(short, short)"], ["short", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field.invElem(short)", "public static short invElem(short)"], ["short", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field.multElem(short, short)", "public static short multElem(short, short)"], ["short", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field.getExp(short)", "public static short getExp(short)"], ["short", "org.bouncycastle.pqc.crypto.rainbow.util.GF2Field.getLog(short)", "public static short getLog(short)"], ["org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil()", "public org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil()"], ["int[]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArraytoInt(byte[])", "public static int[] convertArraytoInt(byte[])"], ["short[]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(byte[])", "public static short[] convertArray(byte[])"], ["short[][]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(byte[][])", "public static short[][] convertArray(byte[][])"], ["short[][][]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(byte[][][])", "public static short[][][] convertArray(byte[][][])"], ["byte[]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertIntArray(int[])", "public static byte[] convertIntArray(int[])"], ["byte[]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(short[])", "public static byte[] convertArray(short[])"], ["byte[][]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(short[][])", "public static byte[][] convertArray(short[][])"], ["byte[][][]", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.convertArray(short[][][])", "public static byte[][][] convertArray(short[][][])"], ["boolean", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.equals(short[], short[])", "public static boolean equals(short[], short[])"], ["boolean", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.equals(short[][], short[][])", "public static boolean equals(short[][], short[][])"], ["boolean", "org.bouncycastle.pqc.crypto.rainbow.util.RainbowUtil.equals(short[][][], short[][][])", "public static boolean equals(short[][][], short[][][])"], ["java.lang.Object", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider$1.run()", "public java.lang.Object run()"], ["org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider()", "public org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider()"], ["void", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.setParameter(java.lang.String, java.lang.Object)", "public void setParameter(java.lang.String, java.lang.Object)"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.hasAlgorithm(java.lang.String, java.lang.String)", "public boolean hasAlgorithm(java.lang.String, java.lang.String)"], ["void", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.addAlgorithm(java.lang.String, java.lang.String)", "public void addAlgorithm(java.lang.String, java.lang.String)"], ["void", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)", "public void addKeyInfoConverter(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public static java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider.getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public static java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["org.bouncycastle.pqc.jcajce.provider.McEliece$Mappings", "org.bouncycastle.pqc.jcajce.provider.McEliece$Mappings()", "public org.bouncycastle.pqc.jcajce.provider.McEliece$Mappings()"], ["void", "org.bouncycastle.pqc.jcajce.provider.McEliece$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.pqc.jcajce.provider.McEliece", "org.bouncycastle.pqc.jcajce.provider.McEliece()", "public org.bouncycastle.pqc.jcajce.provider.McEliece()"], ["org.bouncycastle.pqc.jcajce.provider.Rainbow$Mappings", "org.bouncycastle.pqc.jcajce.provider.Rainbow$Mappings()", "public org.bouncycastle.pqc.jcajce.provider.Rainbow$Mappings()"], ["void", "org.bouncycastle.pqc.jcajce.provider.Rainbow$Mappings.configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)", "public void configure(org.bouncycastle.jcajce.provider.config.ConfigurableProvider)"], ["org.bouncycastle.pqc.jcajce.provider.Rainbow", "org.bouncycastle.pqc.jcajce.provider.Rainbow()", "public org.bouncycastle.pqc.jcajce.provider.Rainbow()"], ["org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey(org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey(org.bouncycastle.pqc.crypto.gmss.GMSSPublicKeyParameters)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.getPublicKeyBytes()", "public byte[] getPublicKeyBytes()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.getParameterSet()", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters getParameterSet()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.toString()", "public java.lang.String toString()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getK()", "public int getK()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getP()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getOIDString()", "public java.lang.String getOIDString()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey.getMcElieceCCA2Parameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getMcElieceCCA2Parameters()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getK()", "public int getK()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getOIDString()", "public java.lang.String getOIDString()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey.getMcElieceCCA2Parameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getMcElieceCCA2Parameters()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey(org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getSInv()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getSInv()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getP1()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP1()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getP2()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP2()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getOIDString()", "public java.lang.String getOIDString()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.hashCode()", "public int hashCode()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey.getMcElieceParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters getMcElieceParameters()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey(org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getAlgorithm()", "public java.lang.String getAlgorithm()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getK()", "public int getK()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.toString()", "public java.lang.String toString()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getOIDString()", "public java.lang.String getOIDString()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.crypto.mceliece.McElieceParameters", "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey.getMcElieceParameters()", "public org.bouncycastle.pqc.crypto.mceliece.McElieceParameters getMcElieceParameters()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi()"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.generatePublic(java.security.spec.KeySpec)", "public java.security.PublicKey generatePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.generatePrivate(java.security.spec.KeySpec)", "public java.security.PrivateKey generatePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.spec.KeySpec", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.getKeySpec(java.security.Key, java.lang.Class)", "public java.security.spec.KeySpec getKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException"], ["java.security.Key", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.translateKey(java.security.Key)", "public java.security.Key translateKey(java.security.Key) throws java.security.InvalidKeyException"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.security.spec.InvalidKeySpecException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.security.spec.InvalidKeySpecException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2Primitives.encryptionPrimitive(org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector encryptionPrimitive(org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2Primitives.encryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector encryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2Primitives.decryptionPrimitive(org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector[] decryptionPrimitive(org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2Primitives.decryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector[] decryptionPrimitive(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters, org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki224", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki224()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki224()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki256", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki256()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki256()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki384", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki384()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki384()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki512", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki512()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi$McElieceFujisaki512()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.update(byte[], int, int)", "public byte[] update(byte[], int, int)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.doFinal(byte[], int, int)", "public byte[] doFinal(byte[], int, int) throws javax.crypto.BadPaddingException"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.getName()", "public java.lang.String getName()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.getKeySize(java.security.Key)", "public int getKeySize(java.security.Key) throws java.security.InvalidKeyException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi()"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.generatePublic(java.security.spec.KeySpec)", "public java.security.PublicKey generatePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.generatePrivate(java.security.spec.KeySpec)", "public java.security.PrivateKey generatePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.spec.KeySpec", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.getKeySpec(java.security.Key, java.lang.Class)", "public java.security.spec.KeySpec getKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException"], ["java.security.Key", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.translateKey(java.security.Key)", "public java.security.Key translateKey(java.security.Key) throws java.security.InvalidKeyException"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.security.spec.InvalidKeySpecException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.security.spec.InvalidKeySpecException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece()"], ["void", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece.initialize(java.security.spec.AlgorithmParameterSpec)", "public void initialize(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["java.security.KeyPair", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2(java.lang.String)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2(java.lang.String)"], ["void", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2.initialize(java.security.spec.AlgorithmParameterSpec)", "public void initialize(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["java.security.KeyPair", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi(java.lang.String)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi(java.lang.String)"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai224", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai224()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai224()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai256", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai256()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai256()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai384", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai384()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai384()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai512", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai512()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi$McElieceKobaraImai512()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.update(byte[], int, int)", "public byte[] update(byte[], int, int)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.doFinal(byte[], int, int)", "public byte[] doFinal(byte[], int, int) throws javax.crypto.BadPaddingException"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.getName()", "public java.lang.String getName()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.getKeySize(java.security.Key)", "public int getKeySize(java.security.Key) throws java.security.InvalidKeyException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.messageEncrypt()", "public byte[] messageEncrypt() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi.messageDecrypt()", "public byte[] messageDecrypt() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS224", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS224()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS224()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS256", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS256()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS256()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS384", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS384()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS384()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS512", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS512()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi$McEliecePKCS512()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi(org.bouncycastle.crypto.Digest, org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher)", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi(org.bouncycastle.crypto.Digest, org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi.getName()", "public java.lang.String getName()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi.getKeySize(java.security.Key)", "public int getKeySize(java.security.Key) throws java.security.InvalidKeyException"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval224", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval224()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval224()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval256", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval256()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval256()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval384", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval384()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval384()"], ["org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval512", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval512()", "public org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi$McEliecePointcheval512()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.update(byte[], int, int)", "public byte[] update(byte[], int, int)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.doFinal(byte[], int, int)", "public byte[] doFinal(byte[], int, int) throws javax.crypto.BadPaddingException"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.getName()", "public java.lang.String getName()"], ["int", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.getKeySize(java.security.Key)", "public int getKeySize(java.security.Key) throws java.security.InvalidKeyException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.messageEncrypt(byte[])", "public byte[] messageEncrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi.messageDecrypt(byte[])", "public byte[] messageDecrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchAlgorithmException"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey(org.bouncycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters)"], ["short[][]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getInvA1()", "public short[][] getInvA1()"], ["short[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getB1()", "public short[] getB1()"], ["short[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getB2()", "public short[] getB2()"], ["short[][]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getInvA2()", "public short[][] getInvA2()"], ["org.bouncycastle.pqc.crypto.rainbow.Layer[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getLayers()", "public org.bouncycastle.pqc.crypto.rainbow.Layer[] getLayers()"], ["int[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getVi()", "public int[] getVi()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getAlgorithm()", "public final java.lang.String getAlgorithm()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getEncoded()", "public byte[] getEncoded()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey.getFormat()", "public java.lang.String getFormat()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(int, short[][], short[][], short[])", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(int, short[][], short[][], short[])"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec)", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec)"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters)", "public org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey(org.bouncycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters)"], ["int", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getDocLength()", "public int getDocLength()"], ["short[][]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getCoeffQuadratic()", "public short[][] getCoeffQuadratic()"], ["short[][]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getCoeffSingular()", "public short[][] getCoeffSingular()"], ["short[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getCoeffScalar()", "public short[] getCoeffScalar()"], ["boolean", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getAlgorithm()", "public final java.lang.String getAlgorithm()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getFormat()", "public java.lang.String getFormat()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey.getEncoded()", "public byte[] getEncoded()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi()"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.engineGeneratePrivate(java.security.spec.KeySpec)", "public java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.engineGeneratePublic(java.security.spec.KeySpec)", "public java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException"], ["java.security.spec.KeySpec", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.engineGetKeySpec(java.security.Key, java.lang.Class)", "public final java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException"], ["java.security.Key", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.engineTranslateKey(java.security.Key)", "public final java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException"], ["java.security.PrivateKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException"], ["java.security.PublicKey", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi.generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi()"], ["void", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.initialize(int, java.security.SecureRandom)", "public void initialize(int, java.security.SecureRandom)"], ["void", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException"], ["java.security.KeyPair", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.generateKeyPair()", "public java.security.KeyPair generateKeyPair()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeysToParams", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeysToParams()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeysToParams()"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeysToParams.generatePublicKeyParameter(java.security.PublicKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.crypto.params.AsymmetricKeyParameter", "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeysToParams.generatePrivateKeyParameter(java.security.PrivateKey)", "public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha224", "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha224()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha224()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha256", "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha256()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha256()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha384", "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha384()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha384()"], ["org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha512", "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha512()", "public org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi$withSha512()"], ["org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher()", "public org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher()"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.getBlockSize()", "public final int getBlockSize()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.getIV()", "public final byte[] getIV()"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.getOutputSize(int)", "public final int getOutputSize(int)"], ["java.security.spec.AlgorithmParameterSpec", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.getParameters()", "public final java.security.spec.AlgorithmParameterSpec getParameters()"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initEncrypt(java.security.Key)", "public final void initEncrypt(java.security.Key) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initEncrypt(java.security.Key, java.security.SecureRandom)", "public final void initEncrypt(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec)", "public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initDecrypt(java.security.Key)", "public final void initDecrypt(java.security.Key) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.initDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec)", "public final void initDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.update(byte[], int, int)", "public final byte[] update(byte[], int, int)"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.update(byte[], int, int, byte[], int)", "public final int update(byte[], int, int, byte[], int)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.doFinal(byte[], int, int)", "public final byte[] doFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher.doFinal(byte[], int, int, byte[], int)", "public final int doFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher()", "public org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.getIV()", "public final byte[] getIV()"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.getBlockSize()", "public final int getBlockSize()"], ["java.security.spec.AlgorithmParameterSpec", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.getParameters()", "public final java.security.spec.AlgorithmParameterSpec getParameters()"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.getOutputSize(int)", "public final int getOutputSize(int)"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initEncrypt(java.security.Key)", "public final void initEncrypt(java.security.Key) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initEncrypt(java.security.Key, java.security.SecureRandom)", "public final void initEncrypt(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec)", "public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)", "public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initDecrypt(java.security.Key)", "public final void initDecrypt(java.security.Key) throws java.security.InvalidKeyException"], ["void", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.initDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec)", "public final void initDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.update(byte[], int, int, byte[], int)", "public final int update(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException"], ["int", "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher.doFinal(byte[], int, int, byte[], int)", "public final int doFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.BadPaddingException"], ["org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt", "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt()", "public org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt.update(byte[])", "public final byte[] update(byte[])"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt.doFinal()", "public final byte[] doFinal() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt.doFinal(byte[])", "public final byte[] doFinal(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException"], ["org.bouncycastle.pqc.jcajce.provider.util.KeyUtil", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil()", "public org.bouncycastle.pqc.jcajce.provider.util.KeyUtil()"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, byte[])"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil.getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)", "public static byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil.getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)", "public static byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable)"], ["byte[]", "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil.getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)", "public static byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"], ["org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec()", "public org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec()"], ["org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int)", "public org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int) throws java.security.InvalidParameterException"], ["org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int, int)", "public org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int, int) throws java.security.InvalidParameterException"], ["org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int, int, int)", "public org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec(int, int, int) throws java.security.InvalidParameterException"], ["int", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec.getM()", "public int getM()"], ["int", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec.getT()", "public int getT()"], ["int", "org.bouncycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec.getFieldPoly()", "public int getFieldPoly()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.jcajce.spec.GMSSKeySpec.getParameters()", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters getParameters()"], ["org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec(int[], byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec(int[], byte[][], byte[][], byte[][][], byte[][][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], org.bouncycastle.pqc.crypto.gmss.Treehash[][], java.util.Vector[], java.util.Vector[], java.util.Vector[][], java.util.Vector[][], byte[][][], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[], int[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[], byte[][], org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["int[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getIndex()", "public int[] getIndex()"], ["byte[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentSeed()", "public byte[][] getCurrentSeed()"], ["byte[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextNextSeed()", "public byte[][] getNextNextSeed()"], ["byte[][][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentAuthPath()", "public byte[][][] getCurrentAuthPath()"], ["byte[][][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextAuthPath()", "public byte[][][] getNextAuthPath()"], ["org.bouncycastle.pqc.crypto.gmss.Treehash[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentTreehash()", "public org.bouncycastle.pqc.crypto.gmss.Treehash[][] getCurrentTreehash()"], ["org.bouncycastle.pqc.crypto.gmss.Treehash[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextTreehash()", "public org.bouncycastle.pqc.crypto.gmss.Treehash[][] getNextTreehash()"], ["byte[][][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getKeep()", "public byte[][][] getKeep()"], ["java.util.Vector[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentStack()", "public java.util.Vector[] getCurrentStack()"], ["java.util.Vector[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextStack()", "public java.util.Vector[] getNextStack()"], ["java.util.Vector[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentRetain()", "public java.util.Vector[][] getCurrentRetain()"], ["java.util.Vector[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextRetain()", "public java.util.Vector[][] getNextRetain()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextNextLeaf()", "public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[] getNextNextLeaf()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getUpperLeaf()", "public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[] getUpperLeaf()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getUpperTreehashLeaf()", "public org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[] getUpperTreehashLeaf()"], ["int[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getMinTreehash()", "public int[] getMinTreehash()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextRootSig()", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[] getNextRootSig()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSParameters", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getGmssPS()", "public org.bouncycastle.pqc.crypto.gmss.GMSSParameters getGmssPS()"], ["byte[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextRoot()", "public byte[][] getNextRoot()"], ["org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getNextNextRoot()", "public org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[] getNextNextRoot()"], ["byte[][]", "org.bouncycastle.pqc.jcajce.spec.GMSSPrivateKeySpec.getCurrentRootSig()", "public byte[][] getCurrentRootSig()"], ["org.bouncycastle.pqc.jcajce.spec.GMSSPublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.GMSSPublicKeySpec(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)", "public org.bouncycastle.pqc.jcajce.spec.GMSSPublicKeySpec(byte[], org.bouncycastle.pqc.crypto.gmss.GMSSParameters)"], ["byte[]", "org.bouncycastle.pqc.jcajce.spec.GMSSPublicKeySpec.getPublicKey()", "public byte[] getPublicKey()"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec()", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec()"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec(java.lang.String)", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec(java.lang.String)"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2ParameterSpec.getMDName()", "public java.lang.String getMDName()"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[][])", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[][])"], ["int", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getP()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PrivateKeySpec.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec(java.lang.String, int, int, byte[])", "public org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec(java.lang.String, int, int, byte[])"], ["int", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec.getMatrixG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getMatrixG()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.spec.McElieceCCA2PublicKeySpec.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.Permutation, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[], byte[], byte[][])", "public org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec(java.lang.String, int, int, byte[], byte[], byte[], byte[], byte[], byte[], byte[][])"], ["int", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getK()", "public int getK()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getGoppaPoly()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getSInv()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getSInv()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getP1()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP1()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getP2()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getP2()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getH()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getH()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getQInv()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.spec.McEliecePrivateKeySpec.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec(java.lang.String, int, int, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec(java.lang.String, int, int, byte[])", "public org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec(java.lang.String, int, int, byte[])"], ["int", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec.getN()", "public int getN()"], ["int", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec.getT()", "public int getT()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["java.lang.String", "org.bouncycastle.pqc.jcajce.spec.McEliecePublicKeySpec.getOIDString()", "public java.lang.String getOIDString()"], ["org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec", "org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec()", "public org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec()"], ["org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec", "org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec(int[])", "public org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec(int[])"], ["int", "org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec.getNumOfLayers()", "public int getNumOfLayers()"], ["int", "org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec.getDocumentLength()", "public int getDocumentLength()"], ["int[]", "org.bouncycastle.pqc.jcajce.spec.RainbowParameterSpec.getVi()", "public int[] getVi()"], ["org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])", "public org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec(short[][], short[], short[][], short[], int[], org.bouncycastle.pqc.crypto.rainbow.Layer[])"], ["short[]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getB1()", "public short[] getB1()"], ["short[][]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getInvA1()", "public short[][] getInvA1()"], ["short[]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getB2()", "public short[] getB2()"], ["short[][]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getInvA2()", "public short[][] getInvA2()"], ["org.bouncycastle.pqc.crypto.rainbow.Layer[]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getLayers()", "public org.bouncycastle.pqc.crypto.rainbow.Layer[] getLayers()"], ["int[]", "org.bouncycastle.pqc.jcajce.spec.RainbowPrivateKeySpec.getVi()", "public int[] getVi()"], ["org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec", "org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec(int, short[][], short[][], short[])", "public org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec(int, short[][], short[][], short[])"], ["int", "org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec.getDocLength()", "public int getDocLength()"], ["short[][]", "org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec.getCoeffQuadratic()", "public short[][] getCoeffQuadratic()"], ["short[][]", "org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec.getCoeffSingular()", "public short[][] getCoeffSingular()"], ["short[]", "org.bouncycastle.pqc.jcajce.spec.RainbowPublicKeySpec.getCoeffScalar()", "public short[] getCoeffScalar()"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(int)", "public static byte[] I2OSP(int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(int, int)", "public static byte[] I2OSP(int, int) throws java.lang.ArithmeticException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(int, byte[], int)", "public static void I2OSP(int, byte[], int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(long)", "public static byte[] I2OSP(long)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(long, byte[], int)", "public static void I2OSP(long, byte[], int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.I2OSP(int, byte[], int, int)", "public static void I2OSP(int, byte[], int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.OS2IP(byte[])", "public static int OS2IP(byte[])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.OS2IP(byte[], int)", "public static int OS2IP(byte[], int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.OS2IP(byte[], int, int)", "public static int OS2IP(byte[], int, int)"], ["long", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.OS2LIP(byte[], int)", "public static long OS2LIP(byte[], int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.toByteArray(int[])", "public static byte[] toByteArray(int[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.toByteArray(int[], int)", "public static byte[] toByteArray(int[], int)"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.BigEndianConversions.toIntArray(byte[])", "public static int[] toIntArray(byte[])"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.equals(java.math.BigInteger[], java.math.BigInteger[])", "public static boolean equals(java.math.BigInteger[], java.math.BigInteger[])"], ["void", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.fill(java.math.BigInteger[], java.math.BigInteger)", "public static void fill(java.math.BigInteger[], java.math.BigInteger)"], ["java.math.BigInteger[]", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.subArray(java.math.BigInteger[], int, int)", "public static java.math.BigInteger[] subArray(java.math.BigInteger[], int, int)"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.toIntArray(java.math.BigInteger[])", "public static int[] toIntArray(java.math.BigInteger[])"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.toIntArrayModQ(int, java.math.BigInteger[])", "public static int[] toIntArrayModQ(int, java.math.BigInteger[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.BigIntUtils.toMinimalByteArray(java.math.BigInteger)", "public static byte[] toMinimalByteArray(java.math.BigInteger)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.equals(byte[], byte[])", "public static boolean equals(byte[], byte[])"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.equals(byte[][], byte[][])", "public static boolean equals(byte[][], byte[][])"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.equals(byte[][][], byte[][][])", "public static boolean equals(byte[][][], byte[][][])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.deepHashCode(byte[])", "public static int deepHashCode(byte[])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.deepHashCode(byte[][])", "public static int deepHashCode(byte[][])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.deepHashCode(byte[][][])", "public static int deepHashCode(byte[][][])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.clone(byte[])", "public static byte[] clone(byte[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.fromHexString(java.lang.String)", "public static byte[] fromHexString(java.lang.String)"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.toHexString(byte[])", "public static java.lang.String toHexString(byte[])"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.toHexString(byte[], java.lang.String, java.lang.String)", "public static java.lang.String toHexString(byte[], java.lang.String, java.lang.String)"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.toBinaryString(byte[])", "public static java.lang.String toBinaryString(byte[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.xor(byte[], byte[])", "public static byte[] xor(byte[], byte[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.concatenate(byte[], byte[])", "public static byte[] concatenate(byte[], byte[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.concatenate(byte[][])", "public static byte[] concatenate(byte[][])"], ["byte[][]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.split(byte[], int)", "public static byte[][] split(byte[], int) throws java.lang.ArrayIndexOutOfBoundsException"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.subArray(byte[], int, int)", "public static byte[] subArray(byte[], int, int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.subArray(byte[], int)", "public static byte[] subArray(byte[], int)"], ["char[]", "org.bouncycastle.pqc.math.linearalgebra.ByteUtils.toCharArray(byte[])", "public static char[] toCharArray(byte[])"], ["char[]", "org.bouncycastle.pqc.math.linearalgebra.CharUtils.clone(char[])", "public static char[] clone(char[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.CharUtils.toByteArray(char[])", "public static byte[] toByteArray(char[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.CharUtils.toByteArrayForPBE(char[])", "public static byte[] toByteArrayForPBE(char[])"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.CharUtils.equals(char[], char[])", "public static boolean equals(char[], char[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, int[][])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, int[][])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char, java.security.SecureRandom)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char, java.security.SecureRandom)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.createRandomRegularMatrixAndItsInverse(int, java.security.SecureRandom)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Matrix[] createRandomRegularMatrixAndItsInverse(int, java.security.SecureRandom)"], ["int[][]", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getIntArray()", "public int[][] getIntArray()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getLength()", "public int getLength()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getRow(int)", "public int[] getRow(int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getEncoded()", "public byte[] getEncoded()"], ["double", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getHammingWeight()", "public double getHammingWeight()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.isZero()", "public boolean isZero()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getLeftSubMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getLeftSubMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.extendLeftCompactForm()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix extendLeftCompactForm()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.getRightSubMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getRightSubMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.extendRightCompactForm()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix extendRightCompactForm()"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.computeTranspose()", "public org.bouncycastle.pqc.math.linearalgebra.Matrix computeTranspose()"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.computeInverse()", "public org.bouncycastle.pqc.math.linearalgebra.Matrix computeInverse()"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Matrix leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.leftMultiplyLeftCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiplyLeftCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix)", "public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix)"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.rightMultiplyRightCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiplyRightCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.util.Random)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.util.Random)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.lang.String)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.lang.String)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, int[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.math.BigInteger)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(int, java.math.BigInteger)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["java.lang.Object", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.clone()", "public java.lang.Object clone()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.getLength()", "public int getLength()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.toIntegerArray()", "public int[] toIntegerArray()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.toString(int)", "public java.lang.String toString(int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.toByteArray()", "public byte[] toByteArray()"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.toFlexiBigInt()", "public java.math.BigInteger toFlexiBigInt()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.assignOne()", "public void assignOne()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.assignX()", "public void assignX()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.assignAll()", "public void assignAll()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.assignZero()", "public void assignZero()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.randomize()", "public void randomize()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.randomize(java.util.Random)", "public void randomize(java.util.Random)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.isOne()", "public boolean isOne()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.addToThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public void addToThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.add(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial add(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.subtractFromThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public void subtractFromThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.subtract(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial subtract(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.increaseThis()", "public void increaseThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.increase()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial increase()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.multiplyClassic(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial multiplyClassic(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.multiply(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial multiply(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.remainder(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial remainder(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.quotient(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial quotient(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.divide(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial[] divide(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.gcd(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial gcd(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.isIrreducible()", "public boolean isIrreducible()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.reduceN()", "public void reduceN()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.expandN(int)", "public void expandN(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.squareThisBitwise()", "public void squareThisBitwise()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.squareThisPreCalc()", "public void squareThisPreCalc()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.vectorMult(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public boolean vectorMult(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.xor(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial xor(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.xorThisBy(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public void xorThisBy(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.setBit(int)", "public void setBit(int) throws java.lang.RuntimeException"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.getBit(int)", "public int getBit(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.resetBit(int)", "public void resetBit(int) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.xorBit(int)", "public void xorBit(int) throws java.lang.RuntimeException"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.testBit(int)", "public boolean testBit(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftLeft()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial shiftLeft()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftLeftThis()", "public void shiftLeftThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftLeft(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial shiftLeft(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftLeftAddThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial, int)", "public void shiftLeftAddThis(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial, int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftRight()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial shiftRight()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial.shiftRightThis()", "public void shiftRightThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, java.security.SecureRandom)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, java.security.SecureRandom)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int, java.security.SecureRandom)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int, java.security.SecureRandom)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector(org.bouncycastle.pqc.math.linearalgebra.GF2Vector)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(org.bouncycastle.pqc.math.linearalgebra.GF2Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.OS2VP(int, byte[])", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector OS2VP(int, byte[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.getEncoded()", "public byte[] getEncoded()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.getVecArray()", "public int[] getVecArray()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.getHammingWeight()", "public int getHammingWeight()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.isZero()", "public boolean isZero()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.getBit(int)", "public int getBit(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.setBit(int)", "public void setBit(int)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.add(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector add(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.multiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Vector multiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.extractVector(int[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractVector(int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.extractLeftVector(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractLeftVector(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.extractRightVector(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractRightVector(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mVector", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.toExtensionFieldVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mVector toExtensionFieldVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2Vector.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.math.linearalgebra.GF2mField(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.math.linearalgebra.GF2mField(int, int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField(int, int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.math.linearalgebra.GF2mField(byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField(byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.math.linearalgebra.GF2mField(org.bouncycastle.pqc.math.linearalgebra.GF2mField)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField(org.bouncycastle.pqc.math.linearalgebra.GF2mField)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getDegree()", "public int getDegree()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getPolynomial()", "public int getPolynomial()"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getEncoded()", "public byte[] getEncoded()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.add(int, int)", "public int add(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.mult(int, int)", "public int mult(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.exp(int, int)", "public int exp(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.inverse(int)", "public int inverse(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.sqRoot(int)", "public int sqRoot(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getRandomElement(java.security.SecureRandom)", "public int getRandomElement(java.security.SecureRandom)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getRandomNonZeroElement()", "public int getRandomNonZeroElement()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.getRandomNonZeroElement(java.security.SecureRandom)", "public int getRandomNonZeroElement(java.security.SecureRandom)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.isElementOfThisField(int)", "public boolean isElementOfThisField(int)"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.elementToStr(int)", "public java.lang.String elementToStr(int)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2mField.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.getEncoded()", "public byte[] getEncoded()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.isZero()", "public boolean isZero()"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.computeInverse()", "public org.bouncycastle.pqc.math.linearalgebra.Matrix computeInverse()"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix)", "public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix)"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mVector", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mVector", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mVector", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mVector)", "public org.bouncycastle.pqc.math.linearalgebra.GF2mVector(org.bouncycastle.pqc.math.linearalgebra.GF2mVector)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2mField", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.getField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2mField getField()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.getIntArrayForm()", "public int[] getIntArrayForm()"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.getEncoded()", "public byte[] getEncoded()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.isZero()", "public boolean isZero()"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.add(org.bouncycastle.pqc.math.linearalgebra.Vector)", "public org.bouncycastle.pqc.math.linearalgebra.Vector add(org.bouncycastle.pqc.math.linearalgebra.Vector)"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.multiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Vector multiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2mVector.toString()", "public java.lang.String toString()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nElement()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nField", "org.bouncycastle.pqc.math.linearalgebra.GF2nElement.getField()", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nField getField()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nElement.subtract(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public final org.bouncycastle.pqc.math.linearalgebra.GFElement subtract(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nElement.subtractFromThis(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public final void subtractFromThis(org.bouncycastle.pqc.math.linearalgebra.GFElement)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nElement.convert(org.bouncycastle.pqc.math.linearalgebra.GF2nField)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nElement convert(org.bouncycastle.pqc.math.linearalgebra.GF2nField) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nField", "org.bouncycastle.pqc.math.linearalgebra.GF2nField()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nField()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nField.getDegree()", "public final int getDegree()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nField.getFieldPolynomial()", "public final org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nField.equals(java.lang.Object)", "public final boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nField.hashCode()", "public int hashCode()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nField.convert(org.bouncycastle.pqc.math.linearalgebra.GF2nElement, org.bouncycastle.pqc.math.linearalgebra.GF2nField)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nElement convert(org.bouncycastle.pqc.math.linearalgebra.GF2nElement, org.bouncycastle.pqc.math.linearalgebra.GF2nField) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.util.Random)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.util.Random)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.math.BigInteger)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField, java.math.BigInteger)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement(org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement)"], ["java.lang.Object", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.ZERO(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.ONE(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement ONE(org.bouncycastle.pqc.math.linearalgebra.GF2nONBField)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.testRightmostBit()", "public boolean testRightmostBit()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.add(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public org.bouncycastle.pqc.math.linearalgebra.GFElement add(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.addToThis(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public void addToThis(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.increase()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement increase()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.increaseThis()", "public void increaseThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.multiply(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public org.bouncycastle.pqc.math.linearalgebra.GFElement multiply(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.multiplyThisBy(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public void multiplyThisBy(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.square()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement square()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.squareThis()", "public void squareThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.invert()", "public org.bouncycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.invertThis()", "public void invertThis() throws java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.squareRoot()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement squareRoot()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.squareRootThis()", "public void squareRootThis()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.trace()", "public int trace()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.solveQuadraticEquation()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation() throws java.lang.RuntimeException"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.toString(int)", "public java.lang.String toString(int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.toFlexiBigInt()", "public java.math.BigInteger toFlexiBigInt()"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement.toByteArray()", "public byte[] toByteArray()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nONBField", "org.bouncycastle.pqc.math.linearalgebra.GF2nONBField(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nONBField(int) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(int, org.bouncycastle.pqc.math.linearalgebra.GF2nElement)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(int, org.bouncycastle.pqc.math.linearalgebra.GF2nElement)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial, org.bouncycastle.pqc.math.linearalgebra.GF2nField)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial, org.bouncycastle.pqc.math.linearalgebra.GF2nField)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.assignZeroToElements()", "public final void assignZeroToElements()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.size()", "public final int size()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.getDegree()", "public final int getDegree()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.enlarge(int)", "public final void enlarge(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.shrink()", "public final void shrink()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.set(int, org.bouncycastle.pqc.math.linearalgebra.GF2nElement)", "public final void set(int, org.bouncycastle.pqc.math.linearalgebra.GF2nElement)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.at(int)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nElement at(int)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.isZero()", "public final boolean isZero()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.equals(java.lang.Object)", "public final boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.hashCode()", "public int hashCode()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.add(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial add(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.scalarMultiply(org.bouncycastle.pqc.math.linearalgebra.GF2nElement)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial scalarMultiply(org.bouncycastle.pqc.math.linearalgebra.GF2nElement) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.multiply(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial multiply(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.multiplyAndReduce(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial, org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial multiplyAndReduce(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial, org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.reduce(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial reduce(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.shiftThisLeft(int)", "public final void shiftThisLeft(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.shiftLeft(int)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial shiftLeft(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial[]", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.divide(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial[] divide(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.remainder(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial remainder(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.quotient(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial quotient(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial.gcd(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial)", "public final org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial gcd(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, java.util.Random)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, java.util.Random)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, int[])", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement)"], ["java.lang.Object", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.ZERO(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.ONE(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement ONE(org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.isZero()", "public boolean isZero()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.isOne()", "public boolean isOne()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.testRightmostBit()", "public boolean testRightmostBit()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.add(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public org.bouncycastle.pqc.math.linearalgebra.GFElement add(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.addToThis(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public void addToThis(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.increase()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement increase()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.increaseThis()", "public void increaseThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.multiply(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public org.bouncycastle.pqc.math.linearalgebra.GFElement multiply(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.multiplyThisBy(org.bouncycastle.pqc.math.linearalgebra.GFElement)", "public void multiplyThisBy(org.bouncycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GFElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.invert()", "public org.bouncycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.invertEEA()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertEEA() throws java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.invertSquare()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertSquare() throws java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.invertMAIA()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertMAIA() throws java.lang.ArithmeticException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.square()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement square()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareThis()", "public void squareThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement squareMatrix()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareThisMatrix()", "public void squareThisMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareBitwise()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement squareBitwise()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareThisBitwise()", "public void squareThisBitwise()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squarePreCalc()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement squarePreCalc()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareThisPreCalc()", "public void squareThisPreCalc()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.power(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement power(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareRoot()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement squareRoot()"], ["void", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.squareRootThis()", "public void squareRootThis()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nElement", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.solveQuadraticEquation()", "public org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation() throws java.lang.RuntimeException"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.trace()", "public int trace()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.toString(int)", "public java.lang.String toString(int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.toByteArray()", "public byte[] toByteArray()"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement.toFlexiBigInt()", "public java.math.BigInteger toFlexiBigInt()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int, boolean)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int, boolean)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int, org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)", "public org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField(int, org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial) throws java.lang.RuntimeException"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField.isTrinomial()", "public boolean isTrinomial()"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField.isPentanomial()", "public boolean isPentanomial()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField.getTc()", "public int getTc() throws java.lang.RuntimeException"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField.getPc()", "public int[] getPc() throws java.lang.RuntimeException"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial", "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField.getSquaringVector(int)", "public org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial getSquaringVector(int)"], ["org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe.getFirstMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getFirstMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe.getSecondMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getSecondMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe.getPermutation()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation getPermutation()"], ["org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MatrixSet", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MatrixSet(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, int[])", "public org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MatrixSet(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MatrixSet.getG()", "public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getG()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MatrixSet.getSetJ()", "public int[] getSetJ()"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Matrix", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode.createCanonicalCheckMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Matrix createCanonicalCheckMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode.computeSystematicForm(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, java.security.SecureRandom)", "public static org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe computeSystematicForm(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, java.security.SecureRandom)"], ["org.bouncycastle.pqc.math.linearalgebra.GF2Vector", "org.bouncycastle.pqc.math.linearalgebra.GoppaCode.syndromeDecode(org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector syndromeDecode(org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.equals(int[], int[])", "public static boolean equals(int[], int[])"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.clone(int[])", "public static int[] clone(int[])"], ["void", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.fill(int[], int)", "public static void fill(int[], int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.quicksort(int[])", "public static void quicksort(int[])"], ["void", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.quicksort(int[], int, int)", "public static void quicksort(int[], int, int)"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.subArray(int[], int, int)", "public static int[] subArray(int[], int, int)"], ["java.math.BigInteger[]", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.toFlexiBigIntArray(int[])", "public static java.math.BigInteger[] toFlexiBigIntArray(int[])"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.toString(int[])", "public static java.lang.String toString(int[])"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.IntUtils.toHexString(int[])", "public static java.lang.String toHexString(int[])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.jacobi(java.math.BigInteger, java.math.BigInteger)", "public static int jacobi(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.ressol(java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger ressol(java.math.BigInteger, java.math.BigInteger) throws java.lang.IllegalArgumentException"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.gcd(int, int)", "public static int gcd(int, int)"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.extGCD(int, int)", "public static int[] extGCD(int, int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.divideAndRound(java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger divideAndRound(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger[]", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.divideAndRound(java.math.BigInteger[], java.math.BigInteger)", "public static java.math.BigInteger[] divideAndRound(java.math.BigInteger[], java.math.BigInteger)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.ceilLog(java.math.BigInteger)", "public static int ceilLog(java.math.BigInteger)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.ceilLog(int)", "public static int ceilLog(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.ceilLog256(int)", "public static int ceilLog256(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.ceilLog256(long)", "public static int ceilLog256(long)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.floorLog(java.math.BigInteger)", "public static int floorLog(java.math.BigInteger)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.floorLog(int)", "public static int floorLog(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.maxPower(int)", "public static int maxPower(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.bitCount(int)", "public static int bitCount(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.order(int, int)", "public static int order(int, int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.reduceInto(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger reduceInto(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.pow(int, int)", "public static int pow(int, int)"], ["long", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.pow(long, int)", "public static long pow(long, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.modPow(int, int, int)", "public static int modPow(int, int, int)"], ["java.math.BigInteger[]", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.extgcd(java.math.BigInteger, java.math.BigInteger)", "public static java.math.BigInteger[] extgcd(java.math.BigInteger, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.leastCommonMultiple(java.math.BigInteger[])", "public static java.math.BigInteger leastCommonMultiple(java.math.BigInteger[])"], ["long", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.mod(long, long)", "public static long mod(long, long)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.modInverse(int, int)", "public static int modInverse(int, int)"], ["long", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.modInverse(long, long)", "public static long modInverse(long, long)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.isPower(int, int)", "public static int isPower(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.leastDiv(int)", "public static int leastDiv(int)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.isPrime(int)", "public static boolean isPrime(int)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.passesSmallPrimeTest(java.math.BigInteger)", "public static boolean passesSmallPrimeTest(java.math.BigInteger)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.nextSmallerPrime(int)", "public static int nextSmallerPrime(int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.nextProbablePrime(java.math.BigInteger, int)", "public static java.math.BigInteger nextProbablePrime(java.math.BigInteger, int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.nextProbablePrime(java.math.BigInteger)", "public static java.math.BigInteger nextProbablePrime(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.nextPrime(long)", "public static java.math.BigInteger nextPrime(long)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.binomial(int, int)", "public static java.math.BigInteger binomial(int, int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.randomize(java.math.BigInteger)", "public static java.math.BigInteger randomize(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.randomize(java.math.BigInteger, java.security.SecureRandom)", "public static java.math.BigInteger randomize(java.math.BigInteger, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.squareRoot(java.math.BigInteger)", "public static java.math.BigInteger squareRoot(java.math.BigInteger)"], ["float", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.intRoot(int, int)", "public static float intRoot(int, int)"], ["float", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.floatLog(float)", "public static float floatLog(float)"], ["float", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.floatPow(float, int)", "public static float floatPow(float, int)"], ["double", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.log(double)", "public static double log(double)"], ["double", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.log(long)", "public static double log(long)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.isIncreasing(int[])", "public static boolean isIncreasing(int[])"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.integerToOctets(java.math.BigInteger)", "public static byte[] integerToOctets(java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.octetsToInteger(byte[], int, int)", "public static java.math.BigInteger octetsToInteger(byte[], int, int)"], ["java.math.BigInteger", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.octetsToInteger(byte[])", "public static java.math.BigInteger octetsToInteger(byte[])"], ["void", "org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.OS2IP(byte[])", "public static int OS2IP(byte[])"], ["int", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.OS2IP(byte[], int)", "public static int OS2IP(byte[], int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.OS2IP(byte[], int, int)", "public static int OS2IP(byte[], int, int)"], ["long", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.OS2LIP(byte[], int)", "public static long OS2LIP(byte[], int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.I2OSP(int)", "public static byte[] I2OSP(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.I2OSP(int, byte[], int)", "public static void I2OSP(int, byte[], int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.I2OSP(int, byte[], int, int)", "public static void I2OSP(int, byte[], int, int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.I2OSP(long)", "public static byte[] I2OSP(long)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.I2OSP(long, byte[], int)", "public static void I2OSP(long, byte[], int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.toByteArray(int[], int)", "public static byte[] toByteArray(int[], int)"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.LittleEndianConversions.toIntArray(byte[])", "public static int[] toIntArray(byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.Matrix", "org.bouncycastle.pqc.math.linearalgebra.Matrix()", "public org.bouncycastle.pqc.math.linearalgebra.Matrix()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.Matrix.getNumRows()", "public int getNumRows()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.Matrix.getNumColumns()", "public int getNumColumns()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation(int)", "public org.bouncycastle.pqc.math.linearalgebra.Permutation(int)"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation(int[])", "public org.bouncycastle.pqc.math.linearalgebra.Permutation(int[])"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation(byte[])", "public org.bouncycastle.pqc.math.linearalgebra.Permutation(byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation(int, java.security.SecureRandom)", "public org.bouncycastle.pqc.math.linearalgebra.Permutation(int, java.security.SecureRandom)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.Permutation.getEncoded()", "public byte[] getEncoded()"], ["int[]", "org.bouncycastle.pqc.math.linearalgebra.Permutation.getVector()", "public int[] getVector()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation.computeInverse()", "public org.bouncycastle.pqc.math.linearalgebra.Permutation computeInverse()"], ["org.bouncycastle.pqc.math.linearalgebra.Permutation", "org.bouncycastle.pqc.math.linearalgebra.Permutation.rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)", "public org.bouncycastle.pqc.math.linearalgebra.Permutation rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.Permutation.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.Permutation.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.Permutation.hashCode()", "public int hashCode()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int, char, java.security.SecureRandom)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int, char, java.security.SecureRandom)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[])", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[])"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[])"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mVector)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mVector)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.getDegree()", "public int getDegree()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.getHeadCoefficient()", "public int getHeadCoefficient()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.getCoefficient(int)", "public int getCoefficient(int)"], ["byte[]", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.getEncoded()", "public byte[] getEncoded()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.evaluateAt(int)", "public int evaluateAt(int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.add(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM add(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.addToThis(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public void addToThis(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.addMonomial(int)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM addMonomial(int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.multWithElement(int)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithElement(int)"], ["void", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.multThisWithElement(int)", "public void multThisWithElement(int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.multWithMonomial(int)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithMonomial(int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.div(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] div(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.gcd(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM gcd(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.multiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.mod(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM mod(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modMultiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modMultiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modSquareMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modSquareRoot(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareRoot(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modSquareRootMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareRootMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modDiv(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modDiv(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modInverse(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modInverse(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.modPolynomialToFracton(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] modPolynomialToFracton(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.hashCode()", "public int hashCode()"], ["java.lang.String", "org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.toString()", "public java.lang.String toString()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.add(int, int)", "public static int add(int, int)"], ["long", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.multiply(int, int)", "public static long multiply(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.modMultiply(int, int, int)", "public static int modMultiply(int, int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.degree(int)", "public static int degree(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.degree(long)", "public static int degree(long)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.remainder(int, int)", "public static int remainder(int, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.rest(long, int)", "public static int rest(long, int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.gcd(int, int)", "public static int gcd(int, int)"], ["boolean", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.isIrreducible(int)", "public static boolean isIrreducible(int)"], ["int", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2.getIrreduciblePolynomial(int)", "public static int getIrreduciblePolynomial(int)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2m", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2m(org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2m(org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2m.getSquaringMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getSquaringMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]", "org.bouncycastle.pqc.math.linearalgebra.PolynomialRingGF2m.getSquareRootMatrix()", "public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getSquareRootMatrix()"], ["org.bouncycastle.pqc.math.linearalgebra.RandUtils", "org.bouncycastle.pqc.math.linearalgebra.RandUtils()", "public org.bouncycastle.pqc.math.linearalgebra.RandUtils()"], ["org.bouncycastle.pqc.math.linearalgebra.Vector", "org.bouncycastle.pqc.math.linearalgebra.Vector()", "public org.bouncycastle.pqc.math.linearalgebra.Vector()"], ["int", "org.bouncycastle.pqc.math.linearalgebra.Vector.getLength()", "public final int getLength()"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(boolean[], boolean[])", "public static boolean areEqual(boolean[], boolean[])"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(char[], char[])", "public static boolean areEqual(char[], char[])"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(byte[], byte[])", "public static boolean areEqual(byte[], byte[])"], ["boolean", "org.bouncycastle.util.Arrays.constantTimeAreEqual(byte[], byte[])", "public static boolean constantTimeAreEqual(byte[], byte[])"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(int[], int[])", "public static boolean areEqual(int[], int[])"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(long[], long[])", "public static boolean areEqual(long[], long[])"], ["boolean", "org.bouncycastle.util.Arrays.areEqual(java.lang.Object[], java.lang.Object[])", "public static boolean areEqual(java.lang.Object[], java.lang.Object[])"], ["boolean", "org.bouncycastle.util.Arrays.contains(short[], short)", "public static boolean contains(short[], short)"], ["boolean", "org.bouncycastle.util.Arrays.contains(int[], int)", "public static boolean contains(int[], int)"], ["void", "org.bouncycastle.util.Arrays.fill(byte[], byte)", "public static void fill(byte[], byte)"], ["void", "org.bouncycastle.util.Arrays.fill(char[], char)", "public static void fill(char[], char)"], ["void", "org.bouncycastle.util.Arrays.fill(long[], long)", "public static void fill(long[], long)"], ["void", "org.bouncycastle.util.Arrays.fill(short[], short)", "public static void fill(short[], short)"], ["void", "org.bouncycastle.util.Arrays.fill(int[], int)", "public static void fill(int[], int)"], ["int", "org.bouncycastle.util.Arrays.hashCode(byte[])", "public static int hashCode(byte[])"], ["int", "org.bouncycastle.util.Arrays.hashCode(byte[], int, int)", "public static int hashCode(byte[], int, int)"], ["int", "org.bouncycastle.util.Arrays.hashCode(char[])", "public static int hashCode(char[])"], ["int", "org.bouncycastle.util.Arrays.hashCode(int[][])", "public static int hashCode(int[][])"], ["int", "org.bouncycastle.util.Arrays.hashCode(int[])", "public static int hashCode(int[])"], ["int", "org.bouncycastle.util.Arrays.hashCode(int[], int, int)", "public static int hashCode(int[], int, int)"], ["int", "org.bouncycastle.util.Arrays.hashCode(short[][][])", "public static int hashCode(short[][][])"], ["int", "org.bouncycastle.util.Arrays.hashCode(short[][])", "public static int hashCode(short[][])"], ["int", "org.bouncycastle.util.Arrays.hashCode(short[])", "public static int hashCode(short[])"], ["int", "org.bouncycastle.util.Arrays.hashCode(java.lang.Object[])", "public static int hashCode(java.lang.Object[])"], ["byte[]", "org.bouncycastle.util.Arrays.clone(byte[])", "public static byte[] clone(byte[])"], ["byte[]", "org.bouncycastle.util.Arrays.clone(byte[], byte[])", "public static byte[] clone(byte[], byte[])"], ["byte[][]", "org.bouncycastle.util.Arrays.clone(byte[][])", "public static byte[][] clone(byte[][])"], ["byte[][][]", "org.bouncycastle.util.Arrays.clone(byte[][][])", "public static byte[][][] clone(byte[][][])"], ["int[]", "org.bouncycastle.util.Arrays.clone(int[])", "public static int[] clone(int[])"], ["long[]", "org.bouncycastle.util.Arrays.clone(long[])", "public static long[] clone(long[])"], ["long[]", "org.bouncycastle.util.Arrays.clone(long[], long[])", "public static long[] clone(long[], long[])"], ["short[]", "org.bouncycastle.util.Arrays.clone(short[])", "public static short[] clone(short[])"], ["java.math.BigInteger[]", "org.bouncycastle.util.Arrays.clone(java.math.BigInteger[])", "public static java.math.BigInteger[] clone(java.math.BigInteger[])"], ["byte[]", "org.bouncycastle.util.Arrays.copyOf(byte[], int)", "public static byte[] copyOf(byte[], int)"], ["char[]", "org.bouncycastle.util.Arrays.copyOf(char[], int)", "public static char[] copyOf(char[], int)"], ["int[]", "org.bouncycastle.util.Arrays.copyOf(int[], int)", "public static int[] copyOf(int[], int)"], ["long[]", "org.bouncycastle.util.Arrays.copyOf(long[], int)", "public static long[] copyOf(long[], int)"], ["java.math.BigInteger[]", "org.bouncycastle.util.Arrays.copyOf(java.math.BigInteger[], int)", "public static java.math.BigInteger[] copyOf(java.math.BigInteger[], int)"], ["byte[]", "org.bouncycastle.util.Arrays.copyOfRange(byte[], int, int)", "public static byte[] copyOfRange(byte[], int, int)"], ["int[]", "org.bouncycastle.util.Arrays.copyOfRange(int[], int, int)", "public static int[] copyOfRange(int[], int, int)"], ["long[]", "org.bouncycastle.util.Arrays.copyOfRange(long[], int, int)", "public static long[] copyOfRange(long[], int, int)"], ["java.math.BigInteger[]", "org.bouncycastle.util.Arrays.copyOfRange(java.math.BigInteger[], int, int)", "public static java.math.BigInteger[] copyOfRange(java.math.BigInteger[], int, int)"], ["byte[]", "org.bouncycastle.util.Arrays.append(byte[], byte)", "public static byte[] append(byte[], byte)"], ["short[]", "org.bouncycastle.util.Arrays.append(short[], short)", "public static short[] append(short[], short)"], ["int[]", "org.bouncycastle.util.Arrays.append(int[], int)", "public static int[] append(int[], int)"], ["byte[]", "org.bouncycastle.util.Arrays.concatenate(byte[], byte[])", "public static byte[] concatenate(byte[], byte[])"], ["byte[]", "org.bouncycastle.util.Arrays.concatenate(byte[], byte[], byte[])", "public static byte[] concatenate(byte[], byte[], byte[])"], ["byte[]", "org.bouncycastle.util.Arrays.concatenate(byte[], byte[], byte[], byte[])", "public static byte[] concatenate(byte[], byte[], byte[], byte[])"], ["int[]", "org.bouncycastle.util.Arrays.concatenate(int[], int[])", "public static int[] concatenate(int[], int[])"], ["byte[]", "org.bouncycastle.util.Arrays.prepend(byte[], byte)", "public static byte[] prepend(byte[], byte)"], ["short[]", "org.bouncycastle.util.Arrays.prepend(short[], short)", "public static short[] prepend(short[], short)"], ["int[]", "org.bouncycastle.util.Arrays.prepend(int[], int)", "public static int[] prepend(int[], int)"], ["byte[]", "org.bouncycastle.util.Arrays.reverse(byte[])", "public static byte[] reverse(byte[])"], ["org.bouncycastle.util.BigIntegers", "org.bouncycastle.util.BigIntegers()", "public org.bouncycastle.util.BigIntegers()"], ["byte[]", "org.bouncycastle.util.BigIntegers.asUnsignedByteArray(java.math.BigInteger)", "public static byte[] asUnsignedByteArray(java.math.BigInteger)"], ["byte[]", "org.bouncycastle.util.BigIntegers.asUnsignedByteArray(int, java.math.BigInteger)", "public static byte[] asUnsignedByteArray(int, java.math.BigInteger)"], ["java.math.BigInteger", "org.bouncycastle.util.BigIntegers.createRandomInRange(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)", "public static java.math.BigInteger createRandomInRange(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)"], ["java.math.BigInteger", "org.bouncycastle.util.BigIntegers.fromUnsignedByteArray(byte[])", "public static java.math.BigInteger fromUnsignedByteArray(byte[])"], ["java.math.BigInteger", "org.bouncycastle.util.BigIntegers.fromUnsignedByteArray(byte[], int, int)", "public static java.math.BigInteger fromUnsignedByteArray(byte[], int, int)"], ["org.bouncycastle.util.CollectionStore", "org.bouncycastle.util.CollectionStore(java.util.Collection)", "public org.bouncycastle.util.CollectionStore(java.util.Collection)"], ["java.util.Collection", "org.bouncycastle.util.CollectionStore.getMatches(org.bouncycastle.util.Selector)", "public java.util.Collection getMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.util.IPAddress", "org.bouncycastle.util.IPAddress()", "public org.bouncycastle.util.IPAddress()"], ["boolean", "org.bouncycastle.util.IPAddress.isValid(java.lang.String)", "public static boolean isValid(java.lang.String)"], ["boolean", "org.bouncycastle.util.IPAddress.isValidWithNetMask(java.lang.String)", "public static boolean isValidWithNetMask(java.lang.String)"], ["boolean", "org.bouncycastle.util.IPAddress.isValidIPv4(java.lang.String)", "public static boolean isValidIPv4(java.lang.String)"], ["boolean", "org.bouncycastle.util.IPAddress.isValidIPv4WithNetmask(java.lang.String)", "public static boolean isValidIPv4WithNetmask(java.lang.String)"], ["boolean", "org.bouncycastle.util.IPAddress.isValidIPv6WithNetmask(java.lang.String)", "public static boolean isValidIPv6WithNetmask(java.lang.String)"], ["boolean", "org.bouncycastle.util.IPAddress.isValidIPv6(java.lang.String)", "public static boolean isValidIPv6(java.lang.String)"], ["org.bouncycastle.util.Integers", "org.bouncycastle.util.Integers()", "public org.bouncycastle.util.Integers()"], ["int", "org.bouncycastle.util.Integers.rotateLeft(int, int)", "public static int rotateLeft(int, int)"], ["int", "org.bouncycastle.util.Integers.rotateRight(int, int)", "public static int rotateRight(int, int)"], ["java.lang.Integer", "org.bouncycastle.util.Integers.valueOf(int)", "public static java.lang.Integer valueOf(int)"], ["org.bouncycastle.util.MemoableResetException", "org.bouncycastle.util.MemoableResetException(java.lang.String)", "public org.bouncycastle.util.MemoableResetException(java.lang.String)"], ["org.bouncycastle.util.Pack", "org.bouncycastle.util.Pack()", "public org.bouncycastle.util.Pack()"], ["int", "org.bouncycastle.util.Pack.bigEndianToInt(byte[], int)", "public static int bigEndianToInt(byte[], int)"], ["void", "org.bouncycastle.util.Pack.bigEndianToInt(byte[], int, int[])", "public static void bigEndianToInt(byte[], int, int[])"], ["byte[]", "org.bouncycastle.util.Pack.intToBigEndian(int)", "public static byte[] intToBigEndian(int)"], ["void", "org.bouncycastle.util.Pack.intToBigEndian(int, byte[], int)", "public static void intToBigEndian(int, byte[], int)"], ["byte[]", "org.bouncycastle.util.Pack.intToBigEndian(int[])", "public static byte[] intToBigEndian(int[])"], ["void", "org.bouncycastle.util.Pack.intToBigEndian(int[], byte[], int)", "public static void intToBigEndian(int[], byte[], int)"], ["long", "org.bouncycastle.util.Pack.bigEndianToLong(byte[], int)", "public static long bigEndianToLong(byte[], int)"], ["void", "org.bouncycastle.util.Pack.bigEndianToLong(byte[], int, long[])", "public static void bigEndianToLong(byte[], int, long[])"], ["byte[]", "org.bouncycastle.util.Pack.longToBigEndian(long)", "public static byte[] longToBigEndian(long)"], ["void", "org.bouncycastle.util.Pack.longToBigEndian(long, byte[], int)", "public static void longToBigEndian(long, byte[], int)"], ["byte[]", "org.bouncycastle.util.Pack.longToBigEndian(long[])", "public static byte[] longToBigEndian(long[])"], ["void", "org.bouncycastle.util.Pack.longToBigEndian(long[], byte[], int)", "public static void longToBigEndian(long[], byte[], int)"], ["int", "org.bouncycastle.util.Pack.littleEndianToInt(byte[], int)", "public static int littleEndianToInt(byte[], int)"], ["void", "org.bouncycastle.util.Pack.littleEndianToInt(byte[], int, int[])", "public static void littleEndianToInt(byte[], int, int[])"], ["void", "org.bouncycastle.util.Pack.littleEndianToInt(byte[], int, int[], int, int)", "public static void littleEndianToInt(byte[], int, int[], int, int)"], ["byte[]", "org.bouncycastle.util.Pack.intToLittleEndian(int)", "public static byte[] intToLittleEndian(int)"], ["void", "org.bouncycastle.util.Pack.intToLittleEndian(int, byte[], int)", "public static void intToLittleEndian(int, byte[], int)"], ["byte[]", "org.bouncycastle.util.Pack.intToLittleEndian(int[])", "public static byte[] intToLittleEndian(int[])"], ["void", "org.bouncycastle.util.Pack.intToLittleEndian(int[], byte[], int)", "public static void intToLittleEndian(int[], byte[], int)"], ["long", "org.bouncycastle.util.Pack.littleEndianToLong(byte[], int)", "public static long littleEndianToLong(byte[], int)"], ["void", "org.bouncycastle.util.Pack.littleEndianToLong(byte[], int, long[])", "public static void littleEndianToLong(byte[], int, long[])"], ["byte[]", "org.bouncycastle.util.Pack.longToLittleEndian(long)", "public static byte[] longToLittleEndian(long)"], ["void", "org.bouncycastle.util.Pack.longToLittleEndian(long, byte[], int)", "public static void longToLittleEndian(long, byte[], int)"], ["byte[]", "org.bouncycastle.util.Pack.longToLittleEndian(long[])", "public static byte[] longToLittleEndian(long[])"], ["void", "org.bouncycastle.util.Pack.longToLittleEndian(long[], byte[], int)", "public static void longToLittleEndian(long[], byte[], int)"], ["org.bouncycastle.util.Shorts", "org.bouncycastle.util.Shorts()", "public org.bouncycastle.util.Shorts()"], ["java.lang.Short", "org.bouncycastle.util.Shorts.valueOf(short)", "public static java.lang.Short valueOf(short)"], ["org.bouncycastle.util.StoreException", "org.bouncycastle.util.StoreException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.util.StoreException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.util.StoreException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.util.StreamParsingException", "org.bouncycastle.util.StreamParsingException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.util.StreamParsingException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.util.StreamParsingException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.util.Strings", "org.bouncycastle.util.Strings()", "public org.bouncycastle.util.Strings()"], ["java.lang.String", "org.bouncycastle.util.Strings.fromUTF8ByteArray(byte[])", "public static java.lang.String fromUTF8ByteArray(byte[])"], ["byte[]", "org.bouncycastle.util.Strings.toUTF8ByteArray(java.lang.String)", "public static byte[] toUTF8ByteArray(java.lang.String)"], ["byte[]", "org.bouncycastle.util.Strings.toUTF8ByteArray(char[])", "public static byte[] toUTF8ByteArray(char[])"], ["void", "org.bouncycastle.util.Strings.toUTF8ByteArray(char[], java.io.OutputStream)", "public static void toUTF8ByteArray(char[], java.io.OutputStream) throws java.io.IOException"], ["java.lang.String", "org.bouncycastle.util.Strings.toUpperCase(java.lang.String)", "public static java.lang.String toUpperCase(java.lang.String)"], ["java.lang.String", "org.bouncycastle.util.Strings.toLowerCase(java.lang.String)", "public static java.lang.String toLowerCase(java.lang.String)"], ["byte[]", "org.bouncycastle.util.Strings.toByteArray(char[])", "public static byte[] toByteArray(char[])"], ["byte[]", "org.bouncycastle.util.Strings.toByteArray(java.lang.String)", "public static byte[] toByteArray(java.lang.String)"], ["int", "org.bouncycastle.util.Strings.toByteArray(java.lang.String, byte[], int)", "public static int toByteArray(java.lang.String, byte[], int)"], ["java.lang.String", "org.bouncycastle.util.Strings.fromByteArray(byte[])", "public static java.lang.String fromByteArray(byte[])"], ["char[]", "org.bouncycastle.util.Strings.asCharArray(byte[])", "public static char[] asCharArray(byte[])"], ["java.lang.String[]", "org.bouncycastle.util.Strings.split(java.lang.String, char)", "public static java.lang.String[] split(java.lang.String, char)"], ["org.bouncycastle.util.Times", "org.bouncycastle.util.Times()", "public org.bouncycastle.util.Times()"], ["long", "org.bouncycastle.util.Times.nanoTime()", "public static long nanoTime()"], ["org.bouncycastle.util.encoders.Base64", "org.bouncycastle.util.encoders.Base64()", "public org.bouncycastle.util.encoders.Base64()"], ["java.lang.String", "org.bouncycastle.util.encoders.Base64.toBase64String(byte[])", "public static java.lang.String toBase64String(byte[])"], ["java.lang.String", "org.bouncycastle.util.encoders.Base64.toBase64String(byte[], int, int)", "public static java.lang.String toBase64String(byte[], int, int)"], ["byte[]", "org.bouncycastle.util.encoders.Base64.encode(byte[])", "public static byte[] encode(byte[])"], ["byte[]", "org.bouncycastle.util.encoders.Base64.encode(byte[], int, int)", "public static byte[] encode(byte[], int, int)"], ["int", "org.bouncycastle.util.encoders.Base64.encode(byte[], java.io.OutputStream)", "public static int encode(byte[], java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.Base64.encode(byte[], int, int, java.io.OutputStream)", "public static int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.encoders.Base64.decode(byte[])", "public static byte[] decode(byte[])"], ["byte[]", "org.bouncycastle.util.encoders.Base64.decode(java.lang.String)", "public static byte[] decode(java.lang.String)"], ["int", "org.bouncycastle.util.encoders.Base64.decode(java.lang.String, java.io.OutputStream)", "public static int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.encoders.Base64Encoder", "org.bouncycastle.util.encoders.Base64Encoder()", "public org.bouncycastle.util.encoders.Base64Encoder()"], ["int", "org.bouncycastle.util.encoders.Base64Encoder.encode(byte[], int, int, java.io.OutputStream)", "public int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.Base64Encoder.decode(byte[], int, int, java.io.OutputStream)", "public int decode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.Base64Encoder.decode(java.lang.String, java.io.OutputStream)", "public int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.encoders.BufferedDecoder", "org.bouncycastle.util.encoders.BufferedDecoder(org.bouncycastle.util.encoders.Translator, int)", "public org.bouncycastle.util.encoders.BufferedDecoder(org.bouncycastle.util.encoders.Translator, int)"], ["int", "org.bouncycastle.util.encoders.BufferedDecoder.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int)"], ["int", "org.bouncycastle.util.encoders.BufferedDecoder.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["org.bouncycastle.util.encoders.BufferedEncoder", "org.bouncycastle.util.encoders.BufferedEncoder(org.bouncycastle.util.encoders.Translator, int)", "public org.bouncycastle.util.encoders.BufferedEncoder(org.bouncycastle.util.encoders.Translator, int)"], ["int", "org.bouncycastle.util.encoders.BufferedEncoder.processByte(byte, byte[], int)", "public int processByte(byte, byte[], int)"], ["int", "org.bouncycastle.util.encoders.BufferedEncoder.processBytes(byte[], int, int, byte[], int)", "public int processBytes(byte[], int, int, byte[], int)"], ["java.lang.Throwable", "org.bouncycastle.util.encoders.DecoderException.getCause()", "public java.lang.Throwable getCause()"], ["java.lang.Throwable", "org.bouncycastle.util.encoders.EncoderException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.util.encoders.Hex", "org.bouncycastle.util.encoders.Hex()", "public org.bouncycastle.util.encoders.Hex()"], ["java.lang.String", "org.bouncycastle.util.encoders.Hex.toHexString(byte[])", "public static java.lang.String toHexString(byte[])"], ["java.lang.String", "org.bouncycastle.util.encoders.Hex.toHexString(byte[], int, int)", "public static java.lang.String toHexString(byte[], int, int)"], ["byte[]", "org.bouncycastle.util.encoders.Hex.encode(byte[])", "public static byte[] encode(byte[])"], ["byte[]", "org.bouncycastle.util.encoders.Hex.encode(byte[], int, int)", "public static byte[] encode(byte[], int, int)"], ["int", "org.bouncycastle.util.encoders.Hex.encode(byte[], java.io.OutputStream)", "public static int encode(byte[], java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.Hex.encode(byte[], int, int, java.io.OutputStream)", "public static int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.encoders.Hex.decode(byte[])", "public static byte[] decode(byte[])"], ["byte[]", "org.bouncycastle.util.encoders.Hex.decode(java.lang.String)", "public static byte[] decode(java.lang.String)"], ["int", "org.bouncycastle.util.encoders.Hex.decode(java.lang.String, java.io.OutputStream)", "public static int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.encoders.HexEncoder", "org.bouncycastle.util.encoders.HexEncoder()", "public org.bouncycastle.util.encoders.HexEncoder()"], ["int", "org.bouncycastle.util.encoders.HexEncoder.encode(byte[], int, int, java.io.OutputStream)", "public int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.HexEncoder.decode(byte[], int, int, java.io.OutputStream)", "public int decode(byte[], int, int, java.io.OutputStream) throws java.io.IOException"], ["int", "org.bouncycastle.util.encoders.HexEncoder.decode(java.lang.String, java.io.OutputStream)", "public int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.encoders.HexTranslator", "org.bouncycastle.util.encoders.HexTranslator()", "public org.bouncycastle.util.encoders.HexTranslator()"], ["int", "org.bouncycastle.util.encoders.HexTranslator.getEncodedBlockSize()", "public int getEncodedBlockSize()"], ["int", "org.bouncycastle.util.encoders.HexTranslator.encode(byte[], int, int, byte[], int)", "public int encode(byte[], int, int, byte[], int)"], ["int", "org.bouncycastle.util.encoders.HexTranslator.getDecodedBlockSize()", "public int getDecodedBlockSize()"], ["int", "org.bouncycastle.util.encoders.HexTranslator.decode(byte[], int, int, byte[], int)", "public int decode(byte[], int, int, byte[], int)"], ["org.bouncycastle.util.encoders.UrlBase64", "org.bouncycastle.util.encoders.UrlBase64()", "public org.bouncycastle.util.encoders.UrlBase64()"], ["byte[]", "org.bouncycastle.util.encoders.UrlBase64.encode(byte[])", "public static byte[] encode(byte[])"], ["int", "org.bouncycastle.util.encoders.UrlBase64.encode(byte[], java.io.OutputStream)", "public static int encode(byte[], java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.encoders.UrlBase64.decode(byte[])", "public static byte[] decode(byte[])"], ["int", "org.bouncycastle.util.encoders.UrlBase64.decode(byte[], java.io.OutputStream)", "public static int decode(byte[], java.io.OutputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.encoders.UrlBase64.decode(java.lang.String)", "public static byte[] decode(java.lang.String)"], ["int", "org.bouncycastle.util.encoders.UrlBase64.decode(java.lang.String, java.io.OutputStream)", "public static int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.encoders.UrlBase64Encoder", "org.bouncycastle.util.encoders.UrlBase64Encoder()", "public org.bouncycastle.util.encoders.UrlBase64Encoder()"], ["org.bouncycastle.util.io.BufferingOutputStream", "org.bouncycastle.util.io.BufferingOutputStream(java.io.OutputStream)", "public org.bouncycastle.util.io.BufferingOutputStream(java.io.OutputStream)"], ["org.bouncycastle.util.io.BufferingOutputStream", "org.bouncycastle.util.io.BufferingOutputStream(java.io.OutputStream, int)", "public org.bouncycastle.util.io.BufferingOutputStream(java.io.OutputStream, int)"], ["void", "org.bouncycastle.util.io.BufferingOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.BufferingOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.BufferingOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.bouncycastle.util.io.BufferingOutputStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.util.io.StreamOverflowException", "org.bouncycastle.util.io.StreamOverflowException(java.lang.String)", "public org.bouncycastle.util.io.StreamOverflowException(java.lang.String)"], ["org.bouncycastle.util.io.Streams", "org.bouncycastle.util.io.Streams()", "public org.bouncycastle.util.io.Streams()"], ["void", "org.bouncycastle.util.io.Streams.drain(java.io.InputStream)", "public static void drain(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.io.Streams.readAll(java.io.InputStream)", "public static byte[] readAll(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.bouncycastle.util.io.Streams.readAllLimited(java.io.InputStream, int)", "public static byte[] readAllLimited(java.io.InputStream, int) throws java.io.IOException"], ["int", "org.bouncycastle.util.io.Streams.readFully(java.io.InputStream, byte[])", "public static int readFully(java.io.InputStream, byte[]) throws java.io.IOException"], ["int", "org.bouncycastle.util.io.Streams.readFully(java.io.InputStream, byte[], int, int)", "public static int readFully(java.io.InputStream, byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.Streams.pipeAll(java.io.InputStream, java.io.OutputStream)", "public static void pipeAll(java.io.InputStream, java.io.OutputStream) throws java.io.IOException"], ["long", "org.bouncycastle.util.io.Streams.pipeAllLimited(java.io.InputStream, long, java.io.OutputStream)", "public static long pipeAllLimited(java.io.InputStream, long, java.io.OutputStream) throws java.io.IOException"], ["org.bouncycastle.util.io.TeeInputStream", "org.bouncycastle.util.io.TeeInputStream(java.io.InputStream, java.io.OutputStream)", "public org.bouncycastle.util.io.TeeInputStream(java.io.InputStream, java.io.OutputStream)"], ["int", "org.bouncycastle.util.io.TeeInputStream.read(byte[])", "public int read(byte[]) throws java.io.IOException"], ["int", "org.bouncycastle.util.io.TeeInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "org.bouncycastle.util.io.TeeInputStream.read()", "public int read() throws java.io.IOException"], ["void", "org.bouncycastle.util.io.TeeInputStream.close()", "public void close() throws java.io.IOException"], ["java.io.OutputStream", "org.bouncycastle.util.io.TeeInputStream.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["org.bouncycastle.util.io.TeeOutputStream", "org.bouncycastle.util.io.TeeOutputStream(java.io.OutputStream, java.io.OutputStream)", "public org.bouncycastle.util.io.TeeOutputStream(java.io.OutputStream, java.io.OutputStream)"], ["void", "org.bouncycastle.util.io.TeeOutputStream.write(byte[])", "public void write(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.TeeOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.TeeOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.bouncycastle.util.io.TeeOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.bouncycastle.util.io.TeeOutputStream.close()", "public void close() throws java.io.IOException"], ["org.bouncycastle.util.io.pem.PemGenerationException", "org.bouncycastle.util.io.pem.PemGenerationException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.util.io.pem.PemGenerationException(java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.util.io.pem.PemGenerationException", "org.bouncycastle.util.io.pem.PemGenerationException(java.lang.String)", "public org.bouncycastle.util.io.pem.PemGenerationException(java.lang.String)"], ["java.lang.Throwable", "org.bouncycastle.util.io.pem.PemGenerationException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.util.io.pem.PemHeader", "org.bouncycastle.util.io.pem.PemHeader(java.lang.String, java.lang.String)", "public org.bouncycastle.util.io.pem.PemHeader(java.lang.String, java.lang.String)"], ["java.lang.String", "org.bouncycastle.util.io.pem.PemHeader.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.bouncycastle.util.io.pem.PemHeader.getValue()", "public java.lang.String getValue()"], ["int", "org.bouncycastle.util.io.pem.PemHeader.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.util.io.pem.PemHeader.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.bouncycastle.util.io.pem.PemObject", "org.bouncycastle.util.io.pem.PemObject(java.lang.String, byte[])", "public org.bouncycastle.util.io.pem.PemObject(java.lang.String, byte[])"], ["org.bouncycastle.util.io.pem.PemObject", "org.bouncycastle.util.io.pem.PemObject(java.lang.String, java.util.List, byte[])", "public org.bouncycastle.util.io.pem.PemObject(java.lang.String, java.util.List, byte[])"], ["java.lang.String", "org.bouncycastle.util.io.pem.PemObject.getType()", "public java.lang.String getType()"], ["java.util.List", "org.bouncycastle.util.io.pem.PemObject.getHeaders()", "public java.util.List getHeaders()"], ["byte[]", "org.bouncycastle.util.io.pem.PemObject.getContent()", "public byte[] getContent()"], ["org.bouncycastle.util.io.pem.PemObject", "org.bouncycastle.util.io.pem.PemObject.generate()", "public org.bouncycastle.util.io.pem.PemObject generate() throws org.bouncycastle.util.io.pem.PemGenerationException"], ["org.bouncycastle.util.io.pem.PemReader", "org.bouncycastle.util.io.pem.PemReader(java.io.Reader)", "public org.bouncycastle.util.io.pem.PemReader(java.io.Reader)"], ["org.bouncycastle.util.io.pem.PemObject", "org.bouncycastle.util.io.pem.PemReader.readPemObject()", "public org.bouncycastle.util.io.pem.PemObject readPemObject() throws java.io.IOException"], ["org.bouncycastle.util.io.pem.PemWriter", "org.bouncycastle.util.io.pem.PemWriter(java.io.Writer)", "public org.bouncycastle.util.io.pem.PemWriter(java.io.Writer)"], ["int", "org.bouncycastle.util.io.pem.PemWriter.getOutputSize(org.bouncycastle.util.io.pem.PemObject)", "public int getOutputSize(org.bouncycastle.util.io.pem.PemObject)"], ["void", "org.bouncycastle.util.io.pem.PemWriter.writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator)", "public void writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator) throws java.io.IOException"], ["org.bouncycastle.util.test.FixedSecureRandom", "org.bouncycastle.util.test.FixedSecureRandom(byte[])", "public org.bouncycastle.util.test.FixedSecureRandom(byte[])"], ["org.bouncycastle.util.test.FixedSecureRandom", "org.bouncycastle.util.test.FixedSecureRandom(byte[][])", "public org.bouncycastle.util.test.FixedSecureRandom(byte[][])"], ["org.bouncycastle.util.test.FixedSecureRandom", "org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[])", "public org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[])"], ["org.bouncycastle.util.test.FixedSecureRandom", "org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[][])", "public org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[][])"], ["void", "org.bouncycastle.util.test.FixedSecureRandom.nextBytes(byte[])", "public void nextBytes(byte[])"], ["int", "org.bouncycastle.util.test.FixedSecureRandom.nextInt()", "public int nextInt()"], ["long", "org.bouncycastle.util.test.FixedSecureRandom.nextLong()", "public long nextLong()"], ["boolean", "org.bouncycastle.util.test.FixedSecureRandom.isExhausted()", "public boolean isExhausted()"], ["long", "org.bouncycastle.util.test.NumberParsing.decodeLongFromHex(java.lang.String)", "public static long decodeLongFromHex(java.lang.String)"], ["int", "org.bouncycastle.util.test.NumberParsing.decodeIntFromHex(java.lang.String)", "public static int decodeIntFromHex(java.lang.String)"], ["org.bouncycastle.util.test.SimpleTest", "org.bouncycastle.util.test.SimpleTest()", "public org.bouncycastle.util.test.SimpleTest()"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.SimpleTest.perform()", "public org.bouncycastle.util.test.TestResult perform()"], ["org.bouncycastle.util.test.SimpleTestResult", "org.bouncycastle.util.test.SimpleTestResult(boolean, java.lang.String)", "public org.bouncycastle.util.test.SimpleTestResult(boolean, java.lang.String)"], ["org.bouncycastle.util.test.SimpleTestResult", "org.bouncycastle.util.test.SimpleTestResult(boolean, java.lang.String, java.lang.Throwable)", "public org.bouncycastle.util.test.SimpleTestResult(boolean, java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.SimpleTestResult.successful(org.bouncycastle.util.test.Test, java.lang.String)", "public static org.bouncycastle.util.test.TestResult successful(org.bouncycastle.util.test.Test, java.lang.String)"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.SimpleTestResult.failed(org.bouncycastle.util.test.Test, java.lang.String)", "public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String)"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.SimpleTestResult.failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Throwable)", "public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Throwable)"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.SimpleTestResult.failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Object, java.lang.Object)", "public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Object, java.lang.Object)"], ["java.lang.String", "org.bouncycastle.util.test.SimpleTestResult.failedMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public static java.lang.String failedMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.bouncycastle.util.test.SimpleTestResult.isSuccessful()", "public boolean isSuccessful()"], ["java.lang.String", "org.bouncycastle.util.test.SimpleTestResult.toString()", "public java.lang.String toString()"], ["java.lang.Throwable", "org.bouncycastle.util.test.SimpleTestResult.getException()", "public java.lang.Throwable getException()"], ["org.bouncycastle.util.test.TestFailedException", "org.bouncycastle.util.test.TestFailedException(org.bouncycastle.util.test.TestResult)", "public org.bouncycastle.util.test.TestFailedException(org.bouncycastle.util.test.TestResult)"], ["org.bouncycastle.util.test.TestResult", "org.bouncycastle.util.test.TestFailedException.getResult()", "public org.bouncycastle.util.test.TestResult getResult()"], ["org.bouncycastle.util.test.UncloseableOutputStream", "org.bouncycastle.util.test.UncloseableOutputStream(java.io.OutputStream)", "public org.bouncycastle.util.test.UncloseableOutputStream(java.io.OutputStream)"], ["void", "org.bouncycastle.util.test.UncloseableOutputStream.close()", "public void close()"], ["void", "org.bouncycastle.util.test.UncloseableOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(org.bouncycastle.jce.X509Principal, java.math.BigInteger)", "public org.bouncycastle.x509.AttributeCertificateHolder(org.bouncycastle.jce.X509Principal, java.math.BigInteger)"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(javax.security.auth.x500.X500Principal, java.math.BigInteger)", "public org.bouncycastle.x509.AttributeCertificateHolder(javax.security.auth.x500.X500Principal, java.math.BigInteger)"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(java.security.cert.X509Certificate)", "public org.bouncycastle.x509.AttributeCertificateHolder(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(org.bouncycastle.jce.X509Principal)", "public org.bouncycastle.x509.AttributeCertificateHolder(org.bouncycastle.jce.X509Principal)"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(javax.security.auth.x500.X500Principal)", "public org.bouncycastle.x509.AttributeCertificateHolder(javax.security.auth.x500.X500Principal)"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.AttributeCertificateHolder(int, java.lang.String, java.lang.String, byte[])", "public org.bouncycastle.x509.AttributeCertificateHolder(int, java.lang.String, java.lang.String, byte[])"], ["int", "org.bouncycastle.x509.AttributeCertificateHolder.getDigestedObjectType()", "public int getDigestedObjectType()"], ["java.lang.String", "org.bouncycastle.x509.AttributeCertificateHolder.getDigestAlgorithm()", "public java.lang.String getDigestAlgorithm()"], ["byte[]", "org.bouncycastle.x509.AttributeCertificateHolder.getObjectDigest()", "public byte[] getObjectDigest()"], ["java.lang.String", "org.bouncycastle.x509.AttributeCertificateHolder.getOtherObjectTypeID()", "public java.lang.String getOtherObjectTypeID()"], ["java.security.Principal[]", "org.bouncycastle.x509.AttributeCertificateHolder.getEntityNames()", "public java.security.Principal[] getEntityNames()"], ["java.security.Principal[]", "org.bouncycastle.x509.AttributeCertificateHolder.getIssuer()", "public java.security.Principal[] getIssuer()"], ["java.math.BigInteger", "org.bouncycastle.x509.AttributeCertificateHolder.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["java.lang.Object", "org.bouncycastle.x509.AttributeCertificateHolder.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.x509.AttributeCertificateHolder.match(java.security.cert.Certificate)", "public boolean match(java.security.cert.Certificate)"], ["boolean", "org.bouncycastle.x509.AttributeCertificateHolder.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.x509.AttributeCertificateHolder.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.x509.AttributeCertificateHolder.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["org.bouncycastle.x509.AttributeCertificateIssuer", "org.bouncycastle.x509.AttributeCertificateIssuer(org.bouncycastle.asn1.x509.AttCertIssuer)", "public org.bouncycastle.x509.AttributeCertificateIssuer(org.bouncycastle.asn1.x509.AttCertIssuer)"], ["org.bouncycastle.x509.AttributeCertificateIssuer", "org.bouncycastle.x509.AttributeCertificateIssuer(javax.security.auth.x500.X500Principal)", "public org.bouncycastle.x509.AttributeCertificateIssuer(javax.security.auth.x500.X500Principal) throws java.io.IOException"], ["org.bouncycastle.x509.AttributeCertificateIssuer", "org.bouncycastle.x509.AttributeCertificateIssuer(org.bouncycastle.jce.X509Principal)", "public org.bouncycastle.x509.AttributeCertificateIssuer(org.bouncycastle.jce.X509Principal)"], ["java.security.Principal[]", "org.bouncycastle.x509.AttributeCertificateIssuer.getPrincipals()", "public java.security.Principal[] getPrincipals()"], ["java.lang.Object", "org.bouncycastle.x509.AttributeCertificateIssuer.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.x509.AttributeCertificateIssuer.match(java.security.cert.Certificate)", "public boolean match(java.security.cert.Certificate)"], ["boolean", "org.bouncycastle.x509.AttributeCertificateIssuer.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.x509.AttributeCertificateIssuer.hashCode()", "public int hashCode()"], ["boolean", "org.bouncycastle.x509.AttributeCertificateIssuer.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["org.bouncycastle.x509.CertPathReviewerException", "org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable)", "public org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable)"], ["org.bouncycastle.x509.CertPathReviewerException", "org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle)", "public org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle)"], ["org.bouncycastle.x509.CertPathReviewerException", "org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable, java.security.cert.CertPath, int)", "public org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.lang.Throwable, java.security.cert.CertPath, int)"], ["org.bouncycastle.x509.CertPathReviewerException", "org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.security.cert.CertPath, int)", "public org.bouncycastle.x509.CertPathReviewerException(org.bouncycastle.i18n.ErrorBundle, java.security.cert.CertPath, int)"], ["java.security.cert.CertPath", "org.bouncycastle.x509.CertPathReviewerException.getCertPath()", "public java.security.cert.CertPath getCertPath()"], ["int", "org.bouncycastle.x509.CertPathReviewerException.getIndex()", "public int getIndex()"], ["java.lang.Throwable", "org.bouncycastle.x509.ExtCertificateEncodingException.getCause()", "public java.lang.Throwable getCause()"], ["java.util.Set", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.getExcludedCerts()", "public java.util.Set getExcludedCerts()"], ["void", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.setExcludedCerts(java.util.Set)", "public void setExcludedCerts(java.util.Set)"], ["org.bouncycastle.x509.ExtendedPKIXBuilderParameters", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters(java.util.Set, org.bouncycastle.util.Selector)", "public org.bouncycastle.x509.ExtendedPKIXBuilderParameters(java.util.Set, org.bouncycastle.util.Selector) throws java.security.InvalidAlgorithmParameterException"], ["void", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.setMaxPathLength(int)", "public void setMaxPathLength(int)"], ["int", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.getMaxPathLength()", "public int getMaxPathLength()"], ["java.lang.Object", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.x509.ExtendedPKIXParameters", "org.bouncycastle.x509.ExtendedPKIXBuilderParameters.getInstance(java.security.cert.PKIXParameters)", "public static org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)"], ["org.bouncycastle.x509.ExtendedPKIXParameters", "org.bouncycastle.x509.ExtendedPKIXParameters(java.util.Set)", "public org.bouncycastle.x509.ExtendedPKIXParameters(java.util.Set) throws java.security.InvalidAlgorithmParameterException"], ["org.bouncycastle.x509.ExtendedPKIXParameters", "org.bouncycastle.x509.ExtendedPKIXParameters.getInstance(java.security.cert.PKIXParameters)", "public static org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)"], ["boolean", "org.bouncycastle.x509.ExtendedPKIXParameters.isUseDeltasEnabled()", "public boolean isUseDeltasEnabled()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setUseDeltasEnabled(boolean)", "public void setUseDeltasEnabled(boolean)"], ["int", "org.bouncycastle.x509.ExtendedPKIXParameters.getValidityModel()", "public int getValidityModel()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setCertStores(java.util.List)", "public void setCertStores(java.util.List)"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setStores(java.util.List)", "public void setStores(java.util.List)"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.addStore(org.bouncycastle.util.Store)", "public void addStore(org.bouncycastle.util.Store)"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.addAdditionalStore(org.bouncycastle.util.Store)", "public void addAdditionalStore(org.bouncycastle.util.Store)"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.addAddionalStore(org.bouncycastle.util.Store)", "public void addAddionalStore(org.bouncycastle.util.Store)"], ["java.util.List", "org.bouncycastle.x509.ExtendedPKIXParameters.getAdditionalStores()", "public java.util.List getAdditionalStores()"], ["java.util.List", "org.bouncycastle.x509.ExtendedPKIXParameters.getStores()", "public java.util.List getStores()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setValidityModel(int)", "public void setValidityModel(int)"], ["java.lang.Object", "org.bouncycastle.x509.ExtendedPKIXParameters.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.x509.ExtendedPKIXParameters.isAdditionalLocationsEnabled()", "public boolean isAdditionalLocationsEnabled()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setAdditionalLocationsEnabled(boolean)", "public void setAdditionalLocationsEnabled(boolean)"], ["org.bouncycastle.util.Selector", "org.bouncycastle.x509.ExtendedPKIXParameters.getTargetConstraints()", "public org.bouncycastle.util.Selector getTargetConstraints()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setTargetConstraints(org.bouncycastle.util.Selector)", "public void setTargetConstraints(org.bouncycastle.util.Selector)"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setTargetCertConstraints(java.security.cert.CertSelector)", "public void setTargetCertConstraints(java.security.cert.CertSelector)"], ["java.util.Set", "org.bouncycastle.x509.ExtendedPKIXParameters.getTrustedACIssuers()", "public java.util.Set getTrustedACIssuers()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setTrustedACIssuers(java.util.Set)", "public void setTrustedACIssuers(java.util.Set)"], ["java.util.Set", "org.bouncycastle.x509.ExtendedPKIXParameters.getNecessaryACAttributes()", "public java.util.Set getNecessaryACAttributes()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setNecessaryACAttributes(java.util.Set)", "public void setNecessaryACAttributes(java.util.Set)"], ["java.util.Set", "org.bouncycastle.x509.ExtendedPKIXParameters.getProhibitedACAttributes()", "public java.util.Set getProhibitedACAttributes()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setProhibitedACAttributes(java.util.Set)", "public void setProhibitedACAttributes(java.util.Set)"], ["java.util.Set", "org.bouncycastle.x509.ExtendedPKIXParameters.getAttrCertCheckers()", "public java.util.Set getAttrCertCheckers()"], ["void", "org.bouncycastle.x509.ExtendedPKIXParameters.setAttrCertCheckers(java.util.Set)", "public void setAttrCertCheckers(java.util.Set)"], ["org.bouncycastle.x509.NoSuchParserException", "org.bouncycastle.x509.NoSuchParserException(java.lang.String)", "public org.bouncycastle.x509.NoSuchParserException(java.lang.String)"], ["org.bouncycastle.x509.NoSuchStoreException", "org.bouncycastle.x509.NoSuchStoreException(java.lang.String)", "public org.bouncycastle.x509.NoSuchStoreException(java.lang.String)"], ["org.bouncycastle.x509.PKIXAttrCertChecker", "org.bouncycastle.x509.PKIXAttrCertChecker()", "public org.bouncycastle.x509.PKIXAttrCertChecker()"], ["void", "org.bouncycastle.x509.PKIXCertPathReviewer.init(java.security.cert.CertPath, java.security.cert.PKIXParameters)", "public void init(java.security.cert.CertPath, java.security.cert.PKIXParameters) throws org.bouncycastle.x509.CertPathReviewerException"], ["org.bouncycastle.x509.PKIXCertPathReviewer", "org.bouncycastle.x509.PKIXCertPathReviewer(java.security.cert.CertPath, java.security.cert.PKIXParameters)", "public org.bouncycastle.x509.PKIXCertPathReviewer(java.security.cert.CertPath, java.security.cert.PKIXParameters) throws org.bouncycastle.x509.CertPathReviewerException"], ["org.bouncycastle.x509.PKIXCertPathReviewer", "org.bouncycastle.x509.PKIXCertPathReviewer()", "public org.bouncycastle.x509.PKIXCertPathReviewer()"], ["java.security.cert.CertPath", "org.bouncycastle.x509.PKIXCertPathReviewer.getCertPath()", "public java.security.cert.CertPath getCertPath()"], ["int", "org.bouncycastle.x509.PKIXCertPathReviewer.getCertPathSize()", "public int getCertPathSize()"], ["java.util.List[]", "org.bouncycastle.x509.PKIXCertPathReviewer.getErrors()", "public java.util.List[] getErrors()"], ["java.util.List", "org.bouncycastle.x509.PKIXCertPathReviewer.getErrors(int)", "public java.util.List getErrors(int)"], ["java.util.List[]", "org.bouncycastle.x509.PKIXCertPathReviewer.getNotifications()", "public java.util.List[] getNotifications()"], ["java.util.List", "org.bouncycastle.x509.PKIXCertPathReviewer.getNotifications(int)", "public java.util.List getNotifications(int)"], ["java.security.cert.PolicyNode", "org.bouncycastle.x509.PKIXCertPathReviewer.getPolicyTree()", "public java.security.cert.PolicyNode getPolicyTree()"], ["java.security.PublicKey", "org.bouncycastle.x509.PKIXCertPathReviewer.getSubjectPublicKey()", "public java.security.PublicKey getSubjectPublicKey()"], ["java.security.cert.TrustAnchor", "org.bouncycastle.x509.PKIXCertPathReviewer.getTrustAnchor()", "public java.security.cert.TrustAnchor getTrustAnchor()"], ["boolean", "org.bouncycastle.x509.PKIXCertPathReviewer.isValidCertPath()", "public boolean isValidCertPath()"], ["org.bouncycastle.x509.X509Attribute", "org.bouncycastle.x509.X509Attribute(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)", "public org.bouncycastle.x509.X509Attribute(java.lang.String, org.bouncycastle.asn1.ASN1Encodable)"], ["org.bouncycastle.x509.X509Attribute", "org.bouncycastle.x509.X509Attribute(java.lang.String, org.bouncycastle.asn1.ASN1EncodableVector)", "public org.bouncycastle.x509.X509Attribute(java.lang.String, org.bouncycastle.asn1.ASN1EncodableVector)"], ["java.lang.String", "org.bouncycastle.x509.X509Attribute.getOID()", "public java.lang.String getOID()"], ["org.bouncycastle.asn1.ASN1Encodable[]", "org.bouncycastle.x509.X509Attribute.getValues()", "public org.bouncycastle.asn1.ASN1Encodable[] getValues()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.x509.X509Attribute.toASN1Primitive()", "public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"], ["org.bouncycastle.x509.X509AttributeCertStoreSelector", "org.bouncycastle.x509.X509AttributeCertStoreSelector()", "public org.bouncycastle.x509.X509AttributeCertStoreSelector()"], ["boolean", "org.bouncycastle.x509.X509AttributeCertStoreSelector.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["java.lang.Object", "org.bouncycastle.x509.X509AttributeCertStoreSelector.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.x509.X509AttributeCertificate", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getAttributeCert()", "public org.bouncycastle.x509.X509AttributeCertificate getAttributeCert()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setAttributeCert(org.bouncycastle.x509.X509AttributeCertificate)", "public void setAttributeCert(org.bouncycastle.x509.X509AttributeCertificate)"], ["java.util.Date", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getAttributeCertificateValid()", "public java.util.Date getAttributeCertificateValid()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setAttributeCertificateValid(java.util.Date)", "public void setAttributeCertificateValid(java.util.Date)"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getHolder()", "public org.bouncycastle.x509.AttributeCertificateHolder getHolder()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setHolder(org.bouncycastle.x509.AttributeCertificateHolder)", "public void setHolder(org.bouncycastle.x509.AttributeCertificateHolder)"], ["org.bouncycastle.x509.AttributeCertificateIssuer", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getIssuer()", "public org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setIssuer(org.bouncycastle.x509.AttributeCertificateIssuer)", "public void setIssuer(org.bouncycastle.x509.AttributeCertificateIssuer)"], ["java.math.BigInteger", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setSerialNumber(java.math.BigInteger)", "public void setSerialNumber(java.math.BigInteger)"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.addTargetName(org.bouncycastle.asn1.x509.GeneralName)", "public void addTargetName(org.bouncycastle.asn1.x509.GeneralName)"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.addTargetName(byte[])", "public void addTargetName(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setTargetNames(java.util.Collection)", "public void setTargetNames(java.util.Collection) throws java.io.IOException"], ["java.util.Collection", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getTargetNames()", "public java.util.Collection getTargetNames()"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.addTargetGroup(org.bouncycastle.asn1.x509.GeneralName)", "public void addTargetGroup(org.bouncycastle.asn1.x509.GeneralName)"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.addTargetGroup(byte[])", "public void addTargetGroup(byte[]) throws java.io.IOException"], ["void", "org.bouncycastle.x509.X509AttributeCertStoreSelector.setTargetGroups(java.util.Collection)", "public void setTargetGroups(java.util.Collection) throws java.io.IOException"], ["java.util.Collection", "org.bouncycastle.x509.X509AttributeCertStoreSelector.getTargetGroups()", "public java.util.Collection getTargetGroups()"], ["org.bouncycastle.x509.X509CRLStoreSelector", "org.bouncycastle.x509.X509CRLStoreSelector()", "public org.bouncycastle.x509.X509CRLStoreSelector()"], ["boolean", "org.bouncycastle.x509.X509CRLStoreSelector.isIssuingDistributionPointEnabled()", "public boolean isIssuingDistributionPointEnabled()"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setIssuingDistributionPointEnabled(boolean)", "public void setIssuingDistributionPointEnabled(boolean)"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setAttrCertificateChecking(org.bouncycastle.x509.X509AttributeCertificate)", "public void setAttrCertificateChecking(org.bouncycastle.x509.X509AttributeCertificate)"], ["org.bouncycastle.x509.X509AttributeCertificate", "org.bouncycastle.x509.X509CRLStoreSelector.getAttrCertificateChecking()", "public org.bouncycastle.x509.X509AttributeCertificate getAttrCertificateChecking()"], ["boolean", "org.bouncycastle.x509.X509CRLStoreSelector.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["boolean", "org.bouncycastle.x509.X509CRLStoreSelector.match(java.security.cert.CRL)", "public boolean match(java.security.cert.CRL)"], ["boolean", "org.bouncycastle.x509.X509CRLStoreSelector.isDeltaCRLIndicatorEnabled()", "public boolean isDeltaCRLIndicatorEnabled()"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setDeltaCRLIndicatorEnabled(boolean)", "public void setDeltaCRLIndicatorEnabled(boolean)"], ["org.bouncycastle.x509.X509CRLStoreSelector", "org.bouncycastle.x509.X509CRLStoreSelector.getInstance(java.security.cert.X509CRLSelector)", "public static org.bouncycastle.x509.X509CRLStoreSelector getInstance(java.security.cert.X509CRLSelector)"], ["java.lang.Object", "org.bouncycastle.x509.X509CRLStoreSelector.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.x509.X509CRLStoreSelector.isCompleteCRLEnabled()", "public boolean isCompleteCRLEnabled()"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setCompleteCRLEnabled(boolean)", "public void setCompleteCRLEnabled(boolean)"], ["java.math.BigInteger", "org.bouncycastle.x509.X509CRLStoreSelector.getMaxBaseCRLNumber()", "public java.math.BigInteger getMaxBaseCRLNumber()"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setMaxBaseCRLNumber(java.math.BigInteger)", "public void setMaxBaseCRLNumber(java.math.BigInteger)"], ["byte[]", "org.bouncycastle.x509.X509CRLStoreSelector.getIssuingDistributionPoint()", "public byte[] getIssuingDistributionPoint()"], ["void", "org.bouncycastle.x509.X509CRLStoreSelector.setIssuingDistributionPoint(byte[])", "public void setIssuingDistributionPoint(byte[])"], ["org.bouncycastle.x509.X509CertPairStoreSelector", "org.bouncycastle.x509.X509CertPairStoreSelector()", "public org.bouncycastle.x509.X509CertPairStoreSelector()"], ["org.bouncycastle.x509.X509CertificatePair", "org.bouncycastle.x509.X509CertPairStoreSelector.getCertPair()", "public org.bouncycastle.x509.X509CertificatePair getCertPair()"], ["void", "org.bouncycastle.x509.X509CertPairStoreSelector.setCertPair(org.bouncycastle.x509.X509CertificatePair)", "public void setCertPair(org.bouncycastle.x509.X509CertificatePair)"], ["void", "org.bouncycastle.x509.X509CertPairStoreSelector.setForwardSelector(org.bouncycastle.x509.X509CertStoreSelector)", "public void setForwardSelector(org.bouncycastle.x509.X509CertStoreSelector)"], ["void", "org.bouncycastle.x509.X509CertPairStoreSelector.setReverseSelector(org.bouncycastle.x509.X509CertStoreSelector)", "public void setReverseSelector(org.bouncycastle.x509.X509CertStoreSelector)"], ["java.lang.Object", "org.bouncycastle.x509.X509CertPairStoreSelector.clone()", "public java.lang.Object clone()"], ["boolean", "org.bouncycastle.x509.X509CertPairStoreSelector.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["org.bouncycastle.x509.X509CertStoreSelector", "org.bouncycastle.x509.X509CertPairStoreSelector.getForwardSelector()", "public org.bouncycastle.x509.X509CertStoreSelector getForwardSelector()"], ["org.bouncycastle.x509.X509CertStoreSelector", "org.bouncycastle.x509.X509CertPairStoreSelector.getReverseSelector()", "public org.bouncycastle.x509.X509CertStoreSelector getReverseSelector()"], ["org.bouncycastle.x509.X509CertStoreSelector", "org.bouncycastle.x509.X509CertStoreSelector()", "public org.bouncycastle.x509.X509CertStoreSelector()"], ["boolean", "org.bouncycastle.x509.X509CertStoreSelector.match(java.lang.Object)", "public boolean match(java.lang.Object)"], ["boolean", "org.bouncycastle.x509.X509CertStoreSelector.match(java.security.cert.Certificate)", "public boolean match(java.security.cert.Certificate)"], ["java.lang.Object", "org.bouncycastle.x509.X509CertStoreSelector.clone()", "public java.lang.Object clone()"], ["org.bouncycastle.x509.X509CertStoreSelector", "org.bouncycastle.x509.X509CertStoreSelector.getInstance(java.security.cert.X509CertSelector)", "public static org.bouncycastle.x509.X509CertStoreSelector getInstance(java.security.cert.X509CertSelector)"], ["org.bouncycastle.x509.X509CertificatePair", "org.bouncycastle.x509.X509CertificatePair(java.security.cert.X509Certificate, java.security.cert.X509Certificate)", "public org.bouncycastle.x509.X509CertificatePair(java.security.cert.X509Certificate, java.security.cert.X509Certificate)"], ["org.bouncycastle.x509.X509CertificatePair", "org.bouncycastle.x509.X509CertificatePair(org.bouncycastle.asn1.x509.CertificatePair)", "public org.bouncycastle.x509.X509CertificatePair(org.bouncycastle.asn1.x509.CertificatePair) throws java.security.cert.CertificateParsingException"], ["byte[]", "org.bouncycastle.x509.X509CertificatePair.getEncoded()", "public byte[] getEncoded() throws java.security.cert.CertificateEncodingException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509CertificatePair.getForward()", "public java.security.cert.X509Certificate getForward()"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509CertificatePair.getReverse()", "public java.security.cert.X509Certificate getReverse()"], ["boolean", "org.bouncycastle.x509.X509CertificatePair.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.x509.X509CertificatePair.hashCode()", "public int hashCode()"], ["org.bouncycastle.x509.X509CollectionStoreParameters", "org.bouncycastle.x509.X509CollectionStoreParameters(java.util.Collection)", "public org.bouncycastle.x509.X509CollectionStoreParameters(java.util.Collection)"], ["java.lang.Object", "org.bouncycastle.x509.X509CollectionStoreParameters.clone()", "public java.lang.Object clone()"], ["java.util.Collection", "org.bouncycastle.x509.X509CollectionStoreParameters.getCollection()", "public java.util.Collection getCollection()"], ["java.lang.String", "org.bouncycastle.x509.X509CollectionStoreParameters.toString()", "public java.lang.String toString()"], ["org.bouncycastle.x509.X509Store", "org.bouncycastle.x509.X509Store.getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters)", "public static org.bouncycastle.x509.X509Store getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters) throws org.bouncycastle.x509.NoSuchStoreException"], ["org.bouncycastle.x509.X509Store", "org.bouncycastle.x509.X509Store.getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters, java.lang.String)", "public static org.bouncycastle.x509.X509Store getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters, java.lang.String) throws org.bouncycastle.x509.NoSuchStoreException, java.security.NoSuchProviderException"], ["org.bouncycastle.x509.X509Store", "org.bouncycastle.x509.X509Store.getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters, java.security.Provider)", "public static org.bouncycastle.x509.X509Store getInstance(java.lang.String, org.bouncycastle.x509.X509StoreParameters, java.security.Provider) throws org.bouncycastle.x509.NoSuchStoreException"], ["java.security.Provider", "org.bouncycastle.x509.X509Store.getProvider()", "public java.security.Provider getProvider()"], ["java.util.Collection", "org.bouncycastle.x509.X509Store.getMatches(org.bouncycastle.util.Selector)", "public java.util.Collection getMatches(org.bouncycastle.util.Selector)"], ["org.bouncycastle.x509.X509StoreSpi", "org.bouncycastle.x509.X509StoreSpi()", "public org.bouncycastle.x509.X509StoreSpi()"], ["org.bouncycastle.x509.X509StreamParser", "org.bouncycastle.x509.X509StreamParser.getInstance(java.lang.String)", "public static org.bouncycastle.x509.X509StreamParser getInstance(java.lang.String) throws org.bouncycastle.x509.NoSuchParserException"], ["org.bouncycastle.x509.X509StreamParser", "org.bouncycastle.x509.X509StreamParser.getInstance(java.lang.String, java.lang.String)", "public static org.bouncycastle.x509.X509StreamParser getInstance(java.lang.String, java.lang.String) throws org.bouncycastle.x509.NoSuchParserException, java.security.NoSuchProviderException"], ["org.bouncycastle.x509.X509StreamParser", "org.bouncycastle.x509.X509StreamParser.getInstance(java.lang.String, java.security.Provider)", "public static org.bouncycastle.x509.X509StreamParser getInstance(java.lang.String, java.security.Provider) throws org.bouncycastle.x509.NoSuchParserException"], ["java.security.Provider", "org.bouncycastle.x509.X509StreamParser.getProvider()", "public java.security.Provider getProvider()"], ["void", "org.bouncycastle.x509.X509StreamParser.init(java.io.InputStream)", "public void init(java.io.InputStream)"], ["void", "org.bouncycastle.x509.X509StreamParser.init(byte[])", "public void init(byte[])"], ["java.lang.Object", "org.bouncycastle.x509.X509StreamParser.read()", "public java.lang.Object read() throws org.bouncycastle.x509.util.StreamParsingException"], ["java.util.Collection", "org.bouncycastle.x509.X509StreamParser.readAll()", "public java.util.Collection readAll() throws org.bouncycastle.x509.util.StreamParsingException"], ["org.bouncycastle.x509.X509StreamParserSpi", "org.bouncycastle.x509.X509StreamParserSpi()", "public org.bouncycastle.x509.X509StreamParserSpi()"], ["org.bouncycastle.x509.X509V1CertificateGenerator", "org.bouncycastle.x509.X509V1CertificateGenerator()", "public org.bouncycastle.x509.X509V1CertificateGenerator()"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.reset()", "public void reset()"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setSerialNumber(java.math.BigInteger)", "public void setSerialNumber(java.math.BigInteger)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setIssuerDN(javax.security.auth.x500.X500Principal)", "public void setIssuerDN(javax.security.auth.x500.X500Principal)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setIssuerDN(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setNotBefore(java.util.Date)", "public void setNotBefore(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setNotAfter(java.util.Date)", "public void setNotAfter(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setSubjectDN(javax.security.auth.x500.X500Principal)", "public void setSubjectDN(javax.security.auth.x500.X500Principal)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setSubjectDN(org.bouncycastle.asn1.x509.X509Name)", "public void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setPublicKey(java.security.PublicKey)", "public void setPublicKey(java.security.PublicKey)"], ["void", "org.bouncycastle.x509.X509V1CertificateGenerator.setSignatureAlgorithm(java.lang.String)", "public void setSignatureAlgorithm(java.lang.String)"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generateX509Certificate(java.security.PrivateKey)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generate(java.security.PrivateKey)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generate(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generate(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V1CertificateGenerator.generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.util.Iterator", "org.bouncycastle.x509.X509V1CertificateGenerator.getSignatureAlgNames()", "public java.util.Iterator getSignatureAlgNames()"], ["org.bouncycastle.x509.X509V2AttributeCertificate", "org.bouncycastle.x509.X509V2AttributeCertificate(java.io.InputStream)", "public org.bouncycastle.x509.X509V2AttributeCertificate(java.io.InputStream) throws java.io.IOException"], ["org.bouncycastle.x509.X509V2AttributeCertificate", "org.bouncycastle.x509.X509V2AttributeCertificate(byte[])", "public org.bouncycastle.x509.X509V2AttributeCertificate(byte[]) throws java.io.IOException"], ["int", "org.bouncycastle.x509.X509V2AttributeCertificate.getVersion()", "public int getVersion()"], ["java.math.BigInteger", "org.bouncycastle.x509.X509V2AttributeCertificate.getSerialNumber()", "public java.math.BigInteger getSerialNumber()"], ["org.bouncycastle.x509.AttributeCertificateHolder", "org.bouncycastle.x509.X509V2AttributeCertificate.getHolder()", "public org.bouncycastle.x509.AttributeCertificateHolder getHolder()"], ["org.bouncycastle.x509.AttributeCertificateIssuer", "org.bouncycastle.x509.X509V2AttributeCertificate.getIssuer()", "public org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()"], ["java.util.Date", "org.bouncycastle.x509.X509V2AttributeCertificate.getNotBefore()", "public java.util.Date getNotBefore()"], ["java.util.Date", "org.bouncycastle.x509.X509V2AttributeCertificate.getNotAfter()", "public java.util.Date getNotAfter()"], ["boolean[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getIssuerUniqueID()", "public boolean[] getIssuerUniqueID()"], ["void", "org.bouncycastle.x509.X509V2AttributeCertificate.checkValidity()", "public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["void", "org.bouncycastle.x509.X509V2AttributeCertificate.checkValidity(java.util.Date)", "public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException"], ["byte[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getSignature()", "public byte[] getSignature()"], ["void", "org.bouncycastle.x509.X509V2AttributeCertificate.verify(java.security.PublicKey, java.lang.String)", "public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException"], ["byte[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getEncoded()", "public byte[] getEncoded() throws java.io.IOException"], ["byte[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getExtensionValue(java.lang.String)", "public byte[] getExtensionValue(java.lang.String)"], ["java.util.Set", "org.bouncycastle.x509.X509V2AttributeCertificate.getNonCriticalExtensionOIDs()", "public java.util.Set getNonCriticalExtensionOIDs()"], ["java.util.Set", "org.bouncycastle.x509.X509V2AttributeCertificate.getCriticalExtensionOIDs()", "public java.util.Set getCriticalExtensionOIDs()"], ["boolean", "org.bouncycastle.x509.X509V2AttributeCertificate.hasUnsupportedCriticalExtension()", "public boolean hasUnsupportedCriticalExtension()"], ["org.bouncycastle.x509.X509Attribute[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getAttributes()", "public org.bouncycastle.x509.X509Attribute[] getAttributes()"], ["org.bouncycastle.x509.X509Attribute[]", "org.bouncycastle.x509.X509V2AttributeCertificate.getAttributes(java.lang.String)", "public org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)"], ["boolean", "org.bouncycastle.x509.X509V2AttributeCertificate.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.bouncycastle.x509.X509V2AttributeCertificate.hashCode()", "public int hashCode()"], ["java.lang.Throwable", "org.bouncycastle.x509.X509V2CRLGenerator$ExtCRLException.getCause()", "public java.lang.Throwable getCause()"], ["org.bouncycastle.x509.X509V2CRLGenerator", "org.bouncycastle.x509.X509V2CRLGenerator()", "public org.bouncycastle.x509.X509V2CRLGenerator()"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.reset()", "public void reset()"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.setIssuerDN(javax.security.auth.x500.X500Principal)", "public void setIssuerDN(javax.security.auth.x500.X500Principal)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.setIssuerDN(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.setThisUpdate(java.util.Date)", "public void setThisUpdate(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.setNextUpdate(java.util.Date)", "public void setNextUpdate(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addCRLEntry(java.math.BigInteger, java.util.Date, int)", "public void addCRLEntry(java.math.BigInteger, java.util.Date, int)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addCRLEntry(java.math.BigInteger, java.util.Date, int, java.util.Date)", "public void addCRLEntry(java.math.BigInteger, java.util.Date, int, java.util.Date)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addCRLEntry(java.math.BigInteger, java.util.Date, org.bouncycastle.asn1.x509.X509Extensions)", "public void addCRLEntry(java.math.BigInteger, java.util.Date, org.bouncycastle.asn1.x509.X509Extensions)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addCRL(java.security.cert.X509CRL)", "public void addCRL(java.security.cert.X509CRL) throws java.security.cert.CRLException"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.setSignatureAlgorithm(java.lang.String)", "public void setSignatureAlgorithm(java.lang.String)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addExtension(java.lang.String, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(java.lang.String, boolean, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addExtension(java.lang.String, boolean, byte[])", "public void addExtension(java.lang.String, boolean, byte[])"], ["void", "org.bouncycastle.x509.X509V2CRLGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generateX509CRL(java.security.PrivateKey)", "public java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generateX509CRL(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generateX509CRL(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generateX509CRL(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generate(java.security.PrivateKey)", "public java.security.cert.X509CRL generate(java.security.PrivateKey) throws java.security.cert.CRLException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generate(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509CRL generate(java.security.PrivateKey, java.security.SecureRandom) throws java.security.cert.CRLException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generate(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509CRL generate(java.security.PrivateKey, java.lang.String) throws java.security.cert.CRLException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509CRL", "org.bouncycastle.x509.X509V2CRLGenerator.generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509CRL generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.cert.CRLException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.util.Iterator", "org.bouncycastle.x509.X509V2CRLGenerator.getSignatureAlgNames()", "public java.util.Iterator getSignatureAlgNames()"], ["org.bouncycastle.x509.X509V3CertificateGenerator", "org.bouncycastle.x509.X509V3CertificateGenerator()", "public org.bouncycastle.x509.X509V3CertificateGenerator()"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.reset()", "public void reset()"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setSerialNumber(java.math.BigInteger)", "public void setSerialNumber(java.math.BigInteger)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setIssuerDN(javax.security.auth.x500.X500Principal)", "public void setIssuerDN(javax.security.auth.x500.X500Principal)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setIssuerDN(org.bouncycastle.asn1.x509.X509Name)", "public void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setNotBefore(java.util.Date)", "public void setNotBefore(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setNotAfter(java.util.Date)", "public void setNotAfter(java.util.Date)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setSubjectDN(javax.security.auth.x500.X500Principal)", "public void setSubjectDN(javax.security.auth.x500.X500Principal)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setSubjectDN(org.bouncycastle.asn1.x509.X509Name)", "public void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setPublicKey(java.security.PublicKey)", "public void setPublicKey(java.security.PublicKey) throws java.lang.IllegalArgumentException"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setSignatureAlgorithm(java.lang.String)", "public void setSignatureAlgorithm(java.lang.String)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setSubjectUniqueID(boolean[])", "public void setSubjectUniqueID(boolean[])"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.setIssuerUniqueID(boolean[])", "public void setIssuerUniqueID(boolean[])"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.addExtension(java.lang.String, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(java.lang.String, boolean, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, org.bouncycastle.asn1.ASN1Encodable)"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.addExtension(java.lang.String, boolean, byte[])", "public void addExtension(java.lang.String, boolean, byte[])"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])", "public void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.copyAndAddExtension(java.lang.String, boolean, java.security.cert.X509Certificate)", "public void copyAndAddExtension(java.lang.String, boolean, java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["void", "org.bouncycastle.x509.X509V3CertificateGenerator.copyAndAddExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, java.security.cert.X509Certificate)", "public void copyAndAddExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier, boolean, java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generateX509Certificate(java.security.PrivateKey)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generate(java.security.PrivateKey)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generate(java.security.PrivateKey, java.security.SecureRandom)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generate(java.security.PrivateKey, java.lang.String)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.security.cert.X509Certificate", "org.bouncycastle.x509.X509V3CertificateGenerator.generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom)", "public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException"], ["java.util.Iterator", "org.bouncycastle.x509.X509V3CertificateGenerator.getSignatureAlgNames()", "public java.util.Iterator getSignatureAlgNames()"], ["org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure", "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(byte[])", "public org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(byte[]) throws java.io.IOException"], ["org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure", "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(org.bouncycastle.asn1.x509.X509Extension)", "public org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(org.bouncycastle.asn1.x509.X509Extension)"], ["org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure", "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(org.bouncycastle.asn1.x509.Extension)", "public org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(org.bouncycastle.asn1.x509.Extension)"], ["org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure", "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(java.security.cert.X509Certificate)", "public org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure", "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(java.security.PublicKey)", "public org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure(java.security.PublicKey) throws java.security.InvalidKeyException"], ["org.bouncycastle.x509.extension.X509ExtensionUtil", "org.bouncycastle.x509.extension.X509ExtensionUtil()", "public org.bouncycastle.x509.extension.X509ExtensionUtil()"], ["org.bouncycastle.asn1.ASN1Primitive", "org.bouncycastle.x509.extension.X509ExtensionUtil.fromExtensionValue(byte[])", "public static org.bouncycastle.asn1.ASN1Primitive fromExtensionValue(byte[]) throws java.io.IOException"], ["java.util.Collection", "org.bouncycastle.x509.extension.X509ExtensionUtil.getIssuerAlternativeNames(java.security.cert.X509Certificate)", "public static java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["java.util.Collection", "org.bouncycastle.x509.extension.X509ExtensionUtil.getSubjectAlternativeNames(java.security.cert.X509Certificate)", "public static java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException"], ["org.bouncycastle.x509.util.LDAPStoreHelper", "org.bouncycastle.x509.util.LDAPStoreHelper(org.bouncycastle.jce.X509LDAPCertStoreParameters)", "public org.bouncycastle.x509.util.LDAPStoreHelper(org.bouncycastle.jce.X509LDAPCertStoreParameters)"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)", "public java.util.Collection getAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAttributeCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)", "public java.util.Collection getAttributeCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAttributeAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)", "public java.util.Collection getAttributeAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getCrossCertificatePairs(org.bouncycastle.x509.X509CertPairStoreSelector)", "public java.util.Collection getCrossCertificatePairs(org.bouncycastle.x509.X509CertPairStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getUserCertificates(org.bouncycastle.x509.X509CertStoreSelector)", "public java.util.Collection getUserCertificates(org.bouncycastle.x509.X509CertStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAACertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)", "public java.util.Collection getAACertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAttributeDescriptorCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)", "public java.util.Collection getAttributeDescriptorCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getCACertificates(org.bouncycastle.x509.X509CertStoreSelector)", "public java.util.Collection getCACertificates(org.bouncycastle.x509.X509CertStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getDeltaCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)", "public java.util.Collection getDeltaCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getAttributeCertificateAttributes(org.bouncycastle.x509.X509AttributeCertStoreSelector)", "public java.util.Collection getAttributeCertificateAttributes(org.bouncycastle.x509.X509AttributeCertStoreSelector) throws org.bouncycastle.util.StoreException"], ["java.util.Collection", "org.bouncycastle.x509.util.LDAPStoreHelper.getCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)", "public java.util.Collection getCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector) throws org.bouncycastle.util.StoreException"], ["org.bouncycastle.x509.util.StreamParsingException", "org.bouncycastle.x509.util.StreamParsingException(java.lang.String, java.lang.Throwable)", "public org.bouncycastle.x509.util.StreamParsingException(java.lang.String, java.lang.Throwable)"], ["java.lang.Throwable", "org.bouncycastle.x509.util.StreamParsingException.getCause()", "public java.lang.Throwable getCause()"]]}