{"mockito-core-2.2.17.jar": [["org.mockito.Matchers", "org.mockito.Matchers()", "public org.mockito.Matchers()"], ["T", "org.mockito.BDDMockito$ThenImpl.should()", "public T should()"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.verification.VerificationMode)", "public T should(org.mockito.verification.VerificationMode)"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder)", "public T should(org.mockito.InOrder)"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder, org.mockito.verification.VerificationMode)", "public T should(org.mockito.InOrder, org.mockito.verification.VerificationMode)"], ["void", "org.mockito.BDDMockito$ThenImpl.shouldHaveZeroInteractions()", "public void shouldHaveZeroInteractions()"], ["void", "org.mockito.BDDMockito$ThenImpl.shouldHaveNoMoreInteractions()", "public void shouldHaveNoMoreInteractions()"], ["org.mockito.MockitoAnnotations", "org.mockito.MockitoAnnotations()", "public org.mockito.MockitoAnnotations()"], ["void", "org.mockito.MockitoAnnotations.initMocks(java.lang.Object)", "public static void initMocks(java.lang.Object)"], ["org.mockito.ArgumentMatchers", "org.mockito.ArgumentMatchers()", "public org.mockito.ArgumentMatchers()"], ["<T> T", "org.mockito.ArgumentMatchers.any()", "public static <T> T any()"], ["<T> T", "org.mockito.ArgumentMatchers.anyObject()", "public static <T> T anyObject()"], ["<T> T", "org.mockito.ArgumentMatchers.any(java.lang.Class<T>)", "public static <T> T any(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.isA(java.lang.Class<T>)", "public static <T> T isA(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.anyVararg()", "public static <T> T anyVararg()"], ["boolean", "org.mockito.ArgumentMatchers.anyBoolean()", "public static boolean anyBoolean()"], ["byte", "org.mockito.ArgumentMatchers.anyByte()", "public static byte anyByte()"], ["char", "org.mockito.ArgumentMatchers.anyChar()", "public static char anyChar()"], ["int", "org.mockito.ArgumentMatchers.anyInt()", "public static int anyInt()"], ["long", "org.mockito.ArgumentMatchers.anyLong()", "public static long anyLong()"], ["float", "org.mockito.ArgumentMatchers.anyFloat()", "public static float anyFloat()"], ["double", "org.mockito.ArgumentMatchers.anyDouble()", "public static double anyDouble()"], ["short", "org.mockito.ArgumentMatchers.anyShort()", "public static short anyShort()"], ["java.lang.String", "org.mockito.ArgumentMatchers.anyString()", "public static java.lang.String anyString()"], ["<T> java.util.List<T>", "org.mockito.ArgumentMatchers.anyList()", "public static <T> java.util.List<T> anyList()"], ["<T> java.util.List<T>", "org.mockito.ArgumentMatchers.anyListOf(java.lang.Class<T>)", "public static <T> java.util.List<T> anyListOf(java.lang.Class<T>)"], ["<T> java.util.Set<T>", "org.mockito.ArgumentMatchers.anySet()", "public static <T> java.util.Set<T> anySet()"], ["<T> java.util.Set<T>", "org.mockito.ArgumentMatchers.anySetOf(java.lang.Class<T>)", "public static <T> java.util.Set<T> anySetOf(java.lang.Class<T>)"], ["<K, V> java.util.Map<K, V>", "org.mockito.ArgumentMatchers.anyMap()", "public static <K, V> java.util.Map<K, V> anyMap()"], ["<K, V> java.util.Map<K, V>", "org.mockito.ArgumentMatchers.anyMapOf(java.lang.Class<K>, java.lang.Class<V>)", "public static <K, V> java.util.Map<K, V> anyMapOf(java.lang.Class<K>, java.lang.Class<V>)"], ["<T> java.util.Collection<T>", "org.mockito.ArgumentMatchers.anyCollection()", "public static <T> java.util.Collection<T> anyCollection()"], ["<T> java.util.Collection<T>", "org.mockito.ArgumentMatchers.anyCollectionOf(java.lang.Class<T>)", "public static <T> java.util.Collection<T> anyCollectionOf(java.lang.Class<T>)"], ["<T> java.lang.Iterable<T>", "org.mockito.ArgumentMatchers.anyIterable()", "public static <T> java.lang.Iterable<T> anyIterable()"], ["<T> java.lang.Iterable<T>", "org.mockito.ArgumentMatchers.anyIterableOf(java.lang.Class<T>)", "public static <T> java.lang.Iterable<T> anyIterableOf(java.lang.Class<T>)"], ["boolean", "org.mockito.ArgumentMatchers.eq(boolean)", "public static boolean eq(boolean)"], ["byte", "org.mockito.ArgumentMatchers.eq(byte)", "public static byte eq(byte)"], ["char", "org.mockito.ArgumentMatchers.eq(char)", "public static char eq(char)"], ["double", "org.mockito.ArgumentMatchers.eq(double)", "public static double eq(double)"], ["float", "org.mockito.ArgumentMatchers.eq(float)", "public static float eq(float)"], ["int", "org.mockito.ArgumentMatchers.eq(int)", "public static int eq(int)"], ["long", "org.mockito.ArgumentMatchers.eq(long)", "public static long eq(long)"], ["short", "org.mockito.ArgumentMatchers.eq(short)", "public static short eq(short)"], ["<T> T", "org.mockito.ArgumentMatchers.eq(T)", "public static <T> T eq(T)"], ["<T> T", "org.mockito.ArgumentMatchers.refEq(T, java.lang.String...)", "public static <T> T refEq(T, java.lang.String...)"], ["<T> T", "org.mockito.ArgumentMatchers.same(T)", "public static <T> T same(T)"], ["<T> T", "org.mockito.ArgumentMatchers.isNull()", "public static <T> T isNull()"], ["<T> T", "org.mockito.ArgumentMatchers.isNull(java.lang.Class<T>)", "public static <T> T isNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.notNull()", "public static <T> T notNull()"], ["<T> T", "org.mockito.ArgumentMatchers.notNull(java.lang.Class<T>)", "public static <T> T notNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.isNotNull()", "public static <T> T isNotNull()"], ["<T> T", "org.mockito.ArgumentMatchers.isNotNull(java.lang.Class<T>)", "public static <T> T isNotNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.nullable(java.lang.Class<T>)", "public static <T> T nullable(java.lang.Class<T>)"], ["java.lang.String", "org.mockito.ArgumentMatchers.contains(java.lang.String)", "public static java.lang.String contains(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.matches(java.lang.String)", "public static java.lang.String matches(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.endsWith(java.lang.String)", "public static java.lang.String endsWith(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.startsWith(java.lang.String)", "public static java.lang.String startsWith(java.lang.String)"], ["<T> T", "org.mockito.ArgumentMatchers.argThat(org.mockito.ArgumentMatcher<T>)", "public static <T> T argThat(org.mockito.ArgumentMatcher<T>)"], ["char", "org.mockito.ArgumentMatchers.charThat(org.mockito.ArgumentMatcher<java.lang.Character>)", "public static char charThat(org.mockito.ArgumentMatcher<java.lang.Character>)"], ["boolean", "org.mockito.ArgumentMatchers.booleanThat(org.mockito.ArgumentMatcher<java.lang.Boolean>)", "public static boolean booleanThat(org.mockito.ArgumentMatcher<java.lang.Boolean>)"], ["byte", "org.mockito.ArgumentMatchers.byteThat(org.mockito.ArgumentMatcher<java.lang.Byte>)", "public static byte byteThat(org.mockito.ArgumentMatcher<java.lang.Byte>)"], ["short", "org.mockito.ArgumentMatchers.shortThat(org.mockito.ArgumentMatcher<java.lang.Short>)", "public static short shortThat(org.mockito.ArgumentMatcher<java.lang.Short>)"], ["int", "org.mockito.ArgumentMatchers.intThat(org.mockito.ArgumentMatcher<java.lang.Integer>)", "public static int intThat(org.mockito.ArgumentMatcher<java.lang.Integer>)"], ["long", "org.mockito.ArgumentMatchers.longThat(org.mockito.ArgumentMatcher<java.lang.Long>)", "public static long longThat(org.mockito.ArgumentMatcher<java.lang.Long>)"], ["float", "org.mockito.ArgumentMatchers.floatThat(org.mockito.ArgumentMatcher<java.lang.Float>)", "public static float floatThat(org.mockito.ArgumentMatcher<java.lang.Float>)"], ["double", "org.mockito.ArgumentMatchers.doubleThat(org.mockito.ArgumentMatcher<java.lang.Double>)", "public static double doubleThat(org.mockito.ArgumentMatcher<java.lang.Double>)"], ["T", "org.mockito.ArgumentCaptor.capture()", "public T capture()"], ["T", "org.mockito.ArgumentCaptor.getValue()", "public T getValue()"], ["java.util.List<T>", "org.mockito.ArgumentCaptor.getAllValues()", "public java.util.List<T> getAllValues()"], ["<U, S extends U> org.mockito.ArgumentCaptor<U>", "org.mockito.ArgumentCaptor.forClass(java.lang.Class<S>)", "public static <U, S extends U> org.mockito.ArgumentCaptor<U> forClass(java.lang.Class<S>)"], ["org.mockito.BDDMockito$BDDStubberImpl", "org.mockito.BDDMockito$BDDStubberImpl(org.mockito.stubbing.Stubber)", "public org.mockito.BDDMockito$BDDStubberImpl(org.mockito.stubbing.Stubber)"], ["<T> T", "org.mockito.BDDMockito$BDDStubberImpl.given(T)", "public <T> T given(T)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willAnswer(org.mockito.stubbing.Answer<?>)", "public org.mockito.BDDMockito$BDDStubber willAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.will(org.mockito.stubbing.Answer<?>)", "public org.mockito.BDDMockito$BDDStubber will(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willNothing()", "public org.mockito.BDDMockito$BDDStubber willNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willDoNothing()", "public org.mockito.BDDMockito$BDDStubber willDoNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object)", "public org.mockito.BDDMockito$BDDStubber willReturn(java.lang.Object)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object, java.lang.Object...)", "public org.mockito.BDDMockito$BDDStubber willReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Throwable...)", "public org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Throwable...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>)", "public org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willCallRealMethod()", "public org.mockito.BDDMockito$BDDStubber willCallRealMethod()"], ["org.mockito.AdditionalMatchers", "org.mockito.AdditionalMatchers()", "public org.mockito.AdditionalMatchers()"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.geq(T)", "public static <T extends java.lang.Comparable<T>> T geq(T)"], ["byte", "org.mockito.AdditionalMatchers.geq(byte)", "public static byte geq(byte)"], ["double", "org.mockito.AdditionalMatchers.geq(double)", "public static double geq(double)"], ["float", "org.mockito.AdditionalMatchers.geq(float)", "public static float geq(float)"], ["int", "org.mockito.AdditionalMatchers.geq(int)", "public static int geq(int)"], ["long", "org.mockito.AdditionalMatchers.geq(long)", "public static long geq(long)"], ["short", "org.mockito.AdditionalMatchers.geq(short)", "public static short geq(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.leq(T)", "public static <T extends java.lang.Comparable<T>> T leq(T)"], ["byte", "org.mockito.AdditionalMatchers.leq(byte)", "public static byte leq(byte)"], ["double", "org.mockito.AdditionalMatchers.leq(double)", "public static double leq(double)"], ["float", "org.mockito.AdditionalMatchers.leq(float)", "public static float leq(float)"], ["int", "org.mockito.AdditionalMatchers.leq(int)", "public static int leq(int)"], ["long", "org.mockito.AdditionalMatchers.leq(long)", "public static long leq(long)"], ["short", "org.mockito.AdditionalMatchers.leq(short)", "public static short leq(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.gt(T)", "public static <T extends java.lang.Comparable<T>> T gt(T)"], ["byte", "org.mockito.AdditionalMatchers.gt(byte)", "public static byte gt(byte)"], ["double", "org.mockito.AdditionalMatchers.gt(double)", "public static double gt(double)"], ["float", "org.mockito.AdditionalMatchers.gt(float)", "public static float gt(float)"], ["int", "org.mockito.AdditionalMatchers.gt(int)", "public static int gt(int)"], ["long", "org.mockito.AdditionalMatchers.gt(long)", "public static long gt(long)"], ["short", "org.mockito.AdditionalMatchers.gt(short)", "public static short gt(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.lt(T)", "public static <T extends java.lang.Comparable<T>> T lt(T)"], ["byte", "org.mockito.AdditionalMatchers.lt(byte)", "public static byte lt(byte)"], ["double", "org.mockito.AdditionalMatchers.lt(double)", "public static double lt(double)"], ["float", "org.mockito.AdditionalMatchers.lt(float)", "public static float lt(float)"], ["int", "org.mockito.AdditionalMatchers.lt(int)", "public static int lt(int)"], ["long", "org.mockito.AdditionalMatchers.lt(long)", "public static long lt(long)"], ["short", "org.mockito.AdditionalMatchers.lt(short)", "public static short lt(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.cmpEq(T)", "public static <T extends java.lang.Comparable<T>> T cmpEq(T)"], ["java.lang.String", "org.mockito.AdditionalMatchers.find(java.lang.String)", "public static java.lang.String find(java.lang.String)"], ["<T> T[]", "org.mockito.AdditionalMatchers.aryEq(T[])", "public static <T> T[] aryEq(T[])"], ["short[]", "org.mockito.AdditionalMatchers.aryEq(short[])", "public static short[] aryEq(short[])"], ["long[]", "org.mockito.AdditionalMatchers.aryEq(long[])", "public static long[] aryEq(long[])"], ["int[]", "org.mockito.AdditionalMatchers.aryEq(int[])", "public static int[] aryEq(int[])"], ["float[]", "org.mockito.AdditionalMatchers.aryEq(float[])", "public static float[] aryEq(float[])"], ["double[]", "org.mockito.AdditionalMatchers.aryEq(double[])", "public static double[] aryEq(double[])"], ["char[]", "org.mockito.AdditionalMatchers.aryEq(char[])", "public static char[] aryEq(char[])"], ["byte[]", "org.mockito.AdditionalMatchers.aryEq(byte[])", "public static byte[] aryEq(byte[])"], ["boolean[]", "org.mockito.AdditionalMatchers.aryEq(boolean[])", "public static boolean[] aryEq(boolean[])"], ["boolean", "org.mockito.AdditionalMatchers.and(boolean, boolean)", "public static boolean and(boolean, boolean)"], ["byte", "org.mockito.AdditionalMatchers.and(byte, byte)", "public static byte and(byte, byte)"], ["char", "org.mockito.AdditionalMatchers.and(char, char)", "public static char and(char, char)"], ["double", "org.mockito.AdditionalMatchers.and(double, double)", "public static double and(double, double)"], ["float", "org.mockito.AdditionalMatchers.and(float, float)", "public static float and(float, float)"], ["int", "org.mockito.AdditionalMatchers.and(int, int)", "public static int and(int, int)"], ["long", "org.mockito.AdditionalMatchers.and(long, long)", "public static long and(long, long)"], ["short", "org.mockito.AdditionalMatchers.and(short, short)", "public static short and(short, short)"], ["<T> T", "org.mockito.AdditionalMatchers.and(T, T)", "public static <T> T and(T, T)"], ["boolean", "org.mockito.AdditionalMatchers.or(boolean, boolean)", "public static boolean or(boolean, boolean)"], ["<T> T", "org.mockito.AdditionalMatchers.or(T, T)", "public static <T> T or(T, T)"], ["short", "org.mockito.AdditionalMatchers.or(short, short)", "public static short or(short, short)"], ["long", "org.mockito.AdditionalMatchers.or(long, long)", "public static long or(long, long)"], ["int", "org.mockito.AdditionalMatchers.or(int, int)", "public static int or(int, int)"], ["float", "org.mockito.AdditionalMatchers.or(float, float)", "public static float or(float, float)"], ["double", "org.mockito.AdditionalMatchers.or(double, double)", "public static double or(double, double)"], ["char", "org.mockito.AdditionalMatchers.or(char, char)", "public static char or(char, char)"], ["byte", "org.mockito.AdditionalMatchers.or(byte, byte)", "public static byte or(byte, byte)"], ["<T> T", "org.mockito.AdditionalMatchers.not(T)", "public static <T> T not(T)"], ["short", "org.mockito.AdditionalMatchers.not(short)", "public static short not(short)"], ["int", "org.mockito.AdditionalMatchers.not(int)", "public static int not(int)"], ["long", "org.mockito.AdditionalMatchers.not(long)", "public static long not(long)"], ["float", "org.mockito.AdditionalMatchers.not(float)", "public static float not(float)"], ["double", "org.mockito.AdditionalMatchers.not(double)", "public static double not(double)"], ["char", "org.mockito.AdditionalMatchers.not(char)", "public static char not(char)"], ["boolean", "org.mockito.AdditionalMatchers.not(boolean)", "public static boolean not(boolean)"], ["byte", "org.mockito.AdditionalMatchers.not(byte)", "public static byte not(byte)"], ["double", "org.mockito.AdditionalMatchers.eq(double, double)", "public static double eq(double, double)"], ["float", "org.mockito.AdditionalMatchers.eq(float, float)", "public static float eq(float, float)"], ["org.mockito.BDDMockito$BDDOngoingStubbingImpl", "org.mockito.BDDMockito$BDDOngoingStubbingImpl(org.mockito.stubbing.OngoingStubbing<T>)", "public org.mockito.BDDMockito$BDDOngoingStubbingImpl(org.mockito.stubbing.OngoingStubbing<T>)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willAnswer(org.mockito.stubbing.Answer<?>)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.will(org.mockito.stubbing.Answer<?>)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> will(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willReturn(T)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willReturn(T)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willReturn(T, T...)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willReturn(T, T...)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willThrow(java.lang.Throwable...)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willThrow(java.lang.Throwable...)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.willCallRealMethod()", "public org.mockito.BDDMockito$BDDMyOngoingStubbing<T> willCallRealMethod()"], ["<M> M", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.getMock()", "public <M> M getMock()"], ["org.mockito.AdditionalAnswers", "org.mockito.AdditionalAnswers()", "public org.mockito.AdditionalAnswers()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsFirstArg()", "public static <T> org.mockito.stubbing.Answer<T> returnsFirstArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsSecondArg()", "public static <T> org.mockito.stubbing.Answer<T> returnsSecondArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsLastArg()", "public static <T> org.mockito.stubbing.Answer<T> returnsLastArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsArgAt(int)", "public static <T> org.mockito.stubbing.Answer<T> returnsArgAt(int)"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.delegatesTo(java.lang.Object)", "public static <T> org.mockito.stubbing.Answer<T> delegatesTo(java.lang.Object)"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsElementsOf(java.util.Collection<?>)", "public static <T> org.mockito.stubbing.Answer<T> returnsElementsOf(java.util.Collection<?>)"], ["<T, A> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer1<T, A>)", "public static <T, A> org.mockito.stubbing.Answer<T> answer(org.mockito.stubbing.Answer1<T, A>)"], ["<A> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer1<A>)", "public static <A> org.mockito.stubbing.Answer<java.lang.Void> answerVoid(org.mockito.stubbing.VoidAnswer1<A>)"], ["<T, A, B> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer2<T, A, B>)", "public static <T, A, B> org.mockito.stubbing.Answer<T> answer(org.mockito.stubbing.Answer2<T, A, B>)"], ["<A, B> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer2<A, B>)", "public static <A, B> org.mockito.stubbing.Answer<java.lang.Void> answerVoid(org.mockito.stubbing.VoidAnswer2<A, B>)"], ["<T, A, B, C> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer3<T, A, B, C>)", "public static <T, A, B, C> org.mockito.stubbing.Answer<T> answer(org.mockito.stubbing.Answer3<T, A, B, C>)"], ["<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer3<A, B, C>)", "public static <A, B, C> org.mockito.stubbing.Answer<java.lang.Void> answerVoid(org.mockito.stubbing.VoidAnswer3<A, B, C>)"], ["<T, A, B, C, D> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer4<T, A, B, C, D>)", "public static <T, A, B, C, D> org.mockito.stubbing.Answer<T> answer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"], ["<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)", "public static <A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void> answerVoid(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"], ["<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)", "public static <T, A, B, C, D, E> org.mockito.stubbing.Answer<T> answer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"], ["<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)", "public static <A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void> answerVoid(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"], ["org.mockito.BDDMockito", "org.mockito.BDDMockito()", "public org.mockito.BDDMockito()"], ["<T> org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito.given(T)", "public static <T> org.mockito.BDDMockito$BDDMyOngoingStubbing<T> given(T)"], ["<T> org.mockito.BDDMockito$Then<T>", "org.mockito.BDDMockito.then(T)", "public static <T> org.mockito.BDDMockito$Then<T> then(T)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Throwable...)", "public static org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Throwable...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>)", "public static org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public static org.mockito.BDDMockito$BDDStubber willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willAnswer(org.mockito.stubbing.Answer<?>)", "public static org.mockito.BDDMockito$BDDStubber willAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.will(org.mockito.stubbing.Answer<?>)", "public static org.mockito.BDDMockito$BDDStubber will(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willDoNothing()", "public static org.mockito.BDDMockito$BDDStubber willDoNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willReturn(java.lang.Object)", "public static org.mockito.BDDMockito$BDDStubber willReturn(java.lang.Object)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willReturn(java.lang.Object, java.lang.Object...)", "public static org.mockito.BDDMockito$BDDStubber willReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willCallRealMethod()", "public static org.mockito.BDDMockito$BDDStubber willCallRealMethod()"], ["org.mockito.Mockito", "org.mockito.Mockito()", "public org.mockito.Mockito()"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>)", "public static <T> T mock(java.lang.Class<T>)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, java.lang.String)", "public static <T> T mock(java.lang.Class<T>, java.lang.String)"], ["org.mockito.MockingDetails", "org.mockito.Mockito.mockingDetails(java.lang.Object)", "public static org.mockito.MockingDetails mockingDetails(java.lang.Object)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.stubbing.Answer)", "public static <T> T mock(java.lang.Class<T>, org.mockito.stubbing.Answer)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.MockSettings)", "public static <T> T mock(java.lang.Class<T>, org.mockito.MockSettings)"], ["<T> T", "org.mockito.Mockito.spy(T)", "public static <T> T spy(T)"], ["<T> T", "org.mockito.Mockito.spy(java.lang.Class<T>)", "public static <T> T spy(java.lang.Class<T>)"], ["<T> org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.Mockito.when(T)", "public static <T> org.mockito.stubbing.OngoingStubbing<T> when(T)"], ["<T> T", "org.mockito.Mockito.verify(T)", "public static <T> T verify(T)"], ["<T> T", "org.mockito.Mockito.verify(T, org.mockito.verification.VerificationMode)", "public static <T> T verify(T, org.mockito.verification.VerificationMode)"], ["<T> void", "org.mockito.Mockito.reset(T...)", "public static <T> void reset(T...)"], ["<T> void", "org.mockito.Mockito.clearInvocations(T...)", "public static <T> void clearInvocations(T...)"], ["void", "org.mockito.Mockito.verifyNoMoreInteractions(java.lang.Object...)", "public static void verifyNoMoreInteractions(java.lang.Object...)"], ["void", "org.mockito.Mockito.verifyZeroInteractions(java.lang.Object...)", "public static void verifyZeroInteractions(java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Throwable...)", "public static org.mockito.stubbing.Stubber doThrow(java.lang.Throwable...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>)", "public static org.mockito.stubbing.Stubber doThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public static org.mockito.stubbing.Stubber doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doCallRealMethod()", "public static org.mockito.stubbing.Stubber doCallRealMethod()"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doAnswer(org.mockito.stubbing.Answer)", "public static org.mockito.stubbing.Stubber doAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doNothing()", "public static org.mockito.stubbing.Stubber doNothing()"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doReturn(java.lang.Object)", "public static org.mockito.stubbing.Stubber doReturn(java.lang.Object)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doReturn(java.lang.Object, java.lang.Object...)", "public static org.mockito.stubbing.Stubber doReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.InOrder", "org.mockito.Mockito.inOrder(java.lang.Object...)", "public static org.mockito.InOrder inOrder(java.lang.Object...)"], ["java.lang.Object[]", "org.mockito.Mockito.ignoreStubs(java.lang.Object...)", "public static java.lang.Object[] ignoreStubs(java.lang.Object...)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.times(int)", "public static org.mockito.verification.VerificationMode times(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.never()", "public static org.mockito.verification.VerificationMode never()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atLeastOnce()", "public static org.mockito.verification.VerificationMode atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atLeast(int)", "public static org.mockito.verification.VerificationMode atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atMost(int)", "public static org.mockito.verification.VerificationMode atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.calls(int)", "public static org.mockito.verification.VerificationMode calls(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.only()", "public static org.mockito.verification.VerificationMode only()"], ["org.mockito.verification.VerificationWithTimeout", "org.mockito.Mockito.timeout(long)", "public static org.mockito.verification.VerificationWithTimeout timeout(long)"], ["org.mockito.verification.VerificationAfterDelay", "org.mockito.Mockito.after(long)", "public static org.mockito.verification.VerificationAfterDelay after(long)"], ["void", "org.mockito.Mockito.validateMockitoUsage()", "public static void validateMockitoUsage()"], ["org.mockito.MockSettings", "org.mockito.Mockito.withSettings()", "public static org.mockito.MockSettings withSettings()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.description(java.lang.String)", "public static org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.MockitoFramework", "org.mockito.Mockito.framework()", "public static org.mockito.MockitoFramework framework()"], ["org.mockito.Answers[]", "org.mockito.Answers.values()", "public static org.mockito.Answers[] values()"], ["org.mockito.Answers", "org.mockito.Answers.valueOf(java.lang.String)", "public static org.mockito.Answers valueOf(java.lang.String)"], ["org.mockito.stubbing.Answer<java.lang.Object>", "org.mockito.Answers.get()", "public org.mockito.stubbing.Answer<java.lang.Object> get()"], ["java.lang.Object", "org.mockito.Answers.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.mock.SerializableMode[]", "org.mockito.mock.SerializableMode.values()", "public static org.mockito.mock.SerializableMode[] values()"], ["org.mockito.mock.SerializableMode", "org.mockito.mock.SerializableMode.valueOf(java.lang.String)", "public static org.mockito.mock.SerializableMode valueOf(java.lang.String)"], ["org.mockito.verification.Timeout", "org.mockito.verification.Timeout(long, org.mockito.verification.VerificationMode)", "public org.mockito.verification.Timeout(long, org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.atMost(int)", "public org.mockito.verification.VerificationMode atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.never()", "public org.mockito.verification.VerificationMode never()"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.verification.After", "org.mockito.verification.After(long, org.mockito.verification.VerificationMode)", "public org.mockito.verification.After(long, org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.After.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.junit.MockitoJUnit", "org.mockito.junit.MockitoJUnit()", "public org.mockito.junit.MockitoJUnit()"], ["org.mockito.junit.MockitoRule", "org.mockito.junit.MockitoJUnit.rule()", "public static org.mockito.junit.MockitoRule rule()"], ["org.mockito.junit.VerificationCollector", "org.mockito.junit.MockitoJUnit.collector()", "public static org.mockito.junit.VerificationCollector collector()"], ["org.mockito.configuration.DefaultMockitoConfiguration", "org.mockito.configuration.DefaultMockitoConfiguration()", "public org.mockito.configuration.DefaultMockitoConfiguration()"], ["org.mockito.stubbing.Answer<java.lang.Object>", "org.mockito.configuration.DefaultMockitoConfiguration.getDefaultAnswer()", "public org.mockito.stubbing.Answer<java.lang.Object> getDefaultAnswer()"], ["org.mockito.configuration.AnnotationEngine", "org.mockito.configuration.DefaultMockitoConfiguration.getAnnotationEngine()", "public org.mockito.configuration.AnnotationEngine getAnnotationEngine()"], ["boolean", "org.mockito.configuration.DefaultMockitoConfiguration.cleansStackTrace()", "public boolean cleansStackTrace()"], ["boolean", "org.mockito.configuration.DefaultMockitoConfiguration.enableClassCache()", "public boolean enableClassCache()"], ["java.util.List<java.lang.Object>", "org.mockito.internal.InOrderImpl.getMocksToBeVerifiedInOrder()", "public java.util.List<java.lang.Object> getMocksToBeVerifiedInOrder()"], ["org.mockito.internal.InOrderImpl", "org.mockito.internal.InOrderImpl(java.util.List<? extends java.lang.Object>)", "public org.mockito.internal.InOrderImpl(java.util.List<? extends java.lang.Object>)"], ["<T> T", "org.mockito.internal.InOrderImpl.verify(T)", "public <T> T verify(T)"], ["<T> T", "org.mockito.internal.InOrderImpl.verify(T, org.mockito.verification.VerificationMode)", "public <T> T verify(T, org.mockito.verification.VerificationMode)"], ["boolean", "org.mockito.internal.InOrderImpl.isVerified(org.mockito.invocation.Invocation)", "public boolean isVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.InOrderImpl.markVerified(org.mockito.invocation.Invocation)", "public void markVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.InOrderImpl.verifyNoMoreInteractions()", "public void verifyNoMoreInteractions()"], ["org.mockito.internal.MockitoCore", "org.mockito.internal.MockitoCore()", "public org.mockito.internal.MockitoCore()"], ["boolean", "org.mockito.internal.MockitoCore.isTypeMockable(java.lang.Class<?>)", "public boolean isTypeMockable(java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.MockitoCore.mock(java.lang.Class<T>, org.mockito.MockSettings)", "public <T> T mock(java.lang.Class<T>, org.mockito.MockSettings)"], ["<T> org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.MockitoCore.when(T)", "public <T> org.mockito.stubbing.OngoingStubbing<T> when(T)"], ["<T> T", "org.mockito.internal.MockitoCore.verify(T, org.mockito.verification.VerificationMode)", "public <T> T verify(T, org.mockito.verification.VerificationMode)"], ["<T> void", "org.mockito.internal.MockitoCore.reset(T...)", "public <T> void reset(T...)"], ["<T> void", "org.mockito.internal.MockitoCore.clearInvocations(T...)", "public <T> void clearInvocations(T...)"], ["void", "org.mockito.internal.MockitoCore.verifyNoMoreInteractions(java.lang.Object...)", "public void verifyNoMoreInteractions(java.lang.Object...)"], ["void", "org.mockito.internal.MockitoCore.verifyNoMoreInteractionsInOrder(java.util.List<java.lang.Object>, org.mockito.internal.verification.api.InOrderContext)", "public void verifyNoMoreInteractionsInOrder(java.util.List<java.lang.Object>, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.InOrder", "org.mockito.internal.MockitoCore.inOrder(java.lang.Object...)", "public org.mockito.InOrder inOrder(java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.MockitoCore.stubber()", "public org.mockito.stubbing.Stubber stubber()"], ["void", "org.mockito.internal.MockitoCore.validateMockitoUsage()", "public void validateMockitoUsage()"], ["org.mockito.invocation.Invocation", "org.mockito.internal.MockitoCore.getLastInvocation()", "public org.mockito.invocation.Invocation getLastInvocation()"], ["java.lang.Object[]", "org.mockito.internal.MockitoCore.ignoreStubs(java.lang.Object...)", "public java.lang.Object[] ignoreStubs(java.lang.Object...)"], ["org.mockito.MockingDetails", "org.mockito.internal.MockitoCore.mockingDetails(java.lang.Object)", "public org.mockito.MockingDetails mockingDetails(java.lang.Object)"], ["org.mockito.internal.handler.InvocationNotifierHandler", "org.mockito.internal.handler.InvocationNotifierHandler(org.mockito.internal.InternalMockHandler<T>, org.mockito.mock.MockCreationSettings<T>)", "public org.mockito.internal.handler.InvocationNotifierHandler(org.mockito.internal.InternalMockHandler<T>, org.mockito.mock.MockCreationSettings<T>)"], ["java.lang.Object", "org.mockito.internal.handler.InvocationNotifierHandler.handle(org.mockito.invocation.Invocation)", "public java.lang.Object handle(org.mockito.invocation.Invocation) throws java.lang.Throwable"], ["org.mockito.mock.MockCreationSettings<T>", "org.mockito.internal.handler.InvocationNotifierHandler.getMockSettings()", "public org.mockito.mock.MockCreationSettings<T> getMockSettings()"], ["void", "org.mockito.internal.handler.InvocationNotifierHandler.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)", "public void setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.InvocationNotifierHandler.getInvocationContainer()", "public org.mockito.internal.stubbing.InvocationContainer getInvocationContainer()"], ["org.mockito.internal.handler.MockHandlerFactory", "org.mockito.internal.handler.MockHandlerFactory()", "public org.mockito.internal.handler.MockHandlerFactory()"], ["<T> org.mockito.internal.InternalMockHandler<T>", "org.mockito.internal.handler.MockHandlerFactory.createMockHandler(org.mockito.mock.MockCreationSettings<T>)", "public static <T> org.mockito.internal.InternalMockHandler<T> createMockHandler(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.internal.handler.NotifiedMethodInvocationReport", "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Object)", "public org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Object)"], ["org.mockito.internal.handler.NotifiedMethodInvocationReport", "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Throwable)", "public org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Throwable)"], ["org.mockito.invocation.DescribedInvocation", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getInvocation()", "public org.mockito.invocation.DescribedInvocation getInvocation()"], ["java.lang.Object", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getReturnedValue()", "public java.lang.Object getReturnedValue()"], ["java.lang.Throwable", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getThrowable()", "public java.lang.Throwable getThrowable()"], ["boolean", "org.mockito.internal.handler.NotifiedMethodInvocationReport.threwException()", "public boolean threwException()"], ["java.lang.String", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getLocationOfStubbing()", "public java.lang.String getLocationOfStubbing()"], ["boolean", "org.mockito.internal.handler.NotifiedMethodInvocationReport.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.handler.NotifiedMethodInvocationReport.hashCode()", "public int hashCode()"], ["org.mockito.internal.handler.NullResultGuardian", "org.mockito.internal.handler.NullResultGuardian(org.mockito.internal.InternalMockHandler<T>)", "public org.mockito.internal.handler.NullResultGuardian(org.mockito.internal.InternalMockHandler<T>)"], ["java.lang.Object", "org.mockito.internal.handler.NullResultGuardian.handle(org.mockito.invocation.Invocation)", "public java.lang.Object handle(org.mockito.invocation.Invocation) throws java.lang.Throwable"], ["org.mockito.mock.MockCreationSettings<T>", "org.mockito.internal.handler.NullResultGuardian.getMockSettings()", "public org.mockito.mock.MockCreationSettings<T> getMockSettings()"], ["void", "org.mockito.internal.handler.NullResultGuardian.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)", "public void setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.NullResultGuardian.getInvocationContainer()", "public org.mockito.internal.stubbing.InvocationContainer getInvocationContainer()"], ["org.mockito.internal.handler.MockHandlerImpl", "org.mockito.internal.handler.MockHandlerImpl(org.mockito.mock.MockCreationSettings<T>)", "public org.mockito.internal.handler.MockHandlerImpl(org.mockito.mock.MockCreationSettings<T>)"], ["java.lang.Object", "org.mockito.internal.handler.MockHandlerImpl.handle(org.mockito.invocation.Invocation)", "public java.lang.Object handle(org.mockito.invocation.Invocation) throws java.lang.Throwable"], ["org.mockito.mock.MockCreationSettings<T>", "org.mockito.internal.handler.MockHandlerImpl.getMockSettings()", "public org.mockito.mock.MockCreationSettings<T> getMockSettings()"], ["void", "org.mockito.internal.handler.MockHandlerImpl.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)", "public void setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.MockHandlerImpl.getInvocationContainer()", "public org.mockito.internal.stubbing.InvocationContainer getInvocationContainer()"], ["org.mockito.internal.progress.ArgumentMatcherStorageImpl", "org.mockito.internal.progress.ArgumentMatcherStorageImpl()", "public org.mockito.internal.progress.ArgumentMatcherStorageImpl()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportMatcher(org.mockito.ArgumentMatcher)", "public void reportMatcher(org.mockito.ArgumentMatcher)"], ["java.util.List<org.mockito.internal.matchers.LocalizedMatcher>", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.pullLocalizedMatchers()", "public java.util.List<org.mockito.internal.matchers.LocalizedMatcher> pullLocalizedMatchers()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportAnd()", "public void reportAnd()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportOr()", "public void reportOr()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportNot()", "public void reportNot()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.validateState()", "public void validateState()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reset()", "public void reset()"], ["org.mockito.internal.progress.MockingProgressImpl", "org.mockito.internal.progress.MockingProgressImpl()", "public org.mockito.internal.progress.MockingProgressImpl()"], ["org.mockito.verification.VerificationStrategy", "org.mockito.internal.progress.MockingProgressImpl.getDefaultVerificationStrategy()", "public static org.mockito.verification.VerificationStrategy getDefaultVerificationStrategy()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.reportOngoingStubbing(org.mockito.stubbing.OngoingStubbing)", "public void reportOngoingStubbing(org.mockito.stubbing.OngoingStubbing)"], ["org.mockito.stubbing.OngoingStubbing<?>", "org.mockito.internal.progress.MockingProgressImpl.pullOngoingStubbing()", "public org.mockito.stubbing.OngoingStubbing<?> pullOngoingStubbing()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.verificationStarted(org.mockito.verification.VerificationMode)", "public void verificationStarted(org.mockito.verification.VerificationMode)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.resetOngoingStubbing()", "public void resetOngoingStubbing()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl.pullVerificationMode()", "public org.mockito.verification.VerificationMode pullVerificationMode()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.stubbingStarted()", "public void stubbingStarted()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.validateState()", "public void validateState()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.stubbingCompleted(org.mockito.invocation.Invocation)", "public void stubbingCompleted(org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.progress.MockingProgressImpl.toString()", "public java.lang.String toString()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.reset()", "public void reset()"], ["org.mockito.internal.progress.ArgumentMatcherStorage", "org.mockito.internal.progress.MockingProgressImpl.getArgumentMatcherStorage()", "public org.mockito.internal.progress.ArgumentMatcherStorage getArgumentMatcherStorage()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.mockingStarted(java.lang.Object, org.mockito.mock.MockCreationSettings)", "public void mockingStarted(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.addListener(org.mockito.listeners.MockitoListener)", "public void addListener(org.mockito.listeners.MockitoListener)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.removeListener(org.mockito.listeners.MockitoListener)", "public void removeListener(org.mockito.listeners.MockitoListener)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.setVerificationStrategy(org.mockito.verification.VerificationStrategy)", "public void setVerificationStrategy(org.mockito.verification.VerificationStrategy)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl.maybeVerifyLazily(org.mockito.verification.VerificationMode)", "public org.mockito.verification.VerificationMode maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl$1.maybeVerifyLazily(org.mockito.verification.VerificationMode)", "public org.mockito.verification.VerificationMode maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.internal.progress.MockingProgress", "org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress()", "public static final org.mockito.internal.progress.MockingProgress mockingProgress()"], ["org.mockito.internal.progress.SequenceNumber", "org.mockito.internal.progress.SequenceNumber()", "public org.mockito.internal.progress.SequenceNumber()"], ["synchronized", "org.mockito.internal.progress.SequenceNumber.int next()", "public static synchronized int next()"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.util.MockUtil.typeMockabilityOf(java.lang.Class<?>)", "public static org.mockito.plugins.MockMaker$TypeMockability typeMockabilityOf(java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.util.MockUtil.createMock(org.mockito.mock.MockCreationSettings<T>)", "public static <T> T createMock(org.mockito.mock.MockCreationSettings<T>)"], ["<T> void", "org.mockito.internal.util.MockUtil.resetMock(T)", "public static <T> void resetMock(T)"], ["<T> org.mockito.internal.InternalMockHandler<T>", "org.mockito.internal.util.MockUtil.getMockHandler(T)", "public static <T> org.mockito.internal.InternalMockHandler<T> getMockHandler(T)"], ["boolean", "org.mockito.internal.util.MockUtil.isMock(java.lang.Object)", "public static boolean isMock(java.lang.Object)"], ["boolean", "org.mockito.internal.util.MockUtil.isSpy(java.lang.Object)", "public static boolean isSpy(java.lang.Object)"], ["org.mockito.mock.MockName", "org.mockito.internal.util.MockUtil.getMockName(java.lang.Object)", "public static org.mockito.mock.MockName getMockName(java.lang.Object)"], ["void", "org.mockito.internal.util.MockUtil.maybeRedefineMockName(java.lang.Object, java.lang.String)", "public static void maybeRedefineMockName(java.lang.Object, java.lang.String)"], ["org.mockito.mock.MockCreationSettings", "org.mockito.internal.util.MockUtil.getMockSettings(java.lang.Object)", "public static org.mockito.mock.MockCreationSettings getMockSettings(java.lang.Object)"], ["org.mockito.internal.util.MockCreationValidator", "org.mockito.internal.util.MockCreationValidator()", "public org.mockito.internal.util.MockCreationValidator()"], ["void", "org.mockito.internal.util.MockCreationValidator.validateType(java.lang.Class<?>)", "public void validateType(java.lang.Class<?>)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateExtraInterfaces(java.lang.Class<?>, java.util.Collection<java.lang.Class<?>>)", "public void validateExtraInterfaces(java.lang.Class<?>, java.util.Collection<java.lang.Class<?>>)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateMockedType(java.lang.Class<?>, java.lang.Object)", "public void validateMockedType(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateDelegatedInstance(java.lang.Class<?>, java.lang.Object)", "public void validateDelegatedInstance(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateConstructorUse(boolean, org.mockito.mock.SerializableMode)", "public void validateConstructorUse(boolean, org.mockito.mock.SerializableMode)"], ["java.lang.String", "org.mockito.internal.util.Platform.describe()", "public static java.lang.String describe()"], ["boolean", "org.mockito.internal.util.Platform.isJava8BelowUpdate45()", "public static boolean isJava8BelowUpdate45()"], ["org.mockito.internal.util.Checks", "org.mockito.internal.util.Checks()", "public org.mockito.internal.util.Checks()"], ["<T> T", "org.mockito.internal.util.Checks.checkNotNull(T, java.lang.String)", "public static <T> T checkNotNull(T, java.lang.String)"], ["<T extends java.lang.Iterable<?>> T", "org.mockito.internal.util.Checks.checkItemsNotNull(T, java.lang.String)", "public static <T extends java.lang.Iterable<?>> T checkItemsNotNull(T, java.lang.String)"], ["org.mockito.internal.util.Decamelizer", "org.mockito.internal.util.Decamelizer()", "public org.mockito.internal.util.Decamelizer()"], ["java.lang.String", "org.mockito.internal.util.Decamelizer.decamelizeMatcher(java.lang.String)", "public static java.lang.String decamelizeMatcher(java.lang.String)"], ["org.mockito.internal.util.RemoveFirstLine", "org.mockito.internal.util.RemoveFirstLine()", "public org.mockito.internal.util.RemoveFirstLine()"], ["java.lang.String", "org.mockito.internal.util.RemoveFirstLine.of(java.lang.String)", "public java.lang.String of(java.lang.String)"], ["org.mockito.internal.util.DefaultMockingDetails", "org.mockito.internal.util.DefaultMockingDetails(java.lang.Object)", "public org.mockito.internal.util.DefaultMockingDetails(java.lang.Object)"], ["boolean", "org.mockito.internal.util.DefaultMockingDetails.isMock()", "public boolean isMock()"], ["boolean", "org.mockito.internal.util.DefaultMockingDetails.isSpy()", "public boolean isSpy()"], ["java.util.Collection<org.mockito.invocation.Invocation>", "org.mockito.internal.util.DefaultMockingDetails.getInvocations()", "public java.util.Collection<org.mockito.invocation.Invocation> getInvocations()"], ["org.mockito.mock.MockCreationSettings<?>", "org.mockito.internal.util.DefaultMockingDetails.getMockCreationSettings()", "public org.mockito.mock.MockCreationSettings<?> getMockCreationSettings()"], ["java.util.Collection<org.mockito.stubbing.Stubbing>", "org.mockito.internal.util.DefaultMockingDetails.getStubbings()", "public java.util.Collection<org.mockito.stubbing.Stubbing> getStubbings()"], ["java.lang.String", "org.mockito.internal.util.DefaultMockingDetails.printInvocations()", "public java.lang.String printInvocations()"], ["org.mockito.internal.util.MockNameImpl", "org.mockito.internal.util.MockNameImpl(java.lang.String, java.lang.Class<?>)", "public org.mockito.internal.util.MockNameImpl(java.lang.String, java.lang.Class<?>)"], ["org.mockito.internal.util.MockNameImpl", "org.mockito.internal.util.MockNameImpl(java.lang.String)", "public org.mockito.internal.util.MockNameImpl(java.lang.String)"], ["boolean", "org.mockito.internal.util.MockNameImpl.isDefault()", "public boolean isDefault()"], ["java.lang.String", "org.mockito.internal.util.MockNameImpl.toString()", "public java.lang.String toString()"], ["org.mockito.internal.util.StringJoiner", "org.mockito.internal.util.StringJoiner()", "public org.mockito.internal.util.StringJoiner()"], ["java.lang.String", "org.mockito.internal.util.StringJoiner.join(java.lang.Object...)", "public static java.lang.String join(java.lang.Object...)"], ["java.lang.String", "org.mockito.internal.util.StringJoiner.join(java.lang.String, java.lang.Iterable<?>)", "public static java.lang.String join(java.lang.String, java.lang.Iterable<?>)"], ["org.mockito.internal.util.Timer", "org.mockito.internal.util.Timer(long)", "public org.mockito.internal.util.Timer(long)"], ["boolean", "org.mockito.internal.util.Timer.isCounting()", "public boolean isCounting()"], ["void", "org.mockito.internal.util.Timer.start()", "public void start()"], ["long", "org.mockito.internal.util.Timer.duration()", "public long duration()"], ["boolean", "org.mockito.internal.util.ObjectMethodsGuru.isToStringMethod(java.lang.reflect.Method)", "public static boolean isToStringMethod(java.lang.reflect.Method)"], ["boolean", "org.mockito.internal.util.ObjectMethodsGuru.isCompareToMethod(java.lang.reflect.Method)", "public static boolean isCompareToMethod(java.lang.reflect.Method)"], ["java.lang.Object", "org.mockito.internal.util.JavaEightUtil.emptyOptional()", "public static java.lang.Object emptyOptional()"], ["java.lang.Object", "org.mockito.internal.util.JavaEightUtil.emptyStream()", "public static java.lang.Object emptyStream()"], ["org.mockito.internal.util.ConsoleMockitoLogger", "org.mockito.internal.util.ConsoleMockitoLogger()", "public org.mockito.internal.util.ConsoleMockitoLogger()"], ["void", "org.mockito.internal.util.ConsoleMockitoLogger.log(java.lang.Object)", "public void log(java.lang.Object)"], ["org.mockito.internal.util.Primitives", "org.mockito.internal.util.Primitives()", "public org.mockito.internal.util.Primitives()"], ["<T> java.lang.Class<T>", "org.mockito.internal.util.Primitives.primitiveTypeOf(java.lang.Class<T>)", "public static <T> java.lang.Class<T> primitiveTypeOf(java.lang.Class<T>)"], ["boolean", "org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(java.lang.Class<?>)", "public static boolean isPrimitiveOrWrapper(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.util.Primitives.isAssignableFromWrapper(java.lang.Class<?>, java.lang.Class<?>)", "public static boolean isAssignableFromWrapper(java.lang.Class<?>, java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.util.Primitives.defaultValue(java.lang.Class<T>)", "public static <T> T defaultValue(java.lang.Class<T>)"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner[]", "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.values()", "public static org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner[] values()"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner", "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.valueOf(java.lang.String)", "public static org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner valueOf(java.lang.String)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.hasNext()", "public boolean hasNext()"], ["java.util.Map$Entry<K, V>", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()", "public java.util.Map$Entry<K, V> next()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.remove()", "public void remove()"], ["java.lang.Object", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()", "public java.lang.Object next()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.hashCode()", "public int hashCode()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.remove()", "public void remove()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.next()", "public V next()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.hasNext()", "public boolean hasNext()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.hashCode()", "public int hashCode()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction()", "public org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.get(K)", "public V get(K)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.containsKey(K)", "public boolean containsKey(K)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.put(K, V)", "public V put(K, V)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.remove(K)", "public V remove(K)"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.iterator()", "public java.util.Iterator<java.util.Map$Entry<K, V>> iterator()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.approximateSize()", "public int approximateSize()"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal", "org.mockito.internal.util.concurrent.DetachedThreadLocal(org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner)", "public org.mockito.internal.util.concurrent.DetachedThreadLocal(org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.get()", "public T get()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.set(T)", "public void set(T)"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.clear()", "public void clear()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.clearAll()", "public void clearAll()"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.pushTo(java.lang.Thread)", "public T pushTo(java.lang.Thread)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.fetchFrom(java.lang.Thread)", "public T fetchFrom(java.lang.Thread)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.get(java.lang.Thread)", "public T get(java.lang.Thread)"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.define(java.lang.Thread, T)", "public void define(java.lang.Thread, T)"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Thread, T>", "org.mockito.internal.util.concurrent.DetachedThreadLocal.getBackingMap()", "public org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Thread, T> getBackingMap()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.run()", "public void run()"], ["K", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getKey()", "public K getKey()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getValue()", "public V getValue()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.setValue(V)", "public V setValue(V)"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet", "org.mockito.internal.util.concurrent.WeakConcurrentSet(org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner)", "public org.mockito.internal.util.concurrent.WeakConcurrentSet(org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.add(V)", "public boolean add(V)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.contains(V)", "public boolean contains(V)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.remove(V)", "public boolean remove(V)"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.clear()", "public void clear()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentSet.approximateSize()", "public int approximateSize()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.run()", "public void run()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.expungeStaleEntries()", "public void expungeStaleEntries()"], ["java.lang.Thread", "org.mockito.internal.util.concurrent.WeakConcurrentSet.getCleanerThread()", "public java.lang.Thread getCleanerThread()"], ["java.util.Iterator<V>", "org.mockito.internal.util.concurrent.WeakConcurrentSet.iterator()", "public java.util.Iterator<V> iterator()"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap", "org.mockito.internal.util.concurrent.WeakConcurrentMap(boolean)", "public org.mockito.internal.util.concurrent.WeakConcurrentMap(boolean)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.get(K)", "public V get(K)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap.containsKey(K)", "public boolean containsKey(K)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.put(K, V)", "public V put(K, V)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.remove(K)", "public V remove(K)"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.clear()", "public void clear()"], ["java.lang.Thread", "org.mockito.internal.util.concurrent.WeakConcurrentMap.getCleanerThread()", "public java.lang.Thread getCleanerThread()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.expungeStaleEntries()", "public void expungeStaleEntries()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap.approximateSize()", "public int approximateSize()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.run()", "public void run()"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.mockito.internal.util.concurrent.WeakConcurrentMap.iterator()", "public java.util.Iterator<java.util.Map$Entry<K, V>> iterator()"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner[]", "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.values()", "public static org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner[] values()"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner", "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.valueOf(java.lang.String)", "public static org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner valueOf(java.lang.String)"], ["void", "org.mockito.internal.util.reflection.FieldSetter.setField(java.lang.Object, java.lang.reflect.Field, java.lang.Object)", "public static void setField(java.lang.Object, java.lang.reflect.Field, java.lang.Object)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType(java.lang.reflect.TypeVariable<?>)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType(java.lang.reflect.TypeVariable<?>)"], ["java.lang.reflect.Type", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.firstBound()", "public java.lang.reflect.Type firstBound()"], ["java.lang.reflect.Type[]", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.interfaceBounds()", "public java.lang.reflect.Type[] interfaceBounds()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.hashCode()", "public int hashCode()"], ["java.lang.String", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.toString()", "public java.lang.String toString()"], ["java.lang.reflect.TypeVariable<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.typeVariable()", "public java.lang.reflect.TypeVariable<?> typeVariable()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.Type)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.Type)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport.rawType()", "public java.lang.Class<?> rawType()"], ["org.mockito.internal.util.reflection.FieldCopier", "org.mockito.internal.util.reflection.FieldCopier()", "public org.mockito.internal.util.reflection.FieldCopier()"], ["<T> void", "org.mockito.internal.util.reflection.FieldCopier.copyValue(T, T, java.lang.reflect.Field)", "public <T> void copyValue(T, T, java.lang.reflect.Field) throws java.lang.IllegalAccessException"], ["org.mockito.internal.util.reflection.InstanceField", "org.mockito.internal.util.reflection.InstanceField(java.lang.reflect.Field, java.lang.Object)", "public org.mockito.internal.util.reflection.InstanceField(java.lang.reflect.Field, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.util.reflection.InstanceField.read()", "public java.lang.Object read()"], ["void", "org.mockito.internal.util.reflection.InstanceField.set(java.lang.Object)", "public void set(java.lang.Object)"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isNull()", "public boolean isNull()"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isAnnotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>)", "public boolean isAnnotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isSynthetic()", "public boolean isSynthetic()"], ["<A extends java.lang.annotation.Annotation> A", "org.mockito.internal.util.reflection.InstanceField.annotation(java.lang.Class<A>)", "public <A extends java.lang.annotation.Annotation> A annotation(java.lang.Class<A>)"], ["java.lang.reflect.Field", "org.mockito.internal.util.reflection.InstanceField.jdkField()", "public java.lang.reflect.Field jdkField()"], ["java.lang.String", "org.mockito.internal.util.reflection.InstanceField.name()", "public java.lang.String name()"], ["java.lang.String", "org.mockito.internal.util.reflection.InstanceField.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.InstanceField.hashCode()", "public int hashCode()"], ["org.mockito.internal.util.reflection.LenientCopyTool", "org.mockito.internal.util.reflection.LenientCopyTool()", "public org.mockito.internal.util.reflection.LenientCopyTool()"], ["<T> void", "org.mockito.internal.util.reflection.LenientCopyTool.copyToMock(T, T)", "public <T> void copyToMock(T, T)"], ["<T> void", "org.mockito.internal.util.reflection.LenientCopyTool.copyToRealObject(T, T)", "public <T> void copyToRealObject(T, T)"], ["java.util.List<java.lang.reflect.Field>", "org.mockito.internal.util.reflection.SuperTypesLastSorter.sortSuperTypesLast(java.util.Collection<? extends java.lang.reflect.Field>)", "public static java.util.List<java.lang.reflect.Field> sortSuperTypesLast(java.util.Collection<? extends java.lang.reflect.Field>)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport(java.lang.Class<?>)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport(java.lang.Class<?>)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport.rawType()", "public java.lang.Class<?> rawType()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.TypeVariable<?>)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.TypeVariable<?>)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.rawType()", "public java.lang.Class<?> rawType()"], ["java.util.List<java.lang.reflect.Type>", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.extraInterfaces()", "public java.util.List<java.lang.reflect.Type> extraInterfaces()"], ["java.lang.Class<?>[]", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.rawExtraInterfaces()", "public java.lang.Class<?>[] rawExtraInterfaces()"], ["boolean", "org.mockito.internal.util.reflection.Fields$1.isOut(org.mockito.internal.util.reflection.InstanceField)", "public boolean isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$1.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["boolean", "org.mockito.internal.util.reflection.Fields$2.isOut(org.mockito.internal.util.reflection.InstanceField)", "public boolean isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$2.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator.instantiate()", "public org.mockito.internal.util.reflection.FieldInitializationReport instantiate()"], ["org.mockito.internal.util.reflection.FieldReader", "org.mockito.internal.util.reflection.FieldReader(java.lang.Object, java.lang.reflect.Field)", "public org.mockito.internal.util.reflection.FieldReader(java.lang.Object, java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.util.reflection.FieldReader.isNull()", "public boolean isNull()"], ["java.lang.Object", "org.mockito.internal.util.reflection.FieldReader.read()", "public java.lang.Object read()"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializationReport(java.lang.Object, boolean, boolean)", "public org.mockito.internal.util.reflection.FieldInitializationReport(java.lang.Object, boolean, boolean)"], ["java.lang.Object", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldInstance()", "public java.lang.Object fieldInstance()"], ["boolean", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitialized()", "public boolean fieldWasInitialized()"], ["boolean", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitializedUsingContructorArgs()", "public boolean fieldWasInitializedUsingContructorArgs()"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldClass()", "public java.lang.Class<?> fieldClass()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, int)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, int)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType.rawType()", "public java.lang.Class<?> rawType()"], ["boolean", "org.mockito.internal.util.reflection.Fields$3.isOut(org.mockito.internal.util.reflection.InstanceField)", "public boolean isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$3.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields(java.lang.Object, java.util.List<org.mockito.internal.util.reflection.InstanceField>)", "public org.mockito.internal.util.reflection.Fields$InstanceFields(java.lang.Object, java.util.List<org.mockito.internal.util.reflection.InstanceField>)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields.filter(org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>)", "public org.mockito.internal.util.reflection.Fields$InstanceFields filter(org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields.notNull()", "public org.mockito.internal.util.reflection.Fields$InstanceFields notNull()"], ["java.util.List<org.mockito.internal.util.reflection.InstanceField>", "org.mockito.internal.util.reflection.Fields$InstanceFields.instanceFields()", "public java.util.List<org.mockito.internal.util.reflection.InstanceField> instanceFields()"], ["java.util.List<java.lang.Object>", "org.mockito.internal.util.reflection.Fields$InstanceFields.assignedValues()", "public java.util.List<java.lang.Object> assignedValues()"], ["java.util.List<java.lang.String>", "org.mockito.internal.util.reflection.Fields$InstanceFields.names()", "public java.util.List<java.lang.String> names()"], ["org.mockito.internal.util.reflection.Constructors", "org.mockito.internal.util.reflection.Constructors()", "public org.mockito.internal.util.reflection.Constructors()"], ["java.lang.reflect.Constructor<?>", "org.mockito.internal.util.reflection.Constructors.noArgConstructorOf(java.lang.Class<?>)", "public static java.lang.reflect.Constructor<?> noArgConstructorOf(java.lang.Class<?>)"], ["org.mockito.internal.util.reflection.GenericMaster", "org.mockito.internal.util.reflection.GenericMaster()", "public org.mockito.internal.util.reflection.GenericMaster()"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMaster.getGenericType(java.lang.reflect.Field)", "public java.lang.Class<?> getGenericType(java.lang.reflect.Field)"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate()", "public org.mockito.internal.util.reflection.FieldInitializationReport instantiate()"], ["org.mockito.internal.util.reflection.FieldInitializer", "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field)", "public org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field)"], ["org.mockito.internal.util.reflection.FieldInitializer", "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver)", "public org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver)"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer.initialize()", "public org.mockito.internal.util.reflection.FieldInitializationReport initialize()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.ParameterizedType)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.ParameterizedType)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType.rawType()", "public java.lang.Class<?> rawType()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType(java.lang.reflect.WildcardType)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType(java.lang.reflect.WildcardType)"], ["java.lang.reflect.Type", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.firstBound()", "public java.lang.reflect.Type firstBound()"], ["java.lang.reflect.Type[]", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.interfaceBounds()", "public java.lang.reflect.Type[] interfaceBounds()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.hashCode()", "public int hashCode()"], ["java.lang.String", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.toString()", "public java.lang.String toString()"], ["java.lang.reflect.WildcardType", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.wildCard()", "public java.lang.reflect.WildcardType wildCard()"], ["org.mockito.internal.util.reflection.AccessibilityChanger", "org.mockito.internal.util.reflection.AccessibilityChanger()", "public org.mockito.internal.util.reflection.AccessibilityChanger()"], ["void", "org.mockito.internal.util.reflection.AccessibilityChanger.safelyDisableAccess(java.lang.reflect.AccessibleObject)", "public void safelyDisableAccess(java.lang.reflect.AccessibleObject)"], ["void", "org.mockito.internal.util.reflection.AccessibilityChanger.enableAccess(java.lang.reflect.AccessibleObject)", "public void enableAccess(java.lang.reflect.AccessibleObject)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport()", "public org.mockito.internal.util.reflection.GenericMetadataSupport()"], ["java.util.List<java.lang.reflect.Type>", "org.mockito.internal.util.reflection.GenericMetadataSupport.extraInterfaces()", "public java.util.List<java.lang.reflect.Type> extraInterfaces()"], ["java.lang.Class<?>[]", "org.mockito.internal.util.reflection.GenericMetadataSupport.rawExtraInterfaces()", "public java.lang.Class<?>[] rawExtraInterfaces()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport.hasRawExtraInterfaces()", "public boolean hasRawExtraInterfaces()"], ["java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>", "org.mockito.internal.util.reflection.GenericMetadataSupport.actualTypeArguments()", "public java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> actualTypeArguments()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport.resolveGenericReturnType(java.lang.reflect.Method)", "public org.mockito.internal.util.reflection.GenericMetadataSupport resolveGenericReturnType(java.lang.reflect.Method)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(java.lang.reflect.Type)", "public static org.mockito.internal.util.reflection.GenericMetadataSupport inferFrom(java.lang.reflect.Type)"], ["org.mockito.internal.util.reflection.GenericTypeExtractor", "org.mockito.internal.util.reflection.GenericTypeExtractor()", "public org.mockito.internal.util.reflection.GenericTypeExtractor()"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericTypeExtractor.genericTypeOf(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>)", "public static java.lang.Class<?> genericTypeOf(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>)"], ["org.mockito.internal.util.reflection.Fields", "org.mockito.internal.util.reflection.Fields()", "public org.mockito.internal.util.reflection.Fields()"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields.allDeclaredFieldsOf(java.lang.Object)", "public static org.mockito.internal.util.reflection.Fields$InstanceFields allDeclaredFieldsOf(java.lang.Object)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields.declaredFieldsOf(java.lang.Object)", "public static org.mockito.internal.util.reflection.Fields$InstanceFields declaredFieldsOf(java.lang.Object)"], ["org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>", "org.mockito.internal.util.reflection.Fields.annotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>...)", "public static org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField> annotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>...)"], ["org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>", "org.mockito.internal.util.reflection.Fields.syntheticField()", "public static org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField> syntheticField()"], ["int", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.reflect.Constructor<?>, java.lang.reflect.Constructor<?>)", "public int compare(java.lang.reflect.Constructor<?>, java.lang.reflect.Constructor<?>)"], ["int", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.util.reflection.BeanPropertySetter", "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field, boolean)", "public org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field, boolean)"], ["org.mockito.internal.util.reflection.BeanPropertySetter", "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field)", "public org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.util.reflection.BeanPropertySetter.set(java.lang.Object)", "public boolean set(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.reflect.Field, java.lang.reflect.Field)", "public int compare(java.lang.reflect.Field, java.lang.reflect.Field)"], ["int", "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport(java.lang.reflect.ParameterizedType)", "public org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport(java.lang.reflect.ParameterizedType)"], ["java.lang.Class<?>", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport.rawType()", "public java.lang.Class<?> rawType()"], ["org.mockito.internal.util.junit.JUnitFailureHacker", "org.mockito.internal.util.junit.JUnitFailureHacker()", "public org.mockito.internal.util.junit.JUnitFailureHacker()"], ["void", "org.mockito.internal.util.junit.JUnitFailureHacker.appendWarnings(org.junit.runner.notification.Failure, java.lang.String)", "public void appendWarnings(org.junit.runner.notification.Failure, java.lang.String)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.hasNext()", "public boolean hasNext()"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.next()", "public java.lang.Object next()"], ["void", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.remove()", "public void remove()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()", "public org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()"], ["java.util.Iterator<java.lang.Object>", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.iterator()", "public java.util.Iterator<java.lang.Object> iterator()"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.size()", "public int size()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.isEmpty()", "public boolean isEmpty()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.contains(java.lang.Object)", "public boolean contains(java.lang.Object)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.remove(java.lang.Object)", "public boolean remove(java.lang.Object)"], ["void", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clear()", "public void clear()"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.hashCode()", "public int hashCode()"], ["java.lang.Object[]", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray()", "public java.lang.Object[] toArray()"], ["<T> T[]", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray(T[])", "public <T> T[] toArray(T[])"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.removeAll(java.util.Collection<?>)", "public boolean removeAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection<?>)", "public boolean containsAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.addAll(java.util.Collection<?>)", "public boolean addAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.retainAll(java.util.Collection<?>)", "public boolean retainAll(java.util.Collection<?>)"], ["java.lang.String", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toString()", "public java.lang.String toString()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Object...)", "public static org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet of(java.lang.Object...)"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Iterable<java.lang.Object>)", "public static org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet of(java.lang.Iterable<java.lang.Object>)"], ["org.mockito.internal.util.collections.Sets", "org.mockito.internal.util.collections.Sets()", "public org.mockito.internal.util.collections.Sets()"], ["java.util.Set<java.lang.Object>", "org.mockito.internal.util.collections.Sets.newMockSafeHashSet(java.lang.Iterable<java.lang.Object>)", "public static java.util.Set<java.lang.Object> newMockSafeHashSet(java.lang.Iterable<java.lang.Object>)"], ["java.util.Set<java.lang.Object>", "org.mockito.internal.util.collections.Sets.newMockSafeHashSet(java.lang.Object...)", "public static java.util.Set<java.lang.Object> newMockSafeHashSet(java.lang.Object...)"], ["org.mockito.internal.util.collections.IdentitySet", "org.mockito.internal.util.collections.Sets.newIdentitySet()", "public static org.mockito.internal.util.collections.IdentitySet newIdentitySet()"], ["<T> java.util.Set<T>", "org.mockito.internal.util.collections.Sets.newSet(T...)", "public static <T> java.util.Set<T> newSet(T...)"], ["org.mockito.internal.util.collections.ListUtil", "org.mockito.internal.util.collections.ListUtil()", "public org.mockito.internal.util.collections.ListUtil()"], ["<T> java.util.LinkedList<T>", "org.mockito.internal.util.collections.ListUtil.filter(java.util.Collection<T>, org.mockito.internal.util.collections.ListUtil$Filter<T>)", "public static <T> java.util.LinkedList<T> filter(java.util.Collection<T>, org.mockito.internal.util.collections.ListUtil$Filter<T>)"], ["org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper(java.lang.Object)", "public org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.get()", "public java.lang.Object get()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.hashCode()", "public int hashCode()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(java.lang.Object)", "public static org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper of(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.toString()", "public java.lang.String toString()"], ["org.mockito.internal.util.collections.IdentitySet", "org.mockito.internal.util.collections.IdentitySet()", "public org.mockito.internal.util.collections.IdentitySet()"], ["boolean", "org.mockito.internal.util.collections.IdentitySet.contains(java.lang.Object)", "public boolean contains(java.lang.Object)"], ["void", "org.mockito.internal.util.collections.IdentitySet.add(java.lang.Object)", "public void add(java.lang.Object)"], ["org.mockito.internal.util.collections.Iterables", "org.mockito.internal.util.collections.Iterables()", "public org.mockito.internal.util.collections.Iterables()"], ["<T> java.lang.Iterable<T>", "org.mockito.internal.util.collections.Iterables.toIterable(java.util.Enumeration<T>)", "public static <T> java.lang.Iterable<T> toIterable(java.util.Enumeration<T>)"], ["org.mockito.internal.util.io.IOUtil", "org.mockito.internal.util.io.IOUtil()", "public org.mockito.internal.util.io.IOUtil()"], ["void", "org.mockito.internal.util.io.IOUtil.writeText(java.lang.String, java.io.File)", "public static void writeText(java.lang.String, java.io.File)"], ["java.util.Collection<java.lang.String>", "org.mockito.internal.util.io.IOUtil.readLines(java.io.InputStream)", "public static java.util.Collection<java.lang.String> readLines(java.io.InputStream)"], ["void", "org.mockito.internal.util.io.IOUtil.closeQuietly(java.io.Closeable)", "public static void closeQuietly(java.io.Closeable)"], ["void", "org.mockito.internal.util.io.IOUtil.close(java.io.Closeable)", "public static void close(java.io.Closeable)"], ["org.mockito.internal.reporting.Discrepancy", "org.mockito.internal.reporting.Discrepancy(int, int)", "public org.mockito.internal.reporting.Discrepancy(int, int)"], ["int", "org.mockito.internal.reporting.Discrepancy.getWantedCount()", "public int getWantedCount()"], ["java.lang.String", "org.mockito.internal.reporting.Discrepancy.getPluralizedWantedCount()", "public java.lang.String getPluralizedWantedCount()"], ["int", "org.mockito.internal.reporting.Discrepancy.getActualCount()", "public int getActualCount()"], ["java.lang.String", "org.mockito.internal.reporting.Discrepancy.getPluralizedActualCount()", "public java.lang.String getPluralizedActualCount()"], ["org.mockito.internal.reporting.Pluralizer", "org.mockito.internal.reporting.Pluralizer()", "public org.mockito.internal.reporting.Pluralizer()"], ["java.lang.String", "org.mockito.internal.reporting.Pluralizer.pluralize(int)", "public static java.lang.String pluralize(int)"], ["java.lang.String", "org.mockito.internal.reporting.Pluralizer.were_exactly_x_interactions(int)", "public static java.lang.String were_exactly_x_interactions(int)"], ["org.mockito.internal.reporting.SmartPrinter", "org.mockito.internal.reporting.SmartPrinter(org.mockito.invocation.MatchableInvocation, org.mockito.invocation.Invocation, java.lang.Integer...)", "public org.mockito.internal.reporting.SmartPrinter(org.mockito.invocation.MatchableInvocation, org.mockito.invocation.Invocation, java.lang.Integer...)"], ["java.lang.String", "org.mockito.internal.reporting.SmartPrinter.getWanted()", "public java.lang.String getWanted()"], ["java.lang.String", "org.mockito.internal.reporting.SmartPrinter.getActual()", "public java.lang.String getActual()"], ["org.mockito.internal.reporting.PrintSettings", "org.mockito.internal.reporting.PrintSettings()", "public org.mockito.internal.reporting.PrintSettings()"], ["void", "org.mockito.internal.reporting.PrintSettings.setMultiline(boolean)", "public void setMultiline(boolean)"], ["boolean", "org.mockito.internal.reporting.PrintSettings.isMultiline()", "public boolean isMultiline()"], ["org.mockito.internal.reporting.PrintSettings", "org.mockito.internal.reporting.PrintSettings.verboseMatchers(java.lang.Integer...)", "public static org.mockito.internal.reporting.PrintSettings verboseMatchers(java.lang.Integer...)"], ["boolean", "org.mockito.internal.reporting.PrintSettings.extraTypeInfoFor(int)", "public boolean extraTypeInfoFor(int)"], ["void", "org.mockito.internal.reporting.PrintSettings.setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])", "public void setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.invocation.Invocation)", "public java.lang.String print(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.Invocation)", "public java.lang.String print(org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.MatchableInvocation)", "public java.lang.String print(org.mockito.invocation.MatchableInvocation)"], ["org.mockito.internal.verification.Description", "org.mockito.internal.verification.Description(org.mockito.verification.VerificationMode, java.lang.String)", "public org.mockito.internal.verification.Description(org.mockito.verification.VerificationMode, java.lang.String)"], ["void", "org.mockito.internal.verification.Description.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Description.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.SingleRegisteredInvocation", "org.mockito.internal.verification.SingleRegisteredInvocation()", "public org.mockito.internal.verification.SingleRegisteredInvocation()"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.add(org.mockito.invocation.Invocation)", "public void add(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.removeLast()", "public void removeLast()"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.verification.SingleRegisteredInvocation.getAll()", "public java.util.List<org.mockito.invocation.Invocation> getAll()"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.clear()", "public void clear()"], ["boolean", "org.mockito.internal.verification.SingleRegisteredInvocation.isEmpty()", "public boolean isEmpty()"], ["org.mockito.internal.verification.InOrderWrapper", "org.mockito.internal.verification.InOrderWrapper(org.mockito.internal.verification.api.VerificationInOrderMode, org.mockito.internal.InOrderImpl)", "public org.mockito.internal.verification.InOrderWrapper(org.mockito.internal.verification.api.VerificationInOrderMode, org.mockito.internal.InOrderImpl)"], ["void", "org.mockito.internal.verification.InOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.InOrderWrapper.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.NoMoreInteractions", "org.mockito.internal.verification.NoMoreInteractions()", "public org.mockito.internal.verification.NoMoreInteractions()"], ["void", "org.mockito.internal.verification.NoMoreInteractions.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.NoMoreInteractions.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)", "public void verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.NoMoreInteractions.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.VerificationWrapper", "org.mockito.internal.verification.VerificationWrapper(WrapperType)", "public org.mockito.internal.verification.VerificationWrapper(WrapperType)"], ["void", "org.mockito.internal.verification.VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.times(int)", "public org.mockito.verification.VerificationMode times(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.never()", "public org.mockito.verification.VerificationMode never()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atLeastOnce()", "public org.mockito.verification.VerificationMode atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atLeast(int)", "public org.mockito.verification.VerificationMode atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atMost(int)", "public org.mockito.verification.VerificationMode atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.only()", "public org.mockito.verification.VerificationMode only()"], ["org.mockito.internal.verification.InOrderContextImpl", "org.mockito.internal.verification.InOrderContextImpl()", "public org.mockito.internal.verification.InOrderContextImpl()"], ["boolean", "org.mockito.internal.verification.InOrderContextImpl.isVerified(org.mockito.invocation.Invocation)", "public boolean isVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.InOrderContextImpl.markVerified(org.mockito.invocation.Invocation)", "public void markVerified(org.mockito.invocation.Invocation)"], ["org.mockito.internal.verification.VerificationWrapperInOrderWrapper", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper(org.mockito.internal.verification.VerificationWrapper<?>, org.mockito.internal.InOrderImpl)", "public org.mockito.internal.verification.VerificationWrapperInOrderWrapper(org.mockito.internal.verification.VerificationWrapper<?>, org.mockito.internal.InOrderImpl)"], ["void", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(org.mockito.invocation.Invocation)", "public boolean isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.verification.Calls", "org.mockito.internal.verification.Calls(int)", "public org.mockito.internal.verification.Calls(int)"], ["void", "org.mockito.internal.verification.Calls.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.Calls.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)", "public void verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.Calls.toString()", "public java.lang.String toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Calls.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.VerificationModeFactory", "org.mockito.internal.verification.VerificationModeFactory()", "public org.mockito.internal.verification.VerificationModeFactory()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atLeastOnce()", "public static org.mockito.verification.VerificationMode atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atLeast(int)", "public static org.mockito.verification.VerificationMode atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.only()", "public static org.mockito.verification.VerificationMode only()"], ["org.mockito.internal.verification.Times", "org.mockito.internal.verification.VerificationModeFactory.times(int)", "public static org.mockito.internal.verification.Times times(int)"], ["org.mockito.internal.verification.Calls", "org.mockito.internal.verification.VerificationModeFactory.calls(int)", "public static org.mockito.internal.verification.Calls calls(int)"], ["org.mockito.internal.verification.NoMoreInteractions", "org.mockito.internal.verification.VerificationModeFactory.noMoreInteractions()", "public static org.mockito.internal.verification.NoMoreInteractions noMoreInteractions()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atMost(int)", "public static org.mockito.verification.VerificationMode atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.description(org.mockito.verification.VerificationMode, java.lang.String)", "public static org.mockito.verification.VerificationMode description(org.mockito.verification.VerificationMode, java.lang.String)"], ["org.mockito.internal.verification.DefaultRegisteredInvocations", "org.mockito.internal.verification.DefaultRegisteredInvocations()", "public org.mockito.internal.verification.DefaultRegisteredInvocations()"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.add(org.mockito.invocation.Invocation)", "public void add(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.removeLast()", "public void removeLast()"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.verification.DefaultRegisteredInvocations.getAll()", "public java.util.List<org.mockito.invocation.Invocation> getAll()"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.clear()", "public void clear()"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations.isEmpty()", "public boolean isEmpty()"], ["org.mockito.internal.verification.Only", "org.mockito.internal.verification.Only()", "public org.mockito.internal.verification.Only()"], ["void", "org.mockito.internal.verification.Only.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Only.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.AtMost", "org.mockito.internal.verification.AtMost(int)", "public org.mockito.internal.verification.AtMost(int)"], ["void", "org.mockito.internal.verification.AtMost.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.AtMost.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.VerificationDataImpl", "org.mockito.internal.verification.VerificationDataImpl(org.mockito.internal.stubbing.InvocationContainer, org.mockito.internal.invocation.InvocationMatcher)", "public org.mockito.internal.verification.VerificationDataImpl(org.mockito.internal.stubbing.InvocationContainer, org.mockito.internal.invocation.InvocationMatcher)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.verification.VerificationDataImpl.getAllInvocations()", "public java.util.List<org.mockito.invocation.Invocation> getAllInvocations()"], ["org.mockito.invocation.MatchableInvocation", "org.mockito.internal.verification.VerificationDataImpl.getTarget()", "public org.mockito.invocation.MatchableInvocation getTarget()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.verification.VerificationDataImpl.getWanted()", "public org.mockito.internal.invocation.InvocationMatcher getWanted()"], ["org.mockito.internal.verification.MockAwareVerificationMode", "org.mockito.internal.verification.MockAwareVerificationMode(java.lang.Object, org.mockito.verification.VerificationMode)", "public org.mockito.internal.verification.MockAwareVerificationMode(java.lang.Object, org.mockito.verification.VerificationMode)"], ["void", "org.mockito.internal.verification.MockAwareVerificationMode.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["java.lang.Object", "org.mockito.internal.verification.MockAwareVerificationMode.getMock()", "public java.lang.Object getMock()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.MockAwareVerificationMode.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.AtLeast", "org.mockito.internal.verification.AtLeast(int)", "public org.mockito.internal.verification.AtLeast(int)"], ["void", "org.mockito.internal.verification.AtLeast.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.AtLeast.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)", "public void verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.AtLeast.toString()", "public java.lang.String toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.AtLeast.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl(long, long, org.mockito.verification.VerificationMode, boolean)", "public org.mockito.internal.verification.VerificationOverTimeImpl(long, long, org.mockito.verification.VerificationMode, boolean)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl(long, org.mockito.verification.VerificationMode, boolean, org.mockito.internal.util.Timer)", "public org.mockito.internal.verification.VerificationOverTimeImpl(long, org.mockito.verification.VerificationMode, boolean, org.mockito.internal.util.Timer)"], ["void", "org.mockito.internal.verification.VerificationOverTimeImpl.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl.copyWithVerificationMode(org.mockito.verification.VerificationMode)", "public org.mockito.internal.verification.VerificationOverTimeImpl copyWithVerificationMode(org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationOverTimeImpl.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["boolean", "org.mockito.internal.verification.VerificationOverTimeImpl.isReturnOnSuccess()", "public boolean isReturnOnSuccess()"], ["long", "org.mockito.internal.verification.VerificationOverTimeImpl.getPollingPeriodMillis()", "public long getPollingPeriodMillis()"], ["org.mockito.internal.util.Timer", "org.mockito.internal.verification.VerificationOverTimeImpl.getTimer()", "public org.mockito.internal.util.Timer getTimer()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationOverTimeImpl.getDelegate()", "public org.mockito.verification.VerificationMode getDelegate()"], ["org.mockito.internal.verification.Times", "org.mockito.internal.verification.Times(int)", "public org.mockito.internal.verification.Times(int)"], ["void", "org.mockito.internal.verification.Times.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.Times.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)", "public void verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.Times.toString()", "public java.lang.String toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Times.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["java.lang.Integer[]", "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(java.util.List<org.mockito.ArgumentMatcher>, java.lang.Object[])", "public static java.lang.Integer[] getSuspiciouslyNotMatchingArgsIndexes(java.util.List<org.mockito.ArgumentMatcher>, java.lang.Object[])"], ["org.mockito.internal.verification.checkers.AtLeastDiscrepancy", "org.mockito.internal.verification.checkers.AtLeastDiscrepancy(int, int)", "public org.mockito.internal.verification.checkers.AtLeastDiscrepancy(int, int)"], ["java.lang.String", "org.mockito.internal.verification.checkers.AtLeastDiscrepancy.getPluralizedWantedCount()", "public java.lang.String getPluralizedWantedCount()"], ["void", "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)", "public static void checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)", "public static void checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker()", "public org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker()"], ["void", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)", "public static void checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"], ["void", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)", "public static void checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.NumberOfInvocationsChecker", "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker()", "public org.mockito.internal.verification.checkers.NumberOfInvocationsChecker()"], ["void", "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)", "public void check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"], ["void", "org.mockito.internal.verification.checkers.NonGreedyNumberOfInvocationsInOrderChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)", "public static void check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker", "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker()", "public org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker()"], ["void", "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)", "public void check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.api.VerificationDataInOrderImpl", "org.mockito.internal.verification.api.VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)", "public org.mockito.internal.verification.api.VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getAllInvocations()", "public java.util.List<org.mockito.invocation.Invocation> getAllInvocations()"], ["org.mockito.internal.verification.api.InOrderContext", "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getOrderingContext()", "public org.mockito.internal.verification.api.InOrderContext getOrderingContext()"], ["org.mockito.invocation.MatchableInvocation", "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getWanted()", "public org.mockito.invocation.MatchableInvocation getWanted()"], ["org.mockito.internal.invocation.MatcherApplicationStrategy", "org.mockito.internal.invocation.MatcherApplicationStrategy.getMatcherApplicationStrategyFor(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher<?>>)", "public static org.mockito.internal.invocation.MatcherApplicationStrategy getMatcherApplicationStrategyFor(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher<?>>)"], ["boolean", "org.mockito.internal.invocation.MatcherApplicationStrategy.forEachMatcherAndArgument(org.mockito.internal.invocation.ArgumentMatcherAction)", "public boolean forEachMatcherAndArgument(org.mockito.internal.invocation.ArgumentMatcherAction)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.InvocationsFinder.findInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)", "public static java.util.List<org.mockito.invocation.Invocation> findInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.InvocationsFinder.findAllMatchingUnverifiedChunks(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)", "public static java.util.List<org.mockito.invocation.Invocation> findAllMatchingUnverifiedChunks(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.InvocationsFinder.findMatchingChunk(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)", "public static java.util.List<org.mockito.invocation.Invocation> findMatchingChunk(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstMatchingUnverifiedInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)", "public static org.mockito.invocation.Invocation findFirstMatchingUnverifiedInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)", "public static org.mockito.invocation.Invocation findSimilarInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)", "public static org.mockito.invocation.Invocation findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List<org.mockito.invocation.Invocation>)", "public static org.mockito.invocation.Location getLastLocation(java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.internal.verification.api.InOrderContext)", "public static org.mockito.invocation.Invocation findPreviousVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>)", "public static org.mockito.invocation.Invocation findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext)", "public org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(org.mockito.invocation.Invocation)", "public boolean isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.invocation.StubInfoImpl", "org.mockito.internal.invocation.StubInfoImpl(org.mockito.invocation.DescribedInvocation)", "public org.mockito.internal.invocation.StubInfoImpl(org.mockito.invocation.DescribedInvocation)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.StubInfoImpl.stubbedAt()", "public org.mockito.invocation.Location stubbedAt()"], ["org.mockito.internal.invocation.ArgumentsProcessor", "org.mockito.internal.invocation.ArgumentsProcessor()", "public org.mockito.internal.invocation.ArgumentsProcessor()"], ["java.lang.Object[]", "org.mockito.internal.invocation.ArgumentsProcessor.expandVarArgs(boolean, java.lang.Object[])", "public static java.lang.Object[] expandVarArgs(boolean, java.lang.Object[])"], ["java.util.List<org.mockito.ArgumentMatcher>", "org.mockito.internal.invocation.ArgumentsProcessor.argumentsToMatchers(java.lang.Object[])", "public static java.util.List<org.mockito.ArgumentMatcher> argumentsToMatchers(java.lang.Object[])"], ["org.mockito.internal.invocation.ArgumentMatcherAction", "org.mockito.internal.invocation.TypeSafeMatching.matchesTypeSafe()", "public static org.mockito.internal.invocation.ArgumentMatcherAction matchesTypeSafe()"], ["boolean", "org.mockito.internal.invocation.TypeSafeMatching.apply(org.mockito.ArgumentMatcher, java.lang.Object)", "public boolean apply(org.mockito.ArgumentMatcher, java.lang.Object)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher$1.apply(org.mockito.ArgumentMatcher<?>, java.lang.Object)", "public boolean apply(org.mockito.ArgumentMatcher<?>, java.lang.Object)"], ["org.mockito.internal.invocation.MatchersBinder", "org.mockito.internal.invocation.MatchersBinder()", "public org.mockito.internal.invocation.MatchersBinder()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.MatchersBinder.bindMatchers(org.mockito.internal.progress.ArgumentMatcherStorage, org.mockito.invocation.Invocation)", "public org.mockito.internal.invocation.InvocationMatcher bindMatchers(org.mockito.internal.progress.ArgumentMatcherStorage, org.mockito.invocation.Invocation)"], ["org.mockito.internal.invocation.InvocationComparator", "org.mockito.internal.invocation.InvocationComparator()", "public org.mockito.internal.invocation.InvocationComparator()"], ["int", "org.mockito.internal.invocation.InvocationComparator.compare(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)", "public int compare(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"], ["int", "org.mockito.internal.invocation.InvocationComparator.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.invocation.SerializableMethod", "org.mockito.internal.invocation.SerializableMethod(java.lang.reflect.Method)", "public org.mockito.internal.invocation.SerializableMethod(java.lang.reflect.Method)"], ["java.lang.String", "org.mockito.internal.invocation.SerializableMethod.getName()", "public java.lang.String getName()"], ["java.lang.Class<?>", "org.mockito.internal.invocation.SerializableMethod.getReturnType()", "public java.lang.Class<?> getReturnType()"], ["java.lang.Class<?>[]", "org.mockito.internal.invocation.SerializableMethod.getParameterTypes()", "public java.lang.Class<?>[] getParameterTypes()"], ["java.lang.Class<?>[]", "org.mockito.internal.invocation.SerializableMethod.getExceptionTypes()", "public java.lang.Class<?>[] getExceptionTypes()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.isVarArgs()", "public boolean isVarArgs()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.isAbstract()", "public boolean isAbstract()"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.SerializableMethod.getJavaMethod()", "public java.lang.reflect.Method getJavaMethod()"], ["int", "org.mockito.internal.invocation.SerializableMethod.hashCode()", "public int hashCode()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.mockito.internal.invocation.UnusedStubsFinder", "org.mockito.internal.invocation.UnusedStubsFinder()", "public org.mockito.internal.invocation.UnusedStubsFinder()"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.UnusedStubsFinder.find(java.util.List<?>)", "public java.util.List<org.mockito.invocation.Invocation> find(java.util.List<?>)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(org.mockito.invocation.Invocation)", "public boolean isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType[]", "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.values()", "public static org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType[] values()"], ["org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType", "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.valueOf(java.lang.String)", "public static org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType valueOf(java.lang.String)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerified(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)", "public static void markVerified(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerified(org.mockito.invocation.Invocation, org.mockito.invocation.MatchableInvocation)", "public static void markVerified(org.mockito.invocation.Invocation, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)", "public static void markVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.invocation.InvocationImpl", "org.mockito.internal.invocation.InvocationImpl(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], int, org.mockito.internal.invocation.realmethod.RealMethod, org.mockito.invocation.Location)", "public org.mockito.internal.invocation.InvocationImpl(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], int, org.mockito.internal.invocation.realmethod.RealMethod, org.mockito.invocation.Location)"], ["java.lang.Object", "org.mockito.internal.invocation.InvocationImpl.getMock()", "public java.lang.Object getMock()"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.InvocationImpl.getMethod()", "public java.lang.reflect.Method getMethod()"], ["java.lang.Object[]", "org.mockito.internal.invocation.InvocationImpl.getArguments()", "public java.lang.Object[] getArguments()"], ["<T> T", "org.mockito.internal.invocation.InvocationImpl.getArgument(int)", "public <T> T getArgument(int)"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.isVerified()", "public boolean isVerified()"], ["int", "org.mockito.internal.invocation.InvocationImpl.getSequenceNumber()", "public int getSequenceNumber()"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.invocation.InvocationImpl.hashCode()", "public int hashCode()"], ["java.lang.String", "org.mockito.internal.invocation.InvocationImpl.toString()", "public java.lang.String toString()"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationImpl.getLocation()", "public org.mockito.invocation.Location getLocation()"], ["java.lang.Object[]", "org.mockito.internal.invocation.InvocationImpl.getRawArguments()", "public java.lang.Object[] getRawArguments()"], ["java.lang.Class<?>", "org.mockito.internal.invocation.InvocationImpl.getRawReturnType()", "public java.lang.Class<?> getRawReturnType()"], ["java.lang.Object", "org.mockito.internal.invocation.InvocationImpl.callRealMethod()", "public java.lang.Object callRealMethod() throws java.lang.Throwable"], ["void", "org.mockito.internal.invocation.InvocationImpl.markVerified()", "public void markVerified()"], ["org.mockito.invocation.StubInfo", "org.mockito.internal.invocation.InvocationImpl.stubInfo()", "public org.mockito.invocation.StubInfo stubInfo()"], ["void", "org.mockito.internal.invocation.InvocationImpl.markStubbed(org.mockito.invocation.StubInfo)", "public void markStubbed(org.mockito.invocation.StubInfo)"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.isIgnoredForVerification()", "public boolean isIgnoredForVerification()"], ["void", "org.mockito.internal.invocation.InvocationImpl.ignoreForVerification()", "public void ignoreForVerification()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher>)", "public org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher>)"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation)", "public org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation)"], ["java.util.List<org.mockito.internal.invocation.InvocationMatcher>", "org.mockito.internal.invocation.InvocationMatcher.createFrom(java.util.List<org.mockito.invocation.Invocation>)", "public static java.util.List<org.mockito.internal.invocation.InvocationMatcher> createFrom(java.util.List<org.mockito.invocation.Invocation>)"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.InvocationMatcher.getMethod()", "public java.lang.reflect.Method getMethod()"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationMatcher.getInvocation()", "public org.mockito.invocation.Invocation getInvocation()"], ["java.util.List<org.mockito.ArgumentMatcher>", "org.mockito.internal.invocation.InvocationMatcher.getMatchers()", "public java.util.List<org.mockito.ArgumentMatcher> getMatchers()"], ["java.lang.String", "org.mockito.internal.invocation.InvocationMatcher.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.matches(org.mockito.invocation.Invocation)", "public boolean matches(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.hasSimilarMethod(org.mockito.invocation.Invocation)", "public boolean hasSimilarMethod(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.hasSameMethod(org.mockito.invocation.Invocation)", "public boolean hasSameMethod(org.mockito.invocation.Invocation)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationMatcher.getLocation()", "public org.mockito.invocation.Location getLocation()"], ["void", "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(org.mockito.invocation.Invocation)", "public void captureArgumentsFrom(org.mockito.invocation.Invocation)"], ["org.mockito.internal.invocation.realmethod.DefaultRealMethod", "org.mockito.internal.invocation.realmethod.DefaultRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)", "public org.mockito.internal.invocation.realmethod.DefaultRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)"], ["java.lang.Object", "org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(java.lang.Object, java.lang.Object[])", "public java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.Throwable"], ["org.mockito.internal.invocation.realmethod.CleanTraceRealMethod", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)", "public org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)"], ["org.mockito.internal.invocation.realmethod.CleanTraceRealMethod", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.invocation.realmethod.RealMethod)", "public org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.invocation.realmethod.RealMethod)"], ["java.lang.Object", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(java.lang.Object, java.lang.Object[])", "public java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.Throwable"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder.find(java.util.List<?>)", "public static java.util.List<org.mockito.invocation.Invocation> find(java.util.List<?>)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.invocation.finder.AllInvocationsFinder.find(java.lang.Iterable<?>)", "public static java.util.List<org.mockito.invocation.Invocation> find(java.lang.Iterable<?>)"], ["java.util.Set<org.mockito.stubbing.Stubbing>", "org.mockito.internal.invocation.finder.AllInvocationsFinder.findStubbings(java.lang.Iterable<?>)", "public static java.util.Set<org.mockito.stubbing.Stubbing> findStubbings(java.lang.Iterable<?>)"], ["boolean", "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(org.mockito.invocation.Invocation)", "public boolean isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.debugging.VerboseMockInvocationLogger", "org.mockito.internal.debugging.VerboseMockInvocationLogger()", "public org.mockito.internal.debugging.VerboseMockInvocationLogger()"], ["org.mockito.internal.debugging.VerboseMockInvocationLogger", "org.mockito.internal.debugging.VerboseMockInvocationLogger(java.io.PrintStream)", "public org.mockito.internal.debugging.VerboseMockInvocationLogger(java.io.PrintStream)"], ["void", "org.mockito.internal.debugging.VerboseMockInvocationLogger.reportInvocation(org.mockito.listeners.MethodInvocationReport)", "public void reportInvocation(org.mockito.listeners.MethodInvocationReport)"], ["boolean", "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(org.mockito.stubbing.Stubbing)", "public boolean isOut(org.mockito.stubbing.Stubbing)"], ["boolean", "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.debugging.WarningsPrinterImpl", "org.mockito.internal.debugging.WarningsPrinterImpl(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>, boolean)", "public org.mockito.internal.debugging.WarningsPrinterImpl(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>, boolean)"], ["java.lang.String", "org.mockito.internal.debugging.WarningsPrinterImpl.print()", "public java.lang.String print()"], ["org.mockito.internal.debugging.LoggingListener", "org.mockito.internal.debugging.LoggingListener(boolean)", "public org.mockito.internal.debugging.LoggingListener(boolean)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundStubCalledWithDifferentArgs(org.mockito.invocation.Invocation, org.mockito.internal.invocation.InvocationMatcher)", "public void foundStubCalledWithDifferentArgs(org.mockito.invocation.Invocation, org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundUnusedStub(org.mockito.invocation.Invocation)", "public void foundUnusedStub(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundUnstubbed(org.mockito.internal.invocation.InvocationMatcher)", "public void foundUnstubbed(org.mockito.internal.invocation.InvocationMatcher)"], ["java.lang.String", "org.mockito.internal.debugging.LoggingListener.getStubbingInfo()", "public java.lang.String getStubbingInfo()"], ["org.mockito.internal.debugging.WarningsFinder", "org.mockito.internal.debugging.WarningsFinder(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>)", "public org.mockito.internal.debugging.WarningsFinder(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>)"], ["void", "org.mockito.internal.debugging.WarningsFinder.find(org.mockito.internal.debugging.FindingsListener)", "public void find(org.mockito.internal.debugging.FindingsListener)"], ["org.mockito.internal.debugging.WarningsCollector", "org.mockito.internal.debugging.WarningsCollector()", "public org.mockito.internal.debugging.WarningsCollector()"], ["java.lang.String", "org.mockito.internal.debugging.WarningsCollector.getWarnings()", "public java.lang.String getWarnings()"], ["org.mockito.internal.debugging.InvocationsPrinter", "org.mockito.internal.debugging.InvocationsPrinter()", "public org.mockito.internal.debugging.InvocationsPrinter()"], ["java.lang.String", "org.mockito.internal.debugging.InvocationsPrinter.printInvocations(java.lang.Object)", "public java.lang.String printInvocations(java.lang.Object)"], ["org.mockito.internal.debugging.LocationImpl", "org.mockito.internal.debugging.LocationImpl()", "public org.mockito.internal.debugging.LocationImpl()"], ["org.mockito.internal.debugging.LocationImpl", "org.mockito.internal.debugging.LocationImpl(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)", "public org.mockito.internal.debugging.LocationImpl(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)"], ["java.lang.String", "org.mockito.internal.debugging.LocationImpl.toString()", "public java.lang.String toString()"], ["org.mockito.internal.debugging.Localized", "org.mockito.internal.debugging.Localized(T)", "public org.mockito.internal.debugging.Localized(T)"], ["T", "org.mockito.internal.debugging.Localized.getObject()", "public T getObject()"], ["org.mockito.invocation.Location", "org.mockito.internal.debugging.Localized.getLocation()", "public org.mockito.invocation.Location getLocation()"], ["org.mockito.internal.debugging.MockitoDebuggerImpl", "org.mockito.internal.debugging.MockitoDebuggerImpl()", "public org.mockito.internal.debugging.MockitoDebuggerImpl()"], ["java.lang.String", "org.mockito.internal.debugging.MockitoDebuggerImpl.printInvocations(java.lang.Object...)", "public java.lang.String printInvocations(java.lang.Object...)"], ["java.lang.AssertionError", "org.mockito.internal.junit.FriendlyExceptionMaker.createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)", "public java.lang.AssertionError createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.mockito.internal.junit.JUnitDetecter.hasJUnit()", "public boolean hasJUnit()"], ["void", "org.mockito.internal.junit.StubbingArgMismatches.add(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)", "public void add(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.junit.StubbingArgMismatches.format(java.lang.String, org.mockito.internal.util.MockitoLogger)", "public void format(java.lang.String, org.mockito.internal.util.MockitoLogger)"], ["int", "org.mockito.internal.junit.StubbingArgMismatches.size()", "public int size()"], ["java.lang.String", "org.mockito.internal.junit.StubbingArgMismatches.toString()", "public java.lang.String toString()"], ["org.mockito.internal.junit.UnnecessaryStubbingsReporter", "org.mockito.internal.junit.UnnecessaryStubbingsReporter()", "public org.mockito.internal.junit.UnnecessaryStubbingsReporter()"], ["void", "org.mockito.internal.junit.UnnecessaryStubbingsReporter.validateUnusedStubs(java.lang.Class<?>, org.junit.runner.notification.RunNotifier)", "public void validateUnusedStubs(java.lang.Class<?>, org.junit.runner.notification.RunNotifier)"], ["void", "org.mockito.internal.junit.UnnecessaryStubbingsReporter.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)", "public void onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["org.mockito.internal.junit.JUnitTool", "org.mockito.internal.junit.JUnitTool()", "public org.mockito.internal.junit.JUnitTool()"], ["boolean", "org.mockito.internal.junit.JUnitTool.hasJUnit()", "public static boolean hasJUnit()"], ["java.lang.AssertionError", "org.mockito.internal.junit.JUnitTool.createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)", "public static java.lang.AssertionError createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl$1.evaluate()", "public void evaluate() throws java.lang.Throwable"], ["void", "org.mockito.internal.junit.RuleStubbingHintsReporter.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)", "public void onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)", "public void verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.description(java.lang.String)", "public org.mockito.verification.VerificationMode description(java.lang.String)"], ["int", "org.mockito.internal.junit.UnusedStubbings.size()", "public int size()"], ["java.lang.String", "org.mockito.internal.junit.UnusedStubbings.toString()", "public java.lang.String toString()"], ["org.mockito.internal.junit.UnusedStubbingsFinder", "org.mockito.internal.junit.UnusedStubbingsFinder()", "public org.mockito.internal.junit.UnusedStubbingsFinder()"], ["org.mockito.internal.junit.UnusedStubbings", "org.mockito.internal.junit.UnusedStubbingsFinder.getUnusedStubbings(java.lang.Iterable<java.lang.Object>)", "public org.mockito.internal.junit.UnusedStubbings getUnusedStubbings(java.lang.Iterable<java.lang.Object>)"], ["java.util.Collection<org.mockito.invocation.Invocation>", "org.mockito.internal.junit.UnusedStubbingsFinder.getUnusedStubbingsByLocation(java.lang.Iterable<java.lang.Object>)", "public java.util.Collection<org.mockito.invocation.Invocation> getUnusedStubbingsByLocation(java.lang.Iterable<java.lang.Object>)"], ["boolean", "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(org.mockito.stubbing.Stubbing)", "public boolean isOut(org.mockito.stubbing.Stubbing)"], ["boolean", "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.junit.JUnitRule$SilentStatement", "org.mockito.internal.junit.JUnitRule$SilentStatement(org.mockito.internal.junit.JUnitRule, java.lang.Object, org.junit.runners.model.Statement)", "public org.mockito.internal.junit.JUnitRule$SilentStatement(org.mockito.internal.junit.JUnitRule, java.lang.Object, org.junit.runners.model.Statement)"], ["void", "org.mockito.internal.junit.JUnitRule$SilentStatement.evaluate()", "public void evaluate() throws java.lang.Throwable"], ["java.lang.String", "org.mockito.internal.junit.StubbingHint.toString()", "public java.lang.String toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.junit.VerificationCollectorImpl$2.maybeVerifyLazily(org.mockito.verification.VerificationMode)", "public org.mockito.verification.VerificationMode maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.internal.junit.JUnitRule", "org.mockito.internal.junit.JUnitRule(org.mockito.internal.util.MockitoLogger, boolean)", "public org.mockito.internal.junit.JUnitRule(org.mockito.internal.util.MockitoLogger, boolean)"], ["org.junit.runners.model.Statement", "org.mockito.internal.junit.JUnitRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)", "public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["org.mockito.internal.junit.JUnitRule", "org.mockito.internal.junit.JUnitRule.silent()", "public org.mockito.internal.junit.JUnitRule silent()"], ["org.mockito.junit.MockitoRule", "org.mockito.internal.junit.JUnitRule.silent()", "public org.mockito.junit.MockitoRule silent()"], ["void", "org.mockito.internal.junit.JUnitRule$DefaultStatement.evaluate()", "public void evaluate() throws java.lang.Throwable"], ["org.mockito.internal.junit.VerificationCollectorImpl", "org.mockito.internal.junit.VerificationCollectorImpl()", "public org.mockito.internal.junit.VerificationCollectorImpl()"], ["org.junit.runners.model.Statement", "org.mockito.internal.junit.VerificationCollectorImpl.apply(org.junit.runners.model.Statement, org.junit.runner.Description)", "public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl.collectAndReport()", "public void collectAndReport() throws org.mockito.exceptions.base.MockitoAssertionError"], ["org.mockito.junit.VerificationCollector", "org.mockito.internal.junit.VerificationCollectorImpl.assertLazily()", "public org.mockito.junit.VerificationCollector assertLazily()"], ["org.mockito.internal.creation.DelegatingMethod", "org.mockito.internal.creation.DelegatingMethod(java.lang.reflect.Method)", "public org.mockito.internal.creation.DelegatingMethod(java.lang.reflect.Method)"], ["java.lang.Class<?>[]", "org.mockito.internal.creation.DelegatingMethod.getExceptionTypes()", "public java.lang.Class<?>[] getExceptionTypes()"], ["java.lang.reflect.Method", "org.mockito.internal.creation.DelegatingMethod.getJavaMethod()", "public java.lang.reflect.Method getJavaMethod()"], ["java.lang.String", "org.mockito.internal.creation.DelegatingMethod.getName()", "public java.lang.String getName()"], ["java.lang.Class<?>[]", "org.mockito.internal.creation.DelegatingMethod.getParameterTypes()", "public java.lang.Class<?>[] getParameterTypes()"], ["java.lang.Class<?>", "org.mockito.internal.creation.DelegatingMethod.getReturnType()", "public java.lang.Class<?> getReturnType()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.isVarArgs()", "public boolean isVarArgs()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.isAbstract()", "public boolean isAbstract()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.DelegatingMethod.hashCode()", "public int hashCode()"], ["org.mockito.internal.creation.MockSettingsImpl", "org.mockito.internal.creation.MockSettingsImpl()", "public org.mockito.internal.creation.MockSettingsImpl()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.serializable()", "public org.mockito.MockSettings serializable()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.serializable(org.mockito.mock.SerializableMode)", "public org.mockito.MockSettings serializable(org.mockito.mock.SerializableMode)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.extraInterfaces(java.lang.Class<?>...)", "public org.mockito.MockSettings extraInterfaces(java.lang.Class<?>...)"], ["org.mockito.mock.MockName", "org.mockito.internal.creation.MockSettingsImpl.getMockName()", "public org.mockito.mock.MockName getMockName()"], ["java.util.Set<java.lang.Class<?>>", "org.mockito.internal.creation.MockSettingsImpl.getExtraInterfaces()", "public java.util.Set<java.lang.Class<?>> getExtraInterfaces()"], ["java.lang.Object", "org.mockito.internal.creation.MockSettingsImpl.getSpiedInstance()", "public java.lang.Object getSpiedInstance()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.name(java.lang.String)", "public org.mockito.MockSettings name(java.lang.String)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.spiedInstance(java.lang.Object)", "public org.mockito.MockSettings spiedInstance(java.lang.Object)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.defaultAnswer(org.mockito.stubbing.Answer)", "public org.mockito.MockSettings defaultAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.stubbing.Answer<java.lang.Object>", "org.mockito.internal.creation.MockSettingsImpl.getDefaultAnswer()", "public org.mockito.stubbing.Answer<java.lang.Object> getDefaultAnswer()"], ["org.mockito.internal.creation.MockSettingsImpl<T>", "org.mockito.internal.creation.MockSettingsImpl.stubOnly()", "public org.mockito.internal.creation.MockSettingsImpl<T> stubOnly()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.useConstructor()", "public org.mockito.MockSettings useConstructor()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.outerInstance(java.lang.Object)", "public org.mockito.MockSettings outerInstance(java.lang.Object)"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.isUsingConstructor()", "public boolean isUsingConstructor()"], ["java.lang.Object", "org.mockito.internal.creation.MockSettingsImpl.getOuterClassInstance()", "public java.lang.Object getOuterClassInstance()"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.isStubOnly()", "public boolean isStubOnly()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.verboseLogging()", "public org.mockito.MockSettings verboseLogging()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.invocationListeners(org.mockito.listeners.InvocationListener...)", "public org.mockito.MockSettings invocationListeners(org.mockito.listeners.InvocationListener...)"], ["java.util.List<org.mockito.listeners.InvocationListener>", "org.mockito.internal.creation.MockSettingsImpl.getInvocationListeners()", "public java.util.List<org.mockito.listeners.InvocationListener> getInvocationListeners()"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.hasInvocationListeners()", "public boolean hasInvocationListeners()"], ["java.lang.Class<T>", "org.mockito.internal.creation.MockSettingsImpl.getTypeToMock()", "public java.lang.Class<T> getTypeToMock()"], ["org.mockito.mock.MockCreationSettings<T>", "org.mockito.internal.creation.MockSettingsImpl.confirm(java.lang.Class<T>)", "public org.mockito.mock.MockCreationSettings<T> confirm(java.lang.Class<T>)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.stubOnly()", "public org.mockito.MockSettings stubOnly()"], ["org.mockito.internal.creation.settings.CreationSettings", "org.mockito.internal.creation.settings.CreationSettings()", "public org.mockito.internal.creation.settings.CreationSettings()"], ["org.mockito.internal.creation.settings.CreationSettings", "org.mockito.internal.creation.settings.CreationSettings(org.mockito.internal.creation.settings.CreationSettings)", "public org.mockito.internal.creation.settings.CreationSettings(org.mockito.internal.creation.settings.CreationSettings)"], ["java.lang.Class<T>", "org.mockito.internal.creation.settings.CreationSettings.getTypeToMock()", "public java.lang.Class<T> getTypeToMock()"], ["org.mockito.internal.creation.settings.CreationSettings<T>", "org.mockito.internal.creation.settings.CreationSettings.setTypeToMock(java.lang.Class<T>)", "public org.mockito.internal.creation.settings.CreationSettings<T> setTypeToMock(java.lang.Class<T>)"], ["java.util.Set<java.lang.Class<?>>", "org.mockito.internal.creation.settings.CreationSettings.getExtraInterfaces()", "public java.util.Set<java.lang.Class<?>> getExtraInterfaces()"], ["org.mockito.internal.creation.settings.CreationSettings<T>", "org.mockito.internal.creation.settings.CreationSettings.setExtraInterfaces(java.util.Set<java.lang.Class<?>>)", "public org.mockito.internal.creation.settings.CreationSettings<T> setExtraInterfaces(java.util.Set<java.lang.Class<?>>)"], ["java.lang.String", "org.mockito.internal.creation.settings.CreationSettings.getName()", "public java.lang.String getName()"], ["java.lang.Object", "org.mockito.internal.creation.settings.CreationSettings.getSpiedInstance()", "public java.lang.Object getSpiedInstance()"], ["org.mockito.stubbing.Answer<java.lang.Object>", "org.mockito.internal.creation.settings.CreationSettings.getDefaultAnswer()", "public org.mockito.stubbing.Answer<java.lang.Object> getDefaultAnswer()"], ["org.mockito.mock.MockName", "org.mockito.internal.creation.settings.CreationSettings.getMockName()", "public org.mockito.mock.MockName getMockName()"], ["org.mockito.internal.creation.settings.CreationSettings<T>", "org.mockito.internal.creation.settings.CreationSettings.setMockName(org.mockito.mock.MockName)", "public org.mockito.internal.creation.settings.CreationSettings<T> setMockName(org.mockito.mock.MockName)"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isSerializable()", "public boolean isSerializable()"], ["org.mockito.internal.creation.settings.CreationSettings<T>", "org.mockito.internal.creation.settings.CreationSettings.setSerializableMode(org.mockito.mock.SerializableMode)", "public org.mockito.internal.creation.settings.CreationSettings<T> setSerializableMode(org.mockito.mock.SerializableMode)"], ["org.mockito.mock.SerializableMode", "org.mockito.internal.creation.settings.CreationSettings.getSerializableMode()", "public org.mockito.mock.SerializableMode getSerializableMode()"], ["java.util.List<org.mockito.listeners.InvocationListener>", "org.mockito.internal.creation.settings.CreationSettings.getInvocationListeners()", "public java.util.List<org.mockito.listeners.InvocationListener> getInvocationListeners()"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isUsingConstructor()", "public boolean isUsingConstructor()"], ["java.lang.Object", "org.mockito.internal.creation.settings.CreationSettings.getOuterClassInstance()", "public java.lang.Object getOuterClassInstance()"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isStubOnly()", "public boolean isStubOnly()"], ["org.mockito.internal.creation.instance.DefaultInstantiatorProvider", "org.mockito.internal.creation.instance.DefaultInstantiatorProvider()", "public org.mockito.internal.creation.instance.DefaultInstantiatorProvider()"], ["org.mockito.internal.creation.instance.Instantiator", "org.mockito.internal.creation.instance.DefaultInstantiatorProvider.getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "public org.mockito.internal.creation.instance.Instantiator getInstantiator(org.mockito.mock.MockCreationSettings<?>)"], ["org.mockito.internal.creation.instance.ConstructorInstantiator", "org.mockito.internal.creation.instance.ConstructorInstantiator(java.lang.Object)", "public org.mockito.internal.creation.instance.ConstructorInstantiator(java.lang.Object)"], ["<T> T", "org.mockito.internal.creation.instance.ConstructorInstantiator.newInstance(java.lang.Class<T>)", "public <T> T newInstance(java.lang.Class<T>)"], ["org.mockito.internal.creation.instance.InstantiationException", "org.mockito.internal.creation.instance.InstantiationException(java.lang.String, java.lang.Throwable)", "public org.mockito.internal.creation.instance.InstantiationException(java.lang.String, java.lang.Throwable)"], ["<T> T", "org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(java.lang.Class<T>)", "public <T> T newInstance(java.lang.Class<T>)"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.values()", "public static org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal[] values()"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.valueOf(java.lang.String)", "public static org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal valueOf(java.lang.String)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.isInvokable()", "public boolean isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.invoke()", "public java.lang.Object invoke()"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey(java.lang.ClassLoader)", "public org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.get()", "public java.lang.ClassLoader get()"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.hashCode()", "public int hashCode()"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.hashCode()", "public int hashCode()"], ["<T> org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey<T>", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.of(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>)", "public static <T> org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey<T> of(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>)"], ["org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker()", "public org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)", "public <T> T createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)", "public <T> java.lang.Class<? extends T> createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.getHandler(java.lang.Object)", "public org.mockito.invocation.MockHandler getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)", "public void resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)", "public org.mockito.plugins.MockMaker$TypeMockability isTypeMockable(java.lang.Class<?>)"], ["org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice(org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>, java.lang.String)", "public org.mockito.internal.creation.bytebuddy.MockMethodAdvice(org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>, java.lang.String)"], ["java.util.concurrent.Callable<?>", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handle(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])", "public java.util.concurrent.Callable<?> handle(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMock(java.lang.Object)", "public boolean isMock(java.lang.Object)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMocked(java.lang.Object, java.lang.reflect.Method)", "public boolean isMocked(java.lang.Object, java.lang.reflect.Method)"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ReturnValueWrapper.call()", "public java.lang.Object call()"], ["org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject()", "public org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject()"], ["void", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject.doReadObject(java.lang.String, org.mockito.internal.creation.bytebuddy.MockAccess, java.io.ObjectInputStream)", "public static void doReadObject(java.lang.String, org.mockito.internal.creation.bytebuddy.MockAccess, java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream(java.io.InputStream, java.lang.Class<?>, java.util.Set<java.lang.Class<?>>)", "public org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream(java.io.InputStream, java.lang.Class<?>, java.util.Set<java.lang.Class<?>>) throws java.io.IOException"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey(java.lang.ClassLoader, java.lang.ref.ReferenceQueue<java.lang.ClassLoader>)", "public org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey(java.lang.ClassLoader, java.lang.ref.ReferenceQueue<java.lang.ClassLoader>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.hashCode()", "public int hashCode()"], ["java.lang.ClassLoader", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.get()", "public java.lang.ClassLoader get()"], ["org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator()", "public org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator()"], ["org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator(net.bytebuddy.implementation.Implementation, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)", "public org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator(net.bytebuddy.implementation.Implementation, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)", "public <T> java.lang.Class<? extends T> mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator(org.mockito.internal.creation.bytebuddy.BytecodeGenerator, boolean)", "public org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator(org.mockito.internal.creation.bytebuddy.BytecodeGenerator, boolean)"], ["<T> java.lang.Class<T>", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)", "public <T> java.lang.Class<T> mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["net.bytebuddy.jar.asm.ClassVisitor", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.jar.asm.ClassVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)", "public net.bytebuddy.jar.asm.ClassVisitor wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.jar.asm.ClassVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace()", "public org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace.doWriteReplace(org.mockito.internal.creation.bytebuddy.MockAccess)", "public static java.lang.Object doWriteReplace(org.mockito.internal.creation.bytebuddy.MockAccess) throws java.io.ObjectStreamException"], ["<T> org.mockito.internal.creation.bytebuddy.MockFeatures<T>", "org.mockito.internal.creation.bytebuddy.MockFeatures.withMockFeatures(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>, org.mockito.mock.SerializableMode)", "public static <T> org.mockito.internal.creation.bytebuddy.MockFeatures<T> withMockFeatures(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>, org.mockito.mock.SerializableMode)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SuperMethodCall.isInvokable()", "public boolean isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SuperMethodCall.invoke()", "public java.lang.Object invoke() throws java.lang.Throwable"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode()", "public org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode()"], ["int", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode.doIdentityHashCode(java.lang.Object)", "public static int doIdentityHashCode(java.lang.Object)"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream(java.io.ByteArrayOutputStream)", "public org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream(java.io.ByteArrayOutputStream) throws java.io.IOException"], ["org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator(java.lang.instrument.Instrumentation, org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>)", "public org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator(java.lang.instrument.Instrumentation, org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)", "public <T> java.lang.Class<? extends T> mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["byte[]", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(java.lang.ClassLoader, java.lang.String, java.lang.Class<?>, java.security.ProtectionDomain, byte[])", "public byte[] transform(java.lang.ClassLoader, java.lang.String, java.lang.Class<?>, java.security.ProtectionDomain, byte[]) throws java.lang.instrument.IllegalClassFormatException"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod()", "public org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.reflect.Method, java.lang.Object[], java.util.concurrent.Callable<?>)", "public static java.lang.Object interceptSuperCallable(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.reflect.Method, java.lang.Object[], java.util.concurrent.Callable<?>) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])", "public static java.lang.Object interceptAbstract(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod, int)", "public org.mockito.internal.creation.bytebuddy.InterceptedInvocation(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod, int)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.isVerified()", "public boolean isVerified()"], ["int", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getSequenceNumber()", "public int getSequenceNumber()"], ["org.mockito.invocation.Location", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getLocation()", "public org.mockito.invocation.Location getLocation()"], ["java.lang.Object[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getRawArguments()", "public java.lang.Object[] getRawArguments()"], ["java.lang.Class<?>", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getRawReturnType()", "public java.lang.Class<?> getRawReturnType()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.markVerified()", "public void markVerified()"], ["org.mockito.invocation.StubInfo", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.stubInfo()", "public org.mockito.invocation.StubInfo stubInfo()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.markStubbed(org.mockito.invocation.StubInfo)", "public void markStubbed(org.mockito.invocation.StubInfo)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.isIgnoredForVerification()", "public boolean isIgnoredForVerification()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.ignoreForVerification()", "public void ignoreForVerification()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getMock()", "public java.lang.Object getMock()"], ["java.lang.reflect.Method", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getMethod()", "public java.lang.reflect.Method getMethod()"], ["java.lang.Object[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getArguments()", "public java.lang.Object[] getArguments()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getArgument(int)", "public <T> T getArgument(int)"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.callRealMethod()", "public java.lang.Object callRealMethod() throws java.lang.Throwable"], ["int", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.hashCode()", "public int hashCode()"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.toString()", "public java.lang.String toString()"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable(java.util.concurrent.Callable<?>)", "public org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable(java.util.concurrent.Callable<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable.isInvokable()", "public boolean isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable.invoke()", "public java.lang.Object invoke() throws java.lang.Throwable"], ["net.bytebuddy.jar.asm.MethodVisitor", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$ParameterAddingClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])", "public net.bytebuddy.jar.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport.writeReplace(java.lang.Object)", "public java.lang.Object writeReplace(java.lang.Object) throws java.io.ObjectStreamException"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor(org.mockito.internal.InternalMockHandler, org.mockito.mock.MockCreationSettings)", "public org.mockito.internal.creation.bytebuddy.MockMethodInterceptor(org.mockito.internal.InternalMockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getMockHandler()", "public org.mockito.invocation.MockHandler getMockHandler()"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getSerializationSupport()", "public org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport getSerializationSupport()"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker()", "public org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)", "public <T> T createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)", "public <T> java.lang.Class<? extends T> createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.getHandler(java.lang.Object)", "public org.mockito.invocation.MockHandler getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)", "public void resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)", "public org.mockito.plugins.MockMaker$TypeMockability isTypeMockable(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableSuperMethodCall.isInvokable()", "public boolean isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableSuperMethodCall.invoke()", "public java.lang.Object invoke() throws java.lang.Throwable"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy(java.lang.Object)", "public org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy(java.lang.Object) throws java.io.IOException"], ["org.mockito.internal.creation.bytebuddy.MockMethodDispatcher", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher()", "public org.mockito.internal.creation.bytebuddy.MockMethodDispatcher()"], ["org.mockito.internal.creation.bytebuddy.MockMethodDispatcher", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher.get(java.lang.String, java.lang.Object)", "public static org.mockito.internal.creation.bytebuddy.MockMethodDispatcher get(java.lang.String, java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher.set(java.lang.String, org.mockito.internal.creation.bytebuddy.MockMethodDispatcher)", "public static void set(java.lang.String, org.mockito.internal.creation.bytebuddy.MockMethodDispatcher)"], ["boolean", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.mockable()", "public boolean mockable()"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.nonMockableReason()", "public java.lang.String nonMockableReason()"], ["org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker()", "public org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)", "public <T> T createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)", "public <T> java.lang.Class<? extends T> createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.getHandler(java.lang.Object)", "public org.mockito.invocation.MockHandler getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)", "public void resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)", "public org.mockito.plugins.MockMaker$TypeMockability isTypeMockable(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.mockable()", "public boolean mockable()"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.nonMockableReason()", "public java.lang.String nonMockableReason()"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals()", "public org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals()"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals.doIdentityEquals(java.lang.Object, java.lang.Object)", "public static boolean doIdentityEquals(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.configuration.SpyAnnotationEngine", "org.mockito.internal.configuration.SpyAnnotationEngine()", "public org.mockito.internal.configuration.SpyAnnotationEngine()"], ["void", "org.mockito.internal.configuration.SpyAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)", "public void process(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.internal.configuration.DefaultInjectionEngine", "org.mockito.internal.configuration.DefaultInjectionEngine()", "public org.mockito.internal.configuration.DefaultInjectionEngine()"], ["void", "org.mockito.internal.configuration.DefaultInjectionEngine.injectMocksOnFields(java.util.Set<java.lang.reflect.Field>, java.util.Set<java.lang.Object>, java.lang.Object)", "public void injectMocksOnFields(java.util.Set<java.lang.reflect.Field>, java.util.Set<java.lang.Object>, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.configuration.DefaultAnnotationEngine$1.process(A, java.lang.reflect.Field)", "public java.lang.Object process(A, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.GlobalConfiguration", "org.mockito.internal.configuration.GlobalConfiguration()", "public org.mockito.internal.configuration.GlobalConfiguration()"], ["void", "org.mockito.internal.configuration.GlobalConfiguration.validate()", "public static void validate()"], ["org.mockito.configuration.AnnotationEngine", "org.mockito.internal.configuration.GlobalConfiguration.getAnnotationEngine()", "public org.mockito.configuration.AnnotationEngine getAnnotationEngine()"], ["boolean", "org.mockito.internal.configuration.GlobalConfiguration.cleansStackTrace()", "public boolean cleansStackTrace()"], ["boolean", "org.mockito.internal.configuration.GlobalConfiguration.enableClassCache()", "public boolean enableClassCache()"], ["org.mockito.stubbing.Answer<java.lang.Object>", "org.mockito.internal.configuration.GlobalConfiguration.getDefaultAnswer()", "public org.mockito.stubbing.Answer<java.lang.Object> getDefaultAnswer()"], ["org.mockito.internal.configuration.DefaultAnnotationEngine", "org.mockito.internal.configuration.DefaultAnnotationEngine()", "public org.mockito.internal.configuration.DefaultAnnotationEngine()"], ["void", "org.mockito.internal.configuration.DefaultAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)", "public void process(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.internal.configuration.CaptorAnnotationProcessor", "org.mockito.internal.configuration.CaptorAnnotationProcessor()", "public org.mockito.internal.configuration.CaptorAnnotationProcessor()"], ["java.lang.Object", "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(org.mockito.Captor, java.lang.reflect.Field)", "public java.lang.Object process(org.mockito.Captor, java.lang.reflect.Field)"], ["java.lang.Object", "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)", "public java.lang.Object process(java.lang.annotation.Annotation, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.MockAnnotationProcessor", "org.mockito.internal.configuration.MockAnnotationProcessor()", "public org.mockito.internal.configuration.MockAnnotationProcessor()"], ["java.lang.Object", "org.mockito.internal.configuration.MockAnnotationProcessor.process(org.mockito.Mock, java.lang.reflect.Field)", "public java.lang.Object process(org.mockito.Mock, java.lang.reflect.Field)"], ["java.lang.Object", "org.mockito.internal.configuration.MockAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)", "public java.lang.Object process(java.lang.annotation.Annotation, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.InjectingAnnotationEngine", "org.mockito.internal.configuration.InjectingAnnotationEngine()", "public org.mockito.internal.configuration.InjectingAnnotationEngine()"], ["void", "org.mockito.internal.configuration.InjectingAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)", "public void process(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.configuration.InjectingAnnotationEngine.injectMocks(java.lang.Object)", "public void injectMocks(java.lang.Object)"], ["org.mockito.internal.configuration.ClassPathLoader", "org.mockito.internal.configuration.ClassPathLoader()", "public org.mockito.internal.configuration.ClassPathLoader()"], ["org.mockito.configuration.IMockitoConfiguration", "org.mockito.internal.configuration.ClassPathLoader.loadConfiguration()", "public org.mockito.configuration.IMockitoConfiguration loadConfiguration()"], ["org.mockito.internal.configuration.plugins.PluginFinder", "org.mockito.internal.configuration.plugins.PluginFinder(org.mockito.plugins.PluginSwitch)", "public org.mockito.internal.configuration.plugins.PluginFinder(org.mockito.plugins.PluginSwitch)"], ["org.mockito.internal.configuration.plugins.PluginLoader", "org.mockito.internal.configuration.plugins.PluginLoader(org.mockito.plugins.PluginSwitch)", "public org.mockito.internal.configuration.plugins.PluginLoader(org.mockito.plugins.PluginSwitch)"], ["org.mockito.internal.configuration.plugins.Plugins", "org.mockito.internal.configuration.plugins.Plugins()", "public org.mockito.internal.configuration.plugins.Plugins()"], ["org.mockito.plugins.StackTraceCleanerProvider", "org.mockito.internal.configuration.plugins.Plugins.getStackTraceCleanerProvider()", "public static org.mockito.plugins.StackTraceCleanerProvider getStackTraceCleanerProvider()"], ["org.mockito.plugins.MockMaker", "org.mockito.internal.configuration.plugins.Plugins.getMockMaker()", "public static org.mockito.plugins.MockMaker getMockMaker()"], ["org.mockito.plugins.InstantiatorProvider", "org.mockito.internal.configuration.plugins.Plugins.getInstantiatorProvider()", "public static org.mockito.plugins.InstantiatorProvider getInstantiatorProvider()"], ["boolean", "org.mockito.internal.configuration.plugins.DefaultPluginSwitch.isEnabled(java.lang.String)", "public boolean isEnabled(java.lang.String)"], ["org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler", "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler()", "public org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler()"], ["org.mockito.internal.configuration.injection.ConstructorInjection", "org.mockito.internal.configuration.injection.ConstructorInjection()", "public org.mockito.internal.configuration.injection.ConstructorInjection()"], ["boolean", "org.mockito.internal.configuration.injection.ConstructorInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)", "public boolean processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver", "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver(java.util.Set<java.lang.Object>)", "public org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver(java.util.Set<java.lang.Object>)"], ["java.lang.Object[]", "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver.resolveTypeInstances(java.lang.Class<?>...)", "public java.lang.Object[] resolveTypeInstances(java.lang.Class<?>...)"], ["org.mockito.internal.configuration.injection.MockInjection", "org.mockito.internal.configuration.injection.MockInjection()", "public org.mockito.internal.configuration.injection.MockInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection.onField(java.lang.reflect.Field, java.lang.Object)", "public static org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection onField(java.lang.reflect.Field, java.lang.Object)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection.onFields(java.util.Set<java.lang.reflect.Field>, java.lang.Object)", "public static org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection onFields(java.util.Set<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy()", "public org.mockito.internal.configuration.injection.MockInjectionStrategy()"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy.nop()", "public static org.mockito.internal.configuration.injection.MockInjectionStrategy nop()"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy.thenTry(org.mockito.internal.configuration.injection.MockInjectionStrategy)", "public org.mockito.internal.configuration.injection.MockInjectionStrategy thenTry(org.mockito.internal.configuration.injection.MockInjectionStrategy)"], ["boolean", "org.mockito.internal.configuration.injection.MockInjectionStrategy.process(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)", "public boolean process(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.withMocks(java.util.Set<java.lang.Object>)", "public org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection withMocks(java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryConstructorInjection()", "public org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection tryConstructorInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryPropertyOrFieldInjection()", "public org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection tryPropertyOrFieldInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.handleSpyAnnotation()", "public org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection handleSpyAnnotation()"], ["void", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.apply()", "public void apply()"], ["org.mockito.internal.configuration.injection.PropertyAndSetterInjection", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection()", "public org.mockito.internal.configuration.injection.PropertyAndSetterInjection()"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)", "public boolean processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.reflect.Field)", "public boolean isOut(java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.Object)", "public boolean isOut(java.lang.Object)"], ["org.mockito.internal.configuration.injection.scanner.MockScanner", "org.mockito.internal.configuration.injection.scanner.MockScanner(java.lang.Object, java.lang.Class<?>)", "public org.mockito.internal.configuration.injection.scanner.MockScanner(java.lang.Object, java.lang.Class<?>)"], ["void", "org.mockito.internal.configuration.injection.scanner.MockScanner.addPreparedMocks(java.util.Set<java.lang.Object>)", "public void addPreparedMocks(java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.scanner.InjectMocksScanner", "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner(java.lang.Class<?>)", "public org.mockito.internal.configuration.injection.scanner.InjectMocksScanner(java.lang.Class<?>)"], ["void", "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner.addTo(java.util.Set<java.lang.reflect.Field>)", "public void addTo(java.util.Set<java.lang.reflect.Field>)"], ["java.lang.Object", "org.mockito.internal.configuration.injection.filter.OngoingInjector$1.thenInject()", "public java.lang.Object thenInject()"], ["org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter", "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)", "public org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)", "public org.mockito.internal.configuration.injection.filter.OngoingInjector filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter", "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)", "public org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)", "public org.mockito.internal.configuration.injection.filter.OngoingInjector filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1.thenInject()", "public java.lang.Object thenInject()"], ["org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter()", "public org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter()"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)", "public org.mockito.internal.configuration.injection.filter.OngoingInjector filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.runners.StrictRunner", "org.mockito.internal.runners.StrictRunner(org.mockito.internal.runners.RunnerImpl, java.lang.Class<?>)", "public org.mockito.internal.runners.StrictRunner(org.mockito.internal.runners.RunnerImpl, java.lang.Class<?>)"], ["void", "org.mockito.internal.runners.StrictRunner.run(org.junit.runner.notification.RunNotifier)", "public void run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.internal.runners.StrictRunner.getDescription()", "public org.junit.runner.Description getDescription()"], ["void", "org.mockito.internal.runners.StrictRunner.filter(org.junit.runner.manipulation.Filter)", "public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException"], ["org.mockito.internal.runners.RunnerFactory", "org.mockito.internal.runners.RunnerFactory()", "public org.mockito.internal.runners.RunnerFactory()"], ["org.mockito.internal.runners.RunnerImpl", "org.mockito.internal.runners.RunnerFactory.create(java.lang.Class<?>)", "public org.mockito.internal.runners.RunnerImpl create(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["org.mockito.internal.runners.SilentJUnitRunner", "org.mockito.internal.runners.SilentJUnitRunner(java.lang.Class<?>)", "public org.mockito.internal.runners.SilentJUnitRunner(java.lang.Class<?>) throws org.junit.runners.model.InitializationError"], ["void", "org.mockito.internal.runners.SilentJUnitRunner.run(org.junit.runner.notification.RunNotifier)", "public void run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.internal.runners.SilentJUnitRunner.getDescription()", "public org.junit.runner.Description getDescription()"], ["void", "org.mockito.internal.runners.SilentJUnitRunner.filter(org.junit.runner.manipulation.Filter)", "public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException"], ["org.mockito.internal.runners.util.FailureDetector", "org.mockito.internal.runners.util.FailureDetector()", "public org.mockito.internal.runners.util.FailureDetector()"], ["void", "org.mockito.internal.runners.util.FailureDetector.testFailure(org.junit.runner.notification.Failure)", "public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception"], ["boolean", "org.mockito.internal.runners.util.FailureDetector.isSuccessful()", "public boolean isSuccessful()"], ["boolean", "org.mockito.internal.runners.util.TestMethodsFinder.hasTestMethods(java.lang.Class<?>)", "public static boolean hasTestMethods(java.lang.Class<?>)"], ["org.mockito.internal.runners.util.FrameworkUsageValidator", "org.mockito.internal.runners.util.FrameworkUsageValidator(org.junit.runner.notification.RunNotifier)", "public org.mockito.internal.runners.util.FrameworkUsageValidator(org.junit.runner.notification.RunNotifier)"], ["void", "org.mockito.internal.runners.util.FrameworkUsageValidator.testFailure(org.junit.runner.notification.Failure)", "public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception"], ["void", "org.mockito.internal.runners.util.FrameworkUsageValidator.testFinished(org.junit.runner.Description)", "public void testFinished(org.junit.runner.Description) throws java.lang.Exception"], ["org.mockito.internal.runners.util.RunnerProvider", "org.mockito.internal.runners.util.RunnerProvider()", "public org.mockito.internal.runners.util.RunnerProvider()"], ["org.mockito.internal.runners.RunnerImpl", "org.mockito.internal.runners.util.RunnerProvider.newInstance(java.lang.String, java.lang.Class<?>)", "public org.mockito.internal.runners.RunnerImpl newInstance(java.lang.String, java.lang.Class<?>) throws java.lang.Exception"], ["org.mockito.internal.hamcrest.MatcherGenericTypeExtractor", "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor()", "public org.mockito.internal.hamcrest.MatcherGenericTypeExtractor()"], ["java.lang.Class<?>", "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor.genericTypeOfMatcher(java.lang.Class<?>)", "public static java.lang.Class<?> genericTypeOfMatcher(java.lang.Class<?>)"], ["org.mockito.internal.hamcrest.HamcrestArgumentMatcher", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher(org.hamcrest.Matcher<T>)", "public org.mockito.internal.hamcrest.HamcrestArgumentMatcher(org.hamcrest.Matcher<T>)"], ["boolean", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.toString()", "public java.lang.String toString()"], ["org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings", "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings(java.lang.String, java.lang.Throwable)", "public org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings(java.lang.String, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.checkedExceptionInvalid(java.lang.Throwable)", "public static org.mockito.exceptions.base.MockitoException checkedExceptionInvalid(java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotStubWithNullThrowable()", "public static org.mockito.exceptions.base.MockitoException cannotStubWithNullThrowable()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unfinishedStubbing(org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoException unfinishedStubbing(org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.incorrectUseOfApi()", "public static org.mockito.exceptions.base.MockitoException incorrectUseOfApi()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.missingMethodInvocation()", "public static org.mockito.exceptions.base.MockitoException missingMethodInvocation()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unfinishedVerificationException(org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoException unfinishedVerificationException(org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerify(java.lang.Class<?>)", "public static org.mockito.exceptions.base.MockitoException notAMockPassedToVerify(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToVerify()", "public static org.mockito.exceptions.base.MockitoException nullPassedToVerify()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToWhenMethod()", "public static org.mockito.exceptions.base.MockitoException notAMockPassedToWhenMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToWhenMethod()", "public static org.mockito.exceptions.base.MockitoException nullPassedToWhenMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedToVerifyNoMoreInteractions()", "public static org.mockito.exceptions.base.MockitoException mocksHaveToBePassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerifyNoMoreInteractions()", "public static org.mockito.exceptions.base.MockitoException notAMockPassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToVerifyNoMoreInteractions()", "public static org.mockito.exceptions.base.MockitoException nullPassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedWhenCreatingInOrder()", "public static org.mockito.exceptions.base.MockitoException notAMockPassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedWhenCreatingInOrder()", "public static org.mockito.exceptions.base.MockitoException nullPassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedWhenCreatingInOrder()", "public static org.mockito.exceptions.base.MockitoException mocksHaveToBePassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.inOrderRequiresFamiliarMock()", "public static org.mockito.exceptions.base.MockitoException inOrderRequiresFamiliarMock()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidUseOfMatchers(int, java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)", "public static org.mockito.exceptions.base.MockitoException invalidUseOfMatchers(int, java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.incorrectUseOfAdditionalMatchers(java.lang.String, int, java.util.Collection<org.mockito.internal.matchers.LocalizedMatcher>)", "public static org.mockito.exceptions.base.MockitoException incorrectUseOfAdditionalMatchers(java.lang.String, int, java.util.Collection<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.stubPassedToVerify()", "public static org.mockito.exceptions.base.MockitoException stubPassedToVerify()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.reportNoSubMatchersFound(java.lang.String)", "public static org.mockito.exceptions.base.MockitoException reportNoSubMatchersFound(java.lang.String)"], ["java.lang.AssertionError", "org.mockito.internal.exceptions.Reporter.argumentsAreDifferent(java.lang.String, java.lang.String, org.mockito.invocation.Location)", "public static java.lang.AssertionError argumentsAreDifferent(java.lang.String, java.lang.String, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation)", "public static org.mockito.exceptions.base.MockitoAssertionError wantedButNotInvoked(org.mockito.invocation.DescribedInvocation)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation, java.util.List<? extends org.mockito.invocation.DescribedInvocation>)", "public static org.mockito.exceptions.base.MockitoAssertionError wantedButNotInvoked(org.mockito.invocation.DescribedInvocation, java.util.List<? extends org.mockito.invocation.DescribedInvocation>)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvokedInOrder(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.DescribedInvocation)", "public static org.mockito.exceptions.base.MockitoAssertionError wantedButNotInvokedInOrder(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.DescribedInvocation)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooManyActualInvocations(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoAssertionError tooManyActualInvocations(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.neverWantedButInvoked(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoAssertionError neverWantedButInvoked(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooManyActualInvocationsInOrder(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoAssertionError tooManyActualInvocationsInOrder(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoAssertionError tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoAssertionError tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWanted(org.mockito.invocation.Invocation, java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)", "public static org.mockito.exceptions.base.MockitoAssertionError noMoreInteractionsWanted(org.mockito.invocation.Invocation, java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWantedInOrder(org.mockito.invocation.Invocation)", "public static org.mockito.exceptions.base.MockitoAssertionError noMoreInteractionsWantedInOrder(org.mockito.invocation.Invocation)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotMockClass(java.lang.Class<?>, java.lang.String)", "public static org.mockito.exceptions.base.MockitoException cannotMockClass(java.lang.Class<?>, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotStubVoidMethodWithAReturnValue(java.lang.String)", "public static org.mockito.exceptions.base.MockitoException cannotStubVoidMethodWithAReturnValue(java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.onlyVoidMethodsCanBeSetToDoNothing()", "public static org.mockito.exceptions.base.MockitoException onlyVoidMethodsCanBeSetToDoNothing()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeOfReturnValue(java.lang.String, java.lang.String, java.lang.String)", "public static org.mockito.exceptions.base.MockitoException wrongTypeOfReturnValue(java.lang.String, java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeReturnedByDefaultAnswer(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)", "public static org.mockito.exceptions.base.MockitoException wrongTypeReturnedByDefaultAnswer(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedAtMostX(int, int)", "public static org.mockito.exceptions.base.MockitoAssertionError wantedAtMostX(int, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.misplacedArgumentMatcher(java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)", "public static org.mockito.exceptions.base.MockitoException misplacedArgumentMatcher(java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.smartNullPointerException(java.lang.String, org.mockito.invocation.Location)", "public static org.mockito.exceptions.base.MockitoException smartNullPointerException(java.lang.String, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.noArgumentValueWasCaptured()", "public static org.mockito.exceptions.base.MockitoException noArgumentValueWasCaptured()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesDoesNotAcceptNullParameters()", "public static org.mockito.exceptions.base.MockitoException extraInterfacesDoesNotAcceptNullParameters()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesAcceptsOnlyInterfaces(java.lang.Class<?>)", "public static org.mockito.exceptions.base.MockitoException extraInterfacesAcceptsOnlyInterfaces(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesCannotContainMockedType(java.lang.Class<?>)", "public static org.mockito.exceptions.base.MockitoException extraInterfacesCannotContainMockedType(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesRequiresAtLeastOneInterface()", "public static org.mockito.exceptions.base.MockitoException extraInterfacesRequiresAtLeastOneInterface()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithSpiedInstanceType(java.lang.Class<?>, java.lang.Object)", "public static org.mockito.exceptions.base.MockitoException mockedTypeIsInconsistentWithSpiedInstanceType(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotCallAbstractRealMethod()", "public static org.mockito.exceptions.base.MockitoException cannotCallAbstractRealMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotVerifyToString()", "public static org.mockito.exceptions.base.MockitoException cannotVerifyToString()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.moreThanOneAnnotationNotAllowed(java.lang.String)", "public static org.mockito.exceptions.base.MockitoException moreThanOneAnnotationNotAllowed(java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unsupportedCombinationOfAnnotations(java.lang.String, java.lang.String)", "public static org.mockito.exceptions.base.MockitoException unsupportedCombinationOfAnnotations(java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInitializeForSpyAnnotation(java.lang.String, java.lang.Exception)", "public static org.mockito.exceptions.base.MockitoException cannotInitializeForSpyAnnotation(java.lang.String, java.lang.Exception)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInitializeForInjectMocksAnnotation(java.lang.String, java.lang.String)", "public static org.mockito.exceptions.base.MockitoException cannotInitializeForInjectMocksAnnotation(java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.atMostAndNeverShouldNotBeUsedWithTimeout()", "public static org.mockito.exceptions.base.MockitoException atMostAndNeverShouldNotBeUsedWithTimeout()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.fieldInitialisationThrewException(java.lang.reflect.Field, java.lang.Throwable)", "public static org.mockito.exceptions.base.MockitoException fieldInitialisationThrewException(java.lang.reflect.Field, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenerDoesNotAcceptNullParameters()", "public static org.mockito.exceptions.base.MockitoException invocationListenerDoesNotAcceptNullParameters()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenersRequiresAtLeastOneListener()", "public static org.mockito.exceptions.base.MockitoException invocationListenersRequiresAtLeastOneListener()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenerThrewException(org.mockito.listeners.InvocationListener, java.lang.Throwable)", "public static org.mockito.exceptions.base.MockitoException invocationListenerThrewException(org.mockito.listeners.InvocationListener, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInjectDependency(java.lang.reflect.Field, java.lang.Object, java.lang.Exception)", "public static org.mockito.exceptions.base.MockitoException cannotInjectDependency(java.lang.reflect.Field, java.lang.Object, java.lang.Exception)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithDelegatedInstanceType(java.lang.Class<?>, java.lang.Object)", "public static org.mockito.exceptions.base.MockitoException mockedTypeIsInconsistentWithDelegatedInstanceType(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.spyAndDelegateAreMutuallyExclusive()", "public static org.mockito.exceptions.base.MockitoException spyAndDelegateAreMutuallyExclusive()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidArgumentRangeAtIdentityAnswerCreationTime()", "public static org.mockito.exceptions.base.MockitoException invalidArgumentRangeAtIdentityAnswerCreationTime()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidArgumentPositionRangeAtInvocationTime(org.mockito.invocation.InvocationOnMock, boolean, int)", "public static org.mockito.exceptions.base.MockitoException invalidArgumentPositionRangeAtInvocationTime(org.mockito.invocation.InvocationOnMock, boolean, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeOfArgumentToReturn(org.mockito.invocation.InvocationOnMock, java.lang.String, java.lang.Class<?>, int)", "public static org.mockito.exceptions.base.MockitoException wrongTypeOfArgumentToReturn(org.mockito.invocation.InvocationOnMock, java.lang.String, java.lang.Class<?>, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.defaultAnswerDoesNotAcceptNullParameter()", "public static org.mockito.exceptions.base.MockitoException defaultAnswerDoesNotAcceptNullParameter()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.serializableWontWorkForObjectsThatDontImplementSerializable(java.lang.Class<?>)", "public static org.mockito.exceptions.base.MockitoException serializableWontWorkForObjectsThatDontImplementSerializable(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.delegatedMethodHasWrongReturnType(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object, java.lang.Object)", "public static org.mockito.exceptions.base.MockitoException delegatedMethodHasWrongReturnType(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.delegatedMethodDoesNotExistOnDelegate(java.lang.reflect.Method, java.lang.Object, java.lang.Object)", "public static org.mockito.exceptions.base.MockitoException delegatedMethodDoesNotExistOnDelegate(java.lang.reflect.Method, java.lang.Object, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.usingConstructorWithFancySerializable(org.mockito.mock.SerializableMode)", "public static org.mockito.exceptions.base.MockitoException usingConstructorWithFancySerializable(org.mockito.mock.SerializableMode)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotCreateTimerWithNegativeDurationTime(long)", "public static org.mockito.exceptions.base.MockitoException cannotCreateTimerWithNegativeDurationTime(long)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAnException()", "public static org.mockito.exceptions.base.MockitoException notAnException()"], ["org.mockito.exceptions.misusing.UnnecessaryStubbingException", "org.mockito.internal.exceptions.Reporter.formatUnncessaryStubbingException(java.lang.Class<?>, java.util.Collection<org.mockito.invocation.Invocation>)", "public static org.mockito.exceptions.misusing.UnnecessaryStubbingException formatUnncessaryStubbingException(java.lang.Class<?>, java.util.Collection<org.mockito.invocation.Invocation>)"], ["org.mockito.internal.exceptions.MockitoLimitations", "org.mockito.internal.exceptions.MockitoLimitations()", "public org.mockito.internal.exceptions.MockitoLimitations()"], ["org.mockito.internal.exceptions.util.ScenarioPrinter", "org.mockito.internal.exceptions.util.ScenarioPrinter()", "public org.mockito.internal.exceptions.util.ScenarioPrinter()"], ["java.lang.String", "org.mockito.internal.exceptions.util.ScenarioPrinter.print(java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)", "public java.lang.String print(java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"], ["org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider()", "public org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider()"], ["org.mockito.exceptions.stacktrace.StackTraceCleaner", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider.getStackTraceCleaner(org.mockito.exceptions.stacktrace.StackTraceCleaner)", "public org.mockito.exceptions.stacktrace.StackTraceCleaner getStackTraceCleaner(org.mockito.exceptions.stacktrace.StackTraceCleaner)"], ["org.mockito.internal.exceptions.stacktrace.StackTraceFilter", "org.mockito.internal.exceptions.stacktrace.StackTraceFilter()", "public org.mockito.internal.exceptions.stacktrace.StackTraceFilter()"], ["java.lang.StackTraceElement[]", "org.mockito.internal.exceptions.stacktrace.StackTraceFilter.filter(java.lang.StackTraceElement[], boolean)", "public java.lang.StackTraceElement[] filter(java.lang.StackTraceElement[], boolean)"], ["org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner()", "public org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner()"], ["boolean", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner.isIn(java.lang.StackTraceElement)", "public boolean isIn(java.lang.StackTraceElement)"], ["org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter", "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter()", "public org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter()"], ["void", "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.filter(java.lang.Throwable)", "public void filter(java.lang.Throwable)"], ["org.mockito.internal.framework.DefaultMockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework()", "public org.mockito.internal.framework.DefaultMockitoFramework()"], ["org.mockito.MockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework.addListener(org.mockito.listeners.MockitoListener)", "public org.mockito.MockitoFramework addListener(org.mockito.listeners.MockitoListener)"], ["org.mockito.MockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework.removeListener(org.mockito.listeners.MockitoListener)", "public org.mockito.MockitoFramework removeListener(org.mockito.listeners.MockitoListener)"], ["org.mockito.internal.matchers.ArrayEquals", "org.mockito.internal.matchers.ArrayEquals(java.lang.Object)", "public org.mockito.internal.matchers.ArrayEquals(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.ArrayEquals.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.ArrayEquals.toString()", "public java.lang.String toString()"], ["java.lang.Object[]", "org.mockito.internal.matchers.ArrayEquals.createObjectArray(java.lang.Object)", "public static java.lang.Object[] createObjectArray(java.lang.Object)"], ["org.mockito.internal.matchers.GreaterThan", "org.mockito.internal.matchers.GreaterThan(T)", "public org.mockito.internal.matchers.GreaterThan(T)"], ["org.mockito.internal.matchers.Matches", "org.mockito.internal.matchers.Matches(java.lang.String)", "public org.mockito.internal.matchers.Matches(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Matches.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Matches.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.Same", "org.mockito.internal.matchers.Same(java.lang.Object)", "public org.mockito.internal.matchers.Same(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Same.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Same.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.And", "org.mockito.internal.matchers.And(java.util.List<org.mockito.ArgumentMatcher>)", "public org.mockito.internal.matchers.And(java.util.List<org.mockito.ArgumentMatcher>)"], ["boolean", "org.mockito.internal.matchers.And.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.And.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.LessOrEqual", "org.mockito.internal.matchers.LessOrEqual(T)", "public org.mockito.internal.matchers.LessOrEqual(T)"], ["org.mockito.internal.matchers.Not", "org.mockito.internal.matchers.Not(org.mockito.ArgumentMatcher)", "public org.mockito.internal.matchers.Not(org.mockito.ArgumentMatcher)"], ["boolean", "org.mockito.internal.matchers.Not.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Not.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.LocalizedMatcher", "org.mockito.internal.matchers.LocalizedMatcher(org.mockito.ArgumentMatcher<?>)", "public org.mockito.internal.matchers.LocalizedMatcher(org.mockito.ArgumentMatcher<?>)"], ["org.mockito.invocation.Location", "org.mockito.internal.matchers.LocalizedMatcher.getLocation()", "public org.mockito.invocation.Location getLocation()"], ["org.mockito.ArgumentMatcher<?>", "org.mockito.internal.matchers.LocalizedMatcher.getMatcher()", "public org.mockito.ArgumentMatcher<?> getMatcher()"], ["org.mockito.internal.matchers.InstanceOf", "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>)", "public org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>)"], ["org.mockito.internal.matchers.InstanceOf", "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>, java.lang.String)", "public org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>, java.lang.String)"], ["boolean", "org.mockito.internal.matchers.InstanceOf.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.InstanceOf.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.CompareTo", "org.mockito.internal.matchers.CompareTo(T)", "public org.mockito.internal.matchers.CompareTo(T)"], ["boolean", "org.mockito.internal.matchers.CompareTo.matches(T)", "public final boolean matches(T)"], ["java.lang.String", "org.mockito.internal.matchers.CompareTo.toString()", "public final java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.CompareTo.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["org.mockito.internal.matchers.StartsWith", "org.mockito.internal.matchers.StartsWith(java.lang.String)", "public org.mockito.internal.matchers.StartsWith(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.StartsWith.matches(java.lang.String)", "public boolean matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.StartsWith.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.StartsWith.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Any.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Any.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.CapturingMatcher", "org.mockito.internal.matchers.CapturingMatcher()", "public org.mockito.internal.matchers.CapturingMatcher()"], ["boolean", "org.mockito.internal.matchers.CapturingMatcher.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.CapturingMatcher.toString()", "public java.lang.String toString()"], ["T", "org.mockito.internal.matchers.CapturingMatcher.getLastValue()", "public T getLastValue()"], ["java.util.List<T>", "org.mockito.internal.matchers.CapturingMatcher.getAllValues()", "public java.util.List<T> getAllValues()"], ["void", "org.mockito.internal.matchers.CapturingMatcher.captureFrom(java.lang.Object)", "public void captureFrom(java.lang.Object)"], ["org.mockito.internal.matchers.LessThan", "org.mockito.internal.matchers.LessThan(T)", "public org.mockito.internal.matchers.LessThan(T)"], ["org.mockito.internal.matchers.Equals", "org.mockito.internal.matchers.Equals(java.lang.Object)", "public org.mockito.internal.matchers.Equals(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Equals.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Equals.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.Equals.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.mockito.internal.matchers.Equals.hashCode()", "public int hashCode()"], ["java.lang.String", "org.mockito.internal.matchers.Equals.toStringWithType()", "public java.lang.String toStringWithType()"], ["boolean", "org.mockito.internal.matchers.Equals.typeMatches(java.lang.Object)", "public boolean typeMatches(java.lang.Object)"], ["org.mockito.internal.matchers.Find", "org.mockito.internal.matchers.Find(java.lang.String)", "public org.mockito.internal.matchers.Find(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Find.matches(java.lang.String)", "public boolean matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.Find.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.Find.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["org.mockito.internal.matchers.Or", "org.mockito.internal.matchers.Or(java.util.List<org.mockito.ArgumentMatcher>)", "public org.mockito.internal.matchers.Or(java.util.List<org.mockito.ArgumentMatcher>)"], ["boolean", "org.mockito.internal.matchers.Or.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Or.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.InstanceOf$VarArgAware", "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>)", "public org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>)"], ["org.mockito.internal.matchers.InstanceOf$VarArgAware", "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>, java.lang.String)", "public org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>, java.lang.String)"], ["org.mockito.internal.matchers.EndsWith", "org.mockito.internal.matchers.EndsWith(java.lang.String)", "public org.mockito.internal.matchers.EndsWith(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.EndsWith.matches(java.lang.String)", "public boolean matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.EndsWith.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.EndsWith.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Null.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Null.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.CompareEqual", "org.mockito.internal.matchers.CompareEqual(T)", "public org.mockito.internal.matchers.CompareEqual(T)"], ["boolean", "org.mockito.internal.matchers.NotNull.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.NotNull.toString()", "public java.lang.String toString()"], ["org.mockito.internal.matchers.Contains", "org.mockito.internal.matchers.Contains(java.lang.String)", "public org.mockito.internal.matchers.Contains(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Contains.matches(java.lang.String)", "public boolean matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.Contains.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.Contains.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["org.mockito.internal.matchers.EqualsWithDelta", "org.mockito.internal.matchers.EqualsWithDelta(java.lang.Number, java.lang.Number)", "public org.mockito.internal.matchers.EqualsWithDelta(java.lang.Number, java.lang.Number)"], ["boolean", "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Number)", "public boolean matches(java.lang.Number)"], ["java.lang.String", "org.mockito.internal.matchers.EqualsWithDelta.toString()", "public java.lang.String toString()"], ["boolean", "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["org.mockito.internal.matchers.Equality", "org.mockito.internal.matchers.Equality()", "public org.mockito.internal.matchers.Equality()"], ["boolean", "org.mockito.internal.matchers.Equality.areEqual(java.lang.Object, java.lang.Object)", "public static boolean areEqual(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.matchers.GreaterOrEqual", "org.mockito.internal.matchers.GreaterOrEqual(T)", "public org.mockito.internal.matchers.GreaterOrEqual(T)"], ["org.mockito.internal.matchers.text.FormattedText", "org.mockito.internal.matchers.text.FormattedText(java.lang.String)", "public org.mockito.internal.matchers.text.FormattedText(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.text.FormattedText.getText()", "public java.lang.String getText()"], ["org.mockito.internal.matchers.text.ArrayIterator", "org.mockito.internal.matchers.text.ArrayIterator(java.lang.Object)", "public org.mockito.internal.matchers.text.ArrayIterator(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.text.ArrayIterator.hasNext()", "public boolean hasNext()"], ["java.lang.Object", "org.mockito.internal.matchers.text.ArrayIterator.next()", "public java.lang.Object next()"], ["void", "org.mockito.internal.matchers.text.ArrayIterator.remove()", "public void remove()"], ["org.mockito.internal.matchers.text.ValuePrinter", "org.mockito.internal.matchers.text.ValuePrinter()", "public org.mockito.internal.matchers.text.ValuePrinter()"], ["java.lang.String", "org.mockito.internal.matchers.text.ValuePrinter.print(java.lang.Object)", "public static java.lang.String print(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.text.ValuePrinter.printValues(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)", "public static java.lang.String printValues(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)"], ["org.mockito.internal.matchers.text.MatchersPrinter", "org.mockito.internal.matchers.text.MatchersPrinter()", "public org.mockito.internal.matchers.text.MatchersPrinter()"], ["java.lang.String", "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsLine(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)", "public java.lang.String getArgumentsLine(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"], ["java.lang.String", "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsBlock(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)", "public java.lang.String getArgumentsBlock(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder()", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder()"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object)", "public static boolean reflectionEquals(java.lang.Object, java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String[])", "public static boolean reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String[])"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean)", "public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>)", "public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, java.lang.String[])", "public static boolean reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, java.lang.String[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.appendSuper(boolean)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder appendSuper(boolean)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object, java.lang.Object)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long, long)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(long, long)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int, int)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(int, int)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short, short)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(short, short)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char, char)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(char, char)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte, byte)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(byte, byte)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double, double)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(double, double)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float, float)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(float, float)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean, boolean)", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(boolean, boolean)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object[], java.lang.Object[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(java.lang.Object[], java.lang.Object[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long[], long[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(long[], long[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int[], int[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(int[], int[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short[], short[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(short[], short[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char[], char[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(char[], char[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte[], byte[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(byte[], byte[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double[], double[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(double[], double[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float[], float[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(float[], float[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean[], boolean[])", "public org.mockito.internal.matchers.apachecommons.EqualsBuilder append(boolean[], boolean[])"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.isEquals()", "public boolean isEquals()"], ["org.mockito.internal.matchers.apachecommons.ReflectionEquals", "org.mockito.internal.matchers.apachecommons.ReflectionEquals(java.lang.Object, java.lang.String...)", "public org.mockito.internal.matchers.apachecommons.ReflectionEquals(java.lang.Object, java.lang.String...)"], ["boolean", "org.mockito.internal.matchers.apachecommons.ReflectionEquals.matches(java.lang.Object)", "public boolean matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.apachecommons.ReflectionEquals.toString()", "public java.lang.String toString()"], ["org.mockito.internal.stubbing.InvocationContainerImpl", "org.mockito.internal.stubbing.InvocationContainerImpl(org.mockito.mock.MockCreationSettings)", "public org.mockito.internal.stubbing.InvocationContainerImpl(org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)", "public void setInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)", "public void resetInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer)", "public void addAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addConsecutiveAnswer(org.mockito.stubbing.Answer)", "public void addConsecutiveAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer, boolean)", "public void addAnswer(org.mockito.stubbing.Answer, boolean)"], ["org.mockito.internal.stubbing.StubbedInvocationMatcher", "org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor(org.mockito.invocation.Invocation)", "public org.mockito.internal.stubbing.StubbedInvocationMatcher findAnswerFor(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswerForVoidMethod(org.mockito.stubbing.Answer)", "public void addAnswerForVoidMethod(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)", "public void setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["boolean", "org.mockito.internal.stubbing.InvocationContainerImpl.hasAnswersForStubbing()", "public boolean hasAnswersForStubbing()"], ["boolean", "org.mockito.internal.stubbing.InvocationContainerImpl.hasInvocationForPotentialStubbing()", "public boolean hasInvocationForPotentialStubbing()"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setMethodForStubbing(org.mockito.internal.invocation.InvocationMatcher)", "public void setMethodForStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["java.lang.String", "org.mockito.internal.stubbing.InvocationContainerImpl.toString()", "public java.lang.String toString()"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.stubbing.InvocationContainerImpl.getInvocations()", "public java.util.List<org.mockito.invocation.Invocation> getInvocations()"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.clearInvocations()", "public void clearInvocations()"], ["java.util.List<org.mockito.internal.stubbing.StubbedInvocationMatcher>", "org.mockito.internal.stubbing.InvocationContainerImpl.getStubbedInvocations()", "public java.util.List<org.mockito.internal.stubbing.StubbedInvocationMatcher> getStubbedInvocations()"], ["java.lang.Object", "org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock()", "public java.lang.Object invokedMock()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.stubbing.InvocationContainerImpl.getInvocationForStubbing()", "public org.mockito.internal.invocation.InvocationMatcher getInvocationForStubbing()"], ["org.mockito.internal.stubbing.ConsecutiveStubbing", "org.mockito.internal.stubbing.ConsecutiveStubbing(org.mockito.internal.stubbing.InvocationContainerImpl)", "public org.mockito.internal.stubbing.ConsecutiveStubbing(org.mockito.internal.stubbing.InvocationContainerImpl)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.ConsecutiveStubbing.thenAnswer(org.mockito.stubbing.Answer<?>)", "public org.mockito.stubbing.OngoingStubbing<T> thenAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.ConsecutiveStubbing.then(org.mockito.stubbing.Answer<?>)", "public org.mockito.stubbing.OngoingStubbing<T> then(org.mockito.stubbing.Answer<?>)"], ["<M> M", "org.mockito.internal.stubbing.ConsecutiveStubbing.getMock()", "public <M> M getMock()"], ["org.mockito.internal.stubbing.OngoingStubbingImpl", "org.mockito.internal.stubbing.OngoingStubbingImpl(org.mockito.internal.stubbing.InvocationContainerImpl)", "public org.mockito.internal.stubbing.OngoingStubbingImpl(org.mockito.internal.stubbing.InvocationContainerImpl)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.OngoingStubbingImpl.thenAnswer(org.mockito.stubbing.Answer<?>)", "public org.mockito.stubbing.OngoingStubbing<T> thenAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.OngoingStubbingImpl.then(org.mockito.stubbing.Answer<?>)", "public org.mockito.stubbing.OngoingStubbing<T> then(org.mockito.stubbing.Answer<?>)"], ["java.util.List<org.mockito.invocation.Invocation>", "org.mockito.internal.stubbing.OngoingStubbingImpl.getRegisteredInvocations()", "public java.util.List<org.mockito.invocation.Invocation> getRegisteredInvocations()"], ["<M> M", "org.mockito.internal.stubbing.OngoingStubbingImpl.getMock()", "public <M> M getMock()"], ["org.mockito.internal.stubbing.BaseStubbing", "org.mockito.internal.stubbing.BaseStubbing()", "public org.mockito.internal.stubbing.BaseStubbing()"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenReturn(T)", "public org.mockito.stubbing.OngoingStubbing<T> thenReturn(T)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenReturn(T, T...)", "public org.mockito.stubbing.OngoingStubbing<T> thenReturn(T, T...)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenThrow(java.lang.Throwable...)", "public org.mockito.stubbing.OngoingStubbing<T> thenThrow(java.lang.Throwable...)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenThrow(java.lang.Class<? extends java.lang.Throwable>)", "public org.mockito.stubbing.OngoingStubbing<T> thenThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public org.mockito.stubbing.OngoingStubbing<T> thenThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.stubbing.BaseStubbing.thenCallRealMethod()", "public org.mockito.stubbing.OngoingStubbing<T> thenCallRealMethod()"], ["org.mockito.internal.stubbing.StubbingComparator", "org.mockito.internal.stubbing.StubbingComparator()", "public org.mockito.internal.stubbing.StubbingComparator()"], ["int", "org.mockito.internal.stubbing.StubbingComparator.compare(org.mockito.stubbing.Stubbing, org.mockito.stubbing.Stubbing)", "public int compare(org.mockito.stubbing.Stubbing, org.mockito.stubbing.Stubbing)"], ["int", "org.mockito.internal.stubbing.StubbingComparator.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.stubbing.StubbedInvocationMatcher", "org.mockito.internal.stubbing.StubbedInvocationMatcher(org.mockito.internal.invocation.InvocationMatcher, org.mockito.stubbing.Answer)", "public org.mockito.internal.stubbing.StubbedInvocationMatcher(org.mockito.internal.invocation.InvocationMatcher, org.mockito.stubbing.Answer)"], ["java.lang.Object", "org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["void", "org.mockito.internal.stubbing.StubbedInvocationMatcher.addAnswer(org.mockito.stubbing.Answer)", "public void addAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.StubbedInvocationMatcher.markStubUsed(org.mockito.invocation.DescribedInvocation)", "public void markStubUsed(org.mockito.invocation.DescribedInvocation)"], ["boolean", "org.mockito.internal.stubbing.StubbedInvocationMatcher.wasUsed()", "public boolean wasUsed()"], ["java.lang.String", "org.mockito.internal.stubbing.StubbedInvocationMatcher.toString()", "public java.lang.String toString()"], ["org.mockito.internal.stubbing.StubberImpl", "org.mockito.internal.stubbing.StubberImpl()", "public org.mockito.internal.stubbing.StubberImpl()"], ["<T> T", "org.mockito.internal.stubbing.StubberImpl.when(T)", "public <T> T when(T)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object)", "public org.mockito.stubbing.Stubber doReturn(java.lang.Object)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object, java.lang.Object...)", "public org.mockito.stubbing.Stubber doReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Throwable...)", "public org.mockito.stubbing.Stubber doThrow(java.lang.Throwable...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>)", "public org.mockito.stubbing.Stubber doThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)", "public org.mockito.stubbing.Stubber doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doNothing()", "public org.mockito.stubbing.Stubber doNothing()"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doAnswer(org.mockito.stubbing.Answer)", "public org.mockito.stubbing.Stubber doAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doCallRealMethod()", "public org.mockito.stubbing.Stubber doCallRealMethod()"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues", "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues()", "public org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf", "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf()", "public org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer", "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer()", "public org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations", "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations(java.lang.Object)", "public org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsMocks", "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks()", "public org.mockito.internal.stubbing.defaultanswers.ReturnsMocks()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs()", "public org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues", "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues()", "public org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback(org.mockito.internal.util.reflection.GenericMetadataSupport)", "public org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback(org.mockito.internal.util.reflection.GenericMetadataSupport)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls()", "public org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer(org.mockito.invocation.InvocationOnMock, org.mockito.invocation.Location)", "public org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer(org.mockito.invocation.InvocationOnMock, org.mockito.invocation.Location)"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$5.answer(org.mockito.invocation.InvocationOnMock)", "public T answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Void answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.ThrowsException", "org.mockito.internal.stubbing.answers.ThrowsException(java.lang.Throwable)", "public org.mockito.internal.stubbing.answers.ThrowsException(java.lang.Throwable)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ThrowsException.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Throwable", "org.mockito.internal.stubbing.answers.ThrowsException.getThrowable()", "public java.lang.Throwable getThrowable()"], ["org.mockito.internal.stubbing.answers.ThrowsExceptionClass", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass(java.lang.Class<? extends java.lang.Throwable>)", "public org.mockito.internal.stubbing.answers.ThrowsExceptionClass(java.lang.Class<? extends java.lang.Throwable>)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Class<? extends java.lang.Throwable>", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass.getThrowableClass()", "public java.lang.Class<? extends java.lang.Throwable> getThrowableClass()"], ["org.mockito.internal.stubbing.answers.DoesNothing", "org.mockito.internal.stubbing.answers.DoesNothing()", "public org.mockito.internal.stubbing.answers.DoesNothing()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.DoesNothing.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$3.answer(org.mockito.invocation.InvocationOnMock)", "public T answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["<T, A> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer1<T, A>)", "public static <T, A> org.mockito.stubbing.Answer<T> toAnswer(org.mockito.stubbing.Answer1<T, A>)"], ["<A> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer1<A>)", "public static <A> org.mockito.stubbing.Answer<java.lang.Void> toAnswer(org.mockito.stubbing.VoidAnswer1<A>)"], ["<T, A, B> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer2<T, A, B>)", "public static <T, A, B> org.mockito.stubbing.Answer<T> toAnswer(org.mockito.stubbing.Answer2<T, A, B>)"], ["<A, B> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer2<A, B>)", "public static <A, B> org.mockito.stubbing.Answer<java.lang.Void> toAnswer(org.mockito.stubbing.VoidAnswer2<A, B>)"], ["<T, A, B, C> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer3<T, A, B, C>)", "public static <T, A, B, C> org.mockito.stubbing.Answer<T> toAnswer(org.mockito.stubbing.Answer3<T, A, B, C>)"], ["<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer3<A, B, C>)", "public static <A, B, C> org.mockito.stubbing.Answer<java.lang.Void> toAnswer(org.mockito.stubbing.VoidAnswer3<A, B, C>)"], ["<T, A, B, C, D> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer4<T, A, B, C, D>)", "public static <T, A, B, C, D> org.mockito.stubbing.Answer<T> toAnswer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"], ["<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)", "public static <A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void> toAnswer(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"], ["<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)", "public static <T, A, B, C, D, E> org.mockito.stubbing.Answer<T> toAnswer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"], ["<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)", "public static <A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void> toAnswer(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"], ["org.mockito.internal.stubbing.answers.ReturnsElementsOf", "org.mockito.internal.stubbing.answers.ReturnsElementsOf(java.util.Collection<?>)", "public org.mockito.internal.stubbing.answers.ReturnsElementsOf(java.util.Collection<?>)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ReturnsElementsOf.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$7.answer(org.mockito.invocation.InvocationOnMock)", "public T answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.MethodInfo", "org.mockito.internal.stubbing.answers.MethodInfo(org.mockito.invocation.Invocation)", "public org.mockito.internal.stubbing.answers.MethodInfo(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isValidException(java.lang.Throwable)", "public boolean isValidException(java.lang.Throwable)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isValidReturnType(java.lang.Class<?>)", "public boolean isValidReturnType(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isVoid()", "public boolean isVoid()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.MethodInfo.printMethodReturnType()", "public java.lang.String printMethodReturnType()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.MethodInfo.getMethodName()", "public java.lang.String getMethodName()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.returnsPrimitive()", "public boolean returnsPrimitive()"], ["java.lang.reflect.Method", "org.mockito.internal.stubbing.answers.MethodInfo.getMethod()", "public java.lang.reflect.Method getMethod()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isDeclaredOnInterface()", "public boolean isDeclaredOnInterface()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isAbstract()", "public boolean isAbstract()"], ["org.mockito.internal.stubbing.answers.AnswersValidator", "org.mockito.internal.stubbing.answers.AnswersValidator()", "public org.mockito.internal.stubbing.answers.AnswersValidator()"], ["void", "org.mockito.internal.stubbing.answers.AnswersValidator.validate(org.mockito.stubbing.Answer<?>, org.mockito.invocation.Invocation)", "public void validate(org.mockito.stubbing.Answer<?>, org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.stubbing.answers.AnswersValidator.validateDefaultAnswerReturnedValue(org.mockito.invocation.Invocation, java.lang.Object)", "public void validateDefaultAnswerReturnedValue(org.mockito.invocation.Invocation, java.lang.Object)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Void answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$1.answer(org.mockito.invocation.InvocationOnMock)", "public T answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.CallsRealMethods", "org.mockito.internal.stubbing.answers.CallsRealMethods()", "public org.mockito.internal.stubbing.answers.CallsRealMethods()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$9.answer(org.mockito.invocation.InvocationOnMock)", "public T answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Void answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Void answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.ReturnsArgumentAt", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt(int)", "public org.mockito.internal.stubbing.answers.ReturnsArgumentAt(int)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["int", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.wantedArgumentPosition()", "public int wantedArgumentPosition()"], ["void", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.validateIndexWithinInvocationRange(org.mockito.invocation.InvocationOnMock)", "public void validateIndexWithinInvocationRange(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Class<?>", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.returnedTypeOnSignature(org.mockito.invocation.InvocationOnMock)", "public java.lang.Class<?> returnedTypeOnSignature(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Void answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.ClonesArguments", "org.mockito.internal.stubbing.answers.ClonesArguments()", "public org.mockito.internal.stubbing.answers.ClonesArguments()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ClonesArguments.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["org.mockito.internal.stubbing.answers.Returns", "org.mockito.internal.stubbing.answers.Returns(java.lang.Object)", "public org.mockito.internal.stubbing.answers.Returns(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.Returns.answer(org.mockito.invocation.InvocationOnMock)", "public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable"], ["java.lang.String", "org.mockito.internal.stubbing.answers.Returns.printReturnType()", "public java.lang.String printReturnType()"], ["java.lang.Class<?>", "org.mockito.internal.stubbing.answers.Returns.getReturnType()", "public java.lang.Class<?> getReturnType()"], ["boolean", "org.mockito.internal.stubbing.answers.Returns.returnsNull()", "public boolean returnsNull()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.Returns.toString()", "public java.lang.String toString()"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)", "public void testStarted(org.junit.runner.Description) throws java.lang.Exception"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)", "public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception"], ["org.mockito.runners.MockitoJUnitRunner", "org.mockito.runners.MockitoJUnitRunner(java.lang.Class<?>)", "public org.mockito.runners.MockitoJUnitRunner(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["void", "org.mockito.runners.MockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)", "public void run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.MockitoJUnitRunner.getDescription()", "public org.junit.runner.Description getDescription()"], ["void", "org.mockito.runners.MockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)", "public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException"], ["org.mockito.runners.MockitoJUnitRunner$Strict", "org.mockito.runners.MockitoJUnitRunner$Strict(java.lang.Class<?>)", "public org.mockito.runners.MockitoJUnitRunner$Strict(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["org.mockito.runners.ConsoleSpammingMockitoJUnitRunner", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner(java.lang.Class<?>)", "public org.mockito.runners.ConsoleSpammingMockitoJUnitRunner(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)", "public void run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.getDescription()", "public org.junit.runner.Description getDescription()"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)", "public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)", "public void testStarted(org.junit.runner.Description) throws java.lang.Exception"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)", "public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception"], ["org.mockito.runners.VerboseMockitoJUnitRunner", "org.mockito.runners.VerboseMockitoJUnitRunner(java.lang.Class<?>)", "public org.mockito.runners.VerboseMockitoJUnitRunner(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)", "public void run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.VerboseMockitoJUnitRunner.getDescription()", "public org.junit.runner.Description getDescription()"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)", "public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException"], ["org.mockito.runners.MockitoJUnitRunner$Silent", "org.mockito.runners.MockitoJUnitRunner$Silent(java.lang.Class<?>)", "public org.mockito.runners.MockitoJUnitRunner$Silent(java.lang.Class<?>) throws java.lang.reflect.InvocationTargetException"], ["org.mockito.hamcrest.MockitoHamcrest", "org.mockito.hamcrest.MockitoHamcrest()", "public org.mockito.hamcrest.MockitoHamcrest()"], ["<T> T", "org.mockito.hamcrest.MockitoHamcrest.argThat(org.hamcrest.Matcher<T>)", "public static <T> T argThat(org.hamcrest.Matcher<T>)"], ["char", "org.mockito.hamcrest.MockitoHamcrest.charThat(org.hamcrest.Matcher<java.lang.Character>)", "public static char charThat(org.hamcrest.Matcher<java.lang.Character>)"], ["boolean", "org.mockito.hamcrest.MockitoHamcrest.booleanThat(org.hamcrest.Matcher<java.lang.Boolean>)", "public static boolean booleanThat(org.hamcrest.Matcher<java.lang.Boolean>)"], ["byte", "org.mockito.hamcrest.MockitoHamcrest.byteThat(org.hamcrest.Matcher<java.lang.Byte>)", "public static byte byteThat(org.hamcrest.Matcher<java.lang.Byte>)"], ["short", "org.mockito.hamcrest.MockitoHamcrest.shortThat(org.hamcrest.Matcher<java.lang.Short>)", "public static short shortThat(org.hamcrest.Matcher<java.lang.Short>)"], ["int", "org.mockito.hamcrest.MockitoHamcrest.intThat(org.hamcrest.Matcher<java.lang.Integer>)", "public static int intThat(org.hamcrest.Matcher<java.lang.Integer>)"], ["long", "org.mockito.hamcrest.MockitoHamcrest.longThat(org.hamcrest.Matcher<java.lang.Long>)", "public static long longThat(org.hamcrest.Matcher<java.lang.Long>)"], ["float", "org.mockito.hamcrest.MockitoHamcrest.floatThat(org.hamcrest.Matcher<java.lang.Float>)", "public static float floatThat(org.hamcrest.Matcher<java.lang.Float>)"], ["double", "org.mockito.hamcrest.MockitoHamcrest.doubleThat(org.hamcrest.Matcher<java.lang.Double>)", "public static double doubleThat(org.hamcrest.Matcher<java.lang.Double>)"], ["org.mockito.exceptions.verification.VerificationInOrderFailure", "org.mockito.exceptions.verification.VerificationInOrderFailure(java.lang.String)", "public org.mockito.exceptions.verification.VerificationInOrderFailure(java.lang.String)"], ["org.mockito.exceptions.verification.WantedButNotInvoked", "org.mockito.exceptions.verification.WantedButNotInvoked(java.lang.String)", "public org.mockito.exceptions.verification.WantedButNotInvoked(java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.WantedButNotInvoked.toString()", "public java.lang.String toString()"], ["org.mockito.exceptions.verification.TooLittleActualInvocations", "org.mockito.exceptions.verification.TooLittleActualInvocations(java.lang.String)", "public org.mockito.exceptions.verification.TooLittleActualInvocations(java.lang.String)"], ["org.mockito.exceptions.verification.NeverWantedButInvoked", "org.mockito.exceptions.verification.NeverWantedButInvoked(java.lang.String)", "public org.mockito.exceptions.verification.NeverWantedButInvoked(java.lang.String)"], ["org.mockito.exceptions.verification.NoInteractionsWanted", "org.mockito.exceptions.verification.NoInteractionsWanted(java.lang.String)", "public org.mockito.exceptions.verification.NoInteractionsWanted(java.lang.String)"], ["org.mockito.exceptions.verification.SmartNullPointerException", "org.mockito.exceptions.verification.SmartNullPointerException(java.lang.String)", "public org.mockito.exceptions.verification.SmartNullPointerException(java.lang.String)"], ["org.mockito.exceptions.verification.ArgumentsAreDifferent", "org.mockito.exceptions.verification.ArgumentsAreDifferent(java.lang.String)", "public org.mockito.exceptions.verification.ArgumentsAreDifferent(java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.ArgumentsAreDifferent.toString()", "public java.lang.String toString()"], ["org.mockito.exceptions.verification.TooManyActualInvocations", "org.mockito.exceptions.verification.TooManyActualInvocations(java.lang.String)", "public org.mockito.exceptions.verification.TooManyActualInvocations(java.lang.String)"], ["org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)", "public org.mockito.exceptions.verification.junit.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getMessage()", "public java.lang.String getMessage()"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getUnfilteredStackTrace()", "public java.lang.StackTraceElement[] getUnfilteredStackTrace()"], ["java.lang.String", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.toString()", "public java.lang.String toString()"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.exceptions.base.MockitoAssertionError(java.lang.String)", "public org.mockito.exceptions.base.MockitoAssertionError(java.lang.String)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.exceptions.base.MockitoAssertionError(org.mockito.exceptions.base.MockitoAssertionError, java.lang.String)", "public org.mockito.exceptions.base.MockitoAssertionError(org.mockito.exceptions.base.MockitoAssertionError, java.lang.String)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoAssertionError.getUnfilteredStackTrace()", "public java.lang.StackTraceElement[] getUnfilteredStackTrace()"], ["org.mockito.exceptions.base.MockitoSerializationIssue", "org.mockito.exceptions.base.MockitoSerializationIssue(java.lang.String, java.lang.Exception)", "public org.mockito.exceptions.base.MockitoSerializationIssue(java.lang.String, java.lang.Exception)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoSerializationIssue.getUnfilteredStackTrace()", "public java.lang.StackTraceElement[] getUnfilteredStackTrace()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.exceptions.base.MockitoException(java.lang.String, java.lang.Throwable)", "public org.mockito.exceptions.base.MockitoException(java.lang.String, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.exceptions.base.MockitoException(java.lang.String)", "public org.mockito.exceptions.base.MockitoException(java.lang.String)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoException.getUnfilteredStackTrace()", "public java.lang.StackTraceElement[] getUnfilteredStackTrace()"], ["org.mockito.exceptions.misusing.FriendlyReminderException", "org.mockito.exceptions.misusing.FriendlyReminderException(java.lang.String)", "public org.mockito.exceptions.misusing.FriendlyReminderException(java.lang.String)"], ["org.mockito.exceptions.misusing.MockitoConfigurationException", "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String)", "public org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String)"], ["org.mockito.exceptions.misusing.MockitoConfigurationException", "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String, java.lang.Exception)", "public org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String, java.lang.Exception)"], ["org.mockito.exceptions.misusing.UnfinishedStubbingException", "org.mockito.exceptions.misusing.UnfinishedStubbingException(java.lang.String)", "public org.mockito.exceptions.misusing.UnfinishedStubbingException(java.lang.String)"], ["org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue", "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue(java.lang.String)", "public org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue(java.lang.String)"], ["org.mockito.exceptions.misusing.MissingMethodInvocationException", "org.mockito.exceptions.misusing.MissingMethodInvocationException(java.lang.String)", "public org.mockito.exceptions.misusing.MissingMethodInvocationException(java.lang.String)"], ["org.mockito.exceptions.misusing.UnfinishedVerificationException", "org.mockito.exceptions.misusing.UnfinishedVerificationException(java.lang.String)", "public org.mockito.exceptions.misusing.UnfinishedVerificationException(java.lang.String)"], ["org.mockito.exceptions.misusing.UnnecessaryStubbingException", "org.mockito.exceptions.misusing.UnnecessaryStubbingException(java.lang.String)", "public org.mockito.exceptions.misusing.UnnecessaryStubbingException(java.lang.String)"], ["org.mockito.exceptions.misusing.NotAMockException", "org.mockito.exceptions.misusing.NotAMockException(java.lang.String)", "public org.mockito.exceptions.misusing.NotAMockException(java.lang.String)"], ["org.mockito.exceptions.misusing.InvalidUseOfMatchersException", "org.mockito.exceptions.misusing.InvalidUseOfMatchersException(java.lang.String)", "public org.mockito.exceptions.misusing.InvalidUseOfMatchersException(java.lang.String)"], ["org.mockito.exceptions.misusing.InvalidUseOfMatchersException", "org.mockito.exceptions.misusing.InvalidUseOfMatchersException()", "public org.mockito.exceptions.misusing.InvalidUseOfMatchersException()"], ["org.mockito.exceptions.misusing.NullInsteadOfMockException", "org.mockito.exceptions.misusing.NullInsteadOfMockException(java.lang.String)", "public org.mockito.exceptions.misusing.NullInsteadOfMockException(java.lang.String)"], ["org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock", "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock(java.lang.String)", "public org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock(java.lang.String)"], ["org.mockito.exceptions.misusing.WrongTypeOfReturnValue", "org.mockito.exceptions.misusing.WrongTypeOfReturnValue(java.lang.String)", "public org.mockito.exceptions.misusing.WrongTypeOfReturnValue(java.lang.String)"]]}