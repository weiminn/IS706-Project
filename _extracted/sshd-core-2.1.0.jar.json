{"sshd-core-2.1.0.jar": [["default", "org.apache.sshd.server.ServerAuthenticationManager.java.lang.String getUserAuthFactoriesNameList()", "public default java.lang.String getUserAuthFactoriesNameList()"], ["java.util.List<java.lang.String>", "org.apache.sshd.server.ServerAuthenticationManager.getUserAuthFactoriesNames()", "public default java.util.List<java.lang.String> getUserAuthFactoriesNames()"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNameList(java.lang.String)", "public default void setUserAuthFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNames(java.lang.String...)", "public default void setUserAuthFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.server.ServerAuthenticationManager.void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)", "public default void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>", "org.apache.sshd.server.ServerAuthenticationManager.resolveUserAuthFactories(org.apache.sshd.server.ServerAuthenticationManager)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>> resolveUserAuthFactories(org.apache.sshd.server.ServerAuthenticationManager)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>", "org.apache.sshd.server.ServerAuthenticationManager.resolveUserAuthFactories(org.apache.sshd.server.ServerAuthenticationManager, java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>> resolveUserAuthFactories(org.apache.sshd.server.ServerAuthenticationManager, java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(boolean)", "public org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(boolean)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, boolean)", "public org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, boolean)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.nio.file.Path, boolean, java.nio.file.LinkOption...)", "public org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.nio.file.Path, boolean, java.nio.file.LinkOption...)"], ["org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, java.nio.file.Path, boolean, java.nio.file.LinkOption...)", "public org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator(java.lang.String, java.nio.file.Path, boolean, java.nio.file.LinkOption...)"], ["java.lang.String", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator.getUsername()", "public final java.lang.String getUsername()"], ["boolean", "org.apache.sshd.server.config.keys.DefaultAuthorizedKeysAuthenticator.isStrict()", "public final boolean isStrict()"], ["org.apache.sshd.server.auth.password.UserAuthPasswordFactory", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory()", "public org.apache.sshd.server.auth.password.UserAuthPasswordFactory()"], ["org.apache.sshd.server.auth.password.UserAuthPassword", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory.create()", "public org.apache.sshd.server.auth.password.UserAuthPassword create()"], ["java.lang.Object", "org.apache.sshd.server.auth.password.UserAuthPasswordFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.auth.gss.UserAuthGSS", "org.apache.sshd.server.auth.gss.UserAuthGSS()", "public org.apache.sshd.server.auth.gss.UserAuthGSS()"], ["void", "org.apache.sshd.server.auth.gss.UserAuthGSS.destroy()", "public void destroy()"], ["org.ietf.jgss.Oid", "org.apache.sshd.server.auth.gss.UserAuthGSS.createOID(java.lang.String)", "public static org.ietf.jgss.Oid createOID(java.lang.String)"], ["org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator(java.util.Collection<? extends java.security.PublicKey>)", "public org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator(java.util.Collection<? extends java.security.PublicKey>)"], ["java.util.Collection<? extends java.security.PublicKey>", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.getKeySet()", "public final java.util.Collection<? extends java.security.PublicKey> getKeySet()"], ["boolean", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)", "public boolean authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["boolean", "org.apache.sshd.server.auth.pubkey.KeySetPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession, java.util.Collection<? extends java.security.PublicKey>)", "public boolean authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession, java.util.Collection<? extends java.security.PublicKey>)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator.fromAuthorizedEntries(org.apache.sshd.common.config.keys.PublicKeyEntryResolver, java.util.Collection<? extends org.apache.sshd.common.config.keys.AuthorizedKeyEntry>)", "public static org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator fromAuthorizedEntries(org.apache.sshd.common.config.keys.PublicKeyEntryResolver, java.util.Collection<? extends org.apache.sshd.common.config.keys.AuthorizedKeyEntry>) throws java.io.IOException, java.security.GeneralSecurityException"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive()", "public org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive()"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell)", "public org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell)"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, int)", "public org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, int)"], ["org.apache.sshd.server.shell.InvertedShellWrapper", "org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, java.util.concurrent.Executor, boolean, int)", "public org.apache.sshd.server.shell.InvertedShellWrapper(org.apache.sshd.server.shell.InvertedShell, java.util.concurrent.Executor, boolean, int)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setInputStream(java.io.InputStream)", "public void setInputStream(java.io.InputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setOutputStream(java.io.OutputStream)", "public void setOutputStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setErrorStream(java.io.OutputStream)", "public void setErrorStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setExitCallback(org.apache.sshd.server.ExitCallback)", "public void setExitCallback(org.apache.sshd.server.ExitCallback)"], ["void", "org.apache.sshd.server.shell.InvertedShellWrapper.setSession(org.apache.sshd.server.session.ServerSession)", "public void setSession(org.apache.sshd.server.session.ServerSession)"], ["synchronized", "org.apache.sshd.server.shell.InvertedShellWrapper.void start(org.apache.sshd.server.Environment)", "public synchronized void start(org.apache.sshd.server.Environment) throws java.io.IOException"], ["synchronized", "org.apache.sshd.server.shell.InvertedShellWrapper.void destroy()", "public synchronized void destroy() throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.server.shell.InvertedShellWrapper.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.server.kex.DHGEXServer.newFactory(org.apache.sshd.common.kex.DHFactory)", "public static org.apache.sshd.common.kex.KeyExchangeFactory newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.server.kex.DHGEXServer.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["boolean", "org.apache.sshd.server.kex.DHGEXServer.next(int, org.apache.sshd.common.util.buffer.Buffer)", "public boolean next(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["<L extends org.apache.sshd.server.SignalListener> L", "org.apache.sshd.server.SignalListener.validateListener(L)", "public static <L extends org.apache.sshd.server.SignalListener> L validateListener(L)"], ["org.apache.sshd.server.command.AbstractFileSystemCommand", "org.apache.sshd.server.command.AbstractFileSystemCommand(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.server.command.AbstractFileSystemCommand(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["java.nio.file.FileSystem", "org.apache.sshd.server.command.AbstractFileSystemCommand.getFileSystem()", "public java.nio.file.FileSystem getFileSystem()"], ["void", "org.apache.sshd.server.command.AbstractFileSystemCommand.setFileSystem(java.nio.file.FileSystem)", "public void setFileSystem(java.nio.file.FileSystem)"], ["void", "org.apache.sshd.server.command.AbstractFileSystemCommand.destroy()", "public void destroy()"], ["org.apache.sshd.server.global.TcpipForwardHandler", "org.apache.sshd.server.global.TcpipForwardHandler()", "public org.apache.sshd.server.global.TcpipForwardHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.TcpipForwardHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.TcpipForwardHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.SshServer()", "public org.apache.sshd.server.SshServer()"], ["java.lang.String", "org.apache.sshd.server.SshServer.getHost()", "public java.lang.String getHost()"], ["void", "org.apache.sshd.server.SshServer.setHost(java.lang.String)", "public void setHost(java.lang.String)"], ["int", "org.apache.sshd.server.SshServer.getPort()", "public int getPort()"], ["void", "org.apache.sshd.server.SshServer.setPort(int)", "public void setPort(int)"], ["java.util.Set<java.net.SocketAddress>", "org.apache.sshd.server.SshServer.getBoundAddresses()", "public java.util.Set<java.net.SocketAddress> getBoundAddresses()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>", "org.apache.sshd.server.SshServer.getUserAuthFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>> getUserAuthFactories()"], ["void", "org.apache.sshd.server.SshServer.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)", "public void setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)"], ["org.apache.sshd.common.Factory<org.apache.sshd.server.command.Command>", "org.apache.sshd.server.SshServer.getShellFactory()", "public org.apache.sshd.common.Factory<org.apache.sshd.server.command.Command> getShellFactory()"], ["void", "org.apache.sshd.server.SshServer.setShellFactory(org.apache.sshd.common.Factory<org.apache.sshd.server.command.Command>)", "public void setShellFactory(org.apache.sshd.common.Factory<org.apache.sshd.server.command.Command>)"], ["org.apache.sshd.server.session.SessionFactory", "org.apache.sshd.server.SshServer.getSessionFactory()", "public org.apache.sshd.server.session.SessionFactory getSessionFactory()"], ["void", "org.apache.sshd.server.SshServer.setSessionFactory(org.apache.sshd.server.session.SessionFactory)", "public void setSessionFactory(org.apache.sshd.server.session.SessionFactory)"], ["org.apache.sshd.server.session.ServerProxyAcceptor", "org.apache.sshd.server.SshServer.getServerProxyAcceptor()", "public org.apache.sshd.server.session.ServerProxyAcceptor getServerProxyAcceptor()"], ["void", "org.apache.sshd.server.SshServer.setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)", "public void setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)"], ["org.apache.sshd.server.command.CommandFactory", "org.apache.sshd.server.SshServer.getCommandFactory()", "public org.apache.sshd.server.command.CommandFactory getCommandFactory()"], ["void", "org.apache.sshd.server.SshServer.setCommandFactory(org.apache.sshd.server.command.CommandFactory)", "public void setCommandFactory(org.apache.sshd.server.command.CommandFactory)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.command.Command>>", "org.apache.sshd.server.SshServer.getSubsystemFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.command.Command>> getSubsystemFactories()"], ["void", "org.apache.sshd.server.SshServer.setSubsystemFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.command.Command>>)", "public void setSubsystemFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.command.Command>>)"], ["org.apache.sshd.server.auth.password.PasswordAuthenticator", "org.apache.sshd.server.SshServer.getPasswordAuthenticator()", "public org.apache.sshd.server.auth.password.PasswordAuthenticator getPasswordAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)", "public void setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.SshServer.getPublickeyAuthenticator()", "public org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator getPublickeyAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)", "public void setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator", "org.apache.sshd.server.SshServer.getKeyboardInteractiveAuthenticator()", "public org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator getKeyboardInteractiveAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)", "public void setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.SshServer.getGSSAuthenticator()", "public org.apache.sshd.server.auth.gss.GSSAuthenticator getGSSAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)", "public void setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)"], ["org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator", "org.apache.sshd.server.SshServer.getHostBasedAuthenticator()", "public org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator getHostBasedAuthenticator()"], ["void", "org.apache.sshd.server.SshServer.setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)", "public void setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)"], ["boolean", "org.apache.sshd.server.SshServer.isStarted()", "public boolean isStarted()"], ["void", "org.apache.sshd.server.SshServer.start()", "public void start() throws java.io.IOException"], ["void", "org.apache.sshd.server.SshServer.stop()", "public void stop() throws java.io.IOException"], ["void", "org.apache.sshd.server.SshServer.stop(boolean)", "public void stop(boolean) throws java.io.IOException"], ["void", "org.apache.sshd.server.SshServer.open()", "public void open() throws java.io.IOException"], ["java.util.List<org.apache.sshd.common.session.helpers.AbstractSession>", "org.apache.sshd.server.SshServer.getActiveSessions()", "public java.util.List<org.apache.sshd.common.session.helpers.AbstractSession> getActiveSessions()"], ["java.lang.String", "org.apache.sshd.server.SshServer.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.SshServer.setUpDefaultServer()", "public static org.apache.sshd.server.SshServer setUpDefaultServer()"], ["org.apache.sshd.agent.local.ProxyAgentFactory", "org.apache.sshd.agent.local.ProxyAgentFactory()", "public org.apache.sshd.agent.local.ProxyAgentFactory()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>", "org.apache.sshd.agent.local.ProxyAgentFactory.getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>> getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.ProxyAgentFactory.createClient(org.apache.sshd.common.FactoryManager)", "public org.apache.sshd.agent.SshAgent createClient(org.apache.sshd.common.FactoryManager) throws java.io.IOException"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.local.ProxyAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.SshAgentServer createServer(org.apache.sshd.common.session.ConnectionService) throws java.io.IOException"], ["boolean", "org.apache.sshd.agent.local.ProxyAgentFactory.isPreferredUnixAgent(org.apache.sshd.common.PropertyResolver)", "public static boolean isPreferredUnixAgent(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.agent.unix.AgentForwardedChannel", "org.apache.sshd.agent.unix.AgentForwardedChannel(long, java.lang.String)", "public org.apache.sshd.agent.unix.AgentForwardedChannel(long, java.lang.String)"], ["void", "org.apache.sshd.agent.unix.AgentForwardedChannel.run()", "public void run()"], ["org.apache.sshd.agent.common.AgentDelegate", "org.apache.sshd.agent.common.AgentDelegate(org.apache.sshd.agent.SshAgent)", "public org.apache.sshd.agent.common.AgentDelegate(org.apache.sshd.agent.SshAgent)"], ["boolean", "org.apache.sshd.agent.common.AgentDelegate.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.agent.common.AgentDelegate.close()", "public void close() throws java.io.IOException"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.common.AgentDelegate.getIdentities()", "public java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>> getIdentities() throws java.io.IOException"], ["byte[]", "org.apache.sshd.agent.common.AgentDelegate.sign(java.security.PublicKey, byte[])", "public byte[] sign(java.security.PublicKey, byte[]) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AgentDelegate.addIdentity(java.security.KeyPair, java.lang.String)", "public void addIdentity(java.security.KeyPair, java.lang.String) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AgentDelegate.removeIdentity(java.security.PublicKey)", "public void removeIdentity(java.security.PublicKey) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AgentDelegate.removeAllIdentities()", "public void removeAllIdentities() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.agent.SshAgentConstants.getCommandMessageName(int)", "public static java.lang.String getCommandMessageName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath$1.get(int)", "public java.nio.file.Path get(int)"], ["int", "org.apache.sshd.common.file.util.BasePath$1.size()", "public int size()"], ["java.lang.Object", "org.apache.sshd.common.file.util.BasePath$1.get(int)", "public java.lang.Object get(int)"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.hasNext()", "public boolean hasNext()"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.next()", "public java.nio.file.Path next()"], ["java.lang.Object", "org.apache.sshd.common.file.root.RootedFileSystemProvider$2.next()", "public java.lang.Object next()"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException()", "public org.apache.sshd.common.io.WritePendingException()"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.io.WritePendingException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.String)", "public org.apache.sshd.common.io.WritePendingException(java.lang.String)"], ["org.apache.sshd.common.io.WritePendingException", "org.apache.sshd.common.io.WritePendingException(java.lang.Throwable)", "public org.apache.sshd.common.io.WritePendingException(java.lang.Throwable)"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.io.nio2.Nio2Service.getIoServiceEventListener()", "public org.apache.sshd.common.io.IoServiceEventListener getIoServiceEventListener()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)", "public void setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.io.nio2.Nio2Service.getFactoryManager()", "public org.apache.sshd.common.FactoryManager getFactoryManager()"], ["org.apache.sshd.common.io.IoHandler", "org.apache.sshd.common.io.nio2.Nio2Service.getIoHandler()", "public org.apache.sshd.common.io.IoHandler getIoHandler()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.dispose()", "public void dispose()"], ["java.util.Map<java.lang.Long, org.apache.sshd.common.io.IoSession>", "org.apache.sshd.common.io.nio2.Nio2Service.getManagedSessions()", "public java.util.Map<java.lang.Long, org.apache.sshd.common.io.IoSession> getManagedSessions()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Service.sessionClosed(org.apache.sshd.common.io.nio2.Nio2Session)", "public void sessionClosed(org.apache.sshd.common.io.nio2.Nio2Session)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$5.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$5.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$5.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["byte[]", "org.apache.sshd.common.kex.AbstractDH.getK()", "public byte[] getK() throws java.lang.Exception"], ["byte[]", "org.apache.sshd.common.kex.AbstractDH.stripLeadingZeroes(byte[])", "public static byte[] stripLeadingZeroes(byte[])"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$11.create(java.lang.Object...)", "public org.apache.sshd.common.kex.ECDH create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$11.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$11.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>", "org.apache.sshd.common.channel.AbstractChannel.getRequestHandlers()", "public java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>> getRequestHandlers()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.addRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)", "public void addRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.removeRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)", "public void removeRequestHandler(org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>)"], ["int", "org.apache.sshd.common.channel.AbstractChannel.getId()", "public int getId()"], ["int", "org.apache.sshd.common.channel.AbstractChannel.getRecipient()", "public int getRecipient()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.AbstractChannel.getLocalWindow()", "public org.apache.sshd.common.channel.Window getLocalWindow()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.AbstractChannel.getRemoteWindow()", "public org.apache.sshd.common.channel.Window getRemoteWindow()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.channel.AbstractChannel.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.channel.AbstractChannel.getParentPropertyResolver()", "public org.apache.sshd.common.PropertyResolver getParentPropertyResolver()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.common.channel.AbstractChannel.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.channel.AbstractChannel.getChannelStreamPacketWriterResolver()", "public org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)", "public void setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.channel.AbstractChannel.resolveChannelStreamPacketWriterResolver()", "public org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver resolveChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleRequest(org.apache.sshd.common.util.buffer.Buffer)", "public void handleRequest(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.init(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.session.Session, int)", "public void init(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.session.Session, int) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isInitialized()", "public boolean isInitialized()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.addChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.channel.AbstractChannel.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.channel.AbstractChannel.getChannelListenerProxy()", "public org.apache.sshd.common.channel.ChannelListener getChannelListenerProxy()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleClose()", "public void handleClose() throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.signalChannelClosed(java.lang.Throwable)", "public void signalChannelClosed(java.lang.Throwable)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.channel.AbstractChannel.writePacket(org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleData(org.apache.sshd.common.util.buffer.Buffer)", "public void handleData(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleExtendedData(org.apache.sshd.common.util.buffer.Buffer)", "public void handleExtendedData(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleEof()", "public void handleEof() throws java.io.IOException"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isEofSignalled()", "public boolean isEofSignalled()"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)", "public void handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleSuccess()", "public void handleSuccess() throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.AbstractChannel.handleFailure()", "public void handleFailure() throws java.io.IOException"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel.isEofSent()", "public boolean isEofSent()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.channel.AbstractChannel.getProperties()", "public java.util.Map<java.lang.String, java.lang.Object> getProperties()"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)", "public <T> T setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.channel.AbstractChannel.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["java.lang.String", "org.apache.sshd.common.channel.AbstractChannel.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.exception.SshChannelOpenException", "org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String)", "public org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelOpenException", "org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelOpenException(int, int, java.lang.String, java.lang.Throwable)"], ["int", "org.apache.sshd.common.channel.exception.SshChannelOpenException.getReasonCode()", "public int getReasonCode()"], ["java.lang.String", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.getRequestName()", "public final java.lang.String getRequestName()"], ["org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.getPublicKeysParser()", "public org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey> getPublicKeysParser()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.global.AbstractOpenSshHostKeysHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.forward.SocksProxy$Socks4", "org.apache.sshd.common.forward.SocksProxy$Socks4(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)", "public org.apache.sshd.common.forward.SocksProxy$Socks4(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, java.net.InetSocketAddress)", "public org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, java.net.InetSocketAddress)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.common.forward.LocalForwardingEntry(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry(java.lang.String, java.lang.String, int)", "public org.apache.sshd.common.forward.LocalForwardingEntry(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.apache.sshd.common.forward.LocalForwardingEntry.getAlias()", "public java.lang.String getAlias()"], ["boolean", "org.apache.sshd.common.forward.LocalForwardingEntry.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.apache.sshd.common.forward.LocalForwardingEntry.hashCode()", "public int hashCode()"], ["java.lang.String", "org.apache.sshd.common.forward.LocalForwardingEntry.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.forward.LocalForwardingEntry", "org.apache.sshd.common.forward.LocalForwardingEntry.findMatchingEntry(java.lang.String, int, java.util.Collection<? extends org.apache.sshd.common.forward.LocalForwardingEntry>)", "public static org.apache.sshd.common.forward.LocalForwardingEntry findMatchingEntry(java.lang.String, int, java.util.Collection<? extends org.apache.sshd.common.forward.LocalForwardingEntry>)"], ["org.apache.sshd.common.session.helpers.MultipleAttachedSessionException", "org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String)", "public org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String)"], ["org.apache.sshd.common.session.helpers.MultipleAttachedSessionException", "org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.session.helpers.MultipleAttachedSessionException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.client.auth.UserAuthFactory>, java.util.List<java.lang.String>)", "public org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.client.auth.UserAuthFactory>, java.util.List<java.lang.String>)"], ["org.apache.sshd.client.auth.password.UserAuthPassword", "org.apache.sshd.client.auth.password.UserAuthPassword()", "public org.apache.sshd.client.auth.password.UserAuthPassword()"], ["void", "org.apache.sshd.client.auth.password.UserAuthPassword.init(org.apache.sshd.client.session.ClientSession, java.lang.String)", "public void init(org.apache.sshd.client.session.ClientSession, java.lang.String) throws java.lang.Exception"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientHostKeys()", "public org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider getClientHostKeys()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)", "public void setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientUsername()", "public java.lang.String getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientUsername(java.lang.String)", "public void setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.getClientHostname()", "public java.lang.String getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.setClientHostname(java.lang.String)", "public void setClientHostname(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager, java.util.Iterator<java.security.KeyPair>)", "public org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager, java.util.Iterator<java.security.KeyPair>)"], ["boolean", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.hasNext()", "public boolean hasNext()"], ["org.apache.sshd.client.auth.pubkey.KeyPairIdentity", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.next()", "public org.apache.sshd.client.auth.pubkey.KeyPairIdentity next()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.SessionKeyPairIterator.next()", "public java.lang.Object next()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey()", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKey()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.init(org.apache.sshd.client.session.ClientSession, java.lang.String)", "public void init(org.apache.sshd.client.session.ClientSession, java.lang.String) throws java.lang.Exception"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKey.destroy()", "public void destroy()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient$1.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.client.kex.DHGClient$1.create()", "public org.apache.sshd.common.kex.KeyExchange create()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.client.kex.DHGClient$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.channel.ClientChannelEvent[]", "org.apache.sshd.client.channel.ClientChannelEvent.values()", "public static org.apache.sshd.client.channel.ClientChannelEvent[] values()"], ["org.apache.sshd.client.channel.ClientChannelEvent", "org.apache.sshd.client.channel.ClientChannelEvent.valueOf(java.lang.String)", "public static org.apache.sshd.client.channel.ClientChannelEvent valueOf(java.lang.String)"], ["org.apache.sshd.client.channel.PtyCapableChannelSession", "org.apache.sshd.client.channel.PtyCapableChannelSession(boolean)", "public org.apache.sshd.client.channel.PtyCapableChannelSession(boolean)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setupSensibleDefaultPty()", "public void setupSensibleDefaultPty()"], ["boolean", "org.apache.sshd.client.channel.PtyCapableChannelSession.isAgentForwarding()", "public boolean isAgentForwarding()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setAgentForwarding(boolean)", "public void setAgentForwarding(boolean)"], ["boolean", "org.apache.sshd.client.channel.PtyCapableChannelSession.isUsePty()", "public boolean isUsePty()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setUsePty(boolean)", "public void setUsePty(boolean)"], ["java.lang.String", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyType()", "public java.lang.String getPtyType()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyType(java.lang.String)", "public void setPtyType(java.lang.String)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyColumns()", "public int getPtyColumns()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyColumns(int)", "public void setPtyColumns(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyLines()", "public int getPtyLines()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyLines(int)", "public void setPtyLines(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyWidth()", "public int getPtyWidth()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyWidth(int)", "public void setPtyWidth(int)"], ["int", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyHeight()", "public int getPtyHeight()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyHeight(int)", "public void setPtyHeight(int)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.client.channel.PtyCapableChannelSession.getPtyModes()", "public java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> getPtyModes()"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setPtyModes(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)", "public void setPtyModes(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.setEnv(java.lang.String, java.lang.String)", "public void setEnv(java.lang.String, java.lang.String)"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.sendWindowChange(int, int)", "public void sendWindowChange(int, int) throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.PtyCapableChannelSession.sendWindowChange(int, int, int, int)", "public void sendWindowChange(int, int, int, int) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientConnectionService", "org.apache.sshd.client.session.ClientConnectionService(org.apache.sshd.client.session.AbstractClientSession)", "public org.apache.sshd.client.session.ClientConnectionService(org.apache.sshd.client.session.AbstractClientSession) throws org.apache.sshd.common.SshException"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientConnectionService.getClientSession()", "public final org.apache.sshd.client.session.ClientSession getClientSession()"], ["org.apache.sshd.client.session.AbstractClientSession", "org.apache.sshd.client.session.ClientConnectionService.getSession()", "public org.apache.sshd.client.session.AbstractClientSession getSession()"], ["void", "org.apache.sshd.client.session.ClientConnectionService.start()", "public void start()"], ["org.apache.sshd.agent.common.AgentForwardSupport", "org.apache.sshd.client.session.ClientConnectionService.getAgentForwardSupport()", "public org.apache.sshd.agent.common.AgentForwardSupport getAgentForwardSupport()"], ["org.apache.sshd.server.x11.X11ForwardSupport", "org.apache.sshd.client.session.ClientConnectionService.getX11ForwardSupport()", "public org.apache.sshd.server.x11.X11ForwardSupport getX11ForwardSupport()"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.client.session.ClientConnectionService.getSession()", "public org.apache.sshd.common.session.helpers.AbstractSession getSession()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.session.ClientConnectionService.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String)", "public org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.Throwable, java.lang.String, java.lang.String)", "public org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.Throwable, java.lang.String, java.lang.String)"], ["org.apache.sshd.server.auth.password.PasswordChangeRequiredException", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)", "public org.apache.sshd.server.auth.password.PasswordChangeRequiredException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException.getPrompt()", "public final java.lang.String getPrompt()"], ["java.lang.String", "org.apache.sshd.server.auth.password.PasswordChangeRequiredException.getLanguage()", "public final java.lang.String getLanguage()"], ["javax.security.auth.login.AppConfigurationEntry[]", "org.apache.sshd.server.auth.gss.CredentialHelper$FixedLoginConfiguration.getAppConfigurationEntry(java.lang.String)", "public javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.CredentialHelper$FixedLoginConfiguration.refresh()", "public void refresh()"], ["org.apache.sshd.server.auth.gss.UserAuthGSSFactory", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory()", "public org.apache.sshd.server.auth.gss.UserAuthGSSFactory()"], ["java.lang.String", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.server.auth.UserAuth", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.create()", "public org.apache.sshd.server.auth.UserAuth create()"], ["java.lang.Object", "org.apache.sshd.server.auth.gss.UserAuthGSSFactory.create()", "public java.lang.Object create()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory$1.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey()", "public org.apache.sshd.server.auth.pubkey.UserAuthPublicKey()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.server.auth.pubkey.UserAuthPublicKey(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Boolean", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKey.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)", "public java.lang.Boolean doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean) throws java.lang.Exception"], ["org.apache.sshd.server.shell.UnknownCommand", "org.apache.sshd.server.shell.UnknownCommand(java.lang.String)", "public org.apache.sshd.server.shell.UnknownCommand(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.getCommand()", "public java.lang.String getCommand()"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.getMessage()", "public java.lang.String getMessage()"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setInputStream(java.io.InputStream)", "public void setInputStream(java.io.InputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setOutputStream(java.io.OutputStream)", "public void setOutputStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setErrorStream(java.io.OutputStream)", "public void setErrorStream(java.io.OutputStream)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.setExitCallback(org.apache.sshd.server.ExitCallback)", "public void setExitCallback(org.apache.sshd.server.ExitCallback)"], ["void", "org.apache.sshd.server.shell.UnknownCommand.run()", "public void run()"], ["void", "org.apache.sshd.server.shell.UnknownCommand.start(org.apache.sshd.server.Environment)", "public void start(org.apache.sshd.server.Environment) throws java.io.IOException"], ["void", "org.apache.sshd.server.shell.UnknownCommand.destroy()", "public void destroy()"], ["int", "org.apache.sshd.server.shell.UnknownCommand.hashCode()", "public int hashCode()"], ["boolean", "org.apache.sshd.server.shell.UnknownCommand.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommand.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.channel.ChannelSession$CommandCloseable", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable(org.apache.sshd.server.channel.ChannelSession)", "public org.apache.sshd.server.channel.ChannelSession$CommandCloseable(org.apache.sshd.server.channel.ChannelSession)"], ["boolean", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.isClosed()", "public boolean isClosed()"], ["boolean", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.isClosing()", "public boolean isClosing()"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)", "public void addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)", "public void removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["org.apache.sshd.common.future.CloseFuture", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable.close(boolean)", "public org.apache.sshd.common.future.CloseFuture close(boolean)"], ["org.apache.sshd.server.x11.ChannelForwardedX11", "org.apache.sshd.server.x11.ChannelForwardedX11(org.apache.sshd.common.io.IoSession)", "public org.apache.sshd.server.x11.ChannelForwardedX11(org.apache.sshd.common.io.IoSession)"], ["synchronized", "org.apache.sshd.server.x11.ChannelForwardedX11.org.apache.sshd.client.future.OpenFuture open()", "public synchronized org.apache.sshd.client.future.OpenFuture open() throws java.io.IOException"], ["void", "org.apache.sshd.server.x11.ChannelForwardedX11.handleEof()", "public void handleEof() throws java.io.IOException"], ["org.apache.sshd.server.global.KeepAliveHandler", "org.apache.sshd.server.global.KeepAliveHandler()", "public org.apache.sshd.server.global.KeepAliveHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.KeepAliveHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.KeepAliveHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.server.forward.AgentForwardingFilter", "org.apache.sshd.server.forward.AgentForwardingFilter.of(boolean)", "public static org.apache.sshd.server.forward.AgentForwardingFilter of(boolean)"], ["org.apache.sshd.server.forward.AcceptAllForwardingFilter", "org.apache.sshd.server.forward.AcceptAllForwardingFilter()", "public org.apache.sshd.server.forward.AcceptAllForwardingFilter()"], ["org.apache.sshd.server.forward.TcpipServerChannel", "org.apache.sshd.server.forward.TcpipServerChannel(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.server.forward.TcpipServerChannel(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpipServerChannel.getTcpipChannelType()", "public org.apache.sshd.server.forward.TcpForwardingFilter$Type getTcpipChannelType()"], ["java.net.SocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getLocalAddress()", "public java.net.SocketAddress getLocalAddress()"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel.setLocalAddress(java.net.SocketAddress)", "public void setLocalAddress(java.net.SocketAddress)"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getTunnelEntrance()", "public org.apache.sshd.common.util.net.SshdSocketAddress getTunnelEntrance()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getTunnelExit()", "public org.apache.sshd.common.util.net.SshdSocketAddress getTunnelExit()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.server.forward.TcpipServerChannel.getOriginatorAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getOriginatorAddress()"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.server.forward.TcpipServerChannel.getIoSession()", "public org.apache.sshd.common.io.IoSession getIoSession()"], ["org.apache.sshd.agent.local.AgentServerProxy", "org.apache.sshd.agent.local.AgentServerProxy(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.local.AgentServerProxy(org.apache.sshd.common.session.ConnectionService) throws java.io.IOException"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.AgentServerProxy.createClient()", "public org.apache.sshd.agent.SshAgent createClient() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.agent.local.AgentServerProxy.getId()", "public java.lang.String getId()"], ["boolean", "org.apache.sshd.agent.local.AgentServerProxy.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.agent.local.AgentServerProxy.close()", "public void close() throws java.io.IOException"], ["synchronized", "org.apache.sshd.agent.unix.AprLibrary.org.apache.sshd.agent.unix.AprLibrary getInstance()", "public static synchronized org.apache.sshd.agent.unix.AprLibrary getInstance()"], ["synchronized", "org.apache.sshd.agent.unix.AprLibrary.boolean isInitialized()", "public static synchronized boolean isInitialized()"], ["org.apache.sshd.agent.common.DefaultAgentForwardSupport", "org.apache.sshd.agent.common.DefaultAgentForwardSupport(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.common.DefaultAgentForwardSupport(org.apache.sshd.common.session.ConnectionService)"], ["java.lang.String", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.initialize()", "public java.lang.String initialize() throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.close()", "public void close() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.agent.common.DefaultAgentForwardSupport.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.file.util.BasePath", "org.apache.sshd.common.file.util.BasePath(FS, java.lang.String, java.util.List<java.lang.String>)", "public org.apache.sshd.common.file.util.BasePath(FS, java.lang.String, java.util.List<java.lang.String>)"], ["FS", "org.apache.sshd.common.file.util.BasePath.getFileSystem()", "public FS getFileSystem()"], ["boolean", "org.apache.sshd.common.file.util.BasePath.isAbsolute()", "public boolean isAbsolute()"], ["T", "org.apache.sshd.common.file.util.BasePath.getRoot()", "public T getRoot()"], ["T", "org.apache.sshd.common.file.util.BasePath.getFileName()", "public T getFileName()"], ["T", "org.apache.sshd.common.file.util.BasePath.getParent()", "public T getParent()"], ["int", "org.apache.sshd.common.file.util.BasePath.getNameCount()", "public int getNameCount()"], ["T", "org.apache.sshd.common.file.util.BasePath.getName(int)", "public T getName(int)"], ["T", "org.apache.sshd.common.file.util.BasePath.subpath(int, int)", "public T subpath(int, int)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.startsWith(java.nio.file.Path)", "public boolean startsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.startsWith(java.lang.String)", "public boolean startsWith(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.endsWith(java.nio.file.Path)", "public boolean endsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.BasePath.endsWith(java.lang.String)", "public boolean endsWith(java.lang.String)"], ["T", "org.apache.sshd.common.file.util.BasePath.normalize()", "public T normalize()"], ["T", "org.apache.sshd.common.file.util.BasePath.resolve(java.nio.file.Path)", "public T resolve(java.nio.file.Path)"], ["T", "org.apache.sshd.common.file.util.BasePath.resolve(java.lang.String)", "public T resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolveSibling(java.nio.file.Path)", "public java.nio.file.Path resolveSibling(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolveSibling(java.lang.String)", "public java.nio.file.Path resolveSibling(java.lang.String)"], ["T", "org.apache.sshd.common.file.util.BasePath.relativize(java.nio.file.Path)", "public T relativize(java.nio.file.Path)"], ["T", "org.apache.sshd.common.file.util.BasePath.toAbsolutePath()", "public T toAbsolutePath()"], ["java.net.URI", "org.apache.sshd.common.file.util.BasePath.toUri()", "public java.net.URI toUri()"], ["java.io.File", "org.apache.sshd.common.file.util.BasePath.toFile()", "public java.io.File toFile()"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.BasePath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...)", "public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...) throws java.io.IOException"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.BasePath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...)", "public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...) throws java.io.IOException"], ["java.util.Iterator<java.nio.file.Path>", "org.apache.sshd.common.file.util.BasePath.iterator()", "public java.util.Iterator<java.nio.file.Path> iterator()"], ["int", "org.apache.sshd.common.file.util.BasePath.compareTo(java.nio.file.Path)", "public int compareTo(java.nio.file.Path)"], ["int", "org.apache.sshd.common.file.util.BasePath.hashCode()", "public int hashCode()"], ["boolean", "org.apache.sshd.common.file.util.BasePath.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.apache.sshd.common.file.util.BasePath.toString()", "public java.lang.String toString()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.toAbsolutePath()", "public java.nio.file.Path toAbsolutePath()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.relativize(java.nio.file.Path)", "public java.nio.file.Path relativize(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolve(java.lang.String)", "public java.nio.file.Path resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.resolve(java.nio.file.Path)", "public java.nio.file.Path resolve(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.normalize()", "public java.nio.file.Path normalize()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.subpath(int, int)", "public java.nio.file.Path subpath(int, int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getName(int)", "public java.nio.file.Path getName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getParent()", "public java.nio.file.Path getParent()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getFileName()", "public java.nio.file.Path getFileName()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.BasePath.getRoot()", "public java.nio.file.Path getRoot()"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.util.BasePath.getFileSystem()", "public java.nio.file.FileSystem getFileSystem()"], ["int", "org.apache.sshd.common.file.util.BasePath.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.create(org.apache.sshd.common.FactoryManager)", "public org.apache.sshd.common.io.IoServiceFactory create(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.getIoServiceProvider()", "public org.apache.sshd.common.io.IoServiceFactoryFactory getIoServiceProvider()"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.newInstance(java.lang.Class<T>)", "public static <T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T newInstance(java.lang.Class<T>)"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.tryLoad(java.lang.String, java.util.ServiceLoader<T>)", "public static <T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T tryLoad(java.lang.String, java.util.ServiceLoader<T>)"], ["<T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.newInstance(java.lang.Class<T>, java.lang.String)", "public static <T extends org.apache.sshd.common.io.IoServiceFactoryFactory> T newInstance(java.lang.Class<T>, java.lang.String)"], ["org.apache.sshd.common.io.DefaultIoServiceFactoryFactory", "org.apache.sshd.common.io.DefaultIoServiceFactoryFactory.getDefaultIoServiceFactoryFactoryInstance()", "public static org.apache.sshd.common.io.DefaultIoServiceFactoryFactory getDefaultIoServiceFactoryFactoryInstance()"], ["org.apache.sshd.common.io.nio2.Nio2Session", "org.apache.sshd.common.io.nio2.Nio2Session(org.apache.sshd.common.io.nio2.Nio2Service, org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousSocketChannel)", "public org.apache.sshd.common.io.nio2.Nio2Session(org.apache.sshd.common.io.nio2.Nio2Service, org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousSocketChannel) throws java.io.IOException"], ["long", "org.apache.sshd.common.io.nio2.Nio2Session.getId()", "public long getId()"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.getAttribute(java.lang.Object)", "public java.lang.Object getAttribute(java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.setAttribute(java.lang.Object, java.lang.Object)", "public java.lang.Object setAttribute(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.setAttributeIfAbsent(java.lang.Object, java.lang.Object)", "public java.lang.Object setAttributeIfAbsent(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.sshd.common.io.nio2.Nio2Session.removeAttribute(java.lang.Object)", "public java.lang.Object removeAttribute(java.lang.Object)"], ["java.net.SocketAddress", "org.apache.sshd.common.io.nio2.Nio2Session.getRemoteAddress()", "public java.net.SocketAddress getRemoteAddress()"], ["java.net.SocketAddress", "org.apache.sshd.common.io.nio2.Nio2Session.getLocalAddress()", "public java.net.SocketAddress getLocalAddress()"], ["java.nio.channels.AsynchronousSocketChannel", "org.apache.sshd.common.io.nio2.Nio2Session.getSocket()", "public java.nio.channels.AsynchronousSocketChannel getSocket()"], ["org.apache.sshd.common.io.IoHandler", "org.apache.sshd.common.io.nio2.Nio2Session.getIoHandler()", "public org.apache.sshd.common.io.IoHandler getIoHandler()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.suspend()", "public void suspend()"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.io.nio2.Nio2Session.writePacket(org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["org.apache.sshd.common.io.nio2.Nio2Service", "org.apache.sshd.common.io.nio2.Nio2Session.getService()", "public org.apache.sshd.common.io.nio2.Nio2Service getService()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading()", "public void startReading()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(int)", "public void startReading(int)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(byte[])", "public void startReading(byte[])"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(byte[], int, int)", "public void startReading(byte[], int, int)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Session.startReading(java.nio.ByteBuffer)", "public void startReading(java.nio.ByteBuffer)"], ["java.lang.String", "org.apache.sshd.common.io.nio2.Nio2Session.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.io.IoService", "org.apache.sshd.common.io.nio2.Nio2Session.getService()", "public org.apache.sshd.common.io.IoService getService()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$7.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$7.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$7.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$9.create(java.lang.Object...)", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$9.isSupported()", "public boolean isSupported()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$9.isGroupExchange()", "public boolean isGroupExchange()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>)", "public org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>) throws java.lang.Exception"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>, java.math.BigInteger, java.math.BigInteger)", "public org.apache.sshd.common.kex.DHG(org.apache.sshd.common.Factory<? extends org.apache.sshd.common.digest.Digest>, java.math.BigInteger, java.math.BigInteger) throws java.lang.Exception"], ["byte[]", "org.apache.sshd.common.kex.DHG.getE()", "public byte[] getE() throws java.lang.Exception"], ["void", "org.apache.sshd.common.kex.DHG.setP(byte[])", "public void setP(byte[])"], ["void", "org.apache.sshd.common.kex.DHG.setG(byte[])", "public void setG(byte[])"], ["void", "org.apache.sshd.common.kex.DHG.setF(byte[])", "public void setF(byte[])"], ["java.math.BigInteger", "org.apache.sshd.common.kex.DHG.getP()", "public java.math.BigInteger getP()"], ["void", "org.apache.sshd.common.kex.DHG.setP(java.math.BigInteger)", "public void setP(java.math.BigInteger)"], ["java.math.BigInteger", "org.apache.sshd.common.kex.DHG.getG()", "public java.math.BigInteger getG()"], ["void", "org.apache.sshd.common.kex.DHG.setG(java.math.BigInteger)", "public void setG(java.math.BigInteger)"], ["void", "org.apache.sshd.common.kex.DHG.setF(java.math.BigInteger)", "public void setF(java.math.BigInteger)"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.DHG.getHash()", "public org.apache.sshd.common.digest.Digest getHash() throws java.lang.Exception"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream$1.operationComplete(org.apache.sshd.common.io.IoWriteFuture)", "public void operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream$1.operationComplete(org.apache.sshd.common.future.SshFuture)", "public void operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getBuffer()", "public org.apache.sshd.common.util.buffer.Buffer getBuffer()"], ["org.apache.sshd.common.io.IoReadFuture", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.verify(long)", "public org.apache.sshd.common.io.IoReadFuture verify(long) throws java.io.IOException"], ["int", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getRead()", "public int getRead()"], ["java.lang.Throwable", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.getException()", "public java.lang.Throwable getException()"], ["java.lang.Object", "org.apache.sshd.common.channel.ChannelAsyncInputStream$IoReadFutureImpl.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulState[]", "org.apache.sshd.common.channel.AbstractChannel$GracefulState.values()", "public static org.apache.sshd.common.channel.AbstractChannel$GracefulState[] values()"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulState", "org.apache.sshd.common.channel.AbstractChannel$GracefulState.valueOf(java.lang.String)", "public static org.apache.sshd.common.channel.AbstractChannel$GracefulState valueOf(java.lang.String)"], ["org.apache.sshd.common.future.DefaultKeyExchangeFuture", "org.apache.sshd.common.future.DefaultKeyExchangeFuture(java.lang.Object, java.lang.Object)", "public org.apache.sshd.common.future.DefaultKeyExchangeFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.verify(long)", "public org.apache.sshd.common.future.KeyExchangeFuture verify(long) throws java.io.IOException"], ["java.lang.Throwable", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.getException()", "public java.lang.Throwable getException()"], ["java.lang.Object", "org.apache.sshd.common.future.DefaultKeyExchangeFuture.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.forward.PortForwardingEventListener$1.toString()", "public java.lang.String toString()"], ["default", "org.apache.sshd.common.forward.PortForwardingInformationProvider.boolean isLocalPortForwardingStartedForPort(int)", "public default boolean isLocalPortForwardingStartedForPort(int)"], ["default", "org.apache.sshd.common.forward.PortForwardingInformationProvider.boolean isRemotePortForwardingStartedForPort(int)", "public default boolean isRemotePortForwardingStartedForPort(int)"], ["<T> T", "org.apache.sshd.common.session.Session.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public default <T> T resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["boolean", "org.apache.sshd.common.session.Session.isValidVersionPrefix(java.lang.String)", "public static boolean isValidVersionPrefix(java.lang.String)"], ["<T> T", "org.apache.sshd.common.session.Session.resolveAttribute(org.apache.sshd.common.session.Session, org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public static <T> T resolveAttribute(org.apache.sshd.common.session.Session, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractSession.getSession(org.apache.sshd.common.io.IoSession)", "public static org.apache.sshd.common.session.helpers.AbstractSession getSession(org.apache.sshd.common.io.IoSession) throws org.apache.sshd.common.session.helpers.MissingAttachedSessionException"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractSession.getSession(org.apache.sshd.common.io.IoSession, boolean)", "public static org.apache.sshd.common.session.helpers.AbstractSession getSession(org.apache.sshd.common.io.IoSession, boolean) throws org.apache.sshd.common.session.helpers.MissingAttachedSessionException"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.attachSession(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.session.helpers.AbstractSession)", "public static void attachSession(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.session.helpers.AbstractSession) throws org.apache.sshd.common.session.helpers.MultipleAttachedSessionException"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getServerVersion()", "public java.lang.String getServerVersion()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getClientVersion()", "public java.lang.String getClientVersion()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.common.session.helpers.AbstractSession.getKex()", "public org.apache.sshd.common.kex.KeyExchange getKex()"], ["byte[]", "org.apache.sshd.common.session.helpers.AbstractSession.getSessionId()", "public byte[] getSessionId()"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.common.session.helpers.AbstractSession.getIoSession()", "public org.apache.sshd.common.io.IoSession getIoSession()"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.session.helpers.AbstractSession.getFactoryManager()", "public org.apache.sshd.common.FactoryManager getFactoryManager()"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.session.helpers.AbstractSession.getParentPropertyResolver()", "public org.apache.sshd.common.PropertyResolver getParentPropertyResolver()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.session.helpers.AbstractSession.getProperties()", "public java.util.Map<java.lang.String, java.lang.Object> getProperties()"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractSession.getUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)", "public void setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractSession.resolveUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler resolveUnknownChannelReferenceHandler()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getNegotiatedKexParameter(org.apache.sshd.common.kex.KexProposalOption)", "public java.lang.String getNegotiatedKexParameter(org.apache.sshd.common.kex.KexProposalOption)"], ["org.apache.sshd.common.cipher.CipherInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getCipherInformation(boolean)", "public org.apache.sshd.common.cipher.CipherInformation getCipherInformation(boolean)"], ["org.apache.sshd.common.compression.CompressionInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getCompressionInformation(boolean)", "public org.apache.sshd.common.compression.CompressionInformation getCompressionInformation(boolean)"], ["org.apache.sshd.common.mac.MacInformation", "org.apache.sshd.common.session.helpers.AbstractSession.getMacInformation(boolean)", "public org.apache.sshd.common.mac.MacInformation getMacInformation(boolean)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isAuthenticated()", "public boolean isAuthenticated()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setAuthenticated()", "public void setAuthenticated() throws java.io.IOException"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.session.helpers.AbstractSession.getChannelStreamPacketWriterResolver()", "public org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)", "public void setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.session.helpers.AbstractSession.resolveChannelStreamPacketWriterResolver()", "public org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver resolveChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.messageReceived(org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.sendIgnoreMessage(byte...)", "public org.apache.sshd.common.io.IoWriteFuture sendIgnoreMessage(byte...) throws java.io.IOException"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.sendDebugMessage(boolean, java.lang.Object, java.lang.String)", "public org.apache.sshd.common.io.IoWriteFuture sendDebugMessage(boolean, java.lang.Object, java.lang.String) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.exceptionCaught(java.lang.Throwable)", "public void exceptionCaught(java.lang.Throwable)"], ["<T extends org.apache.sshd.common.Service> T", "org.apache.sshd.common.session.helpers.AbstractSession.getService(java.lang.Class<T>)", "public <T extends org.apache.sshd.common.Service> T getService(java.lang.Class<T>)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.writePacket(org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.session.helpers.AbstractSession.writePacket(org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit)", "public org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.request(java.lang.String, org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit)", "public org.apache.sshd.common.util.buffer.Buffer request(java.lang.String, org.apache.sshd.common.util.buffer.Buffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.createBuffer(byte)", "public org.apache.sshd.common.util.buffer.Buffer createBuffer(byte)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.createBuffer(byte, int)", "public org.apache.sshd.common.util.buffer.Buffer createBuffer(byte, int)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.AbstractSession.prepareBuffer(byte, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.util.buffer.Buffer prepareBuffer(byte, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.disconnect(int, java.lang.String)", "public void disconnect(int, java.lang.String) throws java.io.IOException"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)", "public <T> T setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.session.helpers.AbstractSession.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.getUsername()", "public java.lang.String getUsername()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setUsername(java.lang.String)", "public void setUsername(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.common.session.helpers.AbstractSession.getLock()", "public java.lang.Object getLock()"], ["org.apache.sshd.common.session.ReservedSessionMessagesHandler", "org.apache.sshd.common.session.helpers.AbstractSession.getReservedSessionMessagesHandler()", "public org.apache.sshd.common.session.ReservedSessionMessagesHandler getReservedSessionMessagesHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)", "public void setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addSessionListener(org.apache.sshd.common.session.SessionListener)", "public void addSessionListener(org.apache.sshd.common.session.SessionListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removeSessionListener(org.apache.sshd.common.session.SessionListener)", "public void removeSessionListener(org.apache.sshd.common.session.SessionListener)"], ["org.apache.sshd.common.session.SessionListener", "org.apache.sshd.common.session.helpers.AbstractSession.getSessionListenerProxy()", "public org.apache.sshd.common.session.SessionListener getSessionListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.session.helpers.AbstractSession.getChannelListenerProxy()", "public org.apache.sshd.common.channel.ChannelListener getChannelListenerProxy()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.helpers.AbstractSession.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.common.session.helpers.AbstractSession.reExchangeKeys()", "public org.apache.sshd.common.future.KeyExchangeFuture reExchangeKeys() throws java.io.IOException"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.session.helpers.AbstractSession.getLocalForwardsBindings()", "public java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>> getLocalForwardsBindings()"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isLocalPortForwardingStartedForPort(int)", "public boolean isLocalPortForwardingStartedForPort(int)"], ["java.util.NavigableSet<java.lang.Integer>", "org.apache.sshd.common.session.helpers.AbstractSession.getStartedLocalPortForwards()", "public java.util.NavigableSet<java.lang.Integer> getStartedLocalPortForwards()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.session.helpers.AbstractSession.getBoundLocalPortForward(int)", "public org.apache.sshd.common.util.net.SshdSocketAddress getBoundLocalPortForward(int)"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.session.helpers.AbstractSession.getRemoteForwardsBindings()", "public java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>> getRemoteForwardsBindings()"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractSession.isRemotePortForwardingStartedForPort(int)", "public boolean isRemotePortForwardingStartedForPort(int)"], ["java.util.NavigableSet<java.lang.Integer>", "org.apache.sshd.common.session.helpers.AbstractSession.getStartedRemotePortForwards()", "public java.util.NavigableSet<java.lang.Integer> getStartedRemotePortForwards()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.session.helpers.AbstractSession.getBoundRemotePortForward(int)", "public org.apache.sshd.common.util.net.SshdSocketAddress getBoundRemotePortForward(int)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSession.resetIdleTimeout()", "public void resetIdleTimeout()"], ["org.apache.sshd.common.session.Session$TimeoutStatus", "org.apache.sshd.common.session.helpers.AbstractSession.getTimeoutStatus()", "public org.apache.sshd.common.session.Session$TimeoutStatus getTimeoutStatus()"], ["long", "org.apache.sshd.common.session.helpers.AbstractSession.getAuthTimeout()", "public long getAuthTimeout()"], ["long", "org.apache.sshd.common.session.helpers.AbstractSession.getIdleTimeout()", "public long getIdleTimeout()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractSession.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGClient.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.client.kex.DHGClient.newFactory(org.apache.sshd.common.kex.DHFactory)", "public static org.apache.sshd.common.kex.KeyExchangeFactory newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.client.kex.DHGClient.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["boolean", "org.apache.sshd.client.kex.DHGClient.next(int, org.apache.sshd.common.util.buffer.Buffer)", "public boolean next(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["long", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.getConnectTimeout()", "public long getConnectTimeout()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.setConnectTimeout(long)", "public void setConnectTimeout(long)"], ["long", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.getAuthenticationTimeout()", "public long getAuthenticationTimeout()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.setAuthenticationTimeout(long)", "public void setAuthenticationTimeout(long)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.sessionLogin(java.net.SocketAddress, java.lang.String, java.lang.String)", "public org.apache.sshd.client.session.ClientSession sessionLogin(java.net.SocketAddress, java.lang.String, java.lang.String) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.sessionLogin(java.net.SocketAddress, java.lang.String, java.security.KeyPair)", "public org.apache.sshd.client.session.ClientSession sessionLogin(java.net.SocketAddress, java.lang.String, java.security.KeyPair) throws java.io.IOException"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator.wrap(org.apache.sshd.client.session.ClientSessionCreator, java.nio.channels.Channel)", "public static org.apache.sshd.client.simple.SimpleClient wrap(org.apache.sshd.client.session.ClientSessionCreator, java.nio.channels.Channel)"], ["org.apache.sshd.client.channel.ChannelExec", "org.apache.sshd.client.channel.ChannelExec(java.lang.String)", "public org.apache.sshd.client.channel.ChannelExec(java.lang.String)"], ["void", "org.apache.sshd.client.channel.ChannelExec.handleSuccess()", "public void handleSuccess() throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.ChannelExec.handleFailure()", "public void handleFailure() throws java.io.IOException"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder()", "public org.apache.sshd.client.ClientBuilder()"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.serverKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)", "public org.apache.sshd.client.ClientBuilder serverKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.hostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)", "public org.apache.sshd.client.ClientBuilder hostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.clientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)", "public org.apache.sshd.client.ClientBuilder clientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.filePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)", "public org.apache.sshd.client.ClientBuilder filePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.ClientBuilder.build(boolean)", "public org.apache.sshd.client.SshClient build(boolean)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>", "org.apache.sshd.client.ClientBuilder.setUpDefaultKeyExchanges(boolean)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>> setUpDefaultKeyExchanges(boolean)"], ["org.apache.sshd.client.ClientBuilder", "org.apache.sshd.client.ClientBuilder.builder()", "public static org.apache.sshd.client.ClientBuilder builder()"], ["org.apache.sshd.common.helpers.AbstractFactoryManager", "org.apache.sshd.client.ClientBuilder.build(boolean)", "public org.apache.sshd.common.helpers.AbstractFactoryManager build(boolean)"], ["org.apache.sshd.client.session.ClientSessionImpl", "org.apache.sshd.client.session.ClientSessionImpl(org.apache.sshd.client.ClientFactoryManager, org.apache.sshd.common.io.IoSession)", "public org.apache.sshd.client.session.ClientSessionImpl(org.apache.sshd.client.ClientFactoryManager, org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.session.ClientSessionImpl.auth()", "public org.apache.sshd.client.future.AuthFuture auth() throws java.io.IOException"], ["void", "org.apache.sshd.client.session.ClientSessionImpl.exceptionCaught(java.lang.Throwable)", "public void exceptionCaught(java.lang.Throwable)"], ["void", "org.apache.sshd.client.session.ClientSessionImpl.switchToNextService()", "public void switchToNextService() throws java.io.IOException"], ["java.util.Set<org.apache.sshd.client.session.ClientSession$ClientSessionEvent>", "org.apache.sshd.client.session.ClientSessionImpl.waitFor(java.util.Collection<org.apache.sshd.client.session.ClientSession$ClientSessionEvent>, long)", "public java.util.Set<org.apache.sshd.client.session.ClientSession$ClientSessionEvent> waitFor(java.util.Collection<org.apache.sshd.client.session.ClientSession$ClientSessionEvent>, long)"], ["java.util.Map<java.lang.Object, java.lang.Object>", "org.apache.sshd.client.session.ClientSessionImpl.getMetadataMap()", "public java.util.Map<java.lang.Object, java.lang.Object> getMetadataMap()"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.server.auth.UserAuthFactory>, java.util.List<java.lang.String>)", "public org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult(java.util.List<org.apache.sshd.server.auth.UserAuthFactory>, java.util.List<java.lang.String>)"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.CredentialHelper.creds(org.ietf.jgss.GSSManager, java.lang.String, java.lang.String)", "public static org.ietf.jgss.GSSCredential creds(org.ietf.jgss.GSSManager, java.lang.String, java.lang.String) throws javax.security.auth.login.LoginException, org.ietf.jgss.GSSException"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.CredentialHelper$G.run()", "public org.ietf.jgss.GSSCredential run() throws org.ietf.jgss.GSSException"], ["java.lang.Object", "org.apache.sshd.server.auth.gss.CredentialHelper$G.run()", "public java.lang.Object run() throws java.lang.Exception"], ["org.apache.sshd.server.auth.AsyncAuthException", "org.apache.sshd.server.auth.AsyncAuthException()", "public org.apache.sshd.server.auth.AsyncAuthException()"], ["void", "org.apache.sshd.server.auth.AsyncAuthException.setAuthed(boolean)", "public void setAuthed(boolean)"], ["void", "org.apache.sshd.server.auth.AsyncAuthException.addListener(java.util.function.Consumer<? super java.lang.Boolean>)", "public void addListener(java.util.function.Consumer<? super java.lang.Boolean>)"], ["org.apache.sshd.server.auth.UserAuthNoneFactory", "org.apache.sshd.server.auth.UserAuthNoneFactory()", "public org.apache.sshd.server.auth.UserAuthNoneFactory()"], ["org.apache.sshd.server.auth.UserAuthNone", "org.apache.sshd.server.auth.UserAuthNoneFactory.create()", "public org.apache.sshd.server.auth.UserAuthNone create()"], ["java.lang.Object", "org.apache.sshd.server.auth.UserAuthNoneFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry()", "public org.apache.sshd.server.auth.keyboard.PromptEntry()"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry(java.lang.String, boolean)", "public org.apache.sshd.server.auth.keyboard.PromptEntry(java.lang.String, boolean)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.PromptEntry.getPrompt()", "public java.lang.String getPrompt()"], ["void", "org.apache.sshd.server.auth.keyboard.PromptEntry.setPrompt(java.lang.String)", "public void setPrompt(java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.PromptEntry.isEcho()", "public boolean isEcho()"], ["void", "org.apache.sshd.server.auth.keyboard.PromptEntry.setEcho(boolean)", "public void setEcho(boolean)"], ["<B extends org.apache.sshd.common.util.buffer.Buffer> B", "org.apache.sshd.server.auth.keyboard.PromptEntry.append(B)", "public <B extends org.apache.sshd.common.util.buffer.Buffer> B append(B)"], ["int", "org.apache.sshd.server.auth.keyboard.PromptEntry.hashCode()", "public int hashCode()"], ["boolean", "org.apache.sshd.server.auth.keyboard.PromptEntry.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.sshd.server.auth.keyboard.PromptEntry", "org.apache.sshd.server.auth.keyboard.PromptEntry.clone()", "public org.apache.sshd.server.auth.keyboard.PromptEntry clone()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.PromptEntry.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.PromptEntry.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.apache.sshd.server.shell.TtyFilterInputStream", "org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)", "public org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)"], ["org.apache.sshd.server.shell.TtyFilterInputStream", "org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)", "public org.apache.sshd.server.shell.TtyFilterInputStream(java.io.InputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.void write(int)", "public synchronized void write(int)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.void write(byte[], int, int)", "public synchronized void write(byte[], int, int)"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int available()", "public synchronized int available() throws java.io.IOException"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int read()", "public synchronized int read() throws java.io.IOException"], ["synchronized", "org.apache.sshd.server.shell.TtyFilterInputStream.int read(byte[], int, int)", "public synchronized int read(byte[], int, int) throws java.io.IOException"], ["void", "org.apache.sshd.server.channel.ChannelSession$CommandCloseable$1.run()", "public void run()"], ["org.apache.sshd.server.StandardEnvironment", "org.apache.sshd.server.StandardEnvironment()", "public org.apache.sshd.server.StandardEnvironment()"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener, org.apache.sshd.server.Signal...)", "public void addSignalListener(org.apache.sshd.server.SignalListener, org.apache.sshd.server.Signal...)"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener)", "public void addSignalListener(org.apache.sshd.server.SignalListener)"], ["void", "org.apache.sshd.server.StandardEnvironment.addSignalListener(org.apache.sshd.server.SignalListener, java.util.Collection<org.apache.sshd.server.Signal>)", "public void addSignalListener(org.apache.sshd.server.SignalListener, java.util.Collection<org.apache.sshd.server.Signal>)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.sshd.server.StandardEnvironment.getEnv()", "public java.util.Map<java.lang.String, java.lang.String> getEnv()"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.server.StandardEnvironment.getPtyModes()", "public java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> getPtyModes()"], ["void", "org.apache.sshd.server.StandardEnvironment.removeSignalListener(org.apache.sshd.server.SignalListener)", "public void removeSignalListener(org.apache.sshd.server.SignalListener)"], ["void", "org.apache.sshd.server.StandardEnvironment.signal(org.apache.sshd.server.Signal)", "public void signal(org.apache.sshd.server.Signal)"], ["void", "org.apache.sshd.server.StandardEnvironment.set(java.lang.String, java.lang.String)", "public void set(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.StandardEnvironment.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.Signal[]", "org.apache.sshd.server.Signal.values()", "public static org.apache.sshd.server.Signal[] values()"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.valueOf(java.lang.String)", "public static org.apache.sshd.server.Signal valueOf(java.lang.String)"], ["int", "org.apache.sshd.server.Signal.getNumeric()", "public int getNumeric()"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.get(java.lang.String)", "public static org.apache.sshd.server.Signal get(java.lang.String)"], ["org.apache.sshd.server.Signal", "org.apache.sshd.server.Signal.get(int)", "public static org.apache.sshd.server.Signal get(int)"], ["org.apache.sshd.server.global.NoMoreSessionsHandler", "org.apache.sshd.server.global.NoMoreSessionsHandler()", "public org.apache.sshd.server.global.NoMoreSessionsHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.NoMoreSessionsHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.NoMoreSessionsHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.server.forward.StaticDecisionForwardingFilter", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter(boolean)", "public org.apache.sshd.server.forward.StaticDecisionForwardingFilter(boolean)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.isAccepted()", "public final boolean isAccepted()"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)", "public boolean canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)", "public boolean canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.StaticDecisionForwardingFilter.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.forward.ForwardedTcpipFactory", "org.apache.sshd.server.forward.ForwardedTcpipFactory()", "public org.apache.sshd.server.forward.ForwardedTcpipFactory()"], ["org.apache.sshd.server.session.ServerSessionImpl", "org.apache.sshd.server.session.ServerSessionImpl(org.apache.sshd.server.ServerFactoryManager, org.apache.sshd.common.io.IoSession)", "public org.apache.sshd.server.session.ServerSessionImpl(org.apache.sshd.server.ServerFactoryManager, org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["org.apache.sshd.agent.local.AgentForwardedChannel", "org.apache.sshd.agent.local.AgentForwardedChannel(java.lang.String)", "public org.apache.sshd.agent.local.AgentForwardedChannel(java.lang.String)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.AgentForwardedChannel.getAgent()", "public org.apache.sshd.agent.SshAgent getAgent()"], ["org.apache.sshd.agent.local.ChannelAgentForwarding$AgentClient", "org.apache.sshd.agent.local.ChannelAgentForwarding$AgentClient(org.apache.sshd.agent.local.ChannelAgentForwarding)", "public org.apache.sshd.agent.local.ChannelAgentForwarding$AgentClient(org.apache.sshd.agent.local.ChannelAgentForwarding)"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer()", "public org.apache.sshd.agent.unix.AgentServer()"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.agent.unix.AgentServer", "org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.agent.SshAgent, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.unix.AgentServer(org.apache.sshd.agent.SshAgent, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.unix.AgentServer.getAgent()", "public org.apache.sshd.agent.SshAgent getAgent()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.unix.AgentServer.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["java.lang.String", "org.apache.sshd.agent.unix.AgentServer.start()", "public java.lang.String start() throws java.lang.Exception"], ["void", "org.apache.sshd.agent.unix.AgentServer.close()", "public void close() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.agent.common.AbstractAgentProxy.getChannelType()", "public java.lang.String getChannelType()"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.setChannelType(java.lang.String)", "public void setChannelType(java.lang.String)"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.common.AbstractAgentProxy.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.common.AbstractAgentProxy.getIdentities()", "public java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>> getIdentities() throws java.io.IOException"], ["byte[]", "org.apache.sshd.agent.common.AbstractAgentProxy.sign(java.security.PublicKey, byte[])", "public byte[] sign(java.security.PublicKey, byte[]) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.addIdentity(java.security.KeyPair, java.lang.String)", "public void addIdentity(java.security.KeyPair, java.lang.String) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.removeIdentity(java.security.PublicKey)", "public void removeIdentity(java.security.PublicKey) throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.removeAllIdentities()", "public void removeAllIdentities() throws java.io.IOException"], ["void", "org.apache.sshd.agent.common.AbstractAgentProxy.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.common.file.root.RootedFileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystemProvider()", "public org.apache.sshd.common.file.root.RootedFileSystemProvider()"], ["java.lang.String", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getScheme()", "public java.lang.String getScheme()"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileSystem(java.net.URI, java.util.Map<java.lang.String, ?>)", "public java.nio.file.FileSystem newFileSystem(java.net.URI, java.util.Map<java.lang.String, ?>) throws java.io.IOException"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileSystem(java.net.URI)", "public java.nio.file.FileSystem getFileSystem(java.net.URI)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileSystem(java.nio.file.Path, java.util.Map<java.lang.String, ?>)", "public java.nio.file.FileSystem newFileSystem(java.nio.file.Path, java.util.Map<java.lang.String, ?>) throws java.io.IOException"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getPath(java.net.URI)", "public java.nio.file.Path getPath(java.net.URI)"], ["java.io.InputStream", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)", "public java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException"], ["java.io.OutputStream", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)", "public java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException"], ["java.nio.channels.FileChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...)", "public java.nio.channels.FileChannel newFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException"], ["java.nio.channels.AsynchronousFileChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newAsynchronousFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute<?>...)", "public java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException"], ["java.nio.channels.SeekableByteChannel", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newByteChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...)", "public java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException"], ["java.nio.file.DirectoryStream<java.nio.file.Path>", "org.apache.sshd.common.file.root.RootedFileSystemProvider.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream$Filter<? super java.nio.file.Path>)", "public java.nio.file.DirectoryStream<java.nio.file.Path> newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream$Filter<? super java.nio.file.Path>) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...)", "public void createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...)", "public void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.createLink(java.nio.file.Path, java.nio.file.Path)", "public void createLink(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.delete(java.nio.file.Path)", "public void delete(java.nio.file.Path) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.deleteIfExists(java.nio.file.Path)", "public boolean deleteIfExists(java.nio.file.Path) throws java.io.IOException"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readSymbolicLink(java.nio.file.Path)", "public java.nio.file.Path readSymbolicLink(java.nio.file.Path) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)", "public void copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)", "public void move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.isSameFile(java.nio.file.Path, java.nio.file.Path)", "public boolean isSameFile(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystemProvider.isHidden(java.nio.file.Path)", "public boolean isHidden(java.nio.file.Path) throws java.io.IOException"], ["java.nio.file.FileStore", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileStore(java.nio.file.Path)", "public java.nio.file.FileStore getFileStore(java.nio.file.Path) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.checkAccess(java.nio.file.Path, java.nio.file.AccessMode...)", "public void checkAccess(java.nio.file.Path, java.nio.file.AccessMode...) throws java.io.IOException"], ["<V extends java.nio.file.attribute.FileAttributeView> V", "org.apache.sshd.common.file.root.RootedFileSystemProvider.getFileAttributeView(java.nio.file.Path, java.lang.Class<V>, java.nio.file.LinkOption...)", "public <V extends java.nio.file.attribute.FileAttributeView> V getFileAttributeView(java.nio.file.Path, java.lang.Class<V>, java.nio.file.LinkOption...)"], ["<A extends java.nio.file.attribute.BasicFileAttributes> A", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readAttributes(java.nio.file.Path, java.lang.Class<A>, java.nio.file.LinkOption...)", "public <A extends java.nio.file.attribute.BasicFileAttributes> A readAttributes(java.nio.file.Path, java.lang.Class<A>, java.nio.file.LinkOption...) throws java.io.IOException"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.file.root.RootedFileSystemProvider.readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...)", "public java.util.Map<java.lang.String, java.lang.Object> readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider.setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...)", "public void setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) throws java.io.IOException"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException()", "public org.apache.sshd.common.io.ReadPendingException()"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.io.ReadPendingException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.String)", "public org.apache.sshd.common.io.ReadPendingException(java.lang.String)"], ["org.apache.sshd.common.io.ReadPendingException", "org.apache.sshd.common.io.ReadPendingException(java.lang.Throwable)", "public org.apache.sshd.common.io.ReadPendingException(java.lang.Throwable)"], ["org.apache.sshd.common.io.nio2.Nio2Connector", "org.apache.sshd.common.io.nio2.Nio2Connector(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)", "public org.apache.sshd.common.io.nio2.Nio2Connector(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)"], ["org.apache.sshd.common.io.IoConnectFuture", "org.apache.sshd.common.io.nio2.Nio2Connector.connect(java.net.SocketAddress, java.net.SocketAddress)", "public org.apache.sshd.common.io.IoConnectFuture connect(java.net.SocketAddress, java.net.SocketAddress)"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.io.AbstractIoWriteFuture.verify(long)", "public org.apache.sshd.common.io.IoWriteFuture verify(long) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.io.AbstractIoWriteFuture.isWritten()", "public boolean isWritten()"], ["java.lang.Throwable", "org.apache.sshd.common.io.AbstractIoWriteFuture.getException()", "public java.lang.Throwable getException()"], ["java.lang.Object", "org.apache.sshd.common.io.AbstractIoWriteFuture.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["org.apache.sshd.common.kex.BuiltinDHFactories[]", "org.apache.sshd.common.kex.BuiltinDHFactories.values()", "public static org.apache.sshd.common.kex.BuiltinDHFactories[] values()"], ["org.apache.sshd.common.kex.BuiltinDHFactories", "org.apache.sshd.common.kex.BuiltinDHFactories.valueOf(java.lang.String)", "public static org.apache.sshd.common.kex.BuiltinDHFactories valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.kex.BuiltinDHFactories.getName()", "public final java.lang.String getName()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories.isSupported()", "public boolean isSupported()"], ["java.lang.String", "org.apache.sshd.common.kex.BuiltinDHFactories.toString()", "public final java.lang.String toString()"], ["void", "org.apache.sshd.common.kex.BuiltinDHFactories.registerExtension(org.apache.sshd.common.kex.DHFactory)", "public static void registerExtension(org.apache.sshd.common.kex.DHFactory)"], ["java.util.NavigableSet<org.apache.sshd.common.kex.DHFactory>", "org.apache.sshd.common.kex.BuiltinDHFactories.getRegisteredExtensions()", "public static java.util.NavigableSet<org.apache.sshd.common.kex.DHFactory> getRegisteredExtensions()"], ["org.apache.sshd.common.kex.DHFactory", "org.apache.sshd.common.kex.BuiltinDHFactories.unregisterExtension(java.lang.String)", "public static org.apache.sshd.common.kex.DHFactory unregisterExtension(java.lang.String)"], ["org.apache.sshd.common.kex.BuiltinDHFactories", "org.apache.sshd.common.kex.BuiltinDHFactories.fromFactoryName(java.lang.String)", "public static org.apache.sshd.common.kex.BuiltinDHFactories fromFactoryName(java.lang.String)"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories.isGroupExchange()", "public boolean isGroupExchange()"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.lang.String)", "public static org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult parseDHFactoriesList(java.lang.String)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.lang.String...)", "public static org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult parseDHFactoriesList(java.lang.String...)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories.parseDHFactoriesList(java.util.Collection<java.lang.String>)", "public static org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult parseDHFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.common.kex.DHFactory", "org.apache.sshd.common.kex.BuiltinDHFactories.resolveFactory(java.lang.String)", "public static org.apache.sshd.common.kex.DHFactory resolveFactory(java.lang.String)"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$12.create(java.lang.Object...)", "public org.apache.sshd.common.kex.ECDH create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$12.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$12.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult(java.util.List<org.apache.sshd.common.kex.DHFactory>, java.util.List<java.lang.String>)", "public org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult(java.util.List<org.apache.sshd.common.kex.DHFactory>, java.util.List<java.lang.String>)"], ["java.util.List<org.apache.sshd.common.kex.DHFactory>", "org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult.getParsedFactories()", "public java.util.List<org.apache.sshd.common.kex.DHFactory> getParsedFactories()"], ["java.util.List<java.lang.String>", "org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult.getUnsupportedFactories()", "public java.util.List<java.lang.String> getUnsupportedFactories()"], ["org.apache.sshd.common.channel.ChannelOutputStream", "org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, org.slf4j.Logger, byte, boolean)", "public org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, org.slf4j.Logger, byte, boolean)"], ["org.apache.sshd.common.channel.ChannelOutputStream", "org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, long, org.slf4j.Logger, byte, boolean)", "public org.apache.sshd.common.channel.ChannelOutputStream(org.apache.sshd.common.channel.AbstractChannel, org.apache.sshd.common.channel.Window, long, org.slf4j.Logger, byte, boolean)"], ["org.apache.sshd.common.channel.AbstractChannel", "org.apache.sshd.common.channel.ChannelOutputStream.getChannel()", "public org.apache.sshd.common.channel.AbstractChannel getChannel()"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isEofOnClose()", "public boolean isEofOnClose()"], ["void", "org.apache.sshd.common.channel.ChannelOutputStream.setNoDelay(boolean)", "public void setNoDelay(boolean)"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isNoDelay()", "public boolean isNoDelay()"], ["boolean", "org.apache.sshd.common.channel.ChannelOutputStream.isOpen()", "public boolean isOpen()"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void write(int)", "public synchronized void write(int) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void write(byte[], int, int)", "public synchronized void write(byte[], int, int) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void flush()", "public synchronized void flush() throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.channel.ChannelOutputStream.void close()", "public synchronized void close() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelOutputStream.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelOutputStream.getChannel()", "public org.apache.sshd.common.channel.Channel getChannel()"], ["org.apache.sshd.common.channel.Window", "org.apache.sshd.common.channel.Window(org.apache.sshd.common.channel.AbstractChannel, java.lang.Object, boolean, boolean)", "public org.apache.sshd.common.channel.Window(org.apache.sshd.common.channel.AbstractChannel, java.lang.Object, boolean, boolean)"], ["org.apache.sshd.common.channel.AbstractChannel", "org.apache.sshd.common.channel.Window.getChannel()", "public org.apache.sshd.common.channel.AbstractChannel getChannel()"], ["long", "org.apache.sshd.common.channel.Window.getSize()", "public long getSize()"], ["long", "org.apache.sshd.common.channel.Window.getMaxSize()", "public long getMaxSize()"], ["long", "org.apache.sshd.common.channel.Window.getPacketSize()", "public long getPacketSize()"], ["void", "org.apache.sshd.common.channel.Window.init(org.apache.sshd.common.PropertyResolver)", "public void init(org.apache.sshd.common.PropertyResolver)"], ["void", "org.apache.sshd.common.channel.Window.init(long, long, org.apache.sshd.common.PropertyResolver)", "public void init(long, long, org.apache.sshd.common.PropertyResolver)"], ["void", "org.apache.sshd.common.channel.Window.expand(int)", "public void expand(int)"], ["void", "org.apache.sshd.common.channel.Window.consume(long)", "public void consume(long)"], ["void", "org.apache.sshd.common.channel.Window.consumeAndCheck(long)", "public void consumeAndCheck(long) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.Window.check(long)", "public void check(long) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.Window.waitAndConsume(long, long)", "public void waitAndConsume(long, long) throws java.lang.InterruptedException, org.apache.sshd.common.channel.WindowClosedException, java.net.SocketTimeoutException"], ["long", "org.apache.sshd.common.channel.Window.waitForSpace(long)", "public long waitForSpace(long) throws java.lang.InterruptedException, org.apache.sshd.common.channel.WindowClosedException, java.net.SocketTimeoutException"], ["boolean", "org.apache.sshd.common.channel.Window.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.common.channel.Window.close()", "public void close() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.channel.Window.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.Window.getChannel()", "public org.apache.sshd.common.channel.Channel getChannel()"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.SttySupport.getUnixPtyModes()", "public static java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> getUnixPtyModes() throws java.io.IOException, java.lang.InterruptedException"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.SttySupport.parsePtyModes(java.lang.String)", "public static java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> parsePtyModes(java.lang.String)"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalWidth()", "public static int getTerminalWidth()"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalHeight()", "public static int getTerminalHeight()"], ["int", "org.apache.sshd.common.channel.SttySupport.getTerminalProperty(java.lang.String)", "public static int getTerminalProperty(java.lang.String) throws java.io.IOException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.getTtyProps()", "public static java.lang.String getTtyProps() throws java.io.IOException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.stty(java.lang.String)", "public static java.lang.String stty(java.lang.String) throws java.io.IOException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.exec(java.lang.String)", "public static java.lang.String exec(java.lang.String) throws java.io.IOException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.sshd.common.channel.SttySupport.getSttyCommand()", "public static java.lang.String getSttyCommand()"], ["void", "org.apache.sshd.common.channel.SttySupport.setSttyCommand(java.lang.String)", "public static void setSttyCommand(java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String)", "public org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelNotFoundException", "org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelNotFoundException(int, java.lang.String, java.lang.Throwable)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwarderFactory$1.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["org.apache.sshd.common.forward.DefaultForwarderFactory", "org.apache.sshd.common.forward.DefaultForwarderFactory()", "public org.apache.sshd.common.forward.DefaultForwarderFactory()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwarderFactory.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwarderFactory.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.ForwardingFilter", "org.apache.sshd.common.forward.DefaultForwarderFactory.create(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.common.forward.ForwardingFilter create(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.common.session.helpers.MissingAttachedSessionException", "org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String)", "public org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String)"], ["org.apache.sshd.common.session.helpers.MissingAttachedSessionException", "org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.session.helpers.MissingAttachedSessionException(java.lang.String, java.lang.Throwable)"], ["org.apache.sshd.common.session.helpers.PendingWriteFuture", "org.apache.sshd.common.session.helpers.PendingWriteFuture(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.session.helpers.PendingWriteFuture(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.session.helpers.PendingWriteFuture.getBuffer()", "public org.apache.sshd.common.util.buffer.Buffer getBuffer()"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.setWritten()", "public void setWritten()"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.operationComplete(org.apache.sshd.common.io.IoWriteFuture)", "public void operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.session.helpers.PendingWriteFuture.operationComplete(org.apache.sshd.common.future.SshFuture)", "public void operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.client.auth.password.UserAuthPasswordFactory", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory()", "public org.apache.sshd.client.auth.password.UserAuthPasswordFactory()"], ["org.apache.sshd.client.auth.password.UserAuthPassword", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory.create()", "public org.apache.sshd.client.auth.password.UserAuthPassword create()"], ["java.lang.Object", "org.apache.sshd.client.auth.password.UserAuthPasswordFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.auth.pubkey.KeyAgentIdentity", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity(org.apache.sshd.agent.SshAgent, java.security.PublicKey, java.lang.String)", "public org.apache.sshd.client.auth.pubkey.KeyAgentIdentity(org.apache.sshd.agent.SshAgent, java.security.PublicKey, java.lang.String)"], ["java.security.PublicKey", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.getPublicKey()", "public java.security.PublicKey getPublicKey()"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.getComment()", "public java.lang.String getComment()"], ["byte[]", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.sign(byte[])", "public byte[] sign(byte[]) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyAgentIdentity.toString()", "public java.lang.String toString()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager)", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.signature.SignatureFactoriesManager) throws java.lang.Exception"], ["boolean", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.hasNext()", "public boolean hasNext()"], ["org.apache.sshd.client.auth.pubkey.PublicKeyIdentity", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.next()", "public org.apache.sshd.client.auth.pubkey.PublicKeyIdentity next()"], ["boolean", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.close()", "public void close() throws java.io.IOException"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator.next()", "public java.lang.Object next()"], ["org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier(java.security.PublicKey)", "public org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier(java.security.PublicKey)"], ["java.security.PublicKey", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier.getRequiredKey()", "public final java.security.PublicKey getRequiredKey()"], ["boolean", "org.apache.sshd.client.keyverifier.RequiredServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)", "public boolean verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier", "org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier()", "public org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier()"], ["boolean", "org.apache.sshd.client.keyverifier.DelegatingServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)", "public boolean verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.channel.ChannelSubsystem", "org.apache.sshd.client.channel.ChannelSubsystem(java.lang.String)", "public org.apache.sshd.client.channel.ChannelSubsystem(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.channel.ChannelSubsystem.getSubsystem()", "public final java.lang.String getSubsystem()"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.handleSuccess()", "public void handleSuccess() throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.handleFailure()", "public void handleFailure() throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.ChannelSubsystem.onClose(java.lang.Runnable)", "public void onClose(java.lang.Runnable)"], ["java.lang.String", "org.apache.sshd.client.channel.ChannelSubsystem.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.sshd.client.SshClient$2.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.client.SshClient$2.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.client.session.ClientConnectionServiceFactory$1.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker(org.apache.sshd.client.session.ClientSession, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker(org.apache.sshd.client.session.ClientSession, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["boolean", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.isLocalForwarding()", "public boolean isLocalForwarding()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.getRemoteAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getRemoteAddress()"], ["void", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.close()", "public void close() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker.toString()", "public java.lang.String toString()"], ["<S extends org.apache.sshd.server.SshServer> S", "org.apache.sshd.server.config.keys.ServerIdentity.setKeyPairProvider(S, java.util.Properties, boolean)", "public static <S extends org.apache.sshd.server.SshServer> S setKeyPairProvider(S, java.util.Properties, boolean) throws java.io.IOException, java.security.GeneralSecurityException"], ["org.apache.sshd.common.keyprovider.KeyPairProvider", "org.apache.sshd.server.config.keys.ServerIdentity.loadKeyPairProvider(java.util.Properties, boolean, java.nio.file.LinkOption...)", "public static org.apache.sshd.common.keyprovider.KeyPairProvider loadKeyPairProvider(java.util.Properties, boolean, java.nio.file.LinkOption...) throws java.io.IOException, java.security.GeneralSecurityException"], ["java.util.Map<java.lang.String, java.security.KeyPair>", "org.apache.sshd.server.config.keys.ServerIdentity.loadIdentities(java.util.Properties, java.nio.file.LinkOption...)", "public static java.util.Map<java.lang.String, java.security.KeyPair> loadIdentities(java.util.Properties, java.nio.file.LinkOption...) throws java.io.IOException, java.security.GeneralSecurityException"], ["java.util.Map<java.lang.String, java.nio.file.Path>", "org.apache.sshd.server.config.keys.ServerIdentity.findIdentities(java.util.Properties, java.nio.file.LinkOption...)", "public static java.util.Map<java.lang.String, java.nio.file.Path> findIdentities(java.util.Properties, java.nio.file.LinkOption...) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityType(java.lang.String)", "public static java.lang.String getIdentityType(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityFileName(org.apache.sshd.common.NamedResource)", "public static java.lang.String getIdentityFileName(org.apache.sshd.common.NamedResource)"], ["java.lang.String", "org.apache.sshd.server.config.keys.ServerIdentity.getIdentityFileName(java.lang.String)", "public static java.lang.String getIdentityFileName(java.lang.String)"], ["<S extends org.apache.sshd.server.SshServer> S", "org.apache.sshd.server.config.SshServerConfigFileReader.configure(S, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <S extends org.apache.sshd.server.SshServer> S configure(S, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveServerForwarding(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.server.forward.ForwardingFilter resolveServerForwarding(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.AgentForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveAgentForwardingFilter(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.server.forward.AgentForwardingFilter resolveAgentForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.TcpForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveTcpForwardingFilter(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.server.forward.TcpForwardingFilter resolveTcpForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.forward.X11ForwardingFilter", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveX11ForwardingFilter(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.server.forward.X11ForwardingFilter resolveX11ForwardingFilter(org.apache.sshd.common.PropertyResolver)"], ["java.lang.Object", "org.apache.sshd.server.config.SshServerConfigFileReader.resolveBanner(org.apache.sshd.common.PropertyResolver)", "public static java.lang.Object resolveBanner(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.server.auth.password.StaticPasswordAuthenticator", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator(boolean)", "public org.apache.sshd.server.auth.password.StaticPasswordAuthenticator(boolean)"], ["boolean", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator.isAccepted()", "public final boolean isAccepted()"], ["boolean", "org.apache.sshd.server.auth.password.StaticPasswordAuthenticator.authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)", "public final boolean authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.auth.gss.GSSAuthenticator()", "public org.apache.sshd.server.auth.gss.GSSAuthenticator()"], ["org.ietf.jgss.GSSManager", "org.apache.sshd.server.auth.gss.GSSAuthenticator.getGSSManager()", "public org.ietf.jgss.GSSManager getGSSManager()"], ["org.ietf.jgss.GSSCredential", "org.apache.sshd.server.auth.gss.GSSAuthenticator.getGSSCredential(org.ietf.jgss.GSSManager)", "public org.ietf.jgss.GSSCredential getGSSCredential(org.ietf.jgss.GSSManager) throws java.net.UnknownHostException, javax.security.auth.login.LoginException, org.ietf.jgss.GSSException"], ["boolean", "org.apache.sshd.server.auth.gss.GSSAuthenticator.validateInitialUser(org.apache.sshd.server.session.ServerSession, java.lang.String)", "public boolean validateInitialUser(org.apache.sshd.server.session.ServerSession, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.gss.GSSAuthenticator.validateIdentity(org.apache.sshd.server.session.ServerSession, java.lang.String)", "public boolean validateIdentity(org.apache.sshd.server.session.ServerSession, java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.GSSAuthenticator.setServicePrincipalName(java.lang.String)", "public void setServicePrincipalName(java.lang.String)"], ["void", "org.apache.sshd.server.auth.gss.GSSAuthenticator.setKeytabFile(java.lang.String)", "public void setKeytabFile(java.lang.String)"], ["org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator(boolean)", "public org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator(boolean)"], ["boolean", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator.isAccepted()", "public final boolean isAccepted()"], ["boolean", "org.apache.sshd.server.auth.hostbased.StaticHostBasedAuthenticator.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.security.PublicKey, java.lang.String, java.lang.String, java.util.List<java.security.cert.X509Certificate>)", "public final boolean authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.security.PublicKey, java.lang.String, java.lang.String, java.util.List<java.security.cert.X509Certificate>)"], ["org.apache.sshd.server.auth.UserAuthNone", "org.apache.sshd.server.auth.UserAuthNone()", "public org.apache.sshd.server.auth.UserAuthNone()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.UserAuthNone.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)", "public java.lang.Boolean doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)"], ["org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)", "public org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["boolean", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)", "public boolean authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionCreated(org.apache.sshd.common.session.Session)", "public void sessionCreated(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)", "public void sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)", "public void sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["void", "org.apache.sshd.server.auth.pubkey.CachingPublicKeyAuthenticator.sessionClosed(org.apache.sshd.common.session.Session)", "public void sessionClosed(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory()", "public org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory()"], ["org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()", "public org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractive create()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.shell.ProcessShellCommandFactory", "org.apache.sshd.server.shell.ProcessShellCommandFactory()", "public org.apache.sshd.server.shell.ProcessShellCommandFactory()"], ["java.lang.String", "org.apache.sshd.server.shell.ProcessShellCommandFactory.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.ProcessShellCommandFactory.createCommand(java.lang.String)", "public org.apache.sshd.server.command.Command createCommand(java.lang.String)"], ["org.apache.sshd.server.shell.TtyFilterOutputStream", "org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)", "public org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>)"], ["org.apache.sshd.server.shell.TtyFilterOutputStream", "org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)", "public org.apache.sshd.server.shell.TtyFilterOutputStream(java.io.OutputStream, org.apache.sshd.server.shell.TtyFilterInputStream, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["void", "org.apache.sshd.server.shell.TtyFilterOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.apache.sshd.server.shell.TtyFilterOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["org.apache.sshd.server.channel.AsyncDataReceiver", "org.apache.sshd.server.channel.AsyncDataReceiver(org.apache.sshd.common.channel.Channel)", "public org.apache.sshd.server.channel.AsyncDataReceiver(org.apache.sshd.common.channel.Channel)"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.server.channel.AsyncDataReceiver.getIn()", "public org.apache.sshd.common.io.IoInputStream getIn()"], ["int", "org.apache.sshd.server.channel.AsyncDataReceiver.data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int)", "public int data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int) throws java.io.IOException"], ["void", "org.apache.sshd.server.channel.AsyncDataReceiver.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.server.channel.ChannelSessionFactory", "org.apache.sshd.server.channel.ChannelSessionFactory()", "public org.apache.sshd.server.channel.ChannelSessionFactory()"], ["java.lang.String", "org.apache.sshd.server.channel.ChannelSessionFactory.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.server.channel.ChannelSessionFactory.create()", "public org.apache.sshd.common.channel.Channel create()"], ["java.lang.Object", "org.apache.sshd.server.channel.ChannelSessionFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder()", "public org.apache.sshd.server.ServerBuilder()"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.interactiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)", "public org.apache.sshd.server.ServerBuilder interactiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.publickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)", "public org.apache.sshd.server.ServerBuilder publickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.SshServer", "org.apache.sshd.server.ServerBuilder.build(boolean)", "public org.apache.sshd.server.SshServer build(boolean)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>", "org.apache.sshd.server.ServerBuilder.setUpDefaultKeyExchanges(boolean)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>> setUpDefaultKeyExchanges(boolean)"], ["org.apache.sshd.server.ServerBuilder", "org.apache.sshd.server.ServerBuilder.builder()", "public static org.apache.sshd.server.ServerBuilder builder()"], ["org.apache.sshd.common.helpers.AbstractFactoryManager", "org.apache.sshd.server.ServerBuilder.build(boolean)", "public org.apache.sshd.common.helpers.AbstractFactoryManager build(boolean)"], ["org.apache.sshd.server.jaas.JaasPasswordAuthenticator", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator()", "public org.apache.sshd.server.jaas.JaasPasswordAuthenticator()"], ["org.apache.sshd.server.jaas.JaasPasswordAuthenticator", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator(java.lang.String)", "public org.apache.sshd.server.jaas.JaasPasswordAuthenticator(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.getDomain()", "public java.lang.String getDomain()"], ["void", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.setDomain(java.lang.String)", "public void setDomain(java.lang.String)"], ["boolean", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)", "public boolean authenticate(java.lang.String, java.lang.String, org.apache.sshd.server.session.ServerSession)"], ["boolean", "org.apache.sshd.server.jaas.JaasPasswordAuthenticator.authenticate(java.lang.String, java.lang.String)", "public boolean authenticate(java.lang.String, java.lang.String)"], ["org.apache.sshd.server.global.OpenSshHostKeysHandler", "org.apache.sshd.server.global.OpenSshHostKeysHandler()", "public org.apache.sshd.server.global.OpenSshHostKeysHandler()"], ["org.apache.sshd.server.global.OpenSshHostKeysHandler", "org.apache.sshd.server.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)", "public org.apache.sshd.server.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.global.OpenSshHostKeysHandler.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.global.OpenSshHostKeysHandler.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.sessionCreated(org.apache.sshd.common.io.IoSession)", "public void sessionCreated(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.sessionClosed(org.apache.sshd.common.io.IoSession)", "public void sessionClosed(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.server.forward.TcpipServerChannel$1.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)", "public void exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable) throws java.lang.Exception"], ["void", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.server.session.ServerConnectionServiceFactory$1.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["org.apache.sshd.agent.local.ChannelAgentForwardingFactory", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory(java.lang.String)", "public org.apache.sshd.agent.local.ChannelAgentForwardingFactory(java.lang.String)"], ["java.lang.String", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.create()", "public org.apache.sshd.common.channel.Channel create()"], ["java.lang.Object", "org.apache.sshd.agent.local.ChannelAgentForwardingFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.agent.local.AgentImpl", "org.apache.sshd.agent.local.AgentImpl()", "public org.apache.sshd.agent.local.AgentImpl()"], ["boolean", "org.apache.sshd.agent.local.AgentImpl.isOpen()", "public boolean isOpen()"], ["java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>>", "org.apache.sshd.agent.local.AgentImpl.getIdentities()", "public java.util.List<? extends java.util.Map$Entry<java.security.PublicKey, java.lang.String>> getIdentities() throws java.io.IOException"], ["byte[]", "org.apache.sshd.agent.local.AgentImpl.sign(java.security.PublicKey, byte[])", "public byte[] sign(java.security.PublicKey, byte[]) throws java.io.IOException"], ["void", "org.apache.sshd.agent.local.AgentImpl.addIdentity(java.security.KeyPair, java.lang.String)", "public void addIdentity(java.security.KeyPair, java.lang.String) throws java.io.IOException"], ["void", "org.apache.sshd.agent.local.AgentImpl.removeIdentity(java.security.PublicKey)", "public void removeIdentity(java.security.PublicKey) throws java.io.IOException"], ["void", "org.apache.sshd.agent.local.AgentImpl.removeAllIdentities()", "public void removeAllIdentities() throws java.io.IOException"], ["void", "org.apache.sshd.agent.local.AgentImpl.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.agent.unix.AgentServer$SshAgentSession", "org.apache.sshd.agent.unix.AgentServer$SshAgentSession(long, org.apache.sshd.agent.SshAgent)", "public org.apache.sshd.agent.unix.AgentServer$SshAgentSession(long, org.apache.sshd.agent.SshAgent)"], ["void", "org.apache.sshd.agent.unix.AgentServer$SshAgentSession.run()", "public void run()"], ["org.apache.sshd.common.file.util.MockPath", "org.apache.sshd.common.file.util.MockPath(java.lang.String)", "public org.apache.sshd.common.file.util.MockPath(java.lang.String)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.util.MockPath.getFileSystem()", "public java.nio.file.FileSystem getFileSystem()"], ["boolean", "org.apache.sshd.common.file.util.MockPath.isAbsolute()", "public boolean isAbsolute()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getRoot()", "public java.nio.file.Path getRoot()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getFileName()", "public java.nio.file.Path getFileName()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getParent()", "public java.nio.file.Path getParent()"], ["int", "org.apache.sshd.common.file.util.MockPath.getNameCount()", "public int getNameCount()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.getName(int)", "public java.nio.file.Path getName(int)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.subpath(int, int)", "public java.nio.file.Path subpath(int, int)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.startsWith(java.nio.file.Path)", "public boolean startsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.startsWith(java.lang.String)", "public boolean startsWith(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.endsWith(java.nio.file.Path)", "public boolean endsWith(java.nio.file.Path)"], ["boolean", "org.apache.sshd.common.file.util.MockPath.endsWith(java.lang.String)", "public boolean endsWith(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.normalize()", "public java.nio.file.Path normalize()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolve(java.nio.file.Path)", "public java.nio.file.Path resolve(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolve(java.lang.String)", "public java.nio.file.Path resolve(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolveSibling(java.nio.file.Path)", "public java.nio.file.Path resolveSibling(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.resolveSibling(java.lang.String)", "public java.nio.file.Path resolveSibling(java.lang.String)"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.relativize(java.nio.file.Path)", "public java.nio.file.Path relativize(java.nio.file.Path)"], ["java.net.URI", "org.apache.sshd.common.file.util.MockPath.toUri()", "public java.net.URI toUri()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.toAbsolutePath()", "public java.nio.file.Path toAbsolutePath()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockPath.toRealPath(java.nio.file.LinkOption...)", "public java.nio.file.Path toRealPath(java.nio.file.LinkOption...) throws java.io.IOException"], ["java.io.File", "org.apache.sshd.common.file.util.MockPath.toFile()", "public java.io.File toFile()"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.MockPath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...)", "public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...) throws java.io.IOException"], ["java.nio.file.WatchKey", "org.apache.sshd.common.file.util.MockPath.register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...)", "public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...) throws java.io.IOException"], ["java.util.Iterator<java.nio.file.Path>", "org.apache.sshd.common.file.util.MockPath.iterator()", "public java.util.Iterator<java.nio.file.Path> iterator()"], ["int", "org.apache.sshd.common.file.util.MockPath.compareTo(java.nio.file.Path)", "public int compareTo(java.nio.file.Path)"], ["java.lang.String", "org.apache.sshd.common.file.util.MockPath.toString()", "public java.lang.String toString()"], ["int", "org.apache.sshd.common.file.util.MockPath.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["org.apache.sshd.common.file.root.RootedFileSystem", "org.apache.sshd.common.file.root.RootedFileSystem(org.apache.sshd.common.file.root.RootedFileSystemProvider, java.nio.file.Path, java.util.Map<java.lang.String, ?>)", "public org.apache.sshd.common.file.root.RootedFileSystem(org.apache.sshd.common.file.root.RootedFileSystemProvider, java.nio.file.Path, java.util.Map<java.lang.String, ?>)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.root.RootedFileSystem.getRootFileSystem()", "public java.nio.file.FileSystem getRootFileSystem()"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedFileSystem.getRoot()", "public java.nio.file.Path getRoot()"], ["org.apache.sshd.common.file.root.RootedFileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystem.provider()", "public org.apache.sshd.common.file.root.RootedFileSystemProvider provider()"], ["void", "org.apache.sshd.common.file.root.RootedFileSystem.close()", "public void close() throws java.io.IOException"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystem.isOpen()", "public boolean isOpen()"], ["boolean", "org.apache.sshd.common.file.root.RootedFileSystem.isReadOnly()", "public boolean isReadOnly()"], ["java.util.Set<java.lang.String>", "org.apache.sshd.common.file.root.RootedFileSystem.supportedFileAttributeViews()", "public java.util.Set<java.lang.String> supportedFileAttributeViews()"], ["java.nio.file.attribute.UserPrincipalLookupService", "org.apache.sshd.common.file.root.RootedFileSystem.getUserPrincipalLookupService()", "public java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()"], ["java.lang.Iterable<java.nio.file.FileStore>", "org.apache.sshd.common.file.root.RootedFileSystem.getFileStores()", "public java.lang.Iterable<java.nio.file.FileStore> getFileStores()"], ["java.lang.String", "org.apache.sshd.common.file.root.RootedFileSystem.toString()", "public java.lang.String toString()"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.root.RootedFileSystem.provider()", "public java.nio.file.spi.FileSystemProvider provider()"], ["org.apache.sshd.common.io.nio2.Nio2Acceptor", "org.apache.sshd.common.io.nio2.Nio2Acceptor(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)", "public org.apache.sshd.common.io.nio2.Nio2Acceptor(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.io.IoHandler, java.nio.channels.AsynchronousChannelGroup)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.bind(java.util.Collection<? extends java.net.SocketAddress>)", "public void bind(java.util.Collection<? extends java.net.SocketAddress>) throws java.io.IOException"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.bind(java.net.SocketAddress)", "public void bind(java.net.SocketAddress) throws java.io.IOException"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind()", "public void unbind()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind(java.util.Collection<? extends java.net.SocketAddress>)", "public void unbind(java.util.Collection<? extends java.net.SocketAddress>)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Acceptor.unbind(java.net.SocketAddress)", "public void unbind(java.net.SocketAddress)"], ["java.util.Set<java.net.SocketAddress>", "org.apache.sshd.common.io.nio2.Nio2Acceptor.getBoundAddresses()", "public java.util.Set<java.net.SocketAddress> getBoundAddresses()"], ["java.lang.String", "org.apache.sshd.common.io.nio2.Nio2Acceptor.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$6.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$6.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$6.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.KexProposalOption[]", "org.apache.sshd.common.kex.KexProposalOption.values()", "public static org.apache.sshd.common.kex.KexProposalOption[] values()"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.valueOf(java.lang.String)", "public static org.apache.sshd.common.kex.KexProposalOption valueOf(java.lang.String)"], ["int", "org.apache.sshd.common.kex.KexProposalOption.getProposalIndex()", "public final int getProposalIndex()"], ["java.lang.String", "org.apache.sshd.common.kex.KexProposalOption.getDescription()", "public final java.lang.String getDescription()"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.fromName(java.lang.String)", "public static org.apache.sshd.common.kex.KexProposalOption fromName(java.lang.String)"], ["org.apache.sshd.common.kex.KexProposalOption", "org.apache.sshd.common.kex.KexProposalOption.fromProposalIndex(int)", "public static org.apache.sshd.common.kex.KexProposalOption fromProposalIndex(int)"], ["org.apache.sshd.common.channel.BufferedIoOutputStream", "org.apache.sshd.common.channel.BufferedIoOutputStream(java.lang.Object, org.apache.sshd.common.io.IoOutputStream)", "public org.apache.sshd.common.channel.BufferedIoOutputStream(java.lang.Object, org.apache.sshd.common.io.IoOutputStream)"], ["java.lang.Object", "org.apache.sshd.common.channel.BufferedIoOutputStream.getId()", "public java.lang.Object getId()"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.common.channel.BufferedIoOutputStream.writePacket(org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.channel.BufferedIoOutputStream.toString()", "public java.lang.String toString()"], ["default", "org.apache.sshd.common.channel.Channel.void addRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)", "public default void addRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["default", "org.apache.sshd.common.channel.Channel.void removeRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)", "public default void removeRequestHandlers(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["<T> T", "org.apache.sshd.common.channel.Channel.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public default <T> T resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.channel.Channel.resolveAttribute(org.apache.sshd.common.channel.Channel, org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public static <T> T resolveAttribute(org.apache.sshd.common.channel.Channel, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.channel.ChannelPipedOutputStream", "org.apache.sshd.common.channel.ChannelPipedOutputStream(org.apache.sshd.common.channel.ChannelPipedSink)", "public org.apache.sshd.common.channel.ChannelPipedOutputStream(org.apache.sshd.common.channel.ChannelPipedSink)"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["boolean", "org.apache.sshd.common.channel.ChannelPipedOutputStream.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.ChannelPipedOutputStream.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.common.channel.ChannelPipedInputStream", "org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)", "public org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)"], ["org.apache.sshd.common.channel.ChannelPipedInputStream", "org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.channel.Window, long)", "public org.apache.sshd.common.channel.ChannelPipedInputStream(org.apache.sshd.common.channel.Window, long)"], ["boolean", "org.apache.sshd.common.channel.ChannelPipedInputStream.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.setTimeout(long)", "public void setTimeout(long)"], ["long", "org.apache.sshd.common.channel.ChannelPipedInputStream.getTimeout()", "public long getTimeout()"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.available()", "public int available() throws java.io.IOException"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.apache.sshd.common.channel.ChannelPipedInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.eof()", "public void eof()"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.sshd.common.channel.ChannelPipedInputStream.receive(byte[], int, int)", "public void receive(byte[], int, int) throws java.io.IOException"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String)", "public org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelException", "org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelException(int, java.lang.String, java.lang.Throwable)"], ["int", "org.apache.sshd.common.channel.exception.SshChannelException.getChannelId()", "public int getChannelId()"], ["org.apache.sshd.common.forward.TcpipClientChannel", "org.apache.sshd.common.forward.TcpipClientChannel(org.apache.sshd.common.forward.TcpipClientChannel$Type, org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.common.forward.TcpipClientChannel(org.apache.sshd.common.forward.TcpipClientChannel$Type, org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.common.forward.TcpipClientChannel.getOpenFuture()", "public org.apache.sshd.client.future.OpenFuture getOpenFuture()"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type", "org.apache.sshd.common.forward.TcpipClientChannel.getTcpipChannelType()", "public org.apache.sshd.common.forward.TcpipClientChannel$Type getTcpipChannelType()"], ["synchronized", "org.apache.sshd.common.forward.TcpipClientChannel.org.apache.sshd.client.future.OpenFuture open()", "public synchronized org.apache.sshd.client.future.OpenFuture open() throws java.io.IOException"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.TcpipClientChannel.getTunnelEntrance()", "public org.apache.sshd.common.util.net.SshdSocketAddress getTunnelEntrance()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.TcpipClientChannel.getTunnelExit()", "public org.apache.sshd.common.util.net.SshdSocketAddress getTunnelExit()"], ["org.apache.sshd.common.session.SessionWorkBuffer", "org.apache.sshd.common.session.SessionWorkBuffer(org.apache.sshd.common.session.Session)", "public org.apache.sshd.common.session.SessionWorkBuffer(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.session.SessionWorkBuffer.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["void", "org.apache.sshd.common.session.SessionWorkBuffer.clear(boolean)", "public void clear(boolean)"], ["void", "org.apache.sshd.common.session.SessionWorkBuffer.forceClear(boolean)", "public void forceClear(boolean)"], ["org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.session.helpers.DefaultUnknownChannelReferenceHandler.handleUnknownChannelCommand(org.apache.sshd.common.session.ConnectionService, byte, int, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.Channel handleUnknownChannelCommand(org.apache.sshd.common.session.ConnectionService, byte, int, org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)", "public void setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["java.util.Collection<org.apache.sshd.common.forward.PortForwardingEventListenerManager>", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getRegisteredManagers()", "public java.util.Collection<org.apache.sshd.common.forward.PortForwardingEventListenerManager> getRegisteredManagers()"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)", "public boolean addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)", "public boolean removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["java.util.Collection<org.apache.sshd.common.channel.Channel>", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getChannels()", "public java.util.Collection<org.apache.sshd.common.channel.Channel> getChannels()"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getSession()", "public org.apache.sshd.common.session.helpers.AbstractSession getSession()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.start()", "public void start()"], ["org.apache.sshd.common.forward.ForwardingFilter", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getForwardingFilter()", "public org.apache.sshd.common.forward.ForwardingFilter getForwardingFilter()"], ["org.apache.sshd.server.x11.X11ForwardSupport", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getX11ForwardSupport()", "public org.apache.sshd.server.x11.X11ForwardSupport getX11ForwardSupport()"], ["org.apache.sshd.agent.common.AgentForwardSupport", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getAgentForwardSupport()", "public org.apache.sshd.agent.common.AgentForwardSupport getAgentForwardSupport()"], ["int", "org.apache.sshd.common.session.helpers.AbstractConnectionService.registerChannel(org.apache.sshd.common.channel.Channel)", "public int registerChannel(org.apache.sshd.common.channel.Channel) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.unregisterChannel(org.apache.sshd.common.channel.Channel)", "public void unregisterChannel(org.apache.sshd.common.channel.Channel)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.process(int, org.apache.sshd.common.util.buffer.Buffer)", "public void process(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.session.helpers.AbstractConnectionService.isAllowMoreSessions()", "public boolean isAllowMoreSessions()"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.setAllowMoreSessions(boolean)", "public void setAllowMoreSessions(boolean)"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelOpenConfirmation(org.apache.sshd.common.util.buffer.Buffer)", "public void channelOpenConfirmation(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelOpenFailure(org.apache.sshd.common.util.buffer.Buffer)", "public void channelOpenFailure(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelData(org.apache.sshd.common.util.buffer.Buffer)", "public void channelData(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelExtendedData(org.apache.sshd.common.util.buffer.Buffer)", "public void channelExtendedData(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)", "public void channelWindowAdjust(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelEof(org.apache.sshd.common.util.buffer.Buffer)", "public void channelEof(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelClose(org.apache.sshd.common.util.buffer.Buffer)", "public void channelClose(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelRequest(org.apache.sshd.common.util.buffer.Buffer)", "public void channelRequest(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelFailure(org.apache.sshd.common.util.buffer.Buffer)", "public void channelFailure(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.common.session.helpers.AbstractConnectionService.channelSuccess(org.apache.sshd.common.util.buffer.Buffer)", "public void channelSuccess(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.session.helpers.AbstractConnectionService.resolveUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler resolveUnknownChannelReferenceHandler()"], ["java.lang.String", "org.apache.sshd.common.session.helpers.AbstractConnectionService.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.session.helpers.AbstractConnectionService.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory$1.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.auth.pubkey.KeyPairIdentity", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity(org.apache.sshd.common.signature.SignatureFactoriesManager, org.apache.sshd.common.signature.SignatureFactoriesManager, java.security.KeyPair)", "public org.apache.sshd.client.auth.pubkey.KeyPairIdentity(org.apache.sshd.common.signature.SignatureFactoriesManager, org.apache.sshd.common.signature.SignatureFactoriesManager, java.security.KeyPair)"], ["java.security.PublicKey", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.getPublicKey()", "public java.security.PublicKey getPublicKey()"], ["byte[]", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.sign(byte[])", "public byte[] sign(byte[]) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.KeyPairIdentity.toString()", "public java.lang.String toString()"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories[]", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.values()", "public static org.apache.sshd.client.auth.BuiltinUserAuthFactories[] values()"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.valueOf(java.lang.String)", "public static org.apache.sshd.client.auth.BuiltinUserAuthFactories valueOf(java.lang.String)"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.create()", "public org.apache.sshd.client.auth.UserAuthFactory create()"], ["java.lang.String", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.getName()", "public java.lang.String getName()"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.fromFactoryName(java.lang.String)", "public static org.apache.sshd.client.auth.UserAuthFactory fromFactoryName(java.lang.String)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String)", "public static org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.lang.String)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String...)", "public static org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.lang.String...)"], ["org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.parseFactoriesList(java.util.Collection<java.lang.String>)", "public static org.apache.sshd.client.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.client.auth.UserAuthFactory", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.resolveFactory(java.lang.String)", "public static org.apache.sshd.client.auth.UserAuthFactory resolveFactory(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.client.auth.BuiltinUserAuthFactories.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path)", "public org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path)"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path, java.nio.file.LinkOption...)", "public org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, java.nio.file.Path, java.nio.file.LinkOption...)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.getDelegateVerifier()", "public org.apache.sshd.client.keyverifier.ServerKeyVerifier getDelegateVerifier()"], ["org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.getModifiedServerKeyAcceptor()", "public org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor getModifiedServerKeyAcceptor()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.setModifiedServerKeyAcceptor(org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor)", "public void setModifiedServerKeyAcceptor(org.apache.sshd.client.keyverifier.ModifiedServerKeyAcceptor)"], ["boolean", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)", "public boolean verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["boolean", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier.acceptModifiedServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey, java.security.PublicKey)", "public boolean acceptModifiedServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey, java.security.PublicKey) throws java.lang.Exception"], ["org.apache.sshd.client.channel.ClientChannel$Streaming[]", "org.apache.sshd.client.channel.ClientChannel$Streaming.values()", "public static org.apache.sshd.client.channel.ClientChannel$Streaming[] values()"], ["org.apache.sshd.client.channel.ClientChannel$Streaming", "org.apache.sshd.client.channel.ClientChannel$Streaming.valueOf(java.lang.String)", "public static org.apache.sshd.client.channel.ClientChannel$Streaming valueOf(java.lang.String)"], ["org.apache.sshd.client.channel.ChannelSession", "org.apache.sshd.client.channel.ChannelSession()", "public org.apache.sshd.client.channel.ChannelSession()"], ["org.apache.sshd.client.session.ClientConnectionServiceFactory", "org.apache.sshd.client.session.ClientConnectionServiceFactory()", "public org.apache.sshd.client.session.ClientConnectionServiceFactory()"], ["java.lang.String", "org.apache.sshd.client.session.ClientConnectionServiceFactory.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.Service", "org.apache.sshd.client.session.ClientConnectionServiceFactory.create(org.apache.sshd.common.session.Session)", "public org.apache.sshd.common.Service create(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientUserAuthService", "org.apache.sshd.client.session.ClientUserAuthService(org.apache.sshd.common.session.Session)", "public org.apache.sshd.client.session.ClientUserAuthService(org.apache.sshd.common.session.Session)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientUserAuthService.getSession()", "public org.apache.sshd.client.session.ClientSession getSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.ClientUserAuthService.getClientSession()", "public org.apache.sshd.client.session.ClientSession getClientSession()"], ["void", "org.apache.sshd.client.session.ClientUserAuthService.start()", "public void start()"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.session.ClientUserAuthService.auth(java.lang.String)", "public org.apache.sshd.client.future.AuthFuture auth(java.lang.String) throws java.io.IOException"], ["void", "org.apache.sshd.client.session.ClientUserAuthService.process(int, org.apache.sshd.common.util.buffer.Buffer)", "public void process(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.session.ClientUserAuthService.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$2.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$2.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$3.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$3.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.auth.password.UserAuthPassword", "org.apache.sshd.server.auth.password.UserAuthPassword()", "public org.apache.sshd.server.auth.password.UserAuthPassword()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.password.UserAuthPassword.doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean)", "public java.lang.Boolean doAuth(org.apache.sshd.common.util.buffer.Buffer, boolean) throws java.lang.Exception"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased()", "public org.apache.sshd.server.auth.hostbased.UserAuthHostBased()"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.server.auth.hostbased.UserAuthHostBased(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBased.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getName()", "public final java.lang.String getName()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getUsername()", "public java.lang.String getUsername()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.getService()", "public java.lang.String getService()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.auth.AbstractUserAuth.getServerSession()", "public org.apache.sshd.server.session.ServerSession getServerSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.auth.AbstractUserAuth.getSession()", "public org.apache.sshd.server.session.ServerSession getSession()"], ["java.lang.Boolean", "org.apache.sshd.server.auth.AbstractUserAuth.auth(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer)", "public java.lang.Boolean auth(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["java.lang.Boolean", "org.apache.sshd.server.auth.AbstractUserAuth.next(org.apache.sshd.common.util.buffer.Buffer)", "public java.lang.Boolean next(org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.server.auth.AbstractUserAuth.destroy()", "public void destroy()"], ["java.lang.String", "org.apache.sshd.server.auth.AbstractUserAuth.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.auth.AbstractUserAuth.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator()", "public org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator()"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator.generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)", "public org.apache.sshd.server.auth.keyboard.InteractiveChallenge generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.DefaultKeyboardInteractiveAuthenticator.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>)", "public boolean authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>) throws java.lang.Exception"], ["org.apache.sshd.server.kex.Moduli$DhGroup", "org.apache.sshd.server.kex.Moduli$DhGroup(int, java.math.BigInteger, java.math.BigInteger)", "public org.apache.sshd.server.kex.Moduli$DhGroup(int, java.math.BigInteger, java.math.BigInteger)"], ["int", "org.apache.sshd.server.kex.Moduli$DhGroup.getSize()", "public int getSize()"], ["java.math.BigInteger", "org.apache.sshd.server.kex.Moduli$DhGroup.getG()", "public java.math.BigInteger getG()"], ["java.math.BigInteger", "org.apache.sshd.server.kex.Moduli$DhGroup.getP()", "public java.math.BigInteger getP()"], ["java.lang.String", "org.apache.sshd.server.kex.Moduli$DhGroup.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.channel.AbstractServerChannel.getServerSession()", "public org.apache.sshd.server.session.ServerSession getServerSession()"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.server.channel.AbstractServerChannel.open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.client.future.OpenFuture open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.server.channel.AbstractServerChannel.handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer)", "public void handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.server.channel.AbstractServerChannel.handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)", "public void handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["default", "org.apache.sshd.server.ExitCallback.void onExit(int)", "public default void onExit(int)"], ["java.lang.String", "org.apache.sshd.server.command.AbstractCommandSupport.getCommand()", "public java.lang.String getCommand()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.command.AbstractCommandSupport.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.command.AbstractCommandSupport.getServerSession()", "public org.apache.sshd.server.session.ServerSession getServerSession()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setSession(org.apache.sshd.server.session.ServerSession)", "public void setSession(org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.server.command.AbstractCommandSupport.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["java.io.InputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getInputStream()", "public java.io.InputStream getInputStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setInputStream(java.io.InputStream)", "public void setInputStream(java.io.InputStream)"], ["java.io.OutputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getOutputStream()", "public java.io.OutputStream getOutputStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setOutputStream(java.io.OutputStream)", "public void setOutputStream(java.io.OutputStream)"], ["java.io.OutputStream", "org.apache.sshd.server.command.AbstractCommandSupport.getErrorStream()", "public java.io.OutputStream getErrorStream()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setErrorStream(java.io.OutputStream)", "public void setErrorStream(java.io.OutputStream)"], ["org.apache.sshd.server.ExitCallback", "org.apache.sshd.server.command.AbstractCommandSupport.getExitCallback()", "public org.apache.sshd.server.ExitCallback getExitCallback()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.setExitCallback(org.apache.sshd.server.ExitCallback)", "public void setExitCallback(org.apache.sshd.server.ExitCallback)"], ["org.apache.sshd.server.Environment", "org.apache.sshd.server.command.AbstractCommandSupport.getEnvironment()", "public org.apache.sshd.server.Environment getEnvironment()"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.start(org.apache.sshd.server.Environment)", "public void start(org.apache.sshd.server.Environment) throws java.io.IOException"], ["void", "org.apache.sshd.server.command.AbstractCommandSupport.destroy()", "public void destroy()"], ["java.lang.String", "org.apache.sshd.server.command.AbstractCommandSupport.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.forward.DirectTcpipFactory", "org.apache.sshd.server.forward.DirectTcpipFactory()", "public org.apache.sshd.server.forward.DirectTcpipFactory()"], ["org.apache.sshd.server.forward.X11ForwardingFilter", "org.apache.sshd.server.forward.X11ForwardingFilter.of(boolean)", "public static org.apache.sshd.server.forward.X11ForwardingFilter of(boolean)"], ["org.apache.sshd.server.session.ServerUserAuthServiceFactory", "org.apache.sshd.server.session.ServerUserAuthServiceFactory()", "public org.apache.sshd.server.session.ServerUserAuthServiceFactory()"], ["org.apache.sshd.common.Service", "org.apache.sshd.server.session.ServerUserAuthServiceFactory.create(org.apache.sshd.common.session.Session)", "public org.apache.sshd.common.Service create(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["org.apache.sshd.server.session.ServerUserAuthService", "org.apache.sshd.server.session.ServerUserAuthService(org.apache.sshd.common.session.Session)", "public org.apache.sshd.server.session.ServerUserAuthService(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["org.apache.sshd.server.auth.WelcomeBannerPhase", "org.apache.sshd.server.session.ServerUserAuthService.getWelcomePhase()", "public org.apache.sshd.server.auth.WelcomeBannerPhase getWelcomePhase()"], ["void", "org.apache.sshd.server.session.ServerUserAuthService.start()", "public void start()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerUserAuthService.getSession()", "public org.apache.sshd.server.session.ServerSession getSession()"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerUserAuthService.getServerSession()", "public org.apache.sshd.server.session.ServerSession getServerSession()"], ["synchronized", "org.apache.sshd.server.session.ServerUserAuthService.void process(int, org.apache.sshd.common.util.buffer.Buffer)", "public synchronized void process(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.io.IoWriteFuture", "org.apache.sshd.server.session.ServerUserAuthService.sendWelcomeBanner(org.apache.sshd.server.session.ServerSession)", "public org.apache.sshd.common.io.IoWriteFuture sendWelcomeBanner(org.apache.sshd.server.session.ServerSession) throws java.io.IOException"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.ServerUserAuthService.getFactoryManager()", "public org.apache.sshd.server.ServerFactoryManager getFactoryManager()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.session.ServerUserAuthService.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.agent.unix.AgentServerProxy", "org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService) throws java.io.IOException"], ["org.apache.sshd.agent.unix.AgentServerProxy", "org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.unix.AgentServerProxy(org.apache.sshd.common.session.ConnectionService, org.apache.sshd.common.util.threads.CloseableExecutorService) throws java.io.IOException"], ["boolean", "org.apache.sshd.agent.unix.AgentServerProxy.isOpen()", "public boolean isOpen()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.agent.unix.AgentServerProxy.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["java.lang.String", "org.apache.sshd.agent.unix.AgentServerProxy.getId()", "public java.lang.String getId()"], ["synchronized", "org.apache.sshd.agent.unix.AgentServerProxy.void close()", "public synchronized void close() throws java.io.IOException"], ["java.io.IOException", "org.apache.sshd.agent.unix.AgentServerProxy.toIOException(int)", "public static java.io.IOException toIOException(int)"], ["java.util.Iterator<java.nio.file.Path>", "org.apache.sshd.common.file.root.RootedFileSystemProvider$1.iterator()", "public java.util.Iterator<java.nio.file.Path> iterator()"], ["void", "org.apache.sshd.common.file.root.RootedFileSystemProvider$1.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory()", "public org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory()"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)", "public org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactoryFactory.create(org.apache.sshd.common.FactoryManager)", "public org.apache.sshd.common.io.IoServiceFactory create(org.apache.sshd.common.FactoryManager)"], ["java.lang.String", "org.apache.sshd.common.kex.KeyExchange.getGroupKexOpcodeName(int)", "public static java.lang.String getGroupKexOpcodeName(int)"], ["java.lang.String", "org.apache.sshd.common.kex.KeyExchange.getSimpleKexOpcodeName(int)", "public static java.lang.String getSimpleKexOpcodeName(int)"], ["void", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getSession()", "public org.apache.sshd.common.session.helpers.AbstractSession getSession()"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getHash()", "public org.apache.sshd.common.digest.Digest getHash()"], ["byte[]", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getH()", "public byte[] getH()"], ["byte[]", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getK()", "public byte[] getK()"], ["java.lang.String", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.kex.dh.AbstractDHKeyExchange.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getG()", "public static byte[] getG()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP1()", "public static byte[] getP1()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP14()", "public static byte[] getP14()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP15()", "public static byte[] getP15()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP16()", "public static byte[] getP16()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP17()", "public static byte[] getP17()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getP18()", "public static byte[] getP18()"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.getOakleyGroupPrimeValue(java.lang.String)", "public static byte[] getOakleyGroupPrimeValue(java.lang.String)"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.lang.String)", "public static byte[] readOakleyGroupPrimeValue(java.lang.String) throws java.io.IOError"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.InputStream)", "public static byte[] readOakleyGroupPrimeValue(java.io.InputStream) throws java.io.IOException"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.Reader)", "public static byte[] readOakleyGroupPrimeValue(java.io.Reader) throws java.io.IOException"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.io.BufferedReader)", "public static byte[] readOakleyGroupPrimeValue(java.io.BufferedReader) throws java.io.IOException"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.readOakleyGroupPrimeValue(java.util.stream.Stream<java.lang.String>)", "public static byte[] readOakleyGroupPrimeValue(java.util.stream.Stream<java.lang.String>) throws java.lang.NumberFormatException"], ["byte[]", "org.apache.sshd.common.kex.DHGroupData.parseOakleyGroupPrimeValue(java.lang.String)", "public static byte[] parseOakleyGroupPrimeValue(java.lang.String) throws java.lang.NumberFormatException"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.BuiltinDHFactories$10.create(java.lang.Object...)", "public org.apache.sshd.common.kex.ECDH create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$10.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$10.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.Service", "org.apache.sshd.common.ServiceFactory.create(java.util.Collection<? extends org.apache.sshd.common.ServiceFactory>, java.lang.String, org.apache.sshd.common.session.Session)", "public static org.apache.sshd.common.Service create(java.util.Collection<? extends org.apache.sshd.common.ServiceFactory>, java.lang.String, org.apache.sshd.common.session.Session) throws java.io.IOException"], ["default", "org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolverManager.org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver resolveChannelStreamPacketWriterResolver()", "public default org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver resolveChannelStreamPacketWriterResolver()"], ["default", "org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolverManager.org.apache.sshd.common.io.PacketWriter resolveChannelStreamPacketWriter(org.apache.sshd.common.channel.Channel, byte)", "public default org.apache.sshd.common.io.PacketWriter resolveChannelStreamPacketWriter(org.apache.sshd.common.channel.Channel, byte)"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type[]", "org.apache.sshd.common.forward.TcpipClientChannel$Type.values()", "public static org.apache.sshd.common.forward.TcpipClientChannel$Type[] values()"], ["org.apache.sshd.common.forward.TcpipClientChannel$Type", "org.apache.sshd.common.forward.TcpipClientChannel$Type.valueOf(java.lang.String)", "public static org.apache.sshd.common.forward.TcpipClientChannel$Type valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.forward.TcpipClientChannel$Type.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.forward.SocksProxy", "org.apache.sshd.common.forward.SocksProxy(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.common.forward.SocksProxy(org.apache.sshd.common.session.ConnectionService)"], ["void", "org.apache.sshd.common.forward.SocksProxy.sessionCreated(org.apache.sshd.common.io.IoSession)", "public void sessionCreated(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.SocksProxy.sessionClosed(org.apache.sshd.common.io.IoSession)", "public void sessionClosed(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.SocksProxy.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.SocksProxy.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)", "public void exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable) throws java.lang.Exception"], ["org.apache.sshd.common.forward.SocksProxy$Socks5", "org.apache.sshd.common.forward.SocksProxy$Socks5(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)", "public org.apache.sshd.common.forward.SocksProxy$Socks5(org.apache.sshd.common.forward.SocksProxy, org.apache.sshd.common.io.IoSession)"], ["org.apache.sshd.common.session.Session$TimeoutStatus[]", "org.apache.sshd.common.session.Session$TimeoutStatus.values()", "public static org.apache.sshd.common.session.Session$TimeoutStatus[] values()"], ["org.apache.sshd.common.session.Session$TimeoutStatus", "org.apache.sshd.common.session.Session$TimeoutStatus.valueOf(java.lang.String)", "public static org.apache.sshd.common.session.Session$TimeoutStatus valueOf(java.lang.String)"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.sessionCreated(org.apache.sshd.common.io.IoSession)", "public void sessionCreated(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.sessionClosed(org.apache.sshd.common.io.IoSession)", "public void sessionClosed(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)", "public void exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.AbstractSessionIoHandler.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["org.apache.sshd.common.session.SessionListener$Event[]", "org.apache.sshd.common.session.SessionListener$Event.values()", "public static org.apache.sshd.common.session.SessionListener$Event[] values()"], ["org.apache.sshd.common.session.SessionListener$Event", "org.apache.sshd.common.session.SessionListener$Event.valueOf(java.lang.String)", "public static org.apache.sshd.common.session.SessionListener$Event valueOf(java.lang.String)"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.config.SshClientConfigFileReader.configure(C, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <C extends org.apache.sshd.client.SshClient> C configure(C, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory()", "public org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientHostKeys()", "public org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider getClientHostKeys()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)", "public void setClientHostKeys(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientUsername()", "public java.lang.String getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientUsername(java.lang.String)", "public void setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.getClientHostname()", "public java.lang.String getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.setClientHostname(java.lang.String)", "public void setClientHostname(java.lang.String)"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBased", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.create()", "public org.apache.sshd.client.auth.hostbased.UserAuthHostBased create()"], ["java.lang.Object", "org.apache.sshd.client.auth.hostbased.UserAuthHostBasedFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.agent.SshAgent)", "public org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator(org.apache.sshd.client.session.ClientSession, org.apache.sshd.agent.SshAgent) throws java.io.IOException"], ["boolean", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.hasNext()", "public boolean hasNext()"], ["org.apache.sshd.client.auth.pubkey.KeyAgentIdentity", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.next()", "public org.apache.sshd.client.auth.pubkey.KeyAgentIdentity next()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.SshAgentPublicKeyIterator.next()", "public java.lang.Object next()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory()", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory()"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.client.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.create()", "public org.apache.sshd.client.auth.pubkey.UserAuthPublicKey create()"], ["java.lang.Object", "org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.create()", "public java.lang.Object create()"], ["boolean", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.isInteractionAllowed(org.apache.sshd.client.session.ClientSession)", "public boolean isInteractionAllowed(org.apache.sshd.client.session.ClientSession)"], ["java.lang.String[]", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.interactive(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean[])", "public java.lang.String[] interactive(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean[])"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.getUpdatedPassword(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)", "public java.lang.String getUpdatedPassword(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserInteraction$1.toString()", "public java.lang.String toString()"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.java.lang.String getUserAuthFactoriesNameList()", "public default java.lang.String getUserAuthFactoriesNameList()"], ["java.util.List<java.lang.String>", "org.apache.sshd.client.ClientAuthenticationManager.getUserAuthFactoriesNames()", "public default java.util.List<java.lang.String> getUserAuthFactoriesNames()"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNameList(java.lang.String)", "public default void setUserAuthFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNames(java.lang.String...)", "public default void setUserAuthFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.client.ClientAuthenticationManager.void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)", "public default void setUserAuthFactoriesNames(java.util.Collection<java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient$1.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.client.kex.DHGEXClient$1.create()", "public org.apache.sshd.common.kex.KeyExchange create()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.client.kex.DHGEXClient$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.lang.String, int)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.lang.String, int, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int, java.net.SocketAddress) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(org.apache.sshd.client.config.hosts.HostConfigEntry)", "public org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress) throws java.io.IOException"], ["boolean", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.client.simple.AbstractSimpleClientSessionCreator$1.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.ClientChannel.validateCommandExitStatusCode(java.lang.String, java.lang.Integer)", "public static void validateCommandExitStatusCode(java.lang.String, java.lang.Integer) throws java.rmi.RemoteException"], ["org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler", "org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.Integer>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)", "public org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.Integer>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.channel.exit.ExitStatusChannelRequestHandler.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.getSession()", "public final org.apache.sshd.client.session.ClientSession getSession()"], ["java.lang.String", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.subsystem.AbstractSubsystemClient.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.client.future.DefaultConnectFuture", "org.apache.sshd.client.future.DefaultConnectFuture(java.lang.Object, java.lang.Object)", "public org.apache.sshd.client.future.DefaultConnectFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.future.DefaultConnectFuture.verify(long)", "public org.apache.sshd.client.future.ConnectFuture verify(long) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.future.DefaultConnectFuture.getSession()", "public org.apache.sshd.client.session.ClientSession getSession()"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultConnectFuture.getException()", "public java.lang.Throwable getException()"], ["boolean", "org.apache.sshd.client.future.DefaultConnectFuture.isConnected()", "public boolean isConnected()"], ["void", "org.apache.sshd.client.future.DefaultConnectFuture.setSession(org.apache.sshd.client.session.ClientSession)", "public void setSession(org.apache.sshd.client.session.ClientSession)"], ["void", "org.apache.sshd.client.future.DefaultConnectFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultConnectFuture.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientSession$ClientSessionEvent[]", "org.apache.sshd.client.session.ClientSession$ClientSessionEvent.values()", "public static org.apache.sshd.client.session.ClientSession$ClientSessionEvent[] values()"], ["org.apache.sshd.client.session.ClientSession$ClientSessionEvent", "org.apache.sshd.client.session.ClientSession$ClientSessionEvent.valueOf(java.lang.String)", "public static org.apache.sshd.client.session.ClientSession$ClientSessionEvent valueOf(java.lang.String)"], ["org.apache.sshd.client.session.forward.DynamicPortForwardingTracker", "org.apache.sshd.client.session.forward.DynamicPortForwardingTracker(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.client.session.forward.DynamicPortForwardingTracker(org.apache.sshd.client.session.ClientSession, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["void", "org.apache.sshd.client.session.forward.DynamicPortForwardingTracker.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path)", "public org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path)"], ["org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path, java.nio.file.LinkOption...)", "public org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator(java.nio.file.Path, java.nio.file.LinkOption...)"], ["boolean", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)", "public boolean authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["java.nio.file.Path", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator.getDefaultAuthorizedKeysFile()", "public static java.nio.file.Path getDefaultAuthorizedKeysFile()"], ["java.util.List<org.apache.sshd.common.config.keys.AuthorizedKeyEntry>", "org.apache.sshd.server.config.keys.AuthorizedKeysAuthenticator.readDefaultAuthorizedKeys(java.nio.file.OpenOption...)", "public static java.util.List<org.apache.sshd.common.config.keys.AuthorizedKeyEntry> readDefaultAuthorizedKeys(java.nio.file.OpenOption...) throws java.io.IOException"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory()", "public org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory()"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.server.auth.hostbased.UserAuthHostBased", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.create()", "public org.apache.sshd.server.auth.hostbased.UserAuthHostBased create()"], ["java.lang.Object", "org.apache.sshd.server.auth.hostbased.UserAuthHostBasedFactory.create()", "public java.lang.Object create()"], ["boolean", "org.apache.sshd.server.auth.pubkey.StaticPublickeyAuthenticator.isAccepted()", "public final boolean isAccepted()"], ["boolean", "org.apache.sshd.server.auth.pubkey.StaticPublickeyAuthenticator.authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)", "public final boolean authenticate(java.lang.String, java.security.PublicKey, org.apache.sshd.server.session.ServerSession)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories[]", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.values()", "public static org.apache.sshd.server.auth.BuiltinUserAuthFactories[] values()"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.valueOf(java.lang.String)", "public static org.apache.sshd.server.auth.BuiltinUserAuthFactories valueOf(java.lang.String)"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.create()", "public org.apache.sshd.server.auth.UserAuthFactory create()"], ["java.lang.String", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.getName()", "public java.lang.String getName()"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.fromFactoryName(java.lang.String)", "public static org.apache.sshd.server.auth.UserAuthFactory fromFactoryName(java.lang.String)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String)", "public static org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.lang.String)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.lang.String...)", "public static org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.lang.String...)"], ["org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.parseFactoriesList(java.util.Collection<java.lang.String>)", "public static org.apache.sshd.server.auth.BuiltinUserAuthFactories$ParseResult parseFactoriesList(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.server.auth.UserAuthFactory", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.resolveFactory(java.lang.String)", "public static org.apache.sshd.server.auth.UserAuthFactory resolveFactory(java.lang.String)"], ["java.lang.Object", "org.apache.sshd.server.auth.BuiltinUserAuthFactories.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.shell.UnknownCommandFactory", "org.apache.sshd.server.shell.UnknownCommandFactory()", "public org.apache.sshd.server.shell.UnknownCommandFactory()"], ["java.lang.String", "org.apache.sshd.server.shell.UnknownCommandFactory.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.UnknownCommandFactory.createCommand(java.lang.String)", "public org.apache.sshd.server.command.Command createCommand(java.lang.String)"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.server.kex.DHGEXServer$1.create()", "public org.apache.sshd.common.kex.KeyExchange create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer$1.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGEXServer$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.server.kex.DHGEXServer$1.create()", "public java.lang.Object create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.server.kex.DHGServer.newFactory(org.apache.sshd.common.kex.DHFactory)", "public static org.apache.sshd.common.kex.KeyExchangeFactory newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.server.kex.DHGServer.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["boolean", "org.apache.sshd.server.kex.DHGServer.next(int, org.apache.sshd.common.util.buffer.Buffer)", "public boolean next(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.server.x11.DefaultX11ForwardSupport", "org.apache.sshd.server.x11.DefaultX11ForwardSupport(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.server.x11.DefaultX11ForwardSupport(org.apache.sshd.common.session.ConnectionService)"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.close()", "public void close() throws java.io.IOException"], ["synchronized", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.java.lang.String createDisplay(boolean, java.lang.String, java.lang.String, int)", "public synchronized java.lang.String createDisplay(boolean, java.lang.String, java.lang.String, int) throws java.io.IOException"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.sessionCreated(org.apache.sshd.common.io.IoSession)", "public void sessionCreated(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.sessionClosed(org.apache.sshd.common.io.IoSession)", "public void sessionClosed(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["void", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)", "public void exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.server.x11.DefaultX11ForwardSupport.toString()", "public java.lang.String toString()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.global.OpenSshHostKeysHandler$1.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.global.OpenSshHostKeysHandler$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["boolean", "org.apache.sshd.server.forward.TcpForwardingFilter$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.TcpForwardingFilter$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["java.lang.String", "org.apache.sshd.server.forward.TcpForwardingFilter$1.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)", "public boolean canForwardAgent(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)", "public boolean canForwardX11(org.apache.sshd.common.session.Session, java.lang.String)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.forward.ForwardingFilter$1.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.AbstractServerSession.getFactoryManager()", "public org.apache.sshd.server.ServerFactoryManager getFactoryManager()"], ["org.apache.sshd.server.session.ServerProxyAcceptor", "org.apache.sshd.server.session.AbstractServerSession.getServerProxyAcceptor()", "public org.apache.sshd.server.session.ServerProxyAcceptor getServerProxyAcceptor()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)", "public void setServerProxyAcceptor(org.apache.sshd.server.session.ServerProxyAcceptor)"], ["java.net.SocketAddress", "org.apache.sshd.server.session.AbstractServerSession.getClientAddress()", "public java.net.SocketAddress getClientAddress()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setClientAddress(java.net.SocketAddress)", "public void setClientAddress(java.net.SocketAddress)"], ["org.apache.sshd.server.auth.password.PasswordAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getPasswordAuthenticator()", "public org.apache.sshd.server.auth.password.PasswordAuthenticator getPasswordAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)", "public void setPasswordAuthenticator(org.apache.sshd.server.auth.password.PasswordAuthenticator)"], ["org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getPublickeyAuthenticator()", "public org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator getPublickeyAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)", "public void setPublickeyAuthenticator(org.apache.sshd.server.auth.pubkey.PublickeyAuthenticator)"], ["org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getKeyboardInteractiveAuthenticator()", "public org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator getKeyboardInteractiveAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)", "public void setKeyboardInteractiveAuthenticator(org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator)"], ["org.apache.sshd.server.auth.gss.GSSAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getGSSAuthenticator()", "public org.apache.sshd.server.auth.gss.GSSAuthenticator getGSSAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)", "public void setGSSAuthenticator(org.apache.sshd.server.auth.gss.GSSAuthenticator)"], ["org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator", "org.apache.sshd.server.session.AbstractServerSession.getHostBasedAuthenticator()", "public org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator getHostBasedAuthenticator()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)", "public void setHostBasedAuthenticator(org.apache.sshd.server.auth.hostbased.HostBasedAuthenticator)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>", "org.apache.sshd.server.session.AbstractServerSession.getUserAuthFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>> getUserAuthFactories()"], ["void", "org.apache.sshd.server.session.AbstractServerSession.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)", "public void setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.server.auth.UserAuth>>)"], ["void", "org.apache.sshd.server.session.AbstractServerSession.startService(java.lang.String)", "public void startService(java.lang.String) throws java.lang.Exception"], ["java.security.KeyPair", "org.apache.sshd.server.session.AbstractServerSession.getHostKey()", "public java.security.KeyPair getHostKey()"], ["int", "org.apache.sshd.server.session.AbstractServerSession.getActiveSessionCountForUser(java.lang.String)", "public int getActiveSessionCountForUser(java.lang.String)"], ["long", "org.apache.sshd.server.session.AbstractServerSession.getId()", "public long getId()"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.server.session.AbstractServerSession.getFactoryManager()", "public org.apache.sshd.common.FactoryManager getFactoryManager()"], ["org.apache.sshd.agent.local.LocalAgentFactory", "org.apache.sshd.agent.local.LocalAgentFactory()", "public org.apache.sshd.agent.local.LocalAgentFactory()"], ["org.apache.sshd.agent.local.LocalAgentFactory", "org.apache.sshd.agent.local.LocalAgentFactory(org.apache.sshd.agent.SshAgent)", "public org.apache.sshd.agent.local.LocalAgentFactory(org.apache.sshd.agent.SshAgent)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.LocalAgentFactory.getAgent()", "public org.apache.sshd.agent.SshAgent getAgent()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>", "org.apache.sshd.agent.local.LocalAgentFactory.getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>> getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.local.LocalAgentFactory.createClient(org.apache.sshd.common.FactoryManager)", "public org.apache.sshd.agent.SshAgent createClient(org.apache.sshd.common.FactoryManager) throws java.io.IOException"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.local.LocalAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.SshAgentServer createServer(org.apache.sshd.common.session.ConnectionService) throws java.io.IOException"], ["org.apache.sshd.agent.unix.UnixAgentFactory", "org.apache.sshd.agent.unix.UnixAgentFactory()", "public org.apache.sshd.agent.unix.UnixAgentFactory()"], ["org.apache.sshd.agent.unix.UnixAgentFactory", "org.apache.sshd.agent.unix.UnixAgentFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)", "public org.apache.sshd.agent.unix.UnixAgentFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>", "org.apache.sshd.agent.unix.UnixAgentFactory.getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>> getChannelForwardingFactories(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.agent.SshAgent", "org.apache.sshd.agent.unix.UnixAgentFactory.createClient(org.apache.sshd.common.FactoryManager)", "public org.apache.sshd.agent.SshAgent createClient(org.apache.sshd.common.FactoryManager) throws java.io.IOException"], ["org.apache.sshd.agent.SshAgentServer", "org.apache.sshd.agent.unix.UnixAgentFactory.createServer(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.agent.SshAgentServer createServer(org.apache.sshd.common.session.ConnectionService) throws java.io.IOException"], ["synchronized", "org.apache.sshd.agent.common.AbstractAgentClient.void messageReceived(org.apache.sshd.common.util.buffer.Buffer)", "public synchronized void messageReceived(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.TcpForwardingFilter getTcpForwardingFilter()", "public default org.apache.sshd.server.forward.TcpForwardingFilter getTcpForwardingFilter()"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.AgentForwardingFilter getAgentForwardingFilter()", "public default org.apache.sshd.server.forward.AgentForwardingFilter getAgentForwardingFilter()"], ["default", "org.apache.sshd.common.FactoryManager.org.apache.sshd.server.forward.X11ForwardingFilter getX11ForwardingFilter()", "public default org.apache.sshd.server.forward.X11ForwardingFilter getX11ForwardingFilter()"], ["<T> T", "org.apache.sshd.common.FactoryManager.resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public default <T> T resolveAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.FactoryManager.resolveAttribute(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public static <T> T resolveAttribute(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.file.root.RootedPath", "org.apache.sshd.common.file.root.RootedPath(org.apache.sshd.common.file.root.RootedFileSystem, java.lang.String, java.util.List<java.lang.String>)", "public org.apache.sshd.common.file.root.RootedPath(org.apache.sshd.common.file.root.RootedFileSystem, java.lang.String, java.util.List<java.lang.String>)"], ["java.io.File", "org.apache.sshd.common.file.root.RootedPath.toFile()", "public java.io.File toFile()"], ["org.apache.sshd.common.file.root.RootedPath", "org.apache.sshd.common.file.root.RootedPath.toRealPath(java.nio.file.LinkOption...)", "public org.apache.sshd.common.file.root.RootedPath toRealPath(java.nio.file.LinkOption...) throws java.io.IOException"], ["java.nio.file.Path", "org.apache.sshd.common.file.root.RootedPath.toRealPath(java.nio.file.LinkOption[])", "public java.nio.file.Path toRealPath(java.nio.file.LinkOption[]) throws java.io.IOException"], ["org.apache.sshd.common.cipher.BuiltinCiphers$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getCiphers(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.common.cipher.BuiltinCiphers$ParseResult getCiphers(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.mac.BuiltinMacs$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getMacs(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.common.mac.BuiltinMacs$ParseResult getMacs(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.signature.BuiltinSignatures$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getSignatures(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.common.signature.BuiltinSignatures$ParseResult getSignatures(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult", "org.apache.sshd.common.config.SshConfigFileReader.getKexFactories(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.common.kex.BuiltinDHFactories$ParseResult getKexFactories(org.apache.sshd.common.PropertyResolver)"], ["org.apache.sshd.common.compression.CompressionFactory", "org.apache.sshd.common.config.SshConfigFileReader.getCompression(org.apache.sshd.common.PropertyResolver)", "public static org.apache.sshd.common.compression.CompressionFactory getCompression(org.apache.sshd.common.PropertyResolver)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configure(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configure(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCiphers(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureCiphers(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCiphers(M, java.lang.String, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureCiphers(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureSignatures(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureSignatures(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureSignatures(M, java.lang.String, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureSignatures(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureMacs(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureMacs(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureMacs(M, java.lang.String, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureMacs(M, java.lang.String, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureKeyExchanges(M, org.apache.sshd.common.PropertyResolver, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureKeyExchanges(M, org.apache.sshd.common.PropertyResolver, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureKeyExchanges(M, java.lang.String, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureKeyExchanges(M, java.lang.String, boolean, java.util.function.Function<? super org.apache.sshd.common.kex.DHFactory, ? extends org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCompression(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureCompression(M, org.apache.sshd.common.PropertyResolver, boolean, boolean)"], ["<M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M", "org.apache.sshd.common.config.SshConfigFileReader.configureCompression(M, java.lang.String, boolean, boolean)", "public static <M extends org.apache.sshd.common.helpers.AbstractFactoryManager> M configureCompression(M, java.lang.String, boolean, boolean)"], ["org.apache.sshd.common.io.nio2.Nio2ServiceFactory", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.common.io.nio2.Nio2ServiceFactory(org.apache.sshd.common.FactoryManager, org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.common.io.IoConnector", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory.createConnector(org.apache.sshd.common.io.IoHandler)", "public org.apache.sshd.common.io.IoConnector createConnector(org.apache.sshd.common.io.IoHandler)"], ["org.apache.sshd.common.io.IoAcceptor", "org.apache.sshd.common.io.nio2.Nio2ServiceFactory.createAcceptor(org.apache.sshd.common.io.IoHandler)", "public org.apache.sshd.common.io.IoAcceptor createAcceptor(org.apache.sshd.common.io.IoHandler)"], ["void", "org.apache.sshd.common.io.nio2.Nio2CompletionHandler.completed(V, A)", "public void completed(V, A)"], ["void", "org.apache.sshd.common.io.nio2.Nio2CompletionHandler.failed(java.lang.Throwable, A)", "public void failed(java.lang.Throwable, A)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$4.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$4.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$4.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$8.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$8.isGroupExchange()", "public boolean isGroupExchange()"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$8.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$8.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.channel.WindowClosedException", "org.apache.sshd.common.channel.WindowClosedException(java.lang.String)", "public org.apache.sshd.common.channel.WindowClosedException(java.lang.String)"], ["org.apache.sshd.common.channel.IoWriteFutureImpl", "org.apache.sshd.common.channel.IoWriteFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.IoWriteFutureImpl(java.lang.Object, org.apache.sshd.common.util.buffer.Buffer)"], ["org.apache.sshd.common.util.buffer.Buffer", "org.apache.sshd.common.channel.IoWriteFutureImpl.getBuffer()", "public org.apache.sshd.common.util.buffer.Buffer getBuffer()"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelListener$1.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.BaseBuilder", "org.apache.sshd.common.BaseBuilder()", "public org.apache.sshd.common.BaseBuilder()"], ["S", "org.apache.sshd.common.BaseBuilder.keyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)", "public S keyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)"], ["S", "org.apache.sshd.common.BaseBuilder.signatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public S signatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["S", "org.apache.sshd.common.BaseBuilder.randomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)", "public S randomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)"], ["S", "org.apache.sshd.common.BaseBuilder.cipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)", "public S cipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)"], ["S", "org.apache.sshd.common.BaseBuilder.compressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)", "public S compressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)"], ["S", "org.apache.sshd.common.BaseBuilder.macFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)", "public S macFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)"], ["S", "org.apache.sshd.common.BaseBuilder.channelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)", "public S channelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)"], ["S", "org.apache.sshd.common.BaseBuilder.fileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)", "public S fileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)"], ["S", "org.apache.sshd.common.BaseBuilder.forwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)", "public S forwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)"], ["S", "org.apache.sshd.common.BaseBuilder.forwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)", "public S forwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)"], ["S", "org.apache.sshd.common.BaseBuilder.globalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)", "public S globalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)"], ["S", "org.apache.sshd.common.BaseBuilder.factory(org.apache.sshd.common.Factory<T>)", "public S factory(org.apache.sshd.common.Factory<T>)"], ["S", "org.apache.sshd.common.BaseBuilder.channelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)", "public S channelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["S", "org.apache.sshd.common.BaseBuilder.unknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)", "public S unknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["T", "org.apache.sshd.common.BaseBuilder.build(boolean)", "public T build(boolean)"], ["T", "org.apache.sshd.common.BaseBuilder.build()", "public T build()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>", "org.apache.sshd.common.BaseBuilder.setUpDefaultCiphers(boolean)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>> setUpDefaultCiphers(boolean)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>", "org.apache.sshd.common.BaseBuilder.setUpDefaultMacs(boolean)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>> setUpDefaultMacs(boolean)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.common.BaseBuilder.setUpDefaultSignatures(boolean)", "public static java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> setUpDefaultSignatures(boolean)"], ["java.lang.Object", "org.apache.sshd.common.BaseBuilder.build()", "public java.lang.Object build()"], ["void", "org.apache.sshd.common.forward.SocksProxy$Proxy.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.session.AbstractConnectionServiceFactory.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public default void handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public default void handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["default", "org.apache.sshd.common.session.ReservedSessionMessagesHandler.void handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public default void handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.session.helpers.SessionTimeoutListener", "org.apache.sshd.common.session.helpers.SessionTimeoutListener()", "public org.apache.sshd.common.session.helpers.SessionTimeoutListener()"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionCreated(org.apache.sshd.common.session.Session)", "public void sessionCreated(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)", "public void sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)", "public void sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.sessionClosed(org.apache.sshd.common.session.Session)", "public void sessionClosed(org.apache.sshd.common.session.Session)"], ["void", "org.apache.sshd.common.session.helpers.SessionTimeoutListener.run()", "public void run()"], ["default", "org.apache.sshd.common.session.ConnectionServiceRequestHandler.org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public default org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.client.auth.hostbased.UserAuthHostBased", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)", "public org.apache.sshd.client.auth.hostbased.UserAuthHostBased(org.apache.sshd.client.auth.hostbased.HostKeyIdentityProvider)"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.init(org.apache.sshd.client.session.ClientSession, java.lang.String)", "public void init(org.apache.sshd.client.session.ClientSession, java.lang.String) throws java.lang.Exception"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.getClientUsername()", "public java.lang.String getClientUsername()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setClientUsername(java.lang.String)", "public void setClientUsername(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.getClientHostname()", "public java.lang.String getClientHostname()"], ["void", "org.apache.sshd.client.auth.hostbased.UserAuthHostBased.setClientHostname(java.lang.String)", "public void setClientHostname(java.lang.String)"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive()", "public org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive()"], ["void", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive.init(org.apache.sshd.client.session.ClientSession, java.lang.String)", "public void init(org.apache.sshd.client.session.ClientSession, java.lang.String) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive.getAuthCommandName(int)", "public static java.lang.String getAuthCommandName(int)"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair()", "public org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair()"], ["org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair(org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey)", "public org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair(org.apache.sshd.client.config.hosts.KnownHostEntry, java.security.PublicKey)"], ["org.apache.sshd.client.config.hosts.KnownHostEntry", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.getHostEntry()", "public org.apache.sshd.client.config.hosts.KnownHostEntry getHostEntry()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.setHostEntry(org.apache.sshd.client.config.hosts.KnownHostEntry)", "public void setHostEntry(org.apache.sshd.client.config.hosts.KnownHostEntry)"], ["java.security.PublicKey", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.getServerKey()", "public java.security.PublicKey getServerKey()"], ["void", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.setServerKey(java.security.PublicKey)", "public void setServerKey(java.security.PublicKey)"], ["java.lang.String", "org.apache.sshd.client.keyverifier.KnownHostsServerKeyVerifier$HostEntryPair.toString()", "public java.lang.String toString()"], ["org.apache.sshd.client.channel.ChannelShell", "org.apache.sshd.client.channel.ChannelShell()", "public org.apache.sshd.client.channel.ChannelShell()"], ["void", "org.apache.sshd.client.channel.ChannelShell.handleSuccess()", "public void handleSuccess() throws java.io.IOException"], ["void", "org.apache.sshd.client.channel.ChannelShell.handleFailure()", "public void handleFailure() throws java.io.IOException"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.client.channel.exit.AbstractChannelExitRequestHandler.process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.client.channel.exit.AbstractChannelExitRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.client.future.DefaultAuthFuture", "org.apache.sshd.client.future.DefaultAuthFuture(java.lang.Object, java.lang.Object)", "public org.apache.sshd.client.future.DefaultAuthFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.AuthFuture", "org.apache.sshd.client.future.DefaultAuthFuture.verify(long)", "public org.apache.sshd.client.future.AuthFuture verify(long) throws java.io.IOException"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultAuthFuture.getException()", "public java.lang.Throwable getException()"], ["boolean", "org.apache.sshd.client.future.DefaultAuthFuture.isSuccess()", "public boolean isSuccess()"], ["boolean", "org.apache.sshd.client.future.DefaultAuthFuture.isFailure()", "public boolean isFailure()"], ["void", "org.apache.sshd.client.future.DefaultAuthFuture.setAuthed(boolean)", "public void setAuthed(boolean)"], ["void", "org.apache.sshd.client.future.DefaultAuthFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultAuthFuture.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["org.apache.sshd.client.session.SessionFactory", "org.apache.sshd.client.session.SessionFactory(org.apache.sshd.client.ClientFactoryManager)", "public org.apache.sshd.client.session.SessionFactory(org.apache.sshd.client.ClientFactoryManager)"], ["org.apache.sshd.client.ClientFactoryManager", "org.apache.sshd.client.session.SessionFactory.getClient()", "public final org.apache.sshd.client.ClientFactoryManager getClient()"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int)", "public default org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress)", "public default org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSessionCreator.org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry)", "public default org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry) throws java.io.IOException"], ["boolean", "org.apache.sshd.client.session.forward.PortForwardingTracker.isOpen()", "public boolean isOpen()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.PortForwardingTracker.getLocalAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getLocalAddress()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.forward.PortForwardingTracker.getBoundAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getBoundAddress()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.session.forward.PortForwardingTracker.getClientSession()", "public org.apache.sshd.client.session.ClientSession getClientSession()"], ["java.lang.String", "org.apache.sshd.client.session.forward.PortForwardingTracker.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.config.AllowTcpForwardingValue[]", "org.apache.sshd.server.config.AllowTcpForwardingValue.values()", "public static org.apache.sshd.server.config.AllowTcpForwardingValue[] values()"], ["org.apache.sshd.server.config.AllowTcpForwardingValue", "org.apache.sshd.server.config.AllowTcpForwardingValue.valueOf(java.lang.String)", "public static org.apache.sshd.server.config.AllowTcpForwardingValue valueOf(java.lang.String)"], ["org.apache.sshd.server.config.AllowTcpForwardingValue", "org.apache.sshd.server.config.AllowTcpForwardingValue.fromString(java.lang.String)", "public static org.apache.sshd.server.config.AllowTcpForwardingValue fromString(java.lang.String)"], ["org.apache.sshd.server.auth.WelcomeBannerPhase[]", "org.apache.sshd.server.auth.WelcomeBannerPhase.values()", "public static org.apache.sshd.server.auth.WelcomeBannerPhase[] values()"], ["org.apache.sshd.server.auth.WelcomeBannerPhase", "org.apache.sshd.server.auth.WelcomeBannerPhase.valueOf(java.lang.String)", "public static org.apache.sshd.server.auth.WelcomeBannerPhase valueOf(java.lang.String)"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge()", "public org.apache.sshd.server.auth.keyboard.InteractiveChallenge()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getInteractionName()", "public java.lang.String getInteractionName()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setInteractionName(java.lang.String)", "public void setInteractionName(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getInteractionInstruction()", "public java.lang.String getInteractionInstruction()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setInteractionInstruction(java.lang.String)", "public void setInteractionInstruction(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getLanguageTag()", "public java.lang.String getLanguageTag()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setLanguageTag(java.lang.String)", "public void setLanguageTag(java.lang.String)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.addPrompt(java.lang.String, boolean)", "public void addPrompt(java.lang.String, boolean)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.addPrompt(org.apache.sshd.server.auth.keyboard.PromptEntry)", "public void addPrompt(org.apache.sshd.server.auth.keyboard.PromptEntry)"], ["java.util.List<org.apache.sshd.server.auth.keyboard.PromptEntry>", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.getPrompts()", "public java.util.List<org.apache.sshd.server.auth.keyboard.PromptEntry> getPrompts()"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.setPrompts(java.util.Collection<? extends org.apache.sshd.server.auth.keyboard.PromptEntry>)", "public void setPrompts(java.util.Collection<? extends org.apache.sshd.server.auth.keyboard.PromptEntry>)"], ["void", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clearPrompts()", "public void clearPrompts()"], ["<B extends org.apache.sshd.common.util.buffer.Buffer> B", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.append(B)", "public <B extends org.apache.sshd.common.util.buffer.Buffer> B append(B)"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clone()", "public org.apache.sshd.server.auth.keyboard.InteractiveChallenge clone()"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.server.auth.keyboard.InteractiveChallenge.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.apache.sshd.server.shell.ProcessShell", "org.apache.sshd.server.shell.ProcessShell(java.lang.String...)", "public org.apache.sshd.server.shell.ProcessShell(java.lang.String...)"], ["org.apache.sshd.server.shell.ProcessShell", "org.apache.sshd.server.shell.ProcessShell(java.util.Collection<java.lang.String>)", "public org.apache.sshd.server.shell.ProcessShell(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.shell.ProcessShell.getServerSession()", "public org.apache.sshd.server.session.ServerSession getServerSession()"], ["void", "org.apache.sshd.server.shell.ProcessShell.setSession(org.apache.sshd.server.session.ServerSession)", "public void setSession(org.apache.sshd.server.session.ServerSession)"], ["void", "org.apache.sshd.server.shell.ProcessShell.start(org.apache.sshd.server.Environment)", "public void start(org.apache.sshd.server.Environment) throws java.io.IOException"], ["java.io.OutputStream", "org.apache.sshd.server.shell.ProcessShell.getInputStream()", "public java.io.OutputStream getInputStream()"], ["java.io.InputStream", "org.apache.sshd.server.shell.ProcessShell.getOutputStream()", "public java.io.InputStream getOutputStream()"], ["java.io.InputStream", "org.apache.sshd.server.shell.ProcessShell.getErrorStream()", "public java.io.InputStream getErrorStream()"], ["boolean", "org.apache.sshd.server.shell.ProcessShell.isAlive()", "public boolean isAlive()"], ["int", "org.apache.sshd.server.shell.ProcessShell.exitValue()", "public int exitValue()"], ["void", "org.apache.sshd.server.shell.ProcessShell.destroy()", "public void destroy()"], ["java.lang.String", "org.apache.sshd.server.shell.ProcessShell.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.kex.KeyExchange", "org.apache.sshd.server.kex.DHGServer$1.create()", "public org.apache.sshd.common.kex.KeyExchange create()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer$1.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.sshd.server.kex.DHGServer$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.sshd.server.kex.DHGServer$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.channel.PipeDataReceiver", "org.apache.sshd.server.channel.PipeDataReceiver(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)", "public org.apache.sshd.server.channel.PipeDataReceiver(org.apache.sshd.common.PropertyResolver, org.apache.sshd.common.channel.Window)"], ["java.io.InputStream", "org.apache.sshd.server.channel.PipeDataReceiver.getIn()", "public java.io.InputStream getIn()"], ["void", "org.apache.sshd.server.channel.PipeDataReceiver.close()", "public void close() throws java.io.IOException"], ["int", "org.apache.sshd.server.channel.PipeDataReceiver.data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int)", "public int data(org.apache.sshd.server.channel.ChannelSession, byte[], int, int) throws java.io.IOException"], ["org.apache.sshd.server.channel.ChannelSession", "org.apache.sshd.server.channel.ChannelSession()", "public org.apache.sshd.server.channel.ChannelSession()"], ["org.apache.sshd.server.channel.ChannelSession", "org.apache.sshd.server.channel.ChannelSession(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)", "public org.apache.sshd.server.channel.ChannelSession(java.util.Collection<? extends org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.channel.Channel>>)"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.channel.ChannelSession.getSession()", "public org.apache.sshd.server.session.ServerSession getSession()"], ["void", "org.apache.sshd.server.channel.ChannelSession.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)", "public void handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["void", "org.apache.sshd.server.channel.ChannelSession.handleEof()", "public void handleEof() throws java.io.IOException"], ["void", "org.apache.sshd.server.channel.ChannelSession.setDataReceiver(org.apache.sshd.server.channel.ChannelDataReceiver)", "public void setDataReceiver(org.apache.sshd.server.channel.ChannelDataReceiver)"], ["org.apache.sshd.server.StandardEnvironment", "org.apache.sshd.server.channel.ChannelSession.getEnvironment()", "public org.apache.sshd.server.StandardEnvironment getEnvironment()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.channel.ChannelSession.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.server.forward.RejectAllForwardingFilter", "org.apache.sshd.server.forward.RejectAllForwardingFilter()", "public org.apache.sshd.server.forward.RejectAllForwardingFilter()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type[]", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.values()", "public static org.apache.sshd.server.forward.TcpForwardingFilter$Type[] values()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.valueOf(java.lang.String)", "public static org.apache.sshd.server.forward.TcpForwardingFilter$Type valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromString(java.lang.String)", "public static org.apache.sshd.server.forward.TcpForwardingFilter$Type fromString(java.lang.String)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromName(java.lang.String)", "public static org.apache.sshd.server.forward.TcpForwardingFilter$Type fromName(java.lang.String)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpForwardingFilter$Type.fromEnumName(java.lang.String)", "public static org.apache.sshd.server.forward.TcpForwardingFilter$Type fromEnumName(java.lang.String)"], ["org.apache.sshd.server.session.ServerConnectionServiceFactory", "org.apache.sshd.server.session.ServerConnectionServiceFactory()", "public org.apache.sshd.server.session.ServerConnectionServiceFactory()"], ["java.lang.String", "org.apache.sshd.server.session.ServerConnectionServiceFactory.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.Service", "org.apache.sshd.server.session.ServerConnectionServiceFactory.create(org.apache.sshd.common.session.Session)", "public org.apache.sshd.common.Service create(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.session.ServerConnectionService.getServerSession()", "public final org.apache.sshd.server.session.ServerSession getServerSession()"], ["org.apache.sshd.server.session.AbstractServerSession", "org.apache.sshd.server.session.ServerConnectionService.getSession()", "public org.apache.sshd.server.session.AbstractServerSession getSession()"], ["org.apache.sshd.common.session.helpers.AbstractSession", "org.apache.sshd.server.session.ServerConnectionService.getSession()", "public org.apache.sshd.common.session.helpers.AbstractSession getSession()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.server.session.ServerConnectionService.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.agent.local.ChannelAgentForwarding", "org.apache.sshd.agent.local.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.local.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["void", "org.apache.sshd.agent.local.ChannelAgentForwarding.handleEof()", "public void handleEof() throws java.io.IOException"], ["org.apache.sshd.agent.unix.AgentClient", "org.apache.sshd.agent.unix.AgentClient(java.lang.String)", "public org.apache.sshd.agent.unix.AgentClient(java.lang.String) throws java.io.IOException"], ["org.apache.sshd.agent.unix.AgentClient", "org.apache.sshd.agent.unix.AgentClient(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.unix.AgentClient(java.lang.String, org.apache.sshd.common.util.threads.CloseableExecutorService) throws java.io.IOException"], ["boolean", "org.apache.sshd.agent.unix.AgentClient.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.agent.unix.AgentClient.run()", "public void run()"], ["void", "org.apache.sshd.agent.unix.AgentClient.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.common.file.util.MockFileSystem", "org.apache.sshd.common.file.util.MockFileSystem(java.lang.String)", "public org.apache.sshd.common.file.util.MockFileSystem(java.lang.String)"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.util.MockFileSystem.provider()", "public java.nio.file.spi.FileSystemProvider provider()"], ["void", "org.apache.sshd.common.file.util.MockFileSystem.close()", "public void close() throws java.io.IOException"], ["boolean", "org.apache.sshd.common.file.util.MockFileSystem.isOpen()", "public boolean isOpen()"], ["boolean", "org.apache.sshd.common.file.util.MockFileSystem.isReadOnly()", "public boolean isReadOnly()"], ["java.lang.String", "org.apache.sshd.common.file.util.MockFileSystem.getSeparator()", "public java.lang.String getSeparator()"], ["java.lang.Iterable<java.nio.file.Path>", "org.apache.sshd.common.file.util.MockFileSystem.getRootDirectories()", "public java.lang.Iterable<java.nio.file.Path> getRootDirectories()"], ["java.lang.Iterable<java.nio.file.FileStore>", "org.apache.sshd.common.file.util.MockFileSystem.getFileStores()", "public java.lang.Iterable<java.nio.file.FileStore> getFileStores()"], ["java.util.Set<java.lang.String>", "org.apache.sshd.common.file.util.MockFileSystem.supportedFileAttributeViews()", "public java.util.Set<java.lang.String> supportedFileAttributeViews()"], ["java.nio.file.Path", "org.apache.sshd.common.file.util.MockFileSystem.getPath(java.lang.String, java.lang.String...)", "public java.nio.file.Path getPath(java.lang.String, java.lang.String...)"], ["java.nio.file.PathMatcher", "org.apache.sshd.common.file.util.MockFileSystem.getPathMatcher(java.lang.String)", "public java.nio.file.PathMatcher getPathMatcher(java.lang.String)"], ["java.nio.file.attribute.UserPrincipalLookupService", "org.apache.sshd.common.file.util.MockFileSystem.getUserPrincipalLookupService()", "public java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()"], ["java.nio.file.WatchService", "org.apache.sshd.common.file.util.MockFileSystem.newWatchService()", "public java.nio.file.WatchService newWatchService() throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.file.util.MockFileSystem.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory()", "public org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory()"], ["org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory(java.nio.file.Path)", "public org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory(java.nio.file.Path)"], ["void", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.setDefaultHomeDir(java.nio.file.Path)", "public void setDefaultHomeDir(java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.getDefaultHomeDir()", "public java.nio.file.Path getDefaultHomeDir()"], ["void", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.setUserHomeDir(java.lang.String, java.nio.file.Path)", "public void setUserHomeDir(java.lang.String, java.nio.file.Path)"], ["java.nio.file.Path", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.getUserHomeDir(java.lang.String)", "public java.nio.file.Path getUserHomeDir(java.lang.String)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.virtualfs.VirtualFileSystemFactory.createFileSystem(org.apache.sshd.common.session.Session)", "public java.nio.file.FileSystem createFileSystem(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthServiceFactory.getName()", "public final java.lang.String getName()"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void connectionEstablished(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress)", "public default void connectionEstablished(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void abortEstablishedConnection(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable)", "public default void abortEstablishedConnection(org.apache.sshd.common.io.IoConnector, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable) throws java.io.IOException"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void connectionAccepted(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress)", "public default void connectionAccepted(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.common.io.IoServiceEventListener.void abortAcceptedConnection(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable)", "public default void abortAcceptedConnection(org.apache.sshd.common.io.IoAcceptor, java.net.SocketAddress, java.net.SocketAddress, java.lang.Throwable) throws java.io.IOException"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.common.io.AbstractIoServiceFactory.getFactoryManager()", "public final org.apache.sshd.common.FactoryManager getFactoryManager()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.common.io.AbstractIoServiceFactory.getExecutorService()", "public final org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.io.AbstractIoServiceFactory.getIoServiceEventListener()", "public org.apache.sshd.common.io.IoServiceEventListener getIoServiceEventListener()"], ["void", "org.apache.sshd.common.io.AbstractIoServiceFactory.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)", "public void setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["int", "org.apache.sshd.common.io.AbstractIoServiceFactory.getNioWorkers(org.apache.sshd.common.FactoryManager)", "public static int getNioWorkers(org.apache.sshd.common.FactoryManager)"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories[]", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.values()", "public static org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories[] values()"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.valueOf(java.lang.String)", "public static org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories valueOf(java.lang.String)"], ["java.lang.String", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getFactoryClassName()", "public final java.lang.String getFactoryClassName()"], ["java.lang.Class<? extends org.apache.sshd.common.io.IoServiceFactoryFactory>", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getFactoryClass()", "public final java.lang.Class<? extends org.apache.sshd.common.io.IoServiceFactoryFactory> getFactoryClass()"], ["java.lang.String", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.create()", "public final org.apache.sshd.common.io.IoServiceFactoryFactory create()"], ["boolean", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.fromFactoryName(java.lang.String)", "public static org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories fromFactoryName(java.lang.String)"], ["org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.fromFactoryClass(java.lang.Class<?>)", "public static org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories fromFactoryClass(java.lang.Class<?>)"], ["java.lang.Object", "org.apache.sshd.common.io.BuiltinIoServiceFactoryFactories.create()", "public java.lang.Object create()"], ["org.apache.sshd.common.kex.KexState[]", "org.apache.sshd.common.kex.KexState.values()", "public static org.apache.sshd.common.kex.KexState[] values()"], ["org.apache.sshd.common.kex.KexState", "org.apache.sshd.common.kex.KexState.valueOf(java.lang.String)", "public static org.apache.sshd.common.kex.KexState valueOf(java.lang.String)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$3.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$3.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$3.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getKeyExchangeFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>> getKeyExchangeFactories()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setKeyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)", "public void setKeyExchangeFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.kex.KeyExchange>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getCipherFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>> getCipherFactories()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setCipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)", "public void setCipherFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.cipher.Cipher>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getCompressionFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>> getCompressionFactories()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setCompressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)", "public void setCompressionFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.compression.Compression>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getMacFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>> getMacFactories()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setMacFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)", "public void setMacFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.mac.Mac>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.common.keyprovider.KeyPairProvider", "org.apache.sshd.common.kex.AbstractKexFactoryManager.getKeyPairProvider()", "public org.apache.sshd.common.keyprovider.KeyPairProvider getKeyPairProvider()"], ["void", "org.apache.sshd.common.kex.AbstractKexFactoryManager.setKeyPairProvider(org.apache.sshd.common.keyprovider.KeyPairProvider)", "public void setKeyPairProvider(org.apache.sshd.common.keyprovider.KeyPairProvider)"], ["default", "org.apache.sshd.common.channel.ChannelRequestHandler.org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public default org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.ChannelAsyncInputStream", "org.apache.sshd.common.channel.ChannelAsyncInputStream(org.apache.sshd.common.channel.Channel)", "public org.apache.sshd.common.channel.ChannelAsyncInputStream(org.apache.sshd.common.channel.Channel)"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelAsyncInputStream.getChannel()", "public org.apache.sshd.common.channel.Channel getChannel()"], ["void", "org.apache.sshd.common.channel.ChannelAsyncInputStream.write(org.apache.sshd.common.util.Readable)", "public void write(org.apache.sshd.common.util.Readable) throws java.io.IOException"], ["org.apache.sshd.common.io.IoReadFuture", "org.apache.sshd.common.channel.ChannelAsyncInputStream.read(org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.io.IoReadFuture read(org.apache.sshd.common.util.buffer.Buffer)"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelAsyncInputStream.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable(org.apache.sshd.common.channel.AbstractChannel)", "public org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable(org.apache.sshd.common.channel.AbstractChannel)"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)", "public void addCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)", "public void removeCloseFutureListener(org.apache.sshd.common.future.SshFutureListener<org.apache.sshd.common.future.CloseFuture>)"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.isClosing()", "public boolean isClosing()"], ["void", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.setClosing(boolean)", "public void setClosing(boolean)"], ["boolean", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.isClosed()", "public boolean isClosed()"], ["org.apache.sshd.common.future.CloseFuture", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.close(boolean)", "public org.apache.sshd.common.future.CloseFuture close(boolean)"], ["java.lang.String", "org.apache.sshd.common.channel.AbstractChannel$GracefulChannelCloseable.toString()", "public java.lang.String toString()"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelInitialized(org.apache.sshd.common.channel.Channel)", "public default void channelInitialized(org.apache.sshd.common.channel.Channel)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelOpenSuccess(org.apache.sshd.common.channel.Channel)", "public default void channelOpenSuccess(org.apache.sshd.common.channel.Channel)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelOpenFailure(org.apache.sshd.common.channel.Channel, java.lang.Throwable)", "public default void channelOpenFailure(org.apache.sshd.common.channel.Channel, java.lang.Throwable)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelStateChanged(org.apache.sshd.common.channel.Channel, java.lang.String)", "public default void channelStateChanged(org.apache.sshd.common.channel.Channel, java.lang.String)"], ["default", "org.apache.sshd.common.channel.ChannelListener.void channelClosed(org.apache.sshd.common.channel.Channel, java.lang.Throwable)", "public default void channelClosed(org.apache.sshd.common.channel.Channel, java.lang.Throwable)"], ["<L extends org.apache.sshd.common.channel.ChannelListener> L", "org.apache.sshd.common.channel.ChannelListener.validateListener(L)", "public static <L extends org.apache.sshd.common.channel.ChannelListener> L validateListener(L)"], ["org.apache.sshd.common.channel.PtyMode[]", "org.apache.sshd.common.channel.PtyMode.values()", "public static org.apache.sshd.common.channel.PtyMode[] values()"], ["org.apache.sshd.common.channel.PtyMode", "org.apache.sshd.common.channel.PtyMode.valueOf(java.lang.String)", "public static org.apache.sshd.common.channel.PtyMode valueOf(java.lang.String)"], ["int", "org.apache.sshd.common.channel.PtyMode.toInt()", "public int toInt()"], ["org.apache.sshd.common.channel.PtyMode", "org.apache.sshd.common.channel.PtyMode.fromInt(int)", "public static org.apache.sshd.common.channel.PtyMode fromInt(int)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.PtyMode.createEnabledOptions(org.apache.sshd.common.channel.PtyMode...)", "public static java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> createEnabledOptions(org.apache.sshd.common.channel.PtyMode...)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.common.channel.PtyMode.createEnabledOptions(java.util.Collection<org.apache.sshd.common.channel.PtyMode>)", "public static java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> createEnabledOptions(java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["java.util.Set<org.apache.sshd.common.channel.PtyMode>", "org.apache.sshd.common.channel.PtyMode.resolveEnabledOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, org.apache.sshd.common.channel.PtyMode...)", "public static java.util.Set<org.apache.sshd.common.channel.PtyMode> resolveEnabledOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, org.apache.sshd.common.channel.PtyMode...)"], ["java.util.Set<org.apache.sshd.common.channel.PtyMode>", "org.apache.sshd.common.channel.PtyMode.resolveEnabledOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)", "public static java.util.Set<org.apache.sshd.common.channel.PtyMode> resolveEnabledOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, java.util.Collection<org.apache.sshd.common.channel.PtyMode>)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, org.apache.sshd.common.channel.PtyMode)", "public static boolean getBooleanSettingValue(java.util.Map<org.apache.sshd.common.channel.PtyMode, ?>, org.apache.sshd.common.channel.PtyMode)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(java.lang.Object)", "public static boolean getBooleanSettingValue(java.lang.Object)"], ["boolean", "org.apache.sshd.common.channel.PtyMode.getBooleanSettingValue(int)", "public static boolean getBooleanSettingValue(int)"], ["void", "org.apache.sshd.common.channel.BufferedIoOutputStream$1.operationComplete(org.apache.sshd.common.io.IoWriteFuture)", "public void operationComplete(org.apache.sshd.common.io.IoWriteFuture)"], ["void", "org.apache.sshd.common.channel.BufferedIoOutputStream$1.operationComplete(org.apache.sshd.common.future.SshFuture)", "public void operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.common.io.IoServiceFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceFactory()", "public org.apache.sshd.common.io.IoServiceFactory getIoServiceFactory()"], ["org.apache.sshd.common.io.IoServiceFactoryFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceFactoryFactory()", "public org.apache.sshd.common.io.IoServiceFactoryFactory getIoServiceFactoryFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setIoServiceFactoryFactory(org.apache.sshd.common.io.IoServiceFactoryFactory)", "public void setIoServiceFactoryFactory(org.apache.sshd.common.io.IoServiceFactoryFactory)"], ["org.apache.sshd.common.io.IoServiceEventListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getIoServiceEventListener()", "public org.apache.sshd.common.io.IoServiceEventListener getIoServiceEventListener()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)", "public void setIoServiceEventListener(org.apache.sshd.common.io.IoServiceEventListener)"], ["org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getRandomFactory()", "public org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random> getRandomFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setRandomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)", "public void setRandomFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.random.Random>)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getProperties()", "public java.util.Map<java.lang.String, java.lang.Object> getProperties()"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T getAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)", "public <T> T setAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>, T)"], ["<T> T", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)", "public <T> T removeAttribute(org.apache.sshd.common.AttributeStore$AttributeKey<T>)"], ["org.apache.sshd.common.PropertyResolver", "org.apache.sshd.common.helpers.AbstractFactoryManager.getParentPropertyResolver()", "public org.apache.sshd.common.PropertyResolver getParentPropertyResolver()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setParentPropertyResolver(org.apache.sshd.common.PropertyResolver)", "public void setParentPropertyResolver(org.apache.sshd.common.PropertyResolver)"], ["java.lang.String", "org.apache.sshd.common.helpers.AbstractFactoryManager.getVersion()", "public java.lang.String getVersion()"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getChannelFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>> getChannelFactories()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setChannelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)", "public void setChannelFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.channel.Channel>>)"], ["int", "org.apache.sshd.common.helpers.AbstractFactoryManager.getNioWorkers()", "public int getNioWorkers()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setNioWorkers(int)", "public void setNioWorkers(int)"], ["org.apache.sshd.agent.SshAgentFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getAgentFactory()", "public org.apache.sshd.agent.SshAgentFactory getAgentFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setAgentFactory(org.apache.sshd.agent.SshAgentFactory)", "public void setAgentFactory(org.apache.sshd.agent.SshAgentFactory)"], ["java.util.concurrent.ScheduledExecutorService", "org.apache.sshd.common.helpers.AbstractFactoryManager.getScheduledExecutorService()", "public java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)", "public void setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService, boolean)", "public void setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService, boolean)"], ["org.apache.sshd.common.forward.ForwardingFilterFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getForwarderFactory()", "public org.apache.sshd.common.forward.ForwardingFilterFactory getForwarderFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setForwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)", "public void setForwarderFactory(org.apache.sshd.common.forward.ForwardingFilterFactory)"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.common.helpers.AbstractFactoryManager.getForwardingFilter()", "public org.apache.sshd.server.forward.ForwardingFilter getForwardingFilter()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setForwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)", "public void setForwardingFilter(org.apache.sshd.server.forward.ForwardingFilter)"], ["org.apache.sshd.common.file.FileSystemFactory", "org.apache.sshd.common.helpers.AbstractFactoryManager.getFileSystemFactory()", "public org.apache.sshd.common.file.FileSystemFactory getFileSystemFactory()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setFileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)", "public void setFileSystemFactory(org.apache.sshd.common.file.FileSystemFactory)"], ["java.util.List<org.apache.sshd.common.ServiceFactory>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getServiceFactories()", "public java.util.List<org.apache.sshd.common.ServiceFactory> getServiceFactories()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setServiceFactories(java.util.List<org.apache.sshd.common.ServiceFactory>)", "public void setServiceFactories(java.util.List<org.apache.sshd.common.ServiceFactory>)"], ["java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>", "org.apache.sshd.common.helpers.AbstractFactoryManager.getGlobalRequestHandlers()", "public java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>> getGlobalRequestHandlers()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setGlobalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)", "public void setGlobalRequestHandlers(java.util.List<org.apache.sshd.common.channel.RequestHandler<org.apache.sshd.common.session.ConnectionService>>)"], ["org.apache.sshd.common.session.ReservedSessionMessagesHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.getReservedSessionMessagesHandler()", "public org.apache.sshd.common.session.ReservedSessionMessagesHandler getReservedSessionMessagesHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)", "public void setReservedSessionMessagesHandler(org.apache.sshd.common.session.ReservedSessionMessagesHandler)"], ["org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver", "org.apache.sshd.common.helpers.AbstractFactoryManager.getChannelStreamPacketWriterResolver()", "public org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver getChannelStreamPacketWriterResolver()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)", "public void setChannelStreamPacketWriterResolver(org.apache.sshd.common.channel.throttle.ChannelStreamPacketWriterResolver)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.getUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler getUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)", "public void setUnknownChannelReferenceHandler(org.apache.sshd.common.session.UnknownChannelReferenceHandler)"], ["org.apache.sshd.common.session.UnknownChannelReferenceHandler", "org.apache.sshd.common.helpers.AbstractFactoryManager.resolveUnknownChannelReferenceHandler()", "public org.apache.sshd.common.session.UnknownChannelReferenceHandler resolveUnknownChannelReferenceHandler()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addSessionListener(org.apache.sshd.common.session.SessionListener)", "public void addSessionListener(org.apache.sshd.common.session.SessionListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeSessionListener(org.apache.sshd.common.session.SessionListener)", "public void removeSessionListener(org.apache.sshd.common.session.SessionListener)"], ["org.apache.sshd.common.session.SessionListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getSessionListenerProxy()", "public org.apache.sshd.common.session.SessionListener getSessionListenerProxy()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void addChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removeChannelListener(org.apache.sshd.common.channel.ChannelListener)", "public void removeChannelListener(org.apache.sshd.common.channel.ChannelListener)"], ["org.apache.sshd.common.channel.ChannelListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getChannelListenerProxy()", "public org.apache.sshd.common.channel.ChannelListener getChannelListenerProxy()"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.helpers.AbstractFactoryManager.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.helpers.AbstractFactoryManager.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.sessionCreated(org.apache.sshd.common.io.IoSession)", "public void sessionCreated(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.sessionClosed(org.apache.sshd.common.io.IoSession)", "public void sessionClosed(org.apache.sshd.common.io.IoSession) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable)", "public void messageReceived(org.apache.sshd.common.io.IoSession, org.apache.sshd.common.util.Readable) throws java.lang.Exception"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter$StaticIoHandler.exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable)", "public void exceptionCaught(org.apache.sshd.common.io.IoSession, java.lang.Throwable) throws java.lang.Exception"], ["org.apache.sshd.common.forward.DefaultForwardingFilter", "org.apache.sshd.common.forward.DefaultForwardingFilter(org.apache.sshd.common.session.ConnectionService)", "public org.apache.sshd.common.forward.DefaultForwardingFilter(org.apache.sshd.common.session.ConnectionService)"], ["org.apache.sshd.common.forward.PortForwardingEventListener", "org.apache.sshd.common.forward.DefaultForwardingFilter.getPortForwardingEventListenerProxy()", "public org.apache.sshd.common.forward.PortForwardingEventListener getPortForwardingEventListenerProxy()"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter.addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void addPortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["void", "org.apache.sshd.common.forward.DefaultForwardingFilter.removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)", "public void removePortForwardingEventListener(org.apache.sshd.common.forward.PortForwardingEventListener)"], ["java.util.Collection<org.apache.sshd.common.forward.PortForwardingEventListenerManager>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getRegisteredManagers()", "public java.util.Collection<org.apache.sshd.common.forward.PortForwardingEventListenerManager> getRegisteredManagers()"], ["boolean", "org.apache.sshd.common.forward.DefaultForwardingFilter.addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)", "public boolean addPortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["boolean", "org.apache.sshd.common.forward.DefaultForwardingFilter.removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)", "public boolean removePortForwardingEventListenerManager(org.apache.sshd.common.forward.PortForwardingEventListenerManager)"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.common.forward.DefaultForwardingFilter.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.common.session.ConnectionService", "org.apache.sshd.common.forward.DefaultForwardingFilter.getConnectionService()", "public final org.apache.sshd.common.session.ConnectionService getConnectionService()"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized org.apache.sshd.common.util.net.SshdSocketAddress startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized void stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized org.apache.sshd.common.util.net.SshdSocketAddress startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized void stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized org.apache.sshd.common.util.net.SshdSocketAddress startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized void stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress getForwardedPort(int)", "public synchronized org.apache.sshd.common.util.net.SshdSocketAddress getForwardedPort(int)"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.org.apache.sshd.common.util.net.SshdSocketAddress localPortForwardingRequested(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized org.apache.sshd.common.util.net.SshdSocketAddress localPortForwardingRequested(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.forward.DefaultForwardingFilter.void localPortForwardingCancelled(org.apache.sshd.common.util.net.SshdSocketAddress)", "public synchronized void localPortForwardingCancelled(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.forward.DefaultForwardingFilter.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.DefaultForwardingFilter.getBoundLocalPortForward(int)", "public org.apache.sshd.common.util.net.SshdSocketAddress getBoundLocalPortForward(int)"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getLocalForwardsBindings()", "public java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>> getLocalForwardsBindings()"], ["java.util.NavigableSet<java.lang.Integer>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getStartedLocalPortForwards()", "public java.util.NavigableSet<java.lang.Integer> getStartedLocalPortForwards()"], ["java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getRemoteForwardsBindings()", "public java.util.List<java.util.Map$Entry<java.lang.Integer, org.apache.sshd.common.util.net.SshdSocketAddress>> getRemoteForwardsBindings()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.common.forward.DefaultForwardingFilter.getBoundRemotePortForward(int)", "public org.apache.sshd.common.util.net.SshdSocketAddress getBoundRemotePortForward(int)"], ["java.util.NavigableSet<java.lang.Integer>", "org.apache.sshd.common.forward.DefaultForwardingFilter.getStartedRemotePortForwards()", "public java.util.NavigableSet<java.lang.Integer> getStartedRemotePortForwards()"], ["M", "org.apache.sshd.common.session.helpers.AbstractSessionFactory.getFactoryManager()", "public M getFactoryManager()"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.SshClient()", "public org.apache.sshd.client.SshClient()"], ["org.apache.sshd.client.session.SessionFactory", "org.apache.sshd.client.SshClient.getSessionFactory()", "public org.apache.sshd.client.session.SessionFactory getSessionFactory()"], ["void", "org.apache.sshd.client.SshClient.setSessionFactory(org.apache.sshd.client.session.SessionFactory)", "public void setSessionFactory(org.apache.sshd.client.session.SessionFactory)"], ["org.apache.sshd.client.session.ClientProxyConnector", "org.apache.sshd.client.SshClient.getClientProxyConnector()", "public org.apache.sshd.client.session.ClientProxyConnector getClientProxyConnector()"], ["void", "org.apache.sshd.client.SshClient.setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)", "public void setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.SshClient.getServerKeyVerifier()", "public org.apache.sshd.client.keyverifier.ServerKeyVerifier getServerKeyVerifier()"], ["void", "org.apache.sshd.client.SshClient.setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)", "public void setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.config.hosts.HostConfigEntryResolver", "org.apache.sshd.client.SshClient.getHostConfigEntryResolver()", "public org.apache.sshd.client.config.hosts.HostConfigEntryResolver getHostConfigEntryResolver()"], ["void", "org.apache.sshd.client.SshClient.setHostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)", "public void setHostConfigEntryResolver(org.apache.sshd.client.config.hosts.HostConfigEntryResolver)"], ["org.apache.sshd.common.config.keys.FilePasswordProvider", "org.apache.sshd.client.SshClient.getFilePasswordProvider()", "public org.apache.sshd.common.config.keys.FilePasswordProvider getFilePasswordProvider()"], ["void", "org.apache.sshd.client.SshClient.setFilePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)", "public void setFilePasswordProvider(org.apache.sshd.common.config.keys.FilePasswordProvider)"], ["org.apache.sshd.client.config.keys.ClientIdentityLoader", "org.apache.sshd.client.SshClient.getClientIdentityLoader()", "public org.apache.sshd.client.config.keys.ClientIdentityLoader getClientIdentityLoader()"], ["void", "org.apache.sshd.client.SshClient.setClientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)", "public void setClientIdentityLoader(org.apache.sshd.client.config.keys.ClientIdentityLoader)"], ["org.apache.sshd.client.auth.keyboard.UserInteraction", "org.apache.sshd.client.SshClient.getUserInteraction()", "public org.apache.sshd.client.auth.keyboard.UserInteraction getUserInteraction()"], ["void", "org.apache.sshd.client.SshClient.setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)", "public void setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>", "org.apache.sshd.client.SshClient.getUserAuthFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>> getUserAuthFactories()"], ["void", "org.apache.sshd.client.SshClient.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)", "public void setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)"], ["org.apache.sshd.client.auth.AuthenticationIdentitiesProvider", "org.apache.sshd.client.SshClient.getRegisteredIdentities()", "public org.apache.sshd.client.auth.AuthenticationIdentitiesProvider getRegisteredIdentities()"], ["org.apache.sshd.client.auth.password.PasswordIdentityProvider", "org.apache.sshd.client.SshClient.getPasswordIdentityProvider()", "public org.apache.sshd.client.auth.password.PasswordIdentityProvider getPasswordIdentityProvider()"], ["void", "org.apache.sshd.client.SshClient.setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)", "public void setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)"], ["void", "org.apache.sshd.client.SshClient.addPasswordIdentity(java.lang.String)", "public void addPasswordIdentity(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.SshClient.removePasswordIdentity(java.lang.String)", "public java.lang.String removePasswordIdentity(java.lang.String)"], ["void", "org.apache.sshd.client.SshClient.addPublicKeyIdentity(java.security.KeyPair)", "public void addPublicKeyIdentity(java.security.KeyPair)"], ["java.security.KeyPair", "org.apache.sshd.client.SshClient.removePublicKeyIdentity(java.security.KeyPair)", "public java.security.KeyPair removePublicKeyIdentity(java.security.KeyPair)"], ["boolean", "org.apache.sshd.client.SshClient.isStarted()", "public boolean isStarted()"], ["void", "org.apache.sshd.client.SshClient.start()", "public void start()"], ["void", "org.apache.sshd.client.SshClient.stop()", "public void stop()"], ["void", "org.apache.sshd.client.SshClient.open()", "public void open() throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(java.lang.String, java.lang.String, int, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.lang.String, int, java.net.SocketAddress) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(java.lang.String, java.net.SocketAddress, java.net.SocketAddress) throws java.io.IOException"], ["org.apache.sshd.client.future.ConnectFuture", "org.apache.sshd.client.SshClient.connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress)", "public org.apache.sshd.client.future.ConnectFuture connect(org.apache.sshd.client.config.hosts.HostConfigEntry, java.net.SocketAddress) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.client.SshClient.toString()", "public java.lang.String toString()"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.SshClient.setUpDefaultSimpleClient()", "public static org.apache.sshd.client.simple.SimpleClient setUpDefaultSimpleClient()"], ["org.apache.sshd.client.simple.SimpleClient", "org.apache.sshd.client.SshClient.wrapAsSimpleClient(org.apache.sshd.client.SshClient)", "public static org.apache.sshd.client.simple.SimpleClient wrapAsSimpleClient(org.apache.sshd.client.SshClient)"], ["org.apache.sshd.client.SshClient", "org.apache.sshd.client.SshClient.setUpDefaultClient()", "public static org.apache.sshd.client.SshClient setUpDefaultClient()"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.SshClient.setKeyPairProvider(C, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...)", "public static <C extends org.apache.sshd.client.SshClient> C setKeyPairProvider(C, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...) throws java.io.IOException, java.security.GeneralSecurityException"], ["<C extends org.apache.sshd.client.SshClient> C", "org.apache.sshd.client.SshClient.setKeyPairProvider(C, java.nio.file.Path, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...)", "public static <C extends org.apache.sshd.client.SshClient> C setKeyPairProvider(C, java.nio.file.Path, boolean, boolean, org.apache.sshd.common.config.keys.FilePasswordProvider, java.nio.file.LinkOption...) throws java.io.IOException, java.security.GeneralSecurityException"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getClientSession()", "public final org.apache.sshd.client.session.ClientSession getClientSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getSession()", "public final org.apache.sshd.client.session.ClientSession getSession()"], ["void", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.remove()", "public void remove()"], ["java.lang.String", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.auth.pubkey.AbstractKeyPairIterator.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.AbstractUserAuth.getClientSession()", "public org.apache.sshd.client.session.ClientSession getClientSession()"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.auth.AbstractUserAuth.getSession()", "public org.apache.sshd.client.session.ClientSession getSession()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.getName()", "public final java.lang.String getName()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.getService()", "public java.lang.String getService()"], ["void", "org.apache.sshd.client.auth.AbstractUserAuth.init(org.apache.sshd.client.session.ClientSession, java.lang.String)", "public void init(org.apache.sshd.client.session.ClientSession, java.lang.String) throws java.lang.Exception"], ["boolean", "org.apache.sshd.client.auth.AbstractUserAuth.process(org.apache.sshd.common.util.buffer.Buffer)", "public boolean process(org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.client.auth.AbstractUserAuth.destroy()", "public void destroy()"], ["java.lang.String", "org.apache.sshd.client.auth.AbstractUserAuth.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.session.Session", "org.apache.sshd.client.auth.AbstractUserAuth.getSession()", "public org.apache.sshd.common.session.Session getSession()"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.boolean isInteractionAllowed(org.apache.sshd.client.session.ClientSession)", "public default boolean isInteractionAllowed(org.apache.sshd.client.session.ClientSession)"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.void serverVersionInfo(org.apache.sshd.client.session.ClientSession, java.util.List<java.lang.String>)", "public default void serverVersionInfo(org.apache.sshd.client.session.ClientSession, java.util.List<java.lang.String>)"], ["default", "org.apache.sshd.client.auth.keyboard.UserInteraction.void welcome(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)", "public default void welcome(org.apache.sshd.client.session.ClientSession, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.client.keyverifier.StaticServerKeyVerifier.isAccepted()", "public final boolean isAccepted()"], ["boolean", "org.apache.sshd.client.keyverifier.StaticServerKeyVerifier.verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)", "public final boolean verifyServerKey(org.apache.sshd.client.session.ClientSession, java.net.SocketAddress, java.security.PublicKey)"], ["org.apache.sshd.client.session.ClientSession", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.getClientSession()", "public final org.apache.sshd.client.session.ClientSession getClientSession()"], ["void", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["java.security.PublicKey", "org.apache.sshd.client.kex.AbstractDHClientKeyExchange.getServerKey()", "public java.security.PublicKey getServerKey()"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.lang.String)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.lang.String)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.lang.String) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.security.KeyPair)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, java.lang.String, java.security.KeyPair) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.security.KeyPair)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.lang.String, int, java.lang.String, java.security.KeyPair) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.lang.String)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.lang.String) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.lang.String)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.lang.String) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.security.KeyPair)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, java.lang.String, java.security.KeyPair) throws java.io.IOException"], ["default", "org.apache.sshd.client.simple.SimpleSessionClient.org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.security.KeyPair)", "public default org.apache.sshd.client.session.ClientSession sessionLogin(java.net.InetAddress, int, java.lang.String, java.security.KeyPair) throws java.io.IOException"], ["org.apache.sshd.client.channel.ChannelDirectTcpip", "org.apache.sshd.client.channel.ChannelDirectTcpip(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.client.channel.ChannelDirectTcpip(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)"], ["synchronized", "org.apache.sshd.client.channel.ChannelDirectTcpip.org.apache.sshd.client.future.OpenFuture open()", "public synchronized org.apache.sshd.client.future.OpenFuture open() throws java.io.IOException"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.channel.ChannelDirectTcpip.getLocalSocketAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getLocalSocketAddress()"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.channel.ChannelDirectTcpip.getRemoteSocketAddress()", "public org.apache.sshd.common.util.net.SshdSocketAddress getRemoteSocketAddress()"], ["org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler", "org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.String>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)", "public org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler(java.util.concurrent.atomic.AtomicReference<java.lang.String>, org.apache.sshd.common.util.EventNotifier<? super java.lang.String>)"], ["java.lang.String", "org.apache.sshd.client.channel.exit.ExitSignalChannelRequestHandler.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.client.future.DefaultOpenFuture", "org.apache.sshd.client.future.DefaultOpenFuture(java.lang.Object, java.lang.Object)", "public org.apache.sshd.client.future.DefaultOpenFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.client.future.DefaultOpenFuture.verify(long)", "public org.apache.sshd.client.future.OpenFuture verify(long) throws java.io.IOException"], ["java.lang.Throwable", "org.apache.sshd.client.future.DefaultOpenFuture.getException()", "public java.lang.Throwable getException()"], ["boolean", "org.apache.sshd.client.future.DefaultOpenFuture.isOpened()", "public boolean isOpened()"], ["void", "org.apache.sshd.client.future.DefaultOpenFuture.setOpened()", "public void setOpened()"], ["void", "org.apache.sshd.client.future.DefaultOpenFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["java.lang.Object", "org.apache.sshd.client.future.DefaultOpenFuture.verify(long)", "public java.lang.Object verify(long) throws java.io.IOException"], ["org.apache.sshd.client.session.ClientUserAuthServiceFactory", "org.apache.sshd.client.session.ClientUserAuthServiceFactory()", "public org.apache.sshd.client.session.ClientUserAuthServiceFactory()"], ["org.apache.sshd.common.Service", "org.apache.sshd.client.session.ClientUserAuthServiceFactory.create(org.apache.sshd.common.session.Session)", "public org.apache.sshd.common.Service create(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.java.lang.String executeRemoteCommand(java.lang.String)", "public default java.lang.String executeRemoteCommand(java.lang.String) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.java.lang.String executeRemoteCommand(java.lang.String, java.io.OutputStream, java.nio.charset.Charset)", "public default java.lang.String executeRemoteCommand(java.lang.String, java.io.OutputStream, java.nio.charset.Charset) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.void executeRemoteCommand(java.lang.String, java.io.OutputStream, java.io.OutputStream, java.nio.charset.Charset)", "public default void executeRemoteCommand(java.lang.String, java.io.OutputStream, java.io.OutputStream, java.nio.charset.Charset) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createLocalPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public default org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createLocalPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createRemotePortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public default org.apache.sshd.client.session.forward.ExplicitPortForwardingTracker createRemotePortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.client.session.forward.DynamicPortForwardingTracker createDynamicPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress)", "public default org.apache.sshd.client.session.forward.DynamicPortForwardingTracker createDynamicPortForwardingTracker(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["org.apache.sshd.common.keyprovider.KeyIdentityProvider", "org.apache.sshd.client.session.ClientSession.providerOf(org.apache.sshd.client.session.ClientSession)", "public static org.apache.sshd.common.keyprovider.KeyIdentityProvider providerOf(org.apache.sshd.client.session.ClientSession)"], ["java.util.Iterator<java.security.KeyPair>", "org.apache.sshd.client.session.ClientSession.keyPairIteratorOf(org.apache.sshd.client.session.ClientSession)", "public static java.util.Iterator<java.security.KeyPair> keyPairIteratorOf(org.apache.sshd.client.session.ClientSession)"], ["java.util.Iterator<java.lang.String>", "org.apache.sshd.client.session.ClientSession.passwordIteratorOf(org.apache.sshd.client.session.ClientSession)", "public static java.util.Iterator<java.lang.String> passwordIteratorOf(org.apache.sshd.client.session.ClientSession)"], ["default", "org.apache.sshd.client.session.ClientSession.org.apache.sshd.common.FactoryManager getFactoryManager()", "public default org.apache.sshd.common.FactoryManager getFactoryManager()"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$4.canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canListen(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.config.AllowTcpForwardingValue$4.canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)", "public boolean canConnect(org.apache.sshd.server.forward.TcpForwardingFilter$Type, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.session.Session)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory$1.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory$1.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.lang.Object", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory$1.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory()", "public org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory()"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.getSignatureFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>> getSignatureFactories()"], ["void", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)", "public void setSignatureFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.common.signature.Signature>>)"], ["org.apache.sshd.server.auth.pubkey.UserAuthPublicKey", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.create()", "public org.apache.sshd.server.auth.pubkey.UserAuthPublicKey create()"], ["java.lang.Object", "org.apache.sshd.server.auth.pubkey.UserAuthPublicKeyFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.auth.keyboard.InteractiveChallenge", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)", "public org.apache.sshd.server.auth.keyboard.InteractiveChallenge generateChallenge(org.apache.sshd.server.session.ServerSession, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>)", "public boolean authenticate(org.apache.sshd.server.session.ServerSession, java.lang.String, java.util.List<java.lang.String>) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.server.auth.keyboard.KeyboardInteractiveAuthenticator$1.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.shell.InteractiveProcessShellFactory", "org.apache.sshd.server.shell.InteractiveProcessShellFactory()", "public org.apache.sshd.server.shell.InteractiveProcessShellFactory()"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory()", "public org.apache.sshd.server.shell.ProcessShellFactory()"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory(java.lang.String...)", "public org.apache.sshd.server.shell.ProcessShellFactory(java.lang.String...)"], ["org.apache.sshd.server.shell.ProcessShellFactory", "org.apache.sshd.server.shell.ProcessShellFactory(java.util.List<java.lang.String>)", "public org.apache.sshd.server.shell.ProcessShellFactory(java.util.List<java.lang.String>)"], ["java.util.List<java.lang.String>", "org.apache.sshd.server.shell.ProcessShellFactory.getCommand()", "public java.util.List<java.lang.String> getCommand()"], ["void", "org.apache.sshd.server.shell.ProcessShellFactory.setCommand(java.lang.String...)", "public void setCommand(java.lang.String...)"], ["void", "org.apache.sshd.server.shell.ProcessShellFactory.setCommand(java.util.List<java.lang.String>)", "public void setCommand(java.util.List<java.lang.String>)"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.shell.ProcessShellFactory.create()", "public org.apache.sshd.server.command.Command create()"], ["java.lang.Object", "org.apache.sshd.server.shell.ProcessShellFactory.create()", "public java.lang.Object create()"], ["java.util.List<org.apache.sshd.server.kex.Moduli$DhGroup>", "org.apache.sshd.server.kex.Moduli.parseModuli(java.net.URL)", "public static java.util.List<org.apache.sshd.server.kex.Moduli$DhGroup> parseModuli(java.net.URL) throws java.io.IOException"], ["org.apache.sshd.server.session.ServerSession", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.getServerSession()", "public final org.apache.sshd.server.session.ServerSession getServerSession()"], ["void", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["java.security.PublicKey", "org.apache.sshd.server.kex.AbstractDHServerKeyExchange.getServerKey()", "public java.security.PublicKey getServerKey()"], ["org.apache.sshd.server.channel.PuttyRequestHandler", "org.apache.sshd.server.channel.PuttyRequestHandler()", "public org.apache.sshd.server.channel.PuttyRequestHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.channel.PuttyRequestHandler.process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.channel.Channel, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyRequest(java.lang.String)", "public static boolean isPuttyRequest(java.lang.String)"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyClient(org.apache.sshd.common.session.Session)", "public static boolean isPuttyClient(org.apache.sshd.common.session.Session)"], ["boolean", "org.apache.sshd.server.channel.PuttyRequestHandler.isPuttyClient(java.lang.String)", "public static boolean isPuttyClient(java.lang.String)"], ["java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>", "org.apache.sshd.server.channel.PuttyRequestHandler.resolveShellTtyOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)", "public static java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer> resolveShellTtyOptions(java.util.Map<org.apache.sshd.common.channel.PtyMode, java.lang.Integer>)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.channel.PuttyRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.toString()", "public java.lang.String toString()"], ["org.apache.sshd.server.command.CommandFactory", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.getDelegateCommandFactory()", "public org.apache.sshd.server.command.CommandFactory getDelegateCommandFactory()"], ["void", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.setDelegateCommandFactory(org.apache.sshd.server.command.CommandFactory)", "public void setDelegateCommandFactory(org.apache.sshd.server.command.CommandFactory)"], ["org.apache.sshd.server.command.Command", "org.apache.sshd.server.command.AbstractDelegatingCommandFactory.createCommand(java.lang.String)", "public org.apache.sshd.server.command.Command createCommand(java.lang.String)"], ["org.apache.sshd.server.global.CancelTcpipForwardHandler", "org.apache.sshd.server.global.CancelTcpipForwardHandler()", "public org.apache.sshd.server.global.CancelTcpipForwardHandler()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.CancelTcpipForwardHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.server.global.CancelTcpipForwardHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.server.forward.ForwardingFilter", "org.apache.sshd.server.forward.ForwardingFilter.asForwardingFilter(org.apache.sshd.server.forward.AgentForwardingFilter, org.apache.sshd.server.forward.X11ForwardingFilter, org.apache.sshd.server.forward.TcpForwardingFilter)", "public static org.apache.sshd.server.forward.ForwardingFilter asForwardingFilter(org.apache.sshd.server.forward.AgentForwardingFilter, org.apache.sshd.server.forward.X11ForwardingFilter, org.apache.sshd.server.forward.TcpForwardingFilter)"], ["org.apache.sshd.server.forward.TcpForwardingFilter$Type", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getType()", "public final org.apache.sshd.server.forward.TcpForwardingFilter$Type getType()"], ["java.lang.String", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.util.threads.CloseableExecutorService", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.getExecutorService()", "public org.apache.sshd.common.util.threads.CloseableExecutorService getExecutorService()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.create()", "public org.apache.sshd.common.channel.Channel create()"], ["java.lang.Object", "org.apache.sshd.server.forward.TcpipServerChannel$TcpipFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.server.session.SessionFactory", "org.apache.sshd.server.session.SessionFactory(org.apache.sshd.server.ServerFactoryManager)", "public org.apache.sshd.server.session.SessionFactory(org.apache.sshd.server.ServerFactoryManager)"], ["org.apache.sshd.server.ServerFactoryManager", "org.apache.sshd.server.session.SessionFactory.getServer()", "public final org.apache.sshd.server.ServerFactoryManager getServer()"], ["default", "org.apache.sshd.server.session.ServerSession.org.apache.sshd.common.FactoryManager getFactoryManager()", "public default org.apache.sshd.common.FactoryManager getFactoryManager()"], ["java.lang.String", "org.apache.sshd.agent.local.ProxyAgentFactory$1.getId()", "public java.lang.String getId()"], ["boolean", "org.apache.sshd.agent.local.ProxyAgentFactory$1.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.agent.local.ProxyAgentFactory$1.close()", "public void close() throws java.io.IOException"], ["boolean", "org.apache.sshd.agent.local.AgentForwardedChannel$1.isOpen()", "public boolean isOpen()"], ["void", "org.apache.sshd.agent.local.AgentForwardedChannel$1.close()", "public void close() throws java.io.IOException"], ["org.apache.sshd.agent.unix.ChannelAgentForwardingFactory", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String)", "public org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String)"], ["org.apache.sshd.agent.unix.ChannelAgentForwardingFactory", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String, org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)", "public org.apache.sshd.agent.unix.ChannelAgentForwardingFactory(java.lang.String, org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["java.lang.String", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.getName()", "public java.lang.String getName()"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.create()", "public org.apache.sshd.common.channel.Channel create()"], ["java.lang.Object", "org.apache.sshd.agent.unix.ChannelAgentForwardingFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.agent.unix.ChannelAgentForwarding", "org.apache.sshd.agent.unix.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)", "public org.apache.sshd.agent.unix.ChannelAgentForwarding(org.apache.sshd.common.util.threads.CloseableExecutorService)"], ["org.apache.sshd.common.file.util.BaseFileSystem", "org.apache.sshd.common.file.util.BaseFileSystem(java.nio.file.spi.FileSystemProvider)", "public org.apache.sshd.common.file.util.BaseFileSystem(java.nio.file.spi.FileSystemProvider)"], ["T", "org.apache.sshd.common.file.util.BaseFileSystem.getDefaultDir()", "public T getDefaultDir()"], ["boolean", "org.apache.sshd.common.file.util.BaseFileSystem.isReadOnly()", "public boolean isReadOnly()"], ["java.nio.file.spi.FileSystemProvider", "org.apache.sshd.common.file.util.BaseFileSystem.provider()", "public java.nio.file.spi.FileSystemProvider provider()"], ["java.lang.String", "org.apache.sshd.common.file.util.BaseFileSystem.getSeparator()", "public java.lang.String getSeparator()"], ["java.lang.Iterable<java.nio.file.Path>", "org.apache.sshd.common.file.util.BaseFileSystem.getRootDirectories()", "public java.lang.Iterable<java.nio.file.Path> getRootDirectories()"], ["java.lang.Iterable<java.nio.file.FileStore>", "org.apache.sshd.common.file.util.BaseFileSystem.getFileStores()", "public java.lang.Iterable<java.nio.file.FileStore> getFileStores()"], ["T", "org.apache.sshd.common.file.util.BaseFileSystem.getPath(java.lang.String, java.lang.String...)", "public T getPath(java.lang.String, java.lang.String...)"], ["java.nio.file.PathMatcher", "org.apache.sshd.common.file.util.BaseFileSystem.getPathMatcher(java.lang.String)", "public java.nio.file.PathMatcher getPathMatcher(java.lang.String)"], ["java.nio.file.WatchService", "org.apache.sshd.common.file.util.BaseFileSystem.newWatchService()", "public java.nio.file.WatchService newWatchService() throws java.io.IOException"], ["org.apache.sshd.common.file.nativefs.NativeFileSystemFactory", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory()", "public org.apache.sshd.common.file.nativefs.NativeFileSystemFactory()"], ["org.apache.sshd.common.file.nativefs.NativeFileSystemFactory", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory(boolean)", "public org.apache.sshd.common.file.nativefs.NativeFileSystemFactory(boolean)"], ["java.lang.String", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.getUsersHomeDir()", "public java.lang.String getUsersHomeDir()"], ["void", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.setUsersHomeDir(java.lang.String)", "public void setUsersHomeDir(java.lang.String)"], ["boolean", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.isCreateHome()", "public boolean isCreateHome()"], ["void", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.setCreateHome(boolean)", "public void setCreateHome(boolean)"], ["java.nio.file.FileSystem", "org.apache.sshd.common.file.nativefs.NativeFileSystemFactory.createFileSystem(org.apache.sshd.common.session.Session)", "public java.nio.file.FileSystem createFileSystem(org.apache.sshd.common.session.Session) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthMethodFactory.getName()", "public final java.lang.String getName()"], ["java.lang.String", "org.apache.sshd.common.auth.AbstractUserAuthMethodFactory.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>", "org.apache.sshd.common.io.AbstractIoServiceFactoryFactory.getExecutorServiceFactory()", "public org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService> getExecutorServiceFactory()"], ["void", "org.apache.sshd.common.io.AbstractIoServiceFactoryFactory.setExecutorServiceFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)", "public void setExecutorServiceFactory(org.apache.sshd.common.Factory<org.apache.sshd.common.util.threads.CloseableExecutorService>)"], ["org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture(java.lang.Object, java.lang.Object, java.nio.ByteBuffer)", "public org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture(java.lang.Object, java.lang.Object, java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.getBuffer()", "public java.nio.ByteBuffer getBuffer()"], ["void", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.setWritten()", "public void setWritten()"], ["void", "org.apache.sshd.common.io.nio2.Nio2DefaultIoWriteFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture(java.lang.Object, java.lang.Object)", "public org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture(java.lang.Object, java.lang.Object)"], ["org.apache.sshd.common.io.IoSession", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.getSession()", "public org.apache.sshd.common.io.IoSession getSession()"], ["java.lang.Throwable", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.getException()", "public java.lang.Throwable getException()"], ["boolean", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.isConnected()", "public boolean isConnected()"], ["void", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.setSession(org.apache.sshd.common.io.IoSession)", "public void setSession(org.apache.sshd.common.io.IoSession)"], ["void", "org.apache.sshd.common.io.nio2.Nio2Connector$DefaultIoConnectFuture.setException(java.lang.Throwable)", "public void setException(java.lang.Throwable)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getCipherFactoriesNameList()", "public default java.lang.String getCipherFactoriesNameList()"], ["java.util.List<java.lang.String>", "org.apache.sshd.common.kex.KexFactoryManager.getCipherFactoriesNames()", "public default java.util.List<java.lang.String> getCipherFactoriesNames()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNameList(java.lang.String)", "public default void setCipherFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNames(java.lang.String...)", "public default void setCipherFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCipherFactoriesNames(java.util.Collection<java.lang.String>)", "public default void setCipherFactoriesNames(java.util.Collection<java.lang.String>)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getCompressionFactoriesNameList()", "public default java.lang.String getCompressionFactoriesNameList()"], ["java.util.List<java.lang.String>", "org.apache.sshd.common.kex.KexFactoryManager.getCompressionFactoriesNames()", "public default java.util.List<java.lang.String> getCompressionFactoriesNames()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNameList(java.lang.String)", "public default void setCompressionFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNames(java.lang.String...)", "public default void setCompressionFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setCompressionFactoriesNames(java.util.Collection<java.lang.String>)", "public default void setCompressionFactoriesNames(java.util.Collection<java.lang.String>)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.java.lang.String getMacFactoriesNameList()", "public default java.lang.String getMacFactoriesNameList()"], ["java.util.List<java.lang.String>", "org.apache.sshd.common.kex.KexFactoryManager.getMacFactoriesNames()", "public default java.util.List<java.lang.String> getMacFactoriesNames()"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNameList(java.lang.String)", "public default void setMacFactoriesNameList(java.lang.String)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNames(java.lang.String...)", "public default void setMacFactoriesNames(java.lang.String...)"], ["default", "org.apache.sshd.common.kex.KexFactoryManager.void setMacFactoriesNames(java.util.Collection<java.lang.String>)", "public default void setMacFactoriesNames(java.util.Collection<java.lang.String>)"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$2.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$2.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$2.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.DHG", "org.apache.sshd.common.kex.BuiltinDHFactories$1.create(java.lang.Object...)", "public org.apache.sshd.common.kex.DHG create(java.lang.Object...) throws java.lang.Exception"], ["boolean", "org.apache.sshd.common.kex.BuiltinDHFactories$1.isSupported()", "public boolean isSupported()"], ["org.apache.sshd.common.kex.AbstractDH", "org.apache.sshd.common.kex.BuiltinDHFactories$1.create(java.lang.Object[])", "public org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[]) throws java.lang.Exception"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH()", "public org.apache.sshd.common.kex.ECDH() throws java.lang.Exception"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(java.lang.String)", "public org.apache.sshd.common.kex.ECDH(java.lang.String) throws java.lang.Exception"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(org.apache.sshd.common.cipher.ECCurves)", "public org.apache.sshd.common.kex.ECDH(org.apache.sshd.common.cipher.ECCurves) throws java.lang.Exception"], ["org.apache.sshd.common.kex.ECDH", "org.apache.sshd.common.kex.ECDH(java.security.spec.ECParameterSpec)", "public org.apache.sshd.common.kex.ECDH(java.security.spec.ECParameterSpec) throws java.lang.Exception"], ["byte[]", "org.apache.sshd.common.kex.ECDH.getE()", "public byte[] getE() throws java.lang.Exception"], ["void", "org.apache.sshd.common.kex.ECDH.setCurveParameters(java.security.spec.ECParameterSpec)", "public void setCurveParameters(java.security.spec.ECParameterSpec)"], ["void", "org.apache.sshd.common.kex.ECDH.setF(byte[])", "public void setF(byte[])"], ["org.apache.sshd.common.digest.Digest", "org.apache.sshd.common.kex.ECDH.getHash()", "public org.apache.sshd.common.digest.Digest getHash() throws java.lang.Exception"], ["org.apache.sshd.common.channel.ChannelAsyncOutputStream", "org.apache.sshd.common.channel.ChannelAsyncOutputStream(org.apache.sshd.common.channel.Channel, byte)", "public org.apache.sshd.common.channel.ChannelAsyncOutputStream(org.apache.sshd.common.channel.Channel, byte)"], ["org.apache.sshd.common.channel.Channel", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.getChannel()", "public org.apache.sshd.common.channel.Channel getChannel()"], ["void", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.onWindowExpanded()", "public void onWindowExpanded() throws java.io.IOException"], ["synchronized", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer)", "public synchronized org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["java.lang.String", "org.apache.sshd.common.channel.ChannelAsyncOutputStream.toString()", "public java.lang.String toString()"], ["org.apache.sshd.common.channel.RequestHandler$Result[]", "org.apache.sshd.common.channel.RequestHandler$Result.values()", "public static org.apache.sshd.common.channel.RequestHandler$Result[] values()"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.channel.RequestHandler$Result.valueOf(java.lang.String)", "public static org.apache.sshd.common.channel.RequestHandler$Result valueOf(java.lang.String)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.channel.RequestHandler$Result.fromName(java.lang.String)", "public static org.apache.sshd.common.channel.RequestHandler$Result fromName(java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String)", "public org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.Throwable)"], ["org.apache.sshd.common.channel.exception.SshChannelClosedException", "org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String, java.lang.Throwable)", "public org.apache.sshd.common.channel.exception.SshChannelClosedException(int, java.lang.String, java.lang.Throwable)"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishingExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean)", "public default void establishingExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishedExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)", "public default void establishedExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tearingDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress)", "public default void tearingDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tornDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)", "public default void tornDownExplicitTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, boolean, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishingDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress)", "public default void establishingDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void establishedDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)", "public default void establishedDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tearingDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress)", "public default void tearingDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["default", "org.apache.sshd.common.forward.PortForwardingEventListener.void tornDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable)", "public default void tornDownDynamicTunnel(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.net.SshdSocketAddress, java.lang.Throwable) throws java.io.IOException"], ["<L extends org.apache.sshd.common.forward.PortForwardingEventListener> L", "org.apache.sshd.common.forward.PortForwardingEventListener.validateListener(L)", "public static <L extends org.apache.sshd.common.forward.PortForwardingEventListener> L validateListener(L)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionCreated(org.apache.sshd.common.session.Session)", "public default void sessionCreated(org.apache.sshd.common.session.Session)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionNegotiationStart(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>)", "public default void sessionNegotiationStart(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionNegotiationEnd(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.lang.Throwable)", "public default void sessionNegotiationEnd(org.apache.sshd.common.session.Session, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.util.Map<org.apache.sshd.common.kex.KexProposalOption, java.lang.String>, java.lang.Throwable)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)", "public default void sessionEvent(org.apache.sshd.common.session.Session, org.apache.sshd.common.session.SessionListener$Event)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)", "public default void sessionException(org.apache.sshd.common.session.Session, java.lang.Throwable)"], ["default", "org.apache.sshd.common.session.SessionListener.void sessionClosed(org.apache.sshd.common.session.Session)", "public default void sessionClosed(org.apache.sshd.common.session.Session)"], ["<L extends org.apache.sshd.common.session.SessionListener> L", "org.apache.sshd.common.session.SessionListener.validateListener(L)", "public static <L extends org.apache.sshd.common.session.SessionListener> L validateListener(L)"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.session.helpers.AbstractConnectionServiceRequestHandler.process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(org.apache.sshd.common.session.ConnectionService, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.channel.RequestHandler$Result", "org.apache.sshd.common.session.helpers.AbstractConnectionServiceRequestHandler.process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.common.channel.RequestHandler$Result process(java.lang.Object, java.lang.String, boolean, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter()", "public org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter()"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public void handleIgnoreMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleIgnoreMessage(org.apache.sshd.common.session.Session, byte[], org.apache.sshd.common.util.buffer.Buffer)", "public void handleIgnoreMessage(org.apache.sshd.common.session.Session, byte[], org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public void handleDebugMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleDebugMessage(org.apache.sshd.common.session.Session, boolean, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer)", "public void handleDebugMessage(org.apache.sshd.common.session.Session, boolean, java.lang.String, java.lang.String, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer)", "public void handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["void", "org.apache.sshd.common.session.helpers.ReservedSessionMessagesHandlerAdapter.handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer, long)", "public void handleUnimplementedMessage(org.apache.sshd.common.session.Session, org.apache.sshd.common.util.buffer.Buffer, long) throws java.lang.Exception"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory()", "public org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory()"], ["org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()", "public org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractive create()"], ["java.lang.Object", "org.apache.sshd.client.auth.keyboard.UserAuthKeyboardInteractiveFactory.create()", "public java.lang.Object create()"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)", "public org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean)", "public org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.io.File)", "public org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.io.File)"], ["org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.nio.file.Path, java.nio.file.LinkOption...)", "public org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier, boolean, java.nio.file.Path, java.nio.file.LinkOption...)"], ["boolean", "org.apache.sshd.client.keyverifier.DefaultKnownHostsServerKeyVerifier.isStrict()", "public final boolean isStrict()"], ["java.lang.String", "org.apache.sshd.client.kex.DHGEXClient.getName()", "public final java.lang.String getName()"], ["org.apache.sshd.common.kex.KeyExchangeFactory", "org.apache.sshd.client.kex.DHGEXClient.newFactory(org.apache.sshd.common.kex.DHFactory)", "public static org.apache.sshd.common.kex.KeyExchangeFactory newFactory(org.apache.sshd.common.kex.DHFactory)"], ["void", "org.apache.sshd.client.kex.DHGEXClient.init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[])", "public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception"], ["boolean", "org.apache.sshd.client.kex.DHGEXClient.next(int, org.apache.sshd.common.util.buffer.Buffer)", "public boolean next(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception"], ["java.lang.String", "org.apache.sshd.client.channel.AbstractClientChannel.getChannelType()", "public java.lang.String getChannelType()"], ["org.apache.sshd.client.channel.ClientChannel$Streaming", "org.apache.sshd.client.channel.AbstractClientChannel.getStreaming()", "public org.apache.sshd.client.channel.ClientChannel$Streaming getStreaming()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setStreaming(org.apache.sshd.client.channel.ClientChannel$Streaming)", "public void setStreaming(org.apache.sshd.client.channel.ClientChannel$Streaming)"], ["org.apache.sshd.common.io.IoOutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncIn()", "public org.apache.sshd.common.io.IoOutputStream getAsyncIn()"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncOut()", "public org.apache.sshd.common.io.IoInputStream getAsyncOut()"], ["org.apache.sshd.common.io.IoInputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getAsyncErr()", "public org.apache.sshd.common.io.IoInputStream getAsyncErr()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedIn()", "public java.io.OutputStream getInvertedIn()"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getIn()", "public java.io.InputStream getIn()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setIn(java.io.InputStream)", "public void setIn(java.io.InputStream)"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedOut()", "public java.io.InputStream getInvertedOut()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getOut()", "public java.io.OutputStream getOut()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setOut(java.io.OutputStream)", "public void setOut(java.io.OutputStream)"], ["java.io.InputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getInvertedErr()", "public java.io.InputStream getInvertedErr()"], ["java.io.OutputStream", "org.apache.sshd.client.channel.AbstractClientChannel.getErr()", "public java.io.OutputStream getErr()"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.setErr(java.io.OutputStream)", "public void setErr(java.io.OutputStream)"], ["java.util.Set<org.apache.sshd.client.channel.ClientChannelEvent>", "org.apache.sshd.client.channel.AbstractClientChannel.waitFor(java.util.Collection<org.apache.sshd.client.channel.ClientChannelEvent>, long)", "public java.util.Set<org.apache.sshd.client.channel.ClientChannelEvent> waitFor(java.util.Collection<org.apache.sshd.client.channel.ClientChannelEvent>, long)"], ["java.util.Set<org.apache.sshd.client.channel.ClientChannelEvent>", "org.apache.sshd.client.channel.AbstractClientChannel.getChannelState()", "public java.util.Set<org.apache.sshd.client.channel.ClientChannelEvent> getChannelState()"], ["synchronized", "org.apache.sshd.client.channel.AbstractClientChannel.org.apache.sshd.client.future.OpenFuture open()", "public synchronized org.apache.sshd.client.future.OpenFuture open() throws java.io.IOException"], ["org.apache.sshd.client.future.OpenFuture", "org.apache.sshd.client.channel.AbstractClientChannel.open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)", "public org.apache.sshd.client.future.OpenFuture open(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer)", "public void handleOpenSuccess(int, long, long, org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)", "public void handleOpenFailure(org.apache.sshd.common.util.buffer.Buffer)"], ["void", "org.apache.sshd.client.channel.AbstractClientChannel.handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer)", "public void handleWindowAdjust(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException"], ["java.lang.Integer", "org.apache.sshd.client.channel.AbstractClientChannel.getExitStatus()", "public java.lang.Integer getExitStatus()"], ["java.lang.String", "org.apache.sshd.client.channel.AbstractClientChannel.getExitSignal()", "public java.lang.String getExitSignal()"], ["void", "org.apache.sshd.client.SshClient$1.operationComplete(org.apache.sshd.common.io.IoConnectFuture)", "public void operationComplete(org.apache.sshd.common.io.IoConnectFuture)"], ["java.lang.String", "org.apache.sshd.client.SshClient$1.toString()", "public java.lang.String toString()"], ["void", "org.apache.sshd.client.SshClient$1.operationComplete(org.apache.sshd.common.future.SshFuture)", "public void operationComplete(org.apache.sshd.common.future.SshFuture)"], ["org.apache.sshd.client.global.OpenSshHostKeysHandler", "org.apache.sshd.client.global.OpenSshHostKeysHandler()", "public org.apache.sshd.client.global.OpenSshHostKeysHandler()"], ["org.apache.sshd.client.global.OpenSshHostKeysHandler", "org.apache.sshd.client.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)", "public org.apache.sshd.client.global.OpenSshHostKeysHandler(org.apache.sshd.common.util.buffer.keys.BufferPublicKeyParser<? extends java.security.PublicKey>)"], ["org.apache.sshd.client.ClientFactoryManager", "org.apache.sshd.client.session.AbstractClientSession.getFactoryManager()", "public org.apache.sshd.client.ClientFactoryManager getFactoryManager()"], ["java.net.SocketAddress", "org.apache.sshd.client.session.AbstractClientSession.getConnectAddress()", "public java.net.SocketAddress getConnectAddress()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setConnectAddress(java.net.SocketAddress)", "public void setConnectAddress(java.net.SocketAddress)"], ["org.apache.sshd.client.keyverifier.ServerKeyVerifier", "org.apache.sshd.client.session.AbstractClientSession.getServerKeyVerifier()", "public org.apache.sshd.client.keyverifier.ServerKeyVerifier getServerKeyVerifier()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)", "public void setServerKeyVerifier(org.apache.sshd.client.keyverifier.ServerKeyVerifier)"], ["org.apache.sshd.client.auth.keyboard.UserInteraction", "org.apache.sshd.client.session.AbstractClientSession.getUserInteraction()", "public org.apache.sshd.client.auth.keyboard.UserInteraction getUserInteraction()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)", "public void setUserInteraction(org.apache.sshd.client.auth.keyboard.UserInteraction)"], ["java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>", "org.apache.sshd.client.session.AbstractClientSession.getUserAuthFactories()", "public java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>> getUserAuthFactories()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)", "public void setUserAuthFactories(java.util.List<org.apache.sshd.common.NamedFactory<org.apache.sshd.client.auth.UserAuth>>)"], ["org.apache.sshd.client.auth.AuthenticationIdentitiesProvider", "org.apache.sshd.client.session.AbstractClientSession.getRegisteredIdentities()", "public org.apache.sshd.client.auth.AuthenticationIdentitiesProvider getRegisteredIdentities()"], ["org.apache.sshd.client.auth.password.PasswordIdentityProvider", "org.apache.sshd.client.session.AbstractClientSession.getPasswordIdentityProvider()", "public org.apache.sshd.client.auth.password.PasswordIdentityProvider getPasswordIdentityProvider()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)", "public void setPasswordIdentityProvider(org.apache.sshd.client.auth.password.PasswordIdentityProvider)"], ["org.apache.sshd.client.session.ClientProxyConnector", "org.apache.sshd.client.session.AbstractClientSession.getClientProxyConnector()", "public org.apache.sshd.client.session.ClientProxyConnector getClientProxyConnector()"], ["void", "org.apache.sshd.client.session.AbstractClientSession.setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)", "public void setClientProxyConnector(org.apache.sshd.client.session.ClientProxyConnector)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.addPasswordIdentity(java.lang.String)", "public void addPasswordIdentity(java.lang.String)"], ["java.lang.String", "org.apache.sshd.client.session.AbstractClientSession.removePasswordIdentity(java.lang.String)", "public java.lang.String removePasswordIdentity(java.lang.String)"], ["void", "org.apache.sshd.client.session.AbstractClientSession.addPublicKeyIdentity(java.security.KeyPair)", "public void addPublicKeyIdentity(java.security.KeyPair)"], ["java.security.KeyPair", "org.apache.sshd.client.session.AbstractClientSession.removePublicKeyIdentity(java.security.KeyPair)", "public java.security.KeyPair removePublicKeyIdentity(java.security.KeyPair)"], ["org.apache.sshd.client.channel.ClientChannel", "org.apache.sshd.client.session.AbstractClientSession.createChannel(java.lang.String)", "public org.apache.sshd.client.channel.ClientChannel createChannel(java.lang.String) throws java.io.IOException"], ["org.apache.sshd.client.channel.ClientChannel", "org.apache.sshd.client.session.AbstractClientSession.createChannel(java.lang.String, java.lang.String)", "public org.apache.sshd.client.channel.ClientChannel createChannel(java.lang.String, java.lang.String) throws java.io.IOException"], ["org.apache.sshd.client.channel.ChannelExec", "org.apache.sshd.client.session.AbstractClientSession.createExecChannel(java.lang.String)", "public org.apache.sshd.client.channel.ChannelExec createExecChannel(java.lang.String) throws java.io.IOException"], ["org.apache.sshd.client.channel.ChannelSubsystem", "org.apache.sshd.client.session.AbstractClientSession.createSubsystemChannel(java.lang.String)", "public org.apache.sshd.client.channel.ChannelSubsystem createSubsystemChannel(java.lang.String) throws java.io.IOException"], ["org.apache.sshd.client.channel.ChannelDirectTcpip", "org.apache.sshd.client.session.AbstractClientSession.createDirectTcpipChannel(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.client.channel.ChannelDirectTcpip createDirectTcpipChannel(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.common.util.net.SshdSocketAddress startLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public void stopLocalPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.common.util.net.SshdSocketAddress startRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress, org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public void stopRemotePortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["org.apache.sshd.common.util.net.SshdSocketAddress", "org.apache.sshd.client.session.AbstractClientSession.startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public org.apache.sshd.common.util.net.SshdSocketAddress startDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["void", "org.apache.sshd.client.session.AbstractClientSession.stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress)", "public void stopDynamicPortForwarding(org.apache.sshd.common.util.net.SshdSocketAddress) throws java.io.IOException"], ["void", "org.apache.sshd.client.session.AbstractClientSession.startService(java.lang.String)", "public void startService(java.lang.String) throws java.lang.Exception"], ["org.apache.sshd.client.channel.ChannelShell", "org.apache.sshd.client.session.AbstractClientSession.createShellChannel()", "public org.apache.sshd.client.channel.ChannelShell createShellChannel() throws java.io.IOException"], ["org.apache.sshd.common.future.KeyExchangeFuture", "org.apache.sshd.client.session.AbstractClientSession.switchToNoneCipher()", "public org.apache.sshd.common.future.KeyExchangeFuture switchToNoneCipher() throws java.io.IOException"], ["org.apache.sshd.common.FactoryManager", "org.apache.sshd.client.session.AbstractClientSession.getFactoryManager()", "public org.apache.sshd.common.FactoryManager getFactoryManager()"]]}