{"solr-solrj-5.2.1.jar": [["org.apache.solr.client.solrj.ResponseParser", "org.apache.solr.client.solrj.ResponseParser()", "public org.apache.solr.client.solrj.ResponseParser()"], ["java.lang.String", "org.apache.solr.client.solrj.ResponseParser.getContentType()", "public java.lang.String getContentType()"], ["java.lang.String", "org.apache.solr.client.solrj.ResponseParser.getVersion()", "public java.lang.String getVersion()"], ["boolean", "org.apache.solr.client.solrj.SolrClient$1.hasNext()", "public boolean hasNext()"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.client.solrj.SolrClient$1.next()", "public org.apache.solr.common.SolrInputDocument next()"], ["void", "org.apache.solr.client.solrj.SolrClient$1.remove()", "public void remove()"], ["java.lang.Object", "org.apache.solr.client.solrj.SolrClient$1.next()", "public java.lang.Object next()"], ["org.apache.solr.client.solrj.SolrClient", "org.apache.solr.client.solrj.SolrClient()", "public org.apache.solr.client.solrj.SolrClient()"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.lang.String, java.util.Collection<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.lang.String, java.util.Collection<org.apache.solr.common.SolrInputDocument>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.util.Collection<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.util.Collection<org.apache.solr.common.SolrInputDocument>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.lang.String, java.util.Collection<org.apache.solr.common.SolrInputDocument>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.lang.String, java.util.Collection<org.apache.solr.common.SolrInputDocument>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.util.Collection<org.apache.solr.common.SolrInputDocument>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.util.Collection<org.apache.solr.common.SolrInputDocument>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.lang.String, org.apache.solr.common.SolrInputDocument)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.lang.String, org.apache.solr.common.SolrInputDocument) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(org.apache.solr.common.SolrInputDocument)", "public org.apache.solr.client.solrj.response.UpdateResponse add(org.apache.solr.common.SolrInputDocument) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.lang.String, org.apache.solr.common.SolrInputDocument, int)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.lang.String, org.apache.solr.common.SolrInputDocument, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(org.apache.solr.common.SolrInputDocument, int)", "public org.apache.solr.client.solrj.response.UpdateResponse add(org.apache.solr.common.SolrInputDocument, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.lang.String, java.util.Iterator<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.lang.String, java.util.Iterator<org.apache.solr.common.SolrInputDocument>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.add(java.util.Iterator<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.response.UpdateResponse add(java.util.Iterator<org.apache.solr.common.SolrInputDocument>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBean(java.lang.String, java.lang.Object)", "public org.apache.solr.client.solrj.response.UpdateResponse addBean(java.lang.String, java.lang.Object) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBean(java.lang.Object)", "public org.apache.solr.client.solrj.response.UpdateResponse addBean(java.lang.Object) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBean(java.lang.String, java.lang.Object, int)", "public org.apache.solr.client.solrj.response.UpdateResponse addBean(java.lang.String, java.lang.Object, int) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBean(java.lang.Object, int)", "public org.apache.solr.client.solrj.response.UpdateResponse addBean(java.lang.Object, int) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.lang.String, java.util.Collection<?>)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.lang.String, java.util.Collection<?>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.util.Collection<?>)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.util.Collection<?>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.lang.String, java.util.Collection<?>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.lang.String, java.util.Collection<?>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.util.Collection<?>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.util.Collection<?>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.lang.String, java.util.Iterator<?>)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.lang.String, java.util.Iterator<?>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.addBeans(java.util.Iterator<?>)", "public org.apache.solr.client.solrj.response.UpdateResponse addBeans(java.util.Iterator<?>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit(java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse commit(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit()", "public org.apache.solr.client.solrj.response.UpdateResponse commit() throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit(java.lang.String, boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse commit(java.lang.String, boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit(boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse commit(boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit(java.lang.String, boolean, boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse commit(java.lang.String, boolean, boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.commit(boolean, boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse commit(boolean, boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize(java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse optimize(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize()", "public org.apache.solr.client.solrj.response.UpdateResponse optimize() throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize(java.lang.String, boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse optimize(java.lang.String, boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize(boolean, boolean)", "public org.apache.solr.client.solrj.response.UpdateResponse optimize(boolean, boolean) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize(java.lang.String, boolean, boolean, int)", "public org.apache.solr.client.solrj.response.UpdateResponse optimize(java.lang.String, boolean, boolean, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.optimize(boolean, boolean, int)", "public org.apache.solr.client.solrj.response.UpdateResponse optimize(boolean, boolean, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.rollback(java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse rollback(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.rollback()", "public org.apache.solr.client.solrj.response.UpdateResponse rollback() throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String, java.lang.String, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String, java.lang.String, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String, java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String, java.util.List<java.lang.String>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.util.List<java.lang.String>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.lang.String, java.util.List<java.lang.String>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.lang.String, java.util.List<java.lang.String>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteById(java.util.List<java.lang.String>, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteById(java.util.List<java.lang.String>, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteByQuery(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteByQuery(java.lang.String, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteByQuery(java.lang.String)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteByQuery(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteByQuery(java.lang.String, java.lang.String, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteByQuery(java.lang.String, java.lang.String, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.SolrClient.deleteByQuery(java.lang.String, int)", "public org.apache.solr.client.solrj.response.UpdateResponse deleteByQuery(java.lang.String, int) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.SolrPingResponse", "org.apache.solr.client.solrj.SolrClient.ping()", "public org.apache.solr.client.solrj.response.SolrPingResponse ping() throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.query(java.lang.String, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.client.solrj.response.QueryResponse query(java.lang.String, org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.query(org.apache.solr.common.params.SolrParams)", "public org.apache.solr.client.solrj.response.QueryResponse query(org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.query(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD)", "public org.apache.solr.client.solrj.response.QueryResponse query(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.query(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD)", "public org.apache.solr.client.solrj.response.QueryResponse query(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.queryAndStreamResponse(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.StreamingResponseCallback)", "public org.apache.solr.client.solrj.response.QueryResponse queryAndStreamResponse(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.StreamingResponseCallback) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.SolrClient.queryAndStreamResponse(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.StreamingResponseCallback)", "public org.apache.solr.client.solrj.response.QueryResponse queryAndStreamResponse(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.StreamingResponseCallback) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String, java.lang.String)", "public org.apache.solr.common.SolrDocument getById(java.lang.String, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String)", "public org.apache.solr.common.SolrDocument getById(java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String, java.lang.String, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.SolrDocument getById(java.lang.String, java.lang.String, org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.SolrDocument getById(java.lang.String, org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String, java.util.Collection<java.lang.String>)", "public org.apache.solr.common.SolrDocumentList getById(java.lang.String, java.util.Collection<java.lang.String>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.SolrClient.getById(java.util.Collection<java.lang.String>)", "public org.apache.solr.common.SolrDocumentList getById(java.util.Collection<java.lang.String>) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.SolrClient.getById(java.lang.String, java.util.Collection<java.lang.String>, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.SolrDocumentList getById(java.lang.String, java.util.Collection<java.lang.String>, org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.SolrClient.getById(java.util.Collection<java.lang.String>, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.SolrDocumentList getById(java.util.Collection<java.lang.String>, org.apache.solr.common.params.SolrParams) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.SolrClient.request(org.apache.solr.client.solrj.SolrRequest)", "public final org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.beans.DocumentObjectBinder", "org.apache.solr.client.solrj.SolrClient.getBinder()", "public org.apache.solr.client.solrj.beans.DocumentObjectBinder getBinder()"], ["void", "org.apache.solr.client.solrj.SolrClient.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.SolrQuery$ORDER[]", "org.apache.solr.client.solrj.SolrQuery$ORDER.values()", "public static org.apache.solr.client.solrj.SolrQuery$ORDER[] values()"], ["org.apache.solr.client.solrj.SolrQuery$ORDER", "org.apache.solr.client.solrj.SolrQuery$ORDER.valueOf(java.lang.String)", "public static org.apache.solr.client.solrj.SolrQuery$ORDER valueOf(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery$ORDER", "org.apache.solr.client.solrj.SolrQuery$ORDER.reverse()", "public org.apache.solr.client.solrj.SolrQuery$ORDER reverse()"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)", "public org.apache.solr.client.solrj.SolrQuery$SortClause(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery$SortClause(java.lang.String, java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause.create(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)", "public static org.apache.solr.client.solrj.SolrQuery$SortClause create(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause.create(java.lang.String, java.lang.String)", "public static org.apache.solr.client.solrj.SolrQuery$SortClause create(java.lang.String, java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause.asc(java.lang.String)", "public static org.apache.solr.client.solrj.SolrQuery$SortClause asc(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery$SortClause", "org.apache.solr.client.solrj.SolrQuery$SortClause.desc(java.lang.String)", "public static org.apache.solr.client.solrj.SolrQuery$SortClause desc(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery$SortClause.getItem()", "public java.lang.String getItem()"], ["org.apache.solr.client.solrj.SolrQuery$ORDER", "org.apache.solr.client.solrj.SolrQuery$SortClause.getOrder()", "public org.apache.solr.client.solrj.SolrQuery$ORDER getOrder()"], ["boolean", "org.apache.solr.client.solrj.SolrQuery$SortClause.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.apache.solr.client.solrj.SolrQuery$SortClause.hashCode()", "public int hashCode()"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery$SortClause.toString()", "public java.lang.String toString()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery()", "public org.apache.solr.client.solrj.SolrQuery()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTerms(boolean)", "public org.apache.solr.client.solrj.SolrQuery setTerms(boolean)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getTerms()", "public boolean getTerms()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addTermsField(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery addTermsField(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getTermsFields()", "public java.lang.String[] getTermsFields()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsLower(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsLower(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getTermsLower()", "public java.lang.String getTermsLower()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsUpper(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsUpper(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getTermsUpper()", "public java.lang.String getTermsUpper()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsUpperInclusive(boolean)", "public org.apache.solr.client.solrj.SolrQuery setTermsUpperInclusive(boolean)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getTermsUpperInclusive()", "public boolean getTermsUpperInclusive()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsLowerInclusive(boolean)", "public org.apache.solr.client.solrj.SolrQuery setTermsLowerInclusive(boolean)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getTermsLowerInclusive()", "public boolean getTermsLowerInclusive()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsLimit(int)", "public org.apache.solr.client.solrj.SolrQuery setTermsLimit(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getTermsLimit()", "public int getTermsLimit()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsMinCount(int)", "public org.apache.solr.client.solrj.SolrQuery setTermsMinCount(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getTermsMinCount()", "public int getTermsMinCount()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsMaxCount(int)", "public org.apache.solr.client.solrj.SolrQuery setTermsMaxCount(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getTermsMaxCount()", "public int getTermsMaxCount()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsPrefix(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsPrefix(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getTermsPrefix()", "public java.lang.String getTermsPrefix()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsRaw(boolean)", "public org.apache.solr.client.solrj.SolrQuery setTermsRaw(boolean)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getTermsRaw()", "public boolean getTermsRaw()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsSortString(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsSortString(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getTermsSortString()", "public java.lang.String getTermsSortString()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsRegex(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsRegex(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getTermsRegex()", "public java.lang.String getTermsRegex()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTermsRegexFlag(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setTermsRegexFlag(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getTermsRegexFlags()", "public java.lang.String[] getTermsRegexFlags()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addFacetField(java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery addFacetField(java.lang.String...)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addFacetPivotField(java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery addFacetPivotField(java.lang.String...)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addNumericRangeFacet(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number)", "public org.apache.solr.client.solrj.SolrQuery addNumericRangeFacet(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addDateRangeFacet(java.lang.String, java.util.Date, java.util.Date, java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery addDateRangeFacet(java.lang.String, java.util.Date, java.util.Date, java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addIntervalFacets(java.lang.String, java.lang.String[])", "public org.apache.solr.client.solrj.SolrQuery addIntervalFacets(java.lang.String, java.lang.String[])"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.removeIntervalFacets(java.lang.String)", "public java.lang.String[] removeIntervalFacets(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getFacetFields()", "public java.lang.String[] getFacetFields()"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.removeFacetField(java.lang.String)", "public boolean removeFacetField(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacet(boolean)", "public org.apache.solr.client.solrj.SolrQuery setFacet(boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetPrefix(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setFacetPrefix(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetPrefix(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setFacetPrefix(java.lang.String, java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addFacetQuery(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery addFacetQuery(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getFacetQuery()", "public java.lang.String[] getFacetQuery()"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.removeFacetQuery(java.lang.String)", "public boolean removeFacetQuery(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetLimit(int)", "public org.apache.solr.client.solrj.SolrQuery setFacetLimit(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getFacetLimit()", "public int getFacetLimit()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetMinCount(int)", "public org.apache.solr.client.solrj.SolrQuery setFacetMinCount(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getFacetMinCount()", "public int getFacetMinCount()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetMissing(java.lang.Boolean)", "public org.apache.solr.client.solrj.SolrQuery setFacetMissing(java.lang.Boolean)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getFacetSortString()", "public java.lang.String getFacetSortString()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFacetSort(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setFacetSort(java.lang.String)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addHighlightField(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery addHighlightField(java.lang.String)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.removeHighlightField(java.lang.String)", "public boolean removeHighlightField(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getHighlightFields()", "public java.lang.String[] getHighlightFields()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlightSnippets(int)", "public org.apache.solr.client.solrj.SolrQuery setHighlightSnippets(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getHighlightSnippets()", "public int getHighlightSnippets()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlightFragsize(int)", "public org.apache.solr.client.solrj.SolrQuery setHighlightFragsize(int)"], ["int", "org.apache.solr.client.solrj.SolrQuery.getHighlightFragsize()", "public int getHighlightFragsize()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlightRequireFieldMatch(boolean)", "public org.apache.solr.client.solrj.SolrQuery setHighlightRequireFieldMatch(boolean)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getHighlightRequireFieldMatch()", "public boolean getHighlightRequireFieldMatch()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlightSimplePre(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setHighlightSimplePre(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getHighlightSimplePre()", "public java.lang.String getHighlightSimplePre()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlightSimplePost(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setHighlightSimplePost(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getHighlightSimplePost()", "public java.lang.String getHighlightSimplePost()"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getSortField()", "public java.lang.String getSortField()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.clearSorts()", "public org.apache.solr.client.solrj.SolrQuery clearSorts()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setSorts(java.util.List<org.apache.solr.client.solrj.SolrQuery$SortClause>)", "public org.apache.solr.client.solrj.SolrQuery setSorts(java.util.List<org.apache.solr.client.solrj.SolrQuery$SortClause>)"], ["java.util.List<org.apache.solr.client.solrj.SolrQuery$SortClause>", "org.apache.solr.client.solrj.SolrQuery.getSorts()", "public java.util.List<org.apache.solr.client.solrj.SolrQuery$SortClause> getSorts()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)", "public org.apache.solr.client.solrj.SolrQuery setSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setSort(org.apache.solr.client.solrj.SolrQuery$SortClause)", "public org.apache.solr.client.solrj.SolrQuery setSort(org.apache.solr.client.solrj.SolrQuery$SortClause)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)", "public org.apache.solr.client.solrj.SolrQuery addSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addSort(org.apache.solr.client.solrj.SolrQuery$SortClause)", "public org.apache.solr.client.solrj.SolrQuery addSort(org.apache.solr.client.solrj.SolrQuery$SortClause)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addOrUpdateSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)", "public org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(java.lang.String, org.apache.solr.client.solrj.SolrQuery$ORDER)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addOrUpdateSort(org.apache.solr.client.solrj.SolrQuery$SortClause)", "public org.apache.solr.client.solrj.SolrQuery addOrUpdateSort(org.apache.solr.client.solrj.SolrQuery$SortClause)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.removeSort(org.apache.solr.client.solrj.SolrQuery$SortClause)", "public org.apache.solr.client.solrj.SolrQuery removeSort(org.apache.solr.client.solrj.SolrQuery$SortClause)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.removeSort(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery removeSort(java.lang.String)"], ["void", "org.apache.solr.client.solrj.SolrQuery.setGetFieldStatistics(boolean)", "public void setGetFieldStatistics(boolean)"], ["void", "org.apache.solr.client.solrj.SolrQuery.setGetFieldStatistics(java.lang.String)", "public void setGetFieldStatistics(java.lang.String)"], ["void", "org.apache.solr.client.solrj.SolrQuery.addGetFieldStatistics(java.lang.String...)", "public void addGetFieldStatistics(java.lang.String...)"], ["void", "org.apache.solr.client.solrj.SolrQuery.addStatsFieldFacets(java.lang.String, java.lang.String...)", "public void addStatsFieldFacets(java.lang.String, java.lang.String...)"], ["void", "org.apache.solr.client.solrj.SolrQuery.addStatsFieldCalcDistinct(java.lang.String, boolean)", "public void addStatsFieldCalcDistinct(java.lang.String, boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFilterQueries(java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery setFilterQueries(java.lang.String...)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addFilterQuery(java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery addFilterQuery(java.lang.String...)"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.removeFilterQuery(java.lang.String)", "public boolean removeFilterQuery(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.client.solrj.SolrQuery.getFilterQueries()", "public java.lang.String[] getFilterQueries()"], ["boolean", "org.apache.solr.client.solrj.SolrQuery.getHighlight()", "public boolean getHighlight()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setHighlight(boolean)", "public org.apache.solr.client.solrj.SolrQuery setHighlight(boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setFields(java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery setFields(java.lang.String...)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.addField(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery addField(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getFields()", "public java.lang.String getFields()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setIncludeScore(boolean)", "public org.apache.solr.client.solrj.SolrQuery setIncludeScore(boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setQuery(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setQuery(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getQuery()", "public java.lang.String getQuery()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setRows(java.lang.Integer)", "public org.apache.solr.client.solrj.SolrQuery setRows(java.lang.Integer)"], ["java.lang.Integer", "org.apache.solr.client.solrj.SolrQuery.getRows()", "public java.lang.Integer getRows()"], ["void", "org.apache.solr.client.solrj.SolrQuery.setShowDebugInfo(boolean)", "public void setShowDebugInfo(boolean)"], ["void", "org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean)", "public void setDistrib(boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setStart(java.lang.Integer)", "public org.apache.solr.client.solrj.SolrQuery setStart(java.lang.Integer)"], ["java.lang.Integer", "org.apache.solr.client.solrj.SolrQuery.getStart()", "public java.lang.Integer getStart()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setRequestHandler(java.lang.String)", "public org.apache.solr.client.solrj.SolrQuery setRequestHandler(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrQuery.getRequestHandler()", "public java.lang.String getRequestHandler()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setParam(java.lang.String, java.lang.String...)", "public org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String, java.lang.String...)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setParam(java.lang.String, boolean)", "public org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String, boolean)"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.getCopy()", "public org.apache.solr.client.solrj.SolrQuery getCopy()"], ["org.apache.solr.client.solrj.SolrQuery", "org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(java.lang.Integer)", "public org.apache.solr.client.solrj.SolrQuery setTimeAllowed(java.lang.Integer)"], ["java.lang.Integer", "org.apache.solr.client.solrj.SolrQuery.getTimeAllowed()", "public java.lang.Integer getTimeAllowed()"], ["org.apache.solr.client.solrj.SolrRequest$METHOD[]", "org.apache.solr.client.solrj.SolrRequest$METHOD.values()", "public static org.apache.solr.client.solrj.SolrRequest$METHOD[] values()"], ["org.apache.solr.client.solrj.SolrRequest$METHOD", "org.apache.solr.client.solrj.SolrRequest$METHOD.valueOf(java.lang.String)", "public static org.apache.solr.client.solrj.SolrRequest$METHOD valueOf(java.lang.String)"], ["org.apache.solr.client.solrj.SolrRequest", "org.apache.solr.client.solrj.SolrRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String)", "public org.apache.solr.client.solrj.SolrRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String)"], ["org.apache.solr.client.solrj.SolrRequest$METHOD", "org.apache.solr.client.solrj.SolrRequest.getMethod()", "public org.apache.solr.client.solrj.SolrRequest$METHOD getMethod()"], ["void", "org.apache.solr.client.solrj.SolrRequest.setMethod(org.apache.solr.client.solrj.SolrRequest$METHOD)", "public void setMethod(org.apache.solr.client.solrj.SolrRequest$METHOD)"], ["java.lang.String", "org.apache.solr.client.solrj.SolrRequest.getPath()", "public java.lang.String getPath()"], ["void", "org.apache.solr.client.solrj.SolrRequest.setPath(java.lang.String)", "public void setPath(java.lang.String)"], ["org.apache.solr.client.solrj.ResponseParser", "org.apache.solr.client.solrj.SolrRequest.getResponseParser()", "public org.apache.solr.client.solrj.ResponseParser getResponseParser()"], ["void", "org.apache.solr.client.solrj.SolrRequest.setResponseParser(org.apache.solr.client.solrj.ResponseParser)", "public void setResponseParser(org.apache.solr.client.solrj.ResponseParser)"], ["org.apache.solr.client.solrj.StreamingResponseCallback", "org.apache.solr.client.solrj.SolrRequest.getStreamingResponseCallback()", "public org.apache.solr.client.solrj.StreamingResponseCallback getStreamingResponseCallback()"], ["void", "org.apache.solr.client.solrj.SolrRequest.setStreamingResponseCallback(org.apache.solr.client.solrj.StreamingResponseCallback)", "public void setStreamingResponseCallback(org.apache.solr.client.solrj.StreamingResponseCallback)"], ["java.util.Set<java.lang.String>", "org.apache.solr.client.solrj.SolrRequest.getQueryParams()", "public java.util.Set<java.lang.String> getQueryParams()"], ["void", "org.apache.solr.client.solrj.SolrRequest.setQueryParams(java.util.Set<java.lang.String>)", "public void setQueryParams(java.util.Set<java.lang.String>)"], ["T", "org.apache.solr.client.solrj.SolrRequest.process(org.apache.solr.client.solrj.SolrClient, java.lang.String)", "public final T process(org.apache.solr.client.solrj.SolrClient, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["T", "org.apache.solr.client.solrj.SolrRequest.process(org.apache.solr.client.solrj.SolrClient)", "public final T process(org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.SolrResponse", "org.apache.solr.client.solrj.SolrResponse()", "public org.apache.solr.client.solrj.SolrResponse()"], ["byte[]", "org.apache.solr.client.solrj.SolrResponse.serializable(org.apache.solr.client.solrj.SolrResponse)", "public static byte[] serializable(org.apache.solr.client.solrj.SolrResponse)"], ["org.apache.solr.client.solrj.SolrResponse", "org.apache.solr.client.solrj.SolrResponse.deserialize(byte[])", "public static org.apache.solr.client.solrj.SolrResponse deserialize(byte[])"], ["org.apache.solr.client.solrj.SolrServer", "org.apache.solr.client.solrj.SolrServer()", "public org.apache.solr.client.solrj.SolrServer()"], ["org.apache.solr.client.solrj.SolrServerException", "org.apache.solr.client.solrj.SolrServerException(java.lang.String, java.lang.Throwable)", "public org.apache.solr.client.solrj.SolrServerException(java.lang.String, java.lang.Throwable)"], ["org.apache.solr.client.solrj.SolrServerException", "org.apache.solr.client.solrj.SolrServerException(java.lang.String)", "public org.apache.solr.client.solrj.SolrServerException(java.lang.String)"], ["org.apache.solr.client.solrj.SolrServerException", "org.apache.solr.client.solrj.SolrServerException(java.lang.Throwable)", "public org.apache.solr.client.solrj.SolrServerException(java.lang.Throwable)"], ["java.lang.Throwable", "org.apache.solr.client.solrj.SolrServerException.getRootCause()", "public java.lang.Throwable getRootCause()"], ["org.apache.solr.client.solrj.StreamingResponseCallback", "org.apache.solr.client.solrj.StreamingResponseCallback()", "public org.apache.solr.client.solrj.StreamingResponseCallback()"], ["org.apache.solr.client.solrj.beans.BindingException", "org.apache.solr.client.solrj.beans.BindingException(java.lang.String)", "public org.apache.solr.client.solrj.beans.BindingException(java.lang.String)"], ["org.apache.solr.client.solrj.beans.BindingException", "org.apache.solr.client.solrj.beans.BindingException(java.lang.String, java.lang.Throwable)", "public org.apache.solr.client.solrj.beans.BindingException(java.lang.String, java.lang.Throwable)"], ["org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField", "org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField(org.apache.solr.client.solrj.beans.DocumentObjectBinder, java.lang.reflect.AccessibleObject)", "public org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField(org.apache.solr.client.solrj.beans.DocumentObjectBinder, java.lang.reflect.AccessibleObject)"], ["java.lang.Object", "org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["org.apache.solr.client.solrj.beans.DocumentObjectBinder", "org.apache.solr.client.solrj.beans.DocumentObjectBinder()", "public org.apache.solr.client.solrj.beans.DocumentObjectBinder()"], ["<T> java.util.List<T>", "org.apache.solr.client.solrj.beans.DocumentObjectBinder.getBeans(java.lang.Class<T>, org.apache.solr.common.SolrDocumentList)", "public <T> java.util.List<T> getBeans(java.lang.Class<T>, org.apache.solr.common.SolrDocumentList)"], ["<T> T", "org.apache.solr.client.solrj.beans.DocumentObjectBinder.getBean(java.lang.Class<T>, org.apache.solr.common.SolrDocument)", "public <T> T getBean(java.lang.Class<T>, org.apache.solr.common.SolrDocument)"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.client.solrj.beans.DocumentObjectBinder.toSolrInputDocument(java.lang.Object)", "public org.apache.solr.common.SolrInputDocument toSolrInputDocument(java.lang.Object)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getSourceInfo()", "public java.lang.String getSourceInfo()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getContentType()", "public java.lang.String getContentType()"], ["java.lang.Long", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getSize()", "public java.lang.Long getSize()"], ["java.io.InputStream", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getStream()", "public java.io.InputStream getStream()"], ["java.io.Reader", "org.apache.solr.client.solrj.impl.BinaryRequestWriter$1.getReader()", "public java.io.Reader getReader()"], ["org.apache.solr.client.solrj.impl.BinaryRequestWriter", "org.apache.solr.client.solrj.impl.BinaryRequestWriter()", "public org.apache.solr.client.solrj.impl.BinaryRequestWriter()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.impl.BinaryRequestWriter.getContentStreams(org.apache.solr.client.solrj.SolrRequest)", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams(org.apache.solr.client.solrj.SolrRequest) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryRequestWriter.getUpdateContentType()", "public java.lang.String getUpdateContentType()"], ["org.apache.solr.common.util.ContentStream", "org.apache.solr.client.solrj.impl.BinaryRequestWriter.getContentStream(org.apache.solr.client.solrj.request.UpdateRequest)", "public org.apache.solr.common.util.ContentStream getContentStream(org.apache.solr.client.solrj.request.UpdateRequest) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.BinaryRequestWriter.write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream)", "public void write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream) throws java.io.IOException"], ["org.apache.solr.client.solrj.impl.BinaryResponseParser", "org.apache.solr.client.solrj.impl.BinaryResponseParser()", "public org.apache.solr.client.solrj.impl.BinaryResponseParser()"], ["org.apache.solr.client.solrj.impl.BinaryResponseParser", "org.apache.solr.client.solrj.impl.BinaryResponseParser.setStringCache(org.apache.solr.common.util.JavaBinCodec$StringCache)", "public org.apache.solr.client.solrj.impl.BinaryResponseParser setStringCache(org.apache.solr.common.util.JavaBinCodec$StringCache)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryResponseParser.getWriterType()", "public java.lang.String getWriterType()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.BinaryResponseParser.processResponse(java.io.InputStream, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.InputStream, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryResponseParser.getContentType()", "public java.lang.String getContentType()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.BinaryResponseParser.getVersion()", "public java.lang.String getVersion()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.BinaryResponseParser.processResponse(java.io.Reader)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.Reader)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection", "org.apache.solr.client.solrj.impl.CloudSolrClient$1.get(java.lang.Object)", "public org.apache.solr.client.solrj.impl.CloudSolrClient$ExpiringCachedDocCollection get(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.CloudSolrClient$1.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["org.apache.solr.common.util.NamedList<?>", "org.apache.solr.client.solrj.impl.CloudSolrClient$2.call()", "public org.apache.solr.common.util.NamedList<?> call() throws java.lang.Exception"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.CloudSolrClient$2.call()", "public java.lang.Object call() throws java.lang.Exception"], ["org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException(org.apache.solr.common.SolrException$ErrorCode, org.apache.solr.common.util.NamedList<java.lang.Throwable>, java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>)", "public org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException(org.apache.solr.common.SolrException$ErrorCode, org.apache.solr.common.util.NamedList<java.lang.Throwable>, java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>)"], ["org.apache.solr.common.util.NamedList<java.lang.Throwable>", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException.getThrowables()", "public org.apache.solr.common.util.NamedList<java.lang.Throwable> getThrowables()"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException.getRoutes()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req> getRoutes()"], ["org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse()", "public org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse.setRouteResponses(org.apache.solr.common.util.NamedList)", "public void setRouteResponses(org.apache.solr.common.util.NamedList)"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse.getRouteResponses()", "public org.apache.solr.common.util.NamedList getRouteResponses()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse.setRoutes(java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>)", "public void setRoutes(java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>)"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>", "org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse.getRoutes()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req> getRoutes()"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.util.Collection<java.lang.String>, java.lang.String)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.util.Collection<java.lang.String>, java.lang.String)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.util.Collection<java.lang.String>, java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.util.Collection<java.lang.String>, java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, boolean)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, boolean)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, boolean, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, boolean, org.apache.http.client.HttpClient)"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setCollectionCacheTTl(int)", "public void setCollectionCacheTTl(int)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient, boolean)", "public org.apache.solr.client.solrj.impl.CloudSolrClient(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient, boolean)"], ["org.apache.solr.client.solrj.ResponseParser", "org.apache.solr.client.solrj.impl.CloudSolrClient.getParser()", "public org.apache.solr.client.solrj.ResponseParser getParser()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setParser(org.apache.solr.client.solrj.ResponseParser)", "public void setParser(org.apache.solr.client.solrj.ResponseParser)"], ["org.apache.solr.client.solrj.request.RequestWriter", "org.apache.solr.client.solrj.impl.CloudSolrClient.getRequestWriter()", "public org.apache.solr.client.solrj.request.RequestWriter getRequestWriter()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)", "public void setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.CloudSolrClient.getZkHost()", "public java.lang.String getZkHost()"], ["org.apache.solr.common.cloud.ZkStateReader", "org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader()", "public org.apache.solr.common.cloud.ZkStateReader getZkStateReader()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setIdField(java.lang.String)", "public void setIdField(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.CloudSolrClient.getIdField()", "public java.lang.String getIdField()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(java.lang.String)", "public void setDefaultCollection(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.CloudSolrClient.getDefaultCollection()", "public java.lang.String getDefaultCollection()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setZkConnectTimeout(int)", "public void setZkConnectTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setZkClientTimeout(int)", "public void setZkClientTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.connect()", "public void connect()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.connect(long, java.util.concurrent.TimeUnit)", "public void connect(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.lang.InterruptedException"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setParallelUpdates(boolean)", "public void setParallelUpdates(boolean)"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(java.nio.file.Path, java.lang.String)", "public void uploadConfig(java.nio.file.Path, java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.downloadConfig(java.lang.String, java.nio.file.Path)", "public void downloadConfig(java.lang.String, java.nio.file.Path) throws java.io.IOException"], ["org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse", "org.apache.solr.client.solrj.impl.CloudSolrClient.condenseResponse(org.apache.solr.common.util.NamedList, long)", "public org.apache.solr.client.solrj.impl.CloudSolrClient$RouteResponse condenseResponse(org.apache.solr.common.util.NamedList, long)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.CloudSolrClient.request(org.apache.solr.client.solrj.SolrRequest, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.shutdown()", "public void shutdown()"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient", "org.apache.solr.client.solrj.impl.CloudSolrClient.getLbClient()", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient getLbClient()"], ["boolean", "org.apache.solr.client.solrj.impl.CloudSolrClient.isUpdatesToLeaders()", "public boolean isUpdatesToLeaders()"], ["void", "org.apache.solr.client.solrj.impl.CloudSolrClient.setParallelCacheRefreshes(int)", "public void setParallelCacheRefreshes(int)"], ["int", "org.apache.solr.client.solrj.impl.CloudSolrClient.getMinAchievedReplicationFactor(java.lang.String, org.apache.solr.common.util.NamedList)", "public int getMinAchievedReplicationFactor(java.lang.String, org.apache.solr.common.util.NamedList)"], ["java.util.Map<java.lang.String, java.lang.Integer>", "org.apache.solr.client.solrj.impl.CloudSolrClient.getShardReplicationFactor(java.lang.String, org.apache.solr.common.util.NamedList)", "public java.util.Map<java.lang.String, java.lang.Integer> getShardReplicationFactor(java.lang.String, org.apache.solr.common.util.NamedList)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.util.Collection<java.lang.String>, java.lang.String)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.util.Collection<java.lang.String>, java.lang.String)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.util.Collection<java.lang.String>, java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.util.Collection<java.lang.String>, java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, boolean)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, boolean)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, boolean, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, boolean, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient)"], ["org.apache.solr.client.solrj.impl.CloudSolrServer", "org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient, boolean)", "public org.apache.solr.client.solrj.impl.CloudSolrServer(java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient, boolean)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient$Runner$1.writeTo(java.io.OutputStream)", "public void writeTo(java.io.OutputStream) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient$Runner.run()", "public void run()"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, int, int)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, int, int)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService, boolean)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService, boolean)"], ["java.util.Set<java.lang.String>", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.getQueryParams()", "public java.util.Set<java.lang.String> getQueryParams()"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setQueryParams(java.util.Set<java.lang.String>)", "public void setQueryParams(java.util.Set<java.lang.String>)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.request(org.apache.solr.client.solrj.SolrRequest, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["synchronized", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.void blockUntilFinished()", "public synchronized void blockUntilFinished()"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.handleError(java.lang.Throwable)", "public void handleError(java.lang.Throwable)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.onSuccess(org.apache.http.HttpResponse)", "public void onSuccess(org.apache.http.HttpResponse)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.close()", "public void close()"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdown()", "public void shutdown()"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setConnectionTimeout(int)", "public void setConnectionTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setSoTimeout(int)", "public void setSoTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow()", "public void shutdownNow()"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setParser(org.apache.solr.client.solrj.ResponseParser)", "public void setParser(org.apache.solr.client.solrj.ResponseParser)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int)", "public void setPollQueueTime(int)"], ["void", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)", "public void setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, int, int)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, int, int)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService)"], ["org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer", "org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService, boolean)", "public org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer(java.lang.String, org.apache.http.client.HttpClient, int, int, java.util.concurrent.ExecutorService, boolean)"], ["org.apache.solr.client.solrj.impl.HttpClientConfigurer", "org.apache.solr.client.solrj.impl.HttpClientConfigurer()", "public org.apache.solr.client.solrj.impl.HttpClientConfigurer()"], ["void", "org.apache.solr.client.solrj.impl.HttpClientConfigurer.configure(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)", "public void configure(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)"], ["boolean", "org.apache.solr.client.solrj.impl.HttpClientConfigurer.toBooleanDefaultIfNull(java.lang.Boolean, boolean)", "public static boolean toBooleanDefaultIfNull(java.lang.Boolean, boolean)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.impl.HttpClientConfigurer.toBooleanObject(java.lang.String)", "public static java.lang.Boolean toBooleanObject(java.lang.String)"], ["org.apache.solr.client.solrj.impl.HttpClientUtil$DeflateDecompressingEntity", "org.apache.solr.client.solrj.impl.HttpClientUtil$DeflateDecompressingEntity(org.apache.http.HttpEntity)", "public org.apache.solr.client.solrj.impl.HttpClientUtil$DeflateDecompressingEntity(org.apache.http.HttpEntity)"], ["java.io.InputStream", "org.apache.solr.client.solrj.impl.HttpClientUtil$DeflateDecompressingEntity.getContent()", "public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException"], ["org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity", "org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity(org.apache.http.HttpEntity)", "public org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity(org.apache.http.HttpEntity)"], ["java.io.InputStream", "org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity.getContent()", "public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException"], ["long", "org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity.getContentLength()", "public long getContentLength()"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil$UseCompressionRequestInterceptor.process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)", "public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil$UseCompressionResponseInterceptor.process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)", "public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setConfigurer(org.apache.solr.client.solrj.impl.HttpClientConfigurer)", "public static void setConfigurer(org.apache.solr.client.solrj.impl.HttpClientConfigurer)"], ["org.apache.solr.client.solrj.impl.HttpClientConfigurer", "org.apache.solr.client.solrj.impl.HttpClientUtil.getConfigurer()", "public static org.apache.solr.client.solrj.impl.HttpClientConfigurer getConfigurer()"], ["org.apache.http.impl.client.CloseableHttpClient", "org.apache.solr.client.solrj.impl.HttpClientUtil.createClient(org.apache.solr.common.params.SolrParams)", "public static org.apache.http.impl.client.CloseableHttpClient createClient(org.apache.solr.common.params.SolrParams)"], ["org.apache.http.impl.client.CloseableHttpClient", "org.apache.solr.client.solrj.impl.HttpClientUtil.createClient(org.apache.solr.common.params.SolrParams, org.apache.http.conn.ClientConnectionManager)", "public static org.apache.http.impl.client.CloseableHttpClient createClient(org.apache.solr.common.params.SolrParams, org.apache.http.conn.ClientConnectionManager)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.configureClient(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)", "public static void configureClient(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.close(org.apache.http.client.HttpClient)", "public static void close(org.apache.http.client.HttpClient)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setAllowCompression(org.apache.http.impl.client.DefaultHttpClient, boolean)", "public static void setAllowCompression(org.apache.http.impl.client.DefaultHttpClient, boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setBasicAuth(org.apache.http.impl.client.DefaultHttpClient, java.lang.String, java.lang.String)", "public static void setBasicAuth(org.apache.http.impl.client.DefaultHttpClient, java.lang.String, java.lang.String)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setMaxConnectionsPerHost(org.apache.http.client.HttpClient, int)", "public static void setMaxConnectionsPerHost(org.apache.http.client.HttpClient, int)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setMaxConnections(org.apache.http.client.HttpClient, int)", "public static void setMaxConnections(org.apache.http.client.HttpClient, int)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setSoTimeout(org.apache.http.client.HttpClient, int)", "public static void setSoTimeout(org.apache.http.client.HttpClient, int)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setUseRetry(org.apache.http.impl.client.DefaultHttpClient, boolean)", "public static void setUseRetry(org.apache.http.impl.client.DefaultHttpClient, boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setConnectionTimeout(org.apache.http.client.HttpClient, int)", "public static void setConnectionTimeout(org.apache.http.client.HttpClient, int)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setFollowRedirects(org.apache.http.client.HttpClient, boolean)", "public static void setFollowRedirects(org.apache.http.client.HttpClient, boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setHostNameVerifier(org.apache.http.impl.client.DefaultHttpClient, org.apache.http.conn.ssl.X509HostnameVerifier)", "public static void setHostNameVerifier(org.apache.http.impl.client.DefaultHttpClient, org.apache.http.conn.ssl.X509HostnameVerifier)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setStaleCheckingEnabled(org.apache.http.client.HttpClient, boolean)", "public static void setStaleCheckingEnabled(org.apache.http.client.HttpClient, boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpClientUtil.setTcpNoDelay(org.apache.http.client.HttpClient, boolean)", "public static void setTcpNoDelay(org.apache.http.client.HttpClient, boolean)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.HttpSolrClient$1.call()", "public org.apache.solr.common.util.NamedList<java.lang.Object> call() throws java.lang.Exception"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.HttpSolrClient$1.call()", "public java.lang.Object call() throws java.lang.Exception"], ["org.apache.http.Header", "org.apache.solr.client.solrj.impl.HttpSolrClient$2.getContentType()", "public org.apache.http.Header getContentType()"], ["boolean", "org.apache.solr.client.solrj.impl.HttpSolrClient$2.isRepeatable()", "public boolean isRepeatable()"], ["org.apache.http.Header", "org.apache.solr.client.solrj.impl.HttpSolrClient$3.getContentType()", "public org.apache.http.Header getContentType()"], ["boolean", "org.apache.solr.client.solrj.impl.HttpSolrClient$3.isRepeatable()", "public boolean isRepeatable()"], ["org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse", "org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse()", "public org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse()"], ["org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException", "org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException(java.lang.String, int, java.lang.String, java.lang.Throwable)", "public org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException(java.lang.String, int, java.lang.String, java.lang.Throwable)"], ["org.apache.solr.client.solrj.impl.HttpSolrClient", "org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String)", "public org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String)"], ["org.apache.solr.client.solrj.impl.HttpSolrClient", "org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.HttpSolrClient", "org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String, org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser)", "public org.apache.solr.client.solrj.impl.HttpSolrClient(java.lang.String, org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser)"], ["java.util.Set<java.lang.String>", "org.apache.solr.client.solrj.impl.HttpSolrClient.getQueryParams()", "public java.util.Set<java.lang.String> getQueryParams()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setQueryParams(java.util.Set<java.lang.String>)", "public void setQueryParams(java.util.Set<java.lang.String>)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.HttpSolrClient.request(org.apache.solr.client.solrj.SolrRequest, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.HttpSolrClient.request(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.HttpSolrClient.request(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse", "org.apache.solr.client.solrj.impl.HttpSolrClient.httpUriRequest(org.apache.solr.client.solrj.SolrRequest)", "public org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse httpUriRequest(org.apache.solr.client.solrj.SolrRequest) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse", "org.apache.solr.client.solrj.impl.HttpSolrClient.httpUriRequest(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser)", "public org.apache.solr.client.solrj.impl.HttpSolrClient$HttpUriRequestResponse httpUriRequest(org.apache.solr.client.solrj.SolrRequest, org.apache.solr.client.solrj.ResponseParser) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.impl.HttpSolrClient.getInvariantParams()", "public org.apache.solr.common.params.ModifiableSolrParams getInvariantParams()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.HttpSolrClient.getBaseURL()", "public java.lang.String getBaseURL()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setBaseURL(java.lang.String)", "public void setBaseURL(java.lang.String)"], ["org.apache.solr.client.solrj.ResponseParser", "org.apache.solr.client.solrj.impl.HttpSolrClient.getParser()", "public org.apache.solr.client.solrj.ResponseParser getParser()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(org.apache.solr.client.solrj.ResponseParser)", "public void setParser(org.apache.solr.client.solrj.ResponseParser)"], ["org.apache.http.client.HttpClient", "org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient()", "public org.apache.http.client.HttpClient getHttpClient()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int)", "public void setConnectionTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int)", "public void setSoTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setFollowRedirects(boolean)", "public void setFollowRedirects(boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setAllowCompression(boolean)", "public void setAllowCompression(boolean)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setMaxRetries(int)", "public void setMaxRetries(int)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)", "public void setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.shutdown()", "public void shutdown()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setDefaultMaxConnectionsPerHost(int)", "public void setDefaultMaxConnectionsPerHost(int)"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setMaxTotalConnections(int)", "public void setMaxTotalConnections(int)"], ["boolean", "org.apache.solr.client.solrj.impl.HttpSolrClient.isUseMultiPartPost()", "public boolean isUseMultiPartPost()"], ["void", "org.apache.solr.client.solrj.impl.HttpSolrClient.setUseMultiPartPost(boolean)", "public void setUseMultiPartPost(boolean)"], ["org.apache.solr.client.solrj.impl.HttpSolrServer", "org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String)", "public org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String)"], ["org.apache.solr.client.solrj.impl.HttpSolrServer", "org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String, org.apache.http.client.HttpClient)", "public org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String, org.apache.http.client.HttpClient)"], ["org.apache.solr.client.solrj.impl.HttpSolrServer", "org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String, org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser)", "public org.apache.solr.client.solrj.impl.HttpSolrServer(java.lang.String, org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser)"], ["org.apache.solr.client.solrj.impl.InputStreamResponseParser", "org.apache.solr.client.solrj.impl.InputStreamResponseParser(java.lang.String)", "public org.apache.solr.client.solrj.impl.InputStreamResponseParser(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.InputStreamResponseParser.getWriterType()", "public java.lang.String getWriterType()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.InputStreamResponseParser.processResponse(java.io.Reader)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.Reader)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.InputStreamResponseParser.processResponse(java.io.InputStream, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.InputStream, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$1.getPassword()", "public java.lang.String getPassword()"], ["java.security.Principal", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$1.getUserPrincipal()", "public java.security.Principal getUserPrincipal()"], ["void", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$2.process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)", "public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException"], ["org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$SolrJaasConfiguration", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$SolrJaasConfiguration()", "public org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$SolrJaasConfiguration()"], ["javax.security.auth.login.AppConfigurationEntry[]", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer$SolrJaasConfiguration.getAppConfigurationEntry(java.lang.String)", "public javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)"], ["org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer()", "public org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer()"], ["void", "org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer.configure(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)", "public void configure(org.apache.http.impl.client.DefaultHttpClient, org.apache.solr.common.params.SolrParams)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$1.run()", "public void run()"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req(org.apache.solr.client.solrj.SolrRequest, java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req(org.apache.solr.client.solrj.SolrRequest, java.util.List<java.lang.String>)"], ["org.apache.solr.client.solrj.SolrRequest", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req.getRequest()", "public org.apache.solr.client.solrj.SolrRequest getRequest()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req.getServers()", "public java.util.List<java.lang.String> getServers()"], ["int", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req.getNumDeadServersToTry()", "public int getNumDeadServersToTry()"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req.setNumDeadServersToTry(int)", "public void setNumDeadServersToTry(int)"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp()", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp.getResponse()", "public org.apache.solr.common.util.NamedList<java.lang.Object> getResponse()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp.getServer()", "public java.lang.String getServer()"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper(org.apache.solr.client.solrj.impl.HttpSolrClient)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper(org.apache.solr.client.solrj.impl.HttpSolrClient)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper.getKey()", "public java.lang.String getKey()"], ["int", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper.hashCode()", "public int hashCode()"], ["boolean", "org.apache.solr.client.solrj.impl.LBHttpSolrClient$ServerWrapper.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient", "org.apache.solr.client.solrj.impl.LBHttpSolrClient(java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient(java.lang.String...) throws java.net.MalformedURLException"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient", "org.apache.solr.client.solrj.impl.LBHttpSolrClient(org.apache.http.client.HttpClient, java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient(org.apache.http.client.HttpClient, java.lang.String...)"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient", "org.apache.solr.client.solrj.impl.LBHttpSolrClient(org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser, java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient(org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser, java.lang.String...)"], ["java.util.Set<java.lang.String>", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.getQueryParams()", "public java.util.Set<java.lang.String> getQueryParams()"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setQueryParams(java.util.Set<java.lang.String>)", "public void setQueryParams(java.util.Set<java.lang.String>)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.addQueryParams(java.lang.String)", "public void addQueryParams(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.normalize(java.lang.String)", "public static java.lang.String normalize(java.lang.String)"], ["org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req)", "public org.apache.solr.client.solrj.impl.LBHttpSolrClient$Rsp request(org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.addSolrServer(java.lang.String)", "public void addSolrServer(java.lang.String) throws java.net.MalformedURLException"], ["java.lang.String", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.removeSolrServer(java.lang.String)", "public java.lang.String removeSolrServer(java.lang.String)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setConnectionTimeout(int)", "public void setConnectionTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setSoTimeout(int)", "public void setSoTimeout(int)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.close()", "public void close()"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.shutdown()", "public void shutdown()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(org.apache.solr.client.solrj.SolrRequest, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> request(org.apache.solr.client.solrj.SolrRequest, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setAliveCheckInterval(int)", "public void setAliveCheckInterval(int)"], ["org.apache.http.client.HttpClient", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.getHttpClient()", "public org.apache.http.client.HttpClient getHttpClient()"], ["org.apache.solr.client.solrj.ResponseParser", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.getParser()", "public org.apache.solr.client.solrj.ResponseParser getParser()"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setParser(org.apache.solr.client.solrj.ResponseParser)", "public void setParser(org.apache.solr.client.solrj.ResponseParser)"], ["void", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)", "public void setRequestWriter(org.apache.solr.client.solrj.request.RequestWriter)"], ["org.apache.solr.client.solrj.request.RequestWriter", "org.apache.solr.client.solrj.impl.LBHttpSolrClient.getRequestWriter()", "public org.apache.solr.client.solrj.request.RequestWriter getRequestWriter()"], ["org.apache.solr.client.solrj.impl.LBHttpSolrServer", "org.apache.solr.client.solrj.impl.LBHttpSolrServer(java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrServer(java.lang.String...) throws java.net.MalformedURLException"], ["org.apache.solr.client.solrj.impl.LBHttpSolrServer", "org.apache.solr.client.solrj.impl.LBHttpSolrServer(org.apache.http.client.HttpClient, java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrServer(org.apache.http.client.HttpClient, java.lang.String...)"], ["org.apache.solr.client.solrj.impl.LBHttpSolrServer", "org.apache.solr.client.solrj.impl.LBHttpSolrServer(org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser, java.lang.String...)", "public org.apache.solr.client.solrj.impl.LBHttpSolrServer(org.apache.http.client.HttpClient, org.apache.solr.client.solrj.ResponseParser, java.lang.String...)"], ["org.apache.solr.client.solrj.impl.NoOpResponseParser", "org.apache.solr.client.solrj.impl.NoOpResponseParser()", "public org.apache.solr.client.solrj.impl.NoOpResponseParser()"], ["org.apache.solr.client.solrj.impl.NoOpResponseParser", "org.apache.solr.client.solrj.impl.NoOpResponseParser(java.lang.String)", "public org.apache.solr.client.solrj.impl.NoOpResponseParser(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.NoOpResponseParser.getWriterType()", "public java.lang.String getWriterType()"], ["void", "org.apache.solr.client.solrj.impl.NoOpResponseParser.setWriterType(java.lang.String)", "public void setWriterType(java.lang.String)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.NoOpResponseParser.processResponse(java.io.Reader)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.Reader)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.NoOpResponseParser.processResponse(java.io.InputStream, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.InputStream, java.lang.String)"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser$1.readSolrDocument(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.SolrDocument readSolrDocument(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser$1.readSolrDocumentList(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.SolrDocumentList readSolrDocumentList(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser", "org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser(org.apache.solr.client.solrj.StreamingResponseCallback)", "public org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser(org.apache.solr.client.solrj.StreamingResponseCallback)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.StreamingBinaryResponseParser.processResponse(java.io.InputStream, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.InputStream, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$1.read(java.lang.String)", "public java.lang.String read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$1.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$10.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$11.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$12.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Integer", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$2.read(java.lang.String)", "public java.lang.Integer read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$2.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Float", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$3.read(java.lang.String)", "public java.lang.Float read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$3.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Double", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$4.read(java.lang.String)", "public java.lang.Double read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$4.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Long", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$5.read(java.lang.String)", "public java.lang.Long read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$5.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$6.read(java.lang.String)", "public java.lang.Boolean read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$6.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$7.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.util.Date", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$8.read(java.lang.String)", "public java.util.Date read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$8.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["java.lang.Object", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType$9.read(java.lang.String)", "public java.lang.Object read(java.lang.String)"], ["org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType[]", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType.values()", "public static org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType[] values()"], ["org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType.valueOf(java.lang.String)", "public static org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType valueOf(java.lang.String)"], ["org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType", "org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType.get(java.lang.String)", "public static org.apache.solr.client.solrj.impl.XMLResponseParser$KnownType get(java.lang.String)"], ["org.apache.solr.client.solrj.impl.XMLResponseParser", "org.apache.solr.client.solrj.impl.XMLResponseParser()", "public org.apache.solr.client.solrj.impl.XMLResponseParser()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.XMLResponseParser.getWriterType()", "public java.lang.String getWriterType()"], ["java.lang.String", "org.apache.solr.client.solrj.impl.XMLResponseParser.getContentType()", "public java.lang.String getContentType()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.XMLResponseParser.processResponse(java.io.Reader)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.Reader)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.impl.XMLResponseParser.processResponse(java.io.InputStream, java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> processResponse(java.io.InputStream, java.lang.String)"], ["org.apache.solr.client.solrj.io.SolrClientCache", "org.apache.solr.client.solrj.io.SolrClientCache()", "public org.apache.solr.client.solrj.io.SolrClientCache()"], ["synchronized", "org.apache.solr.client.solrj.io.SolrClientCache.org.apache.solr.client.solrj.impl.CloudSolrClient getCloudSolrClient(java.lang.String)", "public synchronized org.apache.solr.client.solrj.impl.CloudSolrClient getCloudSolrClient(java.lang.String)"], ["synchronized", "org.apache.solr.client.solrj.io.SolrClientCache.org.apache.solr.client.solrj.impl.HttpSolrClient getHttpSolrClient(java.lang.String)", "public synchronized org.apache.solr.client.solrj.impl.HttpSolrClient getHttpSolrClient(java.lang.String)"], ["void", "org.apache.solr.client.solrj.io.SolrClientCache.close()", "public void close()"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.Tuple(java.util.Map)", "public org.apache.solr.client.solrj.io.Tuple(java.util.Map)"], ["java.lang.Object", "org.apache.solr.client.solrj.io.Tuple.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["void", "org.apache.solr.client.solrj.io.Tuple.put(java.lang.Object, java.lang.Object)", "public void put(java.lang.Object, java.lang.Object)"], ["java.lang.String", "org.apache.solr.client.solrj.io.Tuple.getString(java.lang.Object)", "public java.lang.String getString(java.lang.Object)"], ["java.lang.Long", "org.apache.solr.client.solrj.io.Tuple.getLong(java.lang.Object)", "public java.lang.Long getLong(java.lang.Object)"], ["java.lang.Double", "org.apache.solr.client.solrj.io.Tuple.getDouble(java.lang.Object)", "public java.lang.Double getDouble(java.lang.Object)"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.io.Tuple.getStrings(java.lang.Object)", "public java.util.List<java.lang.String> getStrings(java.lang.Object)"], ["java.util.List<java.lang.Long>", "org.apache.solr.client.solrj.io.Tuple.getLongs(java.lang.Object)", "public java.util.List<java.lang.Long> getLongs(java.lang.Object)"], ["java.util.List<java.lang.Double>", "org.apache.solr.client.solrj.io.Tuple.getDoubles(java.lang.Object)", "public java.util.List<java.lang.Double> getDoubles(java.lang.Object)"], ["java.util.Map", "org.apache.solr.client.solrj.io.Tuple.getMap()", "public java.util.Map getMap()"], ["java.util.List<java.util.Map>", "org.apache.solr.client.solrj.io.Tuple.getMaps()", "public java.util.List<java.util.Map> getMaps()"], ["void", "org.apache.solr.client.solrj.io.Tuple.setMaps(java.util.List<java.util.Map>)", "public void setMaps(java.util.List<java.util.Map>)"], ["java.util.Map<java.lang.String, java.util.Map>", "org.apache.solr.client.solrj.io.Tuple.getMetrics()", "public java.util.Map<java.lang.String, java.util.Map> getMetrics()"], ["void", "org.apache.solr.client.solrj.io.Tuple.setMetrics(java.util.Map<java.lang.String, java.util.Map>)", "public void setMetrics(java.util.Map<java.lang.String, java.util.Map>)"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.Tuple.clone()", "public org.apache.solr.client.solrj.io.Tuple clone()"], ["java.lang.Object", "org.apache.solr.client.solrj.io.Tuple.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.apache.solr.client.solrj.io.comp.ComparatorOrder[]", "org.apache.solr.client.solrj.io.comp.ComparatorOrder.values()", "public static org.apache.solr.client.solrj.io.comp.ComparatorOrder[] values()"], ["org.apache.solr.client.solrj.io.comp.ComparatorOrder", "org.apache.solr.client.solrj.io.comp.ComparatorOrder.valueOf(java.lang.String)", "public static org.apache.solr.client.solrj.io.comp.ComparatorOrder valueOf(java.lang.String)"], ["org.apache.solr.client.solrj.io.comp.ComparatorOrder", "org.apache.solr.client.solrj.io.comp.ComparatorOrder.fromString(java.lang.String)", "public static org.apache.solr.client.solrj.io.comp.ComparatorOrder fromString(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.comp.ComparatorOrder.toString()", "public java.lang.String toString()"], ["int", "org.apache.solr.client.solrj.io.comp.FieldComparator$1.compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)", "public int compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)"], ["int", "org.apache.solr.client.solrj.io.comp.FieldComparator$2.compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)", "public int compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)"], ["org.apache.solr.client.solrj.io.comp.FieldComparator", "org.apache.solr.client.solrj.io.comp.FieldComparator(java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)", "public org.apache.solr.client.solrj.io.comp.FieldComparator(java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)"], ["org.apache.solr.client.solrj.io.comp.FieldComparator", "org.apache.solr.client.solrj.io.comp.FieldComparator(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)", "public org.apache.solr.client.solrj.io.comp.FieldComparator(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.comp.FieldComparator.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)"], ["int", "org.apache.solr.client.solrj.io.comp.FieldComparator.compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)", "public int compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)"], ["int", "org.apache.solr.client.solrj.io.comp.FieldComparator.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.apache.solr.client.solrj.io.comp.MultiComp", "org.apache.solr.client.solrj.io.comp.MultiComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>...)", "public org.apache.solr.client.solrj.io.comp.MultiComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>...)"], ["int", "org.apache.solr.client.solrj.io.comp.MultiComp.compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)", "public int compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.comp.MultiComp.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.comp.MultiComp.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.apache.solr.client.solrj.io.comp.StreamComparator", "org.apache.solr.client.solrj.io.comp.StreamComparator(java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)", "public org.apache.solr.client.solrj.io.comp.StreamComparator(java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)"], ["org.apache.solr.client.solrj.io.comp.StreamComparator", "org.apache.solr.client.solrj.io.comp.StreamComparator(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)", "public org.apache.solr.client.solrj.io.comp.StreamComparator(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.comp.ComparatorOrder)"], ["org.apache.solr.client.solrj.io.stream.CloudSolrStream$StreamOpener", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$StreamOpener(org.apache.solr.client.solrj.io.stream.SolrStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.CloudSolrStream$StreamOpener(org.apache.solr.client.solrj.io.stream.SolrStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$StreamOpener.call()", "public org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper call() throws java.lang.Exception"], ["java.lang.Object", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$StreamOpener.call()", "public java.lang.Object call() throws java.lang.Exception"], ["org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper(org.apache.solr.client.solrj.io.stream.CloudSolrStream, org.apache.solr.client.solrj.io.stream.SolrStream, java.util.Comparator)", "public org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper(org.apache.solr.client.solrj.io.stream.CloudSolrStream, org.apache.solr.client.solrj.io.stream.SolrStream, java.util.Comparator)"], ["int", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper.compareTo(org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper)", "public int compareTo(org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper)"], ["boolean", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper.getTuple()", "public org.apache.solr.client.solrj.io.Tuple getTuple()"], ["boolean", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper.next()", "public boolean next() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.CloudSolrStream$TupleWrapper.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["org.apache.solr.client.solrj.io.stream.CloudSolrStream", "org.apache.solr.client.solrj.io.stream.CloudSolrStream(java.lang.String, java.lang.String, java.util.Map)", "public org.apache.solr.client.solrj.io.stream.CloudSolrStream(java.lang.String, java.lang.String, java.util.Map) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.CloudSolrStream", "org.apache.solr.client.solrj.io.stream.CloudSolrStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.CloudSolrStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.setFieldMappings(java.util.Map<java.lang.String, java.lang.String>)", "public void setFieldMappings(java.util.Map<java.lang.String, java.lang.String>)"], ["void", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.setTrace(boolean)", "public void setTrace(boolean)"], ["void", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["void", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.open()", "public void open() throws java.io.IOException"], ["java.util.Map", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.getEofTuples()", "public java.util.Map getEofTuples()"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.CloudSolrStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.JSONTupleStream", "org.apache.solr.client.solrj.io.stream.JSONTupleStream(java.io.Reader)", "public org.apache.solr.client.solrj.io.stream.JSONTupleStream(java.io.Reader)"], ["org.apache.solr.client.solrj.io.stream.JSONTupleStream", "org.apache.solr.client.solrj.io.stream.JSONTupleStream.create(org.apache.solr.client.solrj.SolrClient, org.apache.solr.common.params.SolrParams)", "public static org.apache.solr.client.solrj.io.stream.JSONTupleStream create(org.apache.solr.client.solrj.SolrClient, org.apache.solr.common.params.SolrParams) throws java.io.IOException, org.apache.solr.client.solrj.SolrServerException"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.client.solrj.io.stream.JSONTupleStream.next()", "public java.util.Map<java.lang.String, java.lang.Object> next() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.JSONTupleStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.MergeStream", "org.apache.solr.client.solrj.io.stream.MergeStream(org.apache.solr.client.solrj.io.stream.TupleStream, org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.MergeStream(org.apache.solr.client.solrj.io.stream.TupleStream, org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["org.apache.solr.client.solrj.io.stream.MergeStream", "org.apache.solr.client.solrj.io.stream.MergeStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.MergeStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.MergeStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.MergeStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.MergeStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.MergeStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.MergeStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.MergeStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.MergeStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.MergeStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.ParallelStream", "org.apache.solr.client.solrj.io.stream.ParallelStream(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.stream.TupleStream, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.ParallelStream(java.lang.String, java.lang.String, org.apache.solr.client.solrj.io.stream.TupleStream, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.ParallelStream", "org.apache.solr.client.solrj.io.stream.ParallelStream(java.lang.String, java.lang.String, java.lang.String, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.ParallelStream(java.lang.String, java.lang.String, java.lang.String, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.ParallelStream", "org.apache.solr.client.solrj.io.stream.ParallelStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.ParallelStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.ParallelStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.ParallelStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.ParallelStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.ParallelStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["void", "org.apache.solr.client.solrj.io.stream.ParallelStream.setObjectSerialize(boolean)", "public void setObjectSerialize(boolean)"], ["boolean", "org.apache.solr.client.solrj.io.stream.ParallelStream.getObjectSerialize()", "public boolean getObjectSerialize()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.ParallelStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.PushBackStream", "org.apache.solr.client.solrj.io.stream.PushBackStream(org.apache.solr.client.solrj.io.stream.TupleStream)", "public org.apache.solr.client.solrj.io.stream.PushBackStream(org.apache.solr.client.solrj.io.stream.TupleStream)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.PushBackStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.PushBackStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.PushBackStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.PushBackStream.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(org.apache.solr.client.solrj.io.Tuple)", "public void pushBack(org.apache.solr.client.solrj.io.Tuple)"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.PushBackStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.PushBackStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.RankStream$ReverseComp", "org.apache.solr.client.solrj.io.stream.RankStream$ReverseComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.RankStream$ReverseComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["int", "org.apache.solr.client.solrj.io.stream.RankStream$ReverseComp.compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)", "public int compare(org.apache.solr.client.solrj.io.Tuple, org.apache.solr.client.solrj.io.Tuple)"], ["int", "org.apache.solr.client.solrj.io.stream.RankStream$ReverseComp.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["org.apache.solr.client.solrj.io.stream.RankStream", "org.apache.solr.client.solrj.io.stream.RankStream(org.apache.solr.client.solrj.io.stream.TupleStream, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.RankStream(org.apache.solr.client.solrj.io.stream.TupleStream, int, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["org.apache.solr.client.solrj.io.stream.RankStream", "org.apache.solr.client.solrj.io.stream.RankStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.RankStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.RankStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.RankStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.RankStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.RankStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.RankStream.close()", "public void close() throws java.io.IOException"], ["java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>", "org.apache.solr.client.solrj.io.stream.RankStream.getComparator()", "public java.util.Comparator<org.apache.solr.client.solrj.io.Tuple> getComparator()"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.RankStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.RankStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.RankStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.ReducerStream", "org.apache.solr.client.solrj.io.stream.ReducerStream(org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.ReducerStream(org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["org.apache.solr.client.solrj.io.stream.ReducerStream", "org.apache.solr.client.solrj.io.stream.ReducerStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.ReducerStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.ReducerStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.ReducerStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.ReducerStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.ReducerStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.ReducerStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.ReducerStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.ReducerStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.ReducerStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.SolrStream", "org.apache.solr.client.solrj.io.stream.SolrStream(java.lang.String, java.util.Map)", "public org.apache.solr.client.solrj.io.stream.SolrStream(java.lang.String, java.util.Map)"], ["void", "org.apache.solr.client.solrj.io.stream.SolrStream.setFieldMappings(java.util.Map<java.lang.String, java.lang.String>)", "public void setFieldMappings(java.util.Map<java.lang.String, java.lang.String>)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.SolrStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.SolrStream.getBaseUrl()", "public java.lang.String getBaseUrl()"], ["void", "org.apache.solr.client.solrj.io.stream.SolrStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["void", "org.apache.solr.client.solrj.io.stream.SolrStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.SolrStream.setTrace(boolean)", "public void setTrace(boolean)"], ["void", "org.apache.solr.client.solrj.io.stream.SolrStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.SolrStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.StreamContext", "org.apache.solr.client.solrj.io.stream.StreamContext()", "public org.apache.solr.client.solrj.io.stream.StreamContext()"], ["java.lang.Object", "org.apache.solr.client.solrj.io.stream.StreamContext.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["void", "org.apache.solr.client.solrj.io.stream.StreamContext.put(java.lang.Object, java.lang.Object)", "public void put(java.lang.Object, java.lang.Object)"], ["void", "org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(org.apache.solr.client.solrj.io.SolrClientCache)", "public void setSolrClientCache(org.apache.solr.client.solrj.io.SolrClientCache)"], ["org.apache.solr.client.solrj.io.SolrClientCache", "org.apache.solr.client.solrj.io.stream.StreamContext.getSolrClientCache()", "public org.apache.solr.client.solrj.io.SolrClientCache getSolrClientCache()"], ["void", "org.apache.solr.client.solrj.io.stream.StreamContext.setStreamFactory(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public void setStreamFactory(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamFactory", "org.apache.solr.client.solrj.io.stream.StreamContext.getStreamFactory()", "public org.apache.solr.client.solrj.io.stream.expr.StreamFactory getStreamFactory()"], ["org.apache.solr.client.solrj.io.stream.TupleStream", "org.apache.solr.client.solrj.io.stream.TupleStream()", "public org.apache.solr.client.solrj.io.stream.TupleStream()"], ["int", "org.apache.solr.client.solrj.io.stream.TupleStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.UniqueStream", "org.apache.solr.client.solrj.io.stream.UniqueStream(org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public org.apache.solr.client.solrj.io.stream.UniqueStream(org.apache.solr.client.solrj.io.stream.TupleStream, java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["org.apache.solr.client.solrj.io.stream.UniqueStream", "org.apache.solr.client.solrj.io.stream.UniqueStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.UniqueStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.UniqueStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.UniqueStream.setComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)", "public void setComp(java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>)"], ["void", "org.apache.solr.client.solrj.io.stream.UniqueStream.setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)", "public void setStreamContext(org.apache.solr.client.solrj.io.stream.StreamContext)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream>", "org.apache.solr.client.solrj.io.stream.UniqueStream.children()", "public java.util.List<org.apache.solr.client.solrj.io.stream.TupleStream> children()"], ["void", "org.apache.solr.client.solrj.io.stream.UniqueStream.open()", "public void open() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.io.stream.UniqueStream.close()", "public void close() throws java.io.IOException"], ["org.apache.solr.client.solrj.io.Tuple", "org.apache.solr.client.solrj.io.stream.UniqueStream.read()", "public org.apache.solr.client.solrj.io.Tuple read() throws java.io.IOException"], ["int", "org.apache.solr.client.solrj.io.stream.UniqueStream.getCost()", "public int getCost()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.UniqueStream.toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter toExpression(org.apache.solr.client.solrj.io.stream.expr.StreamFactory) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.getFunctionName()", "public java.lang.String getFunctionName()"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.setFunctionName(java.lang.String)", "public void setFunctionName(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.withFunctionName(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression withFunctionName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)", "public void addParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(java.lang.String)", "public void addParameter(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.withParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression withParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.withParameter(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression withParameter(java.lang.String)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.getParameters()", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter> getParameters()"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.setParameters(java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>)", "public void setParameters(java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.withParameters(java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpression withParameters(java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.solr.client.solrj.io.stream.expr.StreamExpression.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String, java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String, org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter(java.lang.String, org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.getName()", "public java.lang.String getName()"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.setName(java.lang.String)", "public void setName(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.getParameter()", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter getParameter()"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.setParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)", "public void setParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.withParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter withParameter(org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter)"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.setParameter(java.lang.String)", "public void setParameter(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.withParameter(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter withParameter(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParser", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParser()", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParser()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpression", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParser.parse(java.lang.String)", "public static org.apache.solr.client.solrj.io.stream.expr.StreamExpression parse(java.lang.String)"], ["boolean", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParser.wordToken(java.lang.String)", "public static boolean wordToken(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue.getValue()", "public java.lang.String getValue()"], ["void", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue.setValue(java.lang.String)", "public void setValue(java.lang.String)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue.withValue(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue withValue(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamFactory", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory()", "public org.apache.solr.client.solrj.io.stream.expr.StreamFactory()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamFactory", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamFactory withCollectionZkHost(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getCollectionZkHost(java.lang.String)", "public java.lang.String getCollectionZkHost(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.Class>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getStreamFunctions()", "public java.util.Map<java.lang.String, java.lang.Class> getStreamFunctions()"], ["org.apache.solr.client.solrj.io.stream.expr.StreamFactory", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withStreamFunction(java.lang.String, java.lang.Class)", "public org.apache.solr.client.solrj.io.stream.expr.StreamFactory withStreamFunction(java.lang.String, java.lang.Class)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, int)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter getOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, int)"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getValueOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, int)", "public java.lang.String getValueOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, int)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getNamedOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression)", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter> getNamedOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression)"], ["org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getNamedOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.String)", "public org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter getNamedOperand(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.String)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getExpressionOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression)", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression> getExpressionOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getExpressionOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.String)", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression> getExpressionOperands(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.String)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getOperandsOfType(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.Class...)", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter> getOperandsOfType(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.Class...)"], ["java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getExpressionOperandsRepresentingTypes(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.Class...)", "public java.util.List<org.apache.solr.client.solrj.io.stream.expr.StreamExpression> getExpressionOperandsRepresentingTypes(org.apache.solr.client.solrj.io.stream.expr.StreamExpression, java.lang.Class...)"], ["org.apache.solr.client.solrj.io.stream.TupleStream", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.constructStream(java.lang.String)", "public org.apache.solr.client.solrj.io.stream.TupleStream constructStream(java.lang.String) throws java.io.IOException"], ["org.apache.solr.client.solrj.io.stream.TupleStream", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.constructStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression)", "public org.apache.solr.client.solrj.io.stream.TupleStream constructStream(org.apache.solr.client.solrj.io.stream.expr.StreamExpression) throws java.io.IOException"], ["java.util.Comparator<org.apache.solr.client.solrj.io.Tuple>", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.constructComparator(java.lang.String, java.lang.Class)", "public java.util.Comparator<org.apache.solr.client.solrj.io.Tuple> constructComparator(java.lang.String, java.lang.Class) throws java.io.IOException"], ["<T> T", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.createInstance(java.lang.Class<T>, java.lang.Class<?>[], java.lang.Object[])", "public <T> T createInstance(java.lang.Class<T>, java.lang.Class<?>[], java.lang.Object[]) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.io.stream.expr.StreamFactory.getFunctionName(java.lang.Class)", "public java.lang.String getFunctionName(java.lang.Class) throws java.io.IOException"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION[]", "org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION.values()", "public static org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION[] values()"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION", "org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION.valueOf(java.lang.String)", "public static org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION valueOf(java.lang.String)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, boolean)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, boolean)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, boolean, int)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, boolean, int)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean, boolean)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean, boolean)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean, boolean, boolean)", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest setAction(org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION, boolean, boolean, int, boolean, boolean, boolean)"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.rollback()", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest rollback()"], ["void", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setParam(java.lang.String, java.lang.String)", "public void setParam(java.lang.String, java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setParams(org.apache.solr.common.params.ModifiableSolrParams)", "public void setParams(org.apache.solr.common.params.ModifiableSolrParams)"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.getParams()", "public org.apache.solr.common.params.ModifiableSolrParams getParams()"], ["boolean", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.isWaitSearcher()", "public boolean isWaitSearcher()"], ["org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.getAction()", "public org.apache.solr.client.solrj.request.AbstractUpdateRequest$ACTION getAction()"], ["void", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setWaitSearcher(boolean)", "public void setWaitSearcher(boolean)"], ["int", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.getCommitWithin()", "public int getCommitWithin()"], ["void", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.setCommitWithin(int)", "public void setCommitWithin(int)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.AbstractUpdateRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica()"], ["java.util.Properties", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getProperties()", "public java.util.Properties getProperties()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setProperties(java.util.Properties)", "public void setProperties(java.util.Properties)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getNode()", "public java.lang.String getNode()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setNode(java.lang.String)", "public void setNode(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getRouteKey()", "public java.lang.String getRouteKey()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setRouteKey(java.lang.String)", "public void setRouteKey(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getInstanceDir()", "public java.lang.String getInstanceDir()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setInstanceDir(java.lang.String)", "public void setInstanceDir(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getDataDir()", "public java.lang.String getDataDir()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setDataDir(java.lang.String)", "public void setDataDir(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setAsyncId(java.lang.String)", "public void setAsyncId(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getAsyncId()", "public java.lang.String getAsyncId()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplica.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getReplica()", "public java.lang.String getReplica()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setReplica(java.lang.String)", "public void setReplica(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getPropertyName()", "public java.lang.String getPropertyName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setPropertyName(java.lang.String)", "public void setPropertyName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getPropertyValue()", "public java.lang.String getPropertyValue()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setPropertyValue(java.lang.String)", "public void setPropertyValue(java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getShardUnique()", "public java.lang.Boolean getShardUnique()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setShardUnique(java.lang.Boolean)", "public void setShardUnique(java.lang.Boolean)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddReplicaProp.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole.getRole()", "public java.lang.String getRole()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole.setRole(java.lang.String)", "public void setRole(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole.getNode()", "public java.lang.String getNode()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$AddRole.setNode(java.lang.String)", "public void setNode(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.getPropertyName()", "public java.lang.String getPropertyName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.setPropertyName(java.lang.String)", "public void setPropertyName(java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.getOnlyActiveNodes()", "public java.lang.Boolean getOnlyActiveNodes()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.setOnlyActiveNodes(java.lang.Boolean)", "public void setOnlyActiveNodes(java.lang.Boolean)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.getShardUnique()", "public java.lang.Boolean getShardUnique()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.setShardUnique(java.lang.Boolean)", "public void setShardUnique(java.lang.Boolean)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.setCollection(java.lang.String)", "public void setCollection(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.getCollection()", "public java.lang.String getCollection()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$BalanceShardUnique.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp.setPropertyName(java.lang.String)", "public void setPropertyName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp.getPropertyName()", "public java.lang.String getPropertyName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp.setPropertyValue(java.lang.String)", "public void setPropertyValue(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp.getPropertyValue()", "public java.lang.String getPropertyValue()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterProp.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus.getShardName()", "public java.lang.String getShardName()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$ClusterStatus.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionAdminRoleRequest.setNode(java.lang.String)", "public void setNode(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionAdminRoleRequest.getNode()", "public java.lang.String getNode()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionAdminRoleRequest.setRole(java.lang.String)", "public void setRole(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionAdminRoleRequest.getRole()", "public java.lang.String getRole()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionAdminRoleRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.getShardName()", "public java.lang.String getShardName()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionShardAdminRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionSpecificAdminRequest.setCollectionName(java.lang.String)", "public final void setCollectionName(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CollectionSpecificAdminRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$Create", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$Create()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setConfigName(java.lang.String)", "public void setConfigName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setCreateNodeSet(java.lang.String)", "public void setCreateNodeSet(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setRouterName(java.lang.String)", "public void setRouterName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setShards(java.lang.String)", "public void setShards(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setRouterField(java.lang.String)", "public void setRouterField(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setNumShards(java.lang.Integer)", "public void setNumShards(java.lang.Integer)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setMaxShardsPerNode(java.lang.Integer)", "public void setMaxShardsPerNode(java.lang.Integer)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setAutoAddReplicas(boolean)", "public void setAutoAddReplicas(boolean)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setReplicationFactor(java.lang.Integer)", "public void setReplicationFactor(java.lang.Integer)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setStateFormat(java.lang.Integer)", "public void setStateFormat(java.lang.Integer)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setAsyncId(java.lang.String)", "public void setAsyncId(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setRule(java.lang.String...)", "public void setRule(java.lang.String...)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setSnitch(java.lang.String...)", "public void setSnitch(java.lang.String...)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getConfigName()", "public java.lang.String getConfigName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getCreateNodeSet()", "public java.lang.String getCreateNodeSet()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getRouterName()", "public java.lang.String getRouterName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getShards()", "public java.lang.String getShards()"], ["java.lang.Integer", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getNumShards()", "public java.lang.Integer getNumShards()"], ["java.lang.Integer", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getMaxShardsPerNode()", "public java.lang.Integer getMaxShardsPerNode()"], ["java.lang.Integer", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getReplicationFactor()", "public java.lang.Integer getReplicationFactor()"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getAutoAddReplicas()", "public java.lang.Boolean getAutoAddReplicas()"], ["java.lang.Integer", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getStateFormat()", "public java.lang.Integer getStateFormat()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getAsyncId()", "public java.lang.String getAsyncId()"], ["java.util.Properties", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getProperties()", "public java.util.Properties getProperties()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.setProperties(java.util.Properties)", "public void setProperties(java.util.Properties)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Create.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.setAliasName(java.lang.String)", "public void setAliasName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.getAliasName()", "public java.lang.String getAliasName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.setAliasedCollections(java.lang.String)", "public void setAliasedCollections(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.getAliasedCollections()", "public java.lang.String getAliasedCollections()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateAlias.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.setNodeSet(java.lang.String)", "public void setNodeSet(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getNodeSet()", "public java.lang.String getNodeSet()"], ["java.util.Properties", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getProperties()", "public java.util.Properties getProperties()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.setProperties(java.util.Properties)", "public void setProperties(java.util.Properties)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$CreateShard.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$Delete", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Delete()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$Delete()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Delete.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteAlias", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteAlias()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteAlias()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteAlias.setAliasName(java.lang.String)", "public void setAliasName(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteAlias.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.setReplica(java.lang.String)", "public void setReplica(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getReplica()", "public java.lang.String getReplica()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.setOnlyIfDown(boolean)", "public void setOnlyIfDown(boolean)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getOnlyIfDown()", "public java.lang.Boolean getOnlyIfDown()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplica.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getReplica()", "public java.lang.String getReplica()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.setReplica(java.lang.String)", "public void setReplica(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getPropertyName()", "public java.lang.String getPropertyName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.setPropertyName(java.lang.String)", "public void setPropertyName(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteReplicaProp.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$DeleteShard.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$List", "org.apache.solr.client.solrj.request.CollectionAdminRequest$List()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$List()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setTargetCollection(java.lang.String)", "public void setTargetCollection(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getTargetCollection()", "public java.lang.String getTargetCollection()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setSplitKey(java.lang.String)", "public void setSplitKey(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getSplitKey()", "public java.lang.String getSplitKey()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setForwardTimeout(int)", "public void setForwardTimeout(int)"], ["java.lang.Integer", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getForwardTimeout()", "public java.lang.Integer getForwardTimeout()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setProperties(java.util.Properties)", "public void setProperties(java.util.Properties)"], ["java.util.Properties", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getProperties()", "public java.util.Properties getProperties()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.setAsyncId(java.lang.String)", "public void setAsyncId(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Migrate.getAsyncId()", "public java.lang.String getAsyncId()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$OverseerStatus", "org.apache.solr.client.solrj.request.CollectionAdminRequest$OverseerStatus()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$OverseerStatus()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$Reload", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Reload()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$Reload()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$Reload.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole.getRole()", "public java.lang.String getRole()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole.setRole(java.lang.String)", "public void setRole(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole.getNode()", "public java.lang.String getNode()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RemoveRole.setNode(java.lang.String)", "public void setNode(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus.setRequestId(java.lang.String)", "public void setRequestId(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus.getRequestId()", "public java.lang.String getRequestId()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$RequestStatus.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setRanges(java.lang.String)", "public void setRanges(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getRanges()", "public java.lang.String getRanges()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setSplitKey(java.lang.String)", "public void setSplitKey(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getSplitKey()", "public java.lang.String getSplitKey()"], ["java.util.Properties", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getProperties()", "public java.util.Properties getProperties()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setProperties(java.util.Properties)", "public void setProperties(java.util.Properties)"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setAsyncId(java.lang.String)", "public void setAsyncId(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getAsyncId()", "public java.lang.String getAsyncId()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getCommonParams()", "public org.apache.solr.common.params.ModifiableSolrParams getCommonParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getShardName()", "public java.lang.String getShardName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setShardName(java.lang.String)", "public void setShardName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.getCollectionName()", "public java.lang.String getCollectionName()"], ["void", "org.apache.solr.client.solrj.request.CollectionAdminRequest$SplitShard.setCollectionName(java.lang.String)", "public void setCollectionName(java.lang.String)"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest", "org.apache.solr.client.solrj.request.CollectionAdminRequest()", "public org.apache.solr.client.solrj.request.CollectionAdminRequest()"], ["org.apache.solr.client.solrj.request.CollectionAdminRequest", "org.apache.solr.client.solrj.request.CollectionAdminRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.CollectionAdminRequest(java.lang.String)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CollectionAdminRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.CollectionAdminRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["org.apache.solr.client.solrj.request.ContentStreamUpdateRequest", "org.apache.solr.client.solrj.request.ContentStreamUpdateRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.ContentStreamUpdateRequest(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(java.io.File, java.lang.String)", "public void addFile(java.io.File, java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addContentStream(org.apache.solr.common.util.ContentStream)", "public void addContentStream(org.apache.solr.common.util.ContentStream)"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$Create", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$Create()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setInstanceDir(java.lang.String)", "public void setInstanceDir(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setSchemaName(java.lang.String)", "public void setSchemaName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setConfigName(java.lang.String)", "public void setConfigName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setDataDir(java.lang.String)", "public void setDataDir(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setUlogDir(java.lang.String)", "public void setUlogDir(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setConfigSet(java.lang.String)", "public void setConfigSet(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setCollection(java.lang.String)", "public void setCollection(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setNumShards(int)", "public void setNumShards(int)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setShardId(java.lang.String)", "public void setShardId(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setRoles(java.lang.String)", "public void setRoles(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setCoreNodeName(java.lang.String)", "public void setCoreNodeName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setIsTransient(java.lang.Boolean)", "public void setIsTransient(java.lang.Boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setIsLoadOnStartup(java.lang.Boolean)", "public void setIsLoadOnStartup(java.lang.Boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.setCollectionConfigName(java.lang.String)", "public void setCollectionConfigName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getInstanceDir()", "public java.lang.String getInstanceDir()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getSchemaName()", "public java.lang.String getSchemaName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getConfigName()", "public java.lang.String getConfigName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getDataDir()", "public java.lang.String getDataDir()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getUlogDir()", "public java.lang.String getUlogDir()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getConfigSet()", "public java.lang.String getConfigSet()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getCollection()", "public java.lang.String getCollection()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getShardId()", "public java.lang.String getShardId()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getRoles()", "public java.lang.String getRoles()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getCoreNodeName()", "public java.lang.String getCoreNodeName()"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getIsLoadOnStartup()", "public java.lang.Boolean getIsLoadOnStartup()"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getIsTransient()", "public java.lang.Boolean getIsTransient()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getCollectionConfigName()", "public java.lang.String getCollectionConfigName()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$Create.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes.setIndexDirs(java.util.List<java.lang.String>)", "public void setIndexDirs(java.util.List<java.lang.String>)"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes.getIndexDirs()", "public java.util.List<java.lang.String> getIndexDirs()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes.getSrcCores()", "public java.util.List<java.lang.String> getSrcCores()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes.setSrcCores(java.util.List<java.lang.String>)", "public void setSrcCores(java.util.List<java.lang.String>)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$MergeIndexes.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$Persist", "org.apache.solr.client.solrj.request.CoreAdminRequest$Persist()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$Persist()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Persist.setFileName(java.lang.String)", "public void setFileName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$Persist.getFileName()", "public java.lang.String getFileName()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$Persist.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$RequestRecovery", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestRecovery()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$RequestRecovery()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestRecovery.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard.getShard()", "public java.lang.String getShard()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard.setShard(java.lang.String)", "public void setShard(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard.getCollection()", "public java.lang.String getCollection()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$RequestSyncShard.setCollection(java.lang.String)", "public void setCollection(java.lang.String)"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$Unload", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload(boolean)", "public org.apache.solr.client.solrj.request.CoreAdminRequest$Unload(boolean)"], ["boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.isDeleteIndex()", "public boolean isDeleteIndex()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.setDeleteIndex(boolean)", "public void setDeleteIndex(boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.setDeleteDataDir(boolean)", "public void setDeleteDataDir(boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.setDeleteInstanceDir(boolean)", "public void setDeleteInstanceDir(boolean)"], ["boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.isDeleteDataDir()", "public boolean isDeleteDataDir()"], ["boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.isDeleteInstanceDir()", "public boolean isDeleteInstanceDir()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$Unload.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState()", "public org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setNodeName(java.lang.String)", "public void setNodeName(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.getNodeName()", "public java.lang.String getNodeName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.getCoreNodeName()", "public java.lang.String getCoreNodeName()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setCoreNodeName(java.lang.String)", "public void setCoreNodeName(java.lang.String)"], ["org.apache.solr.common.cloud.Replica$State", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.getState()", "public org.apache.solr.common.cloud.Replica$State getState()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setState(org.apache.solr.common.cloud.Replica$State)", "public void setState(org.apache.solr.common.cloud.Replica$State)"], ["java.lang.Boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.getCheckLive()", "public java.lang.Boolean getCheckLive()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setCheckLive(java.lang.Boolean)", "public void setCheckLive(java.lang.Boolean)"], ["boolean", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.isOnlyIfLeader()", "public boolean isOnlyIfLeader()"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setOnlyIfLeader(boolean)", "public void setOnlyIfLeader(boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.setOnlyIfLeaderActive(boolean)", "public void setOnlyIfLeaderActive(boolean)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.lang.String", "org.apache.solr.client.solrj.request.CoreAdminRequest$WaitForState.toString()", "public java.lang.String toString()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest", "org.apache.solr.client.solrj.request.CoreAdminRequest()", "public org.apache.solr.client.solrj.request.CoreAdminRequest()"], ["org.apache.solr.client.solrj.request.CoreAdminRequest", "org.apache.solr.client.solrj.request.CoreAdminRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.CoreAdminRequest(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest.setCoreName(java.lang.String)", "public final void setCoreName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest.setOtherCoreName(java.lang.String)", "public final void setOtherCoreName(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest.setIndexInfoNeeded(boolean)", "public final void setIndexInfoNeeded(boolean)"], ["void", "org.apache.solr.client.solrj.request.CoreAdminRequest.setAction(org.apache.solr.common.params.CoreAdminParams$CoreAdminAction)", "public void setAction(org.apache.solr.common.params.CoreAdminParams$CoreAdminAction)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.CoreAdminRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.CoreAdminRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.reloadCore(java.lang.String, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse reloadCore(java.lang.String, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.unloadCore(java.lang.String, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse unloadCore(java.lang.String, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.unloadCore(java.lang.String, boolean, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse unloadCore(java.lang.String, boolean, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.unloadCore(java.lang.String, boolean, boolean, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse unloadCore(java.lang.String, boolean, boolean, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.renameCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse renameCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.getStatus(java.lang.String, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse getStatus(java.lang.String, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient, java.lang.String, java.lang.String)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient, java.lang.String, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient, java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse createCore(java.lang.String, java.lang.String, org.apache.solr.client.solrj.SolrClient, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.request.CoreAdminRequest.mergeIndexes(java.lang.String, java.lang.String[], java.lang.String[], org.apache.solr.client.solrj.SolrClient)", "public static org.apache.solr.client.solrj.response.CoreAdminResponse mergeIndexes(java.lang.String, java.lang.String[], java.lang.String[], org.apache.solr.client.solrj.SolrClient) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException"], ["org.apache.solr.client.solrj.request.DirectXmlRequest", "org.apache.solr.client.solrj.request.DirectXmlRequest(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.request.DirectXmlRequest(java.lang.String, java.lang.String)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.DirectXmlRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.DirectXmlRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["void", "org.apache.solr.client.solrj.request.DirectXmlRequest.setParams(org.apache.solr.common.params.SolrParams)", "public void setParams(org.apache.solr.common.params.SolrParams)"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest()", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest()"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.getParams()", "public org.apache.solr.common.params.ModifiableSolrParams getParams()"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(org.apache.solr.common.SolrInputDocument)", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest addDocument(org.apache.solr.common.SolrInputDocument)"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocuments(java.util.Collection<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest addDocuments(java.util.Collection<org.apache.solr.common.SolrInputDocument>)"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(java.lang.String)", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest setQuery(java.lang.String)"], ["org.apache.solr.client.solrj.request.DocumentAnalysisRequest", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean)", "public org.apache.solr.client.solrj.request.DocumentAnalysisRequest setShowMatch(boolean)"], ["java.util.List<org.apache.solr.common.SolrInputDocument>", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.getDocuments()", "public java.util.List<org.apache.solr.common.SolrInputDocument> getDocuments()"], ["java.lang.String", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.getQuery()", "public java.lang.String getQuery()"], ["boolean", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.isShowMatch()", "public boolean isShowMatch()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.DocumentAnalysisRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest()", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.setFieldValue(java.lang.String)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldValue(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getFieldValue()", "public java.lang.String getFieldValue()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.setQuery(java.lang.String)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest setQuery(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getQuery()", "public java.lang.String getQuery()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.setShowMatch(boolean)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest setShowMatch(boolean)"], ["boolean", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.isShowMatch()", "public boolean isShowMatch()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.addFieldName(java.lang.String)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest addFieldName(java.lang.String)"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.setFieldNames(java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldNames(java.util.List<java.lang.String>)"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getFieldNames()", "public java.util.List<java.lang.String> getFieldNames()"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.addFieldType(java.lang.String)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest addFieldType(java.lang.String)"], ["org.apache.solr.client.solrj.request.FieldAnalysisRequest", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.setFieldTypes(java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldTypes(java.util.List<java.lang.String>)"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.FieldAnalysisRequest.getFieldTypes()", "public java.util.List<java.lang.String> getFieldTypes()"], ["org.apache.solr.client.solrj.request.GenericSolrRequest", "org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String, org.apache.solr.common.params.SolrParams)", "public org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest$METHOD, java.lang.String, org.apache.solr.common.params.SolrParams)"], ["void", "org.apache.solr.client.solrj.request.GenericSolrRequest.setContentStreams(java.util.Collection<org.apache.solr.common.util.ContentStream>)", "public void setContentStreams(java.util.Collection<org.apache.solr.common.util.ContentStream>)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.GenericSolrRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.GenericSolrRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readNamedList(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.util.NamedList readNamedList(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["java.util.List", "org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readIterator(org.apache.solr.common.util.DataInputInputStream)", "public java.util.List readIterator(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec", "org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec()", "public org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec()"], ["void", "org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.marshal(org.apache.solr.client.solrj.request.UpdateRequest, java.io.OutputStream)", "public void marshal(org.apache.solr.client.solrj.request.UpdateRequest, java.io.OutputStream) throws java.io.IOException"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(java.io.InputStream, org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$StreamingUpdateHandler)", "public org.apache.solr.client.solrj.request.UpdateRequest unmarshal(java.io.InputStream, org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$StreamingUpdateHandler) throws java.io.IOException"], ["org.apache.solr.client.solrj.request.LukeRequest", "org.apache.solr.client.solrj.request.LukeRequest()", "public org.apache.solr.client.solrj.request.LukeRequest()"], ["org.apache.solr.client.solrj.request.LukeRequest", "org.apache.solr.client.solrj.request.LukeRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.LukeRequest(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.LukeRequest.addField(java.lang.String)", "public void addField(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.LukeRequest.setFields(java.util.List<java.lang.String>)", "public void setFields(java.util.List<java.lang.String>)"], ["boolean", "org.apache.solr.client.solrj.request.LukeRequest.isShowSchema()", "public boolean isShowSchema()"], ["void", "org.apache.solr.client.solrj.request.LukeRequest.setShowSchema(boolean)", "public void setShowSchema(boolean)"], ["int", "org.apache.solr.client.solrj.request.LukeRequest.getNumTerms()", "public int getNumTerms()"], ["void", "org.apache.solr.client.solrj.request.LukeRequest.setNumTerms(int)", "public void setNumTerms(int)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.LukeRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.LukeRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.QueryRequest", "org.apache.solr.client.solrj.request.QueryRequest()", "public org.apache.solr.client.solrj.request.QueryRequest()"], ["org.apache.solr.client.solrj.request.QueryRequest", "org.apache.solr.client.solrj.request.QueryRequest(org.apache.solr.common.params.SolrParams)", "public org.apache.solr.client.solrj.request.QueryRequest(org.apache.solr.common.params.SolrParams)"], ["org.apache.solr.client.solrj.request.QueryRequest", "org.apache.solr.client.solrj.request.QueryRequest(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD)", "public org.apache.solr.client.solrj.request.QueryRequest(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD)"], ["java.lang.String", "org.apache.solr.client.solrj.request.QueryRequest.getPath()", "public java.lang.String getPath()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.QueryRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.QueryRequest.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream(org.apache.solr.client.solrj.request.RequestWriter, org.apache.solr.client.solrj.request.UpdateRequest)", "public org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream(org.apache.solr.client.solrj.request.RequestWriter, org.apache.solr.client.solrj.request.UpdateRequest)"], ["java.lang.String", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getSourceInfo()", "public java.lang.String getSourceInfo()"], ["java.lang.String", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getContentType()", "public java.lang.String getContentType()"], ["java.lang.Long", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getSize()", "public java.lang.Long getSize()"], ["java.io.InputStream", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getStream()", "public java.io.InputStream getStream() throws java.io.IOException"], ["java.io.Reader", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.getReader()", "public java.io.Reader getReader() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream.writeTo(java.io.OutputStream)", "public void writeTo(java.io.OutputStream) throws java.io.IOException"], ["org.apache.solr.client.solrj.request.RequestWriter", "org.apache.solr.client.solrj.request.RequestWriter()", "public org.apache.solr.client.solrj.request.RequestWriter()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.RequestWriter.getContentStreams(org.apache.solr.client.solrj.SolrRequest)", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams(org.apache.solr.client.solrj.SolrRequest) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.request.RequestWriter.getPath(org.apache.solr.client.solrj.SolrRequest)", "public java.lang.String getPath(org.apache.solr.client.solrj.SolrRequest)"], ["org.apache.solr.common.util.ContentStream", "org.apache.solr.client.solrj.request.RequestWriter.getContentStream(org.apache.solr.client.solrj.request.UpdateRequest)", "public org.apache.solr.common.util.ContentStream getContentStream(org.apache.solr.client.solrj.request.UpdateRequest) throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.request.RequestWriter.write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream)", "public void write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.request.RequestWriter.getUpdateContentType()", "public java.lang.String getUpdateContentType()"], ["org.apache.solr.client.solrj.request.SolrPing", "org.apache.solr.client.solrj.request.SolrPing()", "public org.apache.solr.client.solrj.request.SolrPing()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.SolrPing.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.client.solrj.request.SolrPing.getParams()", "public org.apache.solr.common.params.ModifiableSolrParams getParams()"], ["org.apache.solr.client.solrj.request.SolrPing", "org.apache.solr.client.solrj.request.SolrPing.removeAction()", "public org.apache.solr.client.solrj.request.SolrPing removeAction()"], ["org.apache.solr.client.solrj.request.SolrPing", "org.apache.solr.client.solrj.request.SolrPing.setActionDisable()", "public org.apache.solr.client.solrj.request.SolrPing setActionDisable()"], ["org.apache.solr.client.solrj.request.SolrPing", "org.apache.solr.client.solrj.request.SolrPing.setActionEnable()", "public org.apache.solr.client.solrj.request.SolrPing setActionEnable()"], ["org.apache.solr.client.solrj.request.SolrPing", "org.apache.solr.client.solrj.request.SolrPing.setActionPing()", "public org.apache.solr.client.solrj.request.SolrPing setActionPing()"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.client.solrj.request.SolrPing.getParams()", "public org.apache.solr.common.params.SolrParams getParams()"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest()", "public org.apache.solr.client.solrj.request.UpdateRequest()"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest(java.lang.String)", "public org.apache.solr.client.solrj.request.UpdateRequest(java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.UpdateRequest.clear()", "public void clear()"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.add(org.apache.solr.common.SolrInputDocument)", "public org.apache.solr.client.solrj.request.UpdateRequest add(org.apache.solr.common.SolrInputDocument)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.add(org.apache.solr.common.SolrInputDocument, java.lang.Boolean)", "public org.apache.solr.client.solrj.request.UpdateRequest add(org.apache.solr.common.SolrInputDocument, java.lang.Boolean)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.add(org.apache.solr.common.SolrInputDocument, java.lang.Integer)", "public org.apache.solr.client.solrj.request.UpdateRequest add(org.apache.solr.common.SolrInputDocument, java.lang.Integer)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.add(org.apache.solr.common.SolrInputDocument, java.lang.Integer, java.lang.Boolean)", "public org.apache.solr.client.solrj.request.UpdateRequest add(org.apache.solr.common.SolrInputDocument, java.lang.Integer, java.lang.Boolean)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.add(java.util.Collection<org.apache.solr.common.SolrInputDocument>)", "public org.apache.solr.client.solrj.request.UpdateRequest add(java.util.Collection<org.apache.solr.common.SolrInputDocument>)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteById(java.lang.String)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.lang.String)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteById(java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.lang.String, java.lang.String)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteById(java.lang.String, java.lang.String, java.lang.Long)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.lang.String, java.lang.String, java.lang.Long)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteById(java.util.List<java.lang.String>)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.util.List<java.lang.String>)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteById(java.lang.String, java.lang.Long)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteById(java.lang.String, java.lang.Long)"], ["org.apache.solr.client.solrj.request.UpdateRequest", "org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(java.lang.String)", "public org.apache.solr.client.solrj.request.UpdateRequest deleteByQuery(java.lang.String)"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req>", "org.apache.solr.client.solrj.request.UpdateRequest.getRoutes(org.apache.solr.common.cloud.DocRouter, org.apache.solr.common.cloud.DocCollection, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, org.apache.solr.common.params.ModifiableSolrParams, java.lang.String)", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.impl.LBHttpSolrClient$Req> getRoutes(org.apache.solr.common.cloud.DocRouter, org.apache.solr.common.cloud.DocCollection, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, org.apache.solr.common.params.ModifiableSolrParams, java.lang.String)"], ["void", "org.apache.solr.client.solrj.request.UpdateRequest.setDocIterator(java.util.Iterator<org.apache.solr.common.SolrInputDocument>)", "public void setDocIterator(java.util.Iterator<org.apache.solr.common.SolrInputDocument>)"], ["void", "org.apache.solr.client.solrj.request.UpdateRequest.setDeleteQuery(java.util.List<java.lang.String>)", "public void setDeleteQuery(java.util.List<java.lang.String>)"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.request.UpdateRequest.getContentStreams()", "public java.util.Collection<org.apache.solr.common.util.ContentStream> getContentStreams() throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.request.UpdateRequest.getXML()", "public java.lang.String getXML() throws java.io.IOException"], ["void", "org.apache.solr.client.solrj.request.UpdateRequest.writeXML(java.io.Writer)", "public void writeXML(java.io.Writer) throws java.io.IOException"], ["java.util.List<org.apache.solr.common.SolrInputDocument>", "org.apache.solr.client.solrj.request.UpdateRequest.getDocuments()", "public java.util.List<org.apache.solr.common.SolrInputDocument> getDocuments()"], ["java.util.Map<org.apache.solr.common.SolrInputDocument, java.util.Map<java.lang.String, java.lang.Object>>", "org.apache.solr.client.solrj.request.UpdateRequest.getDocumentsMap()", "public java.util.Map<org.apache.solr.common.SolrInputDocument, java.util.Map<java.lang.String, java.lang.Object>> getDocumentsMap()"], ["java.util.Iterator<org.apache.solr.common.SolrInputDocument>", "org.apache.solr.client.solrj.request.UpdateRequest.getDocIterator()", "public java.util.Iterator<org.apache.solr.common.SolrInputDocument> getDocIterator()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById()", "public java.util.List<java.lang.String> getDeleteById()"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>", "org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap()", "public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>> getDeleteByIdMap()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery()", "public java.util.List<java.lang.String> getDeleteQuery()"], ["boolean", "org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch()", "public boolean isLastDocInBatch()"], ["void", "org.apache.solr.client.solrj.request.UpdateRequest.lastDocInBatch()", "public void lastDocInBatch()"], ["java.lang.String", "org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase.getClassName()", "public java.lang.String getClassName()"], ["java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo>", "org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase.getTokens()", "public java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo> getTokens()"], ["java.lang.String", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getText()", "public java.lang.String getText()"], ["java.lang.String", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getRawText()", "public java.lang.String getRawText()"], ["java.lang.String", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getType()", "public java.lang.String getType()"], ["int", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getStart()", "public int getStart()"], ["int", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getEnd()", "public int getEnd()"], ["int", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.getPosition()", "public int getPosition()"], ["boolean", "org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo.isMatch()", "public boolean isMatch()"], ["org.apache.solr.client.solrj.response.AnalysisResponseBase", "org.apache.solr.client.solrj.response.AnalysisResponseBase()", "public org.apache.solr.client.solrj.response.AnalysisResponseBase()"], ["org.apache.solr.client.solrj.response.CollectionAdminResponse", "org.apache.solr.client.solrj.response.CollectionAdminResponse()", "public org.apache.solr.client.solrj.response.CollectionAdminResponse()"], ["org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Object>>", "org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionStatus()", "public org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Object>> getCollectionStatus()"], ["boolean", "org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess()", "public boolean isSuccess()"], ["org.apache.solr.common.util.NamedList<java.lang.String>", "org.apache.solr.client.solrj.response.CollectionAdminResponse.getErrorMessages()", "public org.apache.solr.common.util.NamedList<java.lang.String> getErrorMessages()"], ["java.util.Map<java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Integer>>", "org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus()", "public java.util.Map<java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Integer>> getCollectionCoresStatus()"], ["java.util.Map<java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Integer>>", "org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionNodesStatus()", "public java.util.Map<java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Integer>> getCollectionNodesStatus()"], ["org.apache.solr.client.solrj.response.CoreAdminResponse", "org.apache.solr.client.solrj.response.CoreAdminResponse()", "public org.apache.solr.client.solrj.response.CoreAdminResponse()"], ["org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Object>>", "org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus()", "public org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Object>> getCoreStatus()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus(java.lang.String)", "public org.apache.solr.common.util.NamedList<java.lang.Object> getCoreStatus(java.lang.String)"], ["java.util.Date", "org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(java.lang.String)", "public java.util.Date getStartTime(java.lang.String)"], ["java.lang.Long", "org.apache.solr.client.solrj.response.CoreAdminResponse.getUptime(java.lang.String)", "public java.lang.Long getUptime(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis.getDocumentKey()", "public java.lang.String getDocumentKey()"], ["int", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis.getFieldAnalysesCount()", "public int getFieldAnalysesCount()"], ["org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis.getFieldAnalysis(java.lang.String)", "public org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis getFieldAnalysis(java.lang.String)"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis>>", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis.iterator()", "public java.util.Iterator<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis>> iterator()"], ["void", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.setQueryPhases(java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>)", "public void setQueryPhases(java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>)"], ["void", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.setIndexPhases(java.lang.String, java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>)", "public void setIndexPhases(java.lang.String, java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>)"], ["java.lang.String", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getFieldName()", "public java.lang.String getFieldName()"], ["int", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getQueryPhasesCount()", "public int getQueryPhasesCount()"], ["java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getQueryPhases()", "public java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase> getQueryPhases()"], ["int", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getValueCount()", "public int getValueCount()"], ["int", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getIndexPhasesCount(java.lang.String)", "public int getIndexPhasesCount(java.lang.String)"], ["java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getIndexPhases(java.lang.String)", "public java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase> getIndexPhases(java.lang.String)"], ["java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>>>", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse$FieldAnalysis.getIndexPhasesByFieldValue()", "public java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>>> getIndexPhasesByFieldValue()"], ["org.apache.solr.client.solrj.response.DocumentAnalysisResponse", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse()", "public org.apache.solr.client.solrj.response.DocumentAnalysisResponse()"], ["void", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["int", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse.getDocumentAnalysesCount()", "public int getDocumentAnalysesCount()"], ["org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse.getDocumentAnalysis(java.lang.String)", "public org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis getDocumentAnalysis(java.lang.String)"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis>>", "org.apache.solr.client.solrj.response.DocumentAnalysisResponse.iterator()", "public java.util.Iterator<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.DocumentAnalysisResponse$DocumentAnalysis>> iterator()"], ["org.apache.solr.client.solrj.response.FacetField$Count", "org.apache.solr.client.solrj.response.FacetField$Count(org.apache.solr.client.solrj.response.FacetField, java.lang.String, long)", "public org.apache.solr.client.solrj.response.FacetField$Count(org.apache.solr.client.solrj.response.FacetField, java.lang.String, long)"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField$Count.getName()", "public java.lang.String getName()"], ["void", "org.apache.solr.client.solrj.response.FacetField$Count.setName(java.lang.String)", "public void setName(java.lang.String)"], ["long", "org.apache.solr.client.solrj.response.FacetField$Count.getCount()", "public long getCount()"], ["void", "org.apache.solr.client.solrj.response.FacetField$Count.setCount(long)", "public void setCount(long)"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.FacetField$Count.getFacetField()", "public org.apache.solr.client.solrj.response.FacetField getFacetField()"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField$Count.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField$Count.getAsFilterQuery()", "public java.lang.String getAsFilterQuery()"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.FacetField(java.lang.String)", "public org.apache.solr.client.solrj.response.FacetField(java.lang.String)"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.FacetField(java.lang.String, java.lang.String, java.util.Date)", "public org.apache.solr.client.solrj.response.FacetField(java.lang.String, java.lang.String, java.util.Date)"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField.getGap()", "public java.lang.String getGap()"], ["java.util.Date", "org.apache.solr.client.solrj.response.FacetField.getEnd()", "public java.util.Date getEnd()"], ["void", "org.apache.solr.client.solrj.response.FacetField.add(java.lang.String, long)", "public void add(java.lang.String, long)"], ["void", "org.apache.solr.client.solrj.response.FacetField.insert(java.lang.String, long)", "public void insert(java.lang.String, long)"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField.getName()", "public java.lang.String getName()"], ["java.util.List<org.apache.solr.client.solrj.response.FacetField$Count>", "org.apache.solr.client.solrj.response.FacetField.getValues()", "public java.util.List<org.apache.solr.client.solrj.response.FacetField$Count> getValues()"], ["int", "org.apache.solr.client.solrj.response.FacetField.getValueCount()", "public int getValueCount()"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.FacetField.getLimitingFields(long)", "public org.apache.solr.client.solrj.response.FacetField getLimitingFields(long)"], ["java.lang.String", "org.apache.solr.client.solrj.response.FacetField.toString()", "public java.lang.String toString()"], ["int", "org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis.getQueryPhasesCount()", "public int getQueryPhasesCount()"], ["java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>", "org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis.getQueryPhases()", "public java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase> getQueryPhases()"], ["int", "org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis.getIndexPhasesCount()", "public int getIndexPhasesCount()"], ["java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase>", "org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis.getIndexPhases()", "public java.lang.Iterable<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase> getIndexPhases()"], ["org.apache.solr.client.solrj.response.FieldAnalysisResponse", "org.apache.solr.client.solrj.response.FieldAnalysisResponse()", "public org.apache.solr.client.solrj.response.FieldAnalysisResponse()"], ["void", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["int", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getFieldTypeAnalysisCount()", "public int getFieldTypeAnalysisCount()"], ["org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getFieldTypeAnalysis(java.lang.String)", "public org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis getFieldTypeAnalysis(java.lang.String)"], ["java.lang.Iterable<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis>>", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getAllFieldTypeAnalysis()", "public java.lang.Iterable<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis>> getAllFieldTypeAnalysis()"], ["int", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getFieldNameAnalysisCount()", "public int getFieldNameAnalysisCount()"], ["org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getFieldNameAnalysis(java.lang.String)", "public org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis getFieldNameAnalysis(java.lang.String)"], ["java.lang.Iterable<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis>>", "org.apache.solr.client.solrj.response.FieldAnalysisResponse.getAllFieldNameAnalysis()", "public java.lang.Iterable<java.util.Map$Entry<java.lang.String, org.apache.solr.client.solrj.response.FieldAnalysisResponse$Analysis>> getAllFieldNameAnalysis()"], ["org.apache.solr.client.solrj.response.FieldStatsInfo", "org.apache.solr.client.solrj.response.FieldStatsInfo(org.apache.solr.common.util.NamedList<java.lang.Object>, java.lang.String)", "public org.apache.solr.client.solrj.response.FieldStatsInfo(org.apache.solr.common.util.NamedList<java.lang.Object>, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.FieldStatsInfo.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.client.solrj.response.FieldStatsInfo.getName()", "public java.lang.String getName()"], ["java.lang.Object", "org.apache.solr.client.solrj.response.FieldStatsInfo.getMin()", "public java.lang.Object getMin()"], ["java.lang.Object", "org.apache.solr.client.solrj.response.FieldStatsInfo.getMax()", "public java.lang.Object getMax()"], ["java.lang.Object", "org.apache.solr.client.solrj.response.FieldStatsInfo.getSum()", "public java.lang.Object getSum()"], ["java.lang.Long", "org.apache.solr.client.solrj.response.FieldStatsInfo.getCount()", "public java.lang.Long getCount()"], ["java.lang.Long", "org.apache.solr.client.solrj.response.FieldStatsInfo.getCountDistinct()", "public java.lang.Long getCountDistinct()"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.client.solrj.response.FieldStatsInfo.getDistinctValues()", "public java.util.Collection<java.lang.Object> getDistinctValues()"], ["java.lang.Long", "org.apache.solr.client.solrj.response.FieldStatsInfo.getMissing()", "public java.lang.Long getMissing()"], ["java.lang.Object", "org.apache.solr.client.solrj.response.FieldStatsInfo.getMean()", "public java.lang.Object getMean()"], ["java.lang.Double", "org.apache.solr.client.solrj.response.FieldStatsInfo.getStddev()", "public java.lang.Double getStddev()"], ["java.lang.Double", "org.apache.solr.client.solrj.response.FieldStatsInfo.getSumOfSquares()", "public java.lang.Double getSumOfSquares()"], ["java.util.Map<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.FieldStatsInfo>>", "org.apache.solr.client.solrj.response.FieldStatsInfo.getFacets()", "public java.util.Map<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.FieldStatsInfo>> getFacets()"], ["java.util.Map<java.lang.Double, java.lang.Double>", "org.apache.solr.client.solrj.response.FieldStatsInfo.getPercentiles()", "public java.util.Map<java.lang.Double, java.lang.Double> getPercentiles()"], ["java.lang.Long", "org.apache.solr.client.solrj.response.FieldStatsInfo.getCardinality()", "public java.lang.Long getCardinality()"], ["org.apache.solr.client.solrj.response.Group", "org.apache.solr.client.solrj.response.Group(java.lang.String, org.apache.solr.common.SolrDocumentList)", "public org.apache.solr.client.solrj.response.Group(java.lang.String, org.apache.solr.common.SolrDocumentList)"], ["java.lang.String", "org.apache.solr.client.solrj.response.Group.getGroupValue()", "public java.lang.String getGroupValue()"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.response.Group.getResult()", "public org.apache.solr.common.SolrDocumentList getResult()"], ["org.apache.solr.client.solrj.response.GroupCommand", "org.apache.solr.client.solrj.response.GroupCommand(java.lang.String, int)", "public org.apache.solr.client.solrj.response.GroupCommand(java.lang.String, int)"], ["org.apache.solr.client.solrj.response.GroupCommand", "org.apache.solr.client.solrj.response.GroupCommand(java.lang.String, int, int)", "public org.apache.solr.client.solrj.response.GroupCommand(java.lang.String, int, int)"], ["java.lang.String", "org.apache.solr.client.solrj.response.GroupCommand.getName()", "public java.lang.String getName()"], ["void", "org.apache.solr.client.solrj.response.GroupCommand.add(org.apache.solr.client.solrj.response.Group)", "public void add(org.apache.solr.client.solrj.response.Group)"], ["java.util.List<org.apache.solr.client.solrj.response.Group>", "org.apache.solr.client.solrj.response.GroupCommand.getValues()", "public java.util.List<org.apache.solr.client.solrj.response.Group> getValues()"], ["int", "org.apache.solr.client.solrj.response.GroupCommand.getMatches()", "public int getMatches()"], ["java.lang.Integer", "org.apache.solr.client.solrj.response.GroupCommand.getNGroups()", "public java.lang.Integer getNGroups()"], ["org.apache.solr.client.solrj.response.GroupResponse", "org.apache.solr.client.solrj.response.GroupResponse()", "public org.apache.solr.client.solrj.response.GroupResponse()"], ["void", "org.apache.solr.client.solrj.response.GroupResponse.add(org.apache.solr.client.solrj.response.GroupCommand)", "public void add(org.apache.solr.client.solrj.response.GroupCommand)"], ["java.util.List<org.apache.solr.client.solrj.response.GroupCommand>", "org.apache.solr.client.solrj.response.GroupResponse.getValues()", "public java.util.List<org.apache.solr.client.solrj.response.GroupCommand> getValues()"], ["java.lang.String", "org.apache.solr.client.solrj.response.IntervalFacet$Count.getKey()", "public java.lang.String getKey()"], ["int", "org.apache.solr.client.solrj.response.IntervalFacet$Count.getCount()", "public int getCount()"], ["java.lang.String", "org.apache.solr.client.solrj.response.IntervalFacet.getField()", "public java.lang.String getField()"], ["java.util.List<org.apache.solr.client.solrj.response.IntervalFacet$Count>", "org.apache.solr.client.solrj.response.IntervalFacet.getIntervals()", "public java.util.List<org.apache.solr.client.solrj.response.IntervalFacet$Count> getIntervals()"], ["org.apache.solr.client.solrj.response.LukeResponse$FieldInfo", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo(java.lang.String)", "public org.apache.solr.client.solrj.response.LukeResponse$FieldInfo(java.lang.String)"], ["void", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.read(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void read(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["java.util.EnumSet<org.apache.solr.common.luke.FieldFlag>", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.parseFlags(java.lang.String)", "public static java.util.EnumSet<org.apache.solr.common.luke.FieldFlag> parseFlags(java.lang.String)"], ["java.util.EnumSet<org.apache.solr.common.luke.FieldFlag>", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getFlags()", "public java.util.EnumSet<org.apache.solr.common.luke.FieldFlag> getFlags()"], ["boolean", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.isCacheableFaceting()", "public boolean isCacheableFaceting()"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getType()", "public java.lang.String getType()"], ["int", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getDistinct()", "public int getDistinct()"], ["int", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getDocs()", "public int getDocs()"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getSchema()", "public java.lang.String getSchema()"], ["org.apache.solr.common.util.NamedList<java.lang.Integer>", "org.apache.solr.client.solrj.response.LukeResponse$FieldInfo.getTopTerms()", "public org.apache.solr.common.util.NamedList<java.lang.Integer> getTopTerms()"], ["org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo(java.lang.String)", "public org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.getAnalyzer()", "public java.lang.String getAnalyzer()"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.getClassName()", "public java.lang.String getClassName()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.getFields()", "public java.util.List<java.lang.String> getFields()"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.getName()", "public java.lang.String getName()"], ["boolean", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.isTokenized()", "public boolean isTokenized()"], ["void", "org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo.read(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void read(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["org.apache.solr.client.solrj.response.LukeResponse", "org.apache.solr.client.solrj.response.LukeResponse()", "public org.apache.solr.client.solrj.response.LukeResponse()"], ["void", "org.apache.solr.client.solrj.response.LukeResponse.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["java.lang.String", "org.apache.solr.client.solrj.response.LukeResponse.getIndexDirectory()", "public java.lang.String getIndexDirectory()"], ["java.lang.Integer", "org.apache.solr.client.solrj.response.LukeResponse.getNumDocs()", "public java.lang.Integer getNumDocs()"], ["java.lang.Integer", "org.apache.solr.client.solrj.response.LukeResponse.getMaxDoc()", "public java.lang.Integer getMaxDoc()"], ["java.lang.Integer", "org.apache.solr.client.solrj.response.LukeResponse.getNumTerms()", "public java.lang.Integer getNumTerms()"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo>", "org.apache.solr.client.solrj.response.LukeResponse.getFieldTypeInfo()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo> getFieldTypeInfo()"], ["org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo", "org.apache.solr.client.solrj.response.LukeResponse.getFieldTypeInfo(java.lang.String)", "public org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo getFieldTypeInfo(java.lang.String)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.response.LukeResponse.getIndexInfo()", "public org.apache.solr.common.util.NamedList<java.lang.Object> getIndexInfo()"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.LukeResponse$FieldInfo>", "org.apache.solr.client.solrj.response.LukeResponse.getFieldInfo()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.LukeResponse$FieldInfo> getFieldInfo()"], ["org.apache.solr.client.solrj.response.LukeResponse$FieldInfo", "org.apache.solr.client.solrj.response.LukeResponse.getFieldInfo(java.lang.String)", "public org.apache.solr.client.solrj.response.LukeResponse$FieldInfo getFieldInfo(java.lang.String)"], ["org.apache.solr.client.solrj.response.PivotField", "org.apache.solr.client.solrj.response.PivotField(java.lang.String, java.lang.Object, int, java.util.List<org.apache.solr.client.solrj.response.PivotField>)", "public org.apache.solr.client.solrj.response.PivotField(java.lang.String, java.lang.Object, int, java.util.List<org.apache.solr.client.solrj.response.PivotField>)"], ["org.apache.solr.client.solrj.response.PivotField", "org.apache.solr.client.solrj.response.PivotField(java.lang.String, java.lang.Object, int, java.util.List<org.apache.solr.client.solrj.response.PivotField>, java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo>)", "public org.apache.solr.client.solrj.response.PivotField(java.lang.String, java.lang.Object, int, java.util.List<org.apache.solr.client.solrj.response.PivotField>, java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo>)"], ["java.lang.String", "org.apache.solr.client.solrj.response.PivotField.getField()", "public java.lang.String getField()"], ["java.lang.Object", "org.apache.solr.client.solrj.response.PivotField.getValue()", "public java.lang.Object getValue()"], ["int", "org.apache.solr.client.solrj.response.PivotField.getCount()", "public int getCount()"], ["java.util.List<org.apache.solr.client.solrj.response.PivotField>", "org.apache.solr.client.solrj.response.PivotField.getPivot()", "public java.util.List<org.apache.solr.client.solrj.response.PivotField> getPivot()"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo>", "org.apache.solr.client.solrj.response.PivotField.getFieldStatsInfo()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo> getFieldStatsInfo()"], ["java.lang.String", "org.apache.solr.client.solrj.response.PivotField.toString()", "public java.lang.String toString()"], ["void", "org.apache.solr.client.solrj.response.PivotField.write(java.io.PrintStream, int)", "public void write(java.io.PrintStream, int)"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.response.QueryResponse()", "public org.apache.solr.client.solrj.response.QueryResponse()"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.response.QueryResponse(org.apache.solr.common.util.NamedList<java.lang.Object>, org.apache.solr.client.solrj.SolrClient)", "public org.apache.solr.client.solrj.response.QueryResponse(org.apache.solr.common.util.NamedList<java.lang.Object>, org.apache.solr.client.solrj.SolrClient)"], ["org.apache.solr.client.solrj.response.QueryResponse", "org.apache.solr.client.solrj.response.QueryResponse(org.apache.solr.client.solrj.SolrClient)", "public org.apache.solr.client.solrj.response.QueryResponse(org.apache.solr.client.solrj.SolrClient)"], ["void", "org.apache.solr.client.solrj.response.QueryResponse.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["void", "org.apache.solr.client.solrj.response.QueryResponse.removeFacets()", "public void removeFacets()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.response.QueryResponse.getHeader()", "public org.apache.solr.common.util.NamedList<java.lang.Object> getHeader()"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.client.solrj.response.QueryResponse.getResults()", "public org.apache.solr.common.SolrDocumentList getResults()"], ["org.apache.solr.common.util.NamedList<java.util.ArrayList>", "org.apache.solr.client.solrj.response.QueryResponse.getSortValues()", "public org.apache.solr.common.util.NamedList<java.util.ArrayList> getSortValues()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.client.solrj.response.QueryResponse.getDebugMap()", "public java.util.Map<java.lang.String, java.lang.Object> getDebugMap()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.solr.client.solrj.response.QueryResponse.getExplainMap()", "public java.util.Map<java.lang.String, java.lang.String> getExplainMap()"], ["java.util.Map<java.lang.String, java.lang.Integer>", "org.apache.solr.client.solrj.response.QueryResponse.getFacetQuery()", "public java.util.Map<java.lang.String, java.lang.Integer> getFacetQuery()"], ["java.util.Map<java.lang.String, org.apache.solr.common.SolrDocumentList>", "org.apache.solr.client.solrj.response.QueryResponse.getExpandedResults()", "public java.util.Map<java.lang.String, org.apache.solr.common.SolrDocumentList> getExpandedResults()"], ["org.apache.solr.client.solrj.response.GroupResponse", "org.apache.solr.client.solrj.response.QueryResponse.getGroupResponse()", "public org.apache.solr.client.solrj.response.GroupResponse getGroupResponse()"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>", "org.apache.solr.client.solrj.response.QueryResponse.getHighlighting()", "public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>> getHighlighting()"], ["org.apache.solr.client.solrj.response.SpellCheckResponse", "org.apache.solr.client.solrj.response.QueryResponse.getSpellCheckResponse()", "public org.apache.solr.client.solrj.response.SpellCheckResponse getSpellCheckResponse()"], ["org.apache.solr.client.solrj.response.TermsResponse", "org.apache.solr.client.solrj.response.QueryResponse.getTermsResponse()", "public org.apache.solr.client.solrj.response.TermsResponse getTermsResponse()"], ["java.util.List<org.apache.solr.client.solrj.response.FacetField>", "org.apache.solr.client.solrj.response.QueryResponse.getFacetFields()", "public java.util.List<org.apache.solr.client.solrj.response.FacetField> getFacetFields()"], ["java.util.List<org.apache.solr.client.solrj.response.FacetField>", "org.apache.solr.client.solrj.response.QueryResponse.getFacetDates()", "public java.util.List<org.apache.solr.client.solrj.response.FacetField> getFacetDates()"], ["java.util.List<org.apache.solr.client.solrj.response.RangeFacet>", "org.apache.solr.client.solrj.response.QueryResponse.getFacetRanges()", "public java.util.List<org.apache.solr.client.solrj.response.RangeFacet> getFacetRanges()"], ["org.apache.solr.common.util.NamedList<java.util.List<org.apache.solr.client.solrj.response.PivotField>>", "org.apache.solr.client.solrj.response.QueryResponse.getFacetPivot()", "public org.apache.solr.common.util.NamedList<java.util.List<org.apache.solr.client.solrj.response.PivotField>> getFacetPivot()"], ["java.util.List<org.apache.solr.client.solrj.response.IntervalFacet>", "org.apache.solr.client.solrj.response.QueryResponse.getIntervalFacets()", "public java.util.List<org.apache.solr.client.solrj.response.IntervalFacet> getIntervalFacets()"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.QueryResponse.getFacetField(java.lang.String)", "public org.apache.solr.client.solrj.response.FacetField getFacetField(java.lang.String)"], ["org.apache.solr.client.solrj.response.FacetField", "org.apache.solr.client.solrj.response.QueryResponse.getFacetDate(java.lang.String)", "public org.apache.solr.client.solrj.response.FacetField getFacetDate(java.lang.String)"], ["java.util.List<org.apache.solr.client.solrj.response.FacetField>", "org.apache.solr.client.solrj.response.QueryResponse.getLimitingFacets()", "public java.util.List<org.apache.solr.client.solrj.response.FacetField> getLimitingFacets()"], ["<T> java.util.List<T>", "org.apache.solr.client.solrj.response.QueryResponse.getBeans(java.lang.Class<T>)", "public <T> java.util.List<T> getBeans(java.lang.Class<T>)"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo>", "org.apache.solr.client.solrj.response.QueryResponse.getFieldStatsInfo()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.FieldStatsInfo> getFieldStatsInfo()"], ["java.lang.String", "org.apache.solr.client.solrj.response.QueryResponse.getNextCursorMark()", "public java.lang.String getNextCursorMark()"], ["org.apache.solr.client.solrj.response.RangeFacet$Count", "org.apache.solr.client.solrj.response.RangeFacet$Count(java.lang.String, int, org.apache.solr.client.solrj.response.RangeFacet)", "public org.apache.solr.client.solrj.response.RangeFacet$Count(java.lang.String, int, org.apache.solr.client.solrj.response.RangeFacet)"], ["java.lang.String", "org.apache.solr.client.solrj.response.RangeFacet$Count.getValue()", "public java.lang.String getValue()"], ["int", "org.apache.solr.client.solrj.response.RangeFacet$Count.getCount()", "public int getCount()"], ["org.apache.solr.client.solrj.response.RangeFacet", "org.apache.solr.client.solrj.response.RangeFacet$Count.getRangeFacet()", "public org.apache.solr.client.solrj.response.RangeFacet getRangeFacet()"], ["org.apache.solr.client.solrj.response.RangeFacet$Date", "org.apache.solr.client.solrj.response.RangeFacet$Date(java.lang.String, java.util.Date, java.util.Date, java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number)", "public org.apache.solr.client.solrj.response.RangeFacet$Date(java.lang.String, java.util.Date, java.util.Date, java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number)"], ["org.apache.solr.client.solrj.response.RangeFacet$Numeric", "org.apache.solr.client.solrj.response.RangeFacet$Numeric(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number)", "public org.apache.solr.client.solrj.response.RangeFacet$Numeric(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number)"], ["void", "org.apache.solr.client.solrj.response.RangeFacet.addCount(java.lang.String, int)", "public void addCount(java.lang.String, int)"], ["java.lang.String", "org.apache.solr.client.solrj.response.RangeFacet.getName()", "public java.lang.String getName()"], ["java.util.List<org.apache.solr.client.solrj.response.RangeFacet$Count>", "org.apache.solr.client.solrj.response.RangeFacet.getCounts()", "public java.util.List<org.apache.solr.client.solrj.response.RangeFacet$Count> getCounts()"], ["B", "org.apache.solr.client.solrj.response.RangeFacet.getStart()", "public B getStart()"], ["B", "org.apache.solr.client.solrj.response.RangeFacet.getEnd()", "public B getEnd()"], ["G", "org.apache.solr.client.solrj.response.RangeFacet.getGap()", "public G getGap()"], ["java.lang.Number", "org.apache.solr.client.solrj.response.RangeFacet.getBefore()", "public java.lang.Number getBefore()"], ["java.lang.Number", "org.apache.solr.client.solrj.response.RangeFacet.getAfter()", "public java.lang.Number getAfter()"], ["java.lang.Number", "org.apache.solr.client.solrj.response.RangeFacet.getBetween()", "public java.lang.Number getBetween()"], ["org.apache.solr.client.solrj.response.SimpleSolrResponse", "org.apache.solr.client.solrj.response.SimpleSolrResponse()", "public org.apache.solr.client.solrj.response.SimpleSolrResponse()"], ["long", "org.apache.solr.client.solrj.response.SimpleSolrResponse.getElapsedTime()", "public long getElapsedTime()"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.response.SimpleSolrResponse.getResponse()", "public org.apache.solr.common.util.NamedList<java.lang.Object> getResponse()"], ["void", "org.apache.solr.client.solrj.response.SimpleSolrResponse.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["void", "org.apache.solr.client.solrj.response.SimpleSolrResponse.setElapsedTime(long)", "public void setElapsedTime(long)"], ["org.apache.solr.client.solrj.response.SolrPingResponse", "org.apache.solr.client.solrj.response.SolrPingResponse()", "public org.apache.solr.client.solrj.response.SolrPingResponse()"], ["org.apache.solr.client.solrj.response.SolrResponseBase", "org.apache.solr.client.solrj.response.SolrResponseBase()", "public org.apache.solr.client.solrj.response.SolrResponseBase()"], ["long", "org.apache.solr.client.solrj.response.SolrResponseBase.getElapsedTime()", "public long getElapsedTime()"], ["void", "org.apache.solr.client.solrj.response.SolrResponseBase.setElapsedTime(long)", "public void setElapsedTime(long)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.client.solrj.response.SolrResponseBase.getResponse()", "public org.apache.solr.common.util.NamedList<java.lang.Object> getResponse()"], ["void", "org.apache.solr.client.solrj.response.SolrResponseBase.setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public void setResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SolrResponseBase.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.client.solrj.response.SolrResponseBase.getResponseHeader()", "public org.apache.solr.common.util.NamedList getResponseHeader()"], ["int", "org.apache.solr.client.solrj.response.SolrResponseBase.getStatus()", "public int getStatus()"], ["int", "org.apache.solr.client.solrj.response.SolrResponseBase.getQTime()", "public int getQTime()"], ["java.lang.String", "org.apache.solr.client.solrj.response.SolrResponseBase.getRequestUrl()", "public java.lang.String getRequestUrl()"], ["void", "org.apache.solr.client.solrj.response.SolrResponseBase.setRequestUrl(java.lang.String)", "public void setRequestUrl(java.lang.String)"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Collation", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation(org.apache.solr.client.solrj.response.SpellCheckResponse)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Collation(org.apache.solr.client.solrj.response.SpellCheckResponse)"], ["long", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.getNumberOfHits()", "public long getNumberOfHits()"], ["void", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.setNumberOfHits(long)", "public void setNumberOfHits(long)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.getCollationQueryString()", "public java.lang.String getCollationQueryString()"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Collation", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.setCollationQueryString(java.lang.String)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Collation setCollationQueryString(java.lang.String)"], ["java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Correction>", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.getMisspellingsAndCorrections()", "public java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Correction> getMisspellingsAndCorrections()"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Collation", "org.apache.solr.client.solrj.response.SpellCheckResponse$Collation.addMisspellingsAndCorrection(org.apache.solr.client.solrj.response.SpellCheckResponse$Correction)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Collation addMisspellingsAndCorrection(org.apache.solr.client.solrj.response.SpellCheckResponse$Correction)"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Correction", "org.apache.solr.client.solrj.response.SpellCheckResponse$Correction(org.apache.solr.client.solrj.response.SpellCheckResponse, java.lang.String, java.lang.String)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Correction(org.apache.solr.client.solrj.response.SpellCheckResponse, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse$Correction.getOriginal()", "public java.lang.String getOriginal()"], ["void", "org.apache.solr.client.solrj.response.SpellCheckResponse$Correction.setOriginal(java.lang.String)", "public void setOriginal(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse$Correction.getCorrection()", "public java.lang.String getCorrection()"], ["void", "org.apache.solr.client.solrj.response.SpellCheckResponse$Correction.setCorrection(java.lang.String)", "public void setCorrection(java.lang.String)"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion(java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Object>)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion(java.lang.String, org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getToken()", "public java.lang.String getToken()"], ["int", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getNumFound()", "public int getNumFound()"], ["int", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getStartOffset()", "public int getStartOffset()"], ["int", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getEndOffset()", "public int getEndOffset()"], ["int", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getOriginalFrequency()", "public int getOriginalFrequency()"], ["java.util.List<java.lang.String>", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getAlternatives()", "public java.util.List<java.lang.String> getAlternatives()"], ["java.util.List<java.lang.Integer>", "org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion.getAlternativeFrequencies()", "public java.util.List<java.lang.Integer> getAlternativeFrequencies()"], ["org.apache.solr.client.solrj.response.SpellCheckResponse", "org.apache.solr.client.solrj.response.SpellCheckResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)", "public org.apache.solr.client.solrj.response.SpellCheckResponse(org.apache.solr.common.util.NamedList<java.lang.Object>)"], ["boolean", "org.apache.solr.client.solrj.response.SpellCheckResponse.isCorrectlySpelled()", "public boolean isCorrectlySpelled()"], ["java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion>", "org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions()", "public java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion> getSuggestions()"], ["java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion>", "org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestionMap()", "public java.util.Map<java.lang.String, org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion> getSuggestionMap()"], ["org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion", "org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestion(java.lang.String)", "public org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion getSuggestion(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse.getFirstSuggestion(java.lang.String)", "public java.lang.String getFirstSuggestion(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.response.SpellCheckResponse.getCollatedResult()", "public java.lang.String getCollatedResult()"], ["java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation>", "org.apache.solr.client.solrj.response.SpellCheckResponse.getCollatedResults()", "public java.util.List<org.apache.solr.client.solrj.response.SpellCheckResponse$Collation> getCollatedResults()"], ["org.apache.solr.client.solrj.response.TermsResponse$Term", "org.apache.solr.client.solrj.response.TermsResponse$Term(java.lang.String, long)", "public org.apache.solr.client.solrj.response.TermsResponse$Term(java.lang.String, long)"], ["java.lang.String", "org.apache.solr.client.solrj.response.TermsResponse$Term.getTerm()", "public java.lang.String getTerm()"], ["void", "org.apache.solr.client.solrj.response.TermsResponse$Term.setTerm(java.lang.String)", "public void setTerm(java.lang.String)"], ["long", "org.apache.solr.client.solrj.response.TermsResponse$Term.getFrequency()", "public long getFrequency()"], ["void", "org.apache.solr.client.solrj.response.TermsResponse$Term.setFrequency(long)", "public void setFrequency(long)"], ["void", "org.apache.solr.client.solrj.response.TermsResponse$Term.addFrequency(long)", "public void addFrequency(long)"], ["org.apache.solr.client.solrj.response.TermsResponse", "org.apache.solr.client.solrj.response.TermsResponse(org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Number>>)", "public org.apache.solr.client.solrj.response.TermsResponse(org.apache.solr.common.util.NamedList<org.apache.solr.common.util.NamedList<java.lang.Number>>)"], ["java.util.List<org.apache.solr.client.solrj.response.TermsResponse$Term>", "org.apache.solr.client.solrj.response.TermsResponse.getTerms(java.lang.String)", "public java.util.List<org.apache.solr.client.solrj.response.TermsResponse$Term> getTerms(java.lang.String)"], ["java.util.Map<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.TermsResponse$Term>>", "org.apache.solr.client.solrj.response.TermsResponse.getTermMap()", "public java.util.Map<java.lang.String, java.util.List<org.apache.solr.client.solrj.response.TermsResponse$Term>> getTermMap()"], ["org.apache.solr.client.solrj.response.UpdateResponse", "org.apache.solr.client.solrj.response.UpdateResponse()", "public org.apache.solr.client.solrj.response.UpdateResponse()"], ["org.apache.solr.client.solrj.util.ClientUtils", "org.apache.solr.client.solrj.util.ClientUtils()", "public org.apache.solr.client.solrj.util.ClientUtils()"], ["java.util.Collection<org.apache.solr.common.util.ContentStream>", "org.apache.solr.client.solrj.util.ClientUtils.toContentStreams(java.lang.String, java.lang.String)", "public static java.util.Collection<org.apache.solr.common.util.ContentStream> toContentStreams(java.lang.String, java.lang.String)"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.client.solrj.util.ClientUtils.toSolrInputDocument(org.apache.solr.common.SolrDocument)", "public static org.apache.solr.common.SolrInputDocument toSolrInputDocument(org.apache.solr.common.SolrDocument)"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.client.solrj.util.ClientUtils.toSolrDocument(org.apache.solr.common.SolrInputDocument)", "public static org.apache.solr.common.SolrDocument toSolrDocument(org.apache.solr.common.SolrInputDocument)"], ["void", "org.apache.solr.client.solrj.util.ClientUtils.writeXML(org.apache.solr.common.SolrInputDocument, java.io.Writer)", "public static void writeXML(org.apache.solr.common.SolrInputDocument, java.io.Writer) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.client.solrj.util.ClientUtils.toXML(org.apache.solr.common.SolrInputDocument)", "public static java.lang.String toXML(org.apache.solr.common.SolrInputDocument)"], ["java.lang.String", "org.apache.solr.client.solrj.util.ClientUtils.escapeQueryChars(java.lang.String)", "public static java.lang.String escapeQueryChars(java.lang.String)"], ["java.lang.String", "org.apache.solr.client.solrj.util.ClientUtils.toQueryString(org.apache.solr.common.params.SolrParams, boolean)", "public static java.lang.String toQueryString(org.apache.solr.common.params.SolrParams, boolean)"], ["void", "org.apache.solr.client.solrj.util.ClientUtils.addSlices(java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.lang.String, java.util.Collection<org.apache.solr.common.cloud.Slice>, boolean)", "public static void addSlices(java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.lang.String, java.util.Collection<org.apache.solr.common.cloud.Slice>, boolean)"], ["int", "org.apache.solr.common.EnumFieldValue.hashCode()", "public int hashCode()"], ["org.apache.solr.common.EnumFieldValue", "org.apache.solr.common.EnumFieldValue(java.lang.Integer, java.lang.String)", "public org.apache.solr.common.EnumFieldValue(java.lang.Integer, java.lang.String)"], ["boolean", "org.apache.solr.common.EnumFieldValue.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.apache.solr.common.EnumFieldValue.toString()", "public java.lang.String toString()"], ["java.lang.Integer", "org.apache.solr.common.EnumFieldValue.toInt()", "public java.lang.Integer toInt()"], ["int", "org.apache.solr.common.EnumFieldValue.compareTo(org.apache.solr.common.EnumFieldValue)", "public int compareTo(org.apache.solr.common.EnumFieldValue)"], ["int", "org.apache.solr.common.EnumFieldValue.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$1.get(java.lang.Object)", "public java.util.Collection<java.lang.Object> get(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrDocument$1.containsKey(java.lang.Object)", "public boolean containsKey(java.lang.Object)"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.SolrDocument$1.keySet()", "public java.util.Set<java.lang.String> keySet()"], ["int", "org.apache.solr.common.SolrDocument$1.size()", "public int size()"], ["boolean", "org.apache.solr.common.SolrDocument$1.isEmpty()", "public boolean isEmpty()"], ["void", "org.apache.solr.common.SolrDocument$1.clear()", "public void clear()"], ["boolean", "org.apache.solr.common.SolrDocument$1.containsValue(java.lang.Object)", "public boolean containsValue(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, java.util.Collection<java.lang.Object>>>", "org.apache.solr.common.SolrDocument$1.entrySet()", "public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.Collection<java.lang.Object>>> entrySet()"], ["void", "org.apache.solr.common.SolrDocument$1.putAll(java.util.Map<? extends java.lang.String, ? extends java.util.Collection<java.lang.Object>>)", "public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.Collection<java.lang.Object>>)"], ["java.util.Collection<java.util.Collection<java.lang.Object>>", "org.apache.solr.common.SolrDocument$1.values()", "public java.util.Collection<java.util.Collection<java.lang.Object>> values()"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$1.put(java.lang.String, java.util.Collection<java.lang.Object>)", "public java.util.Collection<java.lang.Object> put(java.lang.String, java.util.Collection<java.lang.Object>)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$1.remove(java.lang.Object)", "public java.util.Collection<java.lang.Object> remove(java.lang.Object)"], ["java.lang.String", "org.apache.solr.common.SolrDocument$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$1.remove(java.lang.Object)", "public java.lang.Object remove(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$1.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$1.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$2.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrDocument$2.containsKey(java.lang.Object)", "public boolean containsKey(java.lang.Object)"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.SolrDocument$2.keySet()", "public java.util.Set<java.lang.String> keySet()"], ["int", "org.apache.solr.common.SolrDocument$2.size()", "public int size()"], ["boolean", "org.apache.solr.common.SolrDocument$2.isEmpty()", "public boolean isEmpty()"], ["void", "org.apache.solr.common.SolrDocument$2.clear()", "public void clear()"], ["boolean", "org.apache.solr.common.SolrDocument$2.containsValue(java.lang.Object)", "public boolean containsValue(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>>", "org.apache.solr.common.SolrDocument$2.entrySet()", "public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet()"], ["void", "org.apache.solr.common.SolrDocument$2.putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object>)", "public void putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object>)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$2.values()", "public java.util.Collection<java.lang.Object> values()"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$2.put(java.lang.String, java.lang.Object)", "public java.util.Collection<java.lang.Object> put(java.lang.String, java.lang.Object)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument$2.remove(java.lang.Object)", "public java.util.Collection<java.lang.Object> remove(java.lang.Object)"], ["java.lang.String", "org.apache.solr.common.SolrDocument$2.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$2.remove(java.lang.Object)", "public java.lang.Object remove(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument$2.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.common.SolrDocument()", "public org.apache.solr.common.SolrDocument()"], ["java.util.Collection<java.lang.String>", "org.apache.solr.common.SolrDocument.getFieldNames()", "public java.util.Collection<java.lang.String> getFieldNames()"], ["void", "org.apache.solr.common.SolrDocument.clear()", "public void clear()"], ["boolean", "org.apache.solr.common.SolrDocument.removeFields(java.lang.String)", "public boolean removeFields(java.lang.String)"], ["void", "org.apache.solr.common.SolrDocument.setField(java.lang.String, java.lang.Object)", "public void setField(java.lang.String, java.lang.Object)"], ["void", "org.apache.solr.common.SolrDocument.addField(java.lang.String, java.lang.Object)", "public void addField(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.getFirstValue(java.lang.String)", "public java.lang.Object getFirstValue(java.lang.String)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.getFieldValue(java.lang.String)", "public java.lang.Object getFieldValue(java.lang.String)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument.getFieldValues(java.lang.String)", "public java.util.Collection<java.lang.Object> getFieldValues(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.SolrDocument.toString()", "public java.lang.String toString()"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.Object>>", "org.apache.solr.common.SolrDocument.iterator()", "public java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.Object>> iterator()"], ["java.util.Map<java.lang.String, java.util.Collection<java.lang.Object>>", "org.apache.solr.common.SolrDocument.getFieldValuesMap()", "public java.util.Map<java.lang.String, java.util.Collection<java.lang.Object>> getFieldValuesMap()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.SolrDocument.getFieldValueMap()", "public java.util.Map<java.lang.String, java.lang.Object> getFieldValueMap()"], ["boolean", "org.apache.solr.common.SolrDocument.containsKey(java.lang.Object)", "public boolean containsKey(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrDocument.containsValue(java.lang.Object)", "public boolean containsValue(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>>", "org.apache.solr.common.SolrDocument.entrySet()", "public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet()"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrDocument.isEmpty()", "public boolean isEmpty()"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.SolrDocument.keySet()", "public java.util.Set<java.lang.String> keySet()"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.put(java.lang.String, java.lang.Object)", "public java.lang.Object put(java.lang.String, java.lang.Object)"], ["void", "org.apache.solr.common.SolrDocument.putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object>)", "public void putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object>)"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.remove(java.lang.Object)", "public java.lang.Object remove(java.lang.Object)"], ["int", "org.apache.solr.common.SolrDocument.size()", "public int size()"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrDocument.values()", "public java.util.Collection<java.lang.Object> values()"], ["void", "org.apache.solr.common.SolrDocument.addChildDocument(org.apache.solr.common.SolrDocument)", "public void addChildDocument(org.apache.solr.common.SolrDocument)"], ["void", "org.apache.solr.common.SolrDocument.addChildDocuments(java.util.Collection<org.apache.solr.common.SolrDocument>)", "public void addChildDocuments(java.util.Collection<org.apache.solr.common.SolrDocument>)"], ["java.util.List<org.apache.solr.common.SolrDocument>", "org.apache.solr.common.SolrDocument.getChildDocuments()", "public java.util.List<org.apache.solr.common.SolrDocument> getChildDocuments()"], ["boolean", "org.apache.solr.common.SolrDocument.hasChildDocuments()", "public boolean hasChildDocuments()"], ["int", "org.apache.solr.common.SolrDocument.getChildDocumentCount()", "public int getChildDocumentCount()"], ["java.lang.Object", "org.apache.solr.common.SolrDocument.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.common.SolrDocumentList()", "public org.apache.solr.common.SolrDocumentList()"], ["java.lang.Float", "org.apache.solr.common.SolrDocumentList.getMaxScore()", "public java.lang.Float getMaxScore()"], ["void", "org.apache.solr.common.SolrDocumentList.setMaxScore(java.lang.Float)", "public void setMaxScore(java.lang.Float)"], ["long", "org.apache.solr.common.SolrDocumentList.getNumFound()", "public long getNumFound()"], ["void", "org.apache.solr.common.SolrDocumentList.setNumFound(long)", "public void setNumFound(long)"], ["long", "org.apache.solr.common.SolrDocumentList.getStart()", "public long getStart()"], ["void", "org.apache.solr.common.SolrDocumentList.setStart(long)", "public void setStart(long)"], ["java.lang.String", "org.apache.solr.common.SolrDocumentList.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.SolrException$ErrorCode[]", "org.apache.solr.common.SolrException$ErrorCode.values()", "public static org.apache.solr.common.SolrException$ErrorCode[] values()"], ["org.apache.solr.common.SolrException$ErrorCode", "org.apache.solr.common.SolrException$ErrorCode.valueOf(java.lang.String)", "public static org.apache.solr.common.SolrException$ErrorCode valueOf(java.lang.String)"], ["org.apache.solr.common.SolrException$ErrorCode", "org.apache.solr.common.SolrException$ErrorCode.getErrorCode(int)", "public static org.apache.solr.common.SolrException$ErrorCode getErrorCode(int)"], ["org.apache.solr.common.SolrException", "org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String)", "public org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String)"], ["org.apache.solr.common.SolrException", "org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String, java.lang.Throwable)", "public org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String, java.lang.Throwable)"], ["org.apache.solr.common.SolrException", "org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.Throwable)", "public org.apache.solr.common.SolrException(org.apache.solr.common.SolrException$ErrorCode, java.lang.Throwable)"], ["int", "org.apache.solr.common.SolrException.code()", "public int code()"], ["void", "org.apache.solr.common.SolrException.setMetadata(org.apache.solr.common.util.NamedList<java.lang.String>)", "public void setMetadata(org.apache.solr.common.util.NamedList<java.lang.String>)"], ["org.apache.solr.common.util.NamedList<java.lang.String>", "org.apache.solr.common.SolrException.getMetadata()", "public org.apache.solr.common.util.NamedList<java.lang.String> getMetadata()"], ["java.lang.String", "org.apache.solr.common.SolrException.getMetadata(java.lang.String)", "public java.lang.String getMetadata(java.lang.String)"], ["void", "org.apache.solr.common.SolrException.setMetadata(java.lang.String, java.lang.String)", "public void setMetadata(java.lang.String, java.lang.String)"], ["void", "org.apache.solr.common.SolrException.log(org.slf4j.Logger)", "public void log(org.slf4j.Logger)"], ["void", "org.apache.solr.common.SolrException.log(org.slf4j.Logger, java.lang.Throwable)", "public static void log(org.slf4j.Logger, java.lang.Throwable)"], ["void", "org.apache.solr.common.SolrException.log(org.slf4j.Logger, java.lang.String, java.lang.Throwable)", "public static void log(org.slf4j.Logger, java.lang.String, java.lang.Throwable)"], ["void", "org.apache.solr.common.SolrException.log(org.slf4j.Logger, java.lang.String)", "public static void log(org.slf4j.Logger, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.SolrException.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.common.SolrException.toStr(java.lang.Throwable)", "public static java.lang.String toStr(java.lang.Throwable)"], ["java.lang.String", "org.apache.solr.common.SolrException.doIgnore(java.lang.Throwable, java.lang.String)", "public static java.lang.String doIgnore(java.lang.Throwable, java.lang.String)"], ["java.lang.Throwable", "org.apache.solr.common.SolrException.getRootCause(java.lang.Throwable)", "public static java.lang.Throwable getRootCause(java.lang.Throwable)"], ["void", "org.apache.solr.common.SolrException.logInfoWithMdc(org.slf4j.Logger, java.lang.String)", "public void logInfoWithMdc(org.slf4j.Logger, java.lang.String)"], ["void", "org.apache.solr.common.SolrException.logDebugWithMdc(org.slf4j.Logger, java.lang.String)", "public void logDebugWithMdc(org.slf4j.Logger, java.lang.String)"], ["void", "org.apache.solr.common.SolrException.logWarnWithMdc(org.slf4j.Logger, java.lang.String)", "public void logWarnWithMdc(org.slf4j.Logger, java.lang.String)"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.common.SolrInputDocument()", "public org.apache.solr.common.SolrInputDocument()"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.common.SolrInputDocument(java.util.Map<java.lang.String, org.apache.solr.common.SolrInputField>)", "public org.apache.solr.common.SolrInputDocument(java.util.Map<java.lang.String, org.apache.solr.common.SolrInputField>)"], ["void", "org.apache.solr.common.SolrInputDocument.clear()", "public void clear()"], ["void", "org.apache.solr.common.SolrInputDocument.addField(java.lang.String, java.lang.Object)", "public void addField(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrInputDocument.getFieldValue(java.lang.String)", "public java.lang.Object getFieldValue(java.lang.String)"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrInputDocument.getFieldValues(java.lang.String)", "public java.util.Collection<java.lang.Object> getFieldValues(java.lang.String)"], ["java.util.Collection<java.lang.String>", "org.apache.solr.common.SolrInputDocument.getFieldNames()", "public java.util.Collection<java.lang.String> getFieldNames()"], ["void", "org.apache.solr.common.SolrInputDocument.setField(java.lang.String, java.lang.Object)", "public void setField(java.lang.String, java.lang.Object)"], ["void", "org.apache.solr.common.SolrInputDocument.setField(java.lang.String, java.lang.Object, float)", "public void setField(java.lang.String, java.lang.Object, float)"], ["void", "org.apache.solr.common.SolrInputDocument.addField(java.lang.String, java.lang.Object, float)", "public void addField(java.lang.String, java.lang.Object, float)"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputDocument.removeField(java.lang.String)", "public org.apache.solr.common.SolrInputField removeField(java.lang.String)"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputDocument.getField(java.lang.String)", "public org.apache.solr.common.SolrInputField getField(java.lang.String)"], ["java.util.Iterator<org.apache.solr.common.SolrInputField>", "org.apache.solr.common.SolrInputDocument.iterator()", "public java.util.Iterator<org.apache.solr.common.SolrInputField> iterator()"], ["float", "org.apache.solr.common.SolrInputDocument.getDocumentBoost()", "public float getDocumentBoost()"], ["void", "org.apache.solr.common.SolrInputDocument.setDocumentBoost(float)", "public void setDocumentBoost(float)"], ["java.lang.String", "org.apache.solr.common.SolrInputDocument.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.common.SolrInputDocument.deepCopy()", "public org.apache.solr.common.SolrInputDocument deepCopy()"], ["boolean", "org.apache.solr.common.SolrInputDocument.containsKey(java.lang.Object)", "public boolean containsKey(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrInputDocument.containsValue(java.lang.Object)", "public boolean containsValue(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, org.apache.solr.common.SolrInputField>>", "org.apache.solr.common.SolrInputDocument.entrySet()", "public java.util.Set<java.util.Map$Entry<java.lang.String, org.apache.solr.common.SolrInputField>> entrySet()"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputDocument.get(java.lang.Object)", "public org.apache.solr.common.SolrInputField get(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrInputDocument.isEmpty()", "public boolean isEmpty()"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.SolrInputDocument.keySet()", "public java.util.Set<java.lang.String> keySet()"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputDocument.put(java.lang.String, org.apache.solr.common.SolrInputField)", "public org.apache.solr.common.SolrInputField put(java.lang.String, org.apache.solr.common.SolrInputField)"], ["void", "org.apache.solr.common.SolrInputDocument.putAll(java.util.Map<? extends java.lang.String, ? extends org.apache.solr.common.SolrInputField>)", "public void putAll(java.util.Map<? extends java.lang.String, ? extends org.apache.solr.common.SolrInputField>)"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputDocument.remove(java.lang.Object)", "public org.apache.solr.common.SolrInputField remove(java.lang.Object)"], ["int", "org.apache.solr.common.SolrInputDocument.size()", "public int size()"], ["java.util.Collection<org.apache.solr.common.SolrInputField>", "org.apache.solr.common.SolrInputDocument.values()", "public java.util.Collection<org.apache.solr.common.SolrInputField> values()"], ["void", "org.apache.solr.common.SolrInputDocument.addChildDocument(org.apache.solr.common.SolrInputDocument)", "public void addChildDocument(org.apache.solr.common.SolrInputDocument)"], ["void", "org.apache.solr.common.SolrInputDocument.addChildDocuments(java.util.Collection<org.apache.solr.common.SolrInputDocument>)", "public void addChildDocuments(java.util.Collection<org.apache.solr.common.SolrInputDocument>)"], ["java.util.List<org.apache.solr.common.SolrInputDocument>", "org.apache.solr.common.SolrInputDocument.getChildDocuments()", "public java.util.List<org.apache.solr.common.SolrInputDocument> getChildDocuments()"], ["boolean", "org.apache.solr.common.SolrInputDocument.hasChildDocuments()", "public boolean hasChildDocuments()"], ["java.lang.Object", "org.apache.solr.common.SolrInputDocument.remove(java.lang.Object)", "public java.lang.Object remove(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrInputDocument.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.SolrInputDocument.get(java.lang.Object)", "public java.lang.Object get(java.lang.Object)"], ["boolean", "org.apache.solr.common.SolrInputField$1.hasNext()", "public boolean hasNext()"], ["java.lang.Object", "org.apache.solr.common.SolrInputField$1.next()", "public java.lang.Object next()"], ["void", "org.apache.solr.common.SolrInputField$1.remove()", "public void remove()"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputField(java.lang.String)", "public org.apache.solr.common.SolrInputField(java.lang.String)"], ["void", "org.apache.solr.common.SolrInputField.setValue(java.lang.Object, float)", "public void setValue(java.lang.Object, float)"], ["void", "org.apache.solr.common.SolrInputField.addValue(java.lang.Object, float)", "public void addValue(java.lang.Object, float)"], ["java.lang.Object", "org.apache.solr.common.SolrInputField.getFirstValue()", "public java.lang.Object getFirstValue()"], ["java.lang.Object", "org.apache.solr.common.SolrInputField.getValue()", "public java.lang.Object getValue()"], ["java.util.Collection<java.lang.Object>", "org.apache.solr.common.SolrInputField.getValues()", "public java.util.Collection<java.lang.Object> getValues()"], ["int", "org.apache.solr.common.SolrInputField.getValueCount()", "public int getValueCount()"], ["float", "org.apache.solr.common.SolrInputField.getBoost()", "public float getBoost()"], ["void", "org.apache.solr.common.SolrInputField.setBoost(float)", "public void setBoost(float)"], ["java.lang.String", "org.apache.solr.common.SolrInputField.getName()", "public java.lang.String getName()"], ["void", "org.apache.solr.common.SolrInputField.setName(java.lang.String)", "public void setName(java.lang.String)"], ["java.util.Iterator<java.lang.Object>", "org.apache.solr.common.SolrInputField.iterator()", "public java.util.Iterator<java.lang.Object> iterator()"], ["java.lang.String", "org.apache.solr.common.SolrInputField.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.SolrInputField", "org.apache.solr.common.SolrInputField.deepCopy()", "public org.apache.solr.common.SolrInputField deepCopy()"], ["org.apache.solr.common.StringUtils", "org.apache.solr.common.StringUtils()", "public org.apache.solr.common.StringUtils()"], ["boolean", "org.apache.solr.common.StringUtils.isEmpty(java.lang.String)", "public static boolean isEmpty(java.lang.String)"], ["org.apache.solr.common.cloud.Aliases", "org.apache.solr.common.cloud.Aliases(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>)", "public org.apache.solr.common.cloud.Aliases(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>)"], ["org.apache.solr.common.cloud.Aliases", "org.apache.solr.common.cloud.Aliases()", "public org.apache.solr.common.cloud.Aliases()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.solr.common.cloud.Aliases.getCollectionAliasMap()", "public java.util.Map<java.lang.String, java.lang.String> getCollectionAliasMap()"], ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>", "org.apache.solr.common.cloud.Aliases.getAliasMap()", "public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> getAliasMap()"], ["int", "org.apache.solr.common.cloud.Aliases.collectionAliasSize()", "public int collectionAliasSize()"], ["java.lang.String", "org.apache.solr.common.cloud.Aliases.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.common.cloud.Aliases.getCollectionAlias(java.lang.String)", "public java.lang.String getCollectionAlias(java.lang.String)"], ["org.apache.solr.common.cloud.ClusterState$CollectionRef", "org.apache.solr.common.cloud.ClusterState$CollectionRef(org.apache.solr.common.cloud.DocCollection)", "public org.apache.solr.common.cloud.ClusterState$CollectionRef(org.apache.solr.common.cloud.DocCollection)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.ClusterState$CollectionRef.get()", "public org.apache.solr.common.cloud.DocCollection get()"], ["boolean", "org.apache.solr.common.cloud.ClusterState$CollectionRef.isLazilyLoaded()", "public boolean isLazilyLoaded()"], ["java.lang.String", "org.apache.solr.common.cloud.ClusterState$CollectionRef.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ClusterState(java.lang.Integer, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, org.apache.solr.common.cloud.DocCollection>)", "public org.apache.solr.common.cloud.ClusterState(java.lang.Integer, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, org.apache.solr.common.cloud.DocCollection>)"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ClusterState(java.util.Set<java.lang.String>, java.util.Map<java.lang.String, org.apache.solr.common.cloud.ClusterState$CollectionRef>, java.lang.Integer)", "public org.apache.solr.common.cloud.ClusterState(java.util.Set<java.lang.String>, java.util.Map<java.lang.String, org.apache.solr.common.cloud.ClusterState$CollectionRef>, java.lang.Integer)"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ClusterState.copyWith(java.lang.String, org.apache.solr.common.cloud.DocCollection)", "public org.apache.solr.common.cloud.ClusterState copyWith(java.lang.String, org.apache.solr.common.cloud.DocCollection)"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.ClusterState.getLeader(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.Replica getLeader(java.lang.String, java.lang.String)"], ["boolean", "org.apache.solr.common.cloud.ClusterState.hasCollection(java.lang.String)", "public boolean hasCollection(java.lang.String)"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.ClusterState.getReplica(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.Replica getReplica(java.lang.String, java.lang.String)"], ["org.apache.solr.common.cloud.Slice", "org.apache.solr.common.cloud.ClusterState.getSlice(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.Slice getSlice(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.ClusterState.getSlicesMap(java.lang.String)", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice> getSlicesMap(java.lang.String)"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.ClusterState.getActiveSlicesMap(java.lang.String)", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice> getActiveSlicesMap(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.ClusterState.getSlices(java.lang.String)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSlices(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.ClusterState.getActiveSlices(java.lang.String)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getActiveSlices(java.lang.String)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.ClusterState.getCollection(java.lang.String)", "public org.apache.solr.common.cloud.DocCollection getCollection(java.lang.String)"], ["org.apache.solr.common.cloud.ClusterState$CollectionRef", "org.apache.solr.common.cloud.ClusterState.getCollectionRef(java.lang.String)", "public org.apache.solr.common.cloud.ClusterState$CollectionRef getCollectionRef(java.lang.String)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.ClusterState.getCollectionOrNull(java.lang.String)", "public org.apache.solr.common.cloud.DocCollection getCollectionOrNull(java.lang.String)"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.cloud.ClusterState.getCollections()", "public java.util.Set<java.lang.String> getCollections()"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.cloud.ClusterState.getLiveNodes()", "public java.util.Set<java.lang.String> getLiveNodes()"], ["java.lang.String", "org.apache.solr.common.cloud.ClusterState.getShardId(java.lang.String, java.lang.String)", "public java.lang.String getShardId(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ClusterState.getShardId(java.lang.String, java.lang.String, java.lang.String)", "public java.lang.String getShardId(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.solr.common.cloud.ClusterState.liveNodesContain(java.lang.String)", "public boolean liveNodesContain(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ClusterState.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ClusterState.load(java.lang.Integer, byte[], java.util.Set<java.lang.String>)", "public static org.apache.solr.common.cloud.ClusterState load(java.lang.Integer, byte[], java.util.Set<java.lang.String>)"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ClusterState.load(java.lang.Integer, byte[], java.util.Set<java.lang.String>, java.lang.String)", "public static org.apache.solr.common.cloud.ClusterState load(java.lang.Integer, byte[], java.util.Set<java.lang.String>, java.lang.String)"], ["org.apache.solr.common.cloud.Aliases", "org.apache.solr.common.cloud.ClusterState.load(byte[])", "public static org.apache.solr.common.cloud.Aliases load(byte[])"], ["void", "org.apache.solr.common.cloud.ClusterState.write(org.noggit.JSONWriter)", "public void write(org.noggit.JSONWriter)"], ["java.lang.Integer", "org.apache.solr.common.cloud.ClusterState.getZkClusterStateVersion()", "public java.lang.Integer getZkClusterStateVersion()"], ["int", "org.apache.solr.common.cloud.ClusterState.hashCode()", "public int hashCode()"], ["boolean", "org.apache.solr.common.cloud.ClusterState.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.common.cloud.ClusterStateUtil", "org.apache.solr.common.cloud.ClusterStateUtil()", "public org.apache.solr.common.cloud.ClusterStateUtil()"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitForAllActiveAndLiveReplicas(org.apache.solr.common.cloud.ZkStateReader, int)", "public static boolean waitForAllActiveAndLiveReplicas(org.apache.solr.common.cloud.ZkStateReader, int)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitForAllActiveAndLiveReplicas(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int)", "public static boolean waitForAllActiveAndLiveReplicas(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitToSeeLiveReplica(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, java.lang.String, java.lang.String, int)", "public static boolean waitToSeeLiveReplica(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, java.lang.String, java.lang.String, int)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitForAllReplicasNotLive(org.apache.solr.common.cloud.ZkStateReader, int)", "public static boolean waitForAllReplicasNotLive(org.apache.solr.common.cloud.ZkStateReader, int)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitForAllReplicasNotLive(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int)", "public static boolean waitForAllReplicasNotLive(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int)"], ["int", "org.apache.solr.common.cloud.ClusterStateUtil.getLiveAndActiveReplicaCount(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)", "public static int getLiveAndActiveReplicaCount(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.waitForLiveAndActiveReplicaCount(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int, int)", "public static boolean waitForLiveAndActiveReplicaCount(org.apache.solr.common.cloud.ZkStateReader, java.lang.String, int, int)"], ["boolean", "org.apache.solr.common.cloud.ClusterStateUtil.isAutoAddReplicas(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)", "public static boolean isAutoAddReplicas(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)"], ["org.apache.solr.common.cloud.CompositeIdRouter$KeyParser", "org.apache.solr.common.cloud.CompositeIdRouter$KeyParser(java.lang.String)", "public org.apache.solr.common.cloud.CompositeIdRouter$KeyParser(java.lang.String)"], ["org.apache.solr.common.cloud.CompositeIdRouter", "org.apache.solr.common.cloud.CompositeIdRouter()", "public org.apache.solr.common.cloud.CompositeIdRouter()"], ["int", "org.apache.solr.common.cloud.CompositeIdRouter.sliceHash(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public int sliceHash(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["org.apache.solr.common.cloud.DocRouter$Range", "org.apache.solr.common.cloud.CompositeIdRouter.keyHashRange(java.lang.String)", "public org.apache.solr.common.cloud.DocRouter$Range keyHashRange(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.CompositeIdRouter.getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["java.util.List<org.apache.solr.common.cloud.DocRouter$Range>", "org.apache.solr.common.cloud.CompositeIdRouter.partitionRangeByKey(java.lang.String, org.apache.solr.common.cloud.DocRouter$Range)", "public java.util.List<org.apache.solr.common.cloud.DocRouter$Range> partitionRangeByKey(java.lang.String, org.apache.solr.common.cloud.DocRouter$Range)"], ["java.util.List<org.apache.solr.common.cloud.DocRouter$Range>", "org.apache.solr.common.cloud.CompositeIdRouter.partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)", "public java.util.List<org.apache.solr.common.cloud.DocRouter$Range> partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)"], ["void", "org.apache.solr.common.cloud.ConnectionManager$1.update(org.apache.solr.common.cloud.SolrZooKeeper)", "public void update(org.apache.solr.common.cloud.SolrZooKeeper)"], ["org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType[]", "org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType.values()", "public static org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType[] values()"], ["org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType", "org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType.valueOf(java.lang.String)", "public static org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType valueOf(java.lang.String)"], ["org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState", "org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState(org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType, long)", "public org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState(org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState$StateType, long)"], ["boolean", "org.apache.solr.common.cloud.ConnectionManager$LikelyExpiredState.isLikelyExpired(long)", "public boolean isLikelyExpired(long)"], ["org.apache.solr.common.cloud.ConnectionManager", "org.apache.solr.common.cloud.ConnectionManager(java.lang.String, org.apache.solr.common.cloud.SolrZkClient, java.lang.String, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect)", "public org.apache.solr.common.cloud.ConnectionManager(java.lang.String, org.apache.solr.common.cloud.SolrZkClient, java.lang.String, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect)"], ["void", "org.apache.solr.common.cloud.ConnectionManager.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["synchronized", "org.apache.solr.common.cloud.ConnectionManager.boolean isConnected()", "public synchronized boolean isConnected()"], ["void", "org.apache.solr.common.cloud.ConnectionManager.close()", "public void close()"], ["boolean", "org.apache.solr.common.cloud.ConnectionManager.isLikelyExpired()", "public boolean isLikelyExpired()"], ["synchronized", "org.apache.solr.common.cloud.ConnectionManager.void waitForConnected(long)", "public synchronized void waitForConnected(long) throws java.util.concurrent.TimeoutException"], ["synchronized", "org.apache.solr.common.cloud.ConnectionManager.void waitForDisconnected(long)", "public synchronized void waitForDisconnected(long) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException"], ["org.apache.solr.common.cloud.DefaultConnectionStrategy", "org.apache.solr.common.cloud.DefaultConnectionStrategy()", "public org.apache.solr.common.cloud.DefaultConnectionStrategy()"], ["void", "org.apache.solr.common.cloud.DefaultConnectionStrategy.connect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate)", "public void connect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException"], ["void", "org.apache.solr.common.cloud.DefaultConnectionStrategy.reconnect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate)", "public void reconnect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException"], ["org.apache.solr.common.cloud.DefaultZkACLProvider", "org.apache.solr.common.cloud.DefaultZkACLProvider()", "public org.apache.solr.common.cloud.DefaultZkACLProvider()"], ["java.util.List<org.apache.zookeeper.data.ACL>", "org.apache.solr.common.cloud.DefaultZkACLProvider.getACLsToAdd(java.lang.String)", "public java.util.List<org.apache.zookeeper.data.ACL> getACLsToAdd(java.lang.String)"], ["org.apache.solr.common.cloud.DefaultZkCredentialsProvider", "org.apache.solr.common.cloud.DefaultZkCredentialsProvider()", "public org.apache.solr.common.cloud.DefaultZkCredentialsProvider()"], ["java.util.Collection<org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials>", "org.apache.solr.common.cloud.DefaultZkCredentialsProvider.getCredentials()", "public java.util.Collection<org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials> getCredentials()"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.DocCollection(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.util.Map<java.lang.String, java.lang.Object>, org.apache.solr.common.cloud.DocRouter)", "public org.apache.solr.common.cloud.DocCollection(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.util.Map<java.lang.String, java.lang.Object>, org.apache.solr.common.cloud.DocRouter)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.DocCollection(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.util.Map<java.lang.String, java.lang.Object>, org.apache.solr.common.cloud.DocRouter, int, java.lang.String)", "public org.apache.solr.common.cloud.DocCollection(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>, java.util.Map<java.lang.String, java.lang.Object>, org.apache.solr.common.cloud.DocRouter, int, java.lang.String)"], ["java.lang.Object", "org.apache.solr.common.cloud.DocCollection.verifyProp(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String)", "public static java.lang.Object verifyProp(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.DocCollection.copyWithSlices(java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>)", "public org.apache.solr.common.cloud.DocCollection copyWithSlices(java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>)"], ["java.lang.String", "org.apache.solr.common.cloud.DocCollection.getName()", "public java.lang.String getName()"], ["org.apache.solr.common.cloud.Slice", "org.apache.solr.common.cloud.DocCollection.getSlice(java.lang.String)", "public org.apache.solr.common.cloud.Slice getSlice(java.lang.String)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.DocCollection.getSlices()", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSlices()"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.DocCollection.getActiveSlices()", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getActiveSlices()"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.DocCollection.getSlicesMap()", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice> getSlicesMap()"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.DocCollection.getActiveSlicesMap()", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Slice> getActiveSlicesMap()"], ["int", "org.apache.solr.common.cloud.DocCollection.getZNodeVersion()", "public int getZNodeVersion()"], ["int", "org.apache.solr.common.cloud.DocCollection.getStateFormat()", "public int getStateFormat()"], ["java.lang.Integer", "org.apache.solr.common.cloud.DocCollection.getReplicationFactor()", "public java.lang.Integer getReplicationFactor()"], ["boolean", "org.apache.solr.common.cloud.DocCollection.getAutoAddReplicas()", "public boolean getAutoAddReplicas()"], ["int", "org.apache.solr.common.cloud.DocCollection.getMaxShardsPerNode()", "public int getMaxShardsPerNode()"], ["java.lang.String", "org.apache.solr.common.cloud.DocCollection.getZNode()", "public java.lang.String getZNode()"], ["org.apache.solr.common.cloud.DocRouter", "org.apache.solr.common.cloud.DocCollection.getRouter()", "public org.apache.solr.common.cloud.DocRouter getRouter()"], ["java.lang.String", "org.apache.solr.common.cloud.DocCollection.toString()", "public java.lang.String toString()"], ["void", "org.apache.solr.common.cloud.DocCollection.write(org.noggit.JSONWriter)", "public void write(org.noggit.JSONWriter)"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.DocCollection.getReplica(java.lang.String)", "public org.apache.solr.common.cloud.Replica getReplica(java.lang.String)"], ["org.apache.solr.common.cloud.DocRouter$Range", "org.apache.solr.common.cloud.DocRouter$Range(int, int)", "public org.apache.solr.common.cloud.DocRouter$Range(int, int)"], ["boolean", "org.apache.solr.common.cloud.DocRouter$Range.includes(int)", "public boolean includes(int)"], ["boolean", "org.apache.solr.common.cloud.DocRouter$Range.isSubsetOf(org.apache.solr.common.cloud.DocRouter$Range)", "public boolean isSubsetOf(org.apache.solr.common.cloud.DocRouter$Range)"], ["boolean", "org.apache.solr.common.cloud.DocRouter$Range.overlaps(org.apache.solr.common.cloud.DocRouter$Range)", "public boolean overlaps(org.apache.solr.common.cloud.DocRouter$Range)"], ["java.lang.String", "org.apache.solr.common.cloud.DocRouter$Range.toString()", "public java.lang.String toString()"], ["int", "org.apache.solr.common.cloud.DocRouter$Range.hashCode()", "public int hashCode()"], ["boolean", "org.apache.solr.common.cloud.DocRouter$Range.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["void", "org.apache.solr.common.cloud.DocRouter$Range.write(org.noggit.JSONWriter)", "public void write(org.noggit.JSONWriter)"], ["int", "org.apache.solr.common.cloud.DocRouter$Range.compareTo(org.apache.solr.common.cloud.DocRouter$Range)", "public int compareTo(org.apache.solr.common.cloud.DocRouter$Range)"], ["int", "org.apache.solr.common.cloud.DocRouter$Range.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["org.apache.solr.common.cloud.DocRouter", "org.apache.solr.common.cloud.DocRouter()", "public org.apache.solr.common.cloud.DocRouter()"], ["org.apache.solr.common.cloud.DocRouter", "org.apache.solr.common.cloud.DocRouter.getDocRouter(java.lang.String)", "public static org.apache.solr.common.cloud.DocRouter getDocRouter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.cloud.DocRouter.getRouterSpec(org.apache.solr.common.cloud.ZkNodeProps)", "public static java.util.Map<java.lang.String, java.lang.Object> getRouterSpec(org.apache.solr.common.cloud.ZkNodeProps)"], ["org.apache.solr.common.cloud.DocRouter$Range", "org.apache.solr.common.cloud.DocRouter.fromString(java.lang.String)", "public org.apache.solr.common.cloud.DocRouter$Range fromString(java.lang.String)"], ["org.apache.solr.common.cloud.DocRouter$Range", "org.apache.solr.common.cloud.DocRouter.fullRange()", "public org.apache.solr.common.cloud.DocRouter$Range fullRange()"], ["java.util.List<org.apache.solr.common.cloud.DocRouter$Range>", "org.apache.solr.common.cloud.DocRouter.partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)", "public java.util.List<org.apache.solr.common.cloud.DocRouter$Range> partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.DocRouter.getSearchSlices(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSearchSlices(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["org.apache.solr.common.cloud.HashBasedRouter", "org.apache.solr.common.cloud.HashBasedRouter()", "public org.apache.solr.common.cloud.HashBasedRouter()"], ["org.apache.solr.common.cloud.Slice", "org.apache.solr.common.cloud.HashBasedRouter.getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public org.apache.solr.common.cloud.Slice getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["boolean", "org.apache.solr.common.cloud.HashBasedRouter.isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)", "public boolean isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)"], ["int", "org.apache.solr.common.cloud.HashBasedRouter.sliceHash(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public int sliceHash(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.HashBasedRouter.getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["org.apache.solr.common.cloud.ImplicitDocRouter", "org.apache.solr.common.cloud.ImplicitDocRouter()", "public org.apache.solr.common.cloud.ImplicitDocRouter()"], ["org.apache.solr.common.cloud.Slice", "org.apache.solr.common.cloud.ImplicitDocRouter.getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public org.apache.solr.common.cloud.Slice getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["boolean", "org.apache.solr.common.cloud.ImplicitDocRouter.isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)", "public boolean isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)"], ["java.util.Collection<org.apache.solr.common.cloud.Slice>", "org.apache.solr.common.cloud.ImplicitDocRouter.getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)", "public java.util.Collection<org.apache.solr.common.cloud.Slice> getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)"], ["java.util.List<org.apache.solr.common.cloud.DocRouter$Range>", "org.apache.solr.common.cloud.ImplicitDocRouter.partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)", "public java.util.List<org.apache.solr.common.cloud.DocRouter$Range> partitionRange(int, org.apache.solr.common.cloud.DocRouter$Range)"], ["org.apache.solr.common.cloud.PlainIdRouter", "org.apache.solr.common.cloud.PlainIdRouter()", "public org.apache.solr.common.cloud.PlainIdRouter()"], ["org.apache.solr.common.cloud.Replica$State[]", "org.apache.solr.common.cloud.Replica$State.values()", "public static org.apache.solr.common.cloud.Replica$State[] values()"], ["org.apache.solr.common.cloud.Replica$State", "org.apache.solr.common.cloud.Replica$State.valueOf(java.lang.String)", "public static org.apache.solr.common.cloud.Replica$State valueOf(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.Replica$State.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.Replica$State", "org.apache.solr.common.cloud.Replica$State.getState(java.lang.String)", "public static org.apache.solr.common.cloud.Replica$State getState(java.lang.String)"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.Replica(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)", "public org.apache.solr.common.cloud.Replica(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)"], ["java.lang.String", "org.apache.solr.common.cloud.Replica.getName()", "public java.lang.String getName()"], ["java.lang.String", "org.apache.solr.common.cloud.Replica.getCoreUrl()", "public java.lang.String getCoreUrl()"], ["java.lang.String", "org.apache.solr.common.cloud.Replica.getNodeName()", "public java.lang.String getNodeName()"], ["org.apache.solr.common.cloud.Replica$State", "org.apache.solr.common.cloud.Replica.getState()", "public org.apache.solr.common.cloud.Replica$State getState()"], ["java.lang.String", "org.apache.solr.common.cloud.Replica.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.RoutingRule", "org.apache.solr.common.cloud.RoutingRule(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)", "public org.apache.solr.common.cloud.RoutingRule(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)"], ["java.util.List<org.apache.solr.common.cloud.DocRouter$Range>", "org.apache.solr.common.cloud.RoutingRule.getRouteRanges()", "public java.util.List<org.apache.solr.common.cloud.DocRouter$Range> getRouteRanges()"], ["java.lang.String", "org.apache.solr.common.cloud.RoutingRule.getTargetCollectionName()", "public java.lang.String getTargetCollectionName()"], ["java.lang.Long", "org.apache.solr.common.cloud.RoutingRule.getExpireAt()", "public java.lang.Long getExpireAt()"], ["java.lang.String", "org.apache.solr.common.cloud.RoutingRule.getRouteRangesStr()", "public java.lang.String getRouteRangesStr()"], ["java.lang.String", "org.apache.solr.common.cloud.RoutingRule.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.SaslZkACLProvider", "org.apache.solr.common.cloud.SaslZkACLProvider()", "public org.apache.solr.common.cloud.SaslZkACLProvider()"], ["org.apache.solr.common.cloud.Slice$State[]", "org.apache.solr.common.cloud.Slice$State.values()", "public static org.apache.solr.common.cloud.Slice$State[] values()"], ["org.apache.solr.common.cloud.Slice$State", "org.apache.solr.common.cloud.Slice$State.valueOf(java.lang.String)", "public static org.apache.solr.common.cloud.Slice$State valueOf(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.Slice$State.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.Slice$State", "org.apache.solr.common.cloud.Slice$State.getState(java.lang.String)", "public static org.apache.solr.common.cloud.Slice$State getState(java.lang.String)"], ["org.apache.solr.common.cloud.Slice", "org.apache.solr.common.cloud.Slice(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica>, java.util.Map<java.lang.String, java.lang.Object>)", "public org.apache.solr.common.cloud.Slice(java.lang.String, java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica>, java.util.Map<java.lang.String, java.lang.Object>)"], ["java.lang.String", "org.apache.solr.common.cloud.Slice.getName()", "public java.lang.String getName()"], ["java.util.Collection<org.apache.solr.common.cloud.Replica>", "org.apache.solr.common.cloud.Slice.getReplicas()", "public java.util.Collection<org.apache.solr.common.cloud.Replica> getReplicas()"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica>", "org.apache.solr.common.cloud.Slice.getReplicasMap()", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica> getReplicasMap()"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica>", "org.apache.solr.common.cloud.Slice.getReplicasCopy()", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.Replica> getReplicasCopy()"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.Slice.getLeader()", "public org.apache.solr.common.cloud.Replica getLeader()"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.Slice.getReplica(java.lang.String)", "public org.apache.solr.common.cloud.Replica getReplica(java.lang.String)"], ["org.apache.solr.common.cloud.DocRouter$Range", "org.apache.solr.common.cloud.Slice.getRange()", "public org.apache.solr.common.cloud.DocRouter$Range getRange()"], ["org.apache.solr.common.cloud.Slice$State", "org.apache.solr.common.cloud.Slice.getState()", "public org.apache.solr.common.cloud.Slice$State getState()"], ["java.lang.String", "org.apache.solr.common.cloud.Slice.getParent()", "public java.lang.String getParent()"], ["java.util.Map<java.lang.String, org.apache.solr.common.cloud.RoutingRule>", "org.apache.solr.common.cloud.Slice.getRoutingRules()", "public java.util.Map<java.lang.String, org.apache.solr.common.cloud.RoutingRule> getRoutingRules()"], ["java.lang.String", "org.apache.solr.common.cloud.Slice.toString()", "public java.lang.String toString()"], ["void", "org.apache.solr.common.cloud.Slice.write(org.noggit.JSONWriter)", "public void write(org.noggit.JSONWriter)"], ["void", "org.apache.solr.common.cloud.SolrZkClient$1.update(org.apache.solr.common.cloud.SolrZooKeeper)", "public void update(org.apache.solr.common.cloud.SolrZooKeeper)"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$10.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.util.List<org.apache.zookeeper.OpResult>", "org.apache.solr.common.cloud.SolrZkClient$11.execute()", "public java.util.List<org.apache.zookeeper.OpResult> execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$11.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient$2.execute()", "public org.apache.zookeeper.data.Stat execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$2.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient$3$1.run()", "public void run()"], ["void", "org.apache.solr.common.cloud.SolrZkClient$3.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient$4.execute()", "public org.apache.zookeeper.data.Stat execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$4.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Boolean", "org.apache.solr.common.cloud.SolrZkClient$5.execute()", "public java.lang.Boolean execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$5.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.util.List<java.lang.String>", "org.apache.solr.common.cloud.SolrZkClient$6.execute()", "public java.util.List<java.lang.String> execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$6.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["byte[]", "org.apache.solr.common.cloud.SolrZkClient$7.execute()", "public byte[] execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$7.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient$8.execute()", "public org.apache.zookeeper.data.Stat execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$8.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.solr.common.cloud.SolrZkClient$9.execute()", "public java.lang.String execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Object", "org.apache.solr.common.cloud.SolrZkClient$9.execute()", "public java.lang.Object execute() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["int", "org.apache.solr.common.cloud.SolrZkClient.getZkClientTimeout()", "public int getZkClientTimeout()"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient()", "public org.apache.solr.common.cloud.SolrZkClient()"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.OnReconnect)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.OnReconnect)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect, org.apache.solr.common.cloud.ZkACLProvider)", "public org.apache.solr.common.cloud.SolrZkClient(java.lang.String, int, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, org.apache.solr.common.cloud.BeforeReconnect, org.apache.solr.common.cloud.ZkACLProvider)"], ["org.apache.solr.common.cloud.ConnectionManager", "org.apache.solr.common.cloud.SolrZkClient.getConnectionManager()", "public org.apache.solr.common.cloud.ConnectionManager getConnectionManager()"], ["org.apache.solr.common.cloud.ZkClientConnectionStrategy", "org.apache.solr.common.cloud.SolrZkClient.getZkClientConnectionStrategy()", "public org.apache.solr.common.cloud.ZkClientConnectionStrategy getZkClientConnectionStrategy()"], ["boolean", "org.apache.solr.common.cloud.SolrZkClient.isConnected()", "public boolean isConnected()"], ["void", "org.apache.solr.common.cloud.SolrZkClient.delete(java.lang.String, int, boolean)", "public void delete(java.lang.String, int, boolean) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient.exists(java.lang.String, org.apache.zookeeper.Watcher, boolean)", "public org.apache.zookeeper.data.Stat exists(java.lang.String, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.Boolean", "org.apache.solr.common.cloud.SolrZkClient.exists(java.lang.String, boolean)", "public java.lang.Boolean exists(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.util.List<java.lang.String>", "org.apache.solr.common.cloud.SolrZkClient.getChildren(java.lang.String, org.apache.zookeeper.Watcher, boolean)", "public java.util.List<java.lang.String> getChildren(java.lang.String, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["byte[]", "org.apache.solr.common.cloud.SolrZkClient.getData(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.data.Stat, boolean)", "public byte[] getData(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.data.Stat, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient.setData(java.lang.String, byte[], int, boolean)", "public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], int, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.solr.common.cloud.SolrZkClient.create(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean)", "public java.lang.String create(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, boolean)", "public void makePath(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, boolean, boolean)", "public void makePath(java.lang.String, boolean, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, java.io.File, boolean, boolean)", "public void makePath(java.lang.String, java.io.File, boolean, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, java.io.File, boolean)", "public void makePath(java.lang.String, java.io.File, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, org.apache.zookeeper.CreateMode, boolean)", "public void makePath(java.lang.String, org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, byte[], boolean)", "public void makePath(java.lang.String, byte[], boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean)", "public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean)", "public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean, boolean)", "public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.makePath(java.lang.String, org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean)", "public void makePath(java.lang.String, org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient.setData(java.lang.String, byte[], boolean)", "public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.zookeeper.data.Stat", "org.apache.solr.common.cloud.SolrZkClient.setData(java.lang.String, java.io.File, boolean)", "public org.apache.zookeeper.data.Stat setData(java.lang.String, java.io.File, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.util.List<org.apache.zookeeper.OpResult>", "org.apache.solr.common.cloud.SolrZkClient.multi(java.lang.Iterable<org.apache.zookeeper.Op>, boolean)", "public java.util.List<org.apache.zookeeper.OpResult> multi(java.lang.Iterable<org.apache.zookeeper.Op>, boolean) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.printLayout(java.lang.String, int, java.lang.StringBuilder)", "public void printLayout(java.lang.String, int, java.lang.StringBuilder) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.SolrZkClient.printLayoutToStdOut()", "public void printLayoutToStdOut() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.lang.String", "org.apache.solr.common.cloud.SolrZkClient.prettyPrint(java.lang.String, int)", "public static java.lang.String prettyPrint(java.lang.String, int)"], ["void", "org.apache.solr.common.cloud.SolrZkClient.close()", "public void close()"], ["boolean", "org.apache.solr.common.cloud.SolrZkClient.isClosed()", "public boolean isClosed()"], ["org.apache.solr.common.cloud.SolrZooKeeper", "org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper()", "public org.apache.solr.common.cloud.SolrZooKeeper getSolrZooKeeper()"], ["void", "org.apache.solr.common.cloud.SolrZkClient.clean(java.lang.String)", "public void clean(java.lang.String) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException"], ["boolean", "org.apache.solr.common.cloud.SolrZkClient.containsChroot(java.lang.String)", "public static boolean containsChroot(java.lang.String)"], ["java.lang.Throwable", "org.apache.solr.common.cloud.SolrZkClient.checkInterrupted(java.lang.Throwable)", "public static java.lang.Throwable checkInterrupted(java.lang.Throwable)"], ["java.lang.String", "org.apache.solr.common.cloud.SolrZkClient.getZkServerAddress()", "public java.lang.String getZkServerAddress()"], ["org.apache.solr.common.cloud.ZkACLProvider", "org.apache.solr.common.cloud.SolrZkClient.getZkACLProvider()", "public org.apache.solr.common.cloud.ZkACLProvider getZkACLProvider()"], ["void", "org.apache.solr.common.cloud.SolrZooKeeper$1.run()", "public void run()"], ["org.apache.solr.common.cloud.SolrZooKeeper", "org.apache.solr.common.cloud.SolrZooKeeper(java.lang.String, int, org.apache.zookeeper.Watcher)", "public org.apache.solr.common.cloud.SolrZooKeeper(java.lang.String, int, org.apache.zookeeper.Watcher) throws java.io.IOException"], ["org.apache.zookeeper.ClientCnxn", "org.apache.solr.common.cloud.SolrZooKeeper.getConnection()", "public org.apache.zookeeper.ClientCnxn getConnection()"], ["java.net.SocketAddress", "org.apache.solr.common.cloud.SolrZooKeeper.getSocketAddress()", "public java.net.SocketAddress getSocketAddress()"], ["void", "org.apache.solr.common.cloud.SolrZooKeeper.closeCnxn()", "public void closeCnxn()"], ["synchronized", "org.apache.solr.common.cloud.SolrZooKeeper.void close()", "public synchronized void close() throws java.lang.InterruptedException"], ["org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider", "org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider()", "public org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider()"], ["org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider", "org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.VMParamsAllAndReadonlyDigestZkACLProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider", "org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider()", "public org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider()"], ["org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider", "org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.VMParamsSingleSetCredentialsDigestZkCredentialsProvider(java.lang.String, java.lang.String)"], ["org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate", "org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate()", "public org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate()"], ["org.apache.solr.common.cloud.ZkClientConnectionStrategy", "org.apache.solr.common.cloud.ZkClientConnectionStrategy()", "public org.apache.solr.common.cloud.ZkClientConnectionStrategy()"], ["synchronized", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.void disconnected()", "public synchronized void disconnected()"], ["synchronized", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.void connected()", "public synchronized void connected()"], ["synchronized", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.void addDisconnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener)", "public synchronized void addDisconnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$DisconnectedListener)"], ["synchronized", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.void addConnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener)", "public synchronized void addConnectedListener(org.apache.solr.common.cloud.ZkClientConnectionStrategy$ConnectedListener)"], ["void", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.setZkCredentialsToAddAutomatically(org.apache.solr.common.cloud.ZkCredentialsProvider)", "public void setZkCredentialsToAddAutomatically(org.apache.solr.common.cloud.ZkCredentialsProvider)"], ["boolean", "org.apache.solr.common.cloud.ZkClientConnectionStrategy.hasZkCredentialsToAddAutomatically()", "public boolean hasZkCredentialsToAddAutomatically()"], ["org.apache.solr.common.cloud.ZkCmdExecutor", "org.apache.solr.common.cloud.ZkCmdExecutor(int)", "public org.apache.solr.common.cloud.ZkCmdExecutor(int)"], ["long", "org.apache.solr.common.cloud.ZkCmdExecutor.getRetryDelay()", "public long getRetryDelay()"], ["void", "org.apache.solr.common.cloud.ZkCmdExecutor.setRetryDelay(long)", "public void setRetryDelay(long)"], ["<T> T", "org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(org.apache.solr.common.cloud.ZkOperation)", "public <T> T retryOperation(org.apache.solr.common.cloud.ZkOperation) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(java.lang.String, org.apache.solr.common.cloud.SolrZkClient)", "public void ensureExists(java.lang.String, org.apache.solr.common.cloud.SolrZkClient) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.solr.common.cloud.SolrZkClient)", "public void ensureExists(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.solr.common.cloud.SolrZkClient) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.nio.file.FileVisitResult", "org.apache.solr.common.cloud.ZkConfigManager$1.visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "org.apache.solr.common.cloud.ZkConfigManager$1.preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "org.apache.solr.common.cloud.ZkConfigManager$1.visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["java.nio.file.FileVisitResult", "org.apache.solr.common.cloud.ZkConfigManager$1.preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes)", "public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException"], ["org.apache.solr.common.cloud.ZkConfigManager", "org.apache.solr.common.cloud.ZkConfigManager(org.apache.solr.common.cloud.SolrZkClient)", "public org.apache.solr.common.cloud.ZkConfigManager(org.apache.solr.common.cloud.SolrZkClient)"], ["void", "org.apache.solr.common.cloud.ZkConfigManager.uploadConfigDir(java.nio.file.Path, java.lang.String)", "public void uploadConfigDir(java.nio.file.Path, java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(java.lang.String, java.nio.file.Path)", "public void downloadConfigDir(java.lang.String, java.nio.file.Path) throws java.io.IOException"], ["java.util.List<java.lang.String>", "org.apache.solr.common.cloud.ZkConfigManager.listConfigs()", "public java.util.List<java.lang.String> listConfigs() throws java.io.IOException"], ["org.apache.solr.common.cloud.ZkCoreNodeProps", "org.apache.solr.common.cloud.ZkCoreNodeProps(org.apache.solr.common.cloud.ZkNodeProps)", "public org.apache.solr.common.cloud.ZkCoreNodeProps(org.apache.solr.common.cloud.ZkNodeProps)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl()", "public java.lang.String getCoreUrl()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName()", "public java.lang.String getNodeName()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getState()", "public java.lang.String getState()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl()", "public java.lang.String getBaseUrl()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName()", "public java.lang.String getCoreName()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl(org.apache.solr.common.cloud.ZkNodeProps)", "public static java.lang.String getCoreUrl(org.apache.solr.common.cloud.ZkNodeProps)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl(java.lang.String, java.lang.String)", "public static java.lang.String getCoreUrl(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCoreNodeProps.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.cloud.ZkNodeProps", "org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps()", "public org.apache.solr.common.cloud.ZkNodeProps getNodeProps()"], ["boolean", "org.apache.solr.common.cloud.ZkCoreNodeProps.isLeader()", "public boolean isLeader()"], ["org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials", "org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials(java.lang.String, byte[])", "public org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials(java.lang.String, byte[])"], ["java.lang.String", "org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials.getScheme()", "public java.lang.String getScheme()"], ["byte[]", "org.apache.solr.common.cloud.ZkCredentialsProvider$ZkCredentials.getAuth()", "public byte[] getAuth()"], ["org.apache.solr.common.cloud.ZkNodeProps", "org.apache.solr.common.cloud.ZkNodeProps(java.util.Map<java.lang.String, java.lang.Object>)", "public org.apache.solr.common.cloud.ZkNodeProps(java.util.Map<java.lang.String, java.lang.Object>)"], ["org.apache.solr.common.cloud.ZkNodeProps", "org.apache.solr.common.cloud.ZkNodeProps(java.lang.String...)", "public org.apache.solr.common.cloud.ZkNodeProps(java.lang.String...)"], ["org.apache.solr.common.cloud.ZkNodeProps", "org.apache.solr.common.cloud.ZkNodeProps.fromKeyVals(java.lang.Object...)", "public static org.apache.solr.common.cloud.ZkNodeProps fromKeyVals(java.lang.Object...)"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.cloud.ZkNodeProps.makeMap(java.lang.Object...)", "public static java.util.Map<java.lang.String, java.lang.Object> makeMap(java.lang.Object...)"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.cloud.ZkNodeProps.keySet()", "public java.util.Set<java.lang.String> keySet()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.cloud.ZkNodeProps.getProperties()", "public java.util.Map<java.lang.String, java.lang.Object> getProperties()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.cloud.ZkNodeProps.shallowCopy()", "public java.util.Map<java.lang.String, java.lang.Object> shallowCopy()"], ["org.apache.solr.common.cloud.ZkNodeProps", "org.apache.solr.common.cloud.ZkNodeProps.load(byte[])", "public static org.apache.solr.common.cloud.ZkNodeProps load(byte[])"], ["void", "org.apache.solr.common.cloud.ZkNodeProps.write(org.noggit.JSONWriter)", "public void write(org.noggit.JSONWriter)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkNodeProps.getStr(java.lang.String)", "public java.lang.String getStr(java.lang.String)"], ["java.lang.Integer", "org.apache.solr.common.cloud.ZkNodeProps.getInt(java.lang.String, java.lang.Integer)", "public java.lang.Integer getInt(java.lang.String, java.lang.Integer)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkNodeProps.getStr(java.lang.String, java.lang.String)", "public java.lang.String getStr(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.solr.common.cloud.ZkNodeProps.get(java.lang.String)", "public java.lang.Object get(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkNodeProps.toString()", "public java.lang.String toString()"], ["boolean", "org.apache.solr.common.cloud.ZkNodeProps.containsKey(java.lang.String)", "public boolean containsKey(java.lang.String)"], ["boolean", "org.apache.solr.common.cloud.ZkNodeProps.getBool(java.lang.String, boolean)", "public boolean getBool(java.lang.String, boolean)"], ["org.apache.solr.common.cloud.ZkOperation", "org.apache.solr.common.cloud.ZkOperation()", "public org.apache.solr.common.cloud.ZkOperation()"], ["void", "org.apache.solr.common.cloud.ZkStateReader$1.command()", "public void command()"], ["void", "org.apache.solr.common.cloud.ZkStateReader$2.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["void", "org.apache.solr.common.cloud.ZkStateReader$3.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["void", "org.apache.solr.common.cloud.ZkStateReader$4.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.ZkStateReader$5.get()", "public org.apache.solr.common.cloud.DocCollection get()"], ["boolean", "org.apache.solr.common.cloud.ZkStateReader$5.isLazilyLoaded()", "public boolean isLazilyLoaded()"], ["void", "org.apache.solr.common.cloud.ZkStateReader$6.run()", "public void run()"], ["void", "org.apache.solr.common.cloud.ZkStateReader$7.process(org.apache.zookeeper.WatchedEvent)", "public void process(org.apache.zookeeper.WatchedEvent)"], ["org.apache.solr.common.cloud.ZkStateReader$RunnableWatcher", "org.apache.solr.common.cloud.ZkStateReader$RunnableWatcher(org.apache.solr.common.cloud.ZkStateReader, org.apache.zookeeper.Watcher)", "public org.apache.solr.common.cloud.ZkStateReader$RunnableWatcher(org.apache.solr.common.cloud.ZkStateReader, org.apache.zookeeper.Watcher)"], ["java.lang.Thread", "org.apache.solr.common.cloud.ZkStateReader$ZKTF.newThread(java.lang.Runnable)", "public java.lang.Thread newThread(java.lang.Runnable)"], ["byte[]", "org.apache.solr.common.cloud.ZkStateReader.toJSON(java.lang.Object)", "public static byte[] toJSON(java.lang.Object)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.toJSONString(java.lang.Object)", "public static java.lang.String toJSONString(java.lang.Object)"], ["byte[]", "org.apache.solr.common.cloud.ZkStateReader.toUTF8(org.noggit.CharArr)", "public static byte[] toUTF8(org.noggit.CharArr)"], ["java.lang.Object", "org.apache.solr.common.cloud.ZkStateReader.fromJSON(byte[])", "public static java.lang.Object fromJSON(byte[])"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.readConfigName(java.lang.String)", "public java.lang.String readConfigName(java.lang.String)"], ["org.apache.solr.common.cloud.ZkStateReader", "org.apache.solr.common.cloud.ZkStateReader(org.apache.solr.common.cloud.SolrZkClient)", "public org.apache.solr.common.cloud.ZkStateReader(org.apache.solr.common.cloud.SolrZkClient)"], ["org.apache.solr.common.cloud.ZkStateReader", "org.apache.solr.common.cloud.ZkStateReader(java.lang.String, int, int)", "public org.apache.solr.common.cloud.ZkStateReader(java.lang.String, int, int)"], ["org.apache.solr.common.cloud.ZkConfigManager", "org.apache.solr.common.cloud.ZkStateReader.getConfigManager()", "public org.apache.solr.common.cloud.ZkConfigManager getConfigManager()"], ["void", "org.apache.solr.common.cloud.ZkStateReader.updateClusterState(boolean)", "public void updateClusterState(boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes()", "public void updateLiveNodes() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.solr.common.cloud.Aliases", "org.apache.solr.common.cloud.ZkStateReader.getAliases()", "public org.apache.solr.common.cloud.Aliases getAliases()"], ["java.lang.Integer", "org.apache.solr.common.cloud.ZkStateReader.compareStateVersions(java.lang.String, int)", "public java.lang.Integer compareStateVersions(java.lang.String, int)"], ["synchronized", "org.apache.solr.common.cloud.ZkStateReader.void createClusterStateWatchersAndUpdate()", "public synchronized void createClusterStateWatchersAndUpdate() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["org.apache.solr.common.cloud.ClusterState", "org.apache.solr.common.cloud.ZkStateReader.getClusterState()", "public org.apache.solr.common.cloud.ClusterState getClusterState()"], ["java.lang.Object", "org.apache.solr.common.cloud.ZkStateReader.getUpdateLock()", "public java.lang.Object getUpdateLock()"], ["void", "org.apache.solr.common.cloud.ZkStateReader.close()", "public void close()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(java.lang.String, java.lang.String, int)", "public java.lang.String getLeaderUrl(java.lang.String, java.lang.String, int) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.ZkStateReader.getLeader(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.Replica getLeader(java.lang.String, java.lang.String) throws java.lang.InterruptedException"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(java.lang.String, java.lang.String)", "public org.apache.solr.common.cloud.Replica getLeaderRetry(java.lang.String, java.lang.String) throws java.lang.InterruptedException"], ["org.apache.solr.common.cloud.Replica", "org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(java.lang.String, java.lang.String, int)", "public org.apache.solr.common.cloud.Replica getLeaderRetry(java.lang.String, java.lang.String, int) throws java.lang.InterruptedException"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.getShardLeadersPath(java.lang.String, java.lang.String)", "public static java.lang.String getShardLeadersPath(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.getShardLeadersElectPath(java.lang.String, java.lang.String)", "public static java.lang.String getShardLeadersElectPath(java.lang.String, java.lang.String)"], ["java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps>", "org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(java.lang.String, java.lang.String, java.lang.String)", "public java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps> getReplicaProps(java.lang.String, java.lang.String, java.lang.String)"], ["java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps>", "org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(java.lang.String, java.lang.String, java.lang.String, org.apache.solr.common.cloud.Replica$State)", "public java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps> getReplicaProps(java.lang.String, java.lang.String, java.lang.String, org.apache.solr.common.cloud.Replica$State)"], ["java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps>", "org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(java.lang.String, java.lang.String, java.lang.String, org.apache.solr.common.cloud.Replica$State, org.apache.solr.common.cloud.Replica$State)", "public java.util.List<org.apache.solr.common.cloud.ZkCoreNodeProps> getReplicaProps(java.lang.String, java.lang.String, java.lang.String, org.apache.solr.common.cloud.Replica$State, org.apache.solr.common.cloud.Replica$State)"], ["org.apache.solr.common.cloud.SolrZkClient", "org.apache.solr.common.cloud.ZkStateReader.getZkClient()", "public org.apache.solr.common.cloud.SolrZkClient getZkClient()"], ["void", "org.apache.solr.common.cloud.ZkStateReader.updateAliases()", "public void updateAliases() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["java.util.Map", "org.apache.solr.common.cloud.ZkStateReader.getClusterProps()", "public java.util.Map getClusterProps()"], ["void", "org.apache.solr.common.cloud.ZkStateReader.setClusterProperty(java.lang.String, java.lang.String)", "public void setClusterProperty(java.lang.String, java.lang.String)"], ["java.util.Map", "org.apache.solr.common.cloud.ZkStateReader.getSecurityProps()", "public java.util.Map getSecurityProps()"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(java.lang.String)", "public java.lang.String getBaseUrlForNodeName(java.lang.String)"], ["org.apache.solr.common.cloud.DocCollection", "org.apache.solr.common.cloud.ZkStateReader.getCollectionLive(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)", "public static org.apache.solr.common.cloud.DocCollection getCollectionLive(org.apache.solr.common.cloud.ZkStateReader, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.cloud.ZkStateReader.getCollectionPath(java.lang.String)", "public static java.lang.String getCollectionPath(java.lang.String)"], ["void", "org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(java.lang.String)", "public void addCollectionWatch(java.lang.String) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException"], ["void", "org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(java.lang.String)", "public void removeZKWatch(java.lang.String)"], ["org.apache.solr.common.cloud.ZooKeeperException", "org.apache.solr.common.cloud.ZooKeeperException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String, java.lang.Throwable)", "public org.apache.solr.common.cloud.ZooKeeperException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String, java.lang.Throwable)"], ["org.apache.solr.common.cloud.ZooKeeperException", "org.apache.solr.common.cloud.ZooKeeperException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String)", "public org.apache.solr.common.cloud.ZooKeeperException(org.apache.solr.common.SolrException$ErrorCode, java.lang.String)"], ["org.apache.solr.common.luke.FieldFlag[]", "org.apache.solr.common.luke.FieldFlag.values()", "public static org.apache.solr.common.luke.FieldFlag[] values()"], ["org.apache.solr.common.luke.FieldFlag", "org.apache.solr.common.luke.FieldFlag.valueOf(java.lang.String)", "public static org.apache.solr.common.luke.FieldFlag valueOf(java.lang.String)"], ["org.apache.solr.common.luke.FieldFlag", "org.apache.solr.common.luke.FieldFlag.getFlag(char)", "public static org.apache.solr.common.luke.FieldFlag getFlag(char)"], ["char", "org.apache.solr.common.luke.FieldFlag.getAbbreviation()", "public char getAbbreviation()"], ["java.lang.String", "org.apache.solr.common.luke.FieldFlag.getDisplay()", "public java.lang.String getDisplay()"], ["org.apache.solr.common.params.AppendedSolrParams", "org.apache.solr.common.params.AppendedSolrParams.wrapAppended(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)", "public static org.apache.solr.common.params.AppendedSolrParams wrapAppended(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)"], ["java.lang.String[]", "org.apache.solr.common.params.AppendedSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.AppendedSolrParams.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.CollectionParams$CollectionAction[]", "org.apache.solr.common.params.CollectionParams$CollectionAction.values()", "public static org.apache.solr.common.params.CollectionParams$CollectionAction[] values()"], ["org.apache.solr.common.params.CollectionParams$CollectionAction", "org.apache.solr.common.params.CollectionParams$CollectionAction.valueOf(java.lang.String)", "public static org.apache.solr.common.params.CollectionParams$CollectionAction valueOf(java.lang.String)"], ["org.apache.solr.common.params.CollectionParams$CollectionAction", "org.apache.solr.common.params.CollectionParams$CollectionAction.get(java.lang.String)", "public static org.apache.solr.common.params.CollectionParams$CollectionAction get(java.lang.String)"], ["boolean", "org.apache.solr.common.params.CollectionParams$CollectionAction.isEqual(java.lang.String)", "public boolean isEqual(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.CollectionParams$CollectionAction.toLower()", "public java.lang.String toLower()"], ["org.apache.solr.common.params.CommonParams$EchoParamStyle[]", "org.apache.solr.common.params.CommonParams$EchoParamStyle.values()", "public static org.apache.solr.common.params.CommonParams$EchoParamStyle[] values()"], ["org.apache.solr.common.params.CommonParams$EchoParamStyle", "org.apache.solr.common.params.CommonParams$EchoParamStyle.valueOf(java.lang.String)", "public static org.apache.solr.common.params.CommonParams$EchoParamStyle valueOf(java.lang.String)"], ["org.apache.solr.common.params.CommonParams$EchoParamStyle", "org.apache.solr.common.params.CommonParams$EchoParamStyle.get(java.lang.String)", "public static org.apache.solr.common.params.CommonParams$EchoParamStyle get(java.lang.String)"], ["org.apache.solr.common.params.CoreAdminParams$CoreAdminAction[]", "org.apache.solr.common.params.CoreAdminParams$CoreAdminAction.values()", "public static org.apache.solr.common.params.CoreAdminParams$CoreAdminAction[] values()"], ["org.apache.solr.common.params.CoreAdminParams$CoreAdminAction", "org.apache.solr.common.params.CoreAdminParams$CoreAdminAction.valueOf(java.lang.String)", "public static org.apache.solr.common.params.CoreAdminParams$CoreAdminAction valueOf(java.lang.String)"], ["org.apache.solr.common.params.CoreAdminParams$CoreAdminAction", "org.apache.solr.common.params.CoreAdminParams$CoreAdminAction.get(java.lang.String)", "public static org.apache.solr.common.params.CoreAdminParams$CoreAdminAction get(java.lang.String)"], ["org.apache.solr.common.params.CoreAdminParams", "org.apache.solr.common.params.CoreAdminParams()", "public org.apache.solr.common.params.CoreAdminParams()"], ["java.lang.String", "org.apache.solr.common.params.DefaultSolrParams.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.DefaultSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.util.Iterator<java.lang.String>", "org.apache.solr.common.params.DefaultSolrParams.getParameterNamesIterator()", "public java.util.Iterator<java.lang.String> getParameterNamesIterator()"], ["java.lang.String", "org.apache.solr.common.params.DefaultSolrParams.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.FacetParams$FacetRangeInclude[]", "org.apache.solr.common.params.FacetParams$FacetRangeInclude.values()", "public static org.apache.solr.common.params.FacetParams$FacetRangeInclude[] values()"], ["org.apache.solr.common.params.FacetParams$FacetRangeInclude", "org.apache.solr.common.params.FacetParams$FacetRangeInclude.valueOf(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeInclude valueOf(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.FacetParams$FacetRangeInclude.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.FacetParams$FacetRangeInclude", "org.apache.solr.common.params.FacetParams$FacetRangeInclude.get(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeInclude get(java.lang.String)"], ["java.util.EnumSet<org.apache.solr.common.params.FacetParams$FacetRangeInclude>", "org.apache.solr.common.params.FacetParams$FacetRangeInclude.parseParam(java.lang.String[])", "public static java.util.EnumSet<org.apache.solr.common.params.FacetParams$FacetRangeInclude> parseParam(java.lang.String[])"], ["org.apache.solr.common.params.FacetParams$FacetRangeMethod[]", "org.apache.solr.common.params.FacetParams$FacetRangeMethod.values()", "public static org.apache.solr.common.params.FacetParams$FacetRangeMethod[] values()"], ["org.apache.solr.common.params.FacetParams$FacetRangeMethod", "org.apache.solr.common.params.FacetParams$FacetRangeMethod.valueOf(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeMethod valueOf(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.FacetParams$FacetRangeMethod.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.FacetParams$FacetRangeMethod", "org.apache.solr.common.params.FacetParams$FacetRangeMethod.get(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeMethod get(java.lang.String)"], ["org.apache.solr.common.params.FacetParams$FacetRangeMethod", "org.apache.solr.common.params.FacetParams$FacetRangeMethod.getDefault()", "public static org.apache.solr.common.params.FacetParams$FacetRangeMethod getDefault()"], ["org.apache.solr.common.params.FacetParams$FacetRangeOther[]", "org.apache.solr.common.params.FacetParams$FacetRangeOther.values()", "public static org.apache.solr.common.params.FacetParams$FacetRangeOther[] values()"], ["org.apache.solr.common.params.FacetParams$FacetRangeOther", "org.apache.solr.common.params.FacetParams$FacetRangeOther.valueOf(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeOther valueOf(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.FacetParams$FacetRangeOther.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.FacetParams$FacetRangeOther", "org.apache.solr.common.params.FacetParams$FacetRangeOther.get(java.lang.String)", "public static org.apache.solr.common.params.FacetParams$FacetRangeOther get(java.lang.String)"], ["org.apache.solr.common.params.MapSolrParams", "org.apache.solr.common.params.MapSolrParams(java.util.Map<java.lang.String, java.lang.String>)", "public org.apache.solr.common.params.MapSolrParams(java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "org.apache.solr.common.params.MapSolrParams.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.MapSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.util.Iterator<java.lang.String>", "org.apache.solr.common.params.MapSolrParams.getParameterNamesIterator()", "public java.util.Iterator<java.lang.String> getParameterNamesIterator()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.solr.common.params.MapSolrParams.getMap()", "public java.util.Map<java.lang.String, java.lang.String> getMap()"], ["java.lang.String", "org.apache.solr.common.params.MapSolrParams.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams()", "public org.apache.solr.common.params.ModifiableSolrParams()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams(java.util.Map<java.lang.String, java.lang.String[]>)", "public org.apache.solr.common.params.ModifiableSolrParams(java.util.Map<java.lang.String, java.lang.String[]>)"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams(org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.params.ModifiableSolrParams(org.apache.solr.common.params.SolrParams)"], ["int", "org.apache.solr.common.params.ModifiableSolrParams.size()", "public int size()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.solr.common.params.ModifiableSolrParams.getMap()", "public java.util.Map<java.lang.String, java.lang.String[]> getMap()"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams.set(java.lang.String, java.lang.String...)", "public org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, java.lang.String...)"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams.set(java.lang.String, int)", "public org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, int)"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams.set(java.lang.String, boolean)", "public org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, boolean)"], ["org.apache.solr.common.params.ModifiableSolrParams", "org.apache.solr.common.params.ModifiableSolrParams.add(java.lang.String, java.lang.String...)", "public org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String, java.lang.String...)"], ["void", "org.apache.solr.common.params.ModifiableSolrParams.add(org.apache.solr.common.params.SolrParams)", "public void add(org.apache.solr.common.params.SolrParams)"], ["java.lang.String[]", "org.apache.solr.common.params.ModifiableSolrParams.remove(java.lang.String)", "public java.lang.String[] remove(java.lang.String)"], ["void", "org.apache.solr.common.params.ModifiableSolrParams.clear()", "public void clear()"], ["boolean", "org.apache.solr.common.params.ModifiableSolrParams.remove(java.lang.String, java.lang.String)", "public boolean remove(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.ModifiableSolrParams.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["java.util.Iterator<java.lang.String>", "org.apache.solr.common.params.ModifiableSolrParams.getParameterNamesIterator()", "public java.util.Iterator<java.lang.String> getParameterNamesIterator()"], ["java.util.Set<java.lang.String>", "org.apache.solr.common.params.ModifiableSolrParams.getParameterNames()", "public java.util.Set<java.lang.String> getParameterNames()"], ["java.lang.String[]", "org.apache.solr.common.params.ModifiableSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.ModifiableSolrParams.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.params.MoreLikeThisParams$TermStyle[]", "org.apache.solr.common.params.MoreLikeThisParams$TermStyle.values()", "public static org.apache.solr.common.params.MoreLikeThisParams$TermStyle[] values()"], ["org.apache.solr.common.params.MoreLikeThisParams$TermStyle", "org.apache.solr.common.params.MoreLikeThisParams$TermStyle.valueOf(java.lang.String)", "public static org.apache.solr.common.params.MoreLikeThisParams$TermStyle valueOf(java.lang.String)"], ["org.apache.solr.common.params.MoreLikeThisParams$TermStyle", "org.apache.solr.common.params.MoreLikeThisParams$TermStyle.get(java.lang.String)", "public static org.apache.solr.common.params.MoreLikeThisParams$TermStyle get(java.lang.String)"], ["void", "org.apache.solr.common.params.MultiMapSolrParams.addParam(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String[]>)", "public static void addParam(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String[]>)"], ["void", "org.apache.solr.common.params.MultiMapSolrParams.addParam(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.String[]>)", "public static void addParam(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.String[]>)"], ["org.apache.solr.common.params.MultiMapSolrParams", "org.apache.solr.common.params.MultiMapSolrParams(java.util.Map<java.lang.String, java.lang.String[]>)", "public org.apache.solr.common.params.MultiMapSolrParams(java.util.Map<java.lang.String, java.lang.String[]>)"], ["java.lang.String", "org.apache.solr.common.params.MultiMapSolrParams.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.MultiMapSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.util.Iterator<java.lang.String>", "org.apache.solr.common.params.MultiMapSolrParams.getParameterNamesIterator()", "public java.util.Iterator<java.lang.String> getParameterNamesIterator()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.solr.common.params.MultiMapSolrParams.getMap()", "public java.util.Map<java.lang.String, java.lang.String[]> getMap()"], ["java.lang.String", "org.apache.solr.common.params.MultiMapSolrParams.toString()", "public java.lang.String toString()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.solr.common.params.MultiMapSolrParams.asMultiMap(org.apache.solr.common.params.SolrParams)", "public static java.util.Map<java.lang.String, java.lang.String[]> asMultiMap(org.apache.solr.common.params.SolrParams)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.solr.common.params.MultiMapSolrParams.asMultiMap(org.apache.solr.common.params.SolrParams, boolean)", "public static java.util.Map<java.lang.String, java.lang.String[]> asMultiMap(org.apache.solr.common.params.SolrParams, boolean)"], ["org.apache.solr.common.params.RequiredSolrParams", "org.apache.solr.common.params.RequiredSolrParams(org.apache.solr.common.params.SolrParams)", "public org.apache.solr.common.params.RequiredSolrParams(org.apache.solr.common.params.SolrParams)"], ["java.lang.String", "org.apache.solr.common.params.RequiredSolrParams.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.RequiredSolrParams.getFieldParam(java.lang.String, java.lang.String)", "public java.lang.String getFieldParam(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.RequiredSolrParams.getFieldParams(java.lang.String, java.lang.String)", "public java.lang.String[] getFieldParams(java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.RequiredSolrParams.getParams(java.lang.String)", "public java.lang.String[] getParams(java.lang.String)"], ["java.util.Iterator<java.lang.String>", "org.apache.solr.common.params.RequiredSolrParams.getParameterNamesIterator()", "public java.util.Iterator<java.lang.String> getParameterNamesIterator()"], ["java.lang.String", "org.apache.solr.common.params.RequiredSolrParams.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.apache.solr.common.params.RequiredSolrParams.get(java.lang.String, java.lang.String)", "public java.lang.String get(java.lang.String, java.lang.String)"], ["int", "org.apache.solr.common.params.RequiredSolrParams.getInt(java.lang.String, int)", "public int getInt(java.lang.String, int)"], ["float", "org.apache.solr.common.params.RequiredSolrParams.getFloat(java.lang.String, float)", "public float getFloat(java.lang.String, float)"], ["boolean", "org.apache.solr.common.params.RequiredSolrParams.getBool(java.lang.String, boolean)", "public boolean getBool(java.lang.String, boolean)"], ["int", "org.apache.solr.common.params.RequiredSolrParams.getFieldInt(java.lang.String, java.lang.String, int)", "public int getFieldInt(java.lang.String, java.lang.String, int)"], ["boolean", "org.apache.solr.common.params.RequiredSolrParams.getFieldBool(java.lang.String, java.lang.String, boolean)", "public boolean getFieldBool(java.lang.String, java.lang.String, boolean)"], ["float", "org.apache.solr.common.params.RequiredSolrParams.getFieldFloat(java.lang.String, java.lang.String, float)", "public float getFieldFloat(java.lang.String, java.lang.String, float)"], ["java.lang.String", "org.apache.solr.common.params.RequiredSolrParams.getFieldParam(java.lang.String, java.lang.String, java.lang.String)", "public java.lang.String getFieldParam(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.solr.common.params.RequiredSolrParams.check(java.lang.String...)", "public void check(java.lang.String...)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.common.params.SolrParams()", "public org.apache.solr.common.params.SolrParams()"], ["java.lang.String", "org.apache.solr.common.params.SolrParams.get(java.lang.String, java.lang.String)", "public java.lang.String get(java.lang.String, java.lang.String)"], ["org.apache.solr.common.params.RequiredSolrParams", "org.apache.solr.common.params.SolrParams.required()", "public org.apache.solr.common.params.RequiredSolrParams required()"], ["java.lang.String", "org.apache.solr.common.params.SolrParams.getFieldParam(java.lang.String, java.lang.String)", "public java.lang.String getFieldParam(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.params.SolrParams.getFieldParam(java.lang.String, java.lang.String, java.lang.String)", "public java.lang.String getFieldParam(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.apache.solr.common.params.SolrParams.getFieldParams(java.lang.String, java.lang.String)", "public java.lang.String[] getFieldParams(java.lang.String, java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.common.params.SolrParams.getBool(java.lang.String)", "public java.lang.Boolean getBool(java.lang.String)"], ["boolean", "org.apache.solr.common.params.SolrParams.getBool(java.lang.String, boolean)", "public boolean getBool(java.lang.String, boolean)"], ["java.lang.Boolean", "org.apache.solr.common.params.SolrParams.getFieldBool(java.lang.String, java.lang.String)", "public java.lang.Boolean getFieldBool(java.lang.String, java.lang.String)"], ["boolean", "org.apache.solr.common.params.SolrParams.getFieldBool(java.lang.String, java.lang.String, boolean)", "public boolean getFieldBool(java.lang.String, java.lang.String, boolean)"], ["java.lang.Integer", "org.apache.solr.common.params.SolrParams.getInt(java.lang.String)", "public java.lang.Integer getInt(java.lang.String)"], ["java.lang.Long", "org.apache.solr.common.params.SolrParams.getLong(java.lang.String, java.lang.Long)", "public java.lang.Long getLong(java.lang.String, java.lang.Long)"], ["int", "org.apache.solr.common.params.SolrParams.getInt(java.lang.String, int)", "public int getInt(java.lang.String, int)"], ["java.lang.Long", "org.apache.solr.common.params.SolrParams.getLong(java.lang.String)", "public java.lang.Long getLong(java.lang.String)"], ["long", "org.apache.solr.common.params.SolrParams.getLong(java.lang.String, long)", "public long getLong(java.lang.String, long)"], ["java.lang.Integer", "org.apache.solr.common.params.SolrParams.getFieldInt(java.lang.String, java.lang.String)", "public java.lang.Integer getFieldInt(java.lang.String, java.lang.String)"], ["int", "org.apache.solr.common.params.SolrParams.getFieldInt(java.lang.String, java.lang.String, int)", "public int getFieldInt(java.lang.String, java.lang.String, int)"], ["java.lang.Float", "org.apache.solr.common.params.SolrParams.getFloat(java.lang.String)", "public java.lang.Float getFloat(java.lang.String)"], ["float", "org.apache.solr.common.params.SolrParams.getFloat(java.lang.String, float)", "public float getFloat(java.lang.String, float)"], ["java.lang.Double", "org.apache.solr.common.params.SolrParams.getDouble(java.lang.String)", "public java.lang.Double getDouble(java.lang.String)"], ["double", "org.apache.solr.common.params.SolrParams.getDouble(java.lang.String, double)", "public double getDouble(java.lang.String, double)"], ["java.lang.Float", "org.apache.solr.common.params.SolrParams.getFieldFloat(java.lang.String, java.lang.String)", "public java.lang.Float getFieldFloat(java.lang.String, java.lang.String)"], ["float", "org.apache.solr.common.params.SolrParams.getFieldFloat(java.lang.String, java.lang.String, float)", "public float getFieldFloat(java.lang.String, java.lang.String, float)"], ["java.lang.Double", "org.apache.solr.common.params.SolrParams.getFieldDouble(java.lang.String, java.lang.String)", "public java.lang.Double getFieldDouble(java.lang.String, java.lang.String)"], ["double", "org.apache.solr.common.params.SolrParams.getFieldDouble(java.lang.String, java.lang.String, double)", "public double getFieldDouble(java.lang.String, java.lang.String, double)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.common.params.SolrParams.wrapDefaults(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)", "public static org.apache.solr.common.params.SolrParams wrapDefaults(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.common.params.SolrParams.wrapAppended(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)", "public static org.apache.solr.common.params.SolrParams wrapAppended(org.apache.solr.common.params.SolrParams, org.apache.solr.common.params.SolrParams)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.solr.common.params.SolrParams.toMap(org.apache.solr.common.util.NamedList)", "public static java.util.Map<java.lang.String, java.lang.String> toMap(org.apache.solr.common.util.NamedList)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.solr.common.params.SolrParams.toMultiMap(org.apache.solr.common.util.NamedList)", "public static java.util.Map<java.lang.String, java.lang.String[]> toMultiMap(org.apache.solr.common.util.NamedList)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.common.params.SolrParams.toSolrParams(org.apache.solr.common.util.NamedList)", "public static org.apache.solr.common.params.SolrParams toSolrParams(org.apache.solr.common.util.NamedList)"], ["org.apache.solr.common.params.SolrParams", "org.apache.solr.common.params.SolrParams.toFilteredSolrParams(java.util.List<java.lang.String>)", "public org.apache.solr.common.params.SolrParams toFilteredSolrParams(java.util.List<java.lang.String>)"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.common.params.SolrParams.toNamedList()", "public org.apache.solr.common.util.NamedList<java.lang.Object> toNamedList()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.apache.solr.common.params.SolrParams.getAll(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String...)", "public java.util.Map<java.lang.String, java.lang.Object> getAll(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String...)"], ["org.apache.solr.common.params.TermsParams$TermsRegexpFlag[]", "org.apache.solr.common.params.TermsParams$TermsRegexpFlag.values()", "public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] values()"], ["org.apache.solr.common.params.TermsParams$TermsRegexpFlag", "org.apache.solr.common.params.TermsParams$TermsRegexpFlag.valueOf(java.lang.String)", "public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag valueOf(java.lang.String)"], ["int", "org.apache.solr.common.params.TermsParams$TermsRegexpFlag.getValue()", "public int getValue()"], ["org.apache.solr.common.util.Base64", "org.apache.solr.common.util.Base64()", "public org.apache.solr.common.util.Base64()"], ["java.lang.String", "org.apache.solr.common.util.Base64.byteArrayToBase64(byte[], int, int)", "public static java.lang.String byteArrayToBase64(byte[], int, int)"], ["byte[]", "org.apache.solr.common.util.Base64.base64ToByteArray(java.lang.String)", "public static byte[] base64ToByteArray(java.lang.String)"], ["org.apache.solr.common.util.ByteUtils", "org.apache.solr.common.util.ByteUtils()", "public org.apache.solr.common.util.ByteUtils()"], ["int", "org.apache.solr.common.util.ByteUtils.UTF8toUTF16(byte[], int, int, char[], int)", "public static int UTF8toUTF16(byte[], int, int, char[], int)"], ["void", "org.apache.solr.common.util.ByteUtils.UTF8toUTF16(byte[], int, int, org.noggit.CharArr)", "public static void UTF8toUTF16(byte[], int, int, org.noggit.CharArr)"], ["java.lang.String", "org.apache.solr.common.util.ByteUtils.UTF8toUTF16(byte[], int, int)", "public static java.lang.String UTF8toUTF16(byte[], int, int)"], ["int", "org.apache.solr.common.util.ByteUtils.UTF16toUTF8(java.lang.CharSequence, int, int, byte[], int)", "public static int UTF16toUTF8(java.lang.CharSequence, int, int, byte[], int)"], ["org.apache.solr.common.util.ContentStreamBase$ByteArrayStream", "org.apache.solr.common.util.ContentStreamBase$ByteArrayStream(byte[], java.lang.String)", "public org.apache.solr.common.util.ContentStreamBase$ByteArrayStream(byte[], java.lang.String)"], ["java.io.InputStream", "org.apache.solr.common.util.ContentStreamBase$ByteArrayStream.getStream()", "public java.io.InputStream getStream() throws java.io.IOException"], ["org.apache.solr.common.util.ContentStreamBase$FileStream", "org.apache.solr.common.util.ContentStreamBase$FileStream(java.io.File)", "public org.apache.solr.common.util.ContentStreamBase$FileStream(java.io.File)"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase$FileStream.getContentType()", "public java.lang.String getContentType()"], ["java.io.InputStream", "org.apache.solr.common.util.ContentStreamBase$FileStream.getStream()", "public java.io.InputStream getStream() throws java.io.IOException"], ["org.apache.solr.common.util.ContentStreamBase$StringStream", "org.apache.solr.common.util.ContentStreamBase$StringStream(java.lang.String)", "public org.apache.solr.common.util.ContentStreamBase$StringStream(java.lang.String)"], ["org.apache.solr.common.util.ContentStreamBase$StringStream", "org.apache.solr.common.util.ContentStreamBase$StringStream(java.lang.String, java.lang.String)", "public org.apache.solr.common.util.ContentStreamBase$StringStream(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase$StringStream.detect(java.lang.String)", "public static java.lang.String detect(java.lang.String)"], ["java.io.InputStream", "org.apache.solr.common.util.ContentStreamBase$StringStream.getStream()", "public java.io.InputStream getStream() throws java.io.IOException"], ["java.io.Reader", "org.apache.solr.common.util.ContentStreamBase$StringStream.getReader()", "public java.io.Reader getReader() throws java.io.IOException"], ["org.apache.solr.common.util.ContentStreamBase$URLStream", "org.apache.solr.common.util.ContentStreamBase$URLStream(java.net.URL)", "public org.apache.solr.common.util.ContentStreamBase$URLStream(java.net.URL)"], ["java.io.InputStream", "org.apache.solr.common.util.ContentStreamBase$URLStream.getStream()", "public java.io.InputStream getStream() throws java.io.IOException"], ["org.apache.solr.common.util.ContentStreamBase", "org.apache.solr.common.util.ContentStreamBase()", "public org.apache.solr.common.util.ContentStreamBase()"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase.getCharsetFromContentType(java.lang.String)", "public static java.lang.String getCharsetFromContentType(java.lang.String)"], ["java.io.Reader", "org.apache.solr.common.util.ContentStreamBase.getReader()", "public java.io.Reader getReader() throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase.getContentType()", "public java.lang.String getContentType()"], ["void", "org.apache.solr.common.util.ContentStreamBase.setContentType(java.lang.String)", "public void setContentType(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase.getName()", "public java.lang.String getName()"], ["void", "org.apache.solr.common.util.ContentStreamBase.setName(java.lang.String)", "public void setName(java.lang.String)"], ["java.lang.Long", "org.apache.solr.common.util.ContentStreamBase.getSize()", "public java.lang.Long getSize()"], ["void", "org.apache.solr.common.util.ContentStreamBase.setSize(java.lang.Long)", "public void setSize(java.lang.Long)"], ["java.lang.String", "org.apache.solr.common.util.ContentStreamBase.getSourceInfo()", "public java.lang.String getSourceInfo()"], ["void", "org.apache.solr.common.util.ContentStreamBase.setSourceInfo(java.lang.String)", "public void setSourceInfo(java.lang.String)"], ["org.apache.solr.common.util.DataInputInputStream", "org.apache.solr.common.util.DataInputInputStream()", "public org.apache.solr.common.util.DataInputInputStream()"], ["org.apache.solr.common.util.DateUtil$ThreadLocalDateFormat", "org.apache.solr.common.util.DateUtil$ThreadLocalDateFormat()", "public org.apache.solr.common.util.DateUtil$ThreadLocalDateFormat()"], ["org.apache.solr.common.util.DateUtil", "org.apache.solr.common.util.DateUtil()", "public org.apache.solr.common.util.DateUtil()"], ["java.util.Date", "org.apache.solr.common.util.DateUtil.parseDate(java.lang.String)", "public static java.util.Date parseDate(java.lang.String) throws java.text.ParseException"], ["java.util.Date", "org.apache.solr.common.util.DateUtil.parseDate(java.lang.String, java.util.Collection<java.lang.String>)", "public static java.util.Date parseDate(java.lang.String, java.util.Collection<java.lang.String>) throws java.text.ParseException"], ["java.util.Date", "org.apache.solr.common.util.DateUtil.parseDate(java.lang.String, java.util.Collection<java.lang.String>, java.util.Date)", "public static java.util.Date parseDate(java.lang.String, java.util.Collection<java.lang.String>, java.util.Date) throws java.text.ParseException"], ["java.text.DateFormat", "org.apache.solr.common.util.DateUtil.getThreadLocalDateFormat()", "public static java.text.DateFormat getThreadLocalDateFormat()"], ["java.util.Calendar", "org.apache.solr.common.util.DateUtil.formatDate(java.util.Date, java.util.Calendar, java.lang.Appendable)", "public static java.util.Calendar formatDate(java.util.Date, java.util.Calendar, java.lang.Appendable) throws java.io.IOException"], ["void", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor$1.run()", "public void run()"], ["org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)", "public org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"], ["org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>)", "public org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>)"], ["org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory)", "public org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory)"], ["org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.RejectedExecutionHandler)", "public org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.RejectedExecutionHandler)"], ["void", "org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.execute(java.lang.Runnable)", "public void execute(java.lang.Runnable)"], ["org.apache.solr.common.util.ExecutorUtil", "org.apache.solr.common.util.ExecutorUtil()", "public org.apache.solr.common.util.ExecutorUtil()"], ["void", "org.apache.solr.common.util.ExecutorUtil.shutdownNowAndAwaitTermination(java.util.concurrent.ExecutorService)", "public static void shutdownNowAndAwaitTermination(java.util.concurrent.ExecutorService)"], ["void", "org.apache.solr.common.util.ExecutorUtil.shutdownAndAwaitTermination(java.util.concurrent.ExecutorService)", "public static void shutdownAndAwaitTermination(java.util.concurrent.ExecutorService)"], ["void", "org.apache.solr.common.util.ExecutorUtil.shutdownAndAwaitTermination(java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)", "public static void shutdownAndAwaitTermination(java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)"], ["java.util.concurrent.ExecutorService", "org.apache.solr.common.util.ExecutorUtil.newMDCAwareFixedThreadPool(int, java.util.concurrent.ThreadFactory)", "public static java.util.concurrent.ExecutorService newMDCAwareFixedThreadPool(int, java.util.concurrent.ThreadFactory)"], ["java.util.concurrent.ExecutorService", "org.apache.solr.common.util.ExecutorUtil.newMDCAwareSingleThreadExecutor(java.util.concurrent.ThreadFactory)", "public static java.util.concurrent.ExecutorService newMDCAwareSingleThreadExecutor(java.util.concurrent.ThreadFactory)"], ["java.util.concurrent.ExecutorService", "org.apache.solr.common.util.ExecutorUtil.newMDCAwareCachedThreadPool(java.util.concurrent.ThreadFactory)", "public static java.util.concurrent.ExecutorService newMDCAwareCachedThreadPool(java.util.concurrent.ThreadFactory)"], ["org.apache.solr.common.util.FastInputStream", "org.apache.solr.common.util.FastInputStream(java.io.InputStream)", "public org.apache.solr.common.util.FastInputStream(java.io.InputStream)"], ["org.apache.solr.common.util.FastInputStream", "org.apache.solr.common.util.FastInputStream(java.io.InputStream, byte[], int, int)", "public org.apache.solr.common.util.FastInputStream(java.io.InputStream, byte[], int, int)"], ["org.apache.solr.common.util.FastInputStream", "org.apache.solr.common.util.FastInputStream.wrap(java.io.InputStream)", "public static org.apache.solr.common.util.FastInputStream wrap(java.io.InputStream)"], ["int", "org.apache.solr.common.util.FastInputStream.read()", "public int read() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.peek()", "public int peek() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.readUnsignedByte()", "public int readUnsignedByte() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.readWrappedStream(byte[], int, int)", "public int readWrappedStream(byte[], int, int) throws java.io.IOException"], ["long", "org.apache.solr.common.util.FastInputStream.position()", "public long position()"], ["void", "org.apache.solr.common.util.FastInputStream.refill()", "public void refill() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.available()", "public int available() throws java.io.IOException"], ["byte[]", "org.apache.solr.common.util.FastInputStream.getBuffer()", "public byte[] getBuffer()"], ["int", "org.apache.solr.common.util.FastInputStream.getPositionInBuffer()", "public int getPositionInBuffer()"], ["int", "org.apache.solr.common.util.FastInputStream.getEndInBuffer()", "public int getEndInBuffer()"], ["int", "org.apache.solr.common.util.FastInputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastInputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastInputStream.readFully(byte[])", "public void readFully(byte[]) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastInputStream.readFully(byte[], int, int)", "public void readFully(byte[], int, int) throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.skipBytes(int)", "public int skipBytes(int) throws java.io.IOException"], ["boolean", "org.apache.solr.common.util.FastInputStream.readBoolean()", "public boolean readBoolean() throws java.io.IOException"], ["byte", "org.apache.solr.common.util.FastInputStream.readByte()", "public byte readByte() throws java.io.IOException"], ["short", "org.apache.solr.common.util.FastInputStream.readShort()", "public short readShort() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.readUnsignedShort()", "public int readUnsignedShort() throws java.io.IOException"], ["char", "org.apache.solr.common.util.FastInputStream.readChar()", "public char readChar() throws java.io.IOException"], ["int", "org.apache.solr.common.util.FastInputStream.readInt()", "public int readInt() throws java.io.IOException"], ["long", "org.apache.solr.common.util.FastInputStream.readLong()", "public long readLong() throws java.io.IOException"], ["float", "org.apache.solr.common.util.FastInputStream.readFloat()", "public float readFloat() throws java.io.IOException"], ["double", "org.apache.solr.common.util.FastInputStream.readDouble()", "public double readDouble() throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.FastInputStream.readLine()", "public java.lang.String readLine() throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.FastInputStream.readUTF()", "public java.lang.String readUTF() throws java.io.IOException"], ["org.apache.solr.common.util.FastOutputStream", "org.apache.solr.common.util.FastOutputStream(java.io.OutputStream)", "public org.apache.solr.common.util.FastOutputStream(java.io.OutputStream)"], ["org.apache.solr.common.util.FastOutputStream", "org.apache.solr.common.util.FastOutputStream(java.io.OutputStream, byte[], int)", "public org.apache.solr.common.util.FastOutputStream(java.io.OutputStream, byte[], int)"], ["org.apache.solr.common.util.FastOutputStream", "org.apache.solr.common.util.FastOutputStream.wrap(java.io.OutputStream)", "public static org.apache.solr.common.util.FastOutputStream wrap(java.io.OutputStream)"], ["void", "org.apache.solr.common.util.FastOutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.write(byte[])", "public void write(byte[]) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.write(byte)", "public void write(byte) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.reserve(int)", "public void reserve(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeBoolean(boolean)", "public void writeBoolean(boolean) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeByte(int)", "public void writeByte(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeShort(int)", "public void writeShort(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeChar(int)", "public void writeChar(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeInt(int)", "public void writeInt(int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeLong(long)", "public void writeLong(long) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeFloat(float)", "public void writeFloat(float) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeDouble(double)", "public void writeDouble(double) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeBytes(java.lang.String)", "public void writeBytes(java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeChars(java.lang.String)", "public void writeChars(java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.writeUTF(java.lang.String)", "public void writeUTF(java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.flush()", "public void flush() throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.close()", "public void close() throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.flushBuffer()", "public void flushBuffer() throws java.io.IOException"], ["void", "org.apache.solr.common.util.FastOutputStream.flush(byte[], int, int)", "public void flush(byte[], int, int) throws java.io.IOException"], ["long", "org.apache.solr.common.util.FastOutputStream.size()", "public long size()"], ["long", "org.apache.solr.common.util.FastOutputStream.written()", "public long written()"], ["void", "org.apache.solr.common.util.FastOutputStream.setWritten(long)", "public void setWritten(long)"], ["org.apache.solr.common.util.Hash$LongPair", "org.apache.solr.common.util.Hash$LongPair()", "public org.apache.solr.common.util.Hash$LongPair()"], ["org.apache.solr.common.util.Hash", "org.apache.solr.common.util.Hash()", "public org.apache.solr.common.util.Hash()"], ["int", "org.apache.solr.common.util.Hash.lookup3(int[], int, int, int)", "public static int lookup3(int[], int, int, int)"], ["int", "org.apache.solr.common.util.Hash.lookup3ycs(int[], int, int, int)", "public static int lookup3ycs(int[], int, int, int)"], ["int", "org.apache.solr.common.util.Hash.lookup3ycs(java.lang.CharSequence, int, int, int)", "public static int lookup3ycs(java.lang.CharSequence, int, int, int)"], ["long", "org.apache.solr.common.util.Hash.lookup3ycs64(java.lang.CharSequence, int, int, long)", "public static long lookup3ycs64(java.lang.CharSequence, int, int, long)"], ["int", "org.apache.solr.common.util.Hash.murmurhash3_x86_32(byte[], int, int, int)", "public static int murmurhash3_x86_32(byte[], int, int, int)"], ["int", "org.apache.solr.common.util.Hash.murmurhash3_x86_32(java.lang.CharSequence, int, int, int)", "public static int murmurhash3_x86_32(java.lang.CharSequence, int, int, int)"], ["int", "org.apache.solr.common.util.Hash.fmix32(int)", "public static final int fmix32(int)"], ["long", "org.apache.solr.common.util.Hash.fmix64(long)", "public static final long fmix64(long)"], ["long", "org.apache.solr.common.util.Hash.getLongLittleEndian(byte[], int)", "public static final long getLongLittleEndian(byte[], int)"], ["void", "org.apache.solr.common.util.Hash.murmurhash3_x64_128(byte[], int, int, int, org.apache.solr.common.util.Hash$LongPair)", "public static void murmurhash3_x64_128(byte[], int, int, int, org.apache.solr.common.util.Hash$LongPair)"], ["org.apache.solr.common.util.IOUtils", "org.apache.solr.common.util.IOUtils()", "public org.apache.solr.common.util.IOUtils()"], ["void", "org.apache.solr.common.util.IOUtils.closeQuietly(java.io.Closeable)", "public static void closeQuietly(java.io.Closeable)"], ["org.apache.solr.common.util.IteratorChain", "org.apache.solr.common.util.IteratorChain()", "public org.apache.solr.common.util.IteratorChain()"], ["void", "org.apache.solr.common.util.IteratorChain.addIterator(java.util.Iterator<E>)", "public void addIterator(java.util.Iterator<E>)"], ["boolean", "org.apache.solr.common.util.IteratorChain.hasNext()", "public boolean hasNext()"], ["E", "org.apache.solr.common.util.IteratorChain.next()", "public E next()"], ["void", "org.apache.solr.common.util.IteratorChain.remove()", "public void remove()"], ["java.lang.Object", "org.apache.solr.common.util.JavaBinCodec$1.getKey()", "public java.lang.Object getKey()"], ["java.lang.Object", "org.apache.solr.common.util.JavaBinCodec$1.getValue()", "public java.lang.Object getValue()"], ["java.lang.String", "org.apache.solr.common.util.JavaBinCodec$1.toString()", "public java.lang.String toString()"], ["java.lang.Object", "org.apache.solr.common.util.JavaBinCodec$1.setValue(java.lang.Object)", "public java.lang.Object setValue(java.lang.Object)"], ["int", "org.apache.solr.common.util.JavaBinCodec$1.hashCode()", "public int hashCode()"], ["boolean", "org.apache.solr.common.util.JavaBinCodec$1.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.apache.solr.common.util.JavaBinCodec$StringBytes", "org.apache.solr.common.util.JavaBinCodec$StringBytes(byte[], int, int)", "public org.apache.solr.common.util.JavaBinCodec$StringBytes(byte[], int, int)"], ["boolean", "org.apache.solr.common.util.JavaBinCodec$StringBytes.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.apache.solr.common.util.JavaBinCodec$StringBytes.hashCode()", "public int hashCode()"], ["org.apache.solr.common.util.JavaBinCodec$StringCache", "org.apache.solr.common.util.JavaBinCodec$StringCache(org.apache.solr.common.util.Cache<org.apache.solr.common.util.JavaBinCodec$StringBytes, java.lang.String>)", "public org.apache.solr.common.util.JavaBinCodec$StringCache(org.apache.solr.common.util.Cache<org.apache.solr.common.util.JavaBinCodec$StringBytes, java.lang.String>)"], ["java.lang.String", "org.apache.solr.common.util.JavaBinCodec$StringCache.get(org.apache.solr.common.util.JavaBinCodec$StringBytes)", "public java.lang.String get(org.apache.solr.common.util.JavaBinCodec$StringBytes)"], ["org.apache.solr.common.util.JavaBinCodec", "org.apache.solr.common.util.JavaBinCodec()", "public org.apache.solr.common.util.JavaBinCodec()"], ["org.apache.solr.common.util.JavaBinCodec", "org.apache.solr.common.util.JavaBinCodec(org.apache.solr.common.util.JavaBinCodec$ObjectResolver)", "public org.apache.solr.common.util.JavaBinCodec(org.apache.solr.common.util.JavaBinCodec$ObjectResolver)"], ["org.apache.solr.common.util.JavaBinCodec", "org.apache.solr.common.util.JavaBinCodec(org.apache.solr.common.util.JavaBinCodec$ObjectResolver, org.apache.solr.common.util.JavaBinCodec$StringCache)", "public org.apache.solr.common.util.JavaBinCodec(org.apache.solr.common.util.JavaBinCodec$ObjectResolver, org.apache.solr.common.util.JavaBinCodec$StringCache)"], ["org.apache.solr.common.util.JavaBinCodec$ObjectResolver", "org.apache.solr.common.util.JavaBinCodec.getResolver()", "public org.apache.solr.common.util.JavaBinCodec$ObjectResolver getResolver()"], ["void", "org.apache.solr.common.util.JavaBinCodec.marshal(java.lang.Object, java.io.OutputStream)", "public void marshal(java.lang.Object, java.io.OutputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.init(org.apache.solr.common.util.FastOutputStream)", "public void init(org.apache.solr.common.util.FastOutputStream)"], ["java.lang.Object", "org.apache.solr.common.util.JavaBinCodec.unmarshal(java.io.InputStream)", "public java.lang.Object unmarshal(java.io.InputStream) throws java.io.IOException"], ["org.apache.solr.common.util.SimpleOrderedMap<java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readOrderedMap(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.util.SimpleOrderedMap<java.lang.Object> readOrderedMap(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["org.apache.solr.common.util.NamedList<java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readNamedList(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.util.NamedList<java.lang.Object> readNamedList(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeNamedList(org.apache.solr.common.util.NamedList<?>)", "public void writeNamedList(org.apache.solr.common.util.NamedList<?>) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeVal(java.lang.Object)", "public void writeVal(java.lang.Object) throws java.io.IOException"], ["java.lang.Object", "org.apache.solr.common.util.JavaBinCodec.readVal(org.apache.solr.common.util.DataInputInputStream)", "public java.lang.Object readVal(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["boolean", "org.apache.solr.common.util.JavaBinCodec.writeKnownType(java.lang.Object)", "public boolean writeKnownType(java.lang.Object) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeTag(byte)", "public void writeTag(byte) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeTag(byte, int)", "public void writeTag(byte, int) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeByteArray(byte[], int, int)", "public void writeByteArray(byte[], int, int) throws java.io.IOException"], ["byte[]", "org.apache.solr.common.util.JavaBinCodec.readByteArray(org.apache.solr.common.util.DataInputInputStream)", "public byte[] readByteArray(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeSolrDocument(org.apache.solr.common.SolrDocument)", "public void writeSolrDocument(org.apache.solr.common.SolrDocument) throws java.io.IOException"], ["org.apache.solr.common.SolrDocument", "org.apache.solr.common.util.JavaBinCodec.readSolrDocument(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.SolrDocument readSolrDocument(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["org.apache.solr.common.SolrDocumentList", "org.apache.solr.common.util.JavaBinCodec.readSolrDocumentList(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.SolrDocumentList readSolrDocumentList(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeSolrDocumentList(org.apache.solr.common.SolrDocumentList)", "public void writeSolrDocumentList(org.apache.solr.common.SolrDocumentList) throws java.io.IOException"], ["org.apache.solr.common.SolrInputDocument", "org.apache.solr.common.util.JavaBinCodec.readSolrInputDocument(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.SolrInputDocument readSolrInputDocument(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeSolrInputDocument(org.apache.solr.common.SolrInputDocument)", "public void writeSolrInputDocument(org.apache.solr.common.SolrInputDocument) throws java.io.IOException"], ["java.util.Map<java.lang.Object, java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readMap(org.apache.solr.common.util.DataInputInputStream)", "public java.util.Map<java.lang.Object, java.lang.Object> readMap(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeIterator(java.util.Iterator)", "public void writeIterator(java.util.Iterator) throws java.io.IOException"], ["java.util.List<java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readIterator(org.apache.solr.common.util.DataInputInputStream)", "public java.util.List<java.lang.Object> readIterator(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeArray(java.util.List)", "public void writeArray(java.util.List) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeArray(java.util.Collection)", "public void writeArray(java.util.Collection) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeArray(java.lang.Object[])", "public void writeArray(java.lang.Object[]) throws java.io.IOException"], ["java.util.List<java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readArray(org.apache.solr.common.util.DataInputInputStream)", "public java.util.List<java.lang.Object> readArray(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeEnumFieldValue(org.apache.solr.common.EnumFieldValue)", "public void writeEnumFieldValue(org.apache.solr.common.EnumFieldValue) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeMapEntry(java.util.Map$Entry<java.lang.Object, java.lang.Object>)", "public void writeMapEntry(java.util.Map$Entry<java.lang.Object, java.lang.Object>) throws java.io.IOException"], ["org.apache.solr.common.EnumFieldValue", "org.apache.solr.common.util.JavaBinCodec.readEnumFieldValue(org.apache.solr.common.util.DataInputInputStream)", "public org.apache.solr.common.EnumFieldValue readEnumFieldValue(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["java.util.Map$Entry<java.lang.Object, java.lang.Object>", "org.apache.solr.common.util.JavaBinCodec.readMapEntry(org.apache.solr.common.util.DataInputInputStream)", "public java.util.Map$Entry<java.lang.Object, java.lang.Object> readMapEntry(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeStr(java.lang.String)", "public void writeStr(java.lang.String) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.JavaBinCodec.readStr(org.apache.solr.common.util.DataInputInputStream)", "public java.lang.String readStr(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.JavaBinCodec.readStr(org.apache.solr.common.util.DataInputInputStream, org.apache.solr.common.util.JavaBinCodec$StringCache)", "public java.lang.String readStr(org.apache.solr.common.util.DataInputInputStream, org.apache.solr.common.util.JavaBinCodec$StringCache) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeInt(int)", "public void writeInt(int) throws java.io.IOException"], ["int", "org.apache.solr.common.util.JavaBinCodec.readSmallInt(org.apache.solr.common.util.DataInputInputStream)", "public int readSmallInt(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeLong(long)", "public void writeLong(long) throws java.io.IOException"], ["long", "org.apache.solr.common.util.JavaBinCodec.readSmallLong(org.apache.solr.common.util.DataInputInputStream)", "public long readSmallLong(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeFloat(float)", "public void writeFloat(float) throws java.io.IOException"], ["boolean", "org.apache.solr.common.util.JavaBinCodec.writePrimitive(java.lang.Object)", "public boolean writePrimitive(java.lang.Object) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeMap(java.util.Map<?, ?>)", "public void writeMap(java.util.Map<?, ?>) throws java.io.IOException"], ["int", "org.apache.solr.common.util.JavaBinCodec.readSize(org.apache.solr.common.util.DataInputInputStream)", "public int readSize(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeVInt(int, org.apache.solr.common.util.FastOutputStream)", "public static void writeVInt(int, org.apache.solr.common.util.FastOutputStream) throws java.io.IOException"], ["int", "org.apache.solr.common.util.JavaBinCodec.readVInt(org.apache.solr.common.util.DataInputInputStream)", "public static int readVInt(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeVLong(long, org.apache.solr.common.util.FastOutputStream)", "public static void writeVLong(long, org.apache.solr.common.util.FastOutputStream) throws java.io.IOException"], ["long", "org.apache.solr.common.util.JavaBinCodec.readVLong(org.apache.solr.common.util.DataInputInputStream)", "public static long readVLong(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JavaBinCodec.writeExternString(java.lang.String)", "public void writeExternString(java.lang.String) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.JavaBinCodec.readExternString(org.apache.solr.common.util.DataInputInputStream)", "public java.lang.String readExternString(org.apache.solr.common.util.DataInputInputStream) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JsonRecordReader$1.handle(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String)", "public void handle(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String)"], ["void", "org.apache.solr.common.util.JsonRecordReader$Node$1Wrapper.walk(int)", "public void walk(int) throws java.io.IOException"], ["org.apache.solr.common.util.JsonRecordReader$Node", "org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, org.apache.solr.common.util.JsonRecordReader$Node)", "public org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, org.apache.solr.common.util.JsonRecordReader$Node)"], ["org.apache.solr.common.util.JsonRecordReader$Node", "org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, java.lang.String)", "public org.apache.solr.common.util.JsonRecordReader$Node(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.solr.common.util.JsonRecordReader$Node.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.util.JsonRecordReader", "org.apache.solr.common.util.JsonRecordReader.getInst(java.lang.String, java.util.List<java.lang.String>)", "public static org.apache.solr.common.util.JsonRecordReader getInst(java.lang.String, java.util.List<java.lang.String>)"], ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>", "org.apache.solr.common.util.JsonRecordReader.getAllRecords(java.io.Reader)", "public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getAllRecords(java.io.Reader) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JsonRecordReader.streamRecords(java.io.Reader, org.apache.solr.common.util.JsonRecordReader$Handler)", "public void streamRecords(java.io.Reader, org.apache.solr.common.util.JsonRecordReader$Handler) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JsonRecordReader.streamRecords(org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler)", "public void streamRecords(org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$Handler) throws java.io.IOException"], ["java.lang.Object", "org.apache.solr.common.util.JsonRecordReader.parseSingleFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper)", "public static java.lang.Object parseSingleFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException"], ["java.util.List<java.lang.Object>", "org.apache.solr.common.util.JsonRecordReader.parseArrayFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper)", "public static java.util.List<java.lang.Object> parseArrayFieldValue(int, org.noggit.JSONParser, org.apache.solr.common.util.JsonRecordReader$MethodFrameWrapper) throws java.io.IOException"], ["void", "org.apache.solr.common.util.JsonRecordReader.consumeTillMatchingEnd(org.noggit.JSONParser, int, int)", "public static void consumeTillMatchingEnd(org.noggit.JSONParser, int, int) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.NamedList$1$1.getKey()", "public java.lang.String getKey()"], ["T", "org.apache.solr.common.util.NamedList$1$1.getValue()", "public T getValue()"], ["java.lang.String", "org.apache.solr.common.util.NamedList$1$1.toString()", "public java.lang.String toString()"], ["T", "org.apache.solr.common.util.NamedList$1$1.setValue(T)", "public T setValue(T)"], ["java.lang.Object", "org.apache.solr.common.util.NamedList$1$1.getKey()", "public java.lang.Object getKey()"], ["boolean", "org.apache.solr.common.util.NamedList$1.hasNext()", "public boolean hasNext()"], ["java.util.Map$Entry<java.lang.String, T>", "org.apache.solr.common.util.NamedList$1.next()", "public java.util.Map$Entry<java.lang.String, T> next()"], ["void", "org.apache.solr.common.util.NamedList$1.remove()", "public void remove()"], ["java.lang.Object", "org.apache.solr.common.util.NamedList$1.next()", "public java.lang.Object next()"], ["org.apache.solr.common.util.NamedList$NamedListEntry", "org.apache.solr.common.util.NamedList$NamedListEntry()", "public org.apache.solr.common.util.NamedList$NamedListEntry()"], ["org.apache.solr.common.util.NamedList$NamedListEntry", "org.apache.solr.common.util.NamedList$NamedListEntry(java.lang.String, T)", "public org.apache.solr.common.util.NamedList$NamedListEntry(java.lang.String, T)"], ["java.lang.String", "org.apache.solr.common.util.NamedList$NamedListEntry.getKey()", "public java.lang.String getKey()"], ["T", "org.apache.solr.common.util.NamedList$NamedListEntry.getValue()", "public T getValue()"], ["T", "org.apache.solr.common.util.NamedList$NamedListEntry.setValue(T)", "public T setValue(T)"], ["java.lang.Object", "org.apache.solr.common.util.NamedList$NamedListEntry.getKey()", "public java.lang.Object getKey()"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList()", "public org.apache.solr.common.util.NamedList()"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList(int)", "public org.apache.solr.common.util.NamedList(int)"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList(java.util.Map$Entry<java.lang.String, ? extends T>[])", "public org.apache.solr.common.util.NamedList(java.util.Map$Entry<java.lang.String, ? extends T>[])"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList(java.util.Map<java.lang.String, ? extends T>)", "public org.apache.solr.common.util.NamedList(java.util.Map<java.lang.String, ? extends T>)"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList(java.util.List<java.lang.Object>)", "public org.apache.solr.common.util.NamedList(java.util.List<java.lang.Object>)"], ["int", "org.apache.solr.common.util.NamedList.size()", "public int size()"], ["java.lang.String", "org.apache.solr.common.util.NamedList.getName(int)", "public java.lang.String getName(int)"], ["T", "org.apache.solr.common.util.NamedList.getVal(int)", "public T getVal(int)"], ["void", "org.apache.solr.common.util.NamedList.add(java.lang.String, T)", "public void add(java.lang.String, T)"], ["void", "org.apache.solr.common.util.NamedList.setName(int, java.lang.String)", "public void setName(int, java.lang.String)"], ["T", "org.apache.solr.common.util.NamedList.setVal(int, T)", "public T setVal(int, T)"], ["T", "org.apache.solr.common.util.NamedList.remove(int)", "public T remove(int)"], ["int", "org.apache.solr.common.util.NamedList.indexOf(java.lang.String, int)", "public int indexOf(java.lang.String, int)"], ["T", "org.apache.solr.common.util.NamedList.get(java.lang.String)", "public T get(java.lang.String)"], ["T", "org.apache.solr.common.util.NamedList.get(java.lang.String, int)", "public T get(java.lang.String, int)"], ["java.util.List<T>", "org.apache.solr.common.util.NamedList.getAll(java.lang.String)", "public java.util.List<T> getAll(java.lang.String)"], ["java.lang.Object", "org.apache.solr.common.util.NamedList.findRecursive(java.lang.String...)", "public java.lang.Object findRecursive(java.lang.String...)"], ["java.lang.String", "org.apache.solr.common.util.NamedList.toString()", "public java.lang.String toString()"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.NamedList.getImmutableCopy()", "public org.apache.solr.common.util.NamedList getImmutableCopy()"], ["java.util.Map", "org.apache.solr.common.util.NamedList.asMap(int)", "public java.util.Map asMap(int)"], ["boolean", "org.apache.solr.common.util.NamedList.addAll(java.util.Map<java.lang.String, T>)", "public boolean addAll(java.util.Map<java.lang.String, T>)"], ["boolean", "org.apache.solr.common.util.NamedList.addAll(org.apache.solr.common.util.NamedList<T>)", "public boolean addAll(org.apache.solr.common.util.NamedList<T>)"], ["org.apache.solr.common.util.NamedList<T>", "org.apache.solr.common.util.NamedList.clone()", "public org.apache.solr.common.util.NamedList<T> clone()"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, T>>", "org.apache.solr.common.util.NamedList.iterator()", "public java.util.Iterator<java.util.Map$Entry<java.lang.String, T>> iterator()"], ["T", "org.apache.solr.common.util.NamedList.remove(java.lang.String)", "public T remove(java.lang.String)"], ["java.util.List<T>", "org.apache.solr.common.util.NamedList.removeAll(java.lang.String)", "public java.util.List<T> removeAll(java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.common.util.NamedList.removeBooleanArg(java.lang.String)", "public java.lang.Boolean removeBooleanArg(java.lang.String)"], ["java.lang.Boolean", "org.apache.solr.common.util.NamedList.getBooleanArg(java.lang.String)", "public java.lang.Boolean getBooleanArg(java.lang.String)"], ["java.util.Collection<java.lang.String>", "org.apache.solr.common.util.NamedList.removeConfigArgs(java.lang.String)", "public java.util.Collection<java.lang.String> removeConfigArgs(java.lang.String) throws org.apache.solr.common.SolrException"], ["void", "org.apache.solr.common.util.NamedList.clear()", "public void clear()"], ["int", "org.apache.solr.common.util.NamedList.hashCode()", "public int hashCode()"], ["boolean", "org.apache.solr.common.util.NamedList.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.Object", "org.apache.solr.common.util.NamedList.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.apache.solr.common.util.ObjectReleaseTracker", "org.apache.solr.common.util.ObjectReleaseTracker()", "public org.apache.solr.common.util.ObjectReleaseTracker()"], ["boolean", "org.apache.solr.common.util.ObjectReleaseTracker.track(java.lang.Object)", "public static boolean track(java.lang.Object)"], ["boolean", "org.apache.solr.common.util.ObjectReleaseTracker.release(java.lang.Object)", "public static boolean release(java.lang.Object)"], ["boolean", "org.apache.solr.common.util.ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty()", "public static boolean clearObjectTrackerAndCheckEmpty()"], ["org.apache.solr.common.util.RetryUtil", "org.apache.solr.common.util.RetryUtil()", "public org.apache.solr.common.util.RetryUtil()"], ["void", "org.apache.solr.common.util.RetryUtil.retryOnThrowable(java.lang.Class, long, long, org.apache.solr.common.util.RetryUtil$RetryCmd)", "public static void retryOnThrowable(java.lang.Class, long, long, org.apache.solr.common.util.RetryUtil$RetryCmd) throws java.lang.Throwable"], ["org.apache.solr.common.util.SimpleOrderedMap", "org.apache.solr.common.util.SimpleOrderedMap()", "public org.apache.solr.common.util.SimpleOrderedMap()"], ["org.apache.solr.common.util.SimpleOrderedMap", "org.apache.solr.common.util.SimpleOrderedMap(int)", "public org.apache.solr.common.util.SimpleOrderedMap(int)"], ["org.apache.solr.common.util.SimpleOrderedMap", "org.apache.solr.common.util.SimpleOrderedMap(java.util.List<java.lang.Object>)", "public org.apache.solr.common.util.SimpleOrderedMap(java.util.List<java.lang.Object>)"], ["org.apache.solr.common.util.SimpleOrderedMap", "org.apache.solr.common.util.SimpleOrderedMap(java.util.Map$Entry<java.lang.String, T>[])", "public org.apache.solr.common.util.SimpleOrderedMap(java.util.Map$Entry<java.lang.String, T>[])"], ["org.apache.solr.common.util.SimpleOrderedMap<T>", "org.apache.solr.common.util.SimpleOrderedMap.clone()", "public org.apache.solr.common.util.SimpleOrderedMap<T> clone()"], ["org.apache.solr.common.util.NamedList", "org.apache.solr.common.util.SimpleOrderedMap.clone()", "public org.apache.solr.common.util.NamedList clone()"], ["java.lang.Object", "org.apache.solr.common.util.SimpleOrderedMap.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.apache.solr.common.util.SolrjNamedThreadFactory", "org.apache.solr.common.util.SolrjNamedThreadFactory(java.lang.String)", "public org.apache.solr.common.util.SolrjNamedThreadFactory(java.lang.String)"], ["java.lang.Thread", "org.apache.solr.common.util.SolrjNamedThreadFactory.newThread(java.lang.Runnable)", "public java.lang.Thread newThread(java.lang.Runnable)"], ["org.apache.solr.common.util.StrUtils", "org.apache.solr.common.util.StrUtils()", "public org.apache.solr.common.util.StrUtils()"], ["java.util.List<java.lang.String>", "org.apache.solr.common.util.StrUtils.splitSmart(java.lang.String, char)", "public static java.util.List<java.lang.String> splitSmart(java.lang.String, char)"], ["java.util.List<java.lang.String>", "org.apache.solr.common.util.StrUtils.splitSmart(java.lang.String, java.lang.String, boolean)", "public static java.util.List<java.lang.String> splitSmart(java.lang.String, java.lang.String, boolean)"], ["java.util.List<java.lang.String>", "org.apache.solr.common.util.StrUtils.splitFileNames(java.lang.String)", "public static java.util.List<java.lang.String> splitFileNames(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.util.StrUtils.join(java.util.List<?>, char)", "public static java.lang.String join(java.util.List<?>, char)"], ["java.util.List<java.lang.String>", "org.apache.solr.common.util.StrUtils.splitWS(java.lang.String, boolean)", "public static java.util.List<java.lang.String> splitWS(java.lang.String, boolean)"], ["java.util.List<java.lang.String>", "org.apache.solr.common.util.StrUtils.toLower(java.util.List<java.lang.String>)", "public static java.util.List<java.lang.String> toLower(java.util.List<java.lang.String>)"], ["boolean", "org.apache.solr.common.util.StrUtils.parseBoolean(java.lang.String)", "public static boolean parseBoolean(java.lang.String)"], ["boolean", "org.apache.solr.common.util.StrUtils.parseBool(java.lang.String)", "public static boolean parseBool(java.lang.String)"], ["boolean", "org.apache.solr.common.util.StrUtils.parseBool(java.lang.String, boolean)", "public static boolean parseBool(java.lang.String, boolean)"], ["void", "org.apache.solr.common.util.StrUtils.partialURLEncodeVal(java.lang.Appendable, java.lang.String)", "public static void partialURLEncodeVal(java.lang.Appendable, java.lang.String) throws java.io.IOException"], ["java.lang.String", "org.apache.solr.common.util.StrUtils.escapeTextWithSeparator(java.lang.String, char)", "public static java.lang.String escapeTextWithSeparator(java.lang.String, char)"], ["void", "org.apache.solr.common.util.StrUtils.appendEscapedTextToBuilder(java.lang.StringBuilder, java.lang.String, char)", "public static void appendEscapedTextToBuilder(java.lang.StringBuilder, java.lang.String, char)"], ["java.lang.String", "org.apache.solr.common.util.StrUtils.formatString(java.lang.String, java.lang.Object...)", "public static java.lang.String formatString(java.lang.String, java.lang.Object...)"], ["org.apache.solr.common.util.URLUtil", "org.apache.solr.common.util.URLUtil()", "public org.apache.solr.common.util.URLUtil()"], ["java.lang.String", "org.apache.solr.common.util.URLUtil.removeScheme(java.lang.String)", "public static java.lang.String removeScheme(java.lang.String)"], ["boolean", "org.apache.solr.common.util.URLUtil.hasScheme(java.lang.String)", "public static boolean hasScheme(java.lang.String)"], ["java.lang.String", "org.apache.solr.common.util.URLUtil.getScheme(java.lang.String)", "public static java.lang.String getScheme(java.lang.String)"], ["org.apache.solr.common.util.XML", "org.apache.solr.common.util.XML()", "public org.apache.solr.common.util.XML()"], ["void", "org.apache.solr.common.util.XML.escapeCharData(java.lang.String, java.io.Writer)", "public static void escapeCharData(java.lang.String, java.io.Writer) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.escapeAttributeValue(java.lang.String, java.io.Writer)", "public static void escapeAttributeValue(java.lang.String, java.io.Writer) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.escapeAttributeValue(char[], int, int, java.io.Writer)", "public static void escapeAttributeValue(char[], int, int, java.io.Writer) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.writeXML(java.io.Writer, java.lang.String, java.lang.String)", "public static final void writeXML(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.writeUnescapedXML(java.io.Writer, java.lang.String, java.lang.String, java.lang.Object...)", "public static final void writeUnescapedXML(java.io.Writer, java.lang.String, java.lang.String, java.lang.Object...) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.writeXML(java.io.Writer, java.lang.String, java.lang.String, java.lang.Object...)", "public static final void writeXML(java.io.Writer, java.lang.String, java.lang.String, java.lang.Object...) throws java.io.IOException"], ["void", "org.apache.solr.common.util.XML.writeXML(java.io.Writer, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)", "public static void writeXML(java.io.Writer, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException"], ["org.apache.solr.common.util.XMLErrorLogger", "org.apache.solr.common.util.XMLErrorLogger(org.slf4j.Logger)", "public org.apache.solr.common.util.XMLErrorLogger(org.slf4j.Logger)"], ["void", "org.apache.solr.common.util.XMLErrorLogger.warning(org.xml.sax.SAXParseException)", "public void warning(org.xml.sax.SAXParseException)"], ["void", "org.apache.solr.common.util.XMLErrorLogger.error(org.xml.sax.SAXParseException)", "public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException"], ["void", "org.apache.solr.common.util.XMLErrorLogger.fatalError(org.xml.sax.SAXParseException)", "public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException"], ["void", "org.apache.solr.common.util.XMLErrorLogger.warning(javax.xml.transform.TransformerException)", "public void warning(javax.xml.transform.TransformerException)"], ["void", "org.apache.solr.common.util.XMLErrorLogger.error(javax.xml.transform.TransformerException)", "public void error(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException"], ["void", "org.apache.solr.common.util.XMLErrorLogger.fatalError(javax.xml.transform.TransformerException)", "public void fatalError(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException"], ["void", "org.apache.solr.common.util.XMLErrorLogger.report(java.lang.String, java.lang.String, java.lang.Object, javax.xml.stream.Location)", "public void report(java.lang.String, java.lang.String, java.lang.Object, javax.xml.stream.Location)"]]}