{"jsoup-1.8.2.jar": [["org.jsoup.Connection$Method[]", "org.jsoup.Connection$Method.values()", "public static org.jsoup.Connection$Method[] values()"], ["org.jsoup.Connection$Method", "org.jsoup.Connection$Method.valueOf(java.lang.String)", "public static org.jsoup.Connection$Method valueOf(java.lang.String)"], ["boolean", "org.jsoup.Connection$Method.hasBody()", "public final boolean hasBody()"], ["void", "org.jsoup.examples.HtmlToPlainText$FormattingVisitor.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.examples.HtmlToPlainText$FormattingVisitor.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["java.lang.String", "org.jsoup.examples.HtmlToPlainText$FormattingVisitor.toString()", "public java.lang.String toString()"], ["org.jsoup.examples.HtmlToPlainText", "org.jsoup.examples.HtmlToPlainText()", "public org.jsoup.examples.HtmlToPlainText()"], ["void", "org.jsoup.examples.HtmlToPlainText.main(java.lang.String...)", "public static void main(java.lang.String...) throws java.io.IOException"], ["java.lang.String", "org.jsoup.examples.HtmlToPlainText.getPlainText(org.jsoup.nodes.Element)", "public java.lang.String getPlainText(org.jsoup.nodes.Element)"], ["org.jsoup.examples.ListLinks", "org.jsoup.examples.ListLinks()", "public org.jsoup.examples.ListLinks()"], ["void", "org.jsoup.examples.ListLinks.main(java.lang.String[])", "public static void main(java.lang.String[]) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.helper.DataUtil.load(java.io.File, java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document load(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.helper.DataUtil.load(java.io.InputStream, java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document load(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.helper.DataUtil.load(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser)", "public static org.jsoup.nodes.Document load(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser) throws java.io.IOException"], ["boolean", "org.jsoup.helper.DescendableLinkedList$DescendingIterator.hasNext()", "public boolean hasNext()"], ["E", "org.jsoup.helper.DescendableLinkedList$DescendingIterator.next()", "public E next()"], ["void", "org.jsoup.helper.DescendableLinkedList$DescendingIterator.remove()", "public void remove()"], ["org.jsoup.helper.DescendableLinkedList", "org.jsoup.helper.DescendableLinkedList()", "public org.jsoup.helper.DescendableLinkedList()"], ["void", "org.jsoup.helper.DescendableLinkedList.push(E)", "public void push(E)"], ["E", "org.jsoup.helper.DescendableLinkedList.peekLast()", "public E peekLast()"], ["E", "org.jsoup.helper.DescendableLinkedList.pollLast()", "public E pollLast()"], ["java.util.Iterator<E>", "org.jsoup.helper.DescendableLinkedList.descendingIterator()", "public java.util.Iterator<E> descendingIterator()"], ["java.net.URL", "org.jsoup.helper.HttpConnection$Base.url()", "public java.net.URL url()"], ["T", "org.jsoup.helper.HttpConnection$Base.url(java.net.URL)", "public T url(java.net.URL)"], ["org.jsoup.Connection$Method", "org.jsoup.helper.HttpConnection$Base.method()", "public org.jsoup.Connection$Method method()"], ["T", "org.jsoup.helper.HttpConnection$Base.method(org.jsoup.Connection$Method)", "public T method(org.jsoup.Connection$Method)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Base.header(java.lang.String)", "public java.lang.String header(java.lang.String)"], ["T", "org.jsoup.helper.HttpConnection$Base.header(java.lang.String, java.lang.String)", "public T header(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.helper.HttpConnection$Base.hasHeader(java.lang.String)", "public boolean hasHeader(java.lang.String)"], ["boolean", "org.jsoup.helper.HttpConnection$Base.hasHeaderWithValue(java.lang.String, java.lang.String)", "public boolean hasHeaderWithValue(java.lang.String, java.lang.String)"], ["T", "org.jsoup.helper.HttpConnection$Base.removeHeader(java.lang.String)", "public T removeHeader(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.jsoup.helper.HttpConnection$Base.headers()", "public java.util.Map<java.lang.String, java.lang.String> headers()"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Base.cookie(java.lang.String)", "public java.lang.String cookie(java.lang.String)"], ["T", "org.jsoup.helper.HttpConnection$Base.cookie(java.lang.String, java.lang.String)", "public T cookie(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.helper.HttpConnection$Base.hasCookie(java.lang.String)", "public boolean hasCookie(java.lang.String)"], ["T", "org.jsoup.helper.HttpConnection$Base.removeCookie(java.lang.String)", "public T removeCookie(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.jsoup.helper.HttpConnection$Base.cookies()", "public java.util.Map<java.lang.String, java.lang.String> cookies()"], ["org.jsoup.helper.HttpConnection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.create(java.lang.String, java.lang.String)", "public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String)"], ["org.jsoup.helper.HttpConnection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.create(java.lang.String, java.lang.String, java.io.InputStream)", "public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String, java.io.InputStream)"], ["org.jsoup.helper.HttpConnection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.key(java.lang.String)", "public org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$KeyVal.key()", "public java.lang.String key()"], ["org.jsoup.helper.HttpConnection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.value(java.lang.String)", "public org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$KeyVal.value()", "public java.lang.String value()"], ["org.jsoup.helper.HttpConnection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.inputStream(java.io.InputStream)", "public org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)"], ["java.io.InputStream", "org.jsoup.helper.HttpConnection$KeyVal.inputStream()", "public java.io.InputStream inputStream()"], ["boolean", "org.jsoup.helper.HttpConnection$KeyVal.hasInputStream()", "public boolean hasInputStream()"], ["java.lang.String", "org.jsoup.helper.HttpConnection$KeyVal.toString()", "public java.lang.String toString()"], ["org.jsoup.Connection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.inputStream(java.io.InputStream)", "public org.jsoup.Connection$KeyVal inputStream(java.io.InputStream)"], ["org.jsoup.Connection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.value(java.lang.String)", "public org.jsoup.Connection$KeyVal value(java.lang.String)"], ["org.jsoup.Connection$KeyVal", "org.jsoup.helper.HttpConnection$KeyVal.key(java.lang.String)", "public org.jsoup.Connection$KeyVal key(java.lang.String)"], ["int", "org.jsoup.helper.HttpConnection$Request.timeout()", "public int timeout()"], ["org.jsoup.helper.HttpConnection$Request", "org.jsoup.helper.HttpConnection$Request.timeout(int)", "public org.jsoup.helper.HttpConnection$Request timeout(int)"], ["int", "org.jsoup.helper.HttpConnection$Request.maxBodySize()", "public int maxBodySize()"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.maxBodySize(int)", "public org.jsoup.Connection$Request maxBodySize(int)"], ["boolean", "org.jsoup.helper.HttpConnection$Request.followRedirects()", "public boolean followRedirects()"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.followRedirects(boolean)", "public org.jsoup.Connection$Request followRedirects(boolean)"], ["boolean", "org.jsoup.helper.HttpConnection$Request.ignoreHttpErrors()", "public boolean ignoreHttpErrors()"], ["boolean", "org.jsoup.helper.HttpConnection$Request.validateTLSCertificates()", "public boolean validateTLSCertificates()"], ["void", "org.jsoup.helper.HttpConnection$Request.validateTLSCertificates(boolean)", "public void validateTLSCertificates(boolean)"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.ignoreHttpErrors(boolean)", "public org.jsoup.Connection$Request ignoreHttpErrors(boolean)"], ["boolean", "org.jsoup.helper.HttpConnection$Request.ignoreContentType()", "public boolean ignoreContentType()"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.ignoreContentType(boolean)", "public org.jsoup.Connection$Request ignoreContentType(boolean)"], ["org.jsoup.helper.HttpConnection$Request", "org.jsoup.helper.HttpConnection$Request.data(org.jsoup.Connection$KeyVal)", "public org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal)"], ["java.util.Collection<org.jsoup.Connection$KeyVal>", "org.jsoup.helper.HttpConnection$Request.data()", "public java.util.Collection<org.jsoup.Connection$KeyVal> data()"], ["org.jsoup.helper.HttpConnection$Request", "org.jsoup.helper.HttpConnection$Request.parser(org.jsoup.parser.Parser)", "public org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser)"], ["org.jsoup.parser.Parser", "org.jsoup.helper.HttpConnection$Request.parser()", "public org.jsoup.parser.Parser parser()"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.postDataCharset(java.lang.String)", "public org.jsoup.Connection$Request postDataCharset(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Request.postDataCharset()", "public java.lang.String postDataCharset()"], ["java.util.Map", "org.jsoup.helper.HttpConnection$Request.cookies()", "public java.util.Map cookies()"], ["boolean", "org.jsoup.helper.HttpConnection$Request.hasCookie(java.lang.String)", "public boolean hasCookie(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Request.cookie(java.lang.String)", "public java.lang.String cookie(java.lang.String)"], ["java.util.Map", "org.jsoup.helper.HttpConnection$Request.headers()", "public java.util.Map headers()"], ["boolean", "org.jsoup.helper.HttpConnection$Request.hasHeaderWithValue(java.lang.String, java.lang.String)", "public boolean hasHeaderWithValue(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.helper.HttpConnection$Request.hasHeader(java.lang.String)", "public boolean hasHeader(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Request.header(java.lang.String)", "public java.lang.String header(java.lang.String)"], ["org.jsoup.Connection$Method", "org.jsoup.helper.HttpConnection$Request.method()", "public org.jsoup.Connection$Method method()"], ["java.net.URL", "org.jsoup.helper.HttpConnection$Request.url()", "public java.net.URL url()"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.parser(org.jsoup.parser.Parser)", "public org.jsoup.Connection$Request parser(org.jsoup.parser.Parser)"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.data(org.jsoup.Connection$KeyVal)", "public org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection$Request.timeout(int)", "public org.jsoup.Connection$Request timeout(int)"], ["boolean", "org.jsoup.helper.HttpConnection$Response$1.verify(java.lang.String, javax.net.ssl.SSLSession)", "public boolean verify(java.lang.String, javax.net.ssl.SSLSession)"], ["void", "org.jsoup.helper.HttpConnection$Response$2.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)", "public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["void", "org.jsoup.helper.HttpConnection$Response$2.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)", "public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["java.security.cert.X509Certificate[]", "org.jsoup.helper.HttpConnection$Response$2.getAcceptedIssuers()", "public java.security.cert.X509Certificate[] getAcceptedIssuers()"], ["int", "org.jsoup.helper.HttpConnection$Response.statusCode()", "public int statusCode()"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.statusMessage()", "public java.lang.String statusMessage()"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.charset()", "public java.lang.String charset()"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.contentType()", "public java.lang.String contentType()"], ["org.jsoup.nodes.Document", "org.jsoup.helper.HttpConnection$Response.parse()", "public org.jsoup.nodes.Document parse() throws java.io.IOException"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.body()", "public java.lang.String body()"], ["byte[]", "org.jsoup.helper.HttpConnection$Response.bodyAsBytes()", "public byte[] bodyAsBytes()"], ["java.util.Map", "org.jsoup.helper.HttpConnection$Response.cookies()", "public java.util.Map cookies()"], ["boolean", "org.jsoup.helper.HttpConnection$Response.hasCookie(java.lang.String)", "public boolean hasCookie(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.cookie(java.lang.String)", "public java.lang.String cookie(java.lang.String)"], ["java.util.Map", "org.jsoup.helper.HttpConnection$Response.headers()", "public java.util.Map headers()"], ["boolean", "org.jsoup.helper.HttpConnection$Response.hasHeaderWithValue(java.lang.String, java.lang.String)", "public boolean hasHeaderWithValue(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.helper.HttpConnection$Response.hasHeader(java.lang.String)", "public boolean hasHeader(java.lang.String)"], ["java.lang.String", "org.jsoup.helper.HttpConnection$Response.header(java.lang.String)", "public java.lang.String header(java.lang.String)"], ["org.jsoup.Connection$Method", "org.jsoup.helper.HttpConnection$Response.method()", "public org.jsoup.Connection$Method method()"], ["java.net.URL", "org.jsoup.helper.HttpConnection$Response.url()", "public java.net.URL url()"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.connect(java.lang.String)", "public static org.jsoup.Connection connect(java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.connect(java.net.URL)", "public static org.jsoup.Connection connect(java.net.URL)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.url(java.net.URL)", "public org.jsoup.Connection url(java.net.URL)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.url(java.lang.String)", "public org.jsoup.Connection url(java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.userAgent(java.lang.String)", "public org.jsoup.Connection userAgent(java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.timeout(int)", "public org.jsoup.Connection timeout(int)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.maxBodySize(int)", "public org.jsoup.Connection maxBodySize(int)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.followRedirects(boolean)", "public org.jsoup.Connection followRedirects(boolean)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.referrer(java.lang.String)", "public org.jsoup.Connection referrer(java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.method(org.jsoup.Connection$Method)", "public org.jsoup.Connection method(org.jsoup.Connection$Method)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.ignoreHttpErrors(boolean)", "public org.jsoup.Connection ignoreHttpErrors(boolean)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.ignoreContentType(boolean)", "public org.jsoup.Connection ignoreContentType(boolean)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.validateTLSCertificates(boolean)", "public org.jsoup.Connection validateTLSCertificates(boolean)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.data(java.lang.String, java.lang.String)", "public org.jsoup.Connection data(java.lang.String, java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.data(java.lang.String, java.lang.String, java.io.InputStream)", "public org.jsoup.Connection data(java.lang.String, java.lang.String, java.io.InputStream)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.data(java.util.Map<java.lang.String, java.lang.String>)", "public org.jsoup.Connection data(java.util.Map<java.lang.String, java.lang.String>)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.data(java.lang.String...)", "public org.jsoup.Connection data(java.lang.String...)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.data(java.util.Collection<org.jsoup.Connection$KeyVal>)", "public org.jsoup.Connection data(java.util.Collection<org.jsoup.Connection$KeyVal>)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.header(java.lang.String, java.lang.String)", "public org.jsoup.Connection header(java.lang.String, java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.cookie(java.lang.String, java.lang.String)", "public org.jsoup.Connection cookie(java.lang.String, java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.cookies(java.util.Map<java.lang.String, java.lang.String>)", "public org.jsoup.Connection cookies(java.util.Map<java.lang.String, java.lang.String>)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.parser(org.jsoup.parser.Parser)", "public org.jsoup.Connection parser(org.jsoup.parser.Parser)"], ["org.jsoup.nodes.Document", "org.jsoup.helper.HttpConnection.get()", "public org.jsoup.nodes.Document get() throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.helper.HttpConnection.post()", "public org.jsoup.nodes.Document post() throws java.io.IOException"], ["org.jsoup.Connection$Response", "org.jsoup.helper.HttpConnection.execute()", "public org.jsoup.Connection$Response execute() throws java.io.IOException"], ["org.jsoup.Connection$Request", "org.jsoup.helper.HttpConnection.request()", "public org.jsoup.Connection$Request request()"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.request(org.jsoup.Connection$Request)", "public org.jsoup.Connection request(org.jsoup.Connection$Request)"], ["org.jsoup.Connection$Response", "org.jsoup.helper.HttpConnection.response()", "public org.jsoup.Connection$Response response()"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.response(org.jsoup.Connection$Response)", "public org.jsoup.Connection response(org.jsoup.Connection$Response)"], ["org.jsoup.Connection", "org.jsoup.helper.HttpConnection.postDataCharset(java.lang.String)", "public org.jsoup.Connection postDataCharset(java.lang.String)"], ["org.jsoup.helper.StringUtil", "org.jsoup.helper.StringUtil()", "public org.jsoup.helper.StringUtil()"], ["java.lang.String", "org.jsoup.helper.StringUtil.join(java.util.Collection, java.lang.String)", "public static java.lang.String join(java.util.Collection, java.lang.String)"], ["java.lang.String", "org.jsoup.helper.StringUtil.join(java.util.Iterator, java.lang.String)", "public static java.lang.String join(java.util.Iterator, java.lang.String)"], ["java.lang.String", "org.jsoup.helper.StringUtil.padding(int)", "public static java.lang.String padding(int)"], ["boolean", "org.jsoup.helper.StringUtil.isBlank(java.lang.String)", "public static boolean isBlank(java.lang.String)"], ["boolean", "org.jsoup.helper.StringUtil.isNumeric(java.lang.String)", "public static boolean isNumeric(java.lang.String)"], ["boolean", "org.jsoup.helper.StringUtil.isWhitespace(int)", "public static boolean isWhitespace(int)"], ["java.lang.String", "org.jsoup.helper.StringUtil.normaliseWhitespace(java.lang.String)", "public static java.lang.String normaliseWhitespace(java.lang.String)"], ["void", "org.jsoup.helper.StringUtil.appendNormalisedWhitespace(java.lang.StringBuilder, java.lang.String, boolean)", "public static void appendNormalisedWhitespace(java.lang.StringBuilder, java.lang.String, boolean)"], ["boolean", "org.jsoup.helper.StringUtil.in(java.lang.String, java.lang.String...)", "public static boolean in(java.lang.String, java.lang.String...)"], ["void", "org.jsoup.helper.Validate.notNull(java.lang.Object)", "public static void notNull(java.lang.Object)"], ["void", "org.jsoup.helper.Validate.notNull(java.lang.Object, java.lang.String)", "public static void notNull(java.lang.Object, java.lang.String)"], ["void", "org.jsoup.helper.Validate.isTrue(boolean)", "public static void isTrue(boolean)"], ["void", "org.jsoup.helper.Validate.isTrue(boolean, java.lang.String)", "public static void isTrue(boolean, java.lang.String)"], ["void", "org.jsoup.helper.Validate.isFalse(boolean)", "public static void isFalse(boolean)"], ["void", "org.jsoup.helper.Validate.isFalse(boolean, java.lang.String)", "public static void isFalse(boolean, java.lang.String)"], ["void", "org.jsoup.helper.Validate.noNullElements(java.lang.Object[])", "public static void noNullElements(java.lang.Object[])"], ["void", "org.jsoup.helper.Validate.noNullElements(java.lang.Object[], java.lang.String)", "public static void noNullElements(java.lang.Object[], java.lang.String)"], ["void", "org.jsoup.helper.Validate.notEmpty(java.lang.String)", "public static void notEmpty(java.lang.String)"], ["void", "org.jsoup.helper.Validate.notEmpty(java.lang.String, java.lang.String)", "public static void notEmpty(java.lang.String, java.lang.String)"], ["void", "org.jsoup.helper.Validate.fail(java.lang.String)", "public static void fail(java.lang.String)"], ["org.jsoup.helper.W3CDom$W3CBuilder", "org.jsoup.helper.W3CDom$W3CBuilder(org.jsoup.helper.W3CDom, org.w3c.dom.Document)", "public org.jsoup.helper.W3CDom$W3CBuilder(org.jsoup.helper.W3CDom, org.w3c.dom.Document)"], ["void", "org.jsoup.helper.W3CDom$W3CBuilder.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.helper.W3CDom$W3CBuilder.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["org.jsoup.helper.W3CDom", "org.jsoup.helper.W3CDom()", "public org.jsoup.helper.W3CDom()"], ["org.w3c.dom.Document", "org.jsoup.helper.W3CDom.fromJsoup(org.jsoup.nodes.Document)", "public org.w3c.dom.Document fromJsoup(org.jsoup.nodes.Document)"], ["void", "org.jsoup.helper.W3CDom.convert(org.jsoup.nodes.Document, org.w3c.dom.Document)", "public void convert(org.jsoup.nodes.Document, org.w3c.dom.Document)"], ["java.lang.String", "org.jsoup.helper.W3CDom.asString(org.w3c.dom.Document)", "public java.lang.String asString(org.w3c.dom.Document)"], ["org.jsoup.HttpStatusException", "org.jsoup.HttpStatusException(java.lang.String, int, java.lang.String)", "public org.jsoup.HttpStatusException(java.lang.String, int, java.lang.String)"], ["int", "org.jsoup.HttpStatusException.getStatusCode()", "public int getStatusCode()"], ["java.lang.String", "org.jsoup.HttpStatusException.getUrl()", "public java.lang.String getUrl()"], ["java.lang.String", "org.jsoup.HttpStatusException.toString()", "public java.lang.String toString()"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.lang.String, java.lang.String, org.jsoup.parser.Parser)", "public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.Parser)"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.lang.String)", "public static org.jsoup.nodes.Document parse(java.lang.String)"], ["org.jsoup.Connection", "org.jsoup.Jsoup.connect(java.lang.String)", "public static org.jsoup.Connection connect(java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.io.File, java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.io.File, java.lang.String)", "public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.io.InputStream, java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser)", "public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser) throws java.io.IOException"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parseBodyFragment(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parseBodyFragment(java.lang.String)", "public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.Jsoup.parse(java.net.URL, int)", "public static org.jsoup.nodes.Document parse(java.net.URL, int) throws java.io.IOException"], ["java.lang.String", "org.jsoup.Jsoup.clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist)", "public static java.lang.String clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist)"], ["java.lang.String", "org.jsoup.Jsoup.clean(java.lang.String, org.jsoup.safety.Whitelist)", "public static java.lang.String clean(java.lang.String, org.jsoup.safety.Whitelist)"], ["java.lang.String", "org.jsoup.Jsoup.clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist, org.jsoup.nodes.Document$OutputSettings)", "public static java.lang.String clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist, org.jsoup.nodes.Document$OutputSettings)"], ["boolean", "org.jsoup.Jsoup.isValid(java.lang.String, org.jsoup.safety.Whitelist)", "public static boolean isValid(java.lang.String, org.jsoup.safety.Whitelist)"], ["org.jsoup.nodes.Attribute", "org.jsoup.nodes.Attribute(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Attribute(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Attribute.getKey()", "public java.lang.String getKey()"], ["void", "org.jsoup.nodes.Attribute.setKey(java.lang.String)", "public void setKey(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Attribute.getValue()", "public java.lang.String getValue()"], ["java.lang.String", "org.jsoup.nodes.Attribute.setValue(java.lang.String)", "public java.lang.String setValue(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Attribute.html()", "public java.lang.String html()"], ["java.lang.String", "org.jsoup.nodes.Attribute.toString()", "public java.lang.String toString()"], ["org.jsoup.nodes.Attribute", "org.jsoup.nodes.Attribute.createFromEncoded(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Attribute createFromEncoded(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.nodes.Attribute.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.nodes.Attribute.hashCode()", "public int hashCode()"], ["org.jsoup.nodes.Attribute", "org.jsoup.nodes.Attribute.clone()", "public org.jsoup.nodes.Attribute clone()"], ["java.lang.Object", "org.jsoup.nodes.Attribute.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["java.lang.Object", "org.jsoup.nodes.Attribute.setValue(java.lang.Object)", "public java.lang.Object setValue(java.lang.Object)"], ["java.lang.Object", "org.jsoup.nodes.Attribute.getValue()", "public java.lang.Object getValue()"], ["java.lang.Object", "org.jsoup.nodes.Attribute.getKey()", "public java.lang.Object getKey()"], ["boolean", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator.hasNext()", "public boolean hasNext()"], ["java.util.Map$Entry<java.lang.String, java.lang.String>", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator.next()", "public java.util.Map$Entry<java.lang.String, java.lang.String> next()"], ["void", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator.remove()", "public void remove()"], ["java.lang.Object", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator.next()", "public java.lang.Object next()"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>>", "org.jsoup.nodes.Attributes$Dataset$EntrySet.iterator()", "public java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>> iterator()"], ["int", "org.jsoup.nodes.Attributes$Dataset$EntrySet.size()", "public int size()"], ["java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.String>>", "org.jsoup.nodes.Attributes$Dataset.entrySet()", "public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.String>> entrySet()"], ["java.lang.String", "org.jsoup.nodes.Attributes$Dataset.put(java.lang.String, java.lang.String)", "public java.lang.String put(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.jsoup.nodes.Attributes$Dataset.put(java.lang.Object, java.lang.Object)", "public java.lang.Object put(java.lang.Object, java.lang.Object)"], ["org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes()", "public org.jsoup.nodes.Attributes()"], ["java.lang.String", "org.jsoup.nodes.Attributes.get(java.lang.String)", "public java.lang.String get(java.lang.String)"], ["void", "org.jsoup.nodes.Attributes.put(java.lang.String, java.lang.String)", "public void put(java.lang.String, java.lang.String)"], ["void", "org.jsoup.nodes.Attributes.put(org.jsoup.nodes.Attribute)", "public void put(org.jsoup.nodes.Attribute)"], ["void", "org.jsoup.nodes.Attributes.remove(java.lang.String)", "public void remove(java.lang.String)"], ["boolean", "org.jsoup.nodes.Attributes.hasKey(java.lang.String)", "public boolean hasKey(java.lang.String)"], ["int", "org.jsoup.nodes.Attributes.size()", "public int size()"], ["void", "org.jsoup.nodes.Attributes.addAll(org.jsoup.nodes.Attributes)", "public void addAll(org.jsoup.nodes.Attributes)"], ["java.util.Iterator<org.jsoup.nodes.Attribute>", "org.jsoup.nodes.Attributes.iterator()", "public java.util.Iterator<org.jsoup.nodes.Attribute> iterator()"], ["java.util.List<org.jsoup.nodes.Attribute>", "org.jsoup.nodes.Attributes.asList()", "public java.util.List<org.jsoup.nodes.Attribute> asList()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.jsoup.nodes.Attributes.dataset()", "public java.util.Map<java.lang.String, java.lang.String> dataset()"], ["java.lang.String", "org.jsoup.nodes.Attributes.html()", "public java.lang.String html()"], ["java.lang.String", "org.jsoup.nodes.Attributes.toString()", "public java.lang.String toString()"], ["boolean", "org.jsoup.nodes.Attributes.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.nodes.Attributes.hashCode()", "public int hashCode()"], ["org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes.clone()", "public org.jsoup.nodes.Attributes clone()"], ["java.lang.Object", "org.jsoup.nodes.Attributes.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.jsoup.nodes.Comment", "org.jsoup.nodes.Comment(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Comment(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Comment.nodeName()", "public java.lang.String nodeName()"], ["java.lang.String", "org.jsoup.nodes.Comment.getData()", "public java.lang.String getData()"], ["java.lang.String", "org.jsoup.nodes.Comment.toString()", "public java.lang.String toString()"], ["org.jsoup.nodes.DataNode", "org.jsoup.nodes.DataNode(java.lang.String, java.lang.String)", "public org.jsoup.nodes.DataNode(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.DataNode.nodeName()", "public java.lang.String nodeName()"], ["java.lang.String", "org.jsoup.nodes.DataNode.getWholeData()", "public java.lang.String getWholeData()"], ["org.jsoup.nodes.DataNode", "org.jsoup.nodes.DataNode.setWholeData(java.lang.String)", "public org.jsoup.nodes.DataNode setWholeData(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.DataNode.toString()", "public java.lang.String toString()"], ["org.jsoup.nodes.DataNode", "org.jsoup.nodes.DataNode.createFromEncoded(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.DataNode createFromEncoded(java.lang.String, java.lang.String)"], ["org.jsoup.nodes.Document$OutputSettings$Syntax[]", "org.jsoup.nodes.Document$OutputSettings$Syntax.values()", "public static org.jsoup.nodes.Document$OutputSettings$Syntax[] values()"], ["org.jsoup.nodes.Document$OutputSettings$Syntax", "org.jsoup.nodes.Document$OutputSettings$Syntax.valueOf(java.lang.String)", "public static org.jsoup.nodes.Document$OutputSettings$Syntax valueOf(java.lang.String)"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings()", "public org.jsoup.nodes.Document$OutputSettings()"], ["org.jsoup.nodes.Entities$EscapeMode", "org.jsoup.nodes.Document$OutputSettings.escapeMode()", "public org.jsoup.nodes.Entities$EscapeMode escapeMode()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.escapeMode(org.jsoup.nodes.Entities$EscapeMode)", "public org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode)"], ["java.nio.charset.Charset", "org.jsoup.nodes.Document$OutputSettings.charset()", "public java.nio.charset.Charset charset()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.charset(java.nio.charset.Charset)", "public org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset)"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.charset(java.lang.String)", "public org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)"], ["org.jsoup.nodes.Document$OutputSettings$Syntax", "org.jsoup.nodes.Document$OutputSettings.syntax()", "public org.jsoup.nodes.Document$OutputSettings$Syntax syntax()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.syntax(org.jsoup.nodes.Document$OutputSettings$Syntax)", "public org.jsoup.nodes.Document$OutputSettings syntax(org.jsoup.nodes.Document$OutputSettings$Syntax)"], ["boolean", "org.jsoup.nodes.Document$OutputSettings.prettyPrint()", "public boolean prettyPrint()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.prettyPrint(boolean)", "public org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean)"], ["boolean", "org.jsoup.nodes.Document$OutputSettings.outline()", "public boolean outline()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.outline(boolean)", "public org.jsoup.nodes.Document$OutputSettings outline(boolean)"], ["int", "org.jsoup.nodes.Document$OutputSettings.indentAmount()", "public int indentAmount()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.indentAmount(int)", "public org.jsoup.nodes.Document$OutputSettings indentAmount(int)"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document$OutputSettings.clone()", "public org.jsoup.nodes.Document$OutputSettings clone()"], ["java.lang.Object", "org.jsoup.nodes.Document$OutputSettings.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.jsoup.nodes.Document$QuirksMode[]", "org.jsoup.nodes.Document$QuirksMode.values()", "public static org.jsoup.nodes.Document$QuirksMode[] values()"], ["org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document$QuirksMode.valueOf(java.lang.String)", "public static org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document(java.lang.String)", "public org.jsoup.nodes.Document(java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document.createShell(java.lang.String)", "public static org.jsoup.nodes.Document createShell(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Document.location()", "public java.lang.String location()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Document.head()", "public org.jsoup.nodes.Element head()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Document.body()", "public org.jsoup.nodes.Element body()"], ["java.lang.String", "org.jsoup.nodes.Document.title()", "public java.lang.String title()"], ["void", "org.jsoup.nodes.Document.title(java.lang.String)", "public void title(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Document.createElement(java.lang.String)", "public org.jsoup.nodes.Element createElement(java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document.normalise()", "public org.jsoup.nodes.Document normalise()"], ["java.lang.String", "org.jsoup.nodes.Document.outerHtml()", "public java.lang.String outerHtml()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Document.text(java.lang.String)", "public org.jsoup.nodes.Element text(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Document.nodeName()", "public java.lang.String nodeName()"], ["void", "org.jsoup.nodes.Document.charset(java.nio.charset.Charset)", "public void charset(java.nio.charset.Charset)"], ["java.nio.charset.Charset", "org.jsoup.nodes.Document.charset()", "public java.nio.charset.Charset charset()"], ["void", "org.jsoup.nodes.Document.updateMetaCharsetElement(boolean)", "public void updateMetaCharsetElement(boolean)"], ["boolean", "org.jsoup.nodes.Document.updateMetaCharsetElement()", "public boolean updateMetaCharsetElement()"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document.clone()", "public org.jsoup.nodes.Document clone()"], ["org.jsoup.nodes.Document$OutputSettings", "org.jsoup.nodes.Document.outputSettings()", "public org.jsoup.nodes.Document$OutputSettings outputSettings()"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document.outputSettings(org.jsoup.nodes.Document$OutputSettings)", "public org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings)"], ["org.jsoup.nodes.Document$QuirksMode", "org.jsoup.nodes.Document.quirksMode()", "public org.jsoup.nodes.Document$QuirksMode quirksMode()"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Document.quirksMode(org.jsoup.nodes.Document$QuirksMode)", "public org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)"], ["boolean", "org.jsoup.nodes.Document.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Document.clone()", "public org.jsoup.nodes.Element clone()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Document.clone()", "public org.jsoup.nodes.Node clone()"], ["java.lang.Object", "org.jsoup.nodes.Document.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.jsoup.nodes.DocumentType", "org.jsoup.nodes.DocumentType(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public org.jsoup.nodes.DocumentType(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.DocumentType.nodeName()", "public java.lang.String nodeName()"], ["void", "org.jsoup.nodes.Element$1.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.nodes.Element$1.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element(org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes)", "public org.jsoup.nodes.Element(org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element(org.jsoup.parser.Tag, java.lang.String)", "public org.jsoup.nodes.Element(org.jsoup.parser.Tag, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Element.nodeName()", "public java.lang.String nodeName()"], ["java.lang.String", "org.jsoup.nodes.Element.tagName()", "public java.lang.String tagName()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.tagName(java.lang.String)", "public org.jsoup.nodes.Element tagName(java.lang.String)"], ["org.jsoup.parser.Tag", "org.jsoup.nodes.Element.tag()", "public org.jsoup.parser.Tag tag()"], ["boolean", "org.jsoup.nodes.Element.isBlock()", "public boolean isBlock()"], ["java.lang.String", "org.jsoup.nodes.Element.id()", "public java.lang.String id()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.attr(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Element attr(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.jsoup.nodes.Element.dataset()", "public java.util.Map<java.lang.String, java.lang.String> dataset()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.parent()", "public final org.jsoup.nodes.Element parent()"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.parents()", "public org.jsoup.select.Elements parents()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.child(int)", "public org.jsoup.nodes.Element child(int)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.children()", "public org.jsoup.select.Elements children()"], ["java.util.List<org.jsoup.nodes.TextNode>", "org.jsoup.nodes.Element.textNodes()", "public java.util.List<org.jsoup.nodes.TextNode> textNodes()"], ["java.util.List<org.jsoup.nodes.DataNode>", "org.jsoup.nodes.Element.dataNodes()", "public java.util.List<org.jsoup.nodes.DataNode> dataNodes()"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.select(java.lang.String)", "public org.jsoup.select.Elements select(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.appendChild(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.prependChild(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.insertChildren(int, java.util.Collection<? extends org.jsoup.nodes.Node>)", "public org.jsoup.nodes.Element insertChildren(int, java.util.Collection<? extends org.jsoup.nodes.Node>)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.appendElement(java.lang.String)", "public org.jsoup.nodes.Element appendElement(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.prependElement(java.lang.String)", "public org.jsoup.nodes.Element prependElement(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.appendText(java.lang.String)", "public org.jsoup.nodes.Element appendText(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.prependText(java.lang.String)", "public org.jsoup.nodes.Element prependText(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.append(java.lang.String)", "public org.jsoup.nodes.Element append(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.prepend(java.lang.String)", "public org.jsoup.nodes.Element prepend(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.before(java.lang.String)", "public org.jsoup.nodes.Element before(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.before(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Element before(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.after(java.lang.String)", "public org.jsoup.nodes.Element after(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.after(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Element after(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.empty()", "public org.jsoup.nodes.Element empty()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.wrap(java.lang.String)", "public org.jsoup.nodes.Element wrap(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Element.cssSelector()", "public java.lang.String cssSelector()"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.siblingElements()", "public org.jsoup.select.Elements siblingElements()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.nextElementSibling()", "public org.jsoup.nodes.Element nextElementSibling()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.previousElementSibling()", "public org.jsoup.nodes.Element previousElementSibling()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.firstElementSibling()", "public org.jsoup.nodes.Element firstElementSibling()"], ["java.lang.Integer", "org.jsoup.nodes.Element.elementSiblingIndex()", "public java.lang.Integer elementSiblingIndex()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.lastElementSibling()", "public org.jsoup.nodes.Element lastElementSibling()"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByTag(java.lang.String)", "public org.jsoup.select.Elements getElementsByTag(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.getElementById(java.lang.String)", "public org.jsoup.nodes.Element getElementById(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByClass(java.lang.String)", "public org.jsoup.select.Elements getElementsByClass(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttribute(java.lang.String)", "public org.jsoup.select.Elements getElementsByAttribute(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeStarting(java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeStarting(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValue(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValue(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueNot(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValueNot(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueStarting(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValueStarting(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueEnding(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValueEnding(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueContaining(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValueContaining(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueMatching(java.lang.String, java.util.regex.Pattern)", "public org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String, java.util.regex.Pattern)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByAttributeValueMatching(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByIndexLessThan(int)", "public org.jsoup.select.Elements getElementsByIndexLessThan(int)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByIndexGreaterThan(int)", "public org.jsoup.select.Elements getElementsByIndexGreaterThan(int)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsByIndexEquals(int)", "public org.jsoup.select.Elements getElementsByIndexEquals(int)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsContainingText(java.lang.String)", "public org.jsoup.select.Elements getElementsContainingText(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsContainingOwnText(java.lang.String)", "public org.jsoup.select.Elements getElementsContainingOwnText(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsMatchingText(java.util.regex.Pattern)", "public org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsMatchingText(java.lang.String)", "public org.jsoup.select.Elements getElementsMatchingText(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsMatchingOwnText(java.util.regex.Pattern)", "public org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getElementsMatchingOwnText(java.lang.String)", "public org.jsoup.select.Elements getElementsMatchingOwnText(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.Element.getAllElements()", "public org.jsoup.select.Elements getAllElements()"], ["java.lang.String", "org.jsoup.nodes.Element.text()", "public java.lang.String text()"], ["java.lang.String", "org.jsoup.nodes.Element.ownText()", "public java.lang.String ownText()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.text(java.lang.String)", "public org.jsoup.nodes.Element text(java.lang.String)"], ["boolean", "org.jsoup.nodes.Element.hasText()", "public boolean hasText()"], ["java.lang.String", "org.jsoup.nodes.Element.data()", "public java.lang.String data()"], ["java.lang.String", "org.jsoup.nodes.Element.className()", "public java.lang.String className()"], ["java.util.Set<java.lang.String>", "org.jsoup.nodes.Element.classNames()", "public java.util.Set<java.lang.String> classNames()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.classNames(java.util.Set<java.lang.String>)", "public org.jsoup.nodes.Element classNames(java.util.Set<java.lang.String>)"], ["boolean", "org.jsoup.nodes.Element.hasClass(java.lang.String)", "public boolean hasClass(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.addClass(java.lang.String)", "public org.jsoup.nodes.Element addClass(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.removeClass(java.lang.String)", "public org.jsoup.nodes.Element removeClass(java.lang.String)"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.toggleClass(java.lang.String)", "public org.jsoup.nodes.Element toggleClass(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Element.val()", "public java.lang.String val()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.val(java.lang.String)", "public org.jsoup.nodes.Element val(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Element.html()", "public java.lang.String html()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.html(java.lang.String)", "public org.jsoup.nodes.Element html(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Element.toString()", "public java.lang.String toString()"], ["boolean", "org.jsoup.nodes.Element.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.nodes.Element.hashCode()", "public int hashCode()"], ["org.jsoup.nodes.Element", "org.jsoup.nodes.Element.clone()", "public org.jsoup.nodes.Element clone()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.clone()", "public org.jsoup.nodes.Node clone()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.wrap(java.lang.String)", "public org.jsoup.nodes.Node wrap(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.after(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Node after(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.after(java.lang.String)", "public org.jsoup.nodes.Node after(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.before(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Node before(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.before(java.lang.String)", "public org.jsoup.nodes.Node before(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.parent()", "public org.jsoup.nodes.Node parent()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Element.attr(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.jsoup.nodes.Element.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.jsoup.nodes.Entities$CoreCharset[]", "org.jsoup.nodes.Entities$CoreCharset.values()", "public static org.jsoup.nodes.Entities$CoreCharset[] values()"], ["org.jsoup.nodes.Entities$CoreCharset", "org.jsoup.nodes.Entities$CoreCharset.valueOf(java.lang.String)", "public static org.jsoup.nodes.Entities$CoreCharset valueOf(java.lang.String)"], ["org.jsoup.nodes.Entities$EscapeMode[]", "org.jsoup.nodes.Entities$EscapeMode.values()", "public static org.jsoup.nodes.Entities$EscapeMode[] values()"], ["org.jsoup.nodes.Entities$EscapeMode", "org.jsoup.nodes.Entities$EscapeMode.valueOf(java.lang.String)", "public static org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String)"], ["java.util.Map<java.lang.Character, java.lang.String>", "org.jsoup.nodes.Entities$EscapeMode.getMap()", "public java.util.Map<java.lang.Character, java.lang.String> getMap()"], ["boolean", "org.jsoup.nodes.Entities.isNamedEntity(java.lang.String)", "public static boolean isNamedEntity(java.lang.String)"], ["boolean", "org.jsoup.nodes.Entities.isBaseNamedEntity(java.lang.String)", "public static boolean isBaseNamedEntity(java.lang.String)"], ["java.lang.Character", "org.jsoup.nodes.Entities.getCharacterByName(java.lang.String)", "public static java.lang.Character getCharacterByName(java.lang.String)"], ["org.jsoup.nodes.FormElement", "org.jsoup.nodes.FormElement(org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes)", "public org.jsoup.nodes.FormElement(org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes)"], ["org.jsoup.select.Elements", "org.jsoup.nodes.FormElement.elements()", "public org.jsoup.select.Elements elements()"], ["org.jsoup.nodes.FormElement", "org.jsoup.nodes.FormElement.addElement(org.jsoup.nodes.Element)", "public org.jsoup.nodes.FormElement addElement(org.jsoup.nodes.Element)"], ["org.jsoup.Connection", "org.jsoup.nodes.FormElement.submit()", "public org.jsoup.Connection submit()"], ["java.util.List<org.jsoup.Connection$KeyVal>", "org.jsoup.nodes.FormElement.formData()", "public java.util.List<org.jsoup.Connection$KeyVal> formData()"], ["boolean", "org.jsoup.nodes.FormElement.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["void", "org.jsoup.nodes.Node$1.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.nodes.Node$1.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.nodes.Node$OuterHtmlVisitor.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.nodes.Node$OuterHtmlVisitor.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["java.lang.String", "org.jsoup.nodes.Node.attr(java.lang.String)", "public java.lang.String attr(java.lang.String)"], ["org.jsoup.nodes.Attributes", "org.jsoup.nodes.Node.attributes()", "public org.jsoup.nodes.Attributes attributes()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.attr(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.nodes.Node.hasAttr(java.lang.String)", "public boolean hasAttr(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.removeAttr(java.lang.String)", "public org.jsoup.nodes.Node removeAttr(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Node.baseUri()", "public java.lang.String baseUri()"], ["void", "org.jsoup.nodes.Node.setBaseUri(java.lang.String)", "public void setBaseUri(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.Node.absUrl(java.lang.String)", "public java.lang.String absUrl(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.childNode(int)", "public org.jsoup.nodes.Node childNode(int)"], ["java.util.List<org.jsoup.nodes.Node>", "org.jsoup.nodes.Node.childNodes()", "public java.util.List<org.jsoup.nodes.Node> childNodes()"], ["java.util.List<org.jsoup.nodes.Node>", "org.jsoup.nodes.Node.childNodesCopy()", "public java.util.List<org.jsoup.nodes.Node> childNodesCopy()"], ["int", "org.jsoup.nodes.Node.childNodeSize()", "public final int childNodeSize()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.parent()", "public org.jsoup.nodes.Node parent()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.parentNode()", "public final org.jsoup.nodes.Node parentNode()"], ["org.jsoup.nodes.Document", "org.jsoup.nodes.Node.ownerDocument()", "public org.jsoup.nodes.Document ownerDocument()"], ["void", "org.jsoup.nodes.Node.remove()", "public void remove()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.before(java.lang.String)", "public org.jsoup.nodes.Node before(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.before(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Node before(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.after(java.lang.String)", "public org.jsoup.nodes.Node after(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.after(org.jsoup.nodes.Node)", "public org.jsoup.nodes.Node after(org.jsoup.nodes.Node)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.wrap(java.lang.String)", "public org.jsoup.nodes.Node wrap(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.unwrap()", "public org.jsoup.nodes.Node unwrap()"], ["void", "org.jsoup.nodes.Node.replaceWith(org.jsoup.nodes.Node)", "public void replaceWith(org.jsoup.nodes.Node)"], ["java.util.List<org.jsoup.nodes.Node>", "org.jsoup.nodes.Node.siblingNodes()", "public java.util.List<org.jsoup.nodes.Node> siblingNodes()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.nextSibling()", "public org.jsoup.nodes.Node nextSibling()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.previousSibling()", "public org.jsoup.nodes.Node previousSibling()"], ["int", "org.jsoup.nodes.Node.siblingIndex()", "public int siblingIndex()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.traverse(org.jsoup.select.NodeVisitor)", "public org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor)"], ["java.lang.String", "org.jsoup.nodes.Node.outerHtml()", "public java.lang.String outerHtml()"], ["java.lang.String", "org.jsoup.nodes.Node.toString()", "public java.lang.String toString()"], ["boolean", "org.jsoup.nodes.Node.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.nodes.Node.hashCode()", "public int hashCode()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.Node.clone()", "public org.jsoup.nodes.Node clone()"], ["java.lang.Object", "org.jsoup.nodes.Node.clone()", "public java.lang.Object clone() throws java.lang.CloneNotSupportedException"], ["org.jsoup.nodes.TextNode", "org.jsoup.nodes.TextNode(java.lang.String, java.lang.String)", "public org.jsoup.nodes.TextNode(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.TextNode.nodeName()", "public java.lang.String nodeName()"], ["java.lang.String", "org.jsoup.nodes.TextNode.text()", "public java.lang.String text()"], ["org.jsoup.nodes.TextNode", "org.jsoup.nodes.TextNode.text(java.lang.String)", "public org.jsoup.nodes.TextNode text(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.TextNode.getWholeText()", "public java.lang.String getWholeText()"], ["boolean", "org.jsoup.nodes.TextNode.isBlank()", "public boolean isBlank()"], ["org.jsoup.nodes.TextNode", "org.jsoup.nodes.TextNode.splitText(int)", "public org.jsoup.nodes.TextNode splitText(int)"], ["java.lang.String", "org.jsoup.nodes.TextNode.toString()", "public java.lang.String toString()"], ["org.jsoup.nodes.TextNode", "org.jsoup.nodes.TextNode.createFromEncoded(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.TextNode createFromEncoded(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.TextNode.attr(java.lang.String)", "public java.lang.String attr(java.lang.String)"], ["org.jsoup.nodes.Attributes", "org.jsoup.nodes.TextNode.attributes()", "public org.jsoup.nodes.Attributes attributes()"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.TextNode.attr(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.nodes.TextNode.hasAttr(java.lang.String)", "public boolean hasAttr(java.lang.String)"], ["org.jsoup.nodes.Node", "org.jsoup.nodes.TextNode.removeAttr(java.lang.String)", "public org.jsoup.nodes.Node removeAttr(java.lang.String)"], ["java.lang.String", "org.jsoup.nodes.TextNode.absUrl(java.lang.String)", "public java.lang.String absUrl(java.lang.String)"], ["boolean", "org.jsoup.nodes.TextNode.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.nodes.TextNode.hashCode()", "public int hashCode()"], ["org.jsoup.nodes.XmlDeclaration", "org.jsoup.nodes.XmlDeclaration(java.lang.String, java.lang.String, boolean)", "public org.jsoup.nodes.XmlDeclaration(java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.jsoup.nodes.XmlDeclaration.nodeName()", "public java.lang.String nodeName()"], ["java.lang.String", "org.jsoup.nodes.XmlDeclaration.getWholeDeclaration()", "public java.lang.String getWholeDeclaration()"], ["java.lang.String", "org.jsoup.nodes.XmlDeclaration.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.CharacterReader.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.HtmlTreeBuilder.toString()", "public java.lang.String toString()"], ["org.jsoup.parser.HtmlTreeBuilderState[]", "org.jsoup.parser.HtmlTreeBuilderState.values()", "public static org.jsoup.parser.HtmlTreeBuilderState[] values()"], ["org.jsoup.parser.HtmlTreeBuilderState", "org.jsoup.parser.HtmlTreeBuilderState.valueOf(java.lang.String)", "public static org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.ParseError.getErrorMessage()", "public java.lang.String getErrorMessage()"], ["int", "org.jsoup.parser.ParseError.getPosition()", "public int getPosition()"], ["java.lang.String", "org.jsoup.parser.ParseError.toString()", "public java.lang.String toString()"], ["org.jsoup.parser.Parser", "org.jsoup.parser.Parser(org.jsoup.parser.TreeBuilder)", "public org.jsoup.parser.Parser(org.jsoup.parser.TreeBuilder)"], ["org.jsoup.nodes.Document", "org.jsoup.parser.Parser.parseInput(java.lang.String, java.lang.String)", "public org.jsoup.nodes.Document parseInput(java.lang.String, java.lang.String)"], ["org.jsoup.parser.TreeBuilder", "org.jsoup.parser.Parser.getTreeBuilder()", "public org.jsoup.parser.TreeBuilder getTreeBuilder()"], ["org.jsoup.parser.Parser", "org.jsoup.parser.Parser.setTreeBuilder(org.jsoup.parser.TreeBuilder)", "public org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder)"], ["boolean", "org.jsoup.parser.Parser.isTrackErrors()", "public boolean isTrackErrors()"], ["org.jsoup.parser.Parser", "org.jsoup.parser.Parser.setTrackErrors(int)", "public org.jsoup.parser.Parser setTrackErrors(int)"], ["java.util.List<org.jsoup.parser.ParseError>", "org.jsoup.parser.Parser.getErrors()", "public java.util.List<org.jsoup.parser.ParseError> getErrors()"], ["org.jsoup.nodes.Document", "org.jsoup.parser.Parser.parse(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)"], ["java.util.List<org.jsoup.nodes.Node>", "org.jsoup.parser.Parser.parseFragment(java.lang.String, org.jsoup.nodes.Element, java.lang.String)", "public static java.util.List<org.jsoup.nodes.Node> parseFragment(java.lang.String, org.jsoup.nodes.Element, java.lang.String)"], ["java.util.List<org.jsoup.nodes.Node>", "org.jsoup.parser.Parser.parseXmlFragment(java.lang.String, java.lang.String)", "public static java.util.List<org.jsoup.nodes.Node> parseXmlFragment(java.lang.String, java.lang.String)"], ["org.jsoup.nodes.Document", "org.jsoup.parser.Parser.parseBodyFragment(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.parser.Parser.unescapeEntities(java.lang.String, boolean)", "public static java.lang.String unescapeEntities(java.lang.String, boolean)"], ["org.jsoup.nodes.Document", "org.jsoup.parser.Parser.parseBodyFragmentRelaxed(java.lang.String, java.lang.String)", "public static org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String, java.lang.String)"], ["org.jsoup.parser.Parser", "org.jsoup.parser.Parser.htmlParser()", "public static org.jsoup.parser.Parser htmlParser()"], ["org.jsoup.parser.Parser", "org.jsoup.parser.Parser.xmlParser()", "public static org.jsoup.parser.Parser xmlParser()"], ["java.lang.String", "org.jsoup.parser.Tag.getName()", "public java.lang.String getName()"], ["org.jsoup.parser.Tag", "org.jsoup.parser.Tag.valueOf(java.lang.String)", "public static org.jsoup.parser.Tag valueOf(java.lang.String)"], ["boolean", "org.jsoup.parser.Tag.isBlock()", "public boolean isBlock()"], ["boolean", "org.jsoup.parser.Tag.formatAsBlock()", "public boolean formatAsBlock()"], ["boolean", "org.jsoup.parser.Tag.canContainBlock()", "public boolean canContainBlock()"], ["boolean", "org.jsoup.parser.Tag.isInline()", "public boolean isInline()"], ["boolean", "org.jsoup.parser.Tag.isData()", "public boolean isData()"], ["boolean", "org.jsoup.parser.Tag.isEmpty()", "public boolean isEmpty()"], ["boolean", "org.jsoup.parser.Tag.isSelfClosing()", "public boolean isSelfClosing()"], ["boolean", "org.jsoup.parser.Tag.isKnownTag()", "public boolean isKnownTag()"], ["boolean", "org.jsoup.parser.Tag.isKnownTag(java.lang.String)", "public static boolean isKnownTag(java.lang.String)"], ["boolean", "org.jsoup.parser.Tag.preserveWhitespace()", "public boolean preserveWhitespace()"], ["boolean", "org.jsoup.parser.Tag.isFormListed()", "public boolean isFormListed()"], ["boolean", "org.jsoup.parser.Tag.isFormSubmittable()", "public boolean isFormSubmittable()"], ["boolean", "org.jsoup.parser.Tag.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.jsoup.parser.Tag.hashCode()", "public int hashCode()"], ["java.lang.String", "org.jsoup.parser.Tag.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.Token$Character.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.Token$Comment.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.Token$Doctype.getSystemIdentifier()", "public java.lang.String getSystemIdentifier()"], ["boolean", "org.jsoup.parser.Token$Doctype.isForceQuirks()", "public boolean isForceQuirks()"], ["java.lang.String", "org.jsoup.parser.Token$EndTag.toString()", "public java.lang.String toString()"], ["java.lang.String", "org.jsoup.parser.Token$StartTag.toString()", "public java.lang.String toString()"], ["org.jsoup.parser.Token$TokenType[]", "org.jsoup.parser.Token$TokenType.values()", "public static org.jsoup.parser.Token$TokenType[] values()"], ["org.jsoup.parser.Token$TokenType", "org.jsoup.parser.Token$TokenType.valueOf(java.lang.String)", "public static org.jsoup.parser.Token$TokenType valueOf(java.lang.String)"], ["org.jsoup.parser.TokeniserState[]", "org.jsoup.parser.TokeniserState.values()", "public static org.jsoup.parser.TokeniserState[] values()"], ["org.jsoup.parser.TokeniserState", "org.jsoup.parser.TokeniserState.valueOf(java.lang.String)", "public static org.jsoup.parser.TokeniserState valueOf(java.lang.String)"], ["org.jsoup.parser.TokenQueue", "org.jsoup.parser.TokenQueue(java.lang.String)", "public org.jsoup.parser.TokenQueue(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.isEmpty()", "public boolean isEmpty()"], ["char", "org.jsoup.parser.TokenQueue.peek()", "public char peek()"], ["void", "org.jsoup.parser.TokenQueue.addFirst(java.lang.Character)", "public void addFirst(java.lang.Character)"], ["void", "org.jsoup.parser.TokenQueue.addFirst(java.lang.String)", "public void addFirst(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.matches(java.lang.String)", "public boolean matches(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.matchesCS(java.lang.String)", "public boolean matchesCS(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.matchesAny(java.lang.String...)", "public boolean matchesAny(java.lang.String...)"], ["boolean", "org.jsoup.parser.TokenQueue.matchesAny(char...)", "public boolean matchesAny(char...)"], ["boolean", "org.jsoup.parser.TokenQueue.matchesStartTag()", "public boolean matchesStartTag()"], ["boolean", "org.jsoup.parser.TokenQueue.matchChomp(java.lang.String)", "public boolean matchChomp(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.matchesWhitespace()", "public boolean matchesWhitespace()"], ["boolean", "org.jsoup.parser.TokenQueue.matchesWord()", "public boolean matchesWord()"], ["void", "org.jsoup.parser.TokenQueue.advance()", "public void advance()"], ["char", "org.jsoup.parser.TokenQueue.consume()", "public char consume()"], ["void", "org.jsoup.parser.TokenQueue.consume(java.lang.String)", "public void consume(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeTo(java.lang.String)", "public java.lang.String consumeTo(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeToIgnoreCase(java.lang.String)", "public java.lang.String consumeToIgnoreCase(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeToAny(java.lang.String...)", "public java.lang.String consumeToAny(java.lang.String...)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.chompTo(java.lang.String)", "public java.lang.String chompTo(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.chompToIgnoreCase(java.lang.String)", "public java.lang.String chompToIgnoreCase(java.lang.String)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.chompBalanced(char, char)", "public java.lang.String chompBalanced(char, char)"], ["java.lang.String", "org.jsoup.parser.TokenQueue.unescape(java.lang.String)", "public static java.lang.String unescape(java.lang.String)"], ["boolean", "org.jsoup.parser.TokenQueue.consumeWhitespace()", "public boolean consumeWhitespace()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeWord()", "public java.lang.String consumeWord()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeTagName()", "public java.lang.String consumeTagName()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeElementSelector()", "public java.lang.String consumeElementSelector()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeCssIdentifier()", "public java.lang.String consumeCssIdentifier()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.consumeAttributeKey()", "public java.lang.String consumeAttributeKey()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.remainder()", "public java.lang.String remainder()"], ["java.lang.String", "org.jsoup.parser.TokenQueue.toString()", "public java.lang.String toString()"], ["boolean", "org.jsoup.parser.TreeBuilder.processStartTag(java.lang.String, org.jsoup.nodes.Attributes)", "public boolean processStartTag(java.lang.String, org.jsoup.nodes.Attributes)"], ["org.jsoup.parser.XmlTreeBuilder", "org.jsoup.parser.XmlTreeBuilder()", "public org.jsoup.parser.XmlTreeBuilder()"], ["boolean", "org.jsoup.parser.XmlTreeBuilder.processStartTag(java.lang.String, org.jsoup.nodes.Attributes)", "public boolean processStartTag(java.lang.String, org.jsoup.nodes.Attributes)"], ["void", "org.jsoup.safety.Cleaner$CleaningVisitor.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.safety.Cleaner$CleaningVisitor.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["org.jsoup.safety.Cleaner", "org.jsoup.safety.Cleaner(org.jsoup.safety.Whitelist)", "public org.jsoup.safety.Cleaner(org.jsoup.safety.Whitelist)"], ["org.jsoup.nodes.Document", "org.jsoup.safety.Cleaner.clean(org.jsoup.nodes.Document)", "public org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)"], ["boolean", "org.jsoup.safety.Cleaner.isValid(org.jsoup.nodes.Document)", "public boolean isValid(org.jsoup.nodes.Document)"], ["int", "org.jsoup.safety.Whitelist$TypedValue.hashCode()", "public int hashCode()"], ["boolean", "org.jsoup.safety.Whitelist$TypedValue.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "org.jsoup.safety.Whitelist$TypedValue.toString()", "public java.lang.String toString()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.none()", "public static org.jsoup.safety.Whitelist none()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.simpleText()", "public static org.jsoup.safety.Whitelist simpleText()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.basic()", "public static org.jsoup.safety.Whitelist basic()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.basicWithImages()", "public static org.jsoup.safety.Whitelist basicWithImages()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.relaxed()", "public static org.jsoup.safety.Whitelist relaxed()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist()", "public org.jsoup.safety.Whitelist()"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.addTags(java.lang.String...)", "public org.jsoup.safety.Whitelist addTags(java.lang.String...)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.removeTags(java.lang.String...)", "public org.jsoup.safety.Whitelist removeTags(java.lang.String...)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.addAttributes(java.lang.String, java.lang.String...)", "public org.jsoup.safety.Whitelist addAttributes(java.lang.String, java.lang.String...)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.removeAttributes(java.lang.String, java.lang.String...)", "public org.jsoup.safety.Whitelist removeAttributes(java.lang.String, java.lang.String...)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.addEnforcedAttribute(java.lang.String, java.lang.String, java.lang.String)", "public org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String, java.lang.String, java.lang.String)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.removeEnforcedAttribute(java.lang.String, java.lang.String)", "public org.jsoup.safety.Whitelist removeEnforcedAttribute(java.lang.String, java.lang.String)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.preserveRelativeLinks(boolean)", "public org.jsoup.safety.Whitelist preserveRelativeLinks(boolean)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.addProtocols(java.lang.String, java.lang.String, java.lang.String...)", "public org.jsoup.safety.Whitelist addProtocols(java.lang.String, java.lang.String, java.lang.String...)"], ["org.jsoup.safety.Whitelist", "org.jsoup.safety.Whitelist.removeProtocols(java.lang.String, java.lang.String, java.lang.String...)", "public org.jsoup.safety.Whitelist removeProtocols(java.lang.String, java.lang.String, java.lang.String...)"], ["void", "org.jsoup.select.Collector$Accumulator.head(org.jsoup.nodes.Node, int)", "public void head(org.jsoup.nodes.Node, int)"], ["void", "org.jsoup.select.Collector$Accumulator.tail(org.jsoup.nodes.Node, int)", "public void tail(org.jsoup.nodes.Node, int)"], ["org.jsoup.select.Elements", "org.jsoup.select.Collector.collect(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)", "public static org.jsoup.select.Elements collect(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)"], ["boolean", "org.jsoup.select.CombiningEvaluator$And.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.CombiningEvaluator$And.toString()", "public java.lang.String toString()"], ["void", "org.jsoup.select.CombiningEvaluator$Or.add(org.jsoup.select.Evaluator)", "public void add(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.CombiningEvaluator$Or.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.CombiningEvaluator$Or.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements()", "public org.jsoup.select.Elements()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements(int)", "public org.jsoup.select.Elements(int)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements(java.util.Collection<org.jsoup.nodes.Element>)", "public org.jsoup.select.Elements(java.util.Collection<org.jsoup.nodes.Element>)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements(java.util.List<org.jsoup.nodes.Element>)", "public org.jsoup.select.Elements(java.util.List<org.jsoup.nodes.Element>)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements(org.jsoup.nodes.Element...)", "public org.jsoup.select.Elements(org.jsoup.nodes.Element...)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.clone()", "public org.jsoup.select.Elements clone()"], ["java.lang.String", "org.jsoup.select.Elements.attr(java.lang.String)", "public java.lang.String attr(java.lang.String)"], ["boolean", "org.jsoup.select.Elements.hasAttr(java.lang.String)", "public boolean hasAttr(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.attr(java.lang.String, java.lang.String)", "public org.jsoup.select.Elements attr(java.lang.String, java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.removeAttr(java.lang.String)", "public org.jsoup.select.Elements removeAttr(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.addClass(java.lang.String)", "public org.jsoup.select.Elements addClass(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.removeClass(java.lang.String)", "public org.jsoup.select.Elements removeClass(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.toggleClass(java.lang.String)", "public org.jsoup.select.Elements toggleClass(java.lang.String)"], ["boolean", "org.jsoup.select.Elements.hasClass(java.lang.String)", "public boolean hasClass(java.lang.String)"], ["java.lang.String", "org.jsoup.select.Elements.val()", "public java.lang.String val()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.val(java.lang.String)", "public org.jsoup.select.Elements val(java.lang.String)"], ["java.lang.String", "org.jsoup.select.Elements.text()", "public java.lang.String text()"], ["boolean", "org.jsoup.select.Elements.hasText()", "public boolean hasText()"], ["java.lang.String", "org.jsoup.select.Elements.html()", "public java.lang.String html()"], ["java.lang.String", "org.jsoup.select.Elements.outerHtml()", "public java.lang.String outerHtml()"], ["java.lang.String", "org.jsoup.select.Elements.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.tagName(java.lang.String)", "public org.jsoup.select.Elements tagName(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.html(java.lang.String)", "public org.jsoup.select.Elements html(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.prepend(java.lang.String)", "public org.jsoup.select.Elements prepend(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.append(java.lang.String)", "public org.jsoup.select.Elements append(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.before(java.lang.String)", "public org.jsoup.select.Elements before(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.after(java.lang.String)", "public org.jsoup.select.Elements after(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.wrap(java.lang.String)", "public org.jsoup.select.Elements wrap(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.unwrap()", "public org.jsoup.select.Elements unwrap()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.empty()", "public org.jsoup.select.Elements empty()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.remove()", "public org.jsoup.select.Elements remove()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.select(java.lang.String)", "public org.jsoup.select.Elements select(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.not(java.lang.String)", "public org.jsoup.select.Elements not(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.eq(int)", "public org.jsoup.select.Elements eq(int)"], ["boolean", "org.jsoup.select.Elements.is(java.lang.String)", "public boolean is(java.lang.String)"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.parents()", "public org.jsoup.select.Elements parents()"], ["org.jsoup.nodes.Element", "org.jsoup.select.Elements.first()", "public org.jsoup.nodes.Element first()"], ["org.jsoup.nodes.Element", "org.jsoup.select.Elements.last()", "public org.jsoup.nodes.Element last()"], ["org.jsoup.select.Elements", "org.jsoup.select.Elements.traverse(org.jsoup.select.NodeVisitor)", "public org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor)"], ["java.util.List<org.jsoup.nodes.FormElement>", "org.jsoup.select.Elements.forms()", "public java.util.List<org.jsoup.nodes.FormElement> forms()"], ["java.lang.Object", "org.jsoup.select.Elements.clone()", "public java.lang.Object clone()"], ["org.jsoup.select.Evaluator$AllElements", "org.jsoup.select.Evaluator$AllElements()", "public org.jsoup.select.Evaluator$AllElements()"], ["boolean", "org.jsoup.select.Evaluator$AllElements.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AllElements.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$Attribute", "org.jsoup.select.Evaluator$Attribute(java.lang.String)", "public org.jsoup.select.Evaluator$Attribute(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$Attribute.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$Attribute.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeKeyPair", "org.jsoup.select.Evaluator$AttributeKeyPair(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeKeyPair(java.lang.String, java.lang.String)"], ["org.jsoup.select.Evaluator$AttributeStarting", "org.jsoup.select.Evaluator$AttributeStarting(java.lang.String)", "public org.jsoup.select.Evaluator$AttributeStarting(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeStarting.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeStarting.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValue", "org.jsoup.select.Evaluator$AttributeWithValue(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeWithValue(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValue.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValue.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeWithValueContaining(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValueContaining.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValueContaining.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValueEnding", "org.jsoup.select.Evaluator$AttributeWithValueEnding(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeWithValueEnding(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValueEnding.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValueEnding.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching(java.lang.String, java.util.regex.Pattern)", "public org.jsoup.select.Evaluator$AttributeWithValueMatching(java.lang.String, java.util.regex.Pattern)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValueMatching.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValueMatching.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValueNot", "org.jsoup.select.Evaluator$AttributeWithValueNot(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeWithValueNot(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValueNot.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValueNot.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$AttributeWithValueStarting", "org.jsoup.select.Evaluator$AttributeWithValueStarting(java.lang.String, java.lang.String)", "public org.jsoup.select.Evaluator$AttributeWithValueStarting(java.lang.String, java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$AttributeWithValueStarting.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$AttributeWithValueStarting.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$Class", "org.jsoup.select.Evaluator$Class(java.lang.String)", "public org.jsoup.select.Evaluator$Class(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$Class.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$Class.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$ContainsOwnText", "org.jsoup.select.Evaluator$ContainsOwnText(java.lang.String)", "public org.jsoup.select.Evaluator$ContainsOwnText(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$ContainsOwnText.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$ContainsOwnText.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$ContainsText", "org.jsoup.select.Evaluator$ContainsText(java.lang.String)", "public org.jsoup.select.Evaluator$ContainsText(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$ContainsText.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$ContainsText.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$CssNthEvaluator", "org.jsoup.select.Evaluator$CssNthEvaluator(int, int)", "public org.jsoup.select.Evaluator$CssNthEvaluator(int, int)"], ["org.jsoup.select.Evaluator$CssNthEvaluator", "org.jsoup.select.Evaluator$CssNthEvaluator(int)", "public org.jsoup.select.Evaluator$CssNthEvaluator(int)"], ["boolean", "org.jsoup.select.Evaluator$CssNthEvaluator.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$CssNthEvaluator.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$Id", "org.jsoup.select.Evaluator$Id(java.lang.String)", "public org.jsoup.select.Evaluator$Id(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$Id.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$Id.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IndexEquals", "org.jsoup.select.Evaluator$IndexEquals(int)", "public org.jsoup.select.Evaluator$IndexEquals(int)"], ["boolean", "org.jsoup.select.Evaluator$IndexEquals.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IndexEquals.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IndexEvaluator", "org.jsoup.select.Evaluator$IndexEvaluator(int)", "public org.jsoup.select.Evaluator$IndexEvaluator(int)"], ["org.jsoup.select.Evaluator$IndexGreaterThan", "org.jsoup.select.Evaluator$IndexGreaterThan(int)", "public org.jsoup.select.Evaluator$IndexGreaterThan(int)"], ["boolean", "org.jsoup.select.Evaluator$IndexGreaterThan.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IndexGreaterThan.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IndexLessThan", "org.jsoup.select.Evaluator$IndexLessThan(int)", "public org.jsoup.select.Evaluator$IndexLessThan(int)"], ["boolean", "org.jsoup.select.Evaluator$IndexLessThan.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IndexLessThan.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsEmpty", "org.jsoup.select.Evaluator$IsEmpty()", "public org.jsoup.select.Evaluator$IsEmpty()"], ["boolean", "org.jsoup.select.Evaluator$IsEmpty.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsEmpty.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsFirstChild", "org.jsoup.select.Evaluator$IsFirstChild()", "public org.jsoup.select.Evaluator$IsFirstChild()"], ["boolean", "org.jsoup.select.Evaluator$IsFirstChild.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsFirstChild.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsFirstOfType", "org.jsoup.select.Evaluator$IsFirstOfType()", "public org.jsoup.select.Evaluator$IsFirstOfType()"], ["java.lang.String", "org.jsoup.select.Evaluator$IsFirstOfType.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsLastChild", "org.jsoup.select.Evaluator$IsLastChild()", "public org.jsoup.select.Evaluator$IsLastChild()"], ["boolean", "org.jsoup.select.Evaluator$IsLastChild.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsLastChild.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsLastOfType", "org.jsoup.select.Evaluator$IsLastOfType()", "public org.jsoup.select.Evaluator$IsLastOfType()"], ["java.lang.String", "org.jsoup.select.Evaluator$IsLastOfType.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsNthChild", "org.jsoup.select.Evaluator$IsNthChild(int, int)", "public org.jsoup.select.Evaluator$IsNthChild(int, int)"], ["org.jsoup.select.Evaluator$IsNthLastChild", "org.jsoup.select.Evaluator$IsNthLastChild(int, int)", "public org.jsoup.select.Evaluator$IsNthLastChild(int, int)"], ["org.jsoup.select.Evaluator$IsNthLastOfType", "org.jsoup.select.Evaluator$IsNthLastOfType(int, int)", "public org.jsoup.select.Evaluator$IsNthLastOfType(int, int)"], ["org.jsoup.select.Evaluator$IsNthOfType", "org.jsoup.select.Evaluator$IsNthOfType(int, int)", "public org.jsoup.select.Evaluator$IsNthOfType(int, int)"], ["org.jsoup.select.Evaluator$IsOnlyChild", "org.jsoup.select.Evaluator$IsOnlyChild()", "public org.jsoup.select.Evaluator$IsOnlyChild()"], ["boolean", "org.jsoup.select.Evaluator$IsOnlyChild.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsOnlyChild.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsOnlyOfType", "org.jsoup.select.Evaluator$IsOnlyOfType()", "public org.jsoup.select.Evaluator$IsOnlyOfType()"], ["boolean", "org.jsoup.select.Evaluator$IsOnlyOfType.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsOnlyOfType.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$IsRoot", "org.jsoup.select.Evaluator$IsRoot()", "public org.jsoup.select.Evaluator$IsRoot()"], ["boolean", "org.jsoup.select.Evaluator$IsRoot.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$IsRoot.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$Matches", "org.jsoup.select.Evaluator$Matches(java.util.regex.Pattern)", "public org.jsoup.select.Evaluator$Matches(java.util.regex.Pattern)"], ["boolean", "org.jsoup.select.Evaluator$Matches.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$Matches.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$MatchesOwn", "org.jsoup.select.Evaluator$MatchesOwn(java.util.regex.Pattern)", "public org.jsoup.select.Evaluator$MatchesOwn(java.util.regex.Pattern)"], ["boolean", "org.jsoup.select.Evaluator$MatchesOwn.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$MatchesOwn.toString()", "public java.lang.String toString()"], ["org.jsoup.select.Evaluator$Tag", "org.jsoup.select.Evaluator$Tag(java.lang.String)", "public org.jsoup.select.Evaluator$Tag(java.lang.String)"], ["boolean", "org.jsoup.select.Evaluator$Tag.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.Evaluator$Tag.toString()", "public java.lang.String toString()"], ["org.jsoup.select.NodeTraversor", "org.jsoup.select.NodeTraversor(org.jsoup.select.NodeVisitor)", "public org.jsoup.select.NodeTraversor(org.jsoup.select.NodeVisitor)"], ["void", "org.jsoup.select.NodeTraversor.traverse(org.jsoup.nodes.Node)", "public void traverse(org.jsoup.nodes.Node)"], ["org.jsoup.select.Evaluator", "org.jsoup.select.QueryParser.parse(java.lang.String)", "public static org.jsoup.select.Evaluator parse(java.lang.String)"], ["org.jsoup.select.Selector$SelectorParseException", "org.jsoup.select.Selector$SelectorParseException(java.lang.String, java.lang.Object...)", "public org.jsoup.select.Selector$SelectorParseException(java.lang.String, java.lang.Object...)"], ["org.jsoup.select.Elements", "org.jsoup.select.Selector.select(java.lang.String, org.jsoup.nodes.Element)", "public static org.jsoup.select.Elements select(java.lang.String, org.jsoup.nodes.Element)"], ["org.jsoup.select.Elements", "org.jsoup.select.Selector.select(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)", "public static org.jsoup.select.Elements select(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)"], ["org.jsoup.select.Elements", "org.jsoup.select.Selector.select(java.lang.String, java.lang.Iterable<org.jsoup.nodes.Element>)", "public static org.jsoup.select.Elements select(java.lang.String, java.lang.Iterable<org.jsoup.nodes.Element>)"], ["org.jsoup.select.StructuralEvaluator$Has", "org.jsoup.select.StructuralEvaluator$Has(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$Has(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$Has.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$Has.toString()", "public java.lang.String toString()"], ["org.jsoup.select.StructuralEvaluator$ImmediateParent", "org.jsoup.select.StructuralEvaluator$ImmediateParent(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$ImmediateParent(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$ImmediateParent.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$ImmediateParent.toString()", "public java.lang.String toString()"], ["org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling", "org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling.toString()", "public java.lang.String toString()"], ["org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$Not(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$Not.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$Not.toString()", "public java.lang.String toString()"], ["org.jsoup.select.StructuralEvaluator$Parent", "org.jsoup.select.StructuralEvaluator$Parent(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$Parent(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$Parent.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$Parent.toString()", "public java.lang.String toString()"], ["org.jsoup.select.StructuralEvaluator$PreviousSibling", "org.jsoup.select.StructuralEvaluator$PreviousSibling(org.jsoup.select.Evaluator)", "public org.jsoup.select.StructuralEvaluator$PreviousSibling(org.jsoup.select.Evaluator)"], ["boolean", "org.jsoup.select.StructuralEvaluator$PreviousSibling.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["java.lang.String", "org.jsoup.select.StructuralEvaluator$PreviousSibling.toString()", "public java.lang.String toString()"], ["boolean", "org.jsoup.select.StructuralEvaluator$Root.matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)", "public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)"], ["org.jsoup.UnsupportedMimeTypeException", "org.jsoup.UnsupportedMimeTypeException(java.lang.String, java.lang.String, java.lang.String)", "public org.jsoup.UnsupportedMimeTypeException(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.jsoup.UnsupportedMimeTypeException.getMimeType()", "public java.lang.String getMimeType()"], ["java.lang.String", "org.jsoup.UnsupportedMimeTypeException.getUrl()", "public java.lang.String getUrl()"], ["java.lang.String", "org.jsoup.UnsupportedMimeTypeException.toString()", "public java.lang.String toString()"]]}