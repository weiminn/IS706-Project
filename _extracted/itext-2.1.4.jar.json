{"itext-2.1.4.jar": [["com.lowagie.text.Anchor", "com.lowagie.text.Anchor()", "public com.lowagie.text.Anchor()"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(float)", "public com.lowagie.text.Anchor(float)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(com.lowagie.text.Chunk)", "public com.lowagie.text.Anchor(com.lowagie.text.Chunk)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(java.lang.String)", "public com.lowagie.text.Anchor(java.lang.String)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Anchor(java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(float, com.lowagie.text.Chunk)", "public com.lowagie.text.Anchor(float, com.lowagie.text.Chunk)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(float, java.lang.String)", "public com.lowagie.text.Anchor(float, java.lang.String)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(float, java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Anchor(float, java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Anchor", "com.lowagie.text.Anchor(com.lowagie.text.Phrase)", "public com.lowagie.text.Anchor(com.lowagie.text.Phrase)"], ["boolean", "com.lowagie.text.Anchor.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["java.util.ArrayList", "com.lowagie.text.Anchor.getChunks()", "public java.util.ArrayList getChunks()"], ["int", "com.lowagie.text.Anchor.type()", "public int type()"], ["void", "com.lowagie.text.Anchor.setName(java.lang.String)", "public void setName(java.lang.String)"], ["void", "com.lowagie.text.Anchor.setReference(java.lang.String)", "public void setReference(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Anchor.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.lowagie.text.Anchor.getReference()", "public java.lang.String getReference()"], ["java.net.URL", "com.lowagie.text.Anchor.getUrl()", "public java.net.URL getUrl()"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(com.lowagie.text.Annotation)", "public com.lowagie.text.Annotation(com.lowagie.text.Annotation)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(java.lang.String, java.lang.String)", "public com.lowagie.text.Annotation(java.lang.String, java.lang.String)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(java.lang.String, java.lang.String, float, float, float, float)", "public com.lowagie.text.Annotation(java.lang.String, java.lang.String, float, float, float, float)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.net.URL)", "public com.lowagie.text.Annotation(float, float, float, float, java.net.URL)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.lang.String)", "public com.lowagie.text.Annotation(float, float, float, float, java.lang.String)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String)", "public com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String, boolean)", "public com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String, boolean)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.lang.String, int)", "public com.lowagie.text.Annotation(float, float, float, float, java.lang.String, int)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, int)", "public com.lowagie.text.Annotation(float, float, float, float, int)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.lowagie.text.Annotation(float, float, float, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.Annotation.type()", "public int type()"], ["boolean", "com.lowagie.text.Annotation.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["java.util.ArrayList", "com.lowagie.text.Annotation.getChunks()", "public java.util.ArrayList getChunks()"], ["void", "com.lowagie.text.Annotation.setDimensions(float, float, float, float)", "public void setDimensions(float, float, float, float)"], ["float", "com.lowagie.text.Annotation.llx()", "public float llx()"], ["float", "com.lowagie.text.Annotation.lly()", "public float lly()"], ["float", "com.lowagie.text.Annotation.urx()", "public float urx()"], ["float", "com.lowagie.text.Annotation.ury()", "public float ury()"], ["float", "com.lowagie.text.Annotation.llx(float)", "public float llx(float)"], ["float", "com.lowagie.text.Annotation.lly(float)", "public float lly(float)"], ["float", "com.lowagie.text.Annotation.urx(float)", "public float urx(float)"], ["float", "com.lowagie.text.Annotation.ury(float)", "public float ury(float)"], ["int", "com.lowagie.text.Annotation.annotationType()", "public int annotationType()"], ["java.lang.String", "com.lowagie.text.Annotation.title()", "public java.lang.String title()"], ["java.lang.String", "com.lowagie.text.Annotation.content()", "public java.lang.String content()"], ["java.util.HashMap", "com.lowagie.text.Annotation.attributes()", "public java.util.HashMap attributes()"], ["boolean", "com.lowagie.text.Annotation.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Annotation.isNestable()", "public boolean isNestable()"], ["com.lowagie.text.BadElementException", "com.lowagie.text.BadElementException(java.lang.Exception)", "public com.lowagie.text.BadElementException(java.lang.Exception)"], ["com.lowagie.text.BadElementException", "com.lowagie.text.BadElementException(java.lang.String)", "public com.lowagie.text.BadElementException(java.lang.String)"], ["com.lowagie.text.Cell", "com.lowagie.text.Cell()", "public com.lowagie.text.Cell()"], ["com.lowagie.text.Cell", "com.lowagie.text.Cell(boolean)", "public com.lowagie.text.Cell(boolean)"], ["com.lowagie.text.Cell", "com.lowagie.text.Cell(java.lang.String)", "public com.lowagie.text.Cell(java.lang.String)"], ["com.lowagie.text.Cell", "com.lowagie.text.Cell(com.lowagie.text.Element)", "public com.lowagie.text.Cell(com.lowagie.text.Element) throws com.lowagie.text.BadElementException"], ["boolean", "com.lowagie.text.Cell.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Cell.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Cell.getChunks()", "public java.util.ArrayList getChunks()"], ["int", "com.lowagie.text.Cell.getHorizontalAlignment()", "public int getHorizontalAlignment()"], ["void", "com.lowagie.text.Cell.setHorizontalAlignment(int)", "public void setHorizontalAlignment(int)"], ["void", "com.lowagie.text.Cell.setHorizontalAlignment(java.lang.String)", "public void setHorizontalAlignment(java.lang.String)"], ["int", "com.lowagie.text.Cell.getVerticalAlignment()", "public int getVerticalAlignment()"], ["void", "com.lowagie.text.Cell.setVerticalAlignment(int)", "public void setVerticalAlignment(int)"], ["void", "com.lowagie.text.Cell.setVerticalAlignment(java.lang.String)", "public void setVerticalAlignment(java.lang.String)"], ["void", "com.lowagie.text.Cell.setWidth(float)", "public void setWidth(float)"], ["void", "com.lowagie.text.Cell.setWidth(java.lang.String)", "public void setWidth(java.lang.String)"], ["float", "com.lowagie.text.Cell.getWidth()", "public float getWidth()"], ["java.lang.String", "com.lowagie.text.Cell.getWidthAsString()", "public java.lang.String getWidthAsString()"], ["void", "com.lowagie.text.Cell.setColspan(int)", "public void setColspan(int)"], ["int", "com.lowagie.text.Cell.getColspan()", "public int getColspan()"], ["void", "com.lowagie.text.Cell.setRowspan(int)", "public void setRowspan(int)"], ["int", "com.lowagie.text.Cell.getRowspan()", "public int getRowspan()"], ["void", "com.lowagie.text.Cell.setLeading(float)", "public void setLeading(float)"], ["float", "com.lowagie.text.Cell.getLeading()", "public float getLeading()"], ["void", "com.lowagie.text.Cell.setHeader(boolean)", "public void setHeader(boolean)"], ["boolean", "com.lowagie.text.Cell.isHeader()", "public boolean isHeader()"], ["void", "com.lowagie.text.Cell.setMaxLines(int)", "public void setMaxLines(int)"], ["int", "com.lowagie.text.Cell.getMaxLines()", "public int getMaxLines()"], ["void", "com.lowagie.text.Cell.setShowTruncation(java.lang.String)", "public void setShowTruncation(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Cell.getShowTruncation()", "public java.lang.String getShowTruncation()"], ["void", "com.lowagie.text.Cell.setUseAscender(boolean)", "public void setUseAscender(boolean)"], ["boolean", "com.lowagie.text.Cell.isUseAscender()", "public boolean isUseAscender()"], ["void", "com.lowagie.text.Cell.setUseDescender(boolean)", "public void setUseDescender(boolean)"], ["boolean", "com.lowagie.text.Cell.isUseDescender()", "public boolean isUseDescender()"], ["void", "com.lowagie.text.Cell.setUseBorderPadding(boolean)", "public void setUseBorderPadding(boolean)"], ["boolean", "com.lowagie.text.Cell.isUseBorderPadding()", "public boolean isUseBorderPadding()"], ["boolean", "com.lowagie.text.Cell.getGroupChange()", "public boolean getGroupChange()"], ["void", "com.lowagie.text.Cell.setGroupChange(boolean)", "public void setGroupChange(boolean)"], ["int", "com.lowagie.text.Cell.size()", "public int size()"], ["java.util.Iterator", "com.lowagie.text.Cell.getElements()", "public java.util.Iterator getElements()"], ["void", "com.lowagie.text.Cell.clear()", "public void clear()"], ["boolean", "com.lowagie.text.Cell.isEmpty()", "public boolean isEmpty()"], ["boolean", "com.lowagie.text.Cell.isTable()", "public boolean isTable()"], ["void", "com.lowagie.text.Cell.addElement(com.lowagie.text.Element)", "public void addElement(com.lowagie.text.Element) throws com.lowagie.text.BadElementException"], ["boolean", "com.lowagie.text.Cell.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.Cell.createPdfPCell()", "public com.lowagie.text.pdf.PdfPCell createPdfPCell() throws com.lowagie.text.BadElementException"], ["float", "com.lowagie.text.Cell.getTop()", "public float getTop()"], ["float", "com.lowagie.text.Cell.getBottom()", "public float getBottom()"], ["float", "com.lowagie.text.Cell.getLeft()", "public float getLeft()"], ["float", "com.lowagie.text.Cell.getRight()", "public float getRight()"], ["float", "com.lowagie.text.Cell.top(int)", "public float top(int)"], ["float", "com.lowagie.text.Cell.bottom(int)", "public float bottom(int)"], ["float", "com.lowagie.text.Cell.left(int)", "public float left(int)"], ["float", "com.lowagie.text.Cell.right(int)", "public float right(int)"], ["void", "com.lowagie.text.Cell.setTop(int)", "public void setTop(int)"], ["void", "com.lowagie.text.Cell.setBottom(int)", "public void setBottom(int)"], ["void", "com.lowagie.text.Cell.setLeft(int)", "public void setLeft(int)"], ["void", "com.lowagie.text.Cell.setRight(int)", "public void setRight(int)"], ["com.lowagie.text.Chapter", "com.lowagie.text.Chapter(int)", "public com.lowagie.text.Chapter(int)"], ["com.lowagie.text.Chapter", "com.lowagie.text.Chapter(com.lowagie.text.Paragraph, int)", "public com.lowagie.text.Chapter(com.lowagie.text.Paragraph, int)"], ["com.lowagie.text.Chapter", "com.lowagie.text.Chapter(java.lang.String, int)", "public com.lowagie.text.Chapter(java.lang.String, int)"], ["int", "com.lowagie.text.Chapter.type()", "public int type()"], ["boolean", "com.lowagie.text.Chapter.isNestable()", "public boolean isNestable()"], ["com.lowagie.text.ChapterAutoNumber", "com.lowagie.text.ChapterAutoNumber(com.lowagie.text.Paragraph)", "public com.lowagie.text.ChapterAutoNumber(com.lowagie.text.Paragraph)"], ["com.lowagie.text.ChapterAutoNumber", "com.lowagie.text.ChapterAutoNumber(java.lang.String)", "public com.lowagie.text.ChapterAutoNumber(java.lang.String)"], ["com.lowagie.text.Section", "com.lowagie.text.ChapterAutoNumber.addSection(java.lang.String)", "public com.lowagie.text.Section addSection(java.lang.String)"], ["com.lowagie.text.Section", "com.lowagie.text.ChapterAutoNumber.addSection(com.lowagie.text.Paragraph)", "public com.lowagie.text.Section addSection(com.lowagie.text.Paragraph)"], ["int", "com.lowagie.text.ChapterAutoNumber.setAutomaticNumber(int)", "public int setAutomaticNumber(int)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk()", "public com.lowagie.text.Chunk()"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.Chunk)", "public com.lowagie.text.Chunk(com.lowagie.text.Chunk)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Chunk(java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(java.lang.String)", "public com.lowagie.text.Chunk(java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(char, com.lowagie.text.Font)", "public com.lowagie.text.Chunk(char, com.lowagie.text.Font)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(char)", "public com.lowagie.text.Chunk(char)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.Image, float, float)", "public com.lowagie.text.Chunk(com.lowagie.text.Image, float, float)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface)", "public com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, boolean)", "public com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, boolean)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, float)", "public com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, float)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, float, boolean)", "public com.lowagie.text.Chunk(com.lowagie.text.pdf.draw.DrawInterface, float, boolean)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk(com.lowagie.text.Image, float, float, boolean)", "public com.lowagie.text.Chunk(com.lowagie.text.Image, float, float, boolean)"], ["boolean", "com.lowagie.text.Chunk.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Chunk.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Chunk.getChunks()", "public java.util.ArrayList getChunks()"], ["java.lang.StringBuffer", "com.lowagie.text.Chunk.append(java.lang.String)", "public java.lang.StringBuffer append(java.lang.String)"], ["void", "com.lowagie.text.Chunk.setFont(com.lowagie.text.Font)", "public void setFont(com.lowagie.text.Font)"], ["com.lowagie.text.Font", "com.lowagie.text.Chunk.getFont()", "public com.lowagie.text.Font getFont()"], ["java.lang.String", "com.lowagie.text.Chunk.getContent()", "public java.lang.String getContent()"], ["java.lang.String", "com.lowagie.text.Chunk.toString()", "public java.lang.String toString()"], ["boolean", "com.lowagie.text.Chunk.isEmpty()", "public boolean isEmpty()"], ["float", "com.lowagie.text.Chunk.getWidthPoint()", "public float getWidthPoint()"], ["boolean", "com.lowagie.text.Chunk.hasAttributes()", "public boolean hasAttributes()"], ["java.util.HashMap", "com.lowagie.text.Chunk.getAttributes()", "public java.util.HashMap getAttributes()"], ["void", "com.lowagie.text.Chunk.setAttributes(java.util.HashMap)", "public void setAttributes(java.util.HashMap)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setHorizontalScaling(float)", "public com.lowagie.text.Chunk setHorizontalScaling(float)"], ["float", "com.lowagie.text.Chunk.getHorizontalScaling()", "public float getHorizontalScaling()"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setUnderline(float, float)", "public com.lowagie.text.Chunk setUnderline(float, float)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setUnderline(java.awt.Color, float, float, float, float, int)", "public com.lowagie.text.Chunk setUnderline(java.awt.Color, float, float, float, float, int)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setTextRise(float)", "public com.lowagie.text.Chunk setTextRise(float)"], ["float", "com.lowagie.text.Chunk.getTextRise()", "public float getTextRise()"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setSkew(float, float)", "public com.lowagie.text.Chunk setSkew(float, float)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setBackground(java.awt.Color)", "public com.lowagie.text.Chunk setBackground(java.awt.Color)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setBackground(java.awt.Color, float, float, float, float)", "public com.lowagie.text.Chunk setBackground(java.awt.Color, float, float, float, float)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setTextRenderMode(int, float, java.awt.Color)", "public com.lowagie.text.Chunk setTextRenderMode(int, float, java.awt.Color)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setSplitCharacter(com.lowagie.text.SplitCharacter)", "public com.lowagie.text.Chunk setSplitCharacter(com.lowagie.text.SplitCharacter)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setHyphenation(com.lowagie.text.pdf.HyphenationEvent)", "public com.lowagie.text.Chunk setHyphenation(com.lowagie.text.pdf.HyphenationEvent)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setRemoteGoto(java.lang.String, java.lang.String)", "public com.lowagie.text.Chunk setRemoteGoto(java.lang.String, java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setRemoteGoto(java.lang.String, int)", "public com.lowagie.text.Chunk setRemoteGoto(java.lang.String, int)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setLocalGoto(java.lang.String)", "public com.lowagie.text.Chunk setLocalGoto(java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setLocalDestination(java.lang.String)", "public com.lowagie.text.Chunk setLocalDestination(java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setGenericTag(java.lang.String)", "public com.lowagie.text.Chunk setGenericTag(java.lang.String)"], ["com.lowagie.text.Image", "com.lowagie.text.Chunk.getImage()", "public com.lowagie.text.Image getImage()"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setAction(com.lowagie.text.pdf.PdfAction)", "public com.lowagie.text.Chunk setAction(com.lowagie.text.pdf.PdfAction)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setAnchor(java.net.URL)", "public com.lowagie.text.Chunk setAnchor(java.net.URL)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setAnchor(java.lang.String)", "public com.lowagie.text.Chunk setAnchor(java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setNewPage()", "public com.lowagie.text.Chunk setNewPage()"], ["com.lowagie.text.Chunk", "com.lowagie.text.Chunk.setAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public com.lowagie.text.Chunk setAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["boolean", "com.lowagie.text.Chunk.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Chunk.isNestable()", "public boolean isNestable()"], ["com.lowagie.text.pdf.HyphenationEvent", "com.lowagie.text.Chunk.getHyphenation()", "public com.lowagie.text.pdf.HyphenationEvent getHyphenation()"], ["boolean", "com.lowagie.text.DocWriter.add(com.lowagie.text.Element)", "public boolean add(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.DocWriter.open()", "public void open()"], ["boolean", "com.lowagie.text.DocWriter.setPageSize(com.lowagie.text.Rectangle)", "public boolean setPageSize(com.lowagie.text.Rectangle)"], ["boolean", "com.lowagie.text.DocWriter.setMargins(float, float, float, float)", "public boolean setMargins(float, float, float, float)"], ["boolean", "com.lowagie.text.DocWriter.newPage()", "public boolean newPage()"], ["void", "com.lowagie.text.DocWriter.setHeader(com.lowagie.text.HeaderFooter)", "public void setHeader(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.DocWriter.resetHeader()", "public void resetHeader()"], ["void", "com.lowagie.text.DocWriter.setFooter(com.lowagie.text.HeaderFooter)", "public void setFooter(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.DocWriter.resetFooter()", "public void resetFooter()"], ["void", "com.lowagie.text.DocWriter.resetPageCount()", "public void resetPageCount()"], ["void", "com.lowagie.text.DocWriter.setPageCount(int)", "public void setPageCount(int)"], ["void", "com.lowagie.text.DocWriter.close()", "public void close()"], ["byte[]", "com.lowagie.text.DocWriter.getISOBytes(java.lang.String)", "public static final byte[] getISOBytes(java.lang.String)"], ["void", "com.lowagie.text.DocWriter.pause()", "public void pause()"], ["boolean", "com.lowagie.text.DocWriter.isPaused()", "public boolean isPaused()"], ["void", "com.lowagie.text.DocWriter.resume()", "public void resume()"], ["void", "com.lowagie.text.DocWriter.flush()", "public void flush()"], ["boolean", "com.lowagie.text.DocWriter.isCloseStream()", "public boolean isCloseStream()"], ["void", "com.lowagie.text.DocWriter.setCloseStream(boolean)", "public void setCloseStream(boolean)"], ["boolean", "com.lowagie.text.DocWriter.setMarginMirroring(boolean)", "public boolean setMarginMirroring(boolean)"], ["com.lowagie.text.Document", "com.lowagie.text.Document()", "public com.lowagie.text.Document()"], ["com.lowagie.text.Document", "com.lowagie.text.Document(com.lowagie.text.Rectangle)", "public com.lowagie.text.Document(com.lowagie.text.Rectangle)"], ["com.lowagie.text.Document", "com.lowagie.text.Document(com.lowagie.text.Rectangle, float, float, float, float)", "public com.lowagie.text.Document(com.lowagie.text.Rectangle, float, float, float, float)"], ["void", "com.lowagie.text.Document.addDocListener(com.lowagie.text.DocListener)", "public void addDocListener(com.lowagie.text.DocListener)"], ["void", "com.lowagie.text.Document.removeDocListener(com.lowagie.text.DocListener)", "public void removeDocListener(com.lowagie.text.DocListener)"], ["boolean", "com.lowagie.text.Document.add(com.lowagie.text.Element)", "public boolean add(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.Document.open()", "public void open()"], ["boolean", "com.lowagie.text.Document.setPageSize(com.lowagie.text.Rectangle)", "public boolean setPageSize(com.lowagie.text.Rectangle)"], ["boolean", "com.lowagie.text.Document.setMargins(float, float, float, float)", "public boolean setMargins(float, float, float, float)"], ["boolean", "com.lowagie.text.Document.newPage()", "public boolean newPage()"], ["void", "com.lowagie.text.Document.setHeader(com.lowagie.text.HeaderFooter)", "public void setHeader(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.Document.resetHeader()", "public void resetHeader()"], ["void", "com.lowagie.text.Document.setFooter(com.lowagie.text.HeaderFooter)", "public void setFooter(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.Document.resetFooter()", "public void resetFooter()"], ["void", "com.lowagie.text.Document.resetPageCount()", "public void resetPageCount()"], ["void", "com.lowagie.text.Document.setPageCount(int)", "public void setPageCount(int)"], ["int", "com.lowagie.text.Document.getPageNumber()", "public int getPageNumber()"], ["void", "com.lowagie.text.Document.close()", "public void close()"], ["boolean", "com.lowagie.text.Document.addHeader(java.lang.String, java.lang.String)", "public boolean addHeader(java.lang.String, java.lang.String)"], ["boolean", "com.lowagie.text.Document.addTitle(java.lang.String)", "public boolean addTitle(java.lang.String)"], ["boolean", "com.lowagie.text.Document.addSubject(java.lang.String)", "public boolean addSubject(java.lang.String)"], ["boolean", "com.lowagie.text.Document.addKeywords(java.lang.String)", "public boolean addKeywords(java.lang.String)"], ["boolean", "com.lowagie.text.Document.addAuthor(java.lang.String)", "public boolean addAuthor(java.lang.String)"], ["boolean", "com.lowagie.text.Document.addCreator(java.lang.String)", "public boolean addCreator(java.lang.String)"], ["boolean", "com.lowagie.text.Document.addProducer()", "public boolean addProducer()"], ["boolean", "com.lowagie.text.Document.addCreationDate()", "public boolean addCreationDate()"], ["float", "com.lowagie.text.Document.leftMargin()", "public float leftMargin()"], ["float", "com.lowagie.text.Document.rightMargin()", "public float rightMargin()"], ["float", "com.lowagie.text.Document.topMargin()", "public float topMargin()"], ["float", "com.lowagie.text.Document.bottomMargin()", "public float bottomMargin()"], ["float", "com.lowagie.text.Document.left()", "public float left()"], ["float", "com.lowagie.text.Document.right()", "public float right()"], ["float", "com.lowagie.text.Document.top()", "public float top()"], ["float", "com.lowagie.text.Document.bottom()", "public float bottom()"], ["float", "com.lowagie.text.Document.left(float)", "public float left(float)"], ["float", "com.lowagie.text.Document.right(float)", "public float right(float)"], ["float", "com.lowagie.text.Document.top(float)", "public float top(float)"], ["float", "com.lowagie.text.Document.bottom(float)", "public float bottom(float)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Document.getPageSize()", "public com.lowagie.text.Rectangle getPageSize()"], ["boolean", "com.lowagie.text.Document.isOpen()", "public boolean isOpen()"], ["java.lang.String", "com.lowagie.text.Document.getVersion()", "public static final java.lang.String getVersion()"], ["void", "com.lowagie.text.Document.setJavaScript_onLoad(java.lang.String)", "public void setJavaScript_onLoad(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Document.getJavaScript_onLoad()", "public java.lang.String getJavaScript_onLoad()"], ["void", "com.lowagie.text.Document.setJavaScript_onUnLoad(java.lang.String)", "public void setJavaScript_onUnLoad(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Document.getJavaScript_onUnLoad()", "public java.lang.String getJavaScript_onUnLoad()"], ["void", "com.lowagie.text.Document.setHtmlStyleClass(java.lang.String)", "public void setHtmlStyleClass(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Document.getHtmlStyleClass()", "public java.lang.String getHtmlStyleClass()"], ["boolean", "com.lowagie.text.Document.setMarginMirroring(boolean)", "public boolean setMarginMirroring(boolean)"], ["boolean", "com.lowagie.text.Document.isMarginMirroring()", "public boolean isMarginMirroring()"], ["com.lowagie.text.DocumentException", "com.lowagie.text.DocumentException(java.lang.Exception)", "public com.lowagie.text.DocumentException(java.lang.Exception)"], ["com.lowagie.text.DocumentException", "com.lowagie.text.DocumentException()", "public com.lowagie.text.DocumentException()"], ["com.lowagie.text.DocumentException", "com.lowagie.text.DocumentException(java.lang.String)", "public com.lowagie.text.DocumentException(java.lang.String)"], ["java.lang.String", "com.lowagie.text.DocumentException.getMessage()", "public java.lang.String getMessage()"], ["java.lang.String", "com.lowagie.text.DocumentException.getLocalizedMessage()", "public java.lang.String getLocalizedMessage()"], ["java.lang.String", "com.lowagie.text.DocumentException.toString()", "public java.lang.String toString()"], ["void", "com.lowagie.text.DocumentException.printStackTrace()", "public void printStackTrace()"], ["void", "com.lowagie.text.DocumentException.printStackTrace(java.io.PrintStream)", "public void printStackTrace(java.io.PrintStream)"], ["void", "com.lowagie.text.DocumentException.printStackTrace(java.io.PrintWriter)", "public void printStackTrace(java.io.PrintWriter)"], ["com.lowagie.text.ElementTags", "com.lowagie.text.ElementTags()", "public com.lowagie.text.ElementTags()"], ["java.lang.String", "com.lowagie.text.ElementTags.getAlignment(int)", "public static java.lang.String getAlignment(int)"], ["int", "com.lowagie.text.ElementTags.alignmentValue(java.lang.String)", "public static int alignmentValue(java.lang.String)"], ["com.lowagie.text.ExceptionConverter", "com.lowagie.text.ExceptionConverter(java.lang.Exception)", "public com.lowagie.text.ExceptionConverter(java.lang.Exception)"], ["java.lang.Exception", "com.lowagie.text.ExceptionConverter.getException()", "public java.lang.Exception getException()"], ["java.lang.String", "com.lowagie.text.ExceptionConverter.getMessage()", "public java.lang.String getMessage()"], ["java.lang.String", "com.lowagie.text.ExceptionConverter.getLocalizedMessage()", "public java.lang.String getLocalizedMessage()"], ["java.lang.String", "com.lowagie.text.ExceptionConverter.toString()", "public java.lang.String toString()"], ["void", "com.lowagie.text.ExceptionConverter.printStackTrace()", "public void printStackTrace()"], ["void", "com.lowagie.text.ExceptionConverter.printStackTrace(java.io.PrintStream)", "public void printStackTrace(java.io.PrintStream)"], ["void", "com.lowagie.text.ExceptionConverter.printStackTrace(java.io.PrintWriter)", "public void printStackTrace(java.io.PrintWriter)"], ["java.lang.Throwable", "com.lowagie.text.ExceptionConverter.fillInStackTrace()", "public java.lang.Throwable fillInStackTrace()"], ["com.lowagie.text.Font", "com.lowagie.text.Font(com.lowagie.text.Font)", "public com.lowagie.text.Font(com.lowagie.text.Font)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(int, float, int, java.awt.Color)", "public com.lowagie.text.Font(int, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float, int, java.awt.Color)", "public com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float, int)", "public com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float)", "public com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont, float)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont)", "public com.lowagie.text.Font(com.lowagie.text.pdf.BaseFont)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(int, float, int)", "public com.lowagie.text.Font(int, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(int, float)", "public com.lowagie.text.Font(int, float)"], ["com.lowagie.text.Font", "com.lowagie.text.Font(int)", "public com.lowagie.text.Font(int)"], ["com.lowagie.text.Font", "com.lowagie.text.Font()", "public com.lowagie.text.Font()"], ["int", "com.lowagie.text.Font.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["int", "com.lowagie.text.Font.getFamily()", "public int getFamily()"], ["java.lang.String", "com.lowagie.text.Font.getFamilyname()", "public java.lang.String getFamilyname()"], ["void", "com.lowagie.text.Font.setFamily(java.lang.String)", "public void setFamily(java.lang.String)"], ["int", "com.lowagie.text.Font.getFamilyIndex(java.lang.String)", "public static int getFamilyIndex(java.lang.String)"], ["float", "com.lowagie.text.Font.getSize()", "public float getSize()"], ["float", "com.lowagie.text.Font.getCalculatedSize()", "public float getCalculatedSize()"], ["float", "com.lowagie.text.Font.getCalculatedLeading(float)", "public float getCalculatedLeading(float)"], ["void", "com.lowagie.text.Font.setSize(float)", "public void setSize(float)"], ["int", "com.lowagie.text.Font.getStyle()", "public int getStyle()"], ["int", "com.lowagie.text.Font.getCalculatedStyle()", "public int getCalculatedStyle()"], ["boolean", "com.lowagie.text.Font.isBold()", "public boolean isBold()"], ["boolean", "com.lowagie.text.Font.isItalic()", "public boolean isItalic()"], ["boolean", "com.lowagie.text.Font.isUnderlined()", "public boolean isUnderlined()"], ["boolean", "com.lowagie.text.Font.isStrikethru()", "public boolean isStrikethru()"], ["void", "com.lowagie.text.Font.setStyle(int)", "public void setStyle(int)"], ["void", "com.lowagie.text.Font.setStyle(java.lang.String)", "public void setStyle(java.lang.String)"], ["int", "com.lowagie.text.Font.getStyleValue(java.lang.String)", "public static int getStyleValue(java.lang.String)"], ["java.awt.Color", "com.lowagie.text.Font.getColor()", "public java.awt.Color getColor()"], ["void", "com.lowagie.text.Font.setColor(java.awt.Color)", "public void setColor(java.awt.Color)"], ["void", "com.lowagie.text.Font.setColor(int, int, int)", "public void setColor(int, int, int)"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.Font.getBaseFont()", "public com.lowagie.text.pdf.BaseFont getBaseFont()"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.Font.getCalculatedBaseFont(boolean)", "public com.lowagie.text.pdf.BaseFont getCalculatedBaseFont(boolean)"], ["boolean", "com.lowagie.text.Font.isStandardFont()", "public boolean isStandardFont()"], ["com.lowagie.text.Font", "com.lowagie.text.Font.difference(com.lowagie.text.Font)", "public com.lowagie.text.Font difference(com.lowagie.text.Font)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color, boolean)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color, boolean)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.util.Properties)", "public static com.lowagie.text.Font getFont(java.util.Properties)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, boolean, float, int)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, boolean, float)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, boolean)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, float, int, java.awt.Color)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, float, int)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String, float)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, java.lang.String)", "public static com.lowagie.text.Font getFont(java.lang.String, java.lang.String)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, float, int, java.awt.Color)", "public static com.lowagie.text.Font getFont(java.lang.String, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, float, java.awt.Color)", "public static com.lowagie.text.Font getFont(java.lang.String, float, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, float, int)", "public static com.lowagie.text.Font getFont(java.lang.String, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String, float)", "public static com.lowagie.text.Font getFont(java.lang.String, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactory.getFont(java.lang.String)", "public static com.lowagie.text.Font getFont(java.lang.String)"], ["void", "com.lowagie.text.FontFactory.registerFamily(java.lang.String, java.lang.String, java.lang.String)", "public void registerFamily(java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.FontFactory.register(java.lang.String)", "public static void register(java.lang.String)"], ["void", "com.lowagie.text.FontFactory.register(java.lang.String, java.lang.String)", "public static void register(java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.FontFactory.registerDirectory(java.lang.String)", "public static int registerDirectory(java.lang.String)"], ["int", "com.lowagie.text.FontFactory.registerDirectory(java.lang.String, boolean)", "public static int registerDirectory(java.lang.String, boolean)"], ["int", "com.lowagie.text.FontFactory.registerDirectories()", "public static int registerDirectories()"], ["java.util.Set", "com.lowagie.text.FontFactory.getRegisteredFonts()", "public static java.util.Set getRegisteredFonts()"], ["java.util.Set", "com.lowagie.text.FontFactory.getRegisteredFamilies()", "public static java.util.Set getRegisteredFamilies()"], ["boolean", "com.lowagie.text.FontFactory.contains(java.lang.String)", "public static boolean contains(java.lang.String)"], ["boolean", "com.lowagie.text.FontFactory.isRegistered(java.lang.String)", "public static boolean isRegistered(java.lang.String)"], ["com.lowagie.text.FontFactoryImp", "com.lowagie.text.FontFactory.getFontImp()", "public static com.lowagie.text.FontFactoryImp getFontImp()"], ["void", "com.lowagie.text.FontFactory.setFontImp(com.lowagie.text.FontFactoryImp)", "public static void setFontImp(com.lowagie.text.FontFactoryImp)"], ["com.lowagie.text.FontFactoryImp", "com.lowagie.text.FontFactoryImp()", "public com.lowagie.text.FontFactoryImp()"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color, boolean)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int, java.awt.Color, boolean)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.util.Properties)", "public com.lowagie.text.Font getFont(java.util.Properties)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, boolean, float, int)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, boolean, float)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, boolean)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, boolean)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, float, int, java.awt.Color)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, float, int)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String, float)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, float, java.awt.Color)", "public com.lowagie.text.Font getFont(java.lang.String, float, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, java.lang.String)", "public com.lowagie.text.Font getFont(java.lang.String, java.lang.String)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, float, int, java.awt.Color)", "public com.lowagie.text.Font getFont(java.lang.String, float, int, java.awt.Color)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, float, int)", "public com.lowagie.text.Font getFont(java.lang.String, float, int)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String, float)", "public com.lowagie.text.Font getFont(java.lang.String, float)"], ["com.lowagie.text.Font", "com.lowagie.text.FontFactoryImp.getFont(java.lang.String)", "public com.lowagie.text.Font getFont(java.lang.String)"], ["void", "com.lowagie.text.FontFactoryImp.registerFamily(java.lang.String, java.lang.String, java.lang.String)", "public void registerFamily(java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.FontFactoryImp.register(java.lang.String)", "public void register(java.lang.String)"], ["void", "com.lowagie.text.FontFactoryImp.register(java.lang.String, java.lang.String)", "public void register(java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.FontFactoryImp.registerDirectory(java.lang.String)", "public int registerDirectory(java.lang.String)"], ["int", "com.lowagie.text.FontFactoryImp.registerDirectory(java.lang.String, boolean)", "public int registerDirectory(java.lang.String, boolean)"], ["int", "com.lowagie.text.FontFactoryImp.registerDirectories()", "public int registerDirectories()"], ["java.util.Set", "com.lowagie.text.FontFactoryImp.getRegisteredFonts()", "public java.util.Set getRegisteredFonts()"], ["java.util.Set", "com.lowagie.text.FontFactoryImp.getRegisteredFamilies()", "public java.util.Set getRegisteredFamilies()"], ["boolean", "com.lowagie.text.FontFactoryImp.isRegistered(java.lang.String)", "public boolean isRegistered(java.lang.String)"], ["com.lowagie.text.GreekList", "com.lowagie.text.GreekList()", "public com.lowagie.text.GreekList()"], ["com.lowagie.text.GreekList", "com.lowagie.text.GreekList(int)", "public com.lowagie.text.GreekList(int)"], ["com.lowagie.text.GreekList", "com.lowagie.text.GreekList(boolean, int)", "public com.lowagie.text.GreekList(boolean, int)"], ["boolean", "com.lowagie.text.GreekList.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["com.lowagie.text.Header", "com.lowagie.text.Header(java.lang.String, java.lang.String)", "public com.lowagie.text.Header(java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.Header.getName()", "public java.lang.String getName()"], ["com.lowagie.text.HeaderFooter", "com.lowagie.text.HeaderFooter(com.lowagie.text.Phrase, com.lowagie.text.Phrase)", "public com.lowagie.text.HeaderFooter(com.lowagie.text.Phrase, com.lowagie.text.Phrase)"], ["com.lowagie.text.HeaderFooter", "com.lowagie.text.HeaderFooter(com.lowagie.text.Phrase, boolean)", "public com.lowagie.text.HeaderFooter(com.lowagie.text.Phrase, boolean)"], ["boolean", "com.lowagie.text.HeaderFooter.isNumbered()", "public boolean isNumbered()"], ["com.lowagie.text.Phrase", "com.lowagie.text.HeaderFooter.getBefore()", "public com.lowagie.text.Phrase getBefore()"], ["com.lowagie.text.Phrase", "com.lowagie.text.HeaderFooter.getAfter()", "public com.lowagie.text.Phrase getAfter()"], ["void", "com.lowagie.text.HeaderFooter.setPageNumber(int)", "public void setPageNumber(int)"], ["void", "com.lowagie.text.HeaderFooter.setAlignment(int)", "public void setAlignment(int)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.HeaderFooter.paragraph()", "public com.lowagie.text.Paragraph paragraph()"], ["int", "com.lowagie.text.HeaderFooter.alignment()", "public int alignment()"], ["com.lowagie.text.Image", "com.lowagie.text.Image(java.net.URL)", "public com.lowagie.text.Image(java.net.URL)"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(java.net.URL)", "public static com.lowagie.text.Image getInstance(java.net.URL) throws com.lowagie.text.BadElementException, java.net.MalformedURLException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(java.lang.String)", "public static com.lowagie.text.Image getInstance(java.lang.String) throws com.lowagie.text.BadElementException, java.net.MalformedURLException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(byte[])", "public static com.lowagie.text.Image getInstance(byte[]) throws com.lowagie.text.BadElementException, java.net.MalformedURLException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(int, int, int, int, byte[])", "public static com.lowagie.text.Image getInstance(int, int, int, int, byte[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(int, int, boolean, int, int, byte[])", "public static com.lowagie.text.Image getInstance(int, int, boolean, int, int, byte[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(int, int, boolean, int, int, byte[], int[])", "public static com.lowagie.text.Image getInstance(int, int, boolean, int, int, byte[], int[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(int, int, int, int, byte[], int[])", "public static com.lowagie.text.Image getInstance(int, int, int, int, byte[], int[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(com.lowagie.text.pdf.PdfTemplate)", "public static com.lowagie.text.Image getInstance(com.lowagie.text.pdf.PdfTemplate) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(java.awt.Image, java.awt.Color, boolean)", "public static com.lowagie.text.Image getInstance(java.awt.Image, java.awt.Color, boolean) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(java.awt.Image, java.awt.Color)", "public static com.lowagie.text.Image getInstance(java.awt.Image, java.awt.Color) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(com.lowagie.text.pdf.PdfWriter, java.awt.Image, float)", "public static com.lowagie.text.Image getInstance(com.lowagie.text.pdf.PdfWriter, java.awt.Image, float) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(com.lowagie.text.pdf.PdfContentByte, java.awt.Image, float)", "public static com.lowagie.text.Image getInstance(com.lowagie.text.pdf.PdfContentByte, java.awt.Image, float) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.Image.getDirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference getDirectReference()"], ["void", "com.lowagie.text.Image.setDirectReference(com.lowagie.text.pdf.PdfIndirectReference)", "public void setDirectReference(com.lowagie.text.pdf.PdfIndirectReference)"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(com.lowagie.text.pdf.PRIndirectReference)", "public static com.lowagie.text.Image getInstance(com.lowagie.text.pdf.PRIndirectReference) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getInstance(com.lowagie.text.Image)", "public static com.lowagie.text.Image getInstance(com.lowagie.text.Image)"], ["int", "com.lowagie.text.Image.type()", "public int type()"], ["boolean", "com.lowagie.text.Image.isNestable()", "public boolean isNestable()"], ["boolean", "com.lowagie.text.Image.isJpeg()", "public boolean isJpeg()"], ["boolean", "com.lowagie.text.Image.isImgRaw()", "public boolean isImgRaw()"], ["boolean", "com.lowagie.text.Image.isImgTemplate()", "public boolean isImgTemplate()"], ["java.net.URL", "com.lowagie.text.Image.getUrl()", "public java.net.URL getUrl()"], ["void", "com.lowagie.text.Image.setUrl(java.net.URL)", "public void setUrl(java.net.URL)"], ["byte[]", "com.lowagie.text.Image.getRawData()", "public byte[] getRawData()"], ["int", "com.lowagie.text.Image.getBpc()", "public int getBpc()"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.Image.getTemplateData()", "public com.lowagie.text.pdf.PdfTemplate getTemplateData()"], ["void", "com.lowagie.text.Image.setTemplateData(com.lowagie.text.pdf.PdfTemplate)", "public void setTemplateData(com.lowagie.text.pdf.PdfTemplate)"], ["int", "com.lowagie.text.Image.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.Image.setAlignment(int)", "public void setAlignment(int)"], ["java.lang.String", "com.lowagie.text.Image.getAlt()", "public java.lang.String getAlt()"], ["void", "com.lowagie.text.Image.setAlt(java.lang.String)", "public void setAlt(java.lang.String)"], ["void", "com.lowagie.text.Image.setAbsolutePosition(float, float)", "public void setAbsolutePosition(float, float)"], ["boolean", "com.lowagie.text.Image.hasAbsoluteX()", "public boolean hasAbsoluteX()"], ["float", "com.lowagie.text.Image.getAbsoluteX()", "public float getAbsoluteX()"], ["boolean", "com.lowagie.text.Image.hasAbsoluteY()", "public boolean hasAbsoluteY()"], ["float", "com.lowagie.text.Image.getAbsoluteY()", "public float getAbsoluteY()"], ["float", "com.lowagie.text.Image.getScaledWidth()", "public float getScaledWidth()"], ["float", "com.lowagie.text.Image.getScaledHeight()", "public float getScaledHeight()"], ["float", "com.lowagie.text.Image.getPlainWidth()", "public float getPlainWidth()"], ["float", "com.lowagie.text.Image.getPlainHeight()", "public float getPlainHeight()"], ["void", "com.lowagie.text.Image.scaleAbsolute(float, float)", "public void scaleAbsolute(float, float)"], ["void", "com.lowagie.text.Image.scaleAbsoluteWidth(float)", "public void scaleAbsoluteWidth(float)"], ["void", "com.lowagie.text.Image.scaleAbsoluteHeight(float)", "public void scaleAbsoluteHeight(float)"], ["void", "com.lowagie.text.Image.scalePercent(float)", "public void scalePercent(float)"], ["void", "com.lowagie.text.Image.scalePercent(float, float)", "public void scalePercent(float, float)"], ["void", "com.lowagie.text.Image.scaleToFit(float, float)", "public void scaleToFit(float, float)"], ["float[]", "com.lowagie.text.Image.matrix()", "public float[] matrix()"], ["java.lang.Long", "com.lowagie.text.Image.getMySerialId()", "public java.lang.Long getMySerialId()"], ["float", "com.lowagie.text.Image.getImageRotation()", "public float getImageRotation()"], ["void", "com.lowagie.text.Image.setRotation(float)", "public void setRotation(float)"], ["void", "com.lowagie.text.Image.setRotationDegrees(float)", "public void setRotationDegrees(float)"], ["float", "com.lowagie.text.Image.getInitialRotation()", "public float getInitialRotation()"], ["void", "com.lowagie.text.Image.setInitialRotation(float)", "public void setInitialRotation(float)"], ["float", "com.lowagie.text.Image.getIndentationLeft()", "public float getIndentationLeft()"], ["void", "com.lowagie.text.Image.setIndentationLeft(float)", "public void setIndentationLeft(float)"], ["float", "com.lowagie.text.Image.getIndentationRight()", "public float getIndentationRight()"], ["void", "com.lowagie.text.Image.setIndentationRight(float)", "public void setIndentationRight(float)"], ["float", "com.lowagie.text.Image.getSpacingBefore()", "public float getSpacingBefore()"], ["void", "com.lowagie.text.Image.setSpacingBefore(float)", "public void setSpacingBefore(float)"], ["float", "com.lowagie.text.Image.getSpacingAfter()", "public float getSpacingAfter()"], ["void", "com.lowagie.text.Image.setSpacingAfter(float)", "public void setSpacingAfter(float)"], ["float", "com.lowagie.text.Image.getWidthPercentage()", "public float getWidthPercentage()"], ["void", "com.lowagie.text.Image.setWidthPercentage(float)", "public void setWidthPercentage(float)"], ["void", "com.lowagie.text.Image.setAnnotation(com.lowagie.text.Annotation)", "public void setAnnotation(com.lowagie.text.Annotation)"], ["com.lowagie.text.Annotation", "com.lowagie.text.Image.getAnnotation()", "public com.lowagie.text.Annotation getAnnotation()"], ["com.lowagie.text.pdf.PdfOCG", "com.lowagie.text.Image.getLayer()", "public com.lowagie.text.pdf.PdfOCG getLayer()"], ["void", "com.lowagie.text.Image.setLayer(com.lowagie.text.pdf.PdfOCG)", "public void setLayer(com.lowagie.text.pdf.PdfOCG)"], ["boolean", "com.lowagie.text.Image.isInterpolation()", "public boolean isInterpolation()"], ["void", "com.lowagie.text.Image.setInterpolation(boolean)", "public void setInterpolation(boolean)"], ["int", "com.lowagie.text.Image.getOriginalType()", "public int getOriginalType()"], ["void", "com.lowagie.text.Image.setOriginalType(int)", "public void setOriginalType(int)"], ["byte[]", "com.lowagie.text.Image.getOriginalData()", "public byte[] getOriginalData()"], ["void", "com.lowagie.text.Image.setOriginalData(byte[])", "public void setOriginalData(byte[])"], ["boolean", "com.lowagie.text.Image.isDeflated()", "public boolean isDeflated()"], ["void", "com.lowagie.text.Image.setDeflated(boolean)", "public void setDeflated(boolean)"], ["int", "com.lowagie.text.Image.getDpiX()", "public int getDpiX()"], ["int", "com.lowagie.text.Image.getDpiY()", "public int getDpiY()"], ["void", "com.lowagie.text.Image.setDpi(int, int)", "public void setDpi(int, int)"], ["float", "com.lowagie.text.Image.getXYRatio()", "public float getXYRatio()"], ["void", "com.lowagie.text.Image.setXYRatio(float)", "public void setXYRatio(float)"], ["int", "com.lowagie.text.Image.getColorspace()", "public int getColorspace()"], ["boolean", "com.lowagie.text.Image.isInverted()", "public boolean isInverted()"], ["void", "com.lowagie.text.Image.setInverted(boolean)", "public void setInverted(boolean)"], ["void", "com.lowagie.text.Image.tagICC(java.awt.color.ICC_Profile)", "public void tagICC(java.awt.color.ICC_Profile)"], ["boolean", "com.lowagie.text.Image.hasICCProfile()", "public boolean hasICCProfile()"], ["java.awt.color.ICC_Profile", "com.lowagie.text.Image.getICCProfile()", "public java.awt.color.ICC_Profile getICCProfile()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.Image.getAdditional()", "public com.lowagie.text.pdf.PdfDictionary getAdditional()"], ["void", "com.lowagie.text.Image.setAdditional(com.lowagie.text.pdf.PdfDictionary)", "public void setAdditional(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.Image.simplifyColorspace()", "public void simplifyColorspace()"], ["boolean", "com.lowagie.text.Image.isMask()", "public boolean isMask()"], ["void", "com.lowagie.text.Image.makeMask()", "public void makeMask() throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.Image.isMaskCandidate()", "public boolean isMaskCandidate()"], ["com.lowagie.text.Image", "com.lowagie.text.Image.getImageMask()", "public com.lowagie.text.Image getImageMask()"], ["void", "com.lowagie.text.Image.setImageMask(com.lowagie.text.Image)", "public void setImageMask(com.lowagie.text.Image) throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.Image.isSmask()", "public boolean isSmask()"], ["void", "com.lowagie.text.Image.setSmask(boolean)", "public void setSmask(boolean)"], ["int[]", "com.lowagie.text.Image.getTransparency()", "public int[] getTransparency()"], ["void", "com.lowagie.text.Image.setTransparency(int[])", "public void setTransparency(int[])"], ["int", "com.lowagie.text.Image.getCompressionLevel()", "public int getCompressionLevel()"], ["void", "com.lowagie.text.Image.setCompressionLevel(int)", "public void setCompressionLevel(int)"], ["com.lowagie.text.ImgCCITT", "com.lowagie.text.ImgCCITT(int, int, boolean, int, int, byte[])", "public com.lowagie.text.ImgCCITT(int, int, boolean, int, int, byte[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.ImgRaw", "com.lowagie.text.ImgRaw(int, int, int, int, byte[])", "public com.lowagie.text.ImgRaw(int, int, int, int, byte[]) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.ImgTemplate", "com.lowagie.text.ImgTemplate(com.lowagie.text.pdf.PdfTemplate)", "public com.lowagie.text.ImgTemplate(com.lowagie.text.pdf.PdfTemplate) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.ImgWMF", "com.lowagie.text.ImgWMF(java.net.URL)", "public com.lowagie.text.ImgWMF(java.net.URL) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.ImgWMF", "com.lowagie.text.ImgWMF(java.lang.String)", "public com.lowagie.text.ImgWMF(java.lang.String) throws com.lowagie.text.BadElementException, java.net.MalformedURLException, java.io.IOException"], ["com.lowagie.text.ImgWMF", "com.lowagie.text.ImgWMF(byte[])", "public com.lowagie.text.ImgWMF(byte[]) throws com.lowagie.text.BadElementException, java.io.IOException"], ["void", "com.lowagie.text.ImgWMF.readWMF(com.lowagie.text.pdf.PdfTemplate)", "public void readWMF(com.lowagie.text.pdf.PdfTemplate) throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.Jpeg", "com.lowagie.text.Jpeg(java.net.URL)", "public com.lowagie.text.Jpeg(java.net.URL) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Jpeg", "com.lowagie.text.Jpeg(byte[])", "public com.lowagie.text.Jpeg(byte[]) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Jpeg", "com.lowagie.text.Jpeg(byte[], float, float)", "public com.lowagie.text.Jpeg(byte[], float, float) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Jpeg2000", "com.lowagie.text.Jpeg2000(java.net.URL)", "public com.lowagie.text.Jpeg2000(java.net.URL) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Jpeg2000", "com.lowagie.text.Jpeg2000(byte[])", "public com.lowagie.text.Jpeg2000(byte[]) throws com.lowagie.text.BadElementException, java.io.IOException"], ["com.lowagie.text.Jpeg2000", "com.lowagie.text.Jpeg2000(byte[], float, float)", "public com.lowagie.text.Jpeg2000(byte[], float, float) throws com.lowagie.text.BadElementException, java.io.IOException"], ["void", "com.lowagie.text.Jpeg2000.jp2_read_boxhdr()", "public void jp2_read_boxhdr() throws java.io.IOException"], ["com.lowagie.text.List", "com.lowagie.text.List()", "public com.lowagie.text.List()"], ["com.lowagie.text.List", "com.lowagie.text.List(float)", "public com.lowagie.text.List(float)"], ["com.lowagie.text.List", "com.lowagie.text.List(boolean)", "public com.lowagie.text.List(boolean)"], ["com.lowagie.text.List", "com.lowagie.text.List(boolean, boolean)", "public com.lowagie.text.List(boolean, boolean)"], ["com.lowagie.text.List", "com.lowagie.text.List(boolean, float)", "public com.lowagie.text.List(boolean, float)"], ["com.lowagie.text.List", "com.lowagie.text.List(boolean, boolean, float)", "public com.lowagie.text.List(boolean, boolean, float)"], ["boolean", "com.lowagie.text.List.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.List.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.List.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.List.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["void", "com.lowagie.text.List.normalizeIndentation()", "public void normalizeIndentation()"], ["void", "com.lowagie.text.List.setNumbered(boolean)", "public void setNumbered(boolean)"], ["void", "com.lowagie.text.List.setLettered(boolean)", "public void setLettered(boolean)"], ["void", "com.lowagie.text.List.setLowercase(boolean)", "public void setLowercase(boolean)"], ["void", "com.lowagie.text.List.setAutoindent(boolean)", "public void setAutoindent(boolean)"], ["void", "com.lowagie.text.List.setAlignindent(boolean)", "public void setAlignindent(boolean)"], ["void", "com.lowagie.text.List.setFirst(int)", "public void setFirst(int)"], ["void", "com.lowagie.text.List.setListSymbol(com.lowagie.text.Chunk)", "public void setListSymbol(com.lowagie.text.Chunk)"], ["void", "com.lowagie.text.List.setListSymbol(java.lang.String)", "public void setListSymbol(java.lang.String)"], ["void", "com.lowagie.text.List.setIndentationLeft(float)", "public void setIndentationLeft(float)"], ["void", "com.lowagie.text.List.setIndentationRight(float)", "public void setIndentationRight(float)"], ["void", "com.lowagie.text.List.setSymbolIndent(float)", "public void setSymbolIndent(float)"], ["java.util.ArrayList", "com.lowagie.text.List.getItems()", "public java.util.ArrayList getItems()"], ["int", "com.lowagie.text.List.size()", "public int size()"], ["boolean", "com.lowagie.text.List.isEmpty()", "public boolean isEmpty()"], ["float", "com.lowagie.text.List.getTotalLeading()", "public float getTotalLeading()"], ["boolean", "com.lowagie.text.List.isNumbered()", "public boolean isNumbered()"], ["boolean", "com.lowagie.text.List.isLettered()", "public boolean isLettered()"], ["boolean", "com.lowagie.text.List.isLowercase()", "public boolean isLowercase()"], ["boolean", "com.lowagie.text.List.isAutoindent()", "public boolean isAutoindent()"], ["boolean", "com.lowagie.text.List.isAlignindent()", "public boolean isAlignindent()"], ["int", "com.lowagie.text.List.getFirst()", "public int getFirst()"], ["com.lowagie.text.Chunk", "com.lowagie.text.List.getSymbol()", "public com.lowagie.text.Chunk getSymbol()"], ["float", "com.lowagie.text.List.getIndentationLeft()", "public float getIndentationLeft()"], ["float", "com.lowagie.text.List.getIndentationRight()", "public float getIndentationRight()"], ["float", "com.lowagie.text.List.getSymbolIndent()", "public float getSymbolIndent()"], ["boolean", "com.lowagie.text.List.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.List.isNestable()", "public boolean isNestable()"], ["java.lang.String", "com.lowagie.text.List.getPostSymbol()", "public java.lang.String getPostSymbol()"], ["void", "com.lowagie.text.List.setPostSymbol(java.lang.String)", "public void setPostSymbol(java.lang.String)"], ["java.lang.String", "com.lowagie.text.List.getPreSymbol()", "public java.lang.String getPreSymbol()"], ["void", "com.lowagie.text.List.setPreSymbol(java.lang.String)", "public void setPreSymbol(java.lang.String)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem()", "public com.lowagie.text.ListItem()"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(float)", "public com.lowagie.text.ListItem(float)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(com.lowagie.text.Chunk)", "public com.lowagie.text.ListItem(com.lowagie.text.Chunk)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(java.lang.String)", "public com.lowagie.text.ListItem(java.lang.String)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.ListItem(java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(float, com.lowagie.text.Chunk)", "public com.lowagie.text.ListItem(float, com.lowagie.text.Chunk)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(float, java.lang.String)", "public com.lowagie.text.ListItem(float, java.lang.String)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(float, java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.ListItem(float, java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.ListItem", "com.lowagie.text.ListItem(com.lowagie.text.Phrase)", "public com.lowagie.text.ListItem(com.lowagie.text.Phrase)"], ["int", "com.lowagie.text.ListItem.type()", "public int type()"], ["void", "com.lowagie.text.ListItem.setListSymbol(com.lowagie.text.Chunk)", "public void setListSymbol(com.lowagie.text.Chunk)"], ["void", "com.lowagie.text.ListItem.setIndentationLeft(float, boolean)", "public void setIndentationLeft(float, boolean)"], ["com.lowagie.text.Chunk", "com.lowagie.text.ListItem.getListSymbol()", "public com.lowagie.text.Chunk getListSymbol()"], ["com.lowagie.text.MarkedObject", "com.lowagie.text.MarkedObject(com.lowagie.text.Element)", "public com.lowagie.text.MarkedObject(com.lowagie.text.Element)"], ["java.util.ArrayList", "com.lowagie.text.MarkedObject.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.MarkedObject.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.MarkedObject.type()", "public int type()"], ["boolean", "com.lowagie.text.MarkedObject.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.MarkedObject.isNestable()", "public boolean isNestable()"], ["java.util.Properties", "com.lowagie.text.MarkedObject.getMarkupAttributes()", "public java.util.Properties getMarkupAttributes()"], ["void", "com.lowagie.text.MarkedObject.setMarkupAttribute(java.lang.String, java.lang.String)", "public void setMarkupAttribute(java.lang.String, java.lang.String)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.MarkedSection(com.lowagie.text.Section)", "public com.lowagie.text.MarkedSection(com.lowagie.text.Section)"], ["void", "com.lowagie.text.MarkedSection.add(int, java.lang.Object)", "public void add(int, java.lang.Object)"], ["boolean", "com.lowagie.text.MarkedSection.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["boolean", "com.lowagie.text.MarkedSection.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["boolean", "com.lowagie.text.MarkedSection.addAll(java.util.Collection)", "public boolean addAll(java.util.Collection)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.MarkedSection.addSection(float, int)", "public com.lowagie.text.MarkedSection addSection(float, int)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.MarkedSection.addSection(float)", "public com.lowagie.text.MarkedSection addSection(float)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.MarkedSection.addSection(int)", "public com.lowagie.text.MarkedSection addSection(int)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.MarkedSection.addSection()", "public com.lowagie.text.MarkedSection addSection()"], ["void", "com.lowagie.text.MarkedSection.setTitle(com.lowagie.text.MarkedObject)", "public void setTitle(com.lowagie.text.MarkedObject)"], ["com.lowagie.text.MarkedObject", "com.lowagie.text.MarkedSection.getTitle()", "public com.lowagie.text.MarkedObject getTitle()"], ["void", "com.lowagie.text.MarkedSection.setNumberDepth(int)", "public void setNumberDepth(int)"], ["void", "com.lowagie.text.MarkedSection.setIndentationLeft(float)", "public void setIndentationLeft(float)"], ["void", "com.lowagie.text.MarkedSection.setIndentationRight(float)", "public void setIndentationRight(float)"], ["void", "com.lowagie.text.MarkedSection.setIndentation(float)", "public void setIndentation(float)"], ["void", "com.lowagie.text.MarkedSection.setBookmarkOpen(boolean)", "public void setBookmarkOpen(boolean)"], ["void", "com.lowagie.text.MarkedSection.setTriggerNewPage(boolean)", "public void setTriggerNewPage(boolean)"], ["void", "com.lowagie.text.MarkedSection.setBookmarkTitle(java.lang.String)", "public void setBookmarkTitle(java.lang.String)"], ["void", "com.lowagie.text.MarkedSection.newPage()", "public void newPage()"], ["com.lowagie.text.Meta", "com.lowagie.text.Meta(java.lang.String, java.lang.String)", "public com.lowagie.text.Meta(java.lang.String, java.lang.String)"], ["boolean", "com.lowagie.text.Meta.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Meta.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Meta.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Meta.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Meta.isNestable()", "public boolean isNestable()"], ["java.lang.StringBuffer", "com.lowagie.text.Meta.append(java.lang.String)", "public java.lang.StringBuffer append(java.lang.String)"], ["java.lang.String", "com.lowagie.text.Meta.getContent()", "public java.lang.String getContent()"], ["java.lang.String", "com.lowagie.text.Meta.getName()", "public java.lang.String getName()"], ["int", "com.lowagie.text.Meta.getType(java.lang.String)", "public static int getType(java.lang.String)"], ["com.lowagie.text.PageSize", "com.lowagie.text.PageSize()", "public com.lowagie.text.PageSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.PageSize.getRectangle(java.lang.String)", "public static com.lowagie.text.Rectangle getRectangle(java.lang.String)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph()", "public com.lowagie.text.Paragraph()"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(float)", "public com.lowagie.text.Paragraph(float)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(com.lowagie.text.Chunk)", "public com.lowagie.text.Paragraph(com.lowagie.text.Chunk)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(float, com.lowagie.text.Chunk)", "public com.lowagie.text.Paragraph(float, com.lowagie.text.Chunk)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(java.lang.String)", "public com.lowagie.text.Paragraph(java.lang.String)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Paragraph(java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(float, java.lang.String)", "public com.lowagie.text.Paragraph(float, java.lang.String)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(float, java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Paragraph(float, java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Paragraph(com.lowagie.text.Phrase)", "public com.lowagie.text.Paragraph(com.lowagie.text.Phrase)"], ["int", "com.lowagie.text.Paragraph.type()", "public int type()"], ["boolean", "com.lowagie.text.Paragraph.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["void", "com.lowagie.text.Paragraph.setAlignment(int)", "public void setAlignment(int)"], ["void", "com.lowagie.text.Paragraph.setAlignment(java.lang.String)", "public void setAlignment(java.lang.String)"], ["void", "com.lowagie.text.Paragraph.setLeading(float)", "public void setLeading(float)"], ["void", "com.lowagie.text.Paragraph.setMultipliedLeading(float)", "public void setMultipliedLeading(float)"], ["void", "com.lowagie.text.Paragraph.setLeading(float, float)", "public void setLeading(float, float)"], ["void", "com.lowagie.text.Paragraph.setIndentationLeft(float)", "public void setIndentationLeft(float)"], ["void", "com.lowagie.text.Paragraph.setIndentationRight(float)", "public void setIndentationRight(float)"], ["void", "com.lowagie.text.Paragraph.setFirstLineIndent(float)", "public void setFirstLineIndent(float)"], ["void", "com.lowagie.text.Paragraph.setSpacingBefore(float)", "public void setSpacingBefore(float)"], ["void", "com.lowagie.text.Paragraph.setSpacingAfter(float)", "public void setSpacingAfter(float)"], ["void", "com.lowagie.text.Paragraph.setKeepTogether(boolean)", "public void setKeepTogether(boolean)"], ["boolean", "com.lowagie.text.Paragraph.getKeepTogether()", "public boolean getKeepTogether()"], ["int", "com.lowagie.text.Paragraph.getAlignment()", "public int getAlignment()"], ["float", "com.lowagie.text.Paragraph.getMultipliedLeading()", "public float getMultipliedLeading()"], ["float", "com.lowagie.text.Paragraph.getTotalLeading()", "public float getTotalLeading()"], ["float", "com.lowagie.text.Paragraph.getIndentationLeft()", "public float getIndentationLeft()"], ["float", "com.lowagie.text.Paragraph.getIndentationRight()", "public float getIndentationRight()"], ["float", "com.lowagie.text.Paragraph.getFirstLineIndent()", "public float getFirstLineIndent()"], ["float", "com.lowagie.text.Paragraph.spacingBefore()", "public float spacingBefore()"], ["float", "com.lowagie.text.Paragraph.spacingAfter()", "public float spacingAfter()"], ["float", "com.lowagie.text.Paragraph.getExtraParagraphSpace()", "public float getExtraParagraphSpace()"], ["void", "com.lowagie.text.Paragraph.setExtraParagraphSpace(float)", "public void setExtraParagraphSpace(float)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase()", "public com.lowagie.text.Phrase()"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(com.lowagie.text.Phrase)", "public com.lowagie.text.Phrase(com.lowagie.text.Phrase)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(float)", "public com.lowagie.text.Phrase(float)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(com.lowagie.text.Chunk)", "public com.lowagie.text.Phrase(com.lowagie.text.Chunk)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(float, com.lowagie.text.Chunk)", "public com.lowagie.text.Phrase(float, com.lowagie.text.Chunk)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(java.lang.String)", "public com.lowagie.text.Phrase(java.lang.String)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Phrase(java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(float, java.lang.String)", "public com.lowagie.text.Phrase(float, java.lang.String)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase(float, java.lang.String, com.lowagie.text.Font)", "public com.lowagie.text.Phrase(float, java.lang.String, com.lowagie.text.Font)"], ["boolean", "com.lowagie.text.Phrase.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Phrase.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Phrase.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Phrase.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Phrase.isNestable()", "public boolean isNestable()"], ["void", "com.lowagie.text.Phrase.add(int, java.lang.Object)", "public void add(int, java.lang.Object)"], ["boolean", "com.lowagie.text.Phrase.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["boolean", "com.lowagie.text.Phrase.addAll(java.util.Collection)", "public boolean addAll(java.util.Collection)"], ["void", "com.lowagie.text.Phrase.setLeading(float)", "public void setLeading(float)"], ["void", "com.lowagie.text.Phrase.setFont(com.lowagie.text.Font)", "public void setFont(com.lowagie.text.Font)"], ["float", "com.lowagie.text.Phrase.getLeading()", "public float getLeading()"], ["boolean", "com.lowagie.text.Phrase.hasLeading()", "public boolean hasLeading()"], ["com.lowagie.text.Font", "com.lowagie.text.Phrase.getFont()", "public com.lowagie.text.Font getFont()"], ["java.lang.String", "com.lowagie.text.Phrase.getContent()", "public java.lang.String getContent()"], ["boolean", "com.lowagie.text.Phrase.isEmpty()", "public boolean isEmpty()"], ["com.lowagie.text.pdf.HyphenationEvent", "com.lowagie.text.Phrase.getHyphenation()", "public com.lowagie.text.pdf.HyphenationEvent getHyphenation()"], ["void", "com.lowagie.text.Phrase.setHyphenation(com.lowagie.text.pdf.HyphenationEvent)", "public void setHyphenation(com.lowagie.text.pdf.HyphenationEvent)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase.getInstance(java.lang.String)", "public static final com.lowagie.text.Phrase getInstance(java.lang.String)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase.getInstance(int, java.lang.String)", "public static final com.lowagie.text.Phrase getInstance(int, java.lang.String)"], ["com.lowagie.text.Phrase", "com.lowagie.text.Phrase.getInstance(int, java.lang.String, com.lowagie.text.Font)", "public static final com.lowagie.text.Phrase getInstance(int, java.lang.String, com.lowagie.text.Font)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Rectangle(float, float, float, float)", "public com.lowagie.text.Rectangle(float, float, float, float)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Rectangle(float, float)", "public com.lowagie.text.Rectangle(float, float)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Rectangle(com.lowagie.text.Rectangle)", "public com.lowagie.text.Rectangle(com.lowagie.text.Rectangle)"], ["boolean", "com.lowagie.text.Rectangle.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Rectangle.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Rectangle.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Rectangle.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Rectangle.isNestable()", "public boolean isNestable()"], ["void", "com.lowagie.text.Rectangle.setLeft(float)", "public void setLeft(float)"], ["float", "com.lowagie.text.Rectangle.getLeft()", "public float getLeft()"], ["float", "com.lowagie.text.Rectangle.getLeft(float)", "public float getLeft(float)"], ["void", "com.lowagie.text.Rectangle.setRight(float)", "public void setRight(float)"], ["float", "com.lowagie.text.Rectangle.getRight()", "public float getRight()"], ["float", "com.lowagie.text.Rectangle.getRight(float)", "public float getRight(float)"], ["float", "com.lowagie.text.Rectangle.getWidth()", "public float getWidth()"], ["void", "com.lowagie.text.Rectangle.setTop(float)", "public void setTop(float)"], ["float", "com.lowagie.text.Rectangle.getTop()", "public float getTop()"], ["float", "com.lowagie.text.Rectangle.getTop(float)", "public float getTop(float)"], ["void", "com.lowagie.text.Rectangle.setBottom(float)", "public void setBottom(float)"], ["float", "com.lowagie.text.Rectangle.getBottom()", "public float getBottom()"], ["float", "com.lowagie.text.Rectangle.getBottom(float)", "public float getBottom(float)"], ["float", "com.lowagie.text.Rectangle.getHeight()", "public float getHeight()"], ["void", "com.lowagie.text.Rectangle.normalize()", "public void normalize()"], ["int", "com.lowagie.text.Rectangle.getRotation()", "public int getRotation()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Rectangle.rotate()", "public com.lowagie.text.Rectangle rotate()"], ["int", "com.lowagie.text.Rectangle.getBorder()", "public int getBorder()"], ["boolean", "com.lowagie.text.Rectangle.hasBorders()", "public boolean hasBorders()"], ["boolean", "com.lowagie.text.Rectangle.hasBorder(int)", "public boolean hasBorder(int)"], ["void", "com.lowagie.text.Rectangle.setBorder(int)", "public void setBorder(int)"], ["void", "com.lowagie.text.Rectangle.enableBorderSide(int)", "public void enableBorderSide(int)"], ["void", "com.lowagie.text.Rectangle.disableBorderSide(int)", "public void disableBorderSide(int)"], ["float", "com.lowagie.text.Rectangle.getBorderWidth()", "public float getBorderWidth()"], ["void", "com.lowagie.text.Rectangle.setBorderWidth(float)", "public void setBorderWidth(float)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBorderColor()", "public java.awt.Color getBorderColor()"], ["void", "com.lowagie.text.Rectangle.setBorderColor(java.awt.Color)", "public void setBorderColor(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBackgroundColor()", "public java.awt.Color getBackgroundColor()"], ["void", "com.lowagie.text.Rectangle.setBackgroundColor(java.awt.Color)", "public void setBackgroundColor(java.awt.Color)"], ["float", "com.lowagie.text.Rectangle.getGrayFill()", "public float getGrayFill()"], ["void", "com.lowagie.text.Rectangle.setGrayFill(float)", "public void setGrayFill(float)"], ["boolean", "com.lowagie.text.Rectangle.isUseVariableBorders()", "public boolean isUseVariableBorders()"], ["void", "com.lowagie.text.Rectangle.setUseVariableBorders(boolean)", "public void setUseVariableBorders(boolean)"], ["float", "com.lowagie.text.Rectangle.getBorderWidthLeft()", "public float getBorderWidthLeft()"], ["void", "com.lowagie.text.Rectangle.setBorderWidthLeft(float)", "public void setBorderWidthLeft(float)"], ["float", "com.lowagie.text.Rectangle.getBorderWidthRight()", "public float getBorderWidthRight()"], ["void", "com.lowagie.text.Rectangle.setBorderWidthRight(float)", "public void setBorderWidthRight(float)"], ["float", "com.lowagie.text.Rectangle.getBorderWidthTop()", "public float getBorderWidthTop()"], ["void", "com.lowagie.text.Rectangle.setBorderWidthTop(float)", "public void setBorderWidthTop(float)"], ["float", "com.lowagie.text.Rectangle.getBorderWidthBottom()", "public float getBorderWidthBottom()"], ["void", "com.lowagie.text.Rectangle.setBorderWidthBottom(float)", "public void setBorderWidthBottom(float)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBorderColorLeft()", "public java.awt.Color getBorderColorLeft()"], ["void", "com.lowagie.text.Rectangle.setBorderColorLeft(java.awt.Color)", "public void setBorderColorLeft(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBorderColorRight()", "public java.awt.Color getBorderColorRight()"], ["void", "com.lowagie.text.Rectangle.setBorderColorRight(java.awt.Color)", "public void setBorderColorRight(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBorderColorTop()", "public java.awt.Color getBorderColorTop()"], ["void", "com.lowagie.text.Rectangle.setBorderColorTop(java.awt.Color)", "public void setBorderColorTop(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.Rectangle.getBorderColorBottom()", "public java.awt.Color getBorderColorBottom()"], ["void", "com.lowagie.text.Rectangle.setBorderColorBottom(java.awt.Color)", "public void setBorderColorBottom(java.awt.Color)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.Rectangle.rectangle(float, float)", "public com.lowagie.text.Rectangle rectangle(float, float)"], ["void", "com.lowagie.text.Rectangle.cloneNonPositionParameters(com.lowagie.text.Rectangle)", "public void cloneNonPositionParameters(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.Rectangle.softCloneNonPositionParameters(com.lowagie.text.Rectangle)", "public void softCloneNonPositionParameters(com.lowagie.text.Rectangle)"], ["java.lang.String", "com.lowagie.text.Rectangle.toString()", "public java.lang.String toString()"], ["com.lowagie.text.RectangleReadOnly", "com.lowagie.text.RectangleReadOnly(float, float, float, float)", "public com.lowagie.text.RectangleReadOnly(float, float, float, float)"], ["com.lowagie.text.RectangleReadOnly", "com.lowagie.text.RectangleReadOnly(float, float)", "public com.lowagie.text.RectangleReadOnly(float, float)"], ["com.lowagie.text.RectangleReadOnly", "com.lowagie.text.RectangleReadOnly(com.lowagie.text.Rectangle)", "public com.lowagie.text.RectangleReadOnly(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.RectangleReadOnly.setLeft(float)", "public void setLeft(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setRight(float)", "public void setRight(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setTop(float)", "public void setTop(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBottom(float)", "public void setBottom(float)"], ["void", "com.lowagie.text.RectangleReadOnly.normalize()", "public void normalize()"], ["void", "com.lowagie.text.RectangleReadOnly.setBorder(int)", "public void setBorder(int)"], ["void", "com.lowagie.text.RectangleReadOnly.enableBorderSide(int)", "public void enableBorderSide(int)"], ["void", "com.lowagie.text.RectangleReadOnly.disableBorderSide(int)", "public void disableBorderSide(int)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderWidth(float)", "public void setBorderWidth(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderColor(java.awt.Color)", "public void setBorderColor(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.setBackgroundColor(java.awt.Color)", "public void setBackgroundColor(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.setGrayFill(float)", "public void setGrayFill(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setUseVariableBorders(boolean)", "public void setUseVariableBorders(boolean)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderWidthLeft(float)", "public void setBorderWidthLeft(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderWidthRight(float)", "public void setBorderWidthRight(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderWidthTop(float)", "public void setBorderWidthTop(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderWidthBottom(float)", "public void setBorderWidthBottom(float)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderColorLeft(java.awt.Color)", "public void setBorderColorLeft(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderColorRight(java.awt.Color)", "public void setBorderColorRight(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderColorTop(java.awt.Color)", "public void setBorderColorTop(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.setBorderColorBottom(java.awt.Color)", "public void setBorderColorBottom(java.awt.Color)"], ["void", "com.lowagie.text.RectangleReadOnly.cloneNonPositionParameters(com.lowagie.text.Rectangle)", "public void cloneNonPositionParameters(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.RectangleReadOnly.softCloneNonPositionParameters(com.lowagie.text.Rectangle)", "public void softCloneNonPositionParameters(com.lowagie.text.Rectangle)"], ["java.lang.String", "com.lowagie.text.RectangleReadOnly.toString()", "public java.lang.String toString()"], ["com.lowagie.text.RomanList", "com.lowagie.text.RomanList()", "public com.lowagie.text.RomanList()"], ["com.lowagie.text.RomanList", "com.lowagie.text.RomanList(int)", "public com.lowagie.text.RomanList(int)"], ["com.lowagie.text.RomanList", "com.lowagie.text.RomanList(boolean, int)", "public com.lowagie.text.RomanList(boolean, int)"], ["boolean", "com.lowagie.text.RomanList.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["boolean", "com.lowagie.text.Row.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Row.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Row.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Row.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Row.isNestable()", "public boolean isNestable()"], ["java.lang.Object", "com.lowagie.text.Row.getCell(int)", "public java.lang.Object getCell(int)"], ["boolean", "com.lowagie.text.Row.isEmpty()", "public boolean isEmpty()"], ["int", "com.lowagie.text.Row.getColumns()", "public int getColumns()"], ["void", "com.lowagie.text.Row.setHorizontalAlignment(int)", "public void setHorizontalAlignment(int)"], ["int", "com.lowagie.text.Row.getHorizontalAlignment()", "public int getHorizontalAlignment()"], ["boolean", "com.lowagie.text.Section.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Section.type()", "public int type()"], ["boolean", "com.lowagie.text.Section.isChapter()", "public boolean isChapter()"], ["boolean", "com.lowagie.text.Section.isSection()", "public boolean isSection()"], ["java.util.ArrayList", "com.lowagie.text.Section.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Section.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.Section.isNestable()", "public boolean isNestable()"], ["void", "com.lowagie.text.Section.add(int, java.lang.Object)", "public void add(int, java.lang.Object)"], ["boolean", "com.lowagie.text.Section.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["boolean", "com.lowagie.text.Section.addAll(java.util.Collection)", "public boolean addAll(java.util.Collection)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(float, com.lowagie.text.Paragraph, int)", "public com.lowagie.text.Section addSection(float, com.lowagie.text.Paragraph, int)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(float, com.lowagie.text.Paragraph)", "public com.lowagie.text.Section addSection(float, com.lowagie.text.Paragraph)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(com.lowagie.text.Paragraph, int)", "public com.lowagie.text.Section addSection(com.lowagie.text.Paragraph, int)"], ["com.lowagie.text.MarkedSection", "com.lowagie.text.Section.addMarkedSection()", "public com.lowagie.text.MarkedSection addMarkedSection()"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(com.lowagie.text.Paragraph)", "public com.lowagie.text.Section addSection(com.lowagie.text.Paragraph)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(float, java.lang.String, int)", "public com.lowagie.text.Section addSection(float, java.lang.String, int)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(java.lang.String, int)", "public com.lowagie.text.Section addSection(java.lang.String, int)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(float, java.lang.String)", "public com.lowagie.text.Section addSection(float, java.lang.String)"], ["com.lowagie.text.Section", "com.lowagie.text.Section.addSection(java.lang.String)", "public com.lowagie.text.Section addSection(java.lang.String)"], ["void", "com.lowagie.text.Section.setTitle(com.lowagie.text.Paragraph)", "public void setTitle(com.lowagie.text.Paragraph)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Section.getTitle()", "public com.lowagie.text.Paragraph getTitle()"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Section.constructTitle(com.lowagie.text.Paragraph, java.util.ArrayList, int, int)", "public static com.lowagie.text.Paragraph constructTitle(com.lowagie.text.Paragraph, java.util.ArrayList, int, int)"], ["void", "com.lowagie.text.Section.setNumberDepth(int)", "public void setNumberDepth(int)"], ["int", "com.lowagie.text.Section.getNumberDepth()", "public int getNumberDepth()"], ["void", "com.lowagie.text.Section.setNumberStyle(int)", "public void setNumberStyle(int)"], ["int", "com.lowagie.text.Section.getNumberStyle()", "public int getNumberStyle()"], ["void", "com.lowagie.text.Section.setIndentationLeft(float)", "public void setIndentationLeft(float)"], ["float", "com.lowagie.text.Section.getIndentationLeft()", "public float getIndentationLeft()"], ["void", "com.lowagie.text.Section.setIndentationRight(float)", "public void setIndentationRight(float)"], ["float", "com.lowagie.text.Section.getIndentationRight()", "public float getIndentationRight()"], ["void", "com.lowagie.text.Section.setIndentation(float)", "public void setIndentation(float)"], ["float", "com.lowagie.text.Section.getIndentation()", "public float getIndentation()"], ["void", "com.lowagie.text.Section.setBookmarkOpen(boolean)", "public void setBookmarkOpen(boolean)"], ["boolean", "com.lowagie.text.Section.isBookmarkOpen()", "public boolean isBookmarkOpen()"], ["void", "com.lowagie.text.Section.setTriggerNewPage(boolean)", "public void setTriggerNewPage(boolean)"], ["boolean", "com.lowagie.text.Section.isTriggerNewPage()", "public boolean isTriggerNewPage()"], ["void", "com.lowagie.text.Section.setBookmarkTitle(java.lang.String)", "public void setBookmarkTitle(java.lang.String)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.Section.getBookmarkTitle()", "public com.lowagie.text.Paragraph getBookmarkTitle()"], ["void", "com.lowagie.text.Section.setChapterNumber(int)", "public void setChapterNumber(int)"], ["int", "com.lowagie.text.Section.getDepth()", "public int getDepth()"], ["boolean", "com.lowagie.text.Section.isNotAddedYet()", "public boolean isNotAddedYet()"], ["void", "com.lowagie.text.Section.setNotAddedYet(boolean)", "public void setNotAddedYet(boolean)"], ["void", "com.lowagie.text.Section.flushContent()", "public void flushContent()"], ["boolean", "com.lowagie.text.Section.isComplete()", "public boolean isComplete()"], ["void", "com.lowagie.text.Section.setComplete(boolean)", "public void setComplete(boolean)"], ["void", "com.lowagie.text.Section.newPage()", "public void newPage()"], ["com.lowagie.text.SimpleCell", "com.lowagie.text.SimpleCell(boolean)", "public com.lowagie.text.SimpleCell(boolean)"], ["void", "com.lowagie.text.SimpleCell.addElement(com.lowagie.text.Element)", "public void addElement(com.lowagie.text.Element) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Cell", "com.lowagie.text.SimpleCell.createCell(com.lowagie.text.SimpleCell)", "public com.lowagie.text.Cell createCell(com.lowagie.text.SimpleCell) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.SimpleCell.createPdfPCell(com.lowagie.text.SimpleCell)", "public com.lowagie.text.pdf.PdfPCell createPdfPCell(com.lowagie.text.SimpleCell)"], ["com.lowagie.text.SimpleCell", "com.lowagie.text.SimpleCell.getDimensionlessInstance(com.lowagie.text.Rectangle, float)", "public static com.lowagie.text.SimpleCell getDimensionlessInstance(com.lowagie.text.Rectangle, float)"], ["void", "com.lowagie.text.SimpleCell.cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])", "public void cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])"], ["void", "com.lowagie.text.SimpleCell.setPadding(float)", "public void setPadding(float)"], ["int", "com.lowagie.text.SimpleCell.getColspan()", "public int getColspan()"], ["void", "com.lowagie.text.SimpleCell.setColspan(int)", "public void setColspan(int)"], ["float", "com.lowagie.text.SimpleCell.getPadding_bottom()", "public float getPadding_bottom()"], ["void", "com.lowagie.text.SimpleCell.setPadding_bottom(float)", "public void setPadding_bottom(float)"], ["float", "com.lowagie.text.SimpleCell.getPadding_left()", "public float getPadding_left()"], ["void", "com.lowagie.text.SimpleCell.setPadding_left(float)", "public void setPadding_left(float)"], ["float", "com.lowagie.text.SimpleCell.getPadding_right()", "public float getPadding_right()"], ["void", "com.lowagie.text.SimpleCell.setPadding_right(float)", "public void setPadding_right(float)"], ["float", "com.lowagie.text.SimpleCell.getPadding_top()", "public float getPadding_top()"], ["void", "com.lowagie.text.SimpleCell.setPadding_top(float)", "public void setPadding_top(float)"], ["float", "com.lowagie.text.SimpleCell.getSpacing_left()", "public float getSpacing_left()"], ["float", "com.lowagie.text.SimpleCell.getSpacing_right()", "public float getSpacing_right()"], ["float", "com.lowagie.text.SimpleCell.getSpacing_top()", "public float getSpacing_top()"], ["float", "com.lowagie.text.SimpleCell.getSpacing_bottom()", "public float getSpacing_bottom()"], ["void", "com.lowagie.text.SimpleCell.setSpacing(float)", "public void setSpacing(float)"], ["void", "com.lowagie.text.SimpleCell.setSpacing_left(float)", "public void setSpacing_left(float)"], ["void", "com.lowagie.text.SimpleCell.setSpacing_right(float)", "public void setSpacing_right(float)"], ["void", "com.lowagie.text.SimpleCell.setSpacing_top(float)", "public void setSpacing_top(float)"], ["void", "com.lowagie.text.SimpleCell.setSpacing_bottom(float)", "public void setSpacing_bottom(float)"], ["boolean", "com.lowagie.text.SimpleCell.isCellgroup()", "public boolean isCellgroup()"], ["void", "com.lowagie.text.SimpleCell.setCellgroup(boolean)", "public void setCellgroup(boolean)"], ["int", "com.lowagie.text.SimpleCell.getHorizontalAlignment()", "public int getHorizontalAlignment()"], ["void", "com.lowagie.text.SimpleCell.setHorizontalAlignment(int)", "public void setHorizontalAlignment(int)"], ["int", "com.lowagie.text.SimpleCell.getVerticalAlignment()", "public int getVerticalAlignment()"], ["void", "com.lowagie.text.SimpleCell.setVerticalAlignment(int)", "public void setVerticalAlignment(int)"], ["float", "com.lowagie.text.SimpleCell.getWidth()", "public float getWidth()"], ["void", "com.lowagie.text.SimpleCell.setWidth(float)", "public void setWidth(float)"], ["float", "com.lowagie.text.SimpleCell.getWidthpercentage()", "public float getWidthpercentage()"], ["void", "com.lowagie.text.SimpleCell.setWidthpercentage(float)", "public void setWidthpercentage(float)"], ["boolean", "com.lowagie.text.SimpleCell.isUseAscender()", "public boolean isUseAscender()"], ["void", "com.lowagie.text.SimpleCell.setUseAscender(boolean)", "public void setUseAscender(boolean)"], ["boolean", "com.lowagie.text.SimpleCell.isUseBorderPadding()", "public boolean isUseBorderPadding()"], ["void", "com.lowagie.text.SimpleCell.setUseBorderPadding(boolean)", "public void setUseBorderPadding(boolean)"], ["boolean", "com.lowagie.text.SimpleCell.isUseDescender()", "public boolean isUseDescender()"], ["void", "com.lowagie.text.SimpleCell.setUseDescender(boolean)", "public void setUseDescender(boolean)"], ["boolean", "com.lowagie.text.SimpleCell.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["int", "com.lowagie.text.SimpleCell.type()", "public int type()"], ["com.lowagie.text.SimpleTable", "com.lowagie.text.SimpleTable()", "public com.lowagie.text.SimpleTable()"], ["void", "com.lowagie.text.SimpleTable.addElement(com.lowagie.text.SimpleCell)", "public void addElement(com.lowagie.text.SimpleCell) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Table", "com.lowagie.text.SimpleTable.createTable()", "public com.lowagie.text.Table createTable() throws com.lowagie.text.BadElementException"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.SimpleTable.createPdfPTable()", "public com.lowagie.text.pdf.PdfPTable createPdfPTable() throws com.lowagie.text.DocumentException"], ["com.lowagie.text.SimpleTable", "com.lowagie.text.SimpleTable.getDimensionlessInstance(com.lowagie.text.Rectangle, float)", "public static com.lowagie.text.SimpleTable getDimensionlessInstance(com.lowagie.text.Rectangle, float)"], ["void", "com.lowagie.text.SimpleTable.tableLayout(com.lowagie.text.pdf.PdfPTable, float[][], float[], int, int, com.lowagie.text.pdf.PdfContentByte[])", "public void tableLayout(com.lowagie.text.pdf.PdfPTable, float[][], float[], int, int, com.lowagie.text.pdf.PdfContentByte[])"], ["float", "com.lowagie.text.SimpleTable.getCellpadding()", "public float getCellpadding()"], ["void", "com.lowagie.text.SimpleTable.setCellpadding(float)", "public void setCellpadding(float)"], ["float", "com.lowagie.text.SimpleTable.getCellspacing()", "public float getCellspacing()"], ["void", "com.lowagie.text.SimpleTable.setCellspacing(float)", "public void setCellspacing(float)"], ["int", "com.lowagie.text.SimpleTable.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.SimpleTable.setAlignment(int)", "public void setAlignment(int)"], ["float", "com.lowagie.text.SimpleTable.getWidth()", "public float getWidth()"], ["void", "com.lowagie.text.SimpleTable.setWidth(float)", "public void setWidth(float)"], ["float", "com.lowagie.text.SimpleTable.getWidthpercentage()", "public float getWidthpercentage()"], ["void", "com.lowagie.text.SimpleTable.setWidthpercentage(float)", "public void setWidthpercentage(float)"], ["int", "com.lowagie.text.SimpleTable.type()", "public int type()"], ["boolean", "com.lowagie.text.SimpleTable.isNestable()", "public boolean isNestable()"], ["boolean", "com.lowagie.text.SimpleTable.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["com.lowagie.text.SpecialSymbol", "com.lowagie.text.SpecialSymbol()", "public com.lowagie.text.SpecialSymbol()"], ["int", "com.lowagie.text.SpecialSymbol.index(java.lang.String)", "public static int index(java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.SpecialSymbol.get(char, com.lowagie.text.Font)", "public static com.lowagie.text.Chunk get(char, com.lowagie.text.Font)"], ["char", "com.lowagie.text.SpecialSymbol.getCorrespondingSymbol(char)", "public static char getCorrespondingSymbol(char)"], ["com.lowagie.text.Table", "com.lowagie.text.Table(int)", "public com.lowagie.text.Table(int) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Table", "com.lowagie.text.Table(int, int)", "public com.lowagie.text.Table(int, int) throws com.lowagie.text.BadElementException"], ["com.lowagie.text.Table", "com.lowagie.text.Table(com.lowagie.text.Table)", "public com.lowagie.text.Table(com.lowagie.text.Table)"], ["boolean", "com.lowagie.text.Table.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.Table.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.Table.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.Table.isNestable()", "public boolean isNestable()"], ["int", "com.lowagie.text.Table.getColumns()", "public int getColumns()"], ["int", "com.lowagie.text.Table.size()", "public int size()"], ["java.awt.Dimension", "com.lowagie.text.Table.getDimension()", "public java.awt.Dimension getDimension()"], ["com.lowagie.text.Cell", "com.lowagie.text.Table.getDefaultCell()", "public com.lowagie.text.Cell getDefaultCell()"], ["void", "com.lowagie.text.Table.setDefaultCell(com.lowagie.text.Cell)", "public void setDefaultCell(com.lowagie.text.Cell)"], ["int", "com.lowagie.text.Table.getLastHeaderRow()", "public int getLastHeaderRow()"], ["void", "com.lowagie.text.Table.setLastHeaderRow(int)", "public void setLastHeaderRow(int)"], ["int", "com.lowagie.text.Table.endHeaders()", "public int endHeaders()"], ["int", "com.lowagie.text.Table.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.Table.setAlignment(int)", "public void setAlignment(int)"], ["void", "com.lowagie.text.Table.setAlignment(java.lang.String)", "public void setAlignment(java.lang.String)"], ["float", "com.lowagie.text.Table.getPadding()", "public float getPadding()"], ["void", "com.lowagie.text.Table.setPadding(float)", "public void setPadding(float)"], ["float", "com.lowagie.text.Table.getSpacing()", "public float getSpacing()"], ["void", "com.lowagie.text.Table.setSpacing(float)", "public void setSpacing(float)"], ["void", "com.lowagie.text.Table.setAutoFillEmptyCells(boolean)", "public void setAutoFillEmptyCells(boolean)"], ["float", "com.lowagie.text.Table.getWidth()", "public float getWidth()"], ["void", "com.lowagie.text.Table.setWidth(float)", "public void setWidth(float)"], ["boolean", "com.lowagie.text.Table.isLocked()", "public boolean isLocked()"], ["void", "com.lowagie.text.Table.setLocked(boolean)", "public void setLocked(boolean)"], ["float[]", "com.lowagie.text.Table.getProportionalWidths()", "public float[] getProportionalWidths()"], ["void", "com.lowagie.text.Table.setWidths(float[])", "public void setWidths(float[]) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.setWidths(int[])", "public void setWidths(int[]) throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.Table.isTableFitsPage()", "public boolean isTableFitsPage()"], ["void", "com.lowagie.text.Table.setTableFitsPage(boolean)", "public void setTableFitsPage(boolean)"], ["boolean", "com.lowagie.text.Table.isCellsFitPage()", "public boolean isCellsFitPage()"], ["void", "com.lowagie.text.Table.setCellsFitPage(boolean)", "public void setCellsFitPage(boolean)"], ["void", "com.lowagie.text.Table.setOffset(float)", "public void setOffset(float)"], ["float", "com.lowagie.text.Table.getOffset()", "public float getOffset()"], ["boolean", "com.lowagie.text.Table.isConvert2pdfptable()", "public boolean isConvert2pdfptable()"], ["void", "com.lowagie.text.Table.setConvert2pdfptable(boolean)", "public void setConvert2pdfptable(boolean)"], ["void", "com.lowagie.text.Table.addCell(com.lowagie.text.Cell, int, int)", "public void addCell(com.lowagie.text.Cell, int, int) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.addCell(com.lowagie.text.Cell, java.awt.Point)", "public void addCell(com.lowagie.text.Cell, java.awt.Point) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.addCell(com.lowagie.text.Cell)", "public void addCell(com.lowagie.text.Cell)"], ["void", "com.lowagie.text.Table.addCell(com.lowagie.text.Phrase)", "public void addCell(com.lowagie.text.Phrase) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.addCell(com.lowagie.text.Phrase, java.awt.Point)", "public void addCell(com.lowagie.text.Phrase, java.awt.Point) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.addCell(java.lang.String)", "public void addCell(java.lang.String) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.addCell(java.lang.String, java.awt.Point)", "public void addCell(java.lang.String, java.awt.Point) throws com.lowagie.text.BadElementException"], ["void", "com.lowagie.text.Table.insertTable(com.lowagie.text.Table)", "public void insertTable(com.lowagie.text.Table)"], ["void", "com.lowagie.text.Table.insertTable(com.lowagie.text.Table, int, int)", "public void insertTable(com.lowagie.text.Table, int, int)"], ["void", "com.lowagie.text.Table.insertTable(com.lowagie.text.Table, java.awt.Point)", "public void insertTable(com.lowagie.text.Table, java.awt.Point)"], ["void", "com.lowagie.text.Table.addColumns(int)", "public void addColumns(int)"], ["void", "com.lowagie.text.Table.deleteColumn(int)", "public void deleteColumn(int) throws com.lowagie.text.BadElementException"], ["boolean", "com.lowagie.text.Table.deleteRow(int)", "public boolean deleteRow(int)"], ["void", "com.lowagie.text.Table.deleteAllRows()", "public void deleteAllRows()"], ["boolean", "com.lowagie.text.Table.deleteLastRow()", "public boolean deleteLastRow()"], ["void", "com.lowagie.text.Table.complete()", "public void complete()"], ["java.lang.Object", "com.lowagie.text.Table.getElement(int, int)", "public java.lang.Object getElement(int, int)"], ["float[]", "com.lowagie.text.Table.getWidths(float, float)", "public float[] getWidths(float, float)"], ["java.util.Iterator", "com.lowagie.text.Table.iterator()", "public java.util.Iterator iterator()"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.Table.createPdfPTable()", "public com.lowagie.text.pdf.PdfPTable createPdfPTable() throws com.lowagie.text.BadElementException"], ["boolean", "com.lowagie.text.Table.isNotAddedYet()", "public boolean isNotAddedYet()"], ["void", "com.lowagie.text.Table.setNotAddedYet(boolean)", "public void setNotAddedYet(boolean)"], ["void", "com.lowagie.text.Table.flushContent()", "public void flushContent()"], ["boolean", "com.lowagie.text.Table.isComplete()", "public boolean isComplete()"], ["void", "com.lowagie.text.Table.setComplete(boolean)", "public void setComplete(boolean)"], ["com.lowagie.text.Cell", "com.lowagie.text.Table.getDefaultLayout()", "public com.lowagie.text.Cell getDefaultLayout()"], ["void", "com.lowagie.text.Table.setDefaultLayout(com.lowagie.text.Cell)", "public void setDefaultLayout(com.lowagie.text.Cell)"], ["com.lowagie.text.Utilities", "com.lowagie.text.Utilities()", "public com.lowagie.text.Utilities()"], ["java.util.Set", "com.lowagie.text.Utilities.getKeySet(java.util.Hashtable)", "public static java.util.Set getKeySet(java.util.Hashtable)"], ["java.lang.Object[][]", "com.lowagie.text.Utilities.addToArray(java.lang.Object[][], java.lang.Object[])", "public static java.lang.Object[][] addToArray(java.lang.Object[][], java.lang.Object[])"], ["boolean", "com.lowagie.text.Utilities.checkTrueOrFalse(java.util.Properties, java.lang.String)", "public static boolean checkTrueOrFalse(java.util.Properties, java.lang.String)"], ["java.lang.String", "com.lowagie.text.Utilities.unEscapeURL(java.lang.String)", "public static java.lang.String unEscapeURL(java.lang.String)"], ["java.net.URL", "com.lowagie.text.Utilities.toURL(java.lang.String)", "public static java.net.URL toURL(java.lang.String) throws java.net.MalformedURLException"], ["void", "com.lowagie.text.Utilities.skip(java.io.InputStream, int)", "public static void skip(java.io.InputStream, int) throws java.io.IOException"], ["float", "com.lowagie.text.Utilities.millimetersToPoints(float)", "public static final float millimetersToPoints(float)"], ["float", "com.lowagie.text.Utilities.millimetersToInches(float)", "public static final float millimetersToInches(float)"], ["float", "com.lowagie.text.Utilities.pointsToMillimeters(float)", "public static final float pointsToMillimeters(float)"], ["float", "com.lowagie.text.Utilities.pointsToInches(float)", "public static final float pointsToInches(float)"], ["float", "com.lowagie.text.Utilities.inchesToMillimeters(float)", "public static final float inchesToMillimeters(float)"], ["float", "com.lowagie.text.Utilities.inchesToPoints(float)", "public static final float inchesToPoints(float)"], ["boolean", "com.lowagie.text.Utilities.isSurrogateHigh(char)", "public static boolean isSurrogateHigh(char)"], ["boolean", "com.lowagie.text.Utilities.isSurrogateLow(char)", "public static boolean isSurrogateLow(char)"], ["boolean", "com.lowagie.text.Utilities.isSurrogatePair(java.lang.String, int)", "public static boolean isSurrogatePair(java.lang.String, int)"], ["boolean", "com.lowagie.text.Utilities.isSurrogatePair(char[], int)", "public static boolean isSurrogatePair(char[], int)"], ["int", "com.lowagie.text.Utilities.convertToUtf32(char, char)", "public static int convertToUtf32(char, char)"], ["int", "com.lowagie.text.Utilities.convertToUtf32(char[], int)", "public static int convertToUtf32(char[], int)"], ["int", "com.lowagie.text.Utilities.convertToUtf32(java.lang.String, int)", "public static int convertToUtf32(java.lang.String, int)"], ["java.lang.String", "com.lowagie.text.Utilities.convertFromUtf32(int)", "public static java.lang.String convertFromUtf32(int)"], ["com.lowagie.text.ZapfDingbatsList", "com.lowagie.text.ZapfDingbatsList(int)", "public com.lowagie.text.ZapfDingbatsList(int)"], ["com.lowagie.text.ZapfDingbatsList", "com.lowagie.text.ZapfDingbatsList(int, int)", "public com.lowagie.text.ZapfDingbatsList(int, int)"], ["void", "com.lowagie.text.ZapfDingbatsList.setCharNumber(int)", "public void setCharNumber(int)"], ["int", "com.lowagie.text.ZapfDingbatsList.getCharNumber()", "public int getCharNumber()"], ["boolean", "com.lowagie.text.ZapfDingbatsList.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["com.lowagie.text.ZapfDingbatsNumberList", "com.lowagie.text.ZapfDingbatsNumberList(int)", "public com.lowagie.text.ZapfDingbatsNumberList(int)"], ["com.lowagie.text.ZapfDingbatsNumberList", "com.lowagie.text.ZapfDingbatsNumberList(int, int)", "public com.lowagie.text.ZapfDingbatsNumberList(int, int)"], ["void", "com.lowagie.text.ZapfDingbatsNumberList.setType(int)", "public void setType(int)"], ["int", "com.lowagie.text.ZapfDingbatsNumberList.getType()", "public int getType()"], ["boolean", "com.lowagie.text.ZapfDingbatsNumberList.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["com.lowagie.text.factories.ElementFactory", "com.lowagie.text.factories.ElementFactory()", "public com.lowagie.text.factories.ElementFactory()"], ["com.lowagie.text.Chunk", "com.lowagie.text.factories.ElementFactory.getChunk(java.util.Properties)", "public static com.lowagie.text.Chunk getChunk(java.util.Properties)"], ["com.lowagie.text.Phrase", "com.lowagie.text.factories.ElementFactory.getPhrase(java.util.Properties)", "public static com.lowagie.text.Phrase getPhrase(java.util.Properties)"], ["com.lowagie.text.Anchor", "com.lowagie.text.factories.ElementFactory.getAnchor(java.util.Properties)", "public static com.lowagie.text.Anchor getAnchor(java.util.Properties)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.factories.ElementFactory.getParagraph(java.util.Properties)", "public static com.lowagie.text.Paragraph getParagraph(java.util.Properties)"], ["com.lowagie.text.ListItem", "com.lowagie.text.factories.ElementFactory.getListItem(java.util.Properties)", "public static com.lowagie.text.ListItem getListItem(java.util.Properties)"], ["com.lowagie.text.List", "com.lowagie.text.factories.ElementFactory.getList(java.util.Properties)", "public static com.lowagie.text.List getList(java.util.Properties)"], ["com.lowagie.text.Cell", "com.lowagie.text.factories.ElementFactory.getCell(java.util.Properties)", "public static com.lowagie.text.Cell getCell(java.util.Properties)"], ["com.lowagie.text.Table", "com.lowagie.text.factories.ElementFactory.getTable(java.util.Properties)", "public static com.lowagie.text.Table getTable(java.util.Properties)"], ["com.lowagie.text.ChapterAutoNumber", "com.lowagie.text.factories.ElementFactory.getChapter(java.util.Properties)", "public static com.lowagie.text.ChapterAutoNumber getChapter(java.util.Properties)"], ["com.lowagie.text.Section", "com.lowagie.text.factories.ElementFactory.getSection(com.lowagie.text.Section, java.util.Properties)", "public static com.lowagie.text.Section getSection(com.lowagie.text.Section, java.util.Properties)"], ["com.lowagie.text.Image", "com.lowagie.text.factories.ElementFactory.getImage(java.util.Properties)", "public static com.lowagie.text.Image getImage(java.util.Properties) throws com.lowagie.text.BadElementException, java.net.MalformedURLException, java.io.IOException"], ["com.lowagie.text.Annotation", "com.lowagie.text.factories.ElementFactory.getAnnotation(java.util.Properties)", "public static com.lowagie.text.Annotation getAnnotation(java.util.Properties)"], ["com.lowagie.text.factories.GreekAlphabetFactory", "com.lowagie.text.factories.GreekAlphabetFactory()", "public com.lowagie.text.factories.GreekAlphabetFactory()"], ["java.lang.String", "com.lowagie.text.factories.GreekAlphabetFactory.getString(int)", "public static final java.lang.String getString(int)"], ["java.lang.String", "com.lowagie.text.factories.GreekAlphabetFactory.getLowerCaseString(int)", "public static final java.lang.String getLowerCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.GreekAlphabetFactory.getUpperCaseString(int)", "public static final java.lang.String getUpperCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.GreekAlphabetFactory.getString(int, boolean)", "public static final java.lang.String getString(int, boolean)"], ["void", "com.lowagie.text.factories.GreekAlphabetFactory.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.text.factories.RomanAlphabetFactory", "com.lowagie.text.factories.RomanAlphabetFactory()", "public com.lowagie.text.factories.RomanAlphabetFactory()"], ["java.lang.String", "com.lowagie.text.factories.RomanAlphabetFactory.getString(int)", "public static final java.lang.String getString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanAlphabetFactory.getLowerCaseString(int)", "public static final java.lang.String getLowerCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanAlphabetFactory.getUpperCaseString(int)", "public static final java.lang.String getUpperCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanAlphabetFactory.getString(int, boolean)", "public static final java.lang.String getString(int, boolean)"], ["void", "com.lowagie.text.factories.RomanAlphabetFactory.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.text.factories.RomanNumberFactory", "com.lowagie.text.factories.RomanNumberFactory()", "public com.lowagie.text.factories.RomanNumberFactory()"], ["java.lang.String", "com.lowagie.text.factories.RomanNumberFactory.getString(int)", "public static final java.lang.String getString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanNumberFactory.getLowerCaseString(int)", "public static final java.lang.String getLowerCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanNumberFactory.getUpperCaseString(int)", "public static final java.lang.String getUpperCaseString(int)"], ["java.lang.String", "com.lowagie.text.factories.RomanNumberFactory.getString(int, boolean)", "public static final java.lang.String getString(int, boolean)"], ["void", "com.lowagie.text.factories.RomanNumberFactory.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["java.lang.String", "com.lowagie.text.html.HtmlEncoder.encode(java.lang.String)", "public static java.lang.String encode(java.lang.String)"], ["java.lang.String", "com.lowagie.text.html.HtmlEncoder.encode(java.awt.Color)", "public static java.lang.String encode(java.awt.Color)"], ["java.lang.String", "com.lowagie.text.html.HtmlEncoder.getAlignment(int)", "public static java.lang.String getAlignment(int)"], ["com.lowagie.text.html.HtmlParser", "com.lowagie.text.html.HtmlParser()", "public com.lowagie.text.html.HtmlParser()"], ["void", "com.lowagie.text.html.HtmlParser.go(com.lowagie.text.DocListener, org.xml.sax.InputSource)", "public void go(com.lowagie.text.DocListener, org.xml.sax.InputSource)"], ["void", "com.lowagie.text.html.HtmlParser.parse(com.lowagie.text.DocListener, org.xml.sax.InputSource)", "public static void parse(com.lowagie.text.DocListener, org.xml.sax.InputSource)"], ["void", "com.lowagie.text.html.HtmlParser.go(com.lowagie.text.DocListener, java.lang.String)", "public void go(com.lowagie.text.DocListener, java.lang.String)"], ["void", "com.lowagie.text.html.HtmlParser.parse(com.lowagie.text.DocListener, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, java.lang.String)"], ["void", "com.lowagie.text.html.HtmlParser.go(com.lowagie.text.DocListener, java.io.InputStream)", "public void go(com.lowagie.text.DocListener, java.io.InputStream)"], ["void", "com.lowagie.text.html.HtmlParser.parse(com.lowagie.text.DocListener, java.io.InputStream)", "public static void parse(com.lowagie.text.DocListener, java.io.InputStream)"], ["void", "com.lowagie.text.html.HtmlParser.go(com.lowagie.text.DocListener, java.io.Reader)", "public void go(com.lowagie.text.DocListener, java.io.Reader)"], ["void", "com.lowagie.text.html.HtmlParser.parse(com.lowagie.text.DocListener, java.io.Reader)", "public static void parse(com.lowagie.text.DocListener, java.io.Reader)"], ["com.lowagie.text.html.HtmlPeer", "com.lowagie.text.html.HtmlPeer(java.lang.String, java.lang.String)", "public com.lowagie.text.html.HtmlPeer(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.html.HtmlPeer.addAlias(java.lang.String, java.lang.String)", "public void addAlias(java.lang.String, java.lang.String)"], ["java.util.Properties", "com.lowagie.text.html.HtmlPeer.getAttributes(org.xml.sax.Attributes)", "public java.util.Properties getAttributes(org.xml.sax.Attributes)"], ["com.lowagie.text.html.HtmlTagMap", "com.lowagie.text.html.HtmlTagMap()", "public com.lowagie.text.html.HtmlTagMap()"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isHtml(java.lang.String)", "public static boolean isHtml(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isHead(java.lang.String)", "public static boolean isHead(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isMeta(java.lang.String)", "public static boolean isMeta(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isLink(java.lang.String)", "public static boolean isLink(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isTitle(java.lang.String)", "public static boolean isTitle(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isBody(java.lang.String)", "public static boolean isBody(java.lang.String)"], ["boolean", "com.lowagie.text.html.HtmlTagMap.isSpecialTag(java.lang.String)", "public static boolean isSpecialTag(java.lang.String)"], ["com.lowagie.text.html.HtmlTags", "com.lowagie.text.html.HtmlTags()", "public com.lowagie.text.html.HtmlTags()"], ["com.lowagie.text.html.HtmlWriter", "com.lowagie.text.html.HtmlWriter.getInstance(com.lowagie.text.Document, java.io.OutputStream)", "public static com.lowagie.text.html.HtmlWriter getInstance(com.lowagie.text.Document, java.io.OutputStream)"], ["boolean", "com.lowagie.text.html.HtmlWriter.newPage()", "public boolean newPage()"], ["boolean", "com.lowagie.text.html.HtmlWriter.add(com.lowagie.text.Element)", "public boolean add(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.html.HtmlWriter.open()", "public void open()"], ["void", "com.lowagie.text.html.HtmlWriter.close()", "public void close()"], ["void", "com.lowagie.text.html.HtmlWriter.setStandardFont(com.lowagie.text.Font)", "public void setStandardFont(com.lowagie.text.Font)"], ["boolean", "com.lowagie.text.html.HtmlWriter.isOtherFont(com.lowagie.text.Font)", "public boolean isOtherFont(com.lowagie.text.Font)"], ["void", "com.lowagie.text.html.HtmlWriter.setImagepath(java.lang.String)", "public void setImagepath(java.lang.String)"], ["void", "com.lowagie.text.html.HtmlWriter.resetImagepath()", "public void resetImagepath()"], ["void", "com.lowagie.text.html.HtmlWriter.setHeader(com.lowagie.text.HeaderFooter)", "public void setHeader(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.html.HtmlWriter.setFooter(com.lowagie.text.HeaderFooter)", "public void setFooter(com.lowagie.text.HeaderFooter)"], ["boolean", "com.lowagie.text.html.HtmlWriter.add(java.lang.String)", "public boolean add(java.lang.String)"], ["com.lowagie.text.html.Markup", "com.lowagie.text.html.Markup()", "public com.lowagie.text.html.Markup()"], ["float", "com.lowagie.text.html.Markup.parseLength(java.lang.String)", "public static float parseLength(java.lang.String)"], ["float", "com.lowagie.text.html.Markup.parseLength(java.lang.String, float)", "public static float parseLength(java.lang.String, float)"], ["java.awt.Color", "com.lowagie.text.html.Markup.decodeColor(java.lang.String)", "public static java.awt.Color decodeColor(java.lang.String)"], ["java.util.Properties", "com.lowagie.text.html.Markup.parseAttributes(java.lang.String)", "public static java.util.Properties parseAttributes(java.lang.String)"], ["java.lang.String", "com.lowagie.text.html.Markup.removeComment(java.lang.String, java.lang.String, java.lang.String)", "public static java.lang.String removeComment(java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.html.SAXmyHtmlHandler", "com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener)", "public com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener)"], ["com.lowagie.text.html.SAXmyHtmlHandler", "com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener, com.lowagie.text.pdf.BaseFont)", "public com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener, com.lowagie.text.pdf.BaseFont)"], ["com.lowagie.text.html.SAXmyHtmlHandler", "com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener, java.util.HashMap)", "public com.lowagie.text.html.SAXmyHtmlHandler(com.lowagie.text.DocListener, java.util.HashMap)"], ["void", "com.lowagie.text.html.SAXmyHtmlHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)", "public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "com.lowagie.text.html.SAXmyHtmlHandler.endElement(java.lang.String, java.lang.String, java.lang.String)", "public void endElement(java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.html.WebColors", "com.lowagie.text.html.WebColors()", "public com.lowagie.text.html.WebColors()"], ["java.awt.Color", "com.lowagie.text.html.WebColors.getRGBColor(java.lang.String)", "public static java.awt.Color getRGBColor(java.lang.String) throws java.lang.IllegalArgumentException"], ["com.lowagie.text.html.simpleparser.ChainedProperties", "com.lowagie.text.html.simpleparser.ChainedProperties()", "public com.lowagie.text.html.simpleparser.ChainedProperties()"], ["java.lang.String", "com.lowagie.text.html.simpleparser.ChainedProperties.getProperty(java.lang.String)", "public java.lang.String getProperty(java.lang.String)"], ["boolean", "com.lowagie.text.html.simpleparser.ChainedProperties.hasProperty(java.lang.String)", "public boolean hasProperty(java.lang.String)"], ["void", "com.lowagie.text.html.simpleparser.ChainedProperties.addToChain(java.lang.String, java.util.HashMap)", "public void addToChain(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.ChainedProperties.removeChain(java.lang.String)", "public void removeChain(java.lang.String)"], ["com.lowagie.text.html.simpleparser.FactoryProperties", "com.lowagie.text.html.simpleparser.FactoryProperties()", "public com.lowagie.text.html.simpleparser.FactoryProperties()"], ["com.lowagie.text.Chunk", "com.lowagie.text.html.simpleparser.FactoryProperties.createChunk(java.lang.String, com.lowagie.text.html.simpleparser.ChainedProperties)", "public com.lowagie.text.Chunk createChunk(java.lang.String, com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.html.simpleparser.FactoryProperties.createParagraph(java.util.HashMap)", "public static com.lowagie.text.Paragraph createParagraph(java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.FactoryProperties.createParagraph(com.lowagie.text.Paragraph, com.lowagie.text.html.simpleparser.ChainedProperties)", "public static void createParagraph(com.lowagie.text.Paragraph, com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.Paragraph", "com.lowagie.text.html.simpleparser.FactoryProperties.createParagraph(com.lowagie.text.html.simpleparser.ChainedProperties)", "public static com.lowagie.text.Paragraph createParagraph(com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.ListItem", "com.lowagie.text.html.simpleparser.FactoryProperties.createListItem(com.lowagie.text.html.simpleparser.ChainedProperties)", "public static com.lowagie.text.ListItem createListItem(com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.Font", "com.lowagie.text.html.simpleparser.FactoryProperties.getFont(com.lowagie.text.html.simpleparser.ChainedProperties)", "public com.lowagie.text.Font getFont(com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.pdf.HyphenationEvent", "com.lowagie.text.html.simpleparser.FactoryProperties.getHyphenation(com.lowagie.text.html.simpleparser.ChainedProperties)", "public static com.lowagie.text.pdf.HyphenationEvent getHyphenation(com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.pdf.HyphenationEvent", "com.lowagie.text.html.simpleparser.FactoryProperties.getHyphenation(java.util.HashMap)", "public static com.lowagie.text.pdf.HyphenationEvent getHyphenation(java.util.HashMap)"], ["com.lowagie.text.pdf.HyphenationEvent", "com.lowagie.text.html.simpleparser.FactoryProperties.getHyphenation(java.lang.String)", "public static com.lowagie.text.pdf.HyphenationEvent getHyphenation(java.lang.String)"], ["void", "com.lowagie.text.html.simpleparser.FactoryProperties.insertStyle(java.util.HashMap)", "public static void insertStyle(java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.FactoryProperties.insertStyle(java.util.HashMap, com.lowagie.text.html.simpleparser.ChainedProperties)", "public static void insertStyle(java.util.HashMap, com.lowagie.text.html.simpleparser.ChainedProperties)"], ["com.lowagie.text.FontFactoryImp", "com.lowagie.text.html.simpleparser.FactoryProperties.getFontImp()", "public com.lowagie.text.FontFactoryImp getFontImp()"], ["void", "com.lowagie.text.html.simpleparser.FactoryProperties.setFontImp(com.lowagie.text.FontFactoryImp)", "public void setFontImp(com.lowagie.text.FontFactoryImp)"], ["com.lowagie.text.html.simpleparser.HTMLWorker", "com.lowagie.text.html.simpleparser.HTMLWorker(com.lowagie.text.DocListener)", "public com.lowagie.text.html.simpleparser.HTMLWorker(com.lowagie.text.DocListener)"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.setStyleSheet(com.lowagie.text.html.simpleparser.StyleSheet)", "public void setStyleSheet(com.lowagie.text.html.simpleparser.StyleSheet)"], ["com.lowagie.text.html.simpleparser.StyleSheet", "com.lowagie.text.html.simpleparser.HTMLWorker.getStyleSheet()", "public com.lowagie.text.html.simpleparser.StyleSheet getStyleSheet()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.setInterfaceProps(java.util.HashMap)", "public void setInterfaceProps(java.util.HashMap)"], ["java.util.HashMap", "com.lowagie.text.html.simpleparser.HTMLWorker.getInterfaceProps()", "public java.util.HashMap getInterfaceProps()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.parse(java.io.Reader)", "public void parse(java.io.Reader) throws java.io.IOException"], ["java.util.ArrayList", "com.lowagie.text.html.simpleparser.HTMLWorker.parseToList(java.io.Reader, com.lowagie.text.html.simpleparser.StyleSheet)", "public static java.util.ArrayList parseToList(java.io.Reader, com.lowagie.text.html.simpleparser.StyleSheet) throws java.io.IOException"], ["java.util.ArrayList", "com.lowagie.text.html.simpleparser.HTMLWorker.parseToList(java.io.Reader, com.lowagie.text.html.simpleparser.StyleSheet, java.util.HashMap)", "public static java.util.ArrayList parseToList(java.io.Reader, com.lowagie.text.html.simpleparser.StyleSheet, java.util.HashMap) throws java.io.IOException"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.endDocument()", "public void endDocument()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.startDocument()", "public void startDocument()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.startElement(java.lang.String, java.util.HashMap)", "public void startElement(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.endElement(java.lang.String)", "public void endElement(java.lang.String)"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.text(java.lang.String)", "public void text(java.lang.String)"], ["boolean", "com.lowagie.text.html.simpleparser.HTMLWorker.add(com.lowagie.text.Element)", "public boolean add(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.clearTextWrap()", "public void clearTextWrap() throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.close()", "public void close()"], ["boolean", "com.lowagie.text.html.simpleparser.HTMLWorker.newPage()", "public boolean newPage()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.open()", "public void open()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.resetFooter()", "public void resetFooter()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.resetHeader()", "public void resetHeader()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.resetPageCount()", "public void resetPageCount()"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.setFooter(com.lowagie.text.HeaderFooter)", "public void setFooter(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.setHeader(com.lowagie.text.HeaderFooter)", "public void setHeader(com.lowagie.text.HeaderFooter)"], ["boolean", "com.lowagie.text.html.simpleparser.HTMLWorker.setMarginMirroring(boolean)", "public boolean setMarginMirroring(boolean)"], ["boolean", "com.lowagie.text.html.simpleparser.HTMLWorker.setMargins(float, float, float, float)", "public boolean setMargins(float, float, float, float)"], ["void", "com.lowagie.text.html.simpleparser.HTMLWorker.setPageCount(int)", "public void setPageCount(int)"], ["boolean", "com.lowagie.text.html.simpleparser.HTMLWorker.setPageSize(com.lowagie.text.Rectangle)", "public boolean setPageSize(com.lowagie.text.Rectangle)"], ["com.lowagie.text.html.simpleparser.IncCell", "com.lowagie.text.html.simpleparser.IncCell(java.lang.String, com.lowagie.text.html.simpleparser.ChainedProperties)", "public com.lowagie.text.html.simpleparser.IncCell(java.lang.String, com.lowagie.text.html.simpleparser.ChainedProperties)"], ["boolean", "com.lowagie.text.html.simpleparser.IncCell.add(java.lang.Object)", "public boolean add(java.lang.Object)"], ["java.util.ArrayList", "com.lowagie.text.html.simpleparser.IncCell.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.html.simpleparser.IncCell.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.html.simpleparser.IncCell.type()", "public int type()"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.html.simpleparser.IncCell.getCell()", "public com.lowagie.text.pdf.PdfPCell getCell()"], ["boolean", "com.lowagie.text.html.simpleparser.IncCell.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.html.simpleparser.IncCell.isNestable()", "public boolean isNestable()"], ["com.lowagie.text.html.simpleparser.IncTable", "com.lowagie.text.html.simpleparser.IncTable(java.util.HashMap)", "public com.lowagie.text.html.simpleparser.IncTable(java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.IncTable.addCol(com.lowagie.text.pdf.PdfPCell)", "public void addCol(com.lowagie.text.pdf.PdfPCell)"], ["void", "com.lowagie.text.html.simpleparser.IncTable.addCols(java.util.ArrayList)", "public void addCols(java.util.ArrayList)"], ["void", "com.lowagie.text.html.simpleparser.IncTable.endRow()", "public void endRow()"], ["java.util.ArrayList", "com.lowagie.text.html.simpleparser.IncTable.getRows()", "public java.util.ArrayList getRows()"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.html.simpleparser.IncTable.buildTable()", "public com.lowagie.text.pdf.PdfPTable buildTable()"], ["com.lowagie.text.html.simpleparser.StyleSheet", "com.lowagie.text.html.simpleparser.StyleSheet()", "public com.lowagie.text.html.simpleparser.StyleSheet()"], ["void", "com.lowagie.text.html.simpleparser.StyleSheet.applyStyle(java.lang.String, java.util.HashMap)", "public void applyStyle(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.StyleSheet.loadStyle(java.lang.String, java.util.HashMap)", "public void loadStyle(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.StyleSheet.loadStyle(java.lang.String, java.lang.String, java.lang.String)", "public void loadStyle(java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.html.simpleparser.StyleSheet.loadTagStyle(java.lang.String, java.util.HashMap)", "public void loadTagStyle(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.html.simpleparser.StyleSheet.loadTagStyle(java.lang.String, java.lang.String, java.lang.String)", "public void loadTagStyle(java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.AcroFields$InstHit", "com.lowagie.text.pdf.AcroFields$InstHit(int[])", "public com.lowagie.text.pdf.AcroFields$InstHit(int[])"], ["boolean", "com.lowagie.text.pdf.AcroFields$InstHit.isHit(int)", "public boolean isHit(int)"], ["com.lowagie.text.pdf.AcroFields$Item", "com.lowagie.text.pdf.AcroFields$Item()", "public com.lowagie.text.pdf.AcroFields$Item()"], ["int", "com.lowagie.text.pdf.AcroFields$RevisionStream.read()", "public int read() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.AcroFields$RevisionStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.AcroFields$RevisionStream.close()", "public void close() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.AcroFields$SorterComparator.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["java.lang.String[]", "com.lowagie.text.pdf.AcroFields.getAppearanceStates(java.lang.String)", "public java.lang.String[] getAppearanceStates(java.lang.String)"], ["java.lang.String[]", "com.lowagie.text.pdf.AcroFields.getListOptionExport(java.lang.String)", "public java.lang.String[] getListOptionExport(java.lang.String)"], ["java.lang.String[]", "com.lowagie.text.pdf.AcroFields.getListOptionDisplay(java.lang.String)", "public java.lang.String[] getListOptionDisplay(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.AcroFields.setListOption(java.lang.String, java.lang.String[], java.lang.String[])", "public boolean setListOption(java.lang.String, java.lang.String[], java.lang.String[])"], ["int", "com.lowagie.text.pdf.AcroFields.getFieldType(java.lang.String)", "public int getFieldType(java.lang.String)"], ["void", "com.lowagie.text.pdf.AcroFields.exportAsFdf(com.lowagie.text.pdf.FdfWriter)", "public void exportAsFdf(com.lowagie.text.pdf.FdfWriter)"], ["boolean", "com.lowagie.text.pdf.AcroFields.renameField(java.lang.String, java.lang.String)", "public boolean renameField(java.lang.String, java.lang.String)"], ["java.lang.Object[]", "com.lowagie.text.pdf.AcroFields.splitDAelements(java.lang.String)", "public static java.lang.Object[] splitDAelements(java.lang.String)"], ["void", "com.lowagie.text.pdf.AcroFields.decodeGenericDictionary(com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.BaseField)", "public void decodeGenericDictionary(com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.BaseField) throws java.io.IOException, com.lowagie.text.DocumentException"], ["java.lang.String", "com.lowagie.text.pdf.AcroFields.getField(java.lang.String)", "public java.lang.String getField(java.lang.String)"], ["java.lang.String[]", "com.lowagie.text.pdf.AcroFields.getListSelection(java.lang.String)", "public java.lang.String[] getListSelection(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.AcroFields.setFieldProperty(java.lang.String, java.lang.String, java.lang.Object, int[])", "public boolean setFieldProperty(java.lang.String, java.lang.String, java.lang.Object, int[])"], ["boolean", "com.lowagie.text.pdf.AcroFields.setFieldProperty(java.lang.String, java.lang.String, int, int[])", "public boolean setFieldProperty(java.lang.String, java.lang.String, int, int[])"], ["void", "com.lowagie.text.pdf.AcroFields.mergeXfaData(org.w3c.dom.Node)", "public void mergeXfaData(org.w3c.dom.Node) throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.AcroFields.setFields(com.lowagie.text.pdf.FdfReader)", "public void setFields(com.lowagie.text.pdf.FdfReader) throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.AcroFields.setFields(com.lowagie.text.pdf.XfdfReader)", "public void setFields(com.lowagie.text.pdf.XfdfReader) throws java.io.IOException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.AcroFields.regenerateField(java.lang.String)", "public boolean regenerateField(java.lang.String) throws java.io.IOException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.AcroFields.setField(java.lang.String, java.lang.String)", "public boolean setField(java.lang.String, java.lang.String) throws java.io.IOException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.AcroFields.setField(java.lang.String, java.lang.String, java.lang.String)", "public boolean setField(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.AcroFields.setListSelection(java.lang.String, java.lang.String[])", "public boolean setListSelection(java.lang.String, java.lang.String[]) throws java.io.IOException, com.lowagie.text.DocumentException"], ["java.util.HashMap", "com.lowagie.text.pdf.AcroFields.getFields()", "public java.util.HashMap getFields()"], ["com.lowagie.text.pdf.AcroFields$Item", "com.lowagie.text.pdf.AcroFields.getFieldItem(java.lang.String)", "public com.lowagie.text.pdf.AcroFields$Item getFieldItem(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.AcroFields.getTranslatedFieldName(java.lang.String)", "public java.lang.String getTranslatedFieldName(java.lang.String)"], ["float[]", "com.lowagie.text.pdf.AcroFields.getFieldPositions(java.lang.String)", "public float[] getFieldPositions(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.AcroFields.removeFieldsFromPage(int)", "public boolean removeFieldsFromPage(int)"], ["boolean", "com.lowagie.text.pdf.AcroFields.removeField(java.lang.String, int)", "public boolean removeField(java.lang.String, int)"], ["boolean", "com.lowagie.text.pdf.AcroFields.removeField(java.lang.String)", "public boolean removeField(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.AcroFields.isGenerateAppearances()", "public boolean isGenerateAppearances()"], ["void", "com.lowagie.text.pdf.AcroFields.setGenerateAppearances(boolean)", "public void setGenerateAppearances(boolean)"], ["java.util.ArrayList", "com.lowagie.text.pdf.AcroFields.getSignatureNames()", "public java.util.ArrayList getSignatureNames()"], ["java.util.ArrayList", "com.lowagie.text.pdf.AcroFields.getBlankSignatureNames()", "public java.util.ArrayList getBlankSignatureNames()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.AcroFields.getSignatureDictionary(java.lang.String)", "public com.lowagie.text.pdf.PdfDictionary getSignatureDictionary(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.AcroFields.signatureCoversWholeDocument(java.lang.String)", "public boolean signatureCoversWholeDocument(java.lang.String)"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.AcroFields.verifySignature(java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7 verifySignature(java.lang.String)"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.AcroFields.verifySignature(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7 verifySignature(java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.pdf.AcroFields.getTotalRevisions()", "public int getTotalRevisions()"], ["int", "com.lowagie.text.pdf.AcroFields.getRevision(java.lang.String)", "public int getRevision(java.lang.String)"], ["java.io.InputStream", "com.lowagie.text.pdf.AcroFields.extractRevision(java.lang.String)", "public java.io.InputStream extractRevision(java.lang.String) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.AcroFields.getFieldCache()", "public java.util.HashMap getFieldCache()"], ["void", "com.lowagie.text.pdf.AcroFields.setFieldCache(java.util.HashMap)", "public void setFieldCache(java.util.HashMap)"], ["void", "com.lowagie.text.pdf.AcroFields.setExtraMargin(float, float)", "public void setExtraMargin(float, float)"], ["void", "com.lowagie.text.pdf.AcroFields.addSubstitutionFont(com.lowagie.text.pdf.BaseFont)", "public void addSubstitutionFont(com.lowagie.text.pdf.BaseFont)"], ["java.util.ArrayList", "com.lowagie.text.pdf.AcroFields.getSubstitutionFonts()", "public java.util.ArrayList getSubstitutionFonts()"], ["void", "com.lowagie.text.pdf.AcroFields.setSubstitutionFonts(java.util.ArrayList)", "public void setSubstitutionFonts(java.util.ArrayList)"], ["com.lowagie.text.pdf.XfaForm", "com.lowagie.text.pdf.AcroFields.getXfa()", "public com.lowagie.text.pdf.XfaForm getXfa()"], ["com.lowagie.text.pdf.PushbuttonField", "com.lowagie.text.pdf.AcroFields.getNewPushbuttonFromField(java.lang.String)", "public com.lowagie.text.pdf.PushbuttonField getNewPushbuttonFromField(java.lang.String)"], ["com.lowagie.text.pdf.PushbuttonField", "com.lowagie.text.pdf.AcroFields.getNewPushbuttonFromField(java.lang.String, int)", "public com.lowagie.text.pdf.PushbuttonField getNewPushbuttonFromField(java.lang.String, int)"], ["boolean", "com.lowagie.text.pdf.AcroFields.replacePushbuttonField(java.lang.String, com.lowagie.text.pdf.PdfFormField)", "public boolean replacePushbuttonField(java.lang.String, com.lowagie.text.pdf.PdfFormField)"], ["boolean", "com.lowagie.text.pdf.AcroFields.replacePushbuttonField(java.lang.String, com.lowagie.text.pdf.PdfFormField, int)", "public boolean replacePushbuttonField(java.lang.String, com.lowagie.text.pdf.PdfFormField, int)"], ["com.lowagie.text.pdf.ArabicLigaturizer", "com.lowagie.text.pdf.ArabicLigaturizer()", "public com.lowagie.text.pdf.ArabicLigaturizer()"], ["com.lowagie.text.pdf.AsianFontMapper", "com.lowagie.text.pdf.AsianFontMapper(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.AsianFontMapper(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.AsianFontMapper.awtToPdf(java.awt.Font)", "public com.lowagie.text.pdf.BaseFont awtToPdf(java.awt.Font)"], ["com.lowagie.text.pdf.BadPasswordException", "com.lowagie.text.pdf.BadPasswordException()", "public com.lowagie.text.pdf.BadPasswordException()"], ["com.lowagie.text.pdf.Barcode", "com.lowagie.text.pdf.Barcode()", "public com.lowagie.text.pdf.Barcode()"], ["float", "com.lowagie.text.pdf.Barcode.getX()", "public float getX()"], ["void", "com.lowagie.text.pdf.Barcode.setX(float)", "public void setX(float)"], ["float", "com.lowagie.text.pdf.Barcode.getN()", "public float getN()"], ["void", "com.lowagie.text.pdf.Barcode.setN(float)", "public void setN(float)"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.Barcode.getFont()", "public com.lowagie.text.pdf.BaseFont getFont()"], ["void", "com.lowagie.text.pdf.Barcode.setFont(com.lowagie.text.pdf.BaseFont)", "public void setFont(com.lowagie.text.pdf.BaseFont)"], ["float", "com.lowagie.text.pdf.Barcode.getSize()", "public float getSize()"], ["void", "com.lowagie.text.pdf.Barcode.setSize(float)", "public void setSize(float)"], ["float", "com.lowagie.text.pdf.Barcode.getBaseline()", "public float getBaseline()"], ["void", "com.lowagie.text.pdf.Barcode.setBaseline(float)", "public void setBaseline(float)"], ["float", "com.lowagie.text.pdf.Barcode.getBarHeight()", "public float getBarHeight()"], ["void", "com.lowagie.text.pdf.Barcode.setBarHeight(float)", "public void setBarHeight(float)"], ["int", "com.lowagie.text.pdf.Barcode.getTextAlignment()", "public int getTextAlignment()"], ["void", "com.lowagie.text.pdf.Barcode.setTextAlignment(int)", "public void setTextAlignment(int)"], ["boolean", "com.lowagie.text.pdf.Barcode.isGenerateChecksum()", "public boolean isGenerateChecksum()"], ["void", "com.lowagie.text.pdf.Barcode.setGenerateChecksum(boolean)", "public void setGenerateChecksum(boolean)"], ["boolean", "com.lowagie.text.pdf.Barcode.isChecksumText()", "public boolean isChecksumText()"], ["void", "com.lowagie.text.pdf.Barcode.setChecksumText(boolean)", "public void setChecksumText(boolean)"], ["boolean", "com.lowagie.text.pdf.Barcode.isStartStopText()", "public boolean isStartStopText()"], ["void", "com.lowagie.text.pdf.Barcode.setStartStopText(boolean)", "public void setStartStopText(boolean)"], ["boolean", "com.lowagie.text.pdf.Barcode.isExtended()", "public boolean isExtended()"], ["void", "com.lowagie.text.pdf.Barcode.setExtended(boolean)", "public void setExtended(boolean)"], ["java.lang.String", "com.lowagie.text.pdf.Barcode.getCode()", "public java.lang.String getCode()"], ["void", "com.lowagie.text.pdf.Barcode.setCode(java.lang.String)", "public void setCode(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.Barcode.isGuardBars()", "public boolean isGuardBars()"], ["void", "com.lowagie.text.pdf.Barcode.setGuardBars(boolean)", "public void setGuardBars(boolean)"], ["int", "com.lowagie.text.pdf.Barcode.getCodeType()", "public int getCodeType()"], ["void", "com.lowagie.text.pdf.Barcode.setCodeType(int)", "public void setCodeType(int)"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.Barcode.createTemplateWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.pdf.PdfTemplate createTemplateWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.Barcode.createImageWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Image createImageWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["float", "com.lowagie.text.pdf.Barcode.getInkSpreading()", "public float getInkSpreading()"], ["void", "com.lowagie.text.pdf.Barcode.setInkSpreading(float)", "public void setInkSpreading(float)"], ["java.lang.String", "com.lowagie.text.pdf.Barcode.getAltText()", "public java.lang.String getAltText()"], ["void", "com.lowagie.text.pdf.Barcode.setAltText(java.lang.String)", "public void setAltText(java.lang.String)"], ["com.lowagie.text.pdf.Barcode128", "com.lowagie.text.pdf.Barcode128()", "public com.lowagie.text.pdf.Barcode128()"], ["java.lang.String", "com.lowagie.text.pdf.Barcode128.removeFNC1(java.lang.String)", "public static java.lang.String removeFNC1(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.Barcode128.getHumanReadableUCCEAN(java.lang.String)", "public static java.lang.String getHumanReadableUCCEAN(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.Barcode128.getRawText(java.lang.String, boolean)", "public static java.lang.String getRawText(java.lang.String, boolean)"], ["byte[]", "com.lowagie.text.pdf.Barcode128.getBarsCode128Raw(java.lang.String)", "public static byte[] getBarsCode128Raw(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.Barcode128.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.Barcode128.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.Barcode128.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["void", "com.lowagie.text.pdf.Barcode128.setCode(java.lang.String)", "public void setCode(java.lang.String)"], ["com.lowagie.text.pdf.Barcode39", "com.lowagie.text.pdf.Barcode39()", "public com.lowagie.text.pdf.Barcode39()"], ["byte[]", "com.lowagie.text.pdf.Barcode39.getBarsCode39(java.lang.String)", "public static byte[] getBarsCode39(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.Barcode39.getCode39Ex(java.lang.String)", "public static java.lang.String getCode39Ex(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.Barcode39.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.Barcode39.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.Barcode39.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BarcodeCodabar", "com.lowagie.text.pdf.BarcodeCodabar()", "public com.lowagie.text.pdf.BarcodeCodabar()"], ["byte[]", "com.lowagie.text.pdf.BarcodeCodabar.getBarsCodabar(java.lang.String)", "public static byte[] getBarsCodabar(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.BarcodeCodabar.calculateChecksum(java.lang.String)", "public static java.lang.String calculateChecksum(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeCodabar.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeCodabar.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodeCodabar.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BarcodeDatamatrix", "com.lowagie.text.pdf.BarcodeDatamatrix()", "public com.lowagie.text.pdf.BarcodeDatamatrix()"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.generate(java.lang.String)", "public int generate(java.lang.String) throws java.io.UnsupportedEncodingException"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.generate(byte[], int, int)", "public int generate(byte[], int, int)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.BarcodeDatamatrix.createImage()", "public com.lowagie.text.Image createImage() throws com.lowagie.text.BadElementException"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodeDatamatrix.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["byte[]", "com.lowagie.text.pdf.BarcodeDatamatrix.getImage()", "public byte[] getImage()"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.getHeight()", "public int getHeight()"], ["void", "com.lowagie.text.pdf.BarcodeDatamatrix.setHeight(int)", "public void setHeight(int)"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.getWidth()", "public int getWidth()"], ["void", "com.lowagie.text.pdf.BarcodeDatamatrix.setWidth(int)", "public void setWidth(int)"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.getWs()", "public int getWs()"], ["void", "com.lowagie.text.pdf.BarcodeDatamatrix.setWs(int)", "public void setWs(int)"], ["int", "com.lowagie.text.pdf.BarcodeDatamatrix.getOptions()", "public int getOptions()"], ["void", "com.lowagie.text.pdf.BarcodeDatamatrix.setOptions(int)", "public void setOptions(int)"], ["com.lowagie.text.pdf.BarcodeEAN", "com.lowagie.text.pdf.BarcodeEAN()", "public com.lowagie.text.pdf.BarcodeEAN()"], ["int", "com.lowagie.text.pdf.BarcodeEAN.calculateEANParity(java.lang.String)", "public static int calculateEANParity(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.BarcodeEAN.convertUPCAtoUPCE(java.lang.String)", "public static java.lang.String convertUPCAtoUPCE(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeEAN.getBarsEAN13(java.lang.String)", "public static byte[] getBarsEAN13(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeEAN.getBarsEAN8(java.lang.String)", "public static byte[] getBarsEAN8(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeEAN.getBarsUPCE(java.lang.String)", "public static byte[] getBarsUPCE(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeEAN.getBarsSupplemental2(java.lang.String)", "public static byte[] getBarsSupplemental2(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeEAN.getBarsSupplemental5(java.lang.String)", "public static byte[] getBarsSupplemental5(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeEAN.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeEAN.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodeEAN.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BarcodeEANSUPP", "com.lowagie.text.pdf.BarcodeEANSUPP(com.lowagie.text.pdf.Barcode, com.lowagie.text.pdf.Barcode)", "public com.lowagie.text.pdf.BarcodeEANSUPP(com.lowagie.text.pdf.Barcode, com.lowagie.text.pdf.Barcode)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeEANSUPP.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeEANSUPP.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodeEANSUPP.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BarcodeInter25", "com.lowagie.text.pdf.BarcodeInter25()", "public com.lowagie.text.pdf.BarcodeInter25()"], ["java.lang.String", "com.lowagie.text.pdf.BarcodeInter25.keepNumbers(java.lang.String)", "public static java.lang.String keepNumbers(java.lang.String)"], ["char", "com.lowagie.text.pdf.BarcodeInter25.getChecksum(java.lang.String)", "public static char getChecksum(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.BarcodeInter25.getBarsInter25(java.lang.String)", "public static byte[] getBarsInter25(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeInter25.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodeInter25.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodeInter25.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BarcodePDF417$Segment", "com.lowagie.text.pdf.BarcodePDF417$Segment(char, int, int)", "public com.lowagie.text.pdf.BarcodePDF417$Segment(char, int, int)"], ["void", "com.lowagie.text.pdf.BarcodePDF417$SegmentList.add(char, int, int)", "public void add(char, int, int)"], ["com.lowagie.text.pdf.BarcodePDF417$Segment", "com.lowagie.text.pdf.BarcodePDF417$SegmentList.get(int)", "public com.lowagie.text.pdf.BarcodePDF417$Segment get(int)"], ["void", "com.lowagie.text.pdf.BarcodePDF417$SegmentList.remove(int)", "public void remove(int)"], ["int", "com.lowagie.text.pdf.BarcodePDF417$SegmentList.size()", "public int size()"], ["com.lowagie.text.pdf.BarcodePDF417", "com.lowagie.text.pdf.BarcodePDF417()", "public com.lowagie.text.pdf.BarcodePDF417()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setMacroSegmentId(int)", "public void setMacroSegmentId(int)"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setMacroSegmentCount(int)", "public void setMacroSegmentCount(int)"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setMacroFileId(java.lang.String)", "public void setMacroFileId(java.lang.String)"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setDefaultParameters()", "public void setDefaultParameters()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.paintCode()", "public void paintCode()"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.BarcodePDF417.getImage()", "public com.lowagie.text.Image getImage() throws com.lowagie.text.BadElementException"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodePDF417.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["byte[]", "com.lowagie.text.pdf.BarcodePDF417.getOutBits()", "public byte[] getOutBits()"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getBitColumns()", "public int getBitColumns()"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getCodeRows()", "public int getCodeRows()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setCodeRows(int)", "public void setCodeRows(int)"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getCodeColumns()", "public int getCodeColumns()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setCodeColumns(int)", "public void setCodeColumns(int)"], ["int[]", "com.lowagie.text.pdf.BarcodePDF417.getCodewords()", "public int[] getCodewords()"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getLenCodewords()", "public int getLenCodewords()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setLenCodewords(int)", "public void setLenCodewords(int)"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getErrorLevel()", "public int getErrorLevel()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setErrorLevel(int)", "public void setErrorLevel(int)"], ["byte[]", "com.lowagie.text.pdf.BarcodePDF417.getText()", "public byte[] getText()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setText(byte[])", "public void setText(byte[])"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setText(java.lang.String)", "public void setText(java.lang.String)"], ["int", "com.lowagie.text.pdf.BarcodePDF417.getOptions()", "public int getOptions()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setOptions(int)", "public void setOptions(int)"], ["float", "com.lowagie.text.pdf.BarcodePDF417.getAspectRatio()", "public float getAspectRatio()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setAspectRatio(float)", "public void setAspectRatio(float)"], ["float", "com.lowagie.text.pdf.BarcodePDF417.getYHeight()", "public float getYHeight()"], ["void", "com.lowagie.text.pdf.BarcodePDF417.setYHeight(float)", "public void setYHeight(float)"], ["com.lowagie.text.pdf.BarcodePostnet", "com.lowagie.text.pdf.BarcodePostnet()", "public com.lowagie.text.pdf.BarcodePostnet()"], ["byte[]", "com.lowagie.text.pdf.BarcodePostnet.getBarsPostnet(java.lang.String)", "public static byte[] getBarsPostnet(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodePostnet.getBarcodeSize()", "public com.lowagie.text.Rectangle getBarcodeSize()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BarcodePostnet.placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)", "public com.lowagie.text.Rectangle placeBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)"], ["java.awt.Image", "com.lowagie.text.pdf.BarcodePostnet.createAwtImage(java.awt.Color, java.awt.Color)", "public java.awt.Image createAwtImage(java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.BaseField", "com.lowagie.text.pdf.BaseField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)", "public com.lowagie.text.pdf.BaseField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)"], ["float", "com.lowagie.text.pdf.BaseField.getBorderWidth()", "public float getBorderWidth()"], ["void", "com.lowagie.text.pdf.BaseField.setBorderWidth(float)", "public void setBorderWidth(float)"], ["int", "com.lowagie.text.pdf.BaseField.getBorderStyle()", "public int getBorderStyle()"], ["void", "com.lowagie.text.pdf.BaseField.setBorderStyle(int)", "public void setBorderStyle(int)"], ["java.awt.Color", "com.lowagie.text.pdf.BaseField.getBorderColor()", "public java.awt.Color getBorderColor()"], ["void", "com.lowagie.text.pdf.BaseField.setBorderColor(java.awt.Color)", "public void setBorderColor(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.pdf.BaseField.getBackgroundColor()", "public java.awt.Color getBackgroundColor()"], ["void", "com.lowagie.text.pdf.BaseField.setBackgroundColor(java.awt.Color)", "public void setBackgroundColor(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.pdf.BaseField.getTextColor()", "public java.awt.Color getTextColor()"], ["void", "com.lowagie.text.pdf.BaseField.setTextColor(java.awt.Color)", "public void setTextColor(java.awt.Color)"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseField.getFont()", "public com.lowagie.text.pdf.BaseFont getFont()"], ["void", "com.lowagie.text.pdf.BaseField.setFont(com.lowagie.text.pdf.BaseFont)", "public void setFont(com.lowagie.text.pdf.BaseFont)"], ["float", "com.lowagie.text.pdf.BaseField.getFontSize()", "public float getFontSize()"], ["void", "com.lowagie.text.pdf.BaseField.setFontSize(float)", "public void setFontSize(float)"], ["int", "com.lowagie.text.pdf.BaseField.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.pdf.BaseField.setAlignment(int)", "public void setAlignment(int)"], ["java.lang.String", "com.lowagie.text.pdf.BaseField.getText()", "public java.lang.String getText()"], ["void", "com.lowagie.text.pdf.BaseField.setText(java.lang.String)", "public void setText(java.lang.String)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.BaseField.getBox()", "public com.lowagie.text.Rectangle getBox()"], ["void", "com.lowagie.text.pdf.BaseField.setBox(com.lowagie.text.Rectangle)", "public void setBox(com.lowagie.text.Rectangle)"], ["int", "com.lowagie.text.pdf.BaseField.getRotation()", "public int getRotation()"], ["void", "com.lowagie.text.pdf.BaseField.setRotation(int)", "public void setRotation(int)"], ["void", "com.lowagie.text.pdf.BaseField.setRotationFromPage(com.lowagie.text.Rectangle)", "public void setRotationFromPage(com.lowagie.text.Rectangle)"], ["int", "com.lowagie.text.pdf.BaseField.getVisibility()", "public int getVisibility()"], ["void", "com.lowagie.text.pdf.BaseField.setVisibility(int)", "public void setVisibility(int)"], ["java.lang.String", "com.lowagie.text.pdf.BaseField.getFieldName()", "public java.lang.String getFieldName()"], ["void", "com.lowagie.text.pdf.BaseField.setFieldName(java.lang.String)", "public void setFieldName(java.lang.String)"], ["int", "com.lowagie.text.pdf.BaseField.getOptions()", "public int getOptions()"], ["void", "com.lowagie.text.pdf.BaseField.setOptions(int)", "public void setOptions(int)"], ["int", "com.lowagie.text.pdf.BaseField.getMaxCharacterLength()", "public int getMaxCharacterLength()"], ["void", "com.lowagie.text.pdf.BaseField.setMaxCharacterLength(int)", "public void setMaxCharacterLength(int)"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.BaseField.getWriter()", "public com.lowagie.text.pdf.PdfWriter getWriter()"], ["void", "com.lowagie.text.pdf.BaseField.setWriter(com.lowagie.text.pdf.PdfWriter)", "public void setWriter(com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.BaseField.moveFields(com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.PdfDictionary)", "public static void moveFields(com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.BaseFont$StreamFont", "com.lowagie.text.pdf.BaseFont$StreamFont(byte[], int[], int)", "public com.lowagie.text.pdf.BaseFont$StreamFont(byte[], int[], int) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.BaseFont$StreamFont", "com.lowagie.text.pdf.BaseFont$StreamFont(byte[], java.lang.String, int)", "public com.lowagie.text.pdf.BaseFont$StreamFont(byte[], java.lang.String, int) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseFont.createFont()", "public static com.lowagie.text.pdf.BaseFont createFont() throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseFont.createFont(java.lang.String, java.lang.String, boolean)", "public static com.lowagie.text.pdf.BaseFont createFont(java.lang.String, java.lang.String, boolean) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseFont.createFont(java.lang.String, java.lang.String, boolean, boolean, byte[], byte[])", "public static com.lowagie.text.pdf.BaseFont createFont(java.lang.String, java.lang.String, boolean, boolean, byte[], byte[]) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseFont.createFont(java.lang.String, java.lang.String, boolean, boolean, byte[], byte[], boolean)", "public static com.lowagie.text.pdf.BaseFont createFont(java.lang.String, java.lang.String, boolean, boolean, byte[], byte[], boolean) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.BaseFont.createFont(com.lowagie.text.pdf.PRIndirectReference)", "public static com.lowagie.text.pdf.BaseFont createFont(com.lowagie.text.pdf.PRIndirectReference)"], ["int", "com.lowagie.text.pdf.BaseFont.getWidth(int)", "public int getWidth(int)"], ["int", "com.lowagie.text.pdf.BaseFont.getWidth(java.lang.String)", "public int getWidth(java.lang.String)"], ["int", "com.lowagie.text.pdf.BaseFont.getDescent(java.lang.String)", "public int getDescent(java.lang.String)"], ["int", "com.lowagie.text.pdf.BaseFont.getAscent(java.lang.String)", "public int getAscent(java.lang.String)"], ["float", "com.lowagie.text.pdf.BaseFont.getDescentPoint(java.lang.String, float)", "public float getDescentPoint(java.lang.String, float)"], ["float", "com.lowagie.text.pdf.BaseFont.getAscentPoint(java.lang.String, float)", "public float getAscentPoint(java.lang.String, float)"], ["float", "com.lowagie.text.pdf.BaseFont.getWidthPointKerned(java.lang.String, float)", "public float getWidthPointKerned(java.lang.String, float)"], ["float", "com.lowagie.text.pdf.BaseFont.getWidthPoint(java.lang.String, float)", "public float getWidthPoint(java.lang.String, float)"], ["float", "com.lowagie.text.pdf.BaseFont.getWidthPoint(int, float)", "public float getWidthPoint(int, float)"], ["java.lang.String", "com.lowagie.text.pdf.BaseFont.getEncoding()", "public java.lang.String getEncoding()"], ["int", "com.lowagie.text.pdf.BaseFont.getFontType()", "public int getFontType()"], ["boolean", "com.lowagie.text.pdf.BaseFont.isEmbedded()", "public boolean isEmbedded()"], ["boolean", "com.lowagie.text.pdf.BaseFont.isFontSpecific()", "public boolean isFontSpecific()"], ["java.lang.String", "com.lowagie.text.pdf.BaseFont.createSubsetPrefix()", "public static java.lang.String createSubsetPrefix()"], ["java.lang.String[][]", "com.lowagie.text.pdf.BaseFont.getFullFontName(java.lang.String, java.lang.String, byte[])", "public static java.lang.String[][] getFullFontName(java.lang.String, java.lang.String, byte[]) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.lang.Object[]", "com.lowagie.text.pdf.BaseFont.getAllFontNames(java.lang.String, java.lang.String, byte[])", "public static java.lang.Object[] getAllFontNames(java.lang.String, java.lang.String, byte[]) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.lang.String[][]", "com.lowagie.text.pdf.BaseFont.getAllNameEntries(java.lang.String, java.lang.String, byte[])", "public static java.lang.String[][] getAllNameEntries(java.lang.String, java.lang.String, byte[]) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.lang.String[]", "com.lowagie.text.pdf.BaseFont.getCodePagesSupported()", "public java.lang.String[] getCodePagesSupported()"], ["java.lang.String[]", "com.lowagie.text.pdf.BaseFont.enumerateTTCNames(java.lang.String)", "public static java.lang.String[] enumerateTTCNames(java.lang.String) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.lang.String[]", "com.lowagie.text.pdf.BaseFont.enumerateTTCNames(byte[])", "public static java.lang.String[] enumerateTTCNames(byte[]) throws com.lowagie.text.DocumentException, java.io.IOException"], ["int[]", "com.lowagie.text.pdf.BaseFont.getWidths()", "public int[] getWidths()"], ["java.lang.String[]", "com.lowagie.text.pdf.BaseFont.getDifferences()", "public java.lang.String[] getDifferences()"], ["char[]", "com.lowagie.text.pdf.BaseFont.getUnicodeDifferences()", "public char[] getUnicodeDifferences()"], ["boolean", "com.lowagie.text.pdf.BaseFont.isForceWidthsOutput()", "public boolean isForceWidthsOutput()"], ["void", "com.lowagie.text.pdf.BaseFont.setForceWidthsOutput(boolean)", "public void setForceWidthsOutput(boolean)"], ["boolean", "com.lowagie.text.pdf.BaseFont.isDirectTextToByte()", "public boolean isDirectTextToByte()"], ["void", "com.lowagie.text.pdf.BaseFont.setDirectTextToByte(boolean)", "public void setDirectTextToByte(boolean)"], ["boolean", "com.lowagie.text.pdf.BaseFont.isSubset()", "public boolean isSubset()"], ["void", "com.lowagie.text.pdf.BaseFont.setSubset(boolean)", "public void setSubset(boolean)"], ["java.io.InputStream", "com.lowagie.text.pdf.BaseFont.getResourceStream(java.lang.String)", "public static java.io.InputStream getResourceStream(java.lang.String)"], ["java.io.InputStream", "com.lowagie.text.pdf.BaseFont.getResourceStream(java.lang.String, java.lang.ClassLoader)", "public static java.io.InputStream getResourceStream(java.lang.String, java.lang.ClassLoader)"], ["int", "com.lowagie.text.pdf.BaseFont.getUnicodeEquivalent(int)", "public int getUnicodeEquivalent(int)"], ["int", "com.lowagie.text.pdf.BaseFont.getCidCode(int)", "public int getCidCode(int)"], ["boolean", "com.lowagie.text.pdf.BaseFont.charExists(int)", "public boolean charExists(int)"], ["boolean", "com.lowagie.text.pdf.BaseFont.setCharAdvance(int, int)", "public boolean setCharAdvance(int, int)"], ["java.util.ArrayList", "com.lowagie.text.pdf.BaseFont.getDocumentFonts(com.lowagie.text.pdf.PdfReader)", "public static java.util.ArrayList getDocumentFonts(com.lowagie.text.pdf.PdfReader)"], ["java.util.ArrayList", "com.lowagie.text.pdf.BaseFont.getDocumentFonts(com.lowagie.text.pdf.PdfReader, int)", "public static java.util.ArrayList getDocumentFonts(com.lowagie.text.pdf.PdfReader, int)"], ["int[]", "com.lowagie.text.pdf.BaseFont.getCharBBox(int)", "public int[] getCharBBox(int)"], ["void", "com.lowagie.text.pdf.BaseFont.correctArabicAdvance()", "public void correctArabicAdvance()"], ["void", "com.lowagie.text.pdf.BaseFont.addSubsetRange(int[])", "public void addSubsetRange(int[])"], ["int", "com.lowagie.text.pdf.BaseFont.getCompressionLevel()", "public int getCompressionLevel()"], ["void", "com.lowagie.text.pdf.BaseFont.setCompressionLevel(int)", "public void setCompressionLevel(int)"], ["com.lowagie.text.pdf.BidiLine", "com.lowagie.text.pdf.BidiLine()", "public com.lowagie.text.pdf.BidiLine()"], ["com.lowagie.text.pdf.BidiLine", "com.lowagie.text.pdf.BidiLine(com.lowagie.text.pdf.BidiLine)", "public com.lowagie.text.pdf.BidiLine(com.lowagie.text.pdf.BidiLine)"], ["boolean", "com.lowagie.text.pdf.BidiLine.isEmpty()", "public boolean isEmpty()"], ["void", "com.lowagie.text.pdf.BidiLine.clearChunks()", "public void clearChunks()"], ["boolean", "com.lowagie.text.pdf.BidiLine.getParagraph(int)", "public boolean getParagraph(int)"], ["void", "com.lowagie.text.pdf.BidiLine.addChunk(com.lowagie.text.pdf.PdfChunk)", "public void addChunk(com.lowagie.text.pdf.PdfChunk)"], ["void", "com.lowagie.text.pdf.BidiLine.addChunks(java.util.ArrayList)", "public void addChunks(java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.BidiLine.addPiece(char, com.lowagie.text.pdf.PdfChunk)", "public void addPiece(char, com.lowagie.text.pdf.PdfChunk)"], ["void", "com.lowagie.text.pdf.BidiLine.save()", "public void save()"], ["void", "com.lowagie.text.pdf.BidiLine.restore()", "public void restore()"], ["void", "com.lowagie.text.pdf.BidiLine.mirrorGlyphs()", "public void mirrorGlyphs()"], ["void", "com.lowagie.text.pdf.BidiLine.doArabicShapping()", "public void doArabicShapping()"], ["com.lowagie.text.pdf.PdfLine", "com.lowagie.text.pdf.BidiLine.processLine(float, float, int, int, int)", "public com.lowagie.text.pdf.PdfLine processLine(float, float, int, int, int)"], ["float", "com.lowagie.text.pdf.BidiLine.getWidth(int, int)", "public float getWidth(int, int)"], ["java.util.ArrayList", "com.lowagie.text.pdf.BidiLine.createArrayOfPdfChunks(int, int)", "public java.util.ArrayList createArrayOfPdfChunks(int, int)"], ["java.util.ArrayList", "com.lowagie.text.pdf.BidiLine.createArrayOfPdfChunks(int, int, com.lowagie.text.pdf.PdfChunk)", "public java.util.ArrayList createArrayOfPdfChunks(int, int, com.lowagie.text.pdf.PdfChunk)"], ["int[]", "com.lowagie.text.pdf.BidiLine.getWord(int, int)", "public int[] getWord(int, int)"], ["int", "com.lowagie.text.pdf.BidiLine.trimRight(int, int)", "public int trimRight(int, int)"], ["int", "com.lowagie.text.pdf.BidiLine.trimLeft(int, int)", "public int trimLeft(int, int)"], ["int", "com.lowagie.text.pdf.BidiLine.trimRightEx(int, int)", "public int trimRightEx(int, int)"], ["int", "com.lowagie.text.pdf.BidiLine.trimLeftEx(int, int)", "public int trimLeftEx(int, int)"], ["void", "com.lowagie.text.pdf.BidiLine.reorder(int, int)", "public void reorder(int, int)"], ["void", "com.lowagie.text.pdf.BidiLine.flip(int, int)", "public void flip(int, int)"], ["boolean", "com.lowagie.text.pdf.BidiLine.isWS(char)", "public static boolean isWS(char)"], ["com.lowagie.text.pdf.BidiOrder", "com.lowagie.text.pdf.BidiOrder(byte[])", "public com.lowagie.text.pdf.BidiOrder(byte[])"], ["com.lowagie.text.pdf.BidiOrder", "com.lowagie.text.pdf.BidiOrder(byte[], byte)", "public com.lowagie.text.pdf.BidiOrder(byte[], byte)"], ["com.lowagie.text.pdf.BidiOrder", "com.lowagie.text.pdf.BidiOrder(char[], int, int, byte)", "public com.lowagie.text.pdf.BidiOrder(char[], int, int, byte)"], ["byte", "com.lowagie.text.pdf.BidiOrder.getDirection(char)", "public static final byte getDirection(char)"], ["byte[]", "com.lowagie.text.pdf.BidiOrder.getLevels()", "public byte[] getLevels()"], ["byte[]", "com.lowagie.text.pdf.BidiOrder.getLevels(int[])", "public byte[] getLevels(int[])"], ["int[]", "com.lowagie.text.pdf.BidiOrder.getReordering(int[])", "public int[] getReordering(int[])"], ["byte", "com.lowagie.text.pdf.BidiOrder.getBaseLevel()", "public byte getBaseLevel()"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer()", "public com.lowagie.text.pdf.ByteBuffer()"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer(int)", "public com.lowagie.text.pdf.ByteBuffer(int)"], ["void", "com.lowagie.text.pdf.ByteBuffer.setCacheSize(int)", "public static void setCacheSize(int)"], ["void", "com.lowagie.text.pdf.ByteBuffer.fillCache(int)", "public static void fillCache(int)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append_i(int)", "public com.lowagie.text.pdf.ByteBuffer append_i(int)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(byte[], int, int)", "public com.lowagie.text.pdf.ByteBuffer append(byte[], int, int)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(byte[])", "public com.lowagie.text.pdf.ByteBuffer append(byte[])"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(java.lang.String)", "public com.lowagie.text.pdf.ByteBuffer append(java.lang.String)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(char)", "public com.lowagie.text.pdf.ByteBuffer append(char)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(com.lowagie.text.pdf.ByteBuffer)", "public com.lowagie.text.pdf.ByteBuffer append(com.lowagie.text.pdf.ByteBuffer)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(int)", "public com.lowagie.text.pdf.ByteBuffer append(int)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(byte)", "public com.lowagie.text.pdf.ByteBuffer append(byte)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.appendHex(byte)", "public com.lowagie.text.pdf.ByteBuffer appendHex(byte)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(float)", "public com.lowagie.text.pdf.ByteBuffer append(float)"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.ByteBuffer.append(double)", "public com.lowagie.text.pdf.ByteBuffer append(double)"], ["java.lang.String", "com.lowagie.text.pdf.ByteBuffer.formatDouble(double)", "public static java.lang.String formatDouble(double)"], ["java.lang.String", "com.lowagie.text.pdf.ByteBuffer.formatDouble(double, com.lowagie.text.pdf.ByteBuffer)", "public static java.lang.String formatDouble(double, com.lowagie.text.pdf.ByteBuffer)"], ["void", "com.lowagie.text.pdf.ByteBuffer.reset()", "public void reset()"], ["byte[]", "com.lowagie.text.pdf.ByteBuffer.toByteArray()", "public byte[] toByteArray()"], ["int", "com.lowagie.text.pdf.ByteBuffer.size()", "public int size()"], ["void", "com.lowagie.text.pdf.ByteBuffer.setSize(int)", "public void setSize(int)"], ["java.lang.String", "com.lowagie.text.pdf.ByteBuffer.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.lowagie.text.pdf.ByteBuffer.toString(java.lang.String)", "public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException"], ["void", "com.lowagie.text.pdf.ByteBuffer.writeTo(java.io.OutputStream)", "public void writeTo(java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.ByteBuffer.write(int)", "public void write(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.ByteBuffer.write(byte[], int, int)", "public void write(byte[], int, int)"], ["byte[]", "com.lowagie.text.pdf.ByteBuffer.getBuffer()", "public byte[] getBuffer()"], ["com.lowagie.text.pdf.CFFFont$DictNumberItem", "com.lowagie.text.pdf.CFFFont$DictNumberItem(int)", "public com.lowagie.text.pdf.CFFFont$DictNumberItem(int)"], ["void", "com.lowagie.text.pdf.CFFFont$DictNumberItem.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$DictNumberItem.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$DictOffsetItem", "com.lowagie.text.pdf.CFFFont$DictOffsetItem()", "public com.lowagie.text.pdf.CFFFont$DictOffsetItem()"], ["void", "com.lowagie.text.pdf.CFFFont$DictOffsetItem.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$DictOffsetItem.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$IndexBaseItem", "com.lowagie.text.pdf.CFFFont$IndexBaseItem()", "public com.lowagie.text.pdf.CFFFont$IndexBaseItem()"], ["com.lowagie.text.pdf.CFFFont$IndexMarkerItem", "com.lowagie.text.pdf.CFFFont$IndexMarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem, com.lowagie.text.pdf.CFFFont$IndexBaseItem)", "public com.lowagie.text.pdf.CFFFont$IndexMarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem, com.lowagie.text.pdf.CFFFont$IndexBaseItem)"], ["void", "com.lowagie.text.pdf.CFFFont$IndexMarkerItem.xref()", "public void xref()"], ["com.lowagie.text.pdf.CFFFont$IndexOffsetItem", "com.lowagie.text.pdf.CFFFont$IndexOffsetItem(int, int)", "public com.lowagie.text.pdf.CFFFont$IndexOffsetItem(int, int)"], ["com.lowagie.text.pdf.CFFFont$IndexOffsetItem", "com.lowagie.text.pdf.CFFFont$IndexOffsetItem(int)", "public com.lowagie.text.pdf.CFFFont$IndexOffsetItem(int)"], ["void", "com.lowagie.text.pdf.CFFFont$IndexOffsetItem.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$IndexOffsetItem.emit(byte[])", "public void emit(byte[])"], ["void", "com.lowagie.text.pdf.CFFFont$Item.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$Item.emit(byte[])", "public void emit(byte[])"], ["void", "com.lowagie.text.pdf.CFFFont$Item.xref()", "public void xref()"], ["com.lowagie.text.pdf.CFFFont$MarkerItem", "com.lowagie.text.pdf.CFFFont$MarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem)", "public com.lowagie.text.pdf.CFFFont$MarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem)"], ["void", "com.lowagie.text.pdf.CFFFont$MarkerItem.xref()", "public void xref()"], ["void", "com.lowagie.text.pdf.CFFFont$OffsetItem.set(int)", "public void set(int)"], ["com.lowagie.text.pdf.CFFFont$RangeItem", "com.lowagie.text.pdf.CFFFont$RangeItem(com.lowagie.text.pdf.RandomAccessFileOrArray, int, int)", "public com.lowagie.text.pdf.CFFFont$RangeItem(com.lowagie.text.pdf.RandomAccessFileOrArray, int, int)"], ["void", "com.lowagie.text.pdf.CFFFont$RangeItem.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$RangeItem.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$StringItem", "com.lowagie.text.pdf.CFFFont$StringItem(java.lang.String)", "public com.lowagie.text.pdf.CFFFont$StringItem(java.lang.String)"], ["void", "com.lowagie.text.pdf.CFFFont$StringItem.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$StringItem.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$SubrMarkerItem", "com.lowagie.text.pdf.CFFFont$SubrMarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem, com.lowagie.text.pdf.CFFFont$IndexBaseItem)", "public com.lowagie.text.pdf.CFFFont$SubrMarkerItem(com.lowagie.text.pdf.CFFFont$OffsetItem, com.lowagie.text.pdf.CFFFont$IndexBaseItem)"], ["void", "com.lowagie.text.pdf.CFFFont$SubrMarkerItem.xref()", "public void xref()"], ["com.lowagie.text.pdf.CFFFont$UInt16Item", "com.lowagie.text.pdf.CFFFont$UInt16Item(char)", "public com.lowagie.text.pdf.CFFFont$UInt16Item(char)"], ["void", "com.lowagie.text.pdf.CFFFont$UInt16Item.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$UInt16Item.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$UInt24Item", "com.lowagie.text.pdf.CFFFont$UInt24Item(int)", "public com.lowagie.text.pdf.CFFFont$UInt24Item(int)"], ["void", "com.lowagie.text.pdf.CFFFont$UInt24Item.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$UInt24Item.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$UInt32Item", "com.lowagie.text.pdf.CFFFont$UInt32Item(int)", "public com.lowagie.text.pdf.CFFFont$UInt32Item(int)"], ["void", "com.lowagie.text.pdf.CFFFont$UInt32Item.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$UInt32Item.emit(byte[])", "public void emit(byte[])"], ["com.lowagie.text.pdf.CFFFont$UInt8Item", "com.lowagie.text.pdf.CFFFont$UInt8Item(char)", "public com.lowagie.text.pdf.CFFFont$UInt8Item(char)"], ["void", "com.lowagie.text.pdf.CFFFont$UInt8Item.increment(int[])", "public void increment(int[])"], ["void", "com.lowagie.text.pdf.CFFFont$UInt8Item.emit(byte[])", "public void emit(byte[])"], ["java.lang.String", "com.lowagie.text.pdf.CFFFont.getString(char)", "public java.lang.String getString(char)"], ["byte[]", "com.lowagie.text.pdf.CFFFont.getCID(java.lang.String)", "public byte[] getCID(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.CFFFont.isCID(java.lang.String)", "public boolean isCID(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.CFFFont.exists(java.lang.String)", "public boolean exists(java.lang.String)"], ["java.lang.String[]", "com.lowagie.text.pdf.CFFFont.getNames()", "public java.lang.String[] getNames()"], ["com.lowagie.text.pdf.CFFFont", "com.lowagie.text.pdf.CFFFont(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public com.lowagie.text.pdf.CFFFont(com.lowagie.text.pdf.RandomAccessFileOrArray)"], ["com.lowagie.text.pdf.CFFFontSubset", "com.lowagie.text.pdf.CFFFontSubset(com.lowagie.text.pdf.RandomAccessFileOrArray, java.util.HashMap)", "public com.lowagie.text.pdf.CFFFontSubset(com.lowagie.text.pdf.RandomAccessFileOrArray, java.util.HashMap)"], ["byte[]", "com.lowagie.text.pdf.CFFFontSubset.Process(java.lang.String)", "public byte[] Process(java.lang.String) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.CJKFont.isCJKFont(java.lang.String, java.lang.String)", "public static boolean isCJKFont(java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.pdf.CJKFont.getWidth(int)", "public int getWidth(int)"], ["int", "com.lowagie.text.pdf.CJKFont.getWidth(java.lang.String)", "public int getWidth(java.lang.String)"], ["int", "com.lowagie.text.pdf.CJKFont.getKerning(int, int)", "public int getKerning(int, int)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.CJKFont.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream()"], ["float", "com.lowagie.text.pdf.CJKFont.getFontDescriptor(int, float)", "public float getFontDescriptor(int, float)"], ["java.lang.String", "com.lowagie.text.pdf.CJKFont.getPostscriptFontName()", "public java.lang.String getPostscriptFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.CJKFont.getFullFontName()", "public java.lang.String[][] getFullFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.CJKFont.getAllNameEntries()", "public java.lang.String[][] getAllNameEntries()"], ["java.lang.String[][]", "com.lowagie.text.pdf.CJKFont.getFamilyFontName()", "public java.lang.String[][] getFamilyFontName()"], ["int", "com.lowagie.text.pdf.CJKFont.getUnicodeEquivalent(int)", "public int getUnicodeEquivalent(int)"], ["int", "com.lowagie.text.pdf.CJKFont.getCidCode(int)", "public int getCidCode(int)"], ["boolean", "com.lowagie.text.pdf.CJKFont.hasKernPairs()", "public boolean hasKernPairs()"], ["boolean", "com.lowagie.text.pdf.CJKFont.charExists(int)", "public boolean charExists(int)"], ["boolean", "com.lowagie.text.pdf.CJKFont.setCharAdvance(int, int)", "public boolean setCharAdvance(int, int)"], ["void", "com.lowagie.text.pdf.CJKFont.setPostscriptFontName(java.lang.String)", "public void setPostscriptFontName(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.CJKFont.setKerning(int, int, int)", "public boolean setKerning(int, int, int)"], ["int[]", "com.lowagie.text.pdf.CJKFont.getCharBBox(int)", "public int[] getCharBBox(int)"], ["com.lowagie.text.pdf.CMYKColor", "com.lowagie.text.pdf.CMYKColor(int, int, int, int)", "public com.lowagie.text.pdf.CMYKColor(int, int, int, int)"], ["com.lowagie.text.pdf.CMYKColor", "com.lowagie.text.pdf.CMYKColor(float, float, float, float)", "public com.lowagie.text.pdf.CMYKColor(float, float, float, float)"], ["float", "com.lowagie.text.pdf.CMYKColor.getCyan()", "public float getCyan()"], ["float", "com.lowagie.text.pdf.CMYKColor.getMagenta()", "public float getMagenta()"], ["float", "com.lowagie.text.pdf.CMYKColor.getYellow()", "public float getYellow()"], ["float", "com.lowagie.text.pdf.CMYKColor.getBlack()", "public float getBlack()"], ["boolean", "com.lowagie.text.pdf.CMYKColor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.CMYKColor.hashCode()", "public int hashCode()"], ["com.lowagie.text.pdf.CMapAwareDocumentFont", "com.lowagie.text.pdf.CMapAwareDocumentFont(com.lowagie.text.pdf.PRIndirectReference)", "public com.lowagie.text.pdf.CMapAwareDocumentFont(com.lowagie.text.pdf.PRIndirectReference)"], ["java.lang.String", "com.lowagie.text.pdf.CMapAwareDocumentFont.encode(byte[], int, int)", "public java.lang.String encode(byte[], int, int)"], ["com.lowagie.text.pdf.ColumnText", "com.lowagie.text.pdf.ColumnText(com.lowagie.text.pdf.PdfContentByte)", "public com.lowagie.text.pdf.ColumnText(com.lowagie.text.pdf.PdfContentByte)"], ["com.lowagie.text.pdf.ColumnText", "com.lowagie.text.pdf.ColumnText.duplicate(com.lowagie.text.pdf.ColumnText)", "public static com.lowagie.text.pdf.ColumnText duplicate(com.lowagie.text.pdf.ColumnText)"], ["com.lowagie.text.pdf.ColumnText", "com.lowagie.text.pdf.ColumnText.setACopy(com.lowagie.text.pdf.ColumnText)", "public com.lowagie.text.pdf.ColumnText setACopy(com.lowagie.text.pdf.ColumnText)"], ["void", "com.lowagie.text.pdf.ColumnText.addText(com.lowagie.text.Phrase)", "public void addText(com.lowagie.text.Phrase)"], ["void", "com.lowagie.text.pdf.ColumnText.setText(com.lowagie.text.Phrase)", "public void setText(com.lowagie.text.Phrase)"], ["void", "com.lowagie.text.pdf.ColumnText.addText(com.lowagie.text.Chunk)", "public void addText(com.lowagie.text.Chunk)"], ["void", "com.lowagie.text.pdf.ColumnText.addElement(com.lowagie.text.Element)", "public void addElement(com.lowagie.text.Element)"], ["void", "com.lowagie.text.pdf.ColumnText.setColumns(float[], float[])", "public void setColumns(float[], float[])"], ["void", "com.lowagie.text.pdf.ColumnText.setSimpleColumn(com.lowagie.text.Phrase, float, float, float, float, float, int)", "public void setSimpleColumn(com.lowagie.text.Phrase, float, float, float, float, float, int)"], ["void", "com.lowagie.text.pdf.ColumnText.setSimpleColumn(float, float, float, float, float, int)", "public void setSimpleColumn(float, float, float, float, float, int)"], ["void", "com.lowagie.text.pdf.ColumnText.setSimpleColumn(float, float, float, float)", "public void setSimpleColumn(float, float, float, float)"], ["void", "com.lowagie.text.pdf.ColumnText.setLeading(float)", "public void setLeading(float)"], ["void", "com.lowagie.text.pdf.ColumnText.setLeading(float, float)", "public void setLeading(float, float)"], ["float", "com.lowagie.text.pdf.ColumnText.getLeading()", "public float getLeading()"], ["float", "com.lowagie.text.pdf.ColumnText.getMultipliedLeading()", "public float getMultipliedLeading()"], ["void", "com.lowagie.text.pdf.ColumnText.setYLine(float)", "public void setYLine(float)"], ["float", "com.lowagie.text.pdf.ColumnText.getYLine()", "public float getYLine()"], ["void", "com.lowagie.text.pdf.ColumnText.setAlignment(int)", "public void setAlignment(int)"], ["int", "com.lowagie.text.pdf.ColumnText.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.pdf.ColumnText.setIndent(float)", "public void setIndent(float)"], ["float", "com.lowagie.text.pdf.ColumnText.getIndent()", "public float getIndent()"], ["void", "com.lowagie.text.pdf.ColumnText.setFollowingIndent(float)", "public void setFollowingIndent(float)"], ["float", "com.lowagie.text.pdf.ColumnText.getFollowingIndent()", "public float getFollowingIndent()"], ["void", "com.lowagie.text.pdf.ColumnText.setRightIndent(float)", "public void setRightIndent(float)"], ["float", "com.lowagie.text.pdf.ColumnText.getRightIndent()", "public float getRightIndent()"], ["int", "com.lowagie.text.pdf.ColumnText.go()", "public int go() throws com.lowagie.text.DocumentException"], ["int", "com.lowagie.text.pdf.ColumnText.go(boolean)", "public int go(boolean) throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.ColumnText.getExtraParagraphSpace()", "public float getExtraParagraphSpace()"], ["void", "com.lowagie.text.pdf.ColumnText.setExtraParagraphSpace(float)", "public void setExtraParagraphSpace(float)"], ["void", "com.lowagie.text.pdf.ColumnText.clearChunks()", "public void clearChunks()"], ["float", "com.lowagie.text.pdf.ColumnText.getSpaceCharRatio()", "public float getSpaceCharRatio()"], ["void", "com.lowagie.text.pdf.ColumnText.setSpaceCharRatio(float)", "public void setSpaceCharRatio(float)"], ["void", "com.lowagie.text.pdf.ColumnText.setRunDirection(int)", "public void setRunDirection(int)"], ["int", "com.lowagie.text.pdf.ColumnText.getRunDirection()", "public int getRunDirection()"], ["int", "com.lowagie.text.pdf.ColumnText.getLinesWritten()", "public int getLinesWritten()"], ["int", "com.lowagie.text.pdf.ColumnText.getArabicOptions()", "public int getArabicOptions()"], ["void", "com.lowagie.text.pdf.ColumnText.setArabicOptions(int)", "public void setArabicOptions(int)"], ["float", "com.lowagie.text.pdf.ColumnText.getDescender()", "public float getDescender()"], ["float", "com.lowagie.text.pdf.ColumnText.getWidth(com.lowagie.text.Phrase, int, int)", "public static float getWidth(com.lowagie.text.Phrase, int, int)"], ["float", "com.lowagie.text.pdf.ColumnText.getWidth(com.lowagie.text.Phrase)", "public static float getWidth(com.lowagie.text.Phrase)"], ["void", "com.lowagie.text.pdf.ColumnText.showTextAligned(com.lowagie.text.pdf.PdfContentByte, int, com.lowagie.text.Phrase, float, float, float, int, int)", "public static void showTextAligned(com.lowagie.text.pdf.PdfContentByte, int, com.lowagie.text.Phrase, float, float, float, int, int)"], ["void", "com.lowagie.text.pdf.ColumnText.showTextAligned(com.lowagie.text.pdf.PdfContentByte, int, com.lowagie.text.Phrase, float, float, float)", "public static void showTextAligned(com.lowagie.text.pdf.PdfContentByte, int, com.lowagie.text.Phrase, float, float, float)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.ColumnText.getCanvas()", "public com.lowagie.text.pdf.PdfContentByte getCanvas()"], ["void", "com.lowagie.text.pdf.ColumnText.setCanvas(com.lowagie.text.pdf.PdfContentByte)", "public void setCanvas(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.ColumnText.setCanvases(com.lowagie.text.pdf.PdfContentByte[])", "public void setCanvases(com.lowagie.text.pdf.PdfContentByte[])"], ["com.lowagie.text.pdf.PdfContentByte[]", "com.lowagie.text.pdf.ColumnText.getCanvases()", "public com.lowagie.text.pdf.PdfContentByte[] getCanvases()"], ["boolean", "com.lowagie.text.pdf.ColumnText.zeroHeightElement()", "public boolean zeroHeightElement()"], ["boolean", "com.lowagie.text.pdf.ColumnText.isUseAscender()", "public boolean isUseAscender()"], ["void", "com.lowagie.text.pdf.ColumnText.setUseAscender(boolean)", "public void setUseAscender(boolean)"], ["boolean", "com.lowagie.text.pdf.ColumnText.hasMoreText(int)", "public static boolean hasMoreText(int)"], ["float", "com.lowagie.text.pdf.ColumnText.getFilledWidth()", "public float getFilledWidth()"], ["void", "com.lowagie.text.pdf.ColumnText.setFilledWidth(float)", "public void setFilledWidth(float)"], ["void", "com.lowagie.text.pdf.ColumnText.updateFilledWidth(float)", "public void updateFilledWidth(float)"], ["boolean", "com.lowagie.text.pdf.ColumnText.isAdjustFirstLine()", "public boolean isAdjustFirstLine()"], ["void", "com.lowagie.text.pdf.ColumnText.setAdjustFirstLine(boolean)", "public void setAdjustFirstLine(boolean)"], ["com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters", "com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters(java.lang.String)", "public com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters(java.lang.String)"], ["com.lowagie.text.pdf.DefaultFontMapper", "com.lowagie.text.pdf.DefaultFontMapper()", "public com.lowagie.text.pdf.DefaultFontMapper()"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.DefaultFontMapper.awtToPdf(java.awt.Font)", "public com.lowagie.text.pdf.BaseFont awtToPdf(java.awt.Font)"], ["java.awt.Font", "com.lowagie.text.pdf.DefaultFontMapper.pdfToAwt(com.lowagie.text.pdf.BaseFont, int)", "public java.awt.Font pdfToAwt(com.lowagie.text.pdf.BaseFont, int)"], ["void", "com.lowagie.text.pdf.DefaultFontMapper.putName(java.lang.String, com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters)", "public void putName(java.lang.String, com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters)"], ["void", "com.lowagie.text.pdf.DefaultFontMapper.putAlias(java.lang.String, java.lang.String)", "public void putAlias(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters", "com.lowagie.text.pdf.DefaultFontMapper.getBaseFontParameters(java.lang.String)", "public com.lowagie.text.pdf.DefaultFontMapper$BaseFontParameters getBaseFontParameters(java.lang.String)"], ["void", "com.lowagie.text.pdf.DefaultFontMapper.insertNames(java.lang.Object[], java.lang.String)", "public void insertNames(java.lang.Object[], java.lang.String)"], ["int", "com.lowagie.text.pdf.DefaultFontMapper.insertDirectory(java.lang.String)", "public int insertDirectory(java.lang.String)"], ["java.util.HashMap", "com.lowagie.text.pdf.DefaultFontMapper.getMapper()", "public java.util.HashMap getMapper()"], ["java.util.HashMap", "com.lowagie.text.pdf.DefaultFontMapper.getAliases()", "public java.util.HashMap getAliases()"], ["com.lowagie.text.pdf.DefaultSplitCharacter", "com.lowagie.text.pdf.DefaultSplitCharacter()", "public com.lowagie.text.pdf.DefaultSplitCharacter()"], ["boolean", "com.lowagie.text.pdf.DefaultSplitCharacter.isSplitCharacter(int, int, int, char[], com.lowagie.text.pdf.PdfChunk[])", "public boolean isSplitCharacter(int, int, int, char[], com.lowagie.text.pdf.PdfChunk[])"], ["java.lang.String[][]", "com.lowagie.text.pdf.DocumentFont.getFamilyFontName()", "public java.lang.String[][] getFamilyFontName()"], ["float", "com.lowagie.text.pdf.DocumentFont.getFontDescriptor(int, float)", "public float getFontDescriptor(int, float)"], ["java.lang.String[][]", "com.lowagie.text.pdf.DocumentFont.getFullFontName()", "public java.lang.String[][] getFullFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.DocumentFont.getAllNameEntries()", "public java.lang.String[][] getAllNameEntries()"], ["int", "com.lowagie.text.pdf.DocumentFont.getKerning(int, int)", "public int getKerning(int, int)"], ["java.lang.String", "com.lowagie.text.pdf.DocumentFont.getPostscriptFontName()", "public java.lang.String getPostscriptFontName()"], ["boolean", "com.lowagie.text.pdf.DocumentFont.hasKernPairs()", "public boolean hasKernPairs()"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.DocumentFont.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream()"], ["int", "com.lowagie.text.pdf.DocumentFont.getWidth(int)", "public int getWidth(int)"], ["int", "com.lowagie.text.pdf.DocumentFont.getWidth(java.lang.String)", "public int getWidth(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.DocumentFont.charExists(int)", "public boolean charExists(int)"], ["void", "com.lowagie.text.pdf.DocumentFont.setPostscriptFontName(java.lang.String)", "public void setPostscriptFontName(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.DocumentFont.setKerning(int, int, int)", "public boolean setKerning(int, int, int)"], ["int[]", "com.lowagie.text.pdf.DocumentFont.getCharBBox(int)", "public int[] getCharBBox(int)"], ["com.lowagie.text.pdf.ExtendedColor", "com.lowagie.text.pdf.ExtendedColor(int)", "public com.lowagie.text.pdf.ExtendedColor(int)"], ["com.lowagie.text.pdf.ExtendedColor", "com.lowagie.text.pdf.ExtendedColor(int, float, float, float)", "public com.lowagie.text.pdf.ExtendedColor(int, float, float, float)"], ["int", "com.lowagie.text.pdf.ExtendedColor.getType()", "public int getType()"], ["int", "com.lowagie.text.pdf.ExtendedColor.getType(java.awt.Color)", "public static int getType(java.awt.Color)"], ["com.lowagie.text.pdf.FdfReader", "com.lowagie.text.pdf.FdfReader(java.lang.String)", "public com.lowagie.text.pdf.FdfReader(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.FdfReader", "com.lowagie.text.pdf.FdfReader(byte[])", "public com.lowagie.text.pdf.FdfReader(byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.FdfReader", "com.lowagie.text.pdf.FdfReader(java.net.URL)", "public com.lowagie.text.pdf.FdfReader(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.pdf.FdfReader", "com.lowagie.text.pdf.FdfReader(java.io.InputStream)", "public com.lowagie.text.pdf.FdfReader(java.io.InputStream) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.FdfReader.getFields()", "public java.util.HashMap getFields()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.FdfReader.getField(java.lang.String)", "public com.lowagie.text.pdf.PdfDictionary getField(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.FdfReader.getFieldValue(java.lang.String)", "public java.lang.String getFieldValue(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.FdfReader.getFileSpec()", "public java.lang.String getFileSpec()"], ["com.lowagie.text.pdf.FdfWriter", "com.lowagie.text.pdf.FdfWriter()", "public com.lowagie.text.pdf.FdfWriter()"], ["void", "com.lowagie.text.pdf.FdfWriter.writeTo(java.io.OutputStream)", "public void writeTo(java.io.OutputStream) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.FdfWriter.removeField(java.lang.String)", "public boolean removeField(java.lang.String)"], ["java.util.HashMap", "com.lowagie.text.pdf.FdfWriter.getFields()", "public java.util.HashMap getFields()"], ["java.lang.String", "com.lowagie.text.pdf.FdfWriter.getField(java.lang.String)", "public java.lang.String getField(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.FdfWriter.setFieldAsName(java.lang.String, java.lang.String)", "public boolean setFieldAsName(java.lang.String, java.lang.String)"], ["boolean", "com.lowagie.text.pdf.FdfWriter.setFieldAsString(java.lang.String, java.lang.String)", "public boolean setFieldAsString(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.FdfWriter.setFields(com.lowagie.text.pdf.FdfReader)", "public void setFields(com.lowagie.text.pdf.FdfReader)"], ["void", "com.lowagie.text.pdf.FdfWriter.setFields(com.lowagie.text.pdf.PdfReader)", "public void setFields(com.lowagie.text.pdf.PdfReader)"], ["void", "com.lowagie.text.pdf.FdfWriter.setFields(com.lowagie.text.pdf.AcroFields)", "public void setFields(com.lowagie.text.pdf.AcroFields)"], ["java.lang.String", "com.lowagie.text.pdf.FdfWriter.getFile()", "public java.lang.String getFile()"], ["void", "com.lowagie.text.pdf.FdfWriter.setFile(java.lang.String)", "public void setFile(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.FontDetails.isSubset()", "public boolean isSubset()"], ["void", "com.lowagie.text.pdf.FontDetails.setSubset(boolean)", "public void setSubset(boolean)"], ["com.lowagie.text.pdf.FontSelector", "com.lowagie.text.pdf.FontSelector()", "public com.lowagie.text.pdf.FontSelector()"], ["void", "com.lowagie.text.pdf.FontSelector.addFont(com.lowagie.text.Font)", "public void addFont(com.lowagie.text.Font)"], ["com.lowagie.text.Phrase", "com.lowagie.text.pdf.FontSelector.process(java.lang.String)", "public com.lowagie.text.Phrase process(java.lang.String)"], ["com.lowagie.text.pdf.GlyphList", "com.lowagie.text.pdf.GlyphList()", "public com.lowagie.text.pdf.GlyphList()"], ["int[]", "com.lowagie.text.pdf.GlyphList.nameToUnicode(java.lang.String)", "public static int[] nameToUnicode(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.GlyphList.unicodeToName(int)", "public static java.lang.String unicodeToName(int)"], ["com.lowagie.text.pdf.GrayColor", "com.lowagie.text.pdf.GrayColor(int)", "public com.lowagie.text.pdf.GrayColor(int)"], ["com.lowagie.text.pdf.GrayColor", "com.lowagie.text.pdf.GrayColor(float)", "public com.lowagie.text.pdf.GrayColor(float)"], ["float", "com.lowagie.text.pdf.GrayColor.getGray()", "public float getGray()"], ["boolean", "com.lowagie.text.pdf.GrayColor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.GrayColor.hashCode()", "public int hashCode()"], ["com.lowagie.text.pdf.HyphenationAuto", "com.lowagie.text.pdf.HyphenationAuto(java.lang.String, java.lang.String, int, int)", "public com.lowagie.text.pdf.HyphenationAuto(java.lang.String, java.lang.String, int, int)"], ["java.lang.String", "com.lowagie.text.pdf.HyphenationAuto.getHyphenSymbol()", "public java.lang.String getHyphenSymbol()"], ["java.lang.String", "com.lowagie.text.pdf.HyphenationAuto.getHyphenatedWordPre(java.lang.String, com.lowagie.text.pdf.BaseFont, float, float)", "public java.lang.String getHyphenatedWordPre(java.lang.String, com.lowagie.text.pdf.BaseFont, float, float)"], ["java.lang.String", "com.lowagie.text.pdf.HyphenationAuto.getHyphenatedWordPost()", "public java.lang.String getHyphenatedWordPost()"], ["int", "com.lowagie.text.pdf.IntHashtable$Entry.getKey()", "public int getKey()"], ["int", "com.lowagie.text.pdf.IntHashtable$Entry.getValue()", "public int getValue()"], ["boolean", "com.lowagie.text.pdf.IntHashtable$IntHashtableIterator.hasNext()", "public boolean hasNext()"], ["java.lang.Object", "com.lowagie.text.pdf.IntHashtable$IntHashtableIterator.next()", "public java.lang.Object next()"], ["void", "com.lowagie.text.pdf.IntHashtable$IntHashtableIterator.remove()", "public void remove()"], ["com.lowagie.text.pdf.IntHashtable", "com.lowagie.text.pdf.IntHashtable()", "public com.lowagie.text.pdf.IntHashtable()"], ["com.lowagie.text.pdf.IntHashtable", "com.lowagie.text.pdf.IntHashtable(int)", "public com.lowagie.text.pdf.IntHashtable(int)"], ["com.lowagie.text.pdf.IntHashtable", "com.lowagie.text.pdf.IntHashtable(int, float)", "public com.lowagie.text.pdf.IntHashtable(int, float)"], ["int", "com.lowagie.text.pdf.IntHashtable.size()", "public int size()"], ["boolean", "com.lowagie.text.pdf.IntHashtable.isEmpty()", "public boolean isEmpty()"], ["boolean", "com.lowagie.text.pdf.IntHashtable.contains(int)", "public boolean contains(int)"], ["boolean", "com.lowagie.text.pdf.IntHashtable.containsValue(int)", "public boolean containsValue(int)"], ["boolean", "com.lowagie.text.pdf.IntHashtable.containsKey(int)", "public boolean containsKey(int)"], ["int", "com.lowagie.text.pdf.IntHashtable.get(int)", "public int get(int)"], ["int", "com.lowagie.text.pdf.IntHashtable.put(int, int)", "public int put(int, int)"], ["int", "com.lowagie.text.pdf.IntHashtable.remove(int)", "public int remove(int)"], ["void", "com.lowagie.text.pdf.IntHashtable.clear()", "public void clear()"], ["java.util.Iterator", "com.lowagie.text.pdf.IntHashtable.getEntryIterator()", "public java.util.Iterator getEntryIterator()"], ["int[]", "com.lowagie.text.pdf.IntHashtable.toOrderedKeys()", "public int[] toOrderedKeys()"], ["int[]", "com.lowagie.text.pdf.IntHashtable.getKeys()", "public int[] getKeys()"], ["int", "com.lowagie.text.pdf.IntHashtable.getOneKey()", "public int getOneKey()"], ["java.lang.Object", "com.lowagie.text.pdf.IntHashtable.clone()", "public java.lang.Object clone()"], ["com.lowagie.text.pdf.LZWDecoder", "com.lowagie.text.pdf.LZWDecoder()", "public com.lowagie.text.pdf.LZWDecoder()"], ["void", "com.lowagie.text.pdf.LZWDecoder.decode(byte[], java.io.OutputStream)", "public void decode(byte[], java.io.OutputStream)"], ["void", "com.lowagie.text.pdf.LZWDecoder.initializeStringTable()", "public void initializeStringTable()"], ["void", "com.lowagie.text.pdf.LZWDecoder.writeString(byte[])", "public void writeString(byte[])"], ["void", "com.lowagie.text.pdf.LZWDecoder.addStringToTable(byte[], byte)", "public void addStringToTable(byte[], byte)"], ["void", "com.lowagie.text.pdf.LZWDecoder.addStringToTable(byte[])", "public void addStringToTable(byte[])"], ["byte[]", "com.lowagie.text.pdf.LZWDecoder.composeString(byte[], byte)", "public byte[] composeString(byte[], byte)"], ["int", "com.lowagie.text.pdf.LZWDecoder.getNextCode()", "public int getNextCode()"], ["java.lang.Object", "com.lowagie.text.pdf.MappedRandomAccessFile$1.run()", "public java.lang.Object run()"], ["com.lowagie.text.pdf.MappedRandomAccessFile", "com.lowagie.text.pdf.MappedRandomAccessFile(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.MappedRandomAccessFile(java.lang.String, java.lang.String) throws java.io.FileNotFoundException, java.io.IOException"], ["java.nio.channels.FileChannel", "com.lowagie.text.pdf.MappedRandomAccessFile.getChannel()", "public java.nio.channels.FileChannel getChannel()"], ["int", "com.lowagie.text.pdf.MappedRandomAccessFile.read()", "public int read()"], ["int", "com.lowagie.text.pdf.MappedRandomAccessFile.read(byte[], int, int)", "public int read(byte[], int, int)"], ["long", "com.lowagie.text.pdf.MappedRandomAccessFile.getFilePointer()", "public long getFilePointer()"], ["void", "com.lowagie.text.pdf.MappedRandomAccessFile.seek(long)", "public void seek(long)"], ["long", "com.lowagie.text.pdf.MappedRandomAccessFile.length()", "public long length()"], ["void", "com.lowagie.text.pdf.MappedRandomAccessFile.close()", "public void close() throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.MappedRandomAccessFile.clean(java.nio.ByteBuffer)", "public static boolean clean(java.nio.ByteBuffer)"], ["com.lowagie.text.pdf.MultiColumnText", "com.lowagie.text.pdf.MultiColumnText()", "public com.lowagie.text.pdf.MultiColumnText()"], ["com.lowagie.text.pdf.MultiColumnText", "com.lowagie.text.pdf.MultiColumnText(float)", "public com.lowagie.text.pdf.MultiColumnText(float)"], ["com.lowagie.text.pdf.MultiColumnText", "com.lowagie.text.pdf.MultiColumnText(float, float)", "public com.lowagie.text.pdf.MultiColumnText(float, float)"], ["boolean", "com.lowagie.text.pdf.MultiColumnText.isOverflow()", "public boolean isOverflow()"], ["void", "com.lowagie.text.pdf.MultiColumnText.useColumnParams(com.lowagie.text.pdf.ColumnText)", "public void useColumnParams(com.lowagie.text.pdf.ColumnText)"], ["void", "com.lowagie.text.pdf.MultiColumnText.addColumn(float[], float[])", "public void addColumn(float[], float[])"], ["void", "com.lowagie.text.pdf.MultiColumnText.addSimpleColumn(float, float)", "public void addSimpleColumn(float, float)"], ["void", "com.lowagie.text.pdf.MultiColumnText.addRegularColumns(float, float, float, int)", "public void addRegularColumns(float, float, float, int)"], ["void", "com.lowagie.text.pdf.MultiColumnText.addElement(com.lowagie.text.Element)", "public void addElement(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.MultiColumnText.write(com.lowagie.text.pdf.PdfContentByte, com.lowagie.text.pdf.PdfDocument, float)", "public float write(com.lowagie.text.pdf.PdfContentByte, com.lowagie.text.pdf.PdfDocument, float) throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.MultiColumnText.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.pdf.MultiColumnText.type()", "public int type()"], ["java.util.ArrayList", "com.lowagie.text.pdf.MultiColumnText.getChunks()", "public java.util.ArrayList getChunks()"], ["boolean", "com.lowagie.text.pdf.MultiColumnText.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.pdf.MultiColumnText.isNestable()", "public boolean isNestable()"], ["void", "com.lowagie.text.pdf.MultiColumnText.nextColumn()", "public void nextColumn() throws com.lowagie.text.DocumentException"], ["int", "com.lowagie.text.pdf.MultiColumnText.getCurrentColumn()", "public int getCurrentColumn()"], ["void", "com.lowagie.text.pdf.MultiColumnText.resetCurrentColumn()", "public void resetCurrentColumn()"], ["boolean", "com.lowagie.text.pdf.MultiColumnText.shiftCurrentColumn()", "public boolean shiftCurrentColumn()"], ["void", "com.lowagie.text.pdf.MultiColumnText.setColumnsRightToLeft(boolean)", "public void setColumnsRightToLeft(boolean)"], ["void", "com.lowagie.text.pdf.MultiColumnText.setSpaceCharRatio(float)", "public void setSpaceCharRatio(float)"], ["void", "com.lowagie.text.pdf.MultiColumnText.setRunDirection(int)", "public void setRunDirection(int)"], ["void", "com.lowagie.text.pdf.MultiColumnText.setArabicOptions(int)", "public void setArabicOptions(int)"], ["void", "com.lowagie.text.pdf.MultiColumnText.setAlignment(int)", "public void setAlignment(int)"], ["com.lowagie.text.pdf.OutputStreamCounter", "com.lowagie.text.pdf.OutputStreamCounter(java.io.OutputStream)", "public com.lowagie.text.pdf.OutputStreamCounter(java.io.OutputStream)"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.close()", "public void close() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.flush()", "public void flush() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.write(byte[])", "public void write(byte[]) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.write(int)", "public void write(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.OutputStreamCounter.getCounter()", "public int getCounter()"], ["void", "com.lowagie.text.pdf.OutputStreamCounter.resetCounter()", "public void resetCounter()"], ["com.lowagie.text.pdf.OutputStreamEncryption", "com.lowagie.text.pdf.OutputStreamEncryption(java.io.OutputStream, byte[], int, int, int)", "public com.lowagie.text.pdf.OutputStreamEncryption(java.io.OutputStream, byte[], int, int, int)"], ["com.lowagie.text.pdf.OutputStreamEncryption", "com.lowagie.text.pdf.OutputStreamEncryption(java.io.OutputStream, byte[], int)", "public com.lowagie.text.pdf.OutputStreamEncryption(java.io.OutputStream, byte[], int)"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.close()", "public void close() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.flush()", "public void flush() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.write(byte[])", "public void write(byte[]) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.write(int)", "public void write(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.OutputStreamEncryption.finish()", "public void finish() throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.PRAcroForm$FieldInformation.getName()", "public java.lang.String getName()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PRAcroForm$FieldInformation.getInfo()", "public com.lowagie.text.pdf.PdfDictionary getInfo()"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PRAcroForm$FieldInformation.getRef()", "public com.lowagie.text.pdf.PRIndirectReference getRef()"], ["com.lowagie.text.pdf.PRAcroForm", "com.lowagie.text.pdf.PRAcroForm(com.lowagie.text.pdf.PdfReader)", "public com.lowagie.text.pdf.PRAcroForm(com.lowagie.text.pdf.PdfReader)"], ["int", "com.lowagie.text.pdf.PRAcroForm.size()", "public int size()"], ["java.util.ArrayList", "com.lowagie.text.pdf.PRAcroForm.getFields()", "public java.util.ArrayList getFields()"], ["com.lowagie.text.pdf.PRAcroForm$FieldInformation", "com.lowagie.text.pdf.PRAcroForm.getField(java.lang.String)", "public com.lowagie.text.pdf.PRAcroForm$FieldInformation getField(java.lang.String)"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PRAcroForm.getRefByName(java.lang.String)", "public com.lowagie.text.pdf.PRIndirectReference getRefByName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PRAcroForm.readAcroForm(com.lowagie.text.pdf.PdfDictionary)", "public void readAcroForm(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.pdf.PRIndirectReference.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PRIndirectReference.getReader()", "public com.lowagie.text.pdf.PdfReader getReader()"], ["void", "com.lowagie.text.pdf.PRIndirectReference.setNumber(int, int)", "public void setNumber(int, int)"], ["com.lowagie.text.pdf.PRStream", "com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfDictionary)", "public com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.PRStream", "com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.PdfReader)", "public com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfDictionary, com.lowagie.text.pdf.PdfReader)"], ["com.lowagie.text.pdf.PRStream", "com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, int)", "public com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, int)"], ["com.lowagie.text.pdf.PRStream", "com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, byte[])", "public com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, byte[])"], ["com.lowagie.text.pdf.PRStream", "com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, byte[], int)", "public com.lowagie.text.pdf.PRStream(com.lowagie.text.pdf.PdfReader, byte[], int)"], ["void", "com.lowagie.text.pdf.PRStream.setData(byte[], boolean)", "public void setData(byte[], boolean)"], ["void", "com.lowagie.text.pdf.PRStream.setData(byte[], boolean, int)", "public void setData(byte[], boolean, int)"], ["void", "com.lowagie.text.pdf.PRStream.setData(byte[])", "public void setData(byte[])"], ["void", "com.lowagie.text.pdf.PRStream.setLength(int)", "public void setLength(int)"], ["int", "com.lowagie.text.pdf.PRStream.getOffset()", "public int getOffset()"], ["int", "com.lowagie.text.pdf.PRStream.getLength()", "public int getLength()"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PRStream.getReader()", "public com.lowagie.text.pdf.PdfReader getReader()"], ["byte[]", "com.lowagie.text.pdf.PRStream.getBytes()", "public byte[] getBytes()"], ["void", "com.lowagie.text.pdf.PRStream.setObjNum(int, int)", "public void setObjNum(int, int)"], ["void", "com.lowagie.text.pdf.PRStream.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.PRTokeniser", "com.lowagie.text.pdf.PRTokeniser(java.lang.String)", "public com.lowagie.text.pdf.PRTokeniser(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.PRTokeniser", "com.lowagie.text.pdf.PRTokeniser(byte[])", "public com.lowagie.text.pdf.PRTokeniser(byte[])"], ["com.lowagie.text.pdf.PRTokeniser", "com.lowagie.text.pdf.PRTokeniser(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public com.lowagie.text.pdf.PRTokeniser(com.lowagie.text.pdf.RandomAccessFileOrArray)"], ["void", "com.lowagie.text.pdf.PRTokeniser.seek(int)", "public void seek(int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.getFilePointer()", "public int getFilePointer() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PRTokeniser.close()", "public void close() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.length()", "public int length() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.read()", "public int read() throws java.io.IOException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.PRTokeniser.getSafeFile()", "public com.lowagie.text.pdf.RandomAccessFileOrArray getSafeFile()"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.PRTokeniser.getFile()", "public com.lowagie.text.pdf.RandomAccessFileOrArray getFile()"], ["java.lang.String", "com.lowagie.text.pdf.PRTokeniser.readString(int)", "public java.lang.String readString(int) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.isWhitespace(int)", "public static final boolean isWhitespace(int)"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.isDelimiter(int)", "public static final boolean isDelimiter(int)"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.isDelimiterWhitespace(int)", "public static final boolean isDelimiterWhitespace(int)"], ["int", "com.lowagie.text.pdf.PRTokeniser.getTokenType()", "public int getTokenType()"], ["java.lang.String", "com.lowagie.text.pdf.PRTokeniser.getStringValue()", "public java.lang.String getStringValue()"], ["int", "com.lowagie.text.pdf.PRTokeniser.getReference()", "public int getReference()"], ["int", "com.lowagie.text.pdf.PRTokeniser.getGeneration()", "public int getGeneration()"], ["void", "com.lowagie.text.pdf.PRTokeniser.backOnePosition(int)", "public void backOnePosition(int)"], ["void", "com.lowagie.text.pdf.PRTokeniser.throwError(java.lang.String)", "public void throwError(java.lang.String) throws java.io.IOException"], ["char", "com.lowagie.text.pdf.PRTokeniser.checkPdfHeader()", "public char checkPdfHeader() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PRTokeniser.checkFdfHeader()", "public void checkFdfHeader() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.getStartxref()", "public int getStartxref() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.getHex(int)", "public static int getHex(int)"], ["void", "com.lowagie.text.pdf.PRTokeniser.nextValidToken()", "public void nextValidToken() throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.nextToken()", "public boolean nextToken() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PRTokeniser.intValue()", "public int intValue()"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.readLineSegment(byte[])", "public boolean readLineSegment(byte[]) throws java.io.IOException"], ["int[]", "com.lowagie.text.pdf.PRTokeniser.checkObjectStart(byte[])", "public static int[] checkObjectStart(byte[])"], ["boolean", "com.lowagie.text.pdf.PRTokeniser.isHexString()", "public boolean isHexString()"], ["com.lowagie.text.pdf.PatternColor", "com.lowagie.text.pdf.PatternColor(com.lowagie.text.pdf.PdfPatternPainter)", "public com.lowagie.text.pdf.PatternColor(com.lowagie.text.pdf.PdfPatternPainter)"], ["com.lowagie.text.pdf.PdfPatternPainter", "com.lowagie.text.pdf.PatternColor.getPainter()", "public com.lowagie.text.pdf.PdfPatternPainter getPainter()"], ["boolean", "com.lowagie.text.pdf.PatternColor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.PatternColor.hashCode()", "public int hashCode()"], ["com.lowagie.text.pdf.PdfAcroForm", "com.lowagie.text.pdf.PdfAcroForm(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfAcroForm(com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setNeedAppearances(boolean)", "public void setNeedAppearances(boolean)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.addFieldTemplates(java.util.HashMap)", "public void addFieldTemplates(java.util.HashMap)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.addDocumentField(com.lowagie.text.pdf.PdfIndirectReference)", "public void addDocumentField(com.lowagie.text.pdf.PdfIndirectReference)"], ["boolean", "com.lowagie.text.pdf.PdfAcroForm.isValid()", "public boolean isValid()"], ["void", "com.lowagie.text.pdf.PdfAcroForm.addCalculationOrder(com.lowagie.text.pdf.PdfFormField)", "public void addCalculationOrder(com.lowagie.text.pdf.PdfFormField)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setSigFlags(int)", "public void setSigFlags(int)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.addFormField(com.lowagie.text.pdf.PdfFormField)", "public void addFormField(com.lowagie.text.pdf.PdfFormField)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addHtmlPostButton(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addHtmlPostButton(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addResetButton(java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addResetButton(java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addMap(java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.PdfContentByte, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addMap(java.lang.String, java.lang.String, java.lang.String, com.lowagie.text.pdf.PdfContentByte, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setButtonParams(com.lowagie.text.pdf.PdfFormField, int, java.lang.String, java.lang.String)", "public void setButtonParams(com.lowagie.text.pdf.PdfFormField, int, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawButton(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public void drawButton(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addHiddenField(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.PdfFormField addHiddenField(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addSingleLineTextField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSingleLineTextField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addMultiLineTextField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addMultiLineTextField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addSingleLinePasswordField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSingleLinePasswordField(java.lang.String, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setTextFieldParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, float, float, float, float)", "public void setTextFieldParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawSingleLineOfText(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public void drawSingleLineOfText(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawMultiLineOfText(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public void drawMultiLineOfText(com.lowagie.text.pdf.PdfFormField, java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addCheckBox(java.lang.String, java.lang.String, boolean, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addCheckBox(java.lang.String, java.lang.String, boolean, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setCheckBoxParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, boolean, float, float, float, float)", "public void setCheckBoxParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, boolean, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawCheckBoxAppearences(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)", "public void drawCheckBoxAppearences(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.getRadioGroup(java.lang.String, java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfFormField getRadioGroup(java.lang.String, java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.addRadioGroup(com.lowagie.text.pdf.PdfFormField)", "public void addRadioGroup(com.lowagie.text.pdf.PdfFormField)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addRadioButton(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addRadioButton(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawRadioAppearences(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)", "public void drawRadioAppearences(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addSelectList(java.lang.String, java.lang.String[], java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSelectList(java.lang.String, java.lang.String[], java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addSelectList(java.lang.String, java.lang.String[][], java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSelectList(java.lang.String, java.lang.String[][], java.lang.String, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addComboBox(java.lang.String, java.lang.String[], java.lang.String, boolean, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addComboBox(java.lang.String, java.lang.String[], java.lang.String, boolean, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addComboBox(java.lang.String, java.lang.String[][], java.lang.String, boolean, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addComboBox(java.lang.String, java.lang.String[][], java.lang.String, boolean, com.lowagie.text.pdf.BaseFont, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setChoiceParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, float, float, float, float)", "public void setChoiceParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, java.lang.String, float, float, float, float)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfAcroForm.addSignature(java.lang.String, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSignature(java.lang.String, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.setSignatureParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)", "public void setSignatureParams(com.lowagie.text.pdf.PdfFormField, java.lang.String, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAcroForm.drawSignatureAppearences(com.lowagie.text.pdf.PdfFormField, float, float, float, float)", "public void drawSignatureAppearences(com.lowagie.text.pdf.PdfFormField, float, float, float, float)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction()", "public com.lowagie.text.pdf.PdfAction()"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.net.URL)", "public com.lowagie.text.pdf.PdfAction(java.net.URL)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.net.URL, boolean)", "public com.lowagie.text.pdf.PdfAction(java.net.URL, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.lang.String)", "public com.lowagie.text.pdf.PdfAction(java.lang.String)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfAction(java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.PdfAction(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.lang.String, int)", "public com.lowagie.text.pdf.PdfAction(java.lang.String, int)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(int)", "public com.lowagie.text.pdf.PdfAction(int)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.PdfAction(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createLaunch(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public static com.lowagie.text.pdf.PdfAction createLaunch(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.rendition(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification, java.lang.String, com.lowagie.text.pdf.PdfIndirectReference)", "public static com.lowagie.text.pdf.PdfAction rendition(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification, java.lang.String, com.lowagie.text.pdf.PdfIndirectReference) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.javaScript(java.lang.String, com.lowagie.text.pdf.PdfWriter, boolean)", "public static com.lowagie.text.pdf.PdfAction javaScript(java.lang.String, com.lowagie.text.pdf.PdfWriter, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.javaScript(java.lang.String, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfAction javaScript(java.lang.String, com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createHide(com.lowagie.text.pdf.PdfAnnotation, boolean)", "public static com.lowagie.text.pdf.PdfAction createHide(com.lowagie.text.pdf.PdfAnnotation, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createHide(java.lang.String, boolean)", "public static com.lowagie.text.pdf.PdfAction createHide(java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createHide(java.lang.Object[], boolean)", "public static com.lowagie.text.pdf.PdfAction createHide(java.lang.Object[], boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createSubmitForm(java.lang.String, java.lang.Object[], int)", "public static com.lowagie.text.pdf.PdfAction createSubmitForm(java.lang.String, java.lang.Object[], int)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createResetForm(java.lang.Object[], int)", "public static com.lowagie.text.pdf.PdfAction createResetForm(java.lang.Object[], int)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.createImportData(java.lang.String)", "public static com.lowagie.text.pdf.PdfAction createImportData(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAction.next(com.lowagie.text.pdf.PdfAction)", "public void next(com.lowagie.text.pdf.PdfAction)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.gotoLocalPage(int, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfAction gotoLocalPage(int, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.gotoLocalPage(java.lang.String, boolean)", "public static com.lowagie.text.pdf.PdfAction gotoLocalPage(java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.gotoRemotePage(java.lang.String, java.lang.String, boolean, boolean)", "public static com.lowagie.text.pdf.PdfAction gotoRemotePage(java.lang.String, java.lang.String, boolean, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.gotoEmbedded(java.lang.String, com.lowagie.text.pdf.collection.PdfTargetDictionary, java.lang.String, boolean, boolean)", "public static com.lowagie.text.pdf.PdfAction gotoEmbedded(java.lang.String, com.lowagie.text.pdf.collection.PdfTargetDictionary, java.lang.String, boolean, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.gotoEmbedded(java.lang.String, com.lowagie.text.pdf.collection.PdfTargetDictionary, com.lowagie.text.pdf.PdfObject, boolean)", "public static com.lowagie.text.pdf.PdfAction gotoEmbedded(java.lang.String, com.lowagie.text.pdf.collection.PdfTargetDictionary, com.lowagie.text.pdf.PdfObject, boolean)"], ["com.lowagie.text.pdf.PdfAction", "com.lowagie.text.pdf.PdfAction.setOCGstate(java.util.ArrayList, boolean)", "public static com.lowagie.text.pdf.PdfAction setOCGstate(java.util.ArrayList, boolean)"], ["boolean", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.isInternal()", "public boolean isInternal()"], ["int", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.getDestinationPage()", "public int getDestinationPage()"], ["void", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.setDestinationPage(int)", "public void setDestinationPage(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.transformDestination(float, float, float, float, float, float)", "public void transformDestination(float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.transformRect(float, float, float, float, float, float)", "public void transformRect(float, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation$PdfImportedLink.createAnnotation(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfAnnotation createAnnotation(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle)", "public com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfString, com.lowagie.text.pdf.PdfString)", "public com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfString, com.lowagie.text.pdf.PdfString)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfAction)", "public com.lowagie.text.pdf.PdfAnnotation(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfAction)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createScreen(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfFileSpecification, java.lang.String, boolean)", "public static com.lowagie.text.pdf.PdfAnnotation createScreen(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfFileSpecification, java.lang.String, boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfAnnotation.getIndirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference getIndirectReference()"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createText(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String, boolean, java.lang.String)", "public static com.lowagie.text.pdf.PdfAnnotation createText(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String, boolean, java.lang.String)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public static com.lowagie.text.pdf.PdfAnnotation createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, java.lang.String)", "public static com.lowagie.text.pdf.PdfAnnotation createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, java.lang.String)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, int, com.lowagie.text.pdf.PdfDestination)", "public static com.lowagie.text.pdf.PdfAnnotation createLink(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName, int, com.lowagie.text.pdf.PdfDestination)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createFreeText(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfContentByte)", "public static com.lowagie.text.pdf.PdfAnnotation createFreeText(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfContentByte)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createLine(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, float, float, float, float)", "public static com.lowagie.text.pdf.PdfAnnotation createLine(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, float, float, float, float)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createSquareCircle(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, boolean)", "public static com.lowagie.text.pdf.PdfAnnotation createSquareCircle(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createMarkup(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, int, float[])", "public static com.lowagie.text.pdf.PdfAnnotation createMarkup(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, int, float[])"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createStamp(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String)", "public static com.lowagie.text.pdf.PdfAnnotation createStamp(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createInk(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, float[][])", "public static com.lowagie.text.pdf.PdfAnnotation createInk(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, float[][])"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createFileAttachment(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, byte[], java.lang.String, java.lang.String)", "public static com.lowagie.text.pdf.PdfAnnotation createFileAttachment(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, byte[], java.lang.String, java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createFileAttachment(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfFileSpecification)", "public static com.lowagie.text.pdf.PdfAnnotation createFileAttachment(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, com.lowagie.text.pdf.PdfFileSpecification) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfAnnotation.createPopup(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, boolean)", "public static com.lowagie.text.pdf.PdfAnnotation createPopup(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setDefaultAppearanceString(com.lowagie.text.pdf.PdfContentByte)", "public void setDefaultAppearanceString(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setFlags(int)", "public void setFlags(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setBorder(com.lowagie.text.pdf.PdfBorderArray)", "public void setBorder(com.lowagie.text.pdf.PdfBorderArray)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setBorderStyle(com.lowagie.text.pdf.PdfBorderDictionary)", "public void setBorderStyle(com.lowagie.text.pdf.PdfBorderDictionary)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setHighlighting(com.lowagie.text.pdf.PdfName)", "public void setHighlighting(com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setAppearance(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfTemplate)", "public void setAppearance(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfTemplate)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setAppearance(com.lowagie.text.pdf.PdfName, java.lang.String, com.lowagie.text.pdf.PdfTemplate)", "public void setAppearance(com.lowagie.text.pdf.PdfName, java.lang.String, com.lowagie.text.pdf.PdfTemplate)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setAppearanceState(java.lang.String)", "public void setAppearanceState(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setColor(java.awt.Color)", "public void setColor(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setTitle(java.lang.String)", "public void setTitle(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setPopup(com.lowagie.text.pdf.PdfAnnotation)", "public void setPopup(com.lowagie.text.pdf.PdfAnnotation)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setAction(com.lowagie.text.pdf.PdfAction)", "public void setAction(com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setAdditionalActions(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public void setAdditionalActions(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)"], ["boolean", "com.lowagie.text.pdf.PdfAnnotation.isUsed()", "public boolean isUsed()"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setUsed()", "public void setUsed()"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfAnnotation.getTemplates()", "public java.util.HashMap getTemplates()"], ["boolean", "com.lowagie.text.pdf.PdfAnnotation.isForm()", "public boolean isForm()"], ["boolean", "com.lowagie.text.pdf.PdfAnnotation.isAnnotation()", "public boolean isAnnotation()"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setPage(int)", "public void setPage(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setPage()", "public void setPage()"], ["int", "com.lowagie.text.pdf.PdfAnnotation.getPlaceInPage()", "public int getPlaceInPage()"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setPlaceInPage(int)", "public void setPlaceInPage(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setRotate(int)", "public void setRotate(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKRotation(int)", "public void setMKRotation(int)"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfAnnotation.getMKColor(java.awt.Color)", "public static com.lowagie.text.pdf.PdfArray getMKColor(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKBorderColor(java.awt.Color)", "public void setMKBorderColor(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKBackgroundColor(java.awt.Color)", "public void setMKBackgroundColor(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKNormalCaption(java.lang.String)", "public void setMKNormalCaption(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKRolloverCaption(java.lang.String)", "public void setMKRolloverCaption(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKAlternateCaption(java.lang.String)", "public void setMKAlternateCaption(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKNormalIcon(com.lowagie.text.pdf.PdfTemplate)", "public void setMKNormalIcon(com.lowagie.text.pdf.PdfTemplate)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKRolloverIcon(com.lowagie.text.pdf.PdfTemplate)", "public void setMKRolloverIcon(com.lowagie.text.pdf.PdfTemplate)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKAlternateIcon(com.lowagie.text.pdf.PdfTemplate)", "public void setMKAlternateIcon(com.lowagie.text.pdf.PdfTemplate)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKIconFit(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName, float, float, boolean)", "public void setMKIconFit(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName, float, float, boolean)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setMKTextPosition(int)", "public void setMKTextPosition(int)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setLayer(com.lowagie.text.pdf.PdfOCG)", "public void setLayer(com.lowagie.text.pdf.PdfOCG)"], ["void", "com.lowagie.text.pdf.PdfAnnotation.setName(java.lang.String)", "public void setName(java.lang.String)"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.PdfAppearance.createAppearance(com.lowagie.text.pdf.PdfWriter, float, float)", "public static com.lowagie.text.pdf.PdfAppearance createAppearance(com.lowagie.text.pdf.PdfWriter, float, float)"], ["void", "com.lowagie.text.pdf.PdfAppearance.setFontAndSize(com.lowagie.text.pdf.BaseFont, float)", "public void setFontAndSize(com.lowagie.text.pdf.BaseFont, float)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfAppearance.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray()", "public com.lowagie.text.pdf.PdfArray()"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray(com.lowagie.text.pdf.PdfObject)", "public com.lowagie.text.pdf.PdfArray(com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray(float[])", "public com.lowagie.text.pdf.PdfArray(float[])"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray(int[])", "public com.lowagie.text.pdf.PdfArray(int[])"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray(java.util.ArrayList)", "public com.lowagie.text.pdf.PdfArray(java.util.ArrayList)"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray(com.lowagie.text.pdf.PdfArray)", "public com.lowagie.text.pdf.PdfArray(com.lowagie.text.pdf.PdfArray)"], ["void", "com.lowagie.text.pdf.PdfArray.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfArray.getArrayList()", "public java.util.ArrayList getArrayList()"], ["int", "com.lowagie.text.pdf.PdfArray.size()", "public int size()"], ["boolean", "com.lowagie.text.pdf.PdfArray.add(com.lowagie.text.pdf.PdfObject)", "public boolean add(com.lowagie.text.pdf.PdfObject)"], ["boolean", "com.lowagie.text.pdf.PdfArray.add(float[])", "public boolean add(float[])"], ["boolean", "com.lowagie.text.pdf.PdfArray.add(int[])", "public boolean add(int[])"], ["void", "com.lowagie.text.pdf.PdfArray.addFirst(com.lowagie.text.pdf.PdfObject)", "public void addFirst(com.lowagie.text.pdf.PdfObject)"], ["boolean", "com.lowagie.text.pdf.PdfArray.contains(com.lowagie.text.pdf.PdfObject)", "public boolean contains(com.lowagie.text.pdf.PdfObject)"], ["java.util.ListIterator", "com.lowagie.text.pdf.PdfArray.listIterator()", "public java.util.ListIterator listIterator()"], ["java.lang.String", "com.lowagie.text.pdf.PdfArray.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfArray.getPdfObject(int)", "public com.lowagie.text.pdf.PdfObject getPdfObject(int)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfArray.getDirectObject(int)", "public com.lowagie.text.pdf.PdfObject getDirectObject(int)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfArray.getAsDict(int)", "public com.lowagie.text.pdf.PdfDictionary getAsDict(int)"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfArray.getAsArray(int)", "public com.lowagie.text.pdf.PdfArray getAsArray(int)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.PdfArray.getAsStream(int)", "public com.lowagie.text.pdf.PdfStream getAsStream(int)"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfArray.getAsString(int)", "public com.lowagie.text.pdf.PdfString getAsString(int)"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfArray.getAsNumber(int)", "public com.lowagie.text.pdf.PdfNumber getAsNumber(int)"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfArray.getAsName(int)", "public com.lowagie.text.pdf.PdfName getAsName(int)"], ["com.lowagie.text.pdf.PdfBoolean", "com.lowagie.text.pdf.PdfArray.getAsBoolean(int)", "public com.lowagie.text.pdf.PdfBoolean getAsBoolean(int)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfArray.getAsIndirectObject(int)", "public com.lowagie.text.pdf.PdfIndirectReference getAsIndirectObject(int)"], ["com.lowagie.text.pdf.PdfBoolean", "com.lowagie.text.pdf.PdfBoolean(boolean)", "public com.lowagie.text.pdf.PdfBoolean(boolean)"], ["com.lowagie.text.pdf.PdfBoolean", "com.lowagie.text.pdf.PdfBoolean(java.lang.String)", "public com.lowagie.text.pdf.PdfBoolean(java.lang.String) throws com.lowagie.text.pdf.BadPdfFormatException"], ["boolean", "com.lowagie.text.pdf.PdfBoolean.booleanValue()", "public boolean booleanValue()"], ["java.lang.String", "com.lowagie.text.pdf.PdfBoolean.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfBorderArray", "com.lowagie.text.pdf.PdfBorderArray(float, float, float)", "public com.lowagie.text.pdf.PdfBorderArray(float, float, float)"], ["com.lowagie.text.pdf.PdfBorderArray", "com.lowagie.text.pdf.PdfBorderArray(float, float, float, com.lowagie.text.pdf.PdfDashPattern)", "public com.lowagie.text.pdf.PdfBorderArray(float, float, float, com.lowagie.text.pdf.PdfDashPattern)"], ["com.lowagie.text.pdf.PdfBorderDictionary", "com.lowagie.text.pdf.PdfBorderDictionary(float, int, com.lowagie.text.pdf.PdfDashPattern)", "public com.lowagie.text.pdf.PdfBorderDictionary(float, int, com.lowagie.text.pdf.PdfDashPattern)"], ["com.lowagie.text.pdf.PdfBorderDictionary", "com.lowagie.text.pdf.PdfBorderDictionary(float, int)", "public com.lowagie.text.pdf.PdfBorderDictionary(float, int)"], ["com.lowagie.text.pdf.PdfCell", "com.lowagie.text.pdf.PdfCell(com.lowagie.text.Cell, int, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfCell(com.lowagie.text.Cell, int, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfCell.setBottom(float)", "public void setBottom(float)"], ["float", "com.lowagie.text.pdf.PdfCell.getLeft()", "public float getLeft()"], ["float", "com.lowagie.text.pdf.PdfCell.getRight()", "public float getRight()"], ["float", "com.lowagie.text.pdf.PdfCell.getTop()", "public float getTop()"], ["float", "com.lowagie.text.pdf.PdfCell.getBottom()", "public float getBottom()"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfCell.getLines(float, float)", "public java.util.ArrayList getLines(float, float)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfCell.getImages(float, float)", "public java.util.ArrayList getImages(float, float)"], ["int", "com.lowagie.text.pdf.PdfCell.size()", "public int size()"], ["float", "com.lowagie.text.pdf.PdfCell.remainingHeight()", "public float remainingHeight()"], ["float", "com.lowagie.text.pdf.PdfCell.leading()", "public float leading()"], ["int", "com.lowagie.text.pdf.PdfCell.rownumber()", "public int rownumber()"], ["int", "com.lowagie.text.pdf.PdfCell.rowspan()", "public int rowspan()"], ["float", "com.lowagie.text.pdf.PdfCell.cellspacing()", "public float cellspacing()"], ["float", "com.lowagie.text.pdf.PdfCell.cellpadding()", "public float cellpadding()"], ["int", "com.lowagie.text.pdf.PdfCell.getGroupNumber()", "public int getGroupNumber()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfCell.rectangle(float, float)", "public com.lowagie.text.Rectangle rectangle(float, float)"], ["void", "com.lowagie.text.pdf.PdfCell.setUseAscender(boolean)", "public void setUseAscender(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfCell.isUseAscender()", "public boolean isUseAscender()"], ["void", "com.lowagie.text.pdf.PdfCell.setUseDescender(boolean)", "public void setUseDescender(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfCell.isUseDescender()", "public boolean isUseDescender()"], ["void", "com.lowagie.text.pdf.PdfCell.setUseBorderPadding(boolean)", "public void setUseBorderPadding(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfCell.isUseBorderPadding()", "public boolean isUseBorderPadding()"], ["int", "com.lowagie.text.pdf.PdfChunk.getUnicodeEquivalent(int)", "public int getUnicodeEquivalent(int)"], ["boolean", "com.lowagie.text.pdf.PdfChunk.isNewlineSplit()", "public boolean isNewlineSplit()"], ["float", "com.lowagie.text.pdf.PdfChunk.getWidthCorrected(float, float)", "public float getWidthCorrected(float, float)"], ["float", "com.lowagie.text.pdf.PdfChunk.getTextRise()", "public float getTextRise()"], ["float", "com.lowagie.text.pdf.PdfChunk.trimLastSpace()", "public float trimLastSpace()"], ["float", "com.lowagie.text.pdf.PdfChunk.trimFirstSpace()", "public float trimFirstSpace()"], ["java.lang.String", "com.lowagie.text.pdf.PdfChunk.toString()", "public java.lang.String toString()"], ["boolean", "com.lowagie.text.pdf.PdfChunk.changeLeading()", "public boolean changeLeading()"], ["boolean", "com.lowagie.text.pdf.PdfChunk.noPrint(int)", "public static boolean noPrint(int)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfContentByte(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfContentByte(com.lowagie.text.pdf.PdfWriter)"], ["java.lang.String", "com.lowagie.text.pdf.PdfContentByte.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.ByteBuffer", "com.lowagie.text.pdf.PdfContentByte.getInternalBuffer()", "public com.lowagie.text.pdf.ByteBuffer getInternalBuffer()"], ["byte[]", "com.lowagie.text.pdf.PdfContentByte.toPdf(com.lowagie.text.pdf.PdfWriter)", "public byte[] toPdf(com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.PdfContentByte.add(com.lowagie.text.pdf.PdfContentByte)", "public void add(com.lowagie.text.pdf.PdfContentByte)"], ["float", "com.lowagie.text.pdf.PdfContentByte.getXTLM()", "public float getXTLM()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getYTLM()", "public float getYTLM()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getLeading()", "public float getLeading()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getCharacterSpacing()", "public float getCharacterSpacing()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getWordSpacing()", "public float getWordSpacing()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getHorizontalScaling()", "public float getHorizontalScaling()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setFlatness(float)", "public void setFlatness(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineCap(int)", "public void setLineCap(int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineDash(float)", "public void setLineDash(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineDash(float, float)", "public void setLineDash(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineDash(float, float, float)", "public void setLineDash(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineDash(float[], float)", "public final void setLineDash(float[], float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineJoin(int)", "public void setLineJoin(int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLineWidth(float)", "public void setLineWidth(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setMiterLimit(float)", "public void setMiterLimit(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.clip()", "public void clip()"], ["void", "com.lowagie.text.pdf.PdfContentByte.eoClip()", "public void eoClip()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setGrayFill(float)", "public void setGrayFill(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetGrayFill()", "public void resetGrayFill()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setGrayStroke(float)", "public void setGrayStroke(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetGrayStroke()", "public void resetGrayStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setRGBColorFillF(float, float, float)", "public void setRGBColorFillF(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetRGBColorFill()", "public void resetRGBColorFill()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setRGBColorStrokeF(float, float, float)", "public void setRGBColorStrokeF(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetRGBColorStroke()", "public void resetRGBColorStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setCMYKColorFillF(float, float, float, float)", "public void setCMYKColorFillF(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetCMYKColorFill()", "public void resetCMYKColorFill()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setCMYKColorStrokeF(float, float, float, float)", "public void setCMYKColorStrokeF(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.resetCMYKColorStroke()", "public void resetCMYKColorStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.moveTo(float, float)", "public void moveTo(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.lineTo(float, float)", "public void lineTo(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.curveTo(float, float, float, float, float, float)", "public void curveTo(float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.curveTo(float, float, float, float)", "public void curveTo(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.curveFromTo(float, float, float, float)", "public void curveFromTo(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.circle(float, float, float)", "public void circle(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.rectangle(float, float, float, float)", "public void rectangle(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.variableRectangle(com.lowagie.text.Rectangle)", "public void variableRectangle(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.pdf.PdfContentByte.rectangle(com.lowagie.text.Rectangle)", "public void rectangle(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.pdf.PdfContentByte.closePath()", "public void closePath()"], ["void", "com.lowagie.text.pdf.PdfContentByte.newPath()", "public void newPath()"], ["void", "com.lowagie.text.pdf.PdfContentByte.stroke()", "public void stroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.closePathStroke()", "public void closePathStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.fill()", "public void fill()"], ["void", "com.lowagie.text.pdf.PdfContentByte.eoFill()", "public void eoFill()"], ["void", "com.lowagie.text.pdf.PdfContentByte.fillStroke()", "public void fillStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.closePathFillStroke()", "public void closePathFillStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.eoFillStroke()", "public void eoFillStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.closePathEoFillStroke()", "public void closePathEoFillStroke()"], ["void", "com.lowagie.text.pdf.PdfContentByte.addImage(com.lowagie.text.Image)", "public void addImage(com.lowagie.text.Image) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfContentByte.addImage(com.lowagie.text.Image, boolean)", "public void addImage(com.lowagie.text.Image, boolean) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfContentByte.addImage(com.lowagie.text.Image, float, float, float, float, float, float)", "public void addImage(com.lowagie.text.Image, float, float, float, float, float, float) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfContentByte.addImage(com.lowagie.text.Image, float, float, float, float, float, float, boolean)", "public void addImage(com.lowagie.text.Image, float, float, float, float, float, float, boolean) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfContentByte.reset()", "public void reset()"], ["void", "com.lowagie.text.pdf.PdfContentByte.beginText()", "public void beginText()"], ["void", "com.lowagie.text.pdf.PdfContentByte.endText()", "public void endText()"], ["void", "com.lowagie.text.pdf.PdfContentByte.saveState()", "public void saveState()"], ["void", "com.lowagie.text.pdf.PdfContentByte.restoreState()", "public void restoreState()"], ["void", "com.lowagie.text.pdf.PdfContentByte.setCharacterSpacing(float)", "public void setCharacterSpacing(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setWordSpacing(float)", "public void setWordSpacing(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setHorizontalScaling(float)", "public void setHorizontalScaling(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLeading(float)", "public void setLeading(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setFontAndSize(com.lowagie.text.pdf.BaseFont, float)", "public void setFontAndSize(com.lowagie.text.pdf.BaseFont, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setTextRenderingMode(int)", "public void setTextRenderingMode(int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setTextRise(float)", "public void setTextRise(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.showText(java.lang.String)", "public void showText(java.lang.String)"], ["com.lowagie.text.pdf.PdfTextArray", "com.lowagie.text.pdf.PdfContentByte.getKernArray(java.lang.String, com.lowagie.text.pdf.BaseFont)", "public static com.lowagie.text.pdf.PdfTextArray getKernArray(java.lang.String, com.lowagie.text.pdf.BaseFont)"], ["void", "com.lowagie.text.pdf.PdfContentByte.showTextKerned(java.lang.String)", "public void showTextKerned(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfContentByte.newlineShowText(java.lang.String)", "public void newlineShowText(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfContentByte.newlineShowText(float, float, java.lang.String)", "public void newlineShowText(float, float, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setTextMatrix(float, float, float, float, float, float)", "public void setTextMatrix(float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setTextMatrix(float, float)", "public void setTextMatrix(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.moveText(float, float)", "public void moveText(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.moveTextWithLeading(float, float)", "public void moveTextWithLeading(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.newlineText()", "public void newlineText()"], ["void", "com.lowagie.text.pdf.PdfContentByte.addOutline(com.lowagie.text.pdf.PdfOutline, java.lang.String)", "public void addOutline(com.lowagie.text.pdf.PdfOutline, java.lang.String)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfContentByte.getRootOutline()", "public com.lowagie.text.pdf.PdfOutline getRootOutline()"], ["float", "com.lowagie.text.pdf.PdfContentByte.getEffectiveStringWidth(java.lang.String, boolean)", "public float getEffectiveStringWidth(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfContentByte.showTextAligned(int, java.lang.String, float, float, float)", "public void showTextAligned(int, java.lang.String, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.showTextAlignedKerned(int, java.lang.String, float, float, float)", "public void showTextAlignedKerned(int, java.lang.String, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.concatCTM(float, float, float, float, float, float)", "public void concatCTM(float, float, float, float, float, float)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfContentByte.bezierArc(float, float, float, float, float, float)", "public static java.util.ArrayList bezierArc(float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.arc(float, float, float, float, float, float)", "public void arc(float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.ellipse(float, float, float, float)", "public void ellipse(float, float, float, float)"], ["com.lowagie.text.pdf.PdfPatternPainter", "com.lowagie.text.pdf.PdfContentByte.createPattern(float, float, float, float)", "public com.lowagie.text.pdf.PdfPatternPainter createPattern(float, float, float, float)"], ["com.lowagie.text.pdf.PdfPatternPainter", "com.lowagie.text.pdf.PdfContentByte.createPattern(float, float)", "public com.lowagie.text.pdf.PdfPatternPainter createPattern(float, float)"], ["com.lowagie.text.pdf.PdfPatternPainter", "com.lowagie.text.pdf.PdfContentByte.createPattern(float, float, float, float, java.awt.Color)", "public com.lowagie.text.pdf.PdfPatternPainter createPattern(float, float, float, float, java.awt.Color)"], ["com.lowagie.text.pdf.PdfPatternPainter", "com.lowagie.text.pdf.PdfContentByte.createPattern(float, float, java.awt.Color)", "public com.lowagie.text.pdf.PdfPatternPainter createPattern(float, float, java.awt.Color)"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PdfContentByte.createTemplate(float, float)", "public com.lowagie.text.pdf.PdfTemplate createTemplate(float, float)"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.PdfContentByte.createAppearance(float, float)", "public com.lowagie.text.pdf.PdfAppearance createAppearance(float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.addPSXObject(com.lowagie.text.pdf.PdfPSXObject)", "public void addPSXObject(com.lowagie.text.pdf.PdfPSXObject)"], ["void", "com.lowagie.text.pdf.PdfContentByte.addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float, float, float, float, float)", "public void addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float)", "public void addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setCMYKColorFill(int, int, int, int)", "public void setCMYKColorFill(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setCMYKColorStroke(int, int, int, int)", "public void setCMYKColorStroke(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setRGBColorFill(int, int, int)", "public void setRGBColorFill(int, int, int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setRGBColorStroke(int, int, int)", "public void setRGBColorStroke(int, int, int)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setColorStroke(java.awt.Color)", "public void setColorStroke(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setColorFill(java.awt.Color)", "public void setColorFill(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternFill(com.lowagie.text.pdf.PdfPatternPainter)", "public void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color)", "public void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)", "public void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color)", "public void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)", "public void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter)", "public void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter)"], ["void", "com.lowagie.text.pdf.PdfContentByte.paintShading(com.lowagie.text.pdf.PdfShading)", "public void paintShading(com.lowagie.text.pdf.PdfShading)"], ["void", "com.lowagie.text.pdf.PdfContentByte.paintShading(com.lowagie.text.pdf.PdfShadingPattern)", "public void paintShading(com.lowagie.text.pdf.PdfShadingPattern)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setShadingFill(com.lowagie.text.pdf.PdfShadingPattern)", "public void setShadingFill(com.lowagie.text.pdf.PdfShadingPattern)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setShadingStroke(com.lowagie.text.pdf.PdfShadingPattern)", "public void setShadingStroke(com.lowagie.text.pdf.PdfShadingPattern)"], ["void", "com.lowagie.text.pdf.PdfContentByte.showText(com.lowagie.text.pdf.PdfTextArray)", "public void showText(com.lowagie.text.pdf.PdfTextArray)"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfContentByte.getPdfWriter()", "public com.lowagie.text.pdf.PdfWriter getPdfWriter()"], ["com.lowagie.text.pdf.PdfDocument", "com.lowagie.text.pdf.PdfContentByte.getPdfDocument()", "public com.lowagie.text.pdf.PdfDocument getPdfDocument()"], ["void", "com.lowagie.text.pdf.PdfContentByte.localGoto(java.lang.String, float, float, float, float)", "public void localGoto(java.lang.String, float, float, float, float)"], ["boolean", "com.lowagie.text.pdf.PdfContentByte.localDestination(java.lang.String, com.lowagie.text.pdf.PdfDestination)", "public boolean localDestination(java.lang.String, com.lowagie.text.pdf.PdfDestination)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfContentByte.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["void", "com.lowagie.text.pdf.PdfContentByte.remoteGoto(java.lang.String, java.lang.String, float, float, float, float)", "public void remoteGoto(java.lang.String, java.lang.String, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.remoteGoto(java.lang.String, int, float, float, float, float)", "public void remoteGoto(java.lang.String, int, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.roundRectangle(float, float, float, float, float)", "public void roundRectangle(float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setAction(com.lowagie.text.pdf.PdfAction, float, float, float, float)", "public void setAction(com.lowagie.text.pdf.PdfAction, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLiteral(java.lang.String)", "public void setLiteral(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLiteral(char)", "public void setLiteral(char)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setLiteral(float)", "public void setLiteral(float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.drawRadioField(float, float, float, float, boolean)", "public void drawRadioField(float, float, float, float, boolean)"], ["void", "com.lowagie.text.pdf.PdfContentByte.drawTextField(float, float, float, float)", "public void drawTextField(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfContentByte.drawButton(float, float, float, float, java.lang.String, com.lowagie.text.pdf.BaseFont, float)", "public void drawButton(float, float, float, float, java.lang.String, com.lowagie.text.pdf.BaseFont, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphicsShapes(float, float)", "public java.awt.Graphics2D createGraphicsShapes(float, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphicsShapes(float, float, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphicsShapes(float, float, java.awt.print.PrinterJob)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphics(float, float)", "public java.awt.Graphics2D createGraphics(float, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphics(float, float, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphics(float, float, java.awt.print.PrinterJob)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphics(float, float, boolean, float)", "public java.awt.Graphics2D createGraphics(float, float, boolean, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphics(float, float, boolean, float, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphics(float, float, boolean, float, java.awt.print.PrinterJob)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphicsShapes(float, float, boolean, float)", "public java.awt.Graphics2D createGraphicsShapes(float, float, boolean, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphicsShapes(float, float, boolean, float, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphicsShapes(float, float, boolean, float, java.awt.print.PrinterJob)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphics(float, float, com.lowagie.text.pdf.FontMapper)", "public java.awt.Graphics2D createGraphics(float, float, com.lowagie.text.pdf.FontMapper)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphics(float, float, com.lowagie.text.pdf.FontMapper, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphics(float, float, com.lowagie.text.pdf.FontMapper, java.awt.print.PrinterJob)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createGraphics(float, float, com.lowagie.text.pdf.FontMapper, boolean, float)", "public java.awt.Graphics2D createGraphics(float, float, com.lowagie.text.pdf.FontMapper, boolean, float)"], ["java.awt.Graphics2D", "com.lowagie.text.pdf.PdfContentByte.createPrinterGraphics(float, float, com.lowagie.text.pdf.FontMapper, boolean, float, java.awt.print.PrinterJob)", "public java.awt.Graphics2D createPrinterGraphics(float, float, com.lowagie.text.pdf.FontMapper, boolean, float, java.awt.print.PrinterJob)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setGState(com.lowagie.text.pdf.PdfGState)", "public void setGState(com.lowagie.text.pdf.PdfGState)"], ["void", "com.lowagie.text.pdf.PdfContentByte.beginLayer(com.lowagie.text.pdf.PdfOCG)", "public void beginLayer(com.lowagie.text.pdf.PdfOCG)"], ["void", "com.lowagie.text.pdf.PdfContentByte.endLayer()", "public void endLayer()"], ["void", "com.lowagie.text.pdf.PdfContentByte.transform(java.awt.geom.AffineTransform)", "public void transform(java.awt.geom.AffineTransform)"], ["void", "com.lowagie.text.pdf.PdfContentByte.setDefaultColorspace(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void setDefaultColorspace(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfContentByte.beginMarkedContentSequence(com.lowagie.text.pdf.PdfStructureElement)", "public void beginMarkedContentSequence(com.lowagie.text.pdf.PdfStructureElement)"], ["void", "com.lowagie.text.pdf.PdfContentByte.endMarkedContentSequence()", "public void endMarkedContentSequence()"], ["void", "com.lowagie.text.pdf.PdfContentByte.beginMarkedContentSequence(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfDictionary, boolean)", "public void beginMarkedContentSequence(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfDictionary, boolean)"], ["void", "com.lowagie.text.pdf.PdfContentByte.beginMarkedContentSequence(com.lowagie.text.pdf.PdfName)", "public void beginMarkedContentSequence(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfContentParser", "com.lowagie.text.pdf.PdfContentParser(com.lowagie.text.pdf.PRTokeniser)", "public com.lowagie.text.pdf.PdfContentParser(com.lowagie.text.pdf.PRTokeniser)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfContentParser.parse(java.util.ArrayList)", "public java.util.ArrayList parse(java.util.ArrayList) throws java.io.IOException"], ["com.lowagie.text.pdf.PRTokeniser", "com.lowagie.text.pdf.PdfContentParser.getTokeniser()", "public com.lowagie.text.pdf.PRTokeniser getTokeniser()"], ["void", "com.lowagie.text.pdf.PdfContentParser.setTokeniser(com.lowagie.text.pdf.PRTokeniser)", "public void setTokeniser(com.lowagie.text.pdf.PRTokeniser)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfContentParser.readDictionary()", "public com.lowagie.text.pdf.PdfDictionary readDictionary() throws java.io.IOException"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfContentParser.readArray()", "public com.lowagie.text.pdf.PdfArray readArray() throws java.io.IOException"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfContentParser.readPRObject()", "public com.lowagie.text.pdf.PdfObject readPRObject() throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.PdfContentParser.nextValidToken()", "public boolean nextValidToken() throws java.io.IOException"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfCopy$PageStamp.getUnderContent()", "public com.lowagie.text.pdf.PdfContentByte getUnderContent()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfCopy$PageStamp.getOverContent()", "public com.lowagie.text.pdf.PdfContentByte getOverContent()"], ["void", "com.lowagie.text.pdf.PdfCopy$PageStamp.alterContents()", "public void alterContents() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfCopy$PageStamp.addAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["int", "com.lowagie.text.pdf.PdfCopy$RefKey.hashCode()", "public int hashCode()"], ["boolean", "com.lowagie.text.pdf.PdfCopy$RefKey.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["java.lang.String", "com.lowagie.text.pdf.PdfCopy$RefKey.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfCopy$StampContent.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["com.lowagie.text.pdf.PdfCopy", "com.lowagie.text.pdf.PdfCopy(com.lowagie.text.Document, java.io.OutputStream)", "public com.lowagie.text.pdf.PdfCopy(com.lowagie.text.Document, java.io.OutputStream) throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.PdfCopy.isRotateContents()", "public boolean isRotateContents()"], ["void", "com.lowagie.text.pdf.PdfCopy.setRotateContents(boolean)", "public void setRotateContents(boolean)"], ["com.lowagie.text.pdf.PdfImportedPage", "com.lowagie.text.pdf.PdfCopy.getImportedPage(com.lowagie.text.pdf.PdfReader, int)", "public com.lowagie.text.pdf.PdfImportedPage getImportedPage(com.lowagie.text.pdf.PdfReader, int)"], ["void", "com.lowagie.text.pdf.PdfCopy.addPage(com.lowagie.text.pdf.PdfImportedPage)", "public void addPage(com.lowagie.text.pdf.PdfImportedPage) throws java.io.IOException, com.lowagie.text.pdf.BadPdfFormatException"], ["void", "com.lowagie.text.pdf.PdfCopy.copyAcroForm(com.lowagie.text.pdf.PdfReader)", "public void copyAcroForm(com.lowagie.text.pdf.PdfReader) throws java.io.IOException, com.lowagie.text.pdf.BadPdfFormatException"], ["void", "com.lowagie.text.pdf.PdfCopy.close()", "public void close()"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfCopy.add(com.lowagie.text.pdf.PdfOutline)", "public com.lowagie.text.pdf.PdfIndirectReference add(com.lowagie.text.pdf.PdfOutline)"], ["void", "com.lowagie.text.pdf.PdfCopy.addAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["void", "com.lowagie.text.pdf.PdfCopy.freeReader(com.lowagie.text.pdf.PdfReader)", "public void freeReader(com.lowagie.text.pdf.PdfReader) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfCopy$PageStamp", "com.lowagie.text.pdf.PdfCopy.createPageStamp(com.lowagie.text.pdf.PdfImportedPage)", "public com.lowagie.text.pdf.PdfCopy$PageStamp createPageStamp(com.lowagie.text.pdf.PdfImportedPage)"], ["com.lowagie.text.pdf.PdfCopyFields", "com.lowagie.text.pdf.PdfCopyFields(java.io.OutputStream)", "public com.lowagie.text.pdf.PdfCopyFields(java.io.OutputStream) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfCopyFields", "com.lowagie.text.pdf.PdfCopyFields(java.io.OutputStream, char)", "public com.lowagie.text.pdf.PdfCopyFields(java.io.OutputStream, char) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.addDocument(com.lowagie.text.pdf.PdfReader)", "public void addDocument(com.lowagie.text.pdf.PdfReader) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.addDocument(com.lowagie.text.pdf.PdfReader, java.util.List)", "public void addDocument(com.lowagie.text.pdf.PdfReader, java.util.List) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.addDocument(com.lowagie.text.pdf.PdfReader, java.lang.String)", "public void addDocument(com.lowagie.text.pdf.PdfReader, java.lang.String) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setEncryption(byte[], byte[], int, boolean)", "public void setEncryption(byte[], byte[], int, boolean) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setEncryption(boolean, java.lang.String, java.lang.String, int)", "public void setEncryption(boolean, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.close()", "public void close()"], ["void", "com.lowagie.text.pdf.PdfCopyFields.open()", "public void open()"], ["void", "com.lowagie.text.pdf.PdfCopyFields.addJavaScript(java.lang.String)", "public void addJavaScript(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setOutlines(java.util.List)", "public void setOutlines(java.util.List)"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfCopyFields.getWriter()", "public com.lowagie.text.pdf.PdfWriter getWriter()"], ["boolean", "com.lowagie.text.pdf.PdfCopyFields.isFullCompression()", "public boolean isFullCompression()"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setFullCompression()", "public void setFullCompression()"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setEncryption(byte[], byte[], int, int)", "public void setEncryption(byte[], byte[], int, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFields.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.PdfCopyFields.setEncryption(java.security.cert.Certificate[], int[], int)", "public void setEncryption(java.security.cert.Certificate[], int[], int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfCopyFieldsImp.close()", "public void close()"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfCopyFieldsImp.getPageReference(int)", "public com.lowagie.text.pdf.PdfIndirectReference getPageReference(int)"], ["void", "com.lowagie.text.pdf.PdfCopyFieldsImp.openDoc()", "public void openDoc()"], ["com.lowagie.text.pdf.PdfDashPattern", "com.lowagie.text.pdf.PdfDashPattern()", "public com.lowagie.text.pdf.PdfDashPattern()"], ["com.lowagie.text.pdf.PdfDashPattern", "com.lowagie.text.pdf.PdfDashPattern(float)", "public com.lowagie.text.pdf.PdfDashPattern(float)"], ["com.lowagie.text.pdf.PdfDashPattern", "com.lowagie.text.pdf.PdfDashPattern(float, float)", "public com.lowagie.text.pdf.PdfDashPattern(float, float)"], ["com.lowagie.text.pdf.PdfDashPattern", "com.lowagie.text.pdf.PdfDashPattern(float, float, float)", "public com.lowagie.text.pdf.PdfDashPattern(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfDashPattern.add(float)", "public void add(float)"], ["void", "com.lowagie.text.pdf.PdfDashPattern.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfDate", "com.lowagie.text.pdf.PdfDate(java.util.Calendar)", "public com.lowagie.text.pdf.PdfDate(java.util.Calendar)"], ["com.lowagie.text.pdf.PdfDate", "com.lowagie.text.pdf.PdfDate()", "public com.lowagie.text.pdf.PdfDate()"], ["java.lang.String", "com.lowagie.text.pdf.PdfDate.getW3CDate()", "public java.lang.String getW3CDate()"], ["java.lang.String", "com.lowagie.text.pdf.PdfDate.getW3CDate(java.lang.String)", "public static java.lang.String getW3CDate(java.lang.String)"], ["java.util.Calendar", "com.lowagie.text.pdf.PdfDate.decode(java.lang.String)", "public static java.util.Calendar decode(java.lang.String)"], ["com.lowagie.text.pdf.PdfDestination", "com.lowagie.text.pdf.PdfDestination(int)", "public com.lowagie.text.pdf.PdfDestination(int)"], ["com.lowagie.text.pdf.PdfDestination", "com.lowagie.text.pdf.PdfDestination(int, float)", "public com.lowagie.text.pdf.PdfDestination(int, float)"], ["com.lowagie.text.pdf.PdfDestination", "com.lowagie.text.pdf.PdfDestination(int, float, float, float)", "public com.lowagie.text.pdf.PdfDestination(int, float, float, float)"], ["com.lowagie.text.pdf.PdfDestination", "com.lowagie.text.pdf.PdfDestination(int, float, float, float, float)", "public com.lowagie.text.pdf.PdfDestination(int, float, float, float, float)"], ["boolean", "com.lowagie.text.pdf.PdfDestination.hasPage()", "public boolean hasPage()"], ["boolean", "com.lowagie.text.pdf.PdfDestination.addPage(com.lowagie.text.pdf.PdfIndirectReference)", "public boolean addPage(com.lowagie.text.pdf.PdfIndirectReference)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfDictionary()", "public com.lowagie.text.pdf.PdfDictionary()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfDictionary(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfDictionary(com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfDictionary.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfDictionary.put(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void put(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfDictionary.putEx(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void putEx(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfDictionary.remove(com.lowagie.text.pdf.PdfName)", "public void remove(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfDictionary.get(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfObject get(com.lowagie.text.pdf.PdfName)"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.isFont()", "public boolean isFont()"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.isPage()", "public boolean isPage()"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.isPages()", "public boolean isPages()"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.isCatalog()", "public boolean isCatalog()"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.isOutlineTree()", "public boolean isOutlineTree()"], ["void", "com.lowagie.text.pdf.PdfDictionary.merge(com.lowagie.text.pdf.PdfDictionary)", "public void merge(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.pdf.PdfDictionary.mergeDifferent(com.lowagie.text.pdf.PdfDictionary)", "public void mergeDifferent(com.lowagie.text.pdf.PdfDictionary)"], ["java.util.Set", "com.lowagie.text.pdf.PdfDictionary.getKeys()", "public java.util.Set getKeys()"], ["void", "com.lowagie.text.pdf.PdfDictionary.putAll(com.lowagie.text.pdf.PdfDictionary)", "public void putAll(com.lowagie.text.pdf.PdfDictionary)"], ["int", "com.lowagie.text.pdf.PdfDictionary.size()", "public int size()"], ["boolean", "com.lowagie.text.pdf.PdfDictionary.contains(com.lowagie.text.pdf.PdfName)", "public boolean contains(com.lowagie.text.pdf.PdfName)"], ["java.lang.String", "com.lowagie.text.pdf.PdfDictionary.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfDictionary.getDirectObject(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfObject getDirectObject(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfDictionary.getAsDict(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfDictionary getAsDict(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfDictionary.getAsArray(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfArray getAsArray(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.PdfDictionary.getAsStream(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfStream getAsStream(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfDictionary.getAsString(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfString getAsString(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfDictionary.getAsNumber(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfNumber getAsNumber(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfDictionary.getAsName(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfName getAsName(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfBoolean", "com.lowagie.text.pdf.PdfDictionary.getAsBoolean(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfBoolean getAsBoolean(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfDictionary.getAsIndirectObject(com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfIndirectReference getAsIndirectObject(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfDocument$Indentation", "com.lowagie.text.pdf.PdfDocument$Indentation()", "public com.lowagie.text.pdf.PdfDocument$Indentation()"], ["int", "com.lowagie.text.pdf.PdfDocument$RenderingContext.consumeRowspan(com.lowagie.text.pdf.PdfCell)", "public int consumeRowspan(com.lowagie.text.pdf.PdfCell)"], ["int", "com.lowagie.text.pdf.PdfDocument$RenderingContext.currentRowspan(com.lowagie.text.pdf.PdfCell)", "public int currentRowspan(com.lowagie.text.pdf.PdfCell)"], ["int", "com.lowagie.text.pdf.PdfDocument$RenderingContext.cellRendered(com.lowagie.text.pdf.PdfCell, int)", "public int cellRendered(com.lowagie.text.pdf.PdfCell, int)"], ["int", "com.lowagie.text.pdf.PdfDocument$RenderingContext.numCellRendered(com.lowagie.text.pdf.PdfCell)", "public int numCellRendered(com.lowagie.text.pdf.PdfCell)"], ["boolean", "com.lowagie.text.pdf.PdfDocument$RenderingContext.isCellRenderedOnPage(com.lowagie.text.pdf.PdfCell, int)", "public boolean isCellRenderedOnPage(com.lowagie.text.pdf.PdfCell, int)"], ["com.lowagie.text.pdf.PdfDocument", "com.lowagie.text.pdf.PdfDocument()", "public com.lowagie.text.pdf.PdfDocument()"], ["void", "com.lowagie.text.pdf.PdfDocument.addWriter(com.lowagie.text.pdf.PdfWriter)", "public void addWriter(com.lowagie.text.pdf.PdfWriter) throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.PdfDocument.getLeading()", "public float getLeading()"], ["boolean", "com.lowagie.text.pdf.PdfDocument.add(com.lowagie.text.Element)", "public boolean add(com.lowagie.text.Element) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfDocument.open()", "public void open()"], ["void", "com.lowagie.text.pdf.PdfDocument.close()", "public void close()"], ["void", "com.lowagie.text.pdf.PdfDocument.setXmpMetadata(byte[])", "public void setXmpMetadata(byte[])"], ["boolean", "com.lowagie.text.pdf.PdfDocument.newPage()", "public boolean newPage()"], ["boolean", "com.lowagie.text.pdf.PdfDocument.setPageSize(com.lowagie.text.Rectangle)", "public boolean setPageSize(com.lowagie.text.Rectangle)"], ["boolean", "com.lowagie.text.pdf.PdfDocument.setMargins(float, float, float, float)", "public boolean setMargins(float, float, float, float)"], ["boolean", "com.lowagie.text.pdf.PdfDocument.setMarginMirroring(boolean)", "public boolean setMarginMirroring(boolean)"], ["void", "com.lowagie.text.pdf.PdfDocument.setPageCount(int)", "public void setPageCount(int)"], ["void", "com.lowagie.text.pdf.PdfDocument.resetPageCount()", "public void resetPageCount()"], ["void", "com.lowagie.text.pdf.PdfDocument.setHeader(com.lowagie.text.HeaderFooter)", "public void setHeader(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.pdf.PdfDocument.resetHeader()", "public void resetHeader()"], ["void", "com.lowagie.text.pdf.PdfDocument.setFooter(com.lowagie.text.HeaderFooter)", "public void setFooter(com.lowagie.text.HeaderFooter)"], ["void", "com.lowagie.text.pdf.PdfDocument.resetFooter()", "public void resetFooter()"], ["float", "com.lowagie.text.pdf.PdfDocument.getVerticalPosition(boolean)", "public float getVerticalPosition(boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfDocument.getRootOutline()", "public com.lowagie.text.pdf.PdfOutline getRootOutline()"], ["void", "com.lowagie.text.pdf.PdfDocument.setCollection(com.lowagie.text.pdf.collection.PdfCollection)", "public void setCollection(com.lowagie.text.pdf.collection.PdfCollection)"], ["void", "com.lowagie.text.pdf.PdfDocument.clearTextWrap()", "public void clearTextWrap()"], ["com.lowagie.text.pdf.PdfEFStream", "com.lowagie.text.pdf.PdfEFStream(java.io.InputStream, com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfEFStream(java.io.InputStream, com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfEFStream", "com.lowagie.text.pdf.PdfEFStream(byte[])", "public com.lowagie.text.pdf.PdfEFStream(byte[])"], ["void", "com.lowagie.text.pdf.PdfEFStream.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$Cp437Conversion.charToByte(java.lang.String, java.lang.String)", "public byte[] charToByte(java.lang.String, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$Cp437Conversion.charToByte(char, java.lang.String)", "public byte[] charToByte(char, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings$Cp437Conversion.byteToChar(byte[], java.lang.String)", "public java.lang.String byteToChar(byte[], java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$SymbolConversion.charToByte(java.lang.String, java.lang.String)", "public byte[] charToByte(java.lang.String, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$SymbolConversion.charToByte(char, java.lang.String)", "public byte[] charToByte(char, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings$SymbolConversion.byteToChar(byte[], java.lang.String)", "public java.lang.String byteToChar(byte[], java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$SymbolTTConversion.charToByte(char, java.lang.String)", "public byte[] charToByte(char, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$SymbolTTConversion.charToByte(java.lang.String, java.lang.String)", "public byte[] charToByte(java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings$SymbolTTConversion.byteToChar(byte[], java.lang.String)", "public java.lang.String byteToChar(byte[], java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$WingdingsConversion.charToByte(char, java.lang.String)", "public byte[] charToByte(char, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings$WingdingsConversion.charToByte(java.lang.String, java.lang.String)", "public byte[] charToByte(java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings$WingdingsConversion.byteToChar(byte[], java.lang.String)", "public java.lang.String byteToChar(byte[], java.lang.String)"], ["com.lowagie.text.pdf.PdfEncodings", "com.lowagie.text.pdf.PdfEncodings()", "public com.lowagie.text.pdf.PdfEncodings()"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings.convertToBytes(java.lang.String, java.lang.String)", "public static final byte[] convertToBytes(java.lang.String, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfEncodings.convertToBytes(char, java.lang.String)", "public static final byte[] convertToBytes(char, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings.convertToString(byte[], java.lang.String)", "public static final java.lang.String convertToString(byte[], java.lang.String)"], ["boolean", "com.lowagie.text.pdf.PdfEncodings.isPdfDocEncoding(java.lang.String)", "public static boolean isPdfDocEncoding(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfEncodings.clearCmap(java.lang.String)", "public static void clearCmap(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfEncodings.loadCmap(java.lang.String, byte[][])", "public static void loadCmap(java.lang.String, byte[][])"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings.convertCmap(java.lang.String, byte[])", "public static java.lang.String convertCmap(java.lang.String, byte[])"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncodings.convertCmap(java.lang.String, byte[], int, int)", "public static java.lang.String convertCmap(java.lang.String, byte[], int, int)"], ["void", "com.lowagie.text.pdf.PdfEncodings.addExtraEncoding(java.lang.String, com.lowagie.text.pdf.ExtraEncoding)", "public static void addExtraEncoding(java.lang.String, com.lowagie.text.pdf.ExtraEncoding)"], ["com.lowagie.text.pdf.PdfEncryption", "com.lowagie.text.pdf.PdfEncryption()", "public com.lowagie.text.pdf.PdfEncryption()"], ["com.lowagie.text.pdf.PdfEncryption", "com.lowagie.text.pdf.PdfEncryption(com.lowagie.text.pdf.PdfEncryption)", "public com.lowagie.text.pdf.PdfEncryption(com.lowagie.text.pdf.PdfEncryption)"], ["void", "com.lowagie.text.pdf.PdfEncryption.setCryptoMode(int, int)", "public void setCryptoMode(int, int)"], ["int", "com.lowagie.text.pdf.PdfEncryption.getCryptoMode()", "public int getCryptoMode()"], ["boolean", "com.lowagie.text.pdf.PdfEncryption.isMetadataEncrypted()", "public boolean isMetadataEncrypted()"], ["boolean", "com.lowagie.text.pdf.PdfEncryption.isEmbeddedFilesOnly()", "public boolean isEmbeddedFilesOnly()"], ["void", "com.lowagie.text.pdf.PdfEncryption.setupAllKeys(byte[], byte[], int)", "public void setupAllKeys(byte[], byte[], int)"], ["byte[]", "com.lowagie.text.pdf.PdfEncryption.createDocumentId()", "public static byte[] createDocumentId()"], ["void", "com.lowagie.text.pdf.PdfEncryption.setupByUserPassword(byte[], byte[], byte[], int)", "public void setupByUserPassword(byte[], byte[], byte[], int)"], ["void", "com.lowagie.text.pdf.PdfEncryption.setupByOwnerPassword(byte[], byte[], byte[], byte[], int)", "public void setupByOwnerPassword(byte[], byte[], byte[], byte[], int)"], ["void", "com.lowagie.text.pdf.PdfEncryption.setupByEncryptionKey(byte[], int)", "public void setupByEncryptionKey(byte[], int)"], ["void", "com.lowagie.text.pdf.PdfEncryption.setHashKey(int, int)", "public void setHashKey(int, int)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfEncryption.createInfoId(byte[])", "public static com.lowagie.text.pdf.PdfObject createInfoId(byte[])"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfEncryption.getEncryptionDictionary()", "public com.lowagie.text.pdf.PdfDictionary getEncryptionDictionary()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfEncryption.getFileID()", "public com.lowagie.text.pdf.PdfObject getFileID()"], ["com.lowagie.text.pdf.OutputStreamEncryption", "com.lowagie.text.pdf.PdfEncryption.getEncryptionStream(java.io.OutputStream)", "public com.lowagie.text.pdf.OutputStreamEncryption getEncryptionStream(java.io.OutputStream)"], ["int", "com.lowagie.text.pdf.PdfEncryption.calculateStreamSize(int)", "public int calculateStreamSize(int)"], ["byte[]", "com.lowagie.text.pdf.PdfEncryption.encryptByteArray(byte[])", "public byte[] encryptByteArray(byte[])"], ["com.lowagie.text.pdf.StandardDecryption", "com.lowagie.text.pdf.PdfEncryption.getDecryptor()", "public com.lowagie.text.pdf.StandardDecryption getDecryptor()"], ["byte[]", "com.lowagie.text.pdf.PdfEncryption.decryptByteArray(byte[])", "public byte[] decryptByteArray(byte[])"], ["void", "com.lowagie.text.pdf.PdfEncryption.addRecipient(java.security.cert.Certificate, int)", "public void addRecipient(java.security.cert.Certificate, int)"], ["byte[]", "com.lowagie.text.pdf.PdfEncryption.computeUserPassword(byte[])", "public byte[] computeUserPassword(byte[])"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, byte[], byte[], int, boolean)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, byte[], byte[], int, boolean) throws com.lowagie.text.DocumentException, java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, byte[], byte[], int, boolean, java.util.HashMap)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, byte[], byte[], int, boolean, java.util.HashMap) throws com.lowagie.text.DocumentException, java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, boolean, java.lang.String, java.lang.String, int)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, boolean, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException, java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, boolean, java.lang.String, java.lang.String, int, java.util.HashMap)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, boolean, java.lang.String, java.lang.String, int, java.util.HashMap) throws com.lowagie.text.DocumentException, java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, int, java.lang.String, java.lang.String, int, java.util.HashMap)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, int, java.lang.String, java.lang.String, int, java.util.HashMap) throws com.lowagie.text.DocumentException, java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfEncryptor.encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, int, java.lang.String, java.lang.String, int)", "public static void encrypt(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, int, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.PdfEncryptor.getPermissionsVerbose(int)", "public static java.lang.String getPermissionsVerbose(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isPrintingAllowed(int)", "public static boolean isPrintingAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isModifyContentsAllowed(int)", "public static boolean isModifyContentsAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isCopyAllowed(int)", "public static boolean isCopyAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isModifyAnnotationsAllowed(int)", "public static boolean isModifyAnnotationsAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isFillInAllowed(int)", "public static boolean isFillInAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isScreenReadersAllowed(int)", "public static boolean isScreenReadersAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isAssemblyAllowed(int)", "public static boolean isAssemblyAllowed(int)"], ["boolean", "com.lowagie.text.pdf.PdfEncryptor.isDegradedPrintingAllowed(int)", "public static boolean isDegradedPrintingAllowed(int)"], ["com.lowagie.text.pdf.PdfException", "com.lowagie.text.pdf.PdfException(java.lang.Exception)", "public com.lowagie.text.pdf.PdfException(java.lang.Exception)"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification()", "public com.lowagie.text.pdf.PdfFileSpecification()"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.url(com.lowagie.text.pdf.PdfWriter, java.lang.String)", "public static com.lowagie.text.pdf.PdfFileSpecification url(com.lowagie.text.pdf.PdfWriter, java.lang.String)"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[])", "public static com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], int)", "public static com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], int) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], boolean)", "public static com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], boolean, java.lang.String, com.lowagie.text.pdf.PdfDictionary)", "public static com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], boolean, java.lang.String, com.lowagie.text.pdf.PdfDictionary) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], java.lang.String, com.lowagie.text.pdf.PdfDictionary, int)", "public static com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter, java.lang.String, java.lang.String, byte[], java.lang.String, com.lowagie.text.pdf.PdfDictionary, int) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfFileSpecification", "com.lowagie.text.pdf.PdfFileSpecification.fileExtern(com.lowagie.text.pdf.PdfWriter, java.lang.String)", "public static com.lowagie.text.pdf.PdfFileSpecification fileExtern(com.lowagie.text.pdf.PdfWriter, java.lang.String)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfFileSpecification.getReference()", "public com.lowagie.text.pdf.PdfIndirectReference getReference() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfFileSpecification.setMultiByteFileName(byte[])", "public void setMultiByteFileName(byte[])"], ["void", "com.lowagie.text.pdf.PdfFileSpecification.setUnicodeFileName(java.lang.String, boolean)", "public void setUnicodeFileName(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfFileSpecification.setVolatile(boolean)", "public void setVolatile(boolean)"], ["void", "com.lowagie.text.pdf.PdfFileSpecification.addDescription(java.lang.String, boolean)", "public void addDescription(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfFileSpecification.addCollectionItem(com.lowagie.text.pdf.collection.PdfCollectionItem)", "public void addCollectionItem(com.lowagie.text.pdf.collection.PdfCollectionItem)"], ["int", "com.lowagie.text.pdf.PdfFont.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfAction)", "public com.lowagie.text.pdf.PdfFormField(com.lowagie.text.pdf.PdfWriter, float, float, float, float, com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfFormField.setWidget(com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName)", "public void setWidget(com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createEmpty(com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfFormField createEmpty(com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.PdfFormField.setButton(int)", "public void setButton(int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createPushButton(com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfFormField createPushButton(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createCheckBox(com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfFormField createCheckBox(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createRadioButton(com.lowagie.text.pdf.PdfWriter, boolean)", "public static com.lowagie.text.pdf.PdfFormField createRadioButton(com.lowagie.text.pdf.PdfWriter, boolean)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createTextField(com.lowagie.text.pdf.PdfWriter, boolean, boolean, int)", "public static com.lowagie.text.pdf.PdfFormField createTextField(com.lowagie.text.pdf.PdfWriter, boolean, boolean, int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createList(com.lowagie.text.pdf.PdfWriter, java.lang.String[], int)", "public static com.lowagie.text.pdf.PdfFormField createList(com.lowagie.text.pdf.PdfWriter, java.lang.String[], int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createList(com.lowagie.text.pdf.PdfWriter, java.lang.String[][], int)", "public static com.lowagie.text.pdf.PdfFormField createList(com.lowagie.text.pdf.PdfWriter, java.lang.String[][], int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createCombo(com.lowagie.text.pdf.PdfWriter, boolean, java.lang.String[], int)", "public static com.lowagie.text.pdf.PdfFormField createCombo(com.lowagie.text.pdf.PdfWriter, boolean, java.lang.String[], int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createCombo(com.lowagie.text.pdf.PdfWriter, boolean, java.lang.String[][], int)", "public static com.lowagie.text.pdf.PdfFormField createCombo(com.lowagie.text.pdf.PdfWriter, boolean, java.lang.String[][], int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.createSignature(com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfFormField createSignature(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfFormField.getParent()", "public com.lowagie.text.pdf.PdfFormField getParent()"], ["void", "com.lowagie.text.pdf.PdfFormField.addKid(com.lowagie.text.pdf.PdfFormField)", "public void addKid(com.lowagie.text.pdf.PdfFormField)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfFormField.getKids()", "public java.util.ArrayList getKids()"], ["int", "com.lowagie.text.pdf.PdfFormField.setFieldFlags(int)", "public int setFieldFlags(int)"], ["void", "com.lowagie.text.pdf.PdfFormField.setValueAsString(java.lang.String)", "public void setValueAsString(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setValueAsName(java.lang.String)", "public void setValueAsName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setValue(com.lowagie.text.pdf.PdfSignature)", "public void setValue(com.lowagie.text.pdf.PdfSignature)"], ["void", "com.lowagie.text.pdf.PdfFormField.setDefaultValueAsString(java.lang.String)", "public void setDefaultValueAsString(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setDefaultValueAsName(java.lang.String)", "public void setDefaultValueAsName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setFieldName(java.lang.String)", "public void setFieldName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setUserName(java.lang.String)", "public void setUserName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setMappingName(java.lang.String)", "public void setMappingName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfFormField.setQuadding(int)", "public void setQuadding(int)"], ["void", "com.lowagie.text.pdf.PdfFormField.setUsed()", "public void setUsed()"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.PdfFormField.shallowDuplicate(com.lowagie.text.pdf.PdfAnnotation)", "public static com.lowagie.text.pdf.PdfAnnotation shallowDuplicate(com.lowagie.text.pdf.PdfAnnotation)"], ["com.lowagie.text.pdf.PdfFunction", "com.lowagie.text.pdf.PdfFunction.type0(com.lowagie.text.pdf.PdfWriter, float[], float[], int[], int, int, float[], float[], byte[])", "public static com.lowagie.text.pdf.PdfFunction type0(com.lowagie.text.pdf.PdfWriter, float[], float[], int[], int, int, float[], float[], byte[])"], ["com.lowagie.text.pdf.PdfFunction", "com.lowagie.text.pdf.PdfFunction.type2(com.lowagie.text.pdf.PdfWriter, float[], float[], float[], float[], float)", "public static com.lowagie.text.pdf.PdfFunction type2(com.lowagie.text.pdf.PdfWriter, float[], float[], float[], float[], float)"], ["com.lowagie.text.pdf.PdfFunction", "com.lowagie.text.pdf.PdfFunction.type3(com.lowagie.text.pdf.PdfWriter, float[], float[], com.lowagie.text.pdf.PdfFunction[], float[], float[])", "public static com.lowagie.text.pdf.PdfFunction type3(com.lowagie.text.pdf.PdfWriter, float[], float[], com.lowagie.text.pdf.PdfFunction[], float[], float[])"], ["com.lowagie.text.pdf.PdfFunction", "com.lowagie.text.pdf.PdfFunction.type4(com.lowagie.text.pdf.PdfWriter, float[], float[], java.lang.String)", "public static com.lowagie.text.pdf.PdfFunction type4(com.lowagie.text.pdf.PdfWriter, float[], float[], java.lang.String)"], ["com.lowagie.text.pdf.PdfGState", "com.lowagie.text.pdf.PdfGState()", "public com.lowagie.text.pdf.PdfGState()"], ["void", "com.lowagie.text.pdf.PdfGState.setOverPrintStroking(boolean)", "public void setOverPrintStroking(boolean)"], ["void", "com.lowagie.text.pdf.PdfGState.setOverPrintNonStroking(boolean)", "public void setOverPrintNonStroking(boolean)"], ["void", "com.lowagie.text.pdf.PdfGState.setOverPrintMode(int)", "public void setOverPrintMode(int)"], ["void", "com.lowagie.text.pdf.PdfGState.setStrokeOpacity(float)", "public void setStrokeOpacity(float)"], ["void", "com.lowagie.text.pdf.PdfGState.setFillOpacity(float)", "public void setFillOpacity(float)"], ["void", "com.lowagie.text.pdf.PdfGState.setAlphaIsShape(boolean)", "public void setAlphaIsShape(boolean)"], ["void", "com.lowagie.text.pdf.PdfGState.setTextKnockout(boolean)", "public void setTextKnockout(boolean)"], ["void", "com.lowagie.text.pdf.PdfGState.setBlendMode(com.lowagie.text.pdf.PdfName)", "public void setBlendMode(com.lowagie.text.pdf.PdfName)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey.isCompatibleValue(java.lang.Object)", "public boolean isCompatibleValue(java.lang.Object)"], ["java.lang.String", "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey.toString()", "public java.lang.String toString()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.draw(java.awt.Shape)", "public void draw(java.awt.Shape)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int)", "public void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform)", "public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform)", "public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawString(java.lang.String, int, int)", "public void drawString(java.lang.String, int, int)"], ["double", "com.lowagie.text.pdf.PdfGraphics2D.asPoints(double, int)", "public static double asPoints(double, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawString(java.lang.String, float, float)", "public void drawString(java.lang.String, float, float)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawString(java.text.AttributedCharacterIterator, int, int)", "public void drawString(java.text.AttributedCharacterIterator, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawString(java.text.AttributedCharacterIterator, float, float)", "public void drawString(java.text.AttributedCharacterIterator, float, float)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawGlyphVector(java.awt.font.GlyphVector, float, float)", "public void drawGlyphVector(java.awt.font.GlyphVector, float, float)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fill(java.awt.Shape)", "public void fill(java.awt.Shape)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.hit(java.awt.Rectangle, java.awt.Shape, boolean)", "public boolean hit(java.awt.Rectangle, java.awt.Shape, boolean)"], ["java.awt.GraphicsConfiguration", "com.lowagie.text.pdf.PdfGraphics2D.getDeviceConfiguration()", "public java.awt.GraphicsConfiguration getDeviceConfiguration()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setComposite(java.awt.Composite)", "public void setComposite(java.awt.Composite)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setPaint(java.awt.Paint)", "public void setPaint(java.awt.Paint)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setStroke(java.awt.Stroke)", "public void setStroke(java.awt.Stroke)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object)", "public void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object)"], ["java.lang.Object", "com.lowagie.text.pdf.PdfGraphics2D.getRenderingHint(java.awt.RenderingHints$Key)", "public java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setRenderingHints(java.util.Map)", "public void setRenderingHints(java.util.Map)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.addRenderingHints(java.util.Map)", "public void addRenderingHints(java.util.Map)"], ["java.awt.RenderingHints", "com.lowagie.text.pdf.PdfGraphics2D.getRenderingHints()", "public java.awt.RenderingHints getRenderingHints()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.translate(int, int)", "public void translate(int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.translate(double, double)", "public void translate(double, double)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.rotate(double)", "public void rotate(double)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.rotate(double, double, double)", "public void rotate(double, double, double)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.scale(double, double)", "public void scale(double, double)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.shear(double, double)", "public void shear(double, double)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.transform(java.awt.geom.AffineTransform)", "public void transform(java.awt.geom.AffineTransform)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setTransform(java.awt.geom.AffineTransform)", "public void setTransform(java.awt.geom.AffineTransform)"], ["java.awt.geom.AffineTransform", "com.lowagie.text.pdf.PdfGraphics2D.getTransform()", "public java.awt.geom.AffineTransform getTransform()"], ["java.awt.Paint", "com.lowagie.text.pdf.PdfGraphics2D.getPaint()", "public java.awt.Paint getPaint()"], ["java.awt.Composite", "com.lowagie.text.pdf.PdfGraphics2D.getComposite()", "public java.awt.Composite getComposite()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setBackground(java.awt.Color)", "public void setBackground(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.pdf.PdfGraphics2D.getBackground()", "public java.awt.Color getBackground()"], ["java.awt.Stroke", "com.lowagie.text.pdf.PdfGraphics2D.getStroke()", "public java.awt.Stroke getStroke()"], ["java.awt.font.FontRenderContext", "com.lowagie.text.pdf.PdfGraphics2D.getFontRenderContext()", "public java.awt.font.FontRenderContext getFontRenderContext()"], ["java.awt.Graphics", "com.lowagie.text.pdf.PdfGraphics2D.create()", "public java.awt.Graphics create()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfGraphics2D.getContent()", "public com.lowagie.text.pdf.PdfContentByte getContent()"], ["java.awt.Color", "com.lowagie.text.pdf.PdfGraphics2D.getColor()", "public java.awt.Color getColor()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setColor(java.awt.Color)", "public void setColor(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setPaintMode()", "public void setPaintMode()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setXORMode(java.awt.Color)", "public void setXORMode(java.awt.Color)"], ["java.awt.Font", "com.lowagie.text.pdf.PdfGraphics2D.getFont()", "public java.awt.Font getFont()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setFont(java.awt.Font)", "public void setFont(java.awt.Font)"], ["java.awt.FontMetrics", "com.lowagie.text.pdf.PdfGraphics2D.getFontMetrics(java.awt.Font)", "public java.awt.FontMetrics getFontMetrics(java.awt.Font)"], ["java.awt.Rectangle", "com.lowagie.text.pdf.PdfGraphics2D.getClipBounds()", "public java.awt.Rectangle getClipBounds()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.clipRect(int, int, int, int)", "public void clipRect(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setClip(int, int, int, int)", "public void setClip(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.clip(java.awt.Shape)", "public void clip(java.awt.Shape)"], ["java.awt.Shape", "com.lowagie.text.pdf.PdfGraphics2D.getClip()", "public java.awt.Shape getClip()"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.setClip(java.awt.Shape)", "public void setClip(java.awt.Shape)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.copyArea(int, int, int, int, int, int)", "public void copyArea(int, int, int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawLine(int, int, int, int)", "public void drawLine(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawRect(int, int, int, int)", "public void drawRect(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fillRect(int, int, int, int)", "public void fillRect(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.clearRect(int, int, int, int)", "public void clearRect(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawRoundRect(int, int, int, int, int, int)", "public void drawRoundRect(int, int, int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fillRoundRect(int, int, int, int, int, int)", "public void fillRoundRect(int, int, int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawOval(int, int, int, int)", "public void drawOval(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fillOval(int, int, int, int)", "public void fillOval(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawArc(int, int, int, int, int, int)", "public void drawArc(int, int, int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fillArc(int, int, int, int, int, int)", "public void fillArc(int, int, int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawPolyline(int[], int[], int)", "public void drawPolyline(int[], int[], int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.drawPolygon(int[], int[], int)", "public void drawPolygon(int[], int[], int)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.fillPolygon(int[], int[], int)", "public void fillPolygon(int[], int[], int)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver)"], ["boolean", "com.lowagie.text.pdf.PdfGraphics2D.drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)", "public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)"], ["void", "com.lowagie.text.pdf.PdfGraphics2D.dispose()", "public void dispose()"], ["com.lowagie.text.pdf.PdfICCBased", "com.lowagie.text.pdf.PdfICCBased(java.awt.color.ICC_Profile)", "public com.lowagie.text.pdf.PdfICCBased(java.awt.color.ICC_Profile)"], ["com.lowagie.text.pdf.PdfICCBased", "com.lowagie.text.pdf.PdfICCBased(java.awt.color.ICC_Profile, int)", "public com.lowagie.text.pdf.PdfICCBased(java.awt.color.ICC_Profile, int)"], ["com.lowagie.text.pdf.PdfImage", "com.lowagie.text.pdf.PdfImage(com.lowagie.text.Image, java.lang.String, com.lowagie.text.pdf.PdfIndirectReference)", "public com.lowagie.text.pdf.PdfImage(com.lowagie.text.Image, java.lang.String, com.lowagie.text.pdf.PdfIndirectReference) throws com.lowagie.text.pdf.BadPdfFormatException"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfImage.name()", "public com.lowagie.text.pdf.PdfName name()"], ["com.lowagie.text.pdf.PdfImportedPage", "com.lowagie.text.pdf.PdfImportedPage.getFromReader()", "public com.lowagie.text.pdf.PdfImportedPage getFromReader()"], ["int", "com.lowagie.text.pdf.PdfImportedPage.getPageNumber()", "public int getPageNumber()"], ["void", "com.lowagie.text.pdf.PdfImportedPage.addImage(com.lowagie.text.Image, float, float, float, float, float, float)", "public void addImage(com.lowagie.text.Image, float, float, float, float, float, float) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfImportedPage.addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float, float, float, float, float)", "public void addTemplate(com.lowagie.text.pdf.PdfTemplate, float, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfImportedPage.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["void", "com.lowagie.text.pdf.PdfImportedPage.setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfImportedPage.setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfImportedPage.setFontAndSize(com.lowagie.text.pdf.BaseFont, float)", "public void setFontAndSize(com.lowagie.text.pdf.BaseFont, float)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfIndirectObject.getIndirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference getIndirectReference()"], ["int", "com.lowagie.text.pdf.PdfIndirectReference.getNumber()", "public int getNumber()"], ["int", "com.lowagie.text.pdf.PdfIndirectReference.getGeneration()", "public int getGeneration()"], ["java.lang.String", "com.lowagie.text.pdf.PdfIndirectReference.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfLayer", "com.lowagie.text.pdf.PdfLayer.createTitle(java.lang.String, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfLayer createTitle(java.lang.String, com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfLayer", "com.lowagie.text.pdf.PdfLayer(java.lang.String, com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfLayer(java.lang.String, com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.PdfLayer.addChild(com.lowagie.text.pdf.PdfLayer)", "public void addChild(com.lowagie.text.pdf.PdfLayer)"], ["com.lowagie.text.pdf.PdfLayer", "com.lowagie.text.pdf.PdfLayer.getParent()", "public com.lowagie.text.pdf.PdfLayer getParent()"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfLayer.getChildren()", "public java.util.ArrayList getChildren()"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfLayer.getRef()", "public com.lowagie.text.pdf.PdfIndirectReference getRef()"], ["void", "com.lowagie.text.pdf.PdfLayer.setName(java.lang.String)", "public void setName(java.lang.String)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfLayer.getPdfObject()", "public com.lowagie.text.pdf.PdfObject getPdfObject()"], ["boolean", "com.lowagie.text.pdf.PdfLayer.isOn()", "public boolean isOn()"], ["void", "com.lowagie.text.pdf.PdfLayer.setOn(boolean)", "public void setOn(boolean)"], ["void", "com.lowagie.text.pdf.PdfLayer.setCreatorInfo(java.lang.String, java.lang.String)", "public void setCreatorInfo(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfLayer.setLanguage(java.lang.String, boolean)", "public void setLanguage(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfLayer.setExport(boolean)", "public void setExport(boolean)"], ["void", "com.lowagie.text.pdf.PdfLayer.setZoom(float, float)", "public void setZoom(float, float)"], ["void", "com.lowagie.text.pdf.PdfLayer.setPrint(java.lang.String, boolean)", "public void setPrint(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfLayer.setView(boolean)", "public void setView(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfLayer.isOnPanel()", "public boolean isOnPanel()"], ["void", "com.lowagie.text.pdf.PdfLayer.setOnPanel(boolean)", "public void setOnPanel(boolean)"], ["com.lowagie.text.pdf.PdfLayerMembership", "com.lowagie.text.pdf.PdfLayerMembership(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfLayerMembership(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfLayerMembership.getRef()", "public com.lowagie.text.pdf.PdfIndirectReference getRef()"], ["void", "com.lowagie.text.pdf.PdfLayerMembership.addMember(com.lowagie.text.pdf.PdfLayer)", "public void addMember(com.lowagie.text.pdf.PdfLayer)"], ["java.util.Collection", "com.lowagie.text.pdf.PdfLayerMembership.getLayers()", "public java.util.Collection getLayers()"], ["void", "com.lowagie.text.pdf.PdfLayerMembership.setVisibilityPolicy(com.lowagie.text.pdf.PdfName)", "public void setVisibilityPolicy(com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfLayerMembership.getPdfObject()", "public com.lowagie.text.pdf.PdfObject getPdfObject()"], ["int", "com.lowagie.text.pdf.PdfLine.size()", "public int size()"], ["java.util.Iterator", "com.lowagie.text.pdf.PdfLine.iterator()", "public java.util.Iterator iterator()"], ["boolean", "com.lowagie.text.pdf.PdfLine.hasToBeJustified()", "public boolean hasToBeJustified()"], ["void", "com.lowagie.text.pdf.PdfLine.resetAlignment()", "public void resetAlignment()"], ["void", "com.lowagie.text.pdf.PdfLine.setListItem(com.lowagie.text.ListItem)", "public void setListItem(com.lowagie.text.ListItem)"], ["com.lowagie.text.Chunk", "com.lowagie.text.pdf.PdfLine.listSymbol()", "public com.lowagie.text.Chunk listSymbol()"], ["float", "com.lowagie.text.pdf.PdfLine.listIndent()", "public float listIndent()"], ["java.lang.String", "com.lowagie.text.pdf.PdfLine.toString()", "public java.lang.String toString()"], ["int", "com.lowagie.text.pdf.PdfLine.GetLineLengthUtf32()", "public int GetLineLengthUtf32()"], ["boolean", "com.lowagie.text.pdf.PdfLine.isNewlineSplit()", "public boolean isNewlineSplit()"], ["int", "com.lowagie.text.pdf.PdfLine.getLastStrokeChunk()", "public int getLastStrokeChunk()"], ["com.lowagie.text.pdf.PdfChunk", "com.lowagie.text.pdf.PdfLine.getChunk(int)", "public com.lowagie.text.pdf.PdfChunk getChunk(int)"], ["float", "com.lowagie.text.pdf.PdfLine.getOriginalWidth()", "public float getOriginalWidth()"], ["float", "com.lowagie.text.pdf.PdfLine.getWidthCorrected(float, float)", "public float getWidthCorrected(float, float)"], ["float", "com.lowagie.text.pdf.PdfLine.getAscender()", "public float getAscender()"], ["float", "com.lowagie.text.pdf.PdfLine.getDescender()", "public float getDescender()"], ["com.lowagie.text.pdf.PdfLister", "com.lowagie.text.pdf.PdfLister(java.io.PrintStream)", "public com.lowagie.text.pdf.PdfLister(java.io.PrintStream)"], ["void", "com.lowagie.text.pdf.PdfLister.listAnyObject(com.lowagie.text.pdf.PdfObject)", "public void listAnyObject(com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfLister.listDict(com.lowagie.text.pdf.PdfDictionary)", "public void listDict(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.pdf.PdfLister.listArray(com.lowagie.text.pdf.PdfArray)", "public void listArray(com.lowagie.text.pdf.PdfArray)"], ["void", "com.lowagie.text.pdf.PdfLister.listStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfReaderInstance)", "public void listStream(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.PdfReaderInstance)"], ["void", "com.lowagie.text.pdf.PdfLister.listPage(com.lowagie.text.pdf.PdfImportedPage)", "public void listPage(com.lowagie.text.pdf.PdfImportedPage)"], ["com.lowagie.text.pdf.PdfLiteral", "com.lowagie.text.pdf.PdfLiteral(java.lang.String)", "public com.lowagie.text.pdf.PdfLiteral(java.lang.String)"], ["com.lowagie.text.pdf.PdfLiteral", "com.lowagie.text.pdf.PdfLiteral(byte[])", "public com.lowagie.text.pdf.PdfLiteral(byte[])"], ["com.lowagie.text.pdf.PdfLiteral", "com.lowagie.text.pdf.PdfLiteral(int)", "public com.lowagie.text.pdf.PdfLiteral(int)"], ["com.lowagie.text.pdf.PdfLiteral", "com.lowagie.text.pdf.PdfLiteral(int, java.lang.String)", "public com.lowagie.text.pdf.PdfLiteral(int, java.lang.String)"], ["com.lowagie.text.pdf.PdfLiteral", "com.lowagie.text.pdf.PdfLiteral(int, byte[])", "public com.lowagie.text.pdf.PdfLiteral(int, byte[])"], ["void", "com.lowagie.text.pdf.PdfLiteral.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfLiteral.getPosition()", "public int getPosition()"], ["int", "com.lowagie.text.pdf.PdfLiteral.getPosLength()", "public int getPosLength()"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfName(java.lang.String)", "public com.lowagie.text.pdf.PdfName(java.lang.String)"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfName(java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfName(java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfName(byte[])", "public com.lowagie.text.pdf.PdfName(byte[])"], ["int", "com.lowagie.text.pdf.PdfName.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["boolean", "com.lowagie.text.pdf.PdfName.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.PdfName.hashCode()", "public int hashCode()"], ["java.lang.String", "com.lowagie.text.pdf.PdfName.decodeName(java.lang.String)", "public static java.lang.String decodeName(java.lang.String)"], ["com.lowagie.text.pdf.PdfNameTree", "com.lowagie.text.pdf.PdfNameTree()", "public com.lowagie.text.pdf.PdfNameTree()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfNameTree.writeTree(java.util.HashMap, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfDictionary writeTree(java.util.HashMap, com.lowagie.text.pdf.PdfWriter) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfNameTree.readTree(com.lowagie.text.pdf.PdfDictionary)", "public static java.util.HashMap readTree(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.PdfNull", "com.lowagie.text.pdf.PdfNull()", "public com.lowagie.text.pdf.PdfNull()"], ["java.lang.String", "com.lowagie.text.pdf.PdfNull.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfNumber(java.lang.String)", "public com.lowagie.text.pdf.PdfNumber(java.lang.String)"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfNumber(int)", "public com.lowagie.text.pdf.PdfNumber(int)"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfNumber(double)", "public com.lowagie.text.pdf.PdfNumber(double)"], ["com.lowagie.text.pdf.PdfNumber", "com.lowagie.text.pdf.PdfNumber(float)", "public com.lowagie.text.pdf.PdfNumber(float)"], ["int", "com.lowagie.text.pdf.PdfNumber.intValue()", "public int intValue()"], ["double", "com.lowagie.text.pdf.PdfNumber.doubleValue()", "public double doubleValue()"], ["float", "com.lowagie.text.pdf.PdfNumber.floatValue()", "public float floatValue()"], ["void", "com.lowagie.text.pdf.PdfNumber.increment()", "public void increment()"], ["com.lowagie.text.pdf.PdfNumberTree", "com.lowagie.text.pdf.PdfNumberTree()", "public com.lowagie.text.pdf.PdfNumberTree()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfNumberTree.writeTree(java.util.HashMap, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfDictionary writeTree(java.util.HashMap, com.lowagie.text.pdf.PdfWriter) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfNumberTree.readTree(com.lowagie.text.pdf.PdfDictionary)", "public static java.util.HashMap readTree(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.PdfOCProperties", "com.lowagie.text.pdf.PdfOCProperties()", "public com.lowagie.text.pdf.PdfOCProperties()"], ["void", "com.lowagie.text.pdf.PdfObject.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfObject.getBytes()", "public byte[] getBytes()"], ["boolean", "com.lowagie.text.pdf.PdfObject.canBeInObjStm()", "public boolean canBeInObjStm()"], ["java.lang.String", "com.lowagie.text.pdf.PdfObject.toString()", "public java.lang.String toString()"], ["int", "com.lowagie.text.pdf.PdfObject.length()", "public int length()"], ["int", "com.lowagie.text.pdf.PdfObject.type()", "public int type()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isNull()", "public boolean isNull()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isBoolean()", "public boolean isBoolean()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isNumber()", "public boolean isNumber()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isString()", "public boolean isString()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isName()", "public boolean isName()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isArray()", "public boolean isArray()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isDictionary()", "public boolean isDictionary()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isStream()", "public boolean isStream()"], ["boolean", "com.lowagie.text.pdf.PdfObject.isIndirect()", "public boolean isIndirect()"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PdfObject.getIndRef()", "public com.lowagie.text.pdf.PRIndirectReference getIndRef()"], ["void", "com.lowagie.text.pdf.PdfObject.setIndRef(com.lowagie.text.pdf.PRIndirectReference)", "public void setIndRef(com.lowagie.text.pdf.PRIndirectReference)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, java.lang.String)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, java.lang.String)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, java.lang.String)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, java.lang.String)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, java.lang.String, boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.pdf.PdfString)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.pdf.PdfString)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.pdf.PdfString, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.pdf.PdfString, boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfString)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfString)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfString, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.pdf.PdfString, boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.Paragraph)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.Paragraph)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.Paragraph, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfAction, com.lowagie.text.Paragraph, boolean)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.Paragraph)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.Paragraph)"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.Paragraph, boolean)", "public com.lowagie.text.pdf.PdfOutline(com.lowagie.text.pdf.PdfOutline, com.lowagie.text.pdf.PdfDestination, com.lowagie.text.Paragraph, boolean)"], ["void", "com.lowagie.text.pdf.PdfOutline.setIndirectReference(com.lowagie.text.pdf.PdfIndirectReference)", "public void setIndirectReference(com.lowagie.text.pdf.PdfIndirectReference)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfOutline.indirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference indirectReference()"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfOutline.parent()", "public com.lowagie.text.pdf.PdfOutline parent()"], ["boolean", "com.lowagie.text.pdf.PdfOutline.setDestinationPage(com.lowagie.text.pdf.PdfIndirectReference)", "public boolean setDestinationPage(com.lowagie.text.pdf.PdfIndirectReference)"], ["com.lowagie.text.pdf.PdfDestination", "com.lowagie.text.pdf.PdfOutline.getPdfDestination()", "public com.lowagie.text.pdf.PdfDestination getPdfDestination()"], ["int", "com.lowagie.text.pdf.PdfOutline.level()", "public int level()"], ["void", "com.lowagie.text.pdf.PdfOutline.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfOutline.addKid(com.lowagie.text.pdf.PdfOutline)", "public void addKid(com.lowagie.text.pdf.PdfOutline)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfOutline.getKids()", "public java.util.ArrayList getKids()"], ["void", "com.lowagie.text.pdf.PdfOutline.setKids(java.util.ArrayList)", "public void setKids(java.util.ArrayList)"], ["java.lang.String", "com.lowagie.text.pdf.PdfOutline.getTag()", "public java.lang.String getTag()"], ["void", "com.lowagie.text.pdf.PdfOutline.setTag(java.lang.String)", "public void setTag(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfOutline.getTitle()", "public java.lang.String getTitle()"], ["void", "com.lowagie.text.pdf.PdfOutline.setTitle(java.lang.String)", "public void setTitle(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.PdfOutline.isOpen()", "public boolean isOpen()"], ["void", "com.lowagie.text.pdf.PdfOutline.setOpen(boolean)", "public void setOpen(boolean)"], ["java.awt.Color", "com.lowagie.text.pdf.PdfOutline.getColor()", "public java.awt.Color getColor()"], ["void", "com.lowagie.text.pdf.PdfOutline.setColor(java.awt.Color)", "public void setColor(java.awt.Color)"], ["int", "com.lowagie.text.pdf.PdfOutline.getStyle()", "public int getStyle()"], ["void", "com.lowagie.text.pdf.PdfOutline.setStyle(int)", "public void setStyle(int)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell()", "public com.lowagie.text.pdf.PdfPCell()"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Phrase)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Phrase)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Image)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Image)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Image, boolean)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.Image, boolean)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPTable)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPTable)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPTable, com.lowagie.text.pdf.PdfPCell)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPTable, com.lowagie.text.pdf.PdfPCell)"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPCell)", "public com.lowagie.text.pdf.PdfPCell(com.lowagie.text.pdf.PdfPCell)"], ["void", "com.lowagie.text.pdf.PdfPCell.addElement(com.lowagie.text.Element)", "public void addElement(com.lowagie.text.Element)"], ["com.lowagie.text.Phrase", "com.lowagie.text.pdf.PdfPCell.getPhrase()", "public com.lowagie.text.Phrase getPhrase()"], ["void", "com.lowagie.text.pdf.PdfPCell.setPhrase(com.lowagie.text.Phrase)", "public void setPhrase(com.lowagie.text.Phrase)"], ["int", "com.lowagie.text.pdf.PdfPCell.getHorizontalAlignment()", "public int getHorizontalAlignment()"], ["void", "com.lowagie.text.pdf.PdfPCell.setHorizontalAlignment(int)", "public void setHorizontalAlignment(int)"], ["int", "com.lowagie.text.pdf.PdfPCell.getVerticalAlignment()", "public int getVerticalAlignment()"], ["void", "com.lowagie.text.pdf.PdfPCell.setVerticalAlignment(int)", "public void setVerticalAlignment(int)"], ["float", "com.lowagie.text.pdf.PdfPCell.getEffectivePaddingLeft()", "public float getEffectivePaddingLeft()"], ["float", "com.lowagie.text.pdf.PdfPCell.getPaddingLeft()", "public float getPaddingLeft()"], ["void", "com.lowagie.text.pdf.PdfPCell.setPaddingLeft(float)", "public void setPaddingLeft(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getEffectivePaddingRight()", "public float getEffectivePaddingRight()"], ["float", "com.lowagie.text.pdf.PdfPCell.getPaddingRight()", "public float getPaddingRight()"], ["void", "com.lowagie.text.pdf.PdfPCell.setPaddingRight(float)", "public void setPaddingRight(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getEffectivePaddingTop()", "public float getEffectivePaddingTop()"], ["float", "com.lowagie.text.pdf.PdfPCell.getPaddingTop()", "public float getPaddingTop()"], ["void", "com.lowagie.text.pdf.PdfPCell.setPaddingTop(float)", "public void setPaddingTop(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getEffectivePaddingBottom()", "public float getEffectivePaddingBottom()"], ["float", "com.lowagie.text.pdf.PdfPCell.getPaddingBottom()", "public float getPaddingBottom()"], ["void", "com.lowagie.text.pdf.PdfPCell.setPaddingBottom(float)", "public void setPaddingBottom(float)"], ["void", "com.lowagie.text.pdf.PdfPCell.setPadding(float)", "public void setPadding(float)"], ["boolean", "com.lowagie.text.pdf.PdfPCell.isUseBorderPadding()", "public boolean isUseBorderPadding()"], ["void", "com.lowagie.text.pdf.PdfPCell.setUseBorderPadding(boolean)", "public void setUseBorderPadding(boolean)"], ["void", "com.lowagie.text.pdf.PdfPCell.setLeading(float, float)", "public void setLeading(float, float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getLeading()", "public float getLeading()"], ["float", "com.lowagie.text.pdf.PdfPCell.getMultipliedLeading()", "public float getMultipliedLeading()"], ["void", "com.lowagie.text.pdf.PdfPCell.setIndent(float)", "public void setIndent(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getIndent()", "public float getIndent()"], ["float", "com.lowagie.text.pdf.PdfPCell.getExtraParagraphSpace()", "public float getExtraParagraphSpace()"], ["void", "com.lowagie.text.pdf.PdfPCell.setExtraParagraphSpace(float)", "public void setExtraParagraphSpace(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getFixedHeight()", "public float getFixedHeight()"], ["void", "com.lowagie.text.pdf.PdfPCell.setFixedHeight(float)", "public void setFixedHeight(float)"], ["boolean", "com.lowagie.text.pdf.PdfPCell.isNoWrap()", "public boolean isNoWrap()"], ["void", "com.lowagie.text.pdf.PdfPCell.setNoWrap(boolean)", "public void setNoWrap(boolean)"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.pdf.PdfPCell.getTable()", "public com.lowagie.text.pdf.PdfPTable getTable()"], ["float", "com.lowagie.text.pdf.PdfPCell.getMinimumHeight()", "public float getMinimumHeight()"], ["void", "com.lowagie.text.pdf.PdfPCell.setMinimumHeight(float)", "public void setMinimumHeight(float)"], ["int", "com.lowagie.text.pdf.PdfPCell.getColspan()", "public int getColspan()"], ["void", "com.lowagie.text.pdf.PdfPCell.setColspan(int)", "public void setColspan(int)"], ["void", "com.lowagie.text.pdf.PdfPCell.setFollowingIndent(float)", "public void setFollowingIndent(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getFollowingIndent()", "public float getFollowingIndent()"], ["void", "com.lowagie.text.pdf.PdfPCell.setRightIndent(float)", "public void setRightIndent(float)"], ["float", "com.lowagie.text.pdf.PdfPCell.getRightIndent()", "public float getRightIndent()"], ["float", "com.lowagie.text.pdf.PdfPCell.getSpaceCharRatio()", "public float getSpaceCharRatio()"], ["void", "com.lowagie.text.pdf.PdfPCell.setSpaceCharRatio(float)", "public void setSpaceCharRatio(float)"], ["void", "com.lowagie.text.pdf.PdfPCell.setRunDirection(int)", "public void setRunDirection(int)"], ["int", "com.lowagie.text.pdf.PdfPCell.getRunDirection()", "public int getRunDirection()"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.PdfPCell.getImage()", "public com.lowagie.text.Image getImage()"], ["void", "com.lowagie.text.pdf.PdfPCell.setImage(com.lowagie.text.Image)", "public void setImage(com.lowagie.text.Image)"], ["com.lowagie.text.pdf.PdfPCellEvent", "com.lowagie.text.pdf.PdfPCell.getCellEvent()", "public com.lowagie.text.pdf.PdfPCellEvent getCellEvent()"], ["void", "com.lowagie.text.pdf.PdfPCell.setCellEvent(com.lowagie.text.pdf.PdfPCellEvent)", "public void setCellEvent(com.lowagie.text.pdf.PdfPCellEvent)"], ["int", "com.lowagie.text.pdf.PdfPCell.getArabicOptions()", "public int getArabicOptions()"], ["void", "com.lowagie.text.pdf.PdfPCell.setArabicOptions(int)", "public void setArabicOptions(int)"], ["boolean", "com.lowagie.text.pdf.PdfPCell.isUseAscender()", "public boolean isUseAscender()"], ["void", "com.lowagie.text.pdf.PdfPCell.setUseAscender(boolean)", "public void setUseAscender(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPCell.isUseDescender()", "public boolean isUseDescender()"], ["void", "com.lowagie.text.pdf.PdfPCell.setUseDescender(boolean)", "public void setUseDescender(boolean)"], ["com.lowagie.text.pdf.ColumnText", "com.lowagie.text.pdf.PdfPCell.getColumn()", "public com.lowagie.text.pdf.ColumnText getColumn()"], ["java.util.List", "com.lowagie.text.pdf.PdfPCell.getCompositeElements()", "public java.util.List getCompositeElements()"], ["void", "com.lowagie.text.pdf.PdfPCell.setColumn(com.lowagie.text.pdf.ColumnText)", "public void setColumn(com.lowagie.text.pdf.ColumnText)"], ["int", "com.lowagie.text.pdf.PdfPCell.getRotation()", "public int getRotation()"], ["void", "com.lowagie.text.pdf.PdfPCell.setRotation(int)", "public void setRotation(int)"], ["com.lowagie.text.pdf.PdfPKCS7$X509Name", "com.lowagie.text.pdf.PdfPKCS7$X509Name(org.bouncycastle.asn1.ASN1Sequence)", "public com.lowagie.text.pdf.PdfPKCS7$X509Name(org.bouncycastle.asn1.ASN1Sequence)"], ["com.lowagie.text.pdf.PdfPKCS7$X509Name", "com.lowagie.text.pdf.PdfPKCS7$X509Name(java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7$X509Name(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7$X509Name.getField(java.lang.String)", "public java.lang.String getField(java.lang.String)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfPKCS7$X509Name.getFieldArray(java.lang.String)", "public java.util.ArrayList getFieldArray(java.lang.String)"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfPKCS7$X509Name.getFields()", "public java.util.HashMap getFields()"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7$X509Name.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfPKCS7$X509NameTokenizer", "com.lowagie.text.pdf.PdfPKCS7$X509NameTokenizer(java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7$X509NameTokenizer(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.PdfPKCS7$X509NameTokenizer.hasMoreTokens()", "public boolean hasMoreTokens()"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7$X509NameTokenizer.nextToken()", "public java.lang.String nextToken()"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.PdfPKCS7(byte[], byte[], java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7(byte[], byte[], java.lang.String)"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.PdfPKCS7(byte[], java.lang.String)", "public com.lowagie.text.pdf.PdfPKCS7(byte[], java.lang.String)"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.PdfPKCS7(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[], java.lang.String, java.lang.String, boolean)", "public com.lowagie.text.pdf.PdfPKCS7(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[], java.lang.String, java.lang.String, boolean) throws java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException"], ["void", "com.lowagie.text.pdf.PdfPKCS7.update(byte[], int, int)", "public void update(byte[], int, int) throws java.security.SignatureException"], ["boolean", "com.lowagie.text.pdf.PdfPKCS7.verify()", "public boolean verify() throws java.security.SignatureException"], ["java.security.cert.Certificate[]", "com.lowagie.text.pdf.PdfPKCS7.getCertificates()", "public java.security.cert.Certificate[] getCertificates()"], ["java.util.Collection", "com.lowagie.text.pdf.PdfPKCS7.getCRLs()", "public java.util.Collection getCRLs()"], ["java.security.cert.X509Certificate", "com.lowagie.text.pdf.PdfPKCS7.getSigningCertificate()", "public java.security.cert.X509Certificate getSigningCertificate()"], ["int", "com.lowagie.text.pdf.PdfPKCS7.getVersion()", "public int getVersion()"], ["int", "com.lowagie.text.pdf.PdfPKCS7.getSigningInfoVersion()", "public int getSigningInfoVersion()"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.getDigestAlgorithm()", "public java.lang.String getDigestAlgorithm()"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.getHashAlgorithm()", "public java.lang.String getHashAlgorithm()"], ["java.security.KeyStore", "com.lowagie.text.pdf.PdfPKCS7.loadCacertsKeyStore()", "public static java.security.KeyStore loadCacertsKeyStore()"], ["java.security.KeyStore", "com.lowagie.text.pdf.PdfPKCS7.loadCacertsKeyStore(java.lang.String)", "public static java.security.KeyStore loadCacertsKeyStore(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.verifyCertificate(java.security.cert.X509Certificate, java.util.Collection, java.util.Calendar)", "public static java.lang.String verifyCertificate(java.security.cert.X509Certificate, java.util.Collection, java.util.Calendar)"], ["java.lang.Object[]", "com.lowagie.text.pdf.PdfPKCS7.verifyCertificates(java.security.cert.Certificate[], java.security.KeyStore, java.util.Collection, java.util.Calendar)", "public static java.lang.Object[] verifyCertificates(java.security.cert.Certificate[], java.security.KeyStore, java.util.Collection, java.util.Calendar)"], ["com.lowagie.text.pdf.PdfPKCS7$X509Name", "com.lowagie.text.pdf.PdfPKCS7.getIssuerFields(java.security.cert.X509Certificate)", "public static com.lowagie.text.pdf.PdfPKCS7$X509Name getIssuerFields(java.security.cert.X509Certificate)"], ["com.lowagie.text.pdf.PdfPKCS7$X509Name", "com.lowagie.text.pdf.PdfPKCS7.getSubjectFields(java.security.cert.X509Certificate)", "public static com.lowagie.text.pdf.PdfPKCS7$X509Name getSubjectFields(java.security.cert.X509Certificate)"], ["byte[]", "com.lowagie.text.pdf.PdfPKCS7.getEncodedPKCS1()", "public byte[] getEncodedPKCS1()"], ["void", "com.lowagie.text.pdf.PdfPKCS7.setExternalDigest(byte[], byte[], java.lang.String)", "public void setExternalDigest(byte[], byte[], java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.PdfPKCS7.getEncodedPKCS7()", "public byte[] getEncodedPKCS7()"], ["byte[]", "com.lowagie.text.pdf.PdfPKCS7.getEncodedPKCS7(byte[], java.util.Calendar)", "public byte[] getEncodedPKCS7(byte[], java.util.Calendar)"], ["byte[]", "com.lowagie.text.pdf.PdfPKCS7.getAuthenticatedAttributeBytes(byte[], java.util.Calendar)", "public byte[] getAuthenticatedAttributeBytes(byte[], java.util.Calendar)"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.getReason()", "public java.lang.String getReason()"], ["void", "com.lowagie.text.pdf.PdfPKCS7.setReason(java.lang.String)", "public void setReason(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.getLocation()", "public java.lang.String getLocation()"], ["void", "com.lowagie.text.pdf.PdfPKCS7.setLocation(java.lang.String)", "public void setLocation(java.lang.String)"], ["java.util.Calendar", "com.lowagie.text.pdf.PdfPKCS7.getSignDate()", "public java.util.Calendar getSignDate()"], ["void", "com.lowagie.text.pdf.PdfPKCS7.setSignDate(java.util.Calendar)", "public void setSignDate(java.util.Calendar)"], ["java.lang.String", "com.lowagie.text.pdf.PdfPKCS7.getSignName()", "public java.lang.String getSignName()"], ["void", "com.lowagie.text.pdf.PdfPKCS7.setSignName(java.lang.String)", "public void setSignName(java.lang.String)"], ["com.lowagie.text.pdf.PdfPRow", "com.lowagie.text.pdf.PdfPRow(com.lowagie.text.pdf.PdfPCell[])", "public com.lowagie.text.pdf.PdfPRow(com.lowagie.text.pdf.PdfPCell[])"], ["com.lowagie.text.pdf.PdfPRow", "com.lowagie.text.pdf.PdfPRow(com.lowagie.text.pdf.PdfPRow)", "public com.lowagie.text.pdf.PdfPRow(com.lowagie.text.pdf.PdfPRow)"], ["boolean", "com.lowagie.text.pdf.PdfPRow.setWidths(float[])", "public boolean setWidths(float[])"], ["float", "com.lowagie.text.pdf.PdfPRow.calculateHeights()", "public float calculateHeights()"], ["void", "com.lowagie.text.pdf.PdfPRow.writeBorderAndBackground(float, float, com.lowagie.text.pdf.PdfPCell, com.lowagie.text.pdf.PdfContentByte[])", "public void writeBorderAndBackground(float, float, com.lowagie.text.pdf.PdfPCell, com.lowagie.text.pdf.PdfContentByte[])"], ["void", "com.lowagie.text.pdf.PdfPRow.writeCells(int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])", "public void writeCells(int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])"], ["boolean", "com.lowagie.text.pdf.PdfPRow.isCalculated()", "public boolean isCalculated()"], ["float", "com.lowagie.text.pdf.PdfPRow.getMaxHeights()", "public float getMaxHeights()"], ["void", "com.lowagie.text.pdf.PdfPRow.setMaxHeights(float)", "public void setMaxHeights(float)"], ["com.lowagie.text.pdf.PdfPRow", "com.lowagie.text.pdf.PdfPRow.splitRow(float)", "public com.lowagie.text.pdf.PdfPRow splitRow(float)"], ["com.lowagie.text.pdf.PdfPCell[]", "com.lowagie.text.pdf.PdfPRow.getCells()", "public com.lowagie.text.pdf.PdfPCell[] getCells()"], ["com.lowagie.text.pdf.PdfPSXObject", "com.lowagie.text.pdf.PdfPSXObject(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfPSXObject(com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfPSXObject.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.pdf.PdfPTable(float[])", "public com.lowagie.text.pdf.PdfPTable(float[])"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.pdf.PdfPTable(int)", "public com.lowagie.text.pdf.PdfPTable(int)"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.pdf.PdfPTable(com.lowagie.text.pdf.PdfPTable)", "public com.lowagie.text.pdf.PdfPTable(com.lowagie.text.pdf.PdfPTable)"], ["com.lowagie.text.pdf.PdfPTable", "com.lowagie.text.pdf.PdfPTable.shallowCopy(com.lowagie.text.pdf.PdfPTable)", "public static com.lowagie.text.pdf.PdfPTable shallowCopy(com.lowagie.text.pdf.PdfPTable)"], ["void", "com.lowagie.text.pdf.PdfPTable.setWidths(float[])", "public void setWidths(float[]) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfPTable.setWidths(int[])", "public void setWidths(int[]) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfPTable.setTotalWidth(float)", "public void setTotalWidth(float)"], ["void", "com.lowagie.text.pdf.PdfPTable.setTotalWidth(float[])", "public void setTotalWidth(float[]) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfPTable.setWidthPercentage(float[], com.lowagie.text.Rectangle)", "public void setWidthPercentage(float[], com.lowagie.text.Rectangle) throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.PdfPTable.getTotalWidth()", "public float getTotalWidth()"], ["void", "com.lowagie.text.pdf.PdfPTable.calculateHeightsFast()", "public void calculateHeightsFast()"], ["com.lowagie.text.pdf.PdfPCell", "com.lowagie.text.pdf.PdfPTable.getDefaultCell()", "public com.lowagie.text.pdf.PdfPCell getDefaultCell()"], ["void", "com.lowagie.text.pdf.PdfPTable.addCell(com.lowagie.text.pdf.PdfPCell)", "public void addCell(com.lowagie.text.pdf.PdfPCell)"], ["void", "com.lowagie.text.pdf.PdfPTable.addCell(java.lang.String)", "public void addCell(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfPTable.addCell(com.lowagie.text.pdf.PdfPTable)", "public void addCell(com.lowagie.text.pdf.PdfPTable)"], ["void", "com.lowagie.text.pdf.PdfPTable.addCell(com.lowagie.text.Image)", "public void addCell(com.lowagie.text.Image)"], ["void", "com.lowagie.text.pdf.PdfPTable.addCell(com.lowagie.text.Phrase)", "public void addCell(com.lowagie.text.Phrase)"], ["float", "com.lowagie.text.pdf.PdfPTable.writeSelectedRows(int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])", "public float writeSelectedRows(int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])"], ["float", "com.lowagie.text.pdf.PdfPTable.writeSelectedRows(int, int, int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])", "public float writeSelectedRows(int, int, int, int, float, float, com.lowagie.text.pdf.PdfContentByte[])"], ["float", "com.lowagie.text.pdf.PdfPTable.writeSelectedRows(int, int, float, float, com.lowagie.text.pdf.PdfContentByte)", "public float writeSelectedRows(int, int, float, float, com.lowagie.text.pdf.PdfContentByte)"], ["float", "com.lowagie.text.pdf.PdfPTable.writeSelectedRows(int, int, int, int, float, float, com.lowagie.text.pdf.PdfContentByte)", "public float writeSelectedRows(int, int, int, int, float, float, com.lowagie.text.pdf.PdfContentByte)"], ["com.lowagie.text.pdf.PdfContentByte[]", "com.lowagie.text.pdf.PdfPTable.beginWritingRows(com.lowagie.text.pdf.PdfContentByte)", "public static com.lowagie.text.pdf.PdfContentByte[] beginWritingRows(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.PdfPTable.endWritingRows(com.lowagie.text.pdf.PdfContentByte[])", "public static void endWritingRows(com.lowagie.text.pdf.PdfContentByte[])"], ["int", "com.lowagie.text.pdf.PdfPTable.size()", "public int size()"], ["float", "com.lowagie.text.pdf.PdfPTable.getTotalHeight()", "public float getTotalHeight()"], ["float", "com.lowagie.text.pdf.PdfPTable.getRowHeight(int)", "public float getRowHeight(int)"], ["float", "com.lowagie.text.pdf.PdfPTable.getHeaderHeight()", "public float getHeaderHeight()"], ["float", "com.lowagie.text.pdf.PdfPTable.getFooterHeight()", "public float getFooterHeight()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.deleteRow(int)", "public boolean deleteRow(int)"], ["boolean", "com.lowagie.text.pdf.PdfPTable.deleteLastRow()", "public boolean deleteLastRow()"], ["void", "com.lowagie.text.pdf.PdfPTable.deleteBodyRows()", "public void deleteBodyRows()"], ["int", "com.lowagie.text.pdf.PdfPTable.getNumberOfColumns()", "public int getNumberOfColumns()"], ["int", "com.lowagie.text.pdf.PdfPTable.getHeaderRows()", "public int getHeaderRows()"], ["void", "com.lowagie.text.pdf.PdfPTable.setHeaderRows(int)", "public void setHeaderRows(int)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfPTable.getChunks()", "public java.util.ArrayList getChunks()"], ["int", "com.lowagie.text.pdf.PdfPTable.type()", "public int type()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isNestable()", "public boolean isNestable()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["float", "com.lowagie.text.pdf.PdfPTable.getWidthPercentage()", "public float getWidthPercentage()"], ["void", "com.lowagie.text.pdf.PdfPTable.setWidthPercentage(float)", "public void setWidthPercentage(float)"], ["int", "com.lowagie.text.pdf.PdfPTable.getHorizontalAlignment()", "public int getHorizontalAlignment()"], ["void", "com.lowagie.text.pdf.PdfPTable.setHorizontalAlignment(int)", "public void setHorizontalAlignment(int)"], ["com.lowagie.text.pdf.PdfPRow", "com.lowagie.text.pdf.PdfPTable.getRow(int)", "public com.lowagie.text.pdf.PdfPRow getRow(int)"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfPTable.getRows()", "public java.util.ArrayList getRows()"], ["void", "com.lowagie.text.pdf.PdfPTable.setTableEvent(com.lowagie.text.pdf.PdfPTableEvent)", "public void setTableEvent(com.lowagie.text.pdf.PdfPTableEvent)"], ["com.lowagie.text.pdf.PdfPTableEvent", "com.lowagie.text.pdf.PdfPTable.getTableEvent()", "public com.lowagie.text.pdf.PdfPTableEvent getTableEvent()"], ["float[]", "com.lowagie.text.pdf.PdfPTable.getAbsoluteWidths()", "public float[] getAbsoluteWidths()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isSkipFirstHeader()", "public boolean isSkipFirstHeader()"], ["void", "com.lowagie.text.pdf.PdfPTable.setSkipFirstHeader(boolean)", "public void setSkipFirstHeader(boolean)"], ["void", "com.lowagie.text.pdf.PdfPTable.setRunDirection(int)", "public void setRunDirection(int)"], ["int", "com.lowagie.text.pdf.PdfPTable.getRunDirection()", "public int getRunDirection()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isLockedWidth()", "public boolean isLockedWidth()"], ["void", "com.lowagie.text.pdf.PdfPTable.setLockedWidth(boolean)", "public void setLockedWidth(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isSplitRows()", "public boolean isSplitRows()"], ["void", "com.lowagie.text.pdf.PdfPTable.setSplitRows(boolean)", "public void setSplitRows(boolean)"], ["void", "com.lowagie.text.pdf.PdfPTable.setSpacingBefore(float)", "public void setSpacingBefore(float)"], ["void", "com.lowagie.text.pdf.PdfPTable.setSpacingAfter(float)", "public void setSpacingAfter(float)"], ["float", "com.lowagie.text.pdf.PdfPTable.spacingBefore()", "public float spacingBefore()"], ["float", "com.lowagie.text.pdf.PdfPTable.spacingAfter()", "public float spacingAfter()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isExtendLastRow()", "public boolean isExtendLastRow()"], ["void", "com.lowagie.text.pdf.PdfPTable.setExtendLastRow(boolean)", "public void setExtendLastRow(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isHeadersInEvent()", "public boolean isHeadersInEvent()"], ["void", "com.lowagie.text.pdf.PdfPTable.setHeadersInEvent(boolean)", "public void setHeadersInEvent(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isSplitLate()", "public boolean isSplitLate()"], ["void", "com.lowagie.text.pdf.PdfPTable.setSplitLate(boolean)", "public void setSplitLate(boolean)"], ["void", "com.lowagie.text.pdf.PdfPTable.setKeepTogether(boolean)", "public void setKeepTogether(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPTable.getKeepTogether()", "public boolean getKeepTogether()"], ["int", "com.lowagie.text.pdf.PdfPTable.getFooterRows()", "public int getFooterRows()"], ["void", "com.lowagie.text.pdf.PdfPTable.setFooterRows(int)", "public void setFooterRows(int)"], ["void", "com.lowagie.text.pdf.PdfPTable.completeRow()", "public void completeRow()"], ["void", "com.lowagie.text.pdf.PdfPTable.flushContent()", "public void flushContent()"], ["boolean", "com.lowagie.text.pdf.PdfPTable.isComplete()", "public boolean isComplete()"], ["void", "com.lowagie.text.pdf.PdfPTable.setComplete(boolean)", "public void setComplete(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfPage.isParent()", "public boolean isParent()"], ["com.lowagie.text.pdf.PdfPageEventHelper", "com.lowagie.text.pdf.PdfPageEventHelper()", "public com.lowagie.text.pdf.PdfPageEventHelper()"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onOpenDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onOpenDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onStartPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onStartPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onEndPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onEndPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onCloseDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onCloseDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onParagraph(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onParagraph(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onParagraphEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onParagraphEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onChapter(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, com.lowagie.text.Paragraph)", "public void onChapter(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, com.lowagie.text.Paragraph)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onChapterEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onChapterEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onSection(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, int, com.lowagie.text.Paragraph)", "public void onSection(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, int, com.lowagie.text.Paragraph)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onSectionEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onSectionEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.PdfPageEventHelper.onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)", "public void onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)"], ["com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat", "com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat(int, int, java.lang.String, int)", "public com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat(int, int, java.lang.String, int)"], ["com.lowagie.text.pdf.PdfPageLabels", "com.lowagie.text.pdf.PdfPageLabels()", "public com.lowagie.text.pdf.PdfPageLabels()"], ["void", "com.lowagie.text.pdf.PdfPageLabels.addPageLabel(int, int, java.lang.String, int)", "public void addPageLabel(int, int, java.lang.String, int)"], ["void", "com.lowagie.text.pdf.PdfPageLabels.addPageLabel(int, int, java.lang.String)", "public void addPageLabel(int, int, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfPageLabels.addPageLabel(int, int)", "public void addPageLabel(int, int)"], ["void", "com.lowagie.text.pdf.PdfPageLabels.addPageLabel(com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat)", "public void addPageLabel(com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat)"], ["void", "com.lowagie.text.pdf.PdfPageLabels.removePageLabel(int)", "public void removePageLabel(int)"], ["java.lang.String[]", "com.lowagie.text.pdf.PdfPageLabels.getPageLabels(com.lowagie.text.pdf.PdfReader)", "public static java.lang.String[] getPageLabels(com.lowagie.text.pdf.PdfReader)"], ["com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat[]", "com.lowagie.text.pdf.PdfPageLabels.getPageLabelFormats(com.lowagie.text.pdf.PdfReader)", "public static com.lowagie.text.pdf.PdfPageLabels$PdfPageLabelFormat[] getPageLabelFormats(com.lowagie.text.pdf.PdfReader)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setXStep(float)", "public void setXStep(float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setYStep(float)", "public void setYStep(float)"], ["float", "com.lowagie.text.pdf.PdfPatternPainter.getXStep()", "public float getXStep()"], ["float", "com.lowagie.text.pdf.PdfPatternPainter.getYStep()", "public float getYStep()"], ["boolean", "com.lowagie.text.pdf.PdfPatternPainter.isStencil()", "public boolean isStencil()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setPatternMatrix(float, float, float, float, float, float)", "public void setPatternMatrix(float, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfPatternPainter.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["java.awt.Color", "com.lowagie.text.pdf.PdfPatternPainter.getDefaultColor()", "public java.awt.Color getDefaultColor()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setGrayFill(float)", "public void setGrayFill(float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetGrayFill()", "public void resetGrayFill()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setGrayStroke(float)", "public void setGrayStroke(float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetGrayStroke()", "public void resetGrayStroke()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setRGBColorFillF(float, float, float)", "public void setRGBColorFillF(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetRGBColorFill()", "public void resetRGBColorFill()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setRGBColorStrokeF(float, float, float)", "public void setRGBColorStrokeF(float, float, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetRGBColorStroke()", "public void resetRGBColorStroke()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setCMYKColorFillF(float, float, float, float)", "public void setCMYKColorFillF(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetCMYKColorFill()", "public void resetCMYKColorFill()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setCMYKColorStrokeF(float, float, float, float)", "public void setCMYKColorStrokeF(float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.resetCMYKColorStroke()", "public void resetCMYKColorStroke()"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.addImage(com.lowagie.text.Image, float, float, float, float, float, float)", "public void addImage(com.lowagie.text.Image, float, float, float, float, float, float) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setCMYKColorFill(int, int, int, int)", "public void setCMYKColorFill(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setCMYKColorStroke(int, int, int, int)", "public void setCMYKColorStroke(int, int, int, int)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setRGBColorFill(int, int, int)", "public void setRGBColorFill(int, int, int)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setRGBColorStroke(int, int, int)", "public void setRGBColorStroke(int, int, int)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setColorStroke(java.awt.Color)", "public void setColorStroke(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setColorFill(java.awt.Color)", "public void setColorFill(java.awt.Color)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorFill(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)", "public void setColorStroke(com.lowagie.text.pdf.PdfSpotColor, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setPatternFill(com.lowagie.text.pdf.PdfPatternPainter)", "public void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)", "public void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)", "public void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter, java.awt.Color, float)"], ["void", "com.lowagie.text.pdf.PdfPatternPainter.setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter)", "public void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter)"], ["com.lowagie.text.pdf.PdfPrinterGraphics2D", "com.lowagie.text.pdf.PdfPrinterGraphics2D(com.lowagie.text.pdf.PdfContentByte, float, float, com.lowagie.text.pdf.FontMapper, boolean, boolean, float, java.awt.print.PrinterJob)", "public com.lowagie.text.pdf.PdfPrinterGraphics2D(com.lowagie.text.pdf.PdfContentByte, float, float, com.lowagie.text.pdf.FontMapper, boolean, boolean, float, java.awt.print.PrinterJob)"], ["java.awt.print.PrinterJob", "com.lowagie.text.pdf.PdfPrinterGraphics2D.getPrinterJob()", "public java.awt.print.PrinterJob getPrinterJob()"], ["com.lowagie.text.pdf.PdfPublicKeyRecipient", "com.lowagie.text.pdf.PdfPublicKeyRecipient(java.security.cert.Certificate, int)", "public com.lowagie.text.pdf.PdfPublicKeyRecipient(java.security.cert.Certificate, int)"], ["java.security.cert.Certificate", "com.lowagie.text.pdf.PdfPublicKeyRecipient.getCertificate()", "public java.security.cert.Certificate getCertificate()"], ["int", "com.lowagie.text.pdf.PdfPublicKeyRecipient.getPermission()", "public int getPermission()"], ["com.lowagie.text.pdf.PdfPublicKeySecurityHandler", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler()", "public com.lowagie.text.pdf.PdfPublicKeySecurityHandler()"], ["byte[]", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler.unescapedString(byte[])", "public static byte[] unescapedString(byte[]) throws com.lowagie.text.pdf.BadPdfFormatException"], ["void", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler.addRecipient(com.lowagie.text.pdf.PdfPublicKeyRecipient)", "public void addRecipient(com.lowagie.text.pdf.PdfPublicKeyRecipient)"], ["int", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler.getRecipientsSize()", "public int getRecipientsSize()"], ["byte[]", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler.getEncodedRecipient(int)", "public byte[] getEncodedRecipient(int) throws java.io.IOException, java.security.GeneralSecurityException"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.PdfPublicKeySecurityHandler.getEncodedRecipients()", "public com.lowagie.text.pdf.PdfArray getEncodedRecipients() throws java.io.IOException, java.security.GeneralSecurityException"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader$PageRefs.getPageN(int)", "public com.lowagie.text.pdf.PdfDictionary getPageN(int)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader$PageRefs.getPageNRelease(int)", "public com.lowagie.text.pdf.PdfDictionary getPageNRelease(int)"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PdfReader$PageRefs.getPageOrigRefRelease(int)", "public com.lowagie.text.pdf.PRIndirectReference getPageOrigRefRelease(int)"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PdfReader$PageRefs.getPageOrigRef(int)", "public com.lowagie.text.pdf.PRIndirectReference getPageOrigRef(int)"], ["void", "com.lowagie.text.pdf.PdfReader$PageRefs.releasePage(int)", "public void releasePage(int)"], ["void", "com.lowagie.text.pdf.PdfReader$PageRefs.resetReleasePage()", "public void resetReleasePage()"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.lang.String)", "public com.lowagie.text.pdf.PdfReader(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.lang.String, byte[])", "public com.lowagie.text.pdf.PdfReader(java.lang.String, byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(byte[])", "public com.lowagie.text.pdf.PdfReader(byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(byte[], byte[])", "public com.lowagie.text.pdf.PdfReader(byte[], byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.lang.String, java.security.cert.Certificate, java.security.Key, java.lang.String)", "public com.lowagie.text.pdf.PdfReader(java.lang.String, java.security.cert.Certificate, java.security.Key, java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.net.URL)", "public com.lowagie.text.pdf.PdfReader(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.net.URL, byte[])", "public com.lowagie.text.pdf.PdfReader(java.net.URL, byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.io.InputStream, byte[])", "public com.lowagie.text.pdf.PdfReader(java.io.InputStream, byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(java.io.InputStream)", "public com.lowagie.text.pdf.PdfReader(java.io.InputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(com.lowagie.text.pdf.RandomAccessFileOrArray, byte[])", "public com.lowagie.text.pdf.PdfReader(com.lowagie.text.pdf.RandomAccessFileOrArray, byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfReader(com.lowagie.text.pdf.PdfReader)", "public com.lowagie.text.pdf.PdfReader(com.lowagie.text.pdf.PdfReader)"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.PdfReader.getSafeFile()", "public com.lowagie.text.pdf.RandomAccessFileOrArray getSafeFile()"], ["int", "com.lowagie.text.pdf.PdfReader.getNumberOfPages()", "public int getNumberOfPages()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader.getCatalog()", "public com.lowagie.text.pdf.PdfDictionary getCatalog()"], ["com.lowagie.text.pdf.PRAcroForm", "com.lowagie.text.pdf.PdfReader.getAcroForm()", "public com.lowagie.text.pdf.PRAcroForm getAcroForm()"], ["int", "com.lowagie.text.pdf.PdfReader.getPageRotation(int)", "public int getPageRotation(int)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getPageSizeWithRotation(int)", "public com.lowagie.text.Rectangle getPageSizeWithRotation(int)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getPageSizeWithRotation(com.lowagie.text.pdf.PdfDictionary)", "public com.lowagie.text.Rectangle getPageSizeWithRotation(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getPageSize(int)", "public com.lowagie.text.Rectangle getPageSize(int)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getPageSize(com.lowagie.text.pdf.PdfDictionary)", "public com.lowagie.text.Rectangle getPageSize(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getCropBox(int)", "public com.lowagie.text.Rectangle getCropBox(int)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getBoxSize(int, java.lang.String)", "public com.lowagie.text.Rectangle getBoxSize(int, java.lang.String)"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfReader.getInfo()", "public java.util.HashMap getInfo()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfReader.getNormalizedRectangle(com.lowagie.text.pdf.PdfArray)", "public static com.lowagie.text.Rectangle getNormalizedRectangle(com.lowagie.text.pdf.PdfArray)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObjectRelease(com.lowagie.text.pdf.PdfObject)", "public static com.lowagie.text.pdf.PdfObject getPdfObjectRelease(com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObject(com.lowagie.text.pdf.PdfObject)", "public static com.lowagie.text.pdf.PdfObject getPdfObject(com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObjectRelease(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfObject)", "public static com.lowagie.text.pdf.PdfObject getPdfObjectRelease(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObject(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfObject)", "public static com.lowagie.text.pdf.PdfObject getPdfObject(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObjectRelease(int)", "public com.lowagie.text.pdf.PdfObject getPdfObjectRelease(int)"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.getPdfObject(int)", "public com.lowagie.text.pdf.PdfObject getPdfObject(int)"], ["void", "com.lowagie.text.pdf.PdfReader.resetLastXrefPartial()", "public void resetLastXrefPartial()"], ["void", "com.lowagie.text.pdf.PdfReader.releaseLastXrefPartial()", "public void releaseLastXrefPartial()"], ["void", "com.lowagie.text.pdf.PdfReader.releaseLastXrefPartial(com.lowagie.text.pdf.PdfObject)", "public static void releaseLastXrefPartial(com.lowagie.text.pdf.PdfObject)"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PdfReader.addPdfObject(com.lowagie.text.pdf.PdfObject)", "public com.lowagie.text.pdf.PRIndirectReference addPdfObject(com.lowagie.text.pdf.PdfObject)"], ["double", "com.lowagie.text.pdf.PdfReader.dumpPerc()", "public double dumpPerc()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.PdfReader.killIndirect(com.lowagie.text.pdf.PdfObject)", "public static com.lowagie.text.pdf.PdfObject killIndirect(com.lowagie.text.pdf.PdfObject)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.FlateDecode(byte[])", "public static byte[] FlateDecode(byte[])"], ["byte[]", "com.lowagie.text.pdf.PdfReader.decodePredictor(byte[], com.lowagie.text.pdf.PdfObject)", "public static byte[] decodePredictor(byte[], com.lowagie.text.pdf.PdfObject)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.FlateDecode(byte[], boolean)", "public static byte[] FlateDecode(byte[], boolean)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.ASCIIHexDecode(byte[])", "public static byte[] ASCIIHexDecode(byte[])"], ["byte[]", "com.lowagie.text.pdf.PdfReader.ASCII85Decode(byte[])", "public static byte[] ASCII85Decode(byte[])"], ["byte[]", "com.lowagie.text.pdf.PdfReader.LZWDecode(byte[])", "public static byte[] LZWDecode(byte[])"], ["boolean", "com.lowagie.text.pdf.PdfReader.isRebuilt()", "public boolean isRebuilt()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader.getPageN(int)", "public com.lowagie.text.pdf.PdfDictionary getPageN(int)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader.getPageNRelease(int)", "public com.lowagie.text.pdf.PdfDictionary getPageNRelease(int)"], ["void", "com.lowagie.text.pdf.PdfReader.releasePage(int)", "public void releasePage(int)"], ["void", "com.lowagie.text.pdf.PdfReader.resetReleasePage()", "public void resetReleasePage()"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PdfReader.getPageOrigRef(int)", "public com.lowagie.text.pdf.PRIndirectReference getPageOrigRef(int)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getPageContent(int, com.lowagie.text.pdf.RandomAccessFileOrArray)", "public byte[] getPageContent(int, com.lowagie.text.pdf.RandomAccessFileOrArray) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getPageContent(int)", "public byte[] getPageContent(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfReader.setPageContent(int, byte[])", "public void setPageContent(int, byte[])"], ["void", "com.lowagie.text.pdf.PdfReader.setPageContent(int, byte[], int)", "public void setPageContent(int, byte[], int)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getStreamBytes(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.RandomAccessFileOrArray)", "public static byte[] getStreamBytes(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.RandomAccessFileOrArray) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getStreamBytes(com.lowagie.text.pdf.PRStream)", "public static byte[] getStreamBytes(com.lowagie.text.pdf.PRStream) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getStreamBytesRaw(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.RandomAccessFileOrArray)", "public static byte[] getStreamBytesRaw(com.lowagie.text.pdf.PRStream, com.lowagie.text.pdf.RandomAccessFileOrArray) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getStreamBytesRaw(com.lowagie.text.pdf.PRStream)", "public static byte[] getStreamBytesRaw(com.lowagie.text.pdf.PRStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfReader.eliminateSharedStreams()", "public void eliminateSharedStreams()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isTampered()", "public boolean isTampered()"], ["void", "com.lowagie.text.pdf.PdfReader.setTampered(boolean)", "public void setTampered(boolean)"], ["byte[]", "com.lowagie.text.pdf.PdfReader.getMetadata()", "public byte[] getMetadata() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfReader.getLastXref()", "public int getLastXref()"], ["int", "com.lowagie.text.pdf.PdfReader.getXrefSize()", "public int getXrefSize()"], ["int", "com.lowagie.text.pdf.PdfReader.getEofPos()", "public int getEofPos()"], ["char", "com.lowagie.text.pdf.PdfReader.getPdfVersion()", "public char getPdfVersion()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isEncrypted()", "public boolean isEncrypted()"], ["int", "com.lowagie.text.pdf.PdfReader.getPermissions()", "public int getPermissions()"], ["boolean", "com.lowagie.text.pdf.PdfReader.is128Key()", "public boolean is128Key()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfReader.getTrailer()", "public com.lowagie.text.pdf.PdfDictionary getTrailer()"], ["int", "com.lowagie.text.pdf.PdfReader.shuffleSubsetNames()", "public int shuffleSubsetNames()"], ["int", "com.lowagie.text.pdf.PdfReader.createFakeFontSubsets()", "public int createFakeFontSubsets()"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfReader.getNamedDestination()", "public java.util.HashMap getNamedDestination()"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfReader.getNamedDestinationFromNames()", "public java.util.HashMap getNamedDestinationFromNames()"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfReader.getNamedDestinationFromStrings()", "public java.util.HashMap getNamedDestinationFromStrings()"], ["void", "com.lowagie.text.pdf.PdfReader.removeFields()", "public void removeFields()"], ["void", "com.lowagie.text.pdf.PdfReader.removeAnnotations()", "public void removeAnnotations()"], ["java.util.ArrayList", "com.lowagie.text.pdf.PdfReader.getLinks(int)", "public java.util.ArrayList getLinks(int)"], ["void", "com.lowagie.text.pdf.PdfReader.consolidateNamedDestinations()", "public void consolidateNamedDestinations()"], ["void", "com.lowagie.text.pdf.PdfReader.close()", "public void close()"], ["int", "com.lowagie.text.pdf.PdfReader.removeUnusedObjects()", "public int removeUnusedObjects()"], ["com.lowagie.text.pdf.AcroFields", "com.lowagie.text.pdf.PdfReader.getAcroFields()", "public com.lowagie.text.pdf.AcroFields getAcroFields()"], ["java.lang.String", "com.lowagie.text.pdf.PdfReader.getJavaScript(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public java.lang.String getJavaScript(com.lowagie.text.pdf.RandomAccessFileOrArray) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.PdfReader.getJavaScript()", "public java.lang.String getJavaScript() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfReader.selectPages(java.lang.String)", "public void selectPages(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfReader.selectPages(java.util.List)", "public void selectPages(java.util.List)"], ["void", "com.lowagie.text.pdf.PdfReader.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.PdfReader.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["int", "com.lowagie.text.pdf.PdfReader.getSimpleViewerPreferences()", "public int getSimpleViewerPreferences()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isAppendable()", "public boolean isAppendable()"], ["void", "com.lowagie.text.pdf.PdfReader.setAppendable(boolean)", "public void setAppendable(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfReader.isNewXrefType()", "public boolean isNewXrefType()"], ["int", "com.lowagie.text.pdf.PdfReader.getFileLength()", "public int getFileLength()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isHybridXref()", "public boolean isHybridXref()"], ["void", "com.lowagie.text.pdf.PdfReader.removeUsageRights()", "public void removeUsageRights()"], ["int", "com.lowagie.text.pdf.PdfReader.getCertificationLevel()", "public int getCertificationLevel()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isOpenedWithFullPermissions()", "public final boolean isOpenedWithFullPermissions()"], ["int", "com.lowagie.text.pdf.PdfReader.getCryptoMode()", "public int getCryptoMode()"], ["boolean", "com.lowagie.text.pdf.PdfReader.isMetadataEncrypted()", "public boolean isMetadataEncrypted()"], ["byte[]", "com.lowagie.text.pdf.PdfReader.computeUserPassword()", "public byte[] computeUserPassword()"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(float, float, float, float, int)", "public com.lowagie.text.pdf.PdfRectangle(float, float, float, float, int)"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(float, float, float, float)", "public com.lowagie.text.pdf.PdfRectangle(float, float, float, float)"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(float, float, int)", "public com.lowagie.text.pdf.PdfRectangle(float, float, int)"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(float, float)", "public com.lowagie.text.pdf.PdfRectangle(float, float)"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(com.lowagie.text.Rectangle, int)", "public com.lowagie.text.pdf.PdfRectangle(com.lowagie.text.Rectangle, int)"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle(com.lowagie.text.Rectangle)", "public com.lowagie.text.pdf.PdfRectangle(com.lowagie.text.Rectangle)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfRectangle.getRectangle()", "public com.lowagie.text.Rectangle getRectangle()"], ["boolean", "com.lowagie.text.pdf.PdfRectangle.add(com.lowagie.text.pdf.PdfObject)", "public boolean add(com.lowagie.text.pdf.PdfObject)"], ["float", "com.lowagie.text.pdf.PdfRectangle.left()", "public float left()"], ["float", "com.lowagie.text.pdf.PdfRectangle.right()", "public float right()"], ["float", "com.lowagie.text.pdf.PdfRectangle.top()", "public float top()"], ["float", "com.lowagie.text.pdf.PdfRectangle.bottom()", "public float bottom()"], ["float", "com.lowagie.text.pdf.PdfRectangle.left(int)", "public float left(int)"], ["float", "com.lowagie.text.pdf.PdfRectangle.right(int)", "public float right(int)"], ["float", "com.lowagie.text.pdf.PdfRectangle.top(int)", "public float top(int)"], ["float", "com.lowagie.text.pdf.PdfRectangle.bottom(int)", "public float bottom(int)"], ["float", "com.lowagie.text.pdf.PdfRectangle.width()", "public float width()"], ["float", "com.lowagie.text.pdf.PdfRectangle.height()", "public float height()"], ["com.lowagie.text.pdf.PdfRectangle", "com.lowagie.text.pdf.PdfRectangle.rotate()", "public com.lowagie.text.pdf.PdfRectangle rotate()"], ["java.awt.Color", "com.lowagie.text.pdf.PdfShading.getColorSpace()", "public java.awt.Color getColorSpace()"], ["void", "com.lowagie.text.pdf.PdfShading.throwColorSpaceError()", "public static void throwColorSpaceError()"], ["void", "com.lowagie.text.pdf.PdfShading.checkCompatibleColors(java.awt.Color, java.awt.Color)", "public static void checkCompatibleColors(java.awt.Color, java.awt.Color)"], ["float[]", "com.lowagie.text.pdf.PdfShading.getColorArray(java.awt.Color)", "public static float[] getColorArray(java.awt.Color)"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.type1(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction)", "public static com.lowagie.text.pdf.PdfShading type1(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction)"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.type2(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction, boolean[])", "public static com.lowagie.text.pdf.PdfShading type2(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction, boolean[])"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.type3(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction, boolean[])", "public static com.lowagie.text.pdf.PdfShading type3(com.lowagie.text.pdf.PdfWriter, java.awt.Color, float[], float[], com.lowagie.text.pdf.PdfFunction, boolean[])"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.simpleAxial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, java.awt.Color, java.awt.Color, boolean, boolean)", "public static com.lowagie.text.pdf.PdfShading simpleAxial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, java.awt.Color, java.awt.Color, boolean, boolean)"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.simpleAxial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, java.awt.Color, java.awt.Color)", "public static com.lowagie.text.pdf.PdfShading simpleAxial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, java.awt.Color, java.awt.Color)"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.simpleRadial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, float, float, java.awt.Color, java.awt.Color, boolean, boolean)", "public static com.lowagie.text.pdf.PdfShading simpleRadial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, float, float, java.awt.Color, java.awt.Color, boolean, boolean)"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShading.simpleRadial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, float, float, java.awt.Color, java.awt.Color)", "public static com.lowagie.text.pdf.PdfShading simpleRadial(com.lowagie.text.pdf.PdfWriter, float, float, float, float, float, float, java.awt.Color, java.awt.Color)"], ["float[]", "com.lowagie.text.pdf.PdfShading.getBBox()", "public float[] getBBox()"], ["void", "com.lowagie.text.pdf.PdfShading.setBBox(float[])", "public void setBBox(float[])"], ["boolean", "com.lowagie.text.pdf.PdfShading.isAntiAlias()", "public boolean isAntiAlias()"], ["void", "com.lowagie.text.pdf.PdfShading.setAntiAlias(boolean)", "public void setAntiAlias(boolean)"], ["com.lowagie.text.pdf.PdfShadingPattern", "com.lowagie.text.pdf.PdfShadingPattern(com.lowagie.text.pdf.PdfShading)", "public com.lowagie.text.pdf.PdfShadingPattern(com.lowagie.text.pdf.PdfShading)"], ["void", "com.lowagie.text.pdf.PdfShadingPattern.setMatrix(float[])", "public void setMatrix(float[])"], ["float[]", "com.lowagie.text.pdf.PdfShadingPattern.getMatrix()", "public float[] getMatrix()"], ["com.lowagie.text.pdf.PdfShading", "com.lowagie.text.pdf.PdfShadingPattern.getShading()", "public com.lowagie.text.pdf.PdfShading getShading()"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite", "com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite()", "public com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite()"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite", "com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite(java.lang.String)", "public com.lowagie.text.pdf.PdfSigGenericPKCS$PPKLite(java.lang.String)"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS", "com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS()", "public com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS()"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS", "com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS(java.lang.String)", "public com.lowagie.text.pdf.PdfSigGenericPKCS$PPKMS(java.lang.String)"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign", "com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign()", "public com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign()"], ["com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign", "com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign(java.lang.String)", "public com.lowagie.text.pdf.PdfSigGenericPKCS$VeriSign(java.lang.String)"], ["com.lowagie.text.pdf.PdfSigGenericPKCS", "com.lowagie.text.pdf.PdfSigGenericPKCS(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfSigGenericPKCS(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfSigGenericPKCS.setSignInfo(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[])", "public void setSignInfo(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[])"], ["void", "com.lowagie.text.pdf.PdfSigGenericPKCS.setExternalDigest(byte[], byte[], java.lang.String)", "public void setExternalDigest(byte[], byte[], java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSigGenericPKCS.getName()", "public java.lang.String getName()"], ["com.lowagie.text.pdf.PdfPKCS7", "com.lowagie.text.pdf.PdfSigGenericPKCS.getSigner()", "public com.lowagie.text.pdf.PdfPKCS7 getSigner()"], ["byte[]", "com.lowagie.text.pdf.PdfSigGenericPKCS.getSignerContents()", "public byte[] getSignerContents()"], ["com.lowagie.text.pdf.PdfSignature", "com.lowagie.text.pdf.PdfSignature(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfSignature(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfSignature.setByteRange(int[])", "public void setByteRange(int[])"], ["void", "com.lowagie.text.pdf.PdfSignature.setContents(byte[])", "public void setContents(byte[])"], ["void", "com.lowagie.text.pdf.PdfSignature.setCert(byte[])", "public void setCert(byte[])"], ["void", "com.lowagie.text.pdf.PdfSignature.setName(java.lang.String)", "public void setName(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfSignature.setDate(com.lowagie.text.pdf.PdfDate)", "public void setDate(com.lowagie.text.pdf.PdfDate)"], ["void", "com.lowagie.text.pdf.PdfSignature.setLocation(java.lang.String)", "public void setLocation(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfSignature.setReason(java.lang.String)", "public void setReason(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfSignature.setContact(java.lang.String)", "public void setContact(java.lang.String)"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance$RangeStream.read()", "public int read() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance$RangeStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance.getRender()", "public int getRender()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setRender(int)", "public void setRender(int)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.PdfSignatureAppearance.getSignatureGraphic()", "public com.lowagie.text.Image getSignatureGraphic()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setSignatureGraphic(com.lowagie.text.Image)", "public void setSignatureGraphic(com.lowagie.text.Image)"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setLayer2Text(java.lang.String)", "public void setLayer2Text(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getLayer2Text()", "public java.lang.String getLayer2Text()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setLayer4Text(java.lang.String)", "public void setLayer4Text(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getLayer4Text()", "public java.lang.String getLayer4Text()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfSignatureAppearance.getRect()", "public com.lowagie.text.Rectangle getRect()"], ["boolean", "com.lowagie.text.pdf.PdfSignatureAppearance.isInvisible()", "public boolean isInvisible()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setCrypto(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[], com.lowagie.text.pdf.PdfName)", "public void setCrypto(java.security.PrivateKey, java.security.cert.Certificate[], java.security.cert.CRL[], com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setVisibleSignature(com.lowagie.text.Rectangle, int, java.lang.String)", "public void setVisibleSignature(com.lowagie.text.Rectangle, int, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setVisibleSignature(java.lang.String)", "public void setVisibleSignature(java.lang.String)"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PdfSignatureAppearance.getLayer(int)", "public com.lowagie.text.pdf.PdfTemplate getLayer(int)"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PdfSignatureAppearance.getTopLayer()", "public com.lowagie.text.pdf.PdfTemplate getTopLayer()"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PdfSignatureAppearance.getAppearance()", "public com.lowagie.text.pdf.PdfTemplate getAppearance() throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.PdfSignatureAppearance.fitText(com.lowagie.text.Font, java.lang.String, com.lowagie.text.Rectangle, float, int)", "public static float fitText(com.lowagie.text.Font, java.lang.String, com.lowagie.text.Rectangle, float, int)"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setExternalDigest(byte[], byte[], java.lang.String)", "public void setExternalDigest(byte[], byte[], java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getReason()", "public java.lang.String getReason()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setReason(java.lang.String)", "public void setReason(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getLocation()", "public java.lang.String getLocation()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setLocation(java.lang.String)", "public void setLocation(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getProvider()", "public java.lang.String getProvider()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setProvider(java.lang.String)", "public void setProvider(java.lang.String)"], ["java.security.PrivateKey", "com.lowagie.text.pdf.PdfSignatureAppearance.getPrivKey()", "public java.security.PrivateKey getPrivKey()"], ["java.security.cert.Certificate[]", "com.lowagie.text.pdf.PdfSignatureAppearance.getCertChain()", "public java.security.cert.Certificate[] getCertChain()"], ["java.security.cert.CRL[]", "com.lowagie.text.pdf.PdfSignatureAppearance.getCrlList()", "public java.security.cert.CRL[] getCrlList()"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfSignatureAppearance.getFilter()", "public com.lowagie.text.pdf.PdfName getFilter()"], ["boolean", "com.lowagie.text.pdf.PdfSignatureAppearance.isNewField()", "public boolean isNewField()"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance.getPage()", "public int getPage()"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getFieldName()", "public java.lang.String getFieldName()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfSignatureAppearance.getPageRect()", "public com.lowagie.text.Rectangle getPageRect()"], ["java.util.Calendar", "com.lowagie.text.pdf.PdfSignatureAppearance.getSignDate()", "public java.util.Calendar getSignDate()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setSignDate(java.util.Calendar)", "public void setSignDate(java.util.Calendar)"], ["java.io.File", "com.lowagie.text.pdf.PdfSignatureAppearance.getTempFile()", "public java.io.File getTempFile()"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getNewSigName()", "public java.lang.String getNewSigName()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.preClose()", "public void preClose() throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.preClose(java.util.HashMap)", "public void preClose(java.util.HashMap) throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.close(com.lowagie.text.pdf.PdfDictionary)", "public void close(com.lowagie.text.pdf.PdfDictionary) throws java.io.IOException, com.lowagie.text.DocumentException"], ["java.io.InputStream", "com.lowagie.text.pdf.PdfSignatureAppearance.getRangeStream()", "public java.io.InputStream getRangeStream()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfSignatureAppearance.getCryptoDictionary()", "public com.lowagie.text.pdf.PdfDictionary getCryptoDictionary()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setCryptoDictionary(com.lowagie.text.pdf.PdfDictionary)", "public void setCryptoDictionary(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfSignatureAppearance.getStamper()", "public com.lowagie.text.pdf.PdfStamper getStamper()"], ["boolean", "com.lowagie.text.pdf.PdfSignatureAppearance.isPreClosed()", "public boolean isPreClosed()"], ["com.lowagie.text.pdf.PdfSigGenericPKCS", "com.lowagie.text.pdf.PdfSignatureAppearance.getSigStandard()", "public com.lowagie.text.pdf.PdfSigGenericPKCS getSigStandard()"], ["java.lang.String", "com.lowagie.text.pdf.PdfSignatureAppearance.getContact()", "public java.lang.String getContact()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setContact(java.lang.String)", "public void setContact(java.lang.String)"], ["com.lowagie.text.Font", "com.lowagie.text.pdf.PdfSignatureAppearance.getLayer2Font()", "public com.lowagie.text.Font getLayer2Font()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setLayer2Font(com.lowagie.text.Font)", "public void setLayer2Font(com.lowagie.text.Font)"], ["boolean", "com.lowagie.text.pdf.PdfSignatureAppearance.isAcro6Layers()", "public boolean isAcro6Layers()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setAcro6Layers(boolean)", "public void setAcro6Layers(boolean)"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setRunDirection(int)", "public void setRunDirection(int)"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance.getRunDirection()", "public int getRunDirection()"], ["com.lowagie.text.pdf.PdfSignatureAppearance$SignatureEvent", "com.lowagie.text.pdf.PdfSignatureAppearance.getSignatureEvent()", "public com.lowagie.text.pdf.PdfSignatureAppearance$SignatureEvent getSignatureEvent()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setSignatureEvent(com.lowagie.text.pdf.PdfSignatureAppearance$SignatureEvent)", "public void setSignatureEvent(com.lowagie.text.pdf.PdfSignatureAppearance$SignatureEvent)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.PdfSignatureAppearance.getImage()", "public com.lowagie.text.Image getImage()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setImage(com.lowagie.text.Image)", "public void setImage(com.lowagie.text.Image)"], ["float", "com.lowagie.text.pdf.PdfSignatureAppearance.getImageScale()", "public float getImageScale()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setImageScale(float)", "public void setImageScale(float)"], ["int", "com.lowagie.text.pdf.PdfSignatureAppearance.getCertificationLevel()", "public int getCertificationLevel()"], ["void", "com.lowagie.text.pdf.PdfSignatureAppearance.setCertificationLevel(int)", "public void setCertificationLevel(int)"], ["boolean", "com.lowagie.text.pdf.PdfSmartCopy$ByteStore.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.PdfSmartCopy$ByteStore.hashCode()", "public int hashCode()"], ["com.lowagie.text.pdf.PdfSmartCopy", "com.lowagie.text.pdf.PdfSmartCopy(com.lowagie.text.Document, java.io.OutputStream)", "public com.lowagie.text.pdf.PdfSmartCopy(com.lowagie.text.Document, java.io.OutputStream) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfSpotColor", "com.lowagie.text.pdf.PdfSpotColor(java.lang.String, float, java.awt.Color)", "public com.lowagie.text.pdf.PdfSpotColor(java.lang.String, float, java.awt.Color)"], ["float", "com.lowagie.text.pdf.PdfSpotColor.getTint()", "public float getTint()"], ["java.awt.Color", "com.lowagie.text.pdf.PdfSpotColor.getAlternativeCS()", "public java.awt.Color getAlternativeCS()"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream)", "public com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char)", "public com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, boolean)", "public com.lowagie.text.pdf.PdfStamper(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, boolean) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.PdfStamper.getMoreInfo()", "public java.util.HashMap getMoreInfo()"], ["void", "com.lowagie.text.pdf.PdfStamper.setMoreInfo(java.util.HashMap)", "public void setMoreInfo(java.util.HashMap)"], ["void", "com.lowagie.text.pdf.PdfStamper.replacePage(com.lowagie.text.pdf.PdfReader, int, int)", "public void replacePage(com.lowagie.text.pdf.PdfReader, int, int)"], ["void", "com.lowagie.text.pdf.PdfStamper.insertPage(int, com.lowagie.text.Rectangle)", "public void insertPage(int, com.lowagie.text.Rectangle)"], ["com.lowagie.text.pdf.PdfSignatureAppearance", "com.lowagie.text.pdf.PdfStamper.getSignatureAppearance()", "public com.lowagie.text.pdf.PdfSignatureAppearance getSignatureAppearance()"], ["void", "com.lowagie.text.pdf.PdfStamper.close()", "public void close() throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfStamper.getUnderContent(int)", "public com.lowagie.text.pdf.PdfContentByte getUnderContent(int)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfStamper.getOverContent(int)", "public com.lowagie.text.pdf.PdfContentByte getOverContent(int)"], ["boolean", "com.lowagie.text.pdf.PdfStamper.isRotateContents()", "public boolean isRotateContents()"], ["void", "com.lowagie.text.pdf.PdfStamper.setRotateContents(boolean)", "public void setRotateContents(boolean)"], ["void", "com.lowagie.text.pdf.PdfStamper.setEncryption(byte[], byte[], int, boolean)", "public void setEncryption(byte[], byte[], int, boolean) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfStamper.setEncryption(byte[], byte[], int, int)", "public void setEncryption(byte[], byte[], int, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfStamper.setEncryption(boolean, java.lang.String, java.lang.String, int)", "public void setEncryption(boolean, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfStamper.setEncryption(int, java.lang.String, java.lang.String, int)", "public void setEncryption(int, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfStamper.setEncryption(java.security.cert.Certificate[], int[], int)", "public void setEncryption(java.security.cert.Certificate[], int[], int) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfImportedPage", "com.lowagie.text.pdf.PdfStamper.getImportedPage(com.lowagie.text.pdf.PdfReader, int)", "public com.lowagie.text.pdf.PdfImportedPage getImportedPage(com.lowagie.text.pdf.PdfReader, int)"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfStamper.getWriter()", "public com.lowagie.text.pdf.PdfWriter getWriter()"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.PdfStamper.getReader()", "public com.lowagie.text.pdf.PdfReader getReader()"], ["com.lowagie.text.pdf.AcroFields", "com.lowagie.text.pdf.PdfStamper.getAcroFields()", "public com.lowagie.text.pdf.AcroFields getAcroFields()"], ["void", "com.lowagie.text.pdf.PdfStamper.setFormFlattening(boolean)", "public void setFormFlattening(boolean)"], ["void", "com.lowagie.text.pdf.PdfStamper.setFreeTextFlattening(boolean)", "public void setFreeTextFlattening(boolean)"], ["void", "com.lowagie.text.pdf.PdfStamper.addAnnotation(com.lowagie.text.pdf.PdfAnnotation, int)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation, int)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PdfStamper.addSignature(java.lang.String, int, float, float, float, float)", "public com.lowagie.text.pdf.PdfFormField addSignature(java.lang.String, int, float, float, float, float)"], ["void", "com.lowagie.text.pdf.PdfStamper.addComments(com.lowagie.text.pdf.FdfReader)", "public void addComments(com.lowagie.text.pdf.FdfReader) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfStamper.setOutlines(java.util.List)", "public void setOutlines(java.util.List)"], ["void", "com.lowagie.text.pdf.PdfStamper.setThumbnail(com.lowagie.text.Image, int)", "public void setThumbnail(com.lowagie.text.Image, int) throws com.lowagie.text.pdf.PdfException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.PdfStamper.partialFormFlattening(java.lang.String)", "public boolean partialFormFlattening(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfStamper.addJavaScript(java.lang.String)", "public void addJavaScript(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfStamper.addFileAttachment(java.lang.String, byte[], java.lang.String, java.lang.String)", "public void addFileAttachment(java.lang.String, byte[], java.lang.String, java.lang.String) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfStamper.addFileAttachment(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification)", "public void addFileAttachment(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfStamper.makePackage(com.lowagie.text.pdf.PdfName)", "public void makePackage(com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfStamper.makePackage(com.lowagie.text.pdf.collection.PdfCollection)", "public void makePackage(com.lowagie.text.pdf.collection.PdfCollection)"], ["void", "com.lowagie.text.pdf.PdfStamper.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.PdfStamper.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfStamper.setXmpMetadata(byte[])", "public void setXmpMetadata(byte[])"], ["boolean", "com.lowagie.text.pdf.PdfStamper.isFullCompression()", "public boolean isFullCompression()"], ["void", "com.lowagie.text.pdf.PdfStamper.setFullCompression()", "public void setFullCompression()"], ["void", "com.lowagie.text.pdf.PdfStamper.setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction, int)", "public void setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction, int) throws com.lowagie.text.pdf.PdfException"], ["void", "com.lowagie.text.pdf.PdfStamper.setDuration(int, int)", "public void setDuration(int, int)"], ["void", "com.lowagie.text.pdf.PdfStamper.setTransition(com.lowagie.text.pdf.PdfTransition, int)", "public void setTransition(com.lowagie.text.pdf.PdfTransition, int)"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper.createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, java.io.File, boolean)", "public static com.lowagie.text.pdf.PdfStamper createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, java.io.File, boolean) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper.createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char)", "public static com.lowagie.text.pdf.PdfStamper createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfStamper", "com.lowagie.text.pdf.PdfStamper.createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, java.io.File)", "public static com.lowagie.text.pdf.PdfStamper createSignature(com.lowagie.text.pdf.PdfReader, java.io.OutputStream, char, java.io.File) throws com.lowagie.text.DocumentException, java.io.IOException"], ["java.util.Map", "com.lowagie.text.pdf.PdfStamper.getPdfLayers()", "public java.util.Map getPdfLayers()"], ["void", "com.lowagie.text.pdf.PdfStamperImp.registerReader(com.lowagie.text.pdf.PdfReader, boolean)", "public void registerReader(com.lowagie.text.pdf.PdfReader, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfStamperImp.unRegisterReader(com.lowagie.text.pdf.PdfReader)", "public void unRegisterReader(com.lowagie.text.pdf.PdfReader)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.addComments(com.lowagie.text.pdf.FdfReader)", "public void addComments(com.lowagie.text.pdf.FdfReader) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfStamperImp.getPageReference(int)", "public com.lowagie.text.pdf.PdfIndirectReference getPageReference(int)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.addAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setSigFlags(int)", "public void setSigFlags(int)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public void setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction) throws com.lowagie.text.pdf.PdfException"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setDuration(int)", "public void setDuration(int)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setTransition(com.lowagie.text.pdf.PdfTransition)", "public void setTransition(com.lowagie.text.pdf.PdfTransition)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setAdditionalAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public void setAdditionalAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction) throws com.lowagie.text.pdf.PdfException"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setOpenAction(com.lowagie.text.pdf.PdfAction)", "public void setOpenAction(com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setOpenAction(java.lang.String)", "public void setOpenAction(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfStamperImp.setThumbnail(com.lowagie.text.Image)", "public void setThumbnail(com.lowagie.text.Image)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfStamperImp.getDirectContentUnder()", "public com.lowagie.text.pdf.PdfContentByte getDirectContentUnder()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfStamperImp.getDirectContent()", "public com.lowagie.text.pdf.PdfContentByte getDirectContent()"], ["java.util.Map", "com.lowagie.text.pdf.PdfStamperImp.getPdfLayers()", "public java.util.Map getPdfLayers()"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.PdfStream(byte[])", "public com.lowagie.text.pdf.PdfStream(byte[])"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.PdfStream(java.io.InputStream, com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.PdfStream(java.io.InputStream, com.lowagie.text.pdf.PdfWriter)"], ["void", "com.lowagie.text.pdf.PdfStream.writeLength()", "public void writeLength() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfStream.getRawLength()", "public int getRawLength()"], ["void", "com.lowagie.text.pdf.PdfStream.flateCompress()", "public void flateCompress()"], ["void", "com.lowagie.text.pdf.PdfStream.flateCompress(int)", "public void flateCompress(int)"], ["void", "com.lowagie.text.pdf.PdfStream.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfStream.writeContent(java.io.OutputStream)", "public void writeContent(java.io.OutputStream) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.PdfStream.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfString()", "public com.lowagie.text.pdf.PdfString()"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfString(java.lang.String)", "public com.lowagie.text.pdf.PdfString(java.lang.String)"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfString(java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.PdfString(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfString(byte[])", "public com.lowagie.text.pdf.PdfString(byte[])"], ["void", "com.lowagie.text.pdf.PdfString.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.PdfString.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.lowagie.text.pdf.PdfString.getEncoding()", "public java.lang.String getEncoding()"], ["java.lang.String", "com.lowagie.text.pdf.PdfString.toUnicodeString()", "public java.lang.String toUnicodeString()"], ["byte[]", "com.lowagie.text.pdf.PdfString.getBytes()", "public byte[] getBytes()"], ["byte[]", "com.lowagie.text.pdf.PdfString.getOriginalBytes()", "public byte[] getOriginalBytes()"], ["com.lowagie.text.pdf.PdfString", "com.lowagie.text.pdf.PdfString.setHexWriting(boolean)", "public com.lowagie.text.pdf.PdfString setHexWriting(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfString.isHexWriting()", "public boolean isHexWriting()"], ["com.lowagie.text.pdf.PdfStructureElement", "com.lowagie.text.pdf.PdfStructureElement(com.lowagie.text.pdf.PdfStructureElement, com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfStructureElement(com.lowagie.text.pdf.PdfStructureElement, com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfStructureElement", "com.lowagie.text.pdf.PdfStructureElement(com.lowagie.text.pdf.PdfStructureTreeRoot, com.lowagie.text.pdf.PdfName)", "public com.lowagie.text.pdf.PdfStructureElement(com.lowagie.text.pdf.PdfStructureTreeRoot, com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfStructureElement.getParent()", "public com.lowagie.text.pdf.PdfDictionary getParent()"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfStructureElement.getReference()", "public com.lowagie.text.pdf.PdfIndirectReference getReference()"], ["void", "com.lowagie.text.pdf.PdfStructureTreeRoot.mapRole(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)", "public void mapRole(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfName)"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfStructureTreeRoot.getWriter()", "public com.lowagie.text.pdf.PdfWriter getWriter()"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfStructureTreeRoot.getReference()", "public com.lowagie.text.pdf.PdfIndirectReference getReference()"], ["int", "com.lowagie.text.pdf.PdfTable.type()", "public int type()"], ["boolean", "com.lowagie.text.pdf.PdfTable.hasToFitPageTable()", "public final boolean hasToFitPageTable()"], ["boolean", "com.lowagie.text.pdf.PdfTable.hasToFitPageCells()", "public final boolean hasToFitPageCells()"], ["float", "com.lowagie.text.pdf.PdfTable.getOffset()", "public float getOffset()"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PdfTemplate.createTemplate(com.lowagie.text.pdf.PdfWriter, float, float)", "public static com.lowagie.text.pdf.PdfTemplate createTemplate(com.lowagie.text.pdf.PdfWriter, float, float)"], ["void", "com.lowagie.text.pdf.PdfTemplate.setWidth(float)", "public void setWidth(float)"], ["void", "com.lowagie.text.pdf.PdfTemplate.setHeight(float)", "public void setHeight(float)"], ["float", "com.lowagie.text.pdf.PdfTemplate.getWidth()", "public float getWidth()"], ["float", "com.lowagie.text.pdf.PdfTemplate.getHeight()", "public float getHeight()"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfTemplate.getBoundingBox()", "public com.lowagie.text.Rectangle getBoundingBox()"], ["void", "com.lowagie.text.pdf.PdfTemplate.setBoundingBox(com.lowagie.text.Rectangle)", "public void setBoundingBox(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.pdf.PdfTemplate.setLayer(com.lowagie.text.pdf.PdfOCG)", "public void setLayer(com.lowagie.text.pdf.PdfOCG)"], ["com.lowagie.text.pdf.PdfOCG", "com.lowagie.text.pdf.PdfTemplate.getLayer()", "public com.lowagie.text.pdf.PdfOCG getLayer()"], ["void", "com.lowagie.text.pdf.PdfTemplate.setMatrix(float, float, float, float, float, float)", "public void setMatrix(float, float, float, float, float, float)"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfTemplate.getIndirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference getIndirectReference()"], ["void", "com.lowagie.text.pdf.PdfTemplate.beginVariableText()", "public void beginVariableText()"], ["void", "com.lowagie.text.pdf.PdfTemplate.endVariableText()", "public void endVariableText()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfTemplate.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["int", "com.lowagie.text.pdf.PdfTemplate.getType()", "public int getType()"], ["com.lowagie.text.pdf.PdfTransparencyGroup", "com.lowagie.text.pdf.PdfTemplate.getGroup()", "public com.lowagie.text.pdf.PdfTransparencyGroup getGroup()"], ["void", "com.lowagie.text.pdf.PdfTemplate.setGroup(com.lowagie.text.pdf.PdfTransparencyGroup)", "public void setGroup(com.lowagie.text.pdf.PdfTransparencyGroup)"], ["com.lowagie.text.pdf.PdfTextArray", "com.lowagie.text.pdf.PdfTextArray(java.lang.String)", "public com.lowagie.text.pdf.PdfTextArray(java.lang.String)"], ["com.lowagie.text.pdf.PdfTextArray", "com.lowagie.text.pdf.PdfTextArray()", "public com.lowagie.text.pdf.PdfTextArray()"], ["void", "com.lowagie.text.pdf.PdfTextArray.add(com.lowagie.text.pdf.PdfNumber)", "public void add(com.lowagie.text.pdf.PdfNumber)"], ["void", "com.lowagie.text.pdf.PdfTextArray.add(float)", "public void add(float)"], ["void", "com.lowagie.text.pdf.PdfTextArray.add(java.lang.String)", "public void add(java.lang.String)"], ["com.lowagie.text.pdf.PdfTransition", "com.lowagie.text.pdf.PdfTransition()", "public com.lowagie.text.pdf.PdfTransition()"], ["com.lowagie.text.pdf.PdfTransition", "com.lowagie.text.pdf.PdfTransition(int)", "public com.lowagie.text.pdf.PdfTransition(int)"], ["com.lowagie.text.pdf.PdfTransition", "com.lowagie.text.pdf.PdfTransition(int, int)", "public com.lowagie.text.pdf.PdfTransition(int, int)"], ["int", "com.lowagie.text.pdf.PdfTransition.getDuration()", "public int getDuration()"], ["int", "com.lowagie.text.pdf.PdfTransition.getType()", "public int getType()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfTransition.getTransitionDictionary()", "public com.lowagie.text.pdf.PdfDictionary getTransitionDictionary()"], ["com.lowagie.text.pdf.PdfTransparencyGroup", "com.lowagie.text.pdf.PdfTransparencyGroup()", "public com.lowagie.text.pdf.PdfTransparencyGroup()"], ["void", "com.lowagie.text.pdf.PdfTransparencyGroup.setIsolated(boolean)", "public void setIsolated(boolean)"], ["void", "com.lowagie.text.pdf.PdfTransparencyGroup.setKnockout(boolean)", "public void setKnockout(boolean)"], ["void", "com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference.toPdf(java.io.OutputStream)", "public void toPdf(java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference.toPdf(int, java.io.OutputStream)", "public void toPdf(int, java.io.OutputStream) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["boolean", "com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference.hashCode()", "public int hashCode()"], ["void", "com.lowagie.text.pdf.PdfWriter$PdfTrailer.toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream)", "public void toPdf(com.lowagie.text.pdf.PdfWriter, java.io.OutputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfWriter.getInstance(com.lowagie.text.Document, java.io.OutputStream)", "public static com.lowagie.text.pdf.PdfWriter getInstance(com.lowagie.text.Document, java.io.OutputStream) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfWriter", "com.lowagie.text.pdf.PdfWriter.getInstance(com.lowagie.text.Document, java.io.OutputStream, com.lowagie.text.DocListener)", "public static com.lowagie.text.pdf.PdfWriter getInstance(com.lowagie.text.Document, java.io.OutputStream, com.lowagie.text.DocListener) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfWriter.getInfo()", "public com.lowagie.text.pdf.PdfDictionary getInfo()"], ["float", "com.lowagie.text.pdf.PdfWriter.getVerticalPosition(boolean)", "public float getVerticalPosition(boolean)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfWriter.getDirectContent()", "public com.lowagie.text.pdf.PdfContentByte getDirectContent()"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.PdfWriter.getDirectContentUnder()", "public com.lowagie.text.pdf.PdfContentByte getDirectContentUnder()"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject, boolean)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject, boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfIndirectReference)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfIndirectReference) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfIndirectReference, boolean)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject, com.lowagie.text.pdf.PdfIndirectReference, boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject, int)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject, int) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectObject", "com.lowagie.text.pdf.PdfWriter.addToBody(com.lowagie.text.pdf.PdfObject, int, boolean)", "public com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject, int, boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfWriter.getPdfIndirectReference()", "public com.lowagie.text.pdf.PdfIndirectReference getPdfIndirectReference()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfWriter.getExtraCatalog()", "public com.lowagie.text.pdf.PdfDictionary getExtraCatalog()"], ["void", "com.lowagie.text.pdf.PdfWriter.setLinearPageMode()", "public void setLinearPageMode()"], ["int", "com.lowagie.text.pdf.PdfWriter.reorderPages(int[])", "public int reorderPages(int[]) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfIndirectReference", "com.lowagie.text.pdf.PdfWriter.getPageReference(int)", "public com.lowagie.text.pdf.PdfIndirectReference getPageReference(int)"], ["int", "com.lowagie.text.pdf.PdfWriter.getPageNumber()", "public int getPageNumber()"], ["int", "com.lowagie.text.pdf.PdfWriter.getCurrentPageNumber()", "public int getCurrentPageNumber()"], ["void", "com.lowagie.text.pdf.PdfWriter.setPageEvent(com.lowagie.text.pdf.PdfPageEvent)", "public void setPageEvent(com.lowagie.text.pdf.PdfPageEvent)"], ["com.lowagie.text.pdf.PdfPageEvent", "com.lowagie.text.pdf.PdfWriter.getPageEvent()", "public com.lowagie.text.pdf.PdfPageEvent getPageEvent()"], ["void", "com.lowagie.text.pdf.PdfWriter.open()", "public void open()"], ["void", "com.lowagie.text.pdf.PdfWriter.close()", "public void close()"], ["com.lowagie.text.pdf.PdfOutline", "com.lowagie.text.pdf.PdfWriter.getRootOutline()", "public com.lowagie.text.pdf.PdfOutline getRootOutline()"], ["void", "com.lowagie.text.pdf.PdfWriter.setOutlines(java.util.List)", "public void setOutlines(java.util.List)"], ["void", "com.lowagie.text.pdf.PdfWriter.setPdfVersion(char)", "public void setPdfVersion(char)"], ["void", "com.lowagie.text.pdf.PdfWriter.setAtLeastPdfVersion(char)", "public void setAtLeastPdfVersion(char)"], ["void", "com.lowagie.text.pdf.PdfWriter.setPdfVersion(com.lowagie.text.pdf.PdfName)", "public void setPdfVersion(com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.PdfWriter.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.PdfWriter.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.PdfWriter.setPageLabels(com.lowagie.text.pdf.PdfPageLabels)", "public void setPageLabels(com.lowagie.text.pdf.PdfPageLabels)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(com.lowagie.text.pdf.PdfAction)", "public void addJavaScript(com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(java.lang.String, boolean)", "public void addJavaScript(java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(java.lang.String)", "public void addJavaScript(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(java.lang.String, com.lowagie.text.pdf.PdfAction)", "public void addJavaScript(java.lang.String, com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(java.lang.String, java.lang.String, boolean)", "public void addJavaScript(java.lang.String, java.lang.String, boolean)"], ["void", "com.lowagie.text.pdf.PdfWriter.addJavaScript(java.lang.String, java.lang.String)", "public void addJavaScript(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfWriter.addFileAttachment(java.lang.String, byte[], java.lang.String, java.lang.String)", "public void addFileAttachment(java.lang.String, byte[], java.lang.String, java.lang.String) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfWriter.addFileAttachment(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification)", "public void addFileAttachment(java.lang.String, com.lowagie.text.pdf.PdfFileSpecification) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfWriter.addFileAttachment(com.lowagie.text.pdf.PdfFileSpecification)", "public void addFileAttachment(com.lowagie.text.pdf.PdfFileSpecification) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfWriter.setOpenAction(java.lang.String)", "public void setOpenAction(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfWriter.setOpenAction(com.lowagie.text.pdf.PdfAction)", "public void setOpenAction(com.lowagie.text.pdf.PdfAction)"], ["void", "com.lowagie.text.pdf.PdfWriter.setAdditionalAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public void setAdditionalAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setCollection(com.lowagie.text.pdf.collection.PdfCollection)", "public void setCollection(com.lowagie.text.pdf.collection.PdfCollection)"], ["com.lowagie.text.pdf.PdfAcroForm", "com.lowagie.text.pdf.PdfWriter.getAcroForm()", "public com.lowagie.text.pdf.PdfAcroForm getAcroForm()"], ["void", "com.lowagie.text.pdf.PdfWriter.addAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["void", "com.lowagie.text.pdf.PdfWriter.addCalculationOrder(com.lowagie.text.pdf.PdfFormField)", "public void addCalculationOrder(com.lowagie.text.pdf.PdfFormField)"], ["void", "com.lowagie.text.pdf.PdfWriter.setSigFlags(int)", "public void setSigFlags(int)"], ["void", "com.lowagie.text.pdf.PdfWriter.setXmpMetadata(byte[])", "public void setXmpMetadata(byte[])"], ["void", "com.lowagie.text.pdf.PdfWriter.setPageXmpMetadata(byte[])", "public void setPageXmpMetadata(byte[])"], ["void", "com.lowagie.text.pdf.PdfWriter.createXmpMetadata()", "public void createXmpMetadata()"], ["void", "com.lowagie.text.pdf.PdfWriter.setPDFXConformance(int)", "public void setPDFXConformance(int)"], ["int", "com.lowagie.text.pdf.PdfWriter.getPDFXConformance()", "public int getPDFXConformance()"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isPdfX()", "public boolean isPdfX()"], ["void", "com.lowagie.text.pdf.PdfWriter.setOutputIntents(java.lang.String, java.lang.String, java.lang.String, java.lang.String, byte[])", "public void setOutputIntents(java.lang.String, java.lang.String, java.lang.String, java.lang.String, byte[]) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.PdfWriter.setOutputIntents(com.lowagie.text.pdf.PdfReader, boolean)", "public boolean setOutputIntents(com.lowagie.text.pdf.PdfReader, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.PdfWriter.setEncryption(byte[], byte[], int, int)", "public void setEncryption(byte[], byte[], int, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setEncryption(java.security.cert.Certificate[], int[], int)", "public void setEncryption(java.security.cert.Certificate[], int[], int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setEncryption(byte[], byte[], int, boolean)", "public void setEncryption(byte[], byte[], int, boolean) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setEncryption(boolean, java.lang.String, java.lang.String, int)", "public void setEncryption(boolean, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setEncryption(int, java.lang.String, java.lang.String, int)", "public void setEncryption(int, java.lang.String, java.lang.String, int) throws com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isFullCompression()", "public boolean isFullCompression()"], ["void", "com.lowagie.text.pdf.PdfWriter.setFullCompression()", "public void setFullCompression()"], ["int", "com.lowagie.text.pdf.PdfWriter.getCompressionLevel()", "public int getCompressionLevel()"], ["void", "com.lowagie.text.pdf.PdfWriter.setCompressionLevel(int)", "public void setCompressionLevel(int)"], ["void", "com.lowagie.text.pdf.PdfWriter.releaseTemplate(com.lowagie.text.pdf.PdfTemplate)", "public void releaseTemplate(com.lowagie.text.pdf.PdfTemplate) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfImportedPage", "com.lowagie.text.pdf.PdfWriter.getImportedPage(com.lowagie.text.pdf.PdfReader, int)", "public com.lowagie.text.pdf.PdfImportedPage getImportedPage(com.lowagie.text.pdf.PdfReader, int)"], ["void", "com.lowagie.text.pdf.PdfWriter.freeReader(com.lowagie.text.pdf.PdfReader)", "public void freeReader(com.lowagie.text.pdf.PdfReader) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.PdfWriter.getCurrentDocumentSize()", "public int getCurrentDocumentSize()"], ["void", "com.lowagie.text.pdf.PdfWriter.setTagged()", "public void setTagged()"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isTagged()", "public boolean isTagged()"], ["com.lowagie.text.pdf.PdfStructureTreeRoot", "com.lowagie.text.pdf.PdfWriter.getStructureTreeRoot()", "public com.lowagie.text.pdf.PdfStructureTreeRoot getStructureTreeRoot()"], ["com.lowagie.text.pdf.PdfOCProperties", "com.lowagie.text.pdf.PdfWriter.getOCProperties()", "public com.lowagie.text.pdf.PdfOCProperties getOCProperties()"], ["void", "com.lowagie.text.pdf.PdfWriter.addOCGRadioGroup(java.util.ArrayList)", "public void addOCGRadioGroup(java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.PdfWriter.lockLayer(com.lowagie.text.pdf.PdfLayer)", "public void lockLayer(com.lowagie.text.pdf.PdfLayer)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfWriter.getPageSize()", "public com.lowagie.text.Rectangle getPageSize()"], ["void", "com.lowagie.text.pdf.PdfWriter.setCropBoxSize(com.lowagie.text.Rectangle)", "public void setCropBoxSize(com.lowagie.text.Rectangle)"], ["void", "com.lowagie.text.pdf.PdfWriter.setBoxSize(java.lang.String, com.lowagie.text.Rectangle)", "public void setBoxSize(java.lang.String, com.lowagie.text.Rectangle)"], ["com.lowagie.text.Rectangle", "com.lowagie.text.pdf.PdfWriter.getBoxSize(java.lang.String)", "public com.lowagie.text.Rectangle getBoxSize(java.lang.String)"], ["void", "com.lowagie.text.pdf.PdfWriter.setPageEmpty(boolean)", "public void setPageEmpty(boolean)"], ["void", "com.lowagie.text.pdf.PdfWriter.setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction)", "public void setPageAction(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfAction) throws com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.PdfWriter.setDuration(int)", "public void setDuration(int)"], ["void", "com.lowagie.text.pdf.PdfWriter.setTransition(com.lowagie.text.pdf.PdfTransition)", "public void setTransition(com.lowagie.text.pdf.PdfTransition)"], ["void", "com.lowagie.text.pdf.PdfWriter.setThumbnail(com.lowagie.text.Image)", "public void setThumbnail(com.lowagie.text.Image) throws com.lowagie.text.pdf.PdfException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfWriter.getGroup()", "public com.lowagie.text.pdf.PdfDictionary getGroup()"], ["void", "com.lowagie.text.pdf.PdfWriter.setGroup(com.lowagie.text.pdf.PdfDictionary)", "public void setGroup(com.lowagie.text.pdf.PdfDictionary)"], ["float", "com.lowagie.text.pdf.PdfWriter.getSpaceCharRatio()", "public float getSpaceCharRatio()"], ["void", "com.lowagie.text.pdf.PdfWriter.setSpaceCharRatio(float)", "public void setSpaceCharRatio(float)"], ["void", "com.lowagie.text.pdf.PdfWriter.setRunDirection(int)", "public void setRunDirection(int)"], ["int", "com.lowagie.text.pdf.PdfWriter.getRunDirection()", "public int getRunDirection()"], ["float", "com.lowagie.text.pdf.PdfWriter.getUserunit()", "public float getUserunit()"], ["void", "com.lowagie.text.pdf.PdfWriter.setUserunit(float)", "public void setUserunit(float) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.PdfWriter.getDefaultColorspace()", "public com.lowagie.text.pdf.PdfDictionary getDefaultColorspace()"], ["void", "com.lowagie.text.pdf.PdfWriter.setDefaultColorspace(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void setDefaultColorspace(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isStrictImageSequence()", "public boolean isStrictImageSequence()"], ["void", "com.lowagie.text.pdf.PdfWriter.setStrictImageSequence(boolean)", "public void setStrictImageSequence(boolean)"], ["void", "com.lowagie.text.pdf.PdfWriter.clearTextWrap()", "public void clearTextWrap() throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfWriter.addDirectImageSimple(com.lowagie.text.Image)", "public com.lowagie.text.pdf.PdfName addDirectImageSimple(com.lowagie.text.Image) throws com.lowagie.text.pdf.PdfException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.PdfWriter.addDirectImageSimple(com.lowagie.text.Image, com.lowagie.text.pdf.PdfIndirectReference)", "public com.lowagie.text.pdf.PdfName addDirectImageSimple(com.lowagie.text.Image, com.lowagie.text.pdf.PdfIndirectReference) throws com.lowagie.text.pdf.PdfException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.PdfWriter.fitsPage(com.lowagie.text.Table, float)", "public boolean fitsPage(com.lowagie.text.Table, float)"], ["boolean", "com.lowagie.text.pdf.PdfWriter.fitsPage(com.lowagie.text.Table)", "public boolean fitsPage(com.lowagie.text.Table)"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isUserProperties()", "public boolean isUserProperties()"], ["void", "com.lowagie.text.pdf.PdfWriter.setUserProperties(boolean)", "public void setUserProperties(boolean)"], ["boolean", "com.lowagie.text.pdf.PdfWriter.isRgbTransparencyBlending()", "public boolean isRgbTransparencyBlending()"], ["void", "com.lowagie.text.pdf.PdfWriter.setRgbTransparencyBlending(boolean)", "public void setRgbTransparencyBlending(boolean)"], ["com.lowagie.text.pdf.PdfXConformanceException", "com.lowagie.text.pdf.PdfXConformanceException()", "public com.lowagie.text.pdf.PdfXConformanceException()"], ["com.lowagie.text.pdf.PdfXConformanceException", "com.lowagie.text.pdf.PdfXConformanceException(java.lang.String)", "public com.lowagie.text.pdf.PdfXConformanceException(java.lang.String)"], ["void", "com.lowagie.text.pdf.Pfm2afm.convert(com.lowagie.text.pdf.RandomAccessFileOrArray, java.io.OutputStream)", "public static void convert(com.lowagie.text.pdf.RandomAccessFileOrArray, java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.Pfm2afm.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.text.pdf.PushbuttonField", "com.lowagie.text.pdf.PushbuttonField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)", "public com.lowagie.text.pdf.PushbuttonField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)"], ["int", "com.lowagie.text.pdf.PushbuttonField.getLayout()", "public int getLayout()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setLayout(int)", "public void setLayout(int)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.PushbuttonField.getImage()", "public com.lowagie.text.Image getImage()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setImage(com.lowagie.text.Image)", "public void setImage(com.lowagie.text.Image)"], ["com.lowagie.text.pdf.PdfTemplate", "com.lowagie.text.pdf.PushbuttonField.getTemplate()", "public com.lowagie.text.pdf.PdfTemplate getTemplate()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setTemplate(com.lowagie.text.pdf.PdfTemplate)", "public void setTemplate(com.lowagie.text.pdf.PdfTemplate)"], ["int", "com.lowagie.text.pdf.PushbuttonField.getScaleIcon()", "public int getScaleIcon()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setScaleIcon(int)", "public void setScaleIcon(int)"], ["boolean", "com.lowagie.text.pdf.PushbuttonField.isProportionalIcon()", "public boolean isProportionalIcon()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setProportionalIcon(boolean)", "public void setProportionalIcon(boolean)"], ["float", "com.lowagie.text.pdf.PushbuttonField.getIconVerticalAdjustment()", "public float getIconVerticalAdjustment()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setIconVerticalAdjustment(float)", "public void setIconVerticalAdjustment(float)"], ["float", "com.lowagie.text.pdf.PushbuttonField.getIconHorizontalAdjustment()", "public float getIconHorizontalAdjustment()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setIconHorizontalAdjustment(float)", "public void setIconHorizontalAdjustment(float)"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.PushbuttonField.getAppearance()", "public com.lowagie.text.pdf.PdfAppearance getAppearance() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.PushbuttonField.getField()", "public com.lowagie.text.pdf.PdfFormField getField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["boolean", "com.lowagie.text.pdf.PushbuttonField.isIconFitToBounds()", "public boolean isIconFitToBounds()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setIconFitToBounds(boolean)", "public void setIconFitToBounds(boolean)"], ["com.lowagie.text.pdf.PRIndirectReference", "com.lowagie.text.pdf.PushbuttonField.getIconReference()", "public com.lowagie.text.pdf.PRIndirectReference getIconReference()"], ["void", "com.lowagie.text.pdf.PushbuttonField.setIconReference(com.lowagie.text.pdf.PRIndirectReference)", "public void setIconReference(com.lowagie.text.pdf.PRIndirectReference)"], ["com.lowagie.text.pdf.RadioCheckField", "com.lowagie.text.pdf.RadioCheckField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.RadioCheckField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String, java.lang.String)"], ["int", "com.lowagie.text.pdf.RadioCheckField.getCheckType()", "public int getCheckType()"], ["void", "com.lowagie.text.pdf.RadioCheckField.setCheckType(int)", "public void setCheckType(int)"], ["java.lang.String", "com.lowagie.text.pdf.RadioCheckField.getOnValue()", "public java.lang.String getOnValue()"], ["void", "com.lowagie.text.pdf.RadioCheckField.setOnValue(java.lang.String)", "public void setOnValue(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.RadioCheckField.isChecked()", "public boolean isChecked()"], ["void", "com.lowagie.text.pdf.RadioCheckField.setChecked(boolean)", "public void setChecked(boolean)"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.RadioCheckField.getAppearance(boolean, boolean)", "public com.lowagie.text.pdf.PdfAppearance getAppearance(boolean, boolean) throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.RadioCheckField.getAppearanceRadioCircle(boolean)", "public com.lowagie.text.pdf.PdfAppearance getAppearanceRadioCircle(boolean)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.RadioCheckField.getRadioGroup(boolean, boolean)", "public com.lowagie.text.pdf.PdfFormField getRadioGroup(boolean, boolean)"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.RadioCheckField.getRadioField()", "public com.lowagie.text.pdf.PdfFormField getRadioField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.RadioCheckField.getCheckField()", "public com.lowagie.text.pdf.PdfFormField getCheckField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(java.lang.String)", "public com.lowagie.text.pdf.RandomAccessFileOrArray(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(java.lang.String, boolean, boolean)", "public com.lowagie.text.pdf.RandomAccessFileOrArray(java.lang.String, boolean, boolean) throws java.io.IOException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(java.net.URL)", "public com.lowagie.text.pdf.RandomAccessFileOrArray(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(java.io.InputStream)", "public com.lowagie.text.pdf.RandomAccessFileOrArray(java.io.InputStream) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.RandomAccessFileOrArray.InputStreamToArray(java.io.InputStream)", "public static byte[] InputStreamToArray(java.io.InputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(byte[])", "public com.lowagie.text.pdf.RandomAccessFileOrArray(byte[])"], ["com.lowagie.text.pdf.RandomAccessFileOrArray", "com.lowagie.text.pdf.RandomAccessFileOrArray(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public com.lowagie.text.pdf.RandomAccessFileOrArray(com.lowagie.text.pdf.RandomAccessFileOrArray)"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.pushBack(byte)", "public void pushBack(byte)"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.read()", "public int read() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.read(byte[])", "public int read(byte[]) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.readFully(byte[])", "public void readFully(byte[]) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.readFully(byte[], int, int)", "public void readFully(byte[], int, int) throws java.io.IOException"], ["long", "com.lowagie.text.pdf.RandomAccessFileOrArray.skip(long)", "public long skip(long) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.skipBytes(int)", "public int skipBytes(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.reOpen()", "public void reOpen() throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.RandomAccessFileOrArray.isOpen()", "public boolean isOpen()"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.close()", "public void close() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.length()", "public int length() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.seek(int)", "public void seek(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.seek(long)", "public void seek(long) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.getFilePointer()", "public int getFilePointer() throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.RandomAccessFileOrArray.readBoolean()", "public boolean readBoolean() throws java.io.IOException"], ["byte", "com.lowagie.text.pdf.RandomAccessFileOrArray.readByte()", "public byte readByte() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUnsignedByte()", "public int readUnsignedByte() throws java.io.IOException"], ["short", "com.lowagie.text.pdf.RandomAccessFileOrArray.readShort()", "public short readShort() throws java.io.IOException"], ["short", "com.lowagie.text.pdf.RandomAccessFileOrArray.readShortLE()", "public final short readShortLE() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUnsignedShort()", "public int readUnsignedShort() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUnsignedShortLE()", "public final int readUnsignedShortLE() throws java.io.IOException"], ["char", "com.lowagie.text.pdf.RandomAccessFileOrArray.readChar()", "public char readChar() throws java.io.IOException"], ["char", "com.lowagie.text.pdf.RandomAccessFileOrArray.readCharLE()", "public final char readCharLE() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.readInt()", "public int readInt() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.readIntLE()", "public final int readIntLE() throws java.io.IOException"], ["long", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUnsignedInt()", "public final long readUnsignedInt() throws java.io.IOException"], ["long", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUnsignedIntLE()", "public final long readUnsignedIntLE() throws java.io.IOException"], ["long", "com.lowagie.text.pdf.RandomAccessFileOrArray.readLong()", "public long readLong() throws java.io.IOException"], ["long", "com.lowagie.text.pdf.RandomAccessFileOrArray.readLongLE()", "public final long readLongLE() throws java.io.IOException"], ["float", "com.lowagie.text.pdf.RandomAccessFileOrArray.readFloat()", "public float readFloat() throws java.io.IOException"], ["float", "com.lowagie.text.pdf.RandomAccessFileOrArray.readFloatLE()", "public final float readFloatLE() throws java.io.IOException"], ["double", "com.lowagie.text.pdf.RandomAccessFileOrArray.readDouble()", "public double readDouble() throws java.io.IOException"], ["double", "com.lowagie.text.pdf.RandomAccessFileOrArray.readDoubleLE()", "public final double readDoubleLE() throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.RandomAccessFileOrArray.readLine()", "public java.lang.String readLine() throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.RandomAccessFileOrArray.readUTF()", "public java.lang.String readUTF() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.RandomAccessFileOrArray.getStartOffset()", "public int getStartOffset()"], ["void", "com.lowagie.text.pdf.RandomAccessFileOrArray.setStartOffset(int)", "public void setStartOffset(int)"], ["java.nio.ByteBuffer", "com.lowagie.text.pdf.RandomAccessFileOrArray.getNioByteBuffer()", "public java.nio.ByteBuffer getNioByteBuffer() throws java.io.IOException"], ["java.util.List", "com.lowagie.text.pdf.SequenceList.expand(java.lang.String, int)", "public static java.util.List expand(java.lang.String, int)"], ["com.lowagie.text.pdf.ShadingColor", "com.lowagie.text.pdf.ShadingColor(com.lowagie.text.pdf.PdfShadingPattern)", "public com.lowagie.text.pdf.ShadingColor(com.lowagie.text.pdf.PdfShadingPattern)"], ["com.lowagie.text.pdf.PdfShadingPattern", "com.lowagie.text.pdf.ShadingColor.getPdfShadingPattern()", "public com.lowagie.text.pdf.PdfShadingPattern getPdfShadingPattern()"], ["boolean", "com.lowagie.text.pdf.ShadingColor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.ShadingColor.hashCode()", "public int hashCode()"], ["java.util.List", "com.lowagie.text.pdf.SimpleBookmark.getBookmark(com.lowagie.text.pdf.PdfReader)", "public static java.util.List getBookmark(com.lowagie.text.pdf.PdfReader)"], ["void", "com.lowagie.text.pdf.SimpleBookmark.eliminatePages(java.util.List, int[])", "public static void eliminatePages(java.util.List, int[])"], ["void", "com.lowagie.text.pdf.SimpleBookmark.shiftPageNumbers(java.util.List, int, int[])", "public static void shiftPageNumbers(java.util.List, int, int[])"], ["java.lang.Object[]", "com.lowagie.text.pdf.SimpleBookmark.iterateOutlines(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfIndirectReference, java.util.List, boolean)", "public static java.lang.Object[] iterateOutlines(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfIndirectReference, java.util.List, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.SimpleBookmark.exportToXMLNode(java.util.List, java.io.Writer, int, boolean)", "public static void exportToXMLNode(java.util.List, java.io.Writer, int, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.SimpleBookmark.exportToXML(java.util.List, java.io.OutputStream, java.lang.String, boolean)", "public static void exportToXML(java.util.List, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.SimpleBookmark.exportToXML(java.util.List, java.io.Writer, java.lang.String, boolean)", "public static void exportToXML(java.util.List, java.io.Writer, java.lang.String, boolean) throws java.io.IOException"], ["java.util.List", "com.lowagie.text.pdf.SimpleBookmark.importFromXML(java.io.InputStream)", "public static java.util.List importFromXML(java.io.InputStream) throws java.io.IOException"], ["java.util.List", "com.lowagie.text.pdf.SimpleBookmark.importFromXML(java.io.Reader)", "public static java.util.List importFromXML(java.io.Reader) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.SimpleBookmark.endDocument()", "public void endDocument()"], ["void", "com.lowagie.text.pdf.SimpleBookmark.endElement(java.lang.String)", "public void endElement(java.lang.String)"], ["void", "com.lowagie.text.pdf.SimpleBookmark.startDocument()", "public void startDocument()"], ["void", "com.lowagie.text.pdf.SimpleBookmark.startElement(java.lang.String, java.util.HashMap)", "public void startElement(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.pdf.SimpleBookmark.text(java.lang.String)", "public void text(java.lang.String)"], ["java.util.HashMap", "com.lowagie.text.pdf.SimpleNamedDestination.getNamedDestination(com.lowagie.text.pdf.PdfReader, boolean)", "public static java.util.HashMap getNamedDestination(com.lowagie.text.pdf.PdfReader, boolean)"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.exportToXML(java.util.HashMap, java.io.OutputStream, java.lang.String, boolean)", "public static void exportToXML(java.util.HashMap, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.exportToXML(java.util.HashMap, java.io.Writer, java.lang.String, boolean)", "public static void exportToXML(java.util.HashMap, java.io.Writer, java.lang.String, boolean) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.SimpleNamedDestination.importFromXML(java.io.InputStream)", "public static java.util.HashMap importFromXML(java.io.InputStream) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.SimpleNamedDestination.importFromXML(java.io.Reader)", "public static java.util.HashMap importFromXML(java.io.Reader) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.SimpleNamedDestination.outputNamedDestinationAsNames(java.util.HashMap, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfDictionary outputNamedDestinationAsNames(java.util.HashMap, com.lowagie.text.pdf.PdfWriter)"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.SimpleNamedDestination.outputNamedDestinationAsStrings(java.util.HashMap, com.lowagie.text.pdf.PdfWriter)", "public static com.lowagie.text.pdf.PdfDictionary outputNamedDestinationAsStrings(java.util.HashMap, com.lowagie.text.pdf.PdfWriter) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.SimpleNamedDestination.escapeBinaryString(java.lang.String)", "public static java.lang.String escapeBinaryString(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.SimpleNamedDestination.unEscapeBinaryString(java.lang.String)", "public static java.lang.String unEscapeBinaryString(java.lang.String)"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.endDocument()", "public void endDocument()"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.endElement(java.lang.String)", "public void endElement(java.lang.String)"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.startDocument()", "public void startDocument()"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.startElement(java.lang.String, java.util.HashMap)", "public void startElement(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.pdf.SimpleNamedDestination.text(java.lang.String)", "public void text(java.lang.String)"], ["com.lowagie.text.pdf.SpotColor", "com.lowagie.text.pdf.SpotColor(com.lowagie.text.pdf.PdfSpotColor, float)", "public com.lowagie.text.pdf.SpotColor(com.lowagie.text.pdf.PdfSpotColor, float)"], ["com.lowagie.text.pdf.SpotColor", "com.lowagie.text.pdf.SpotColor(com.lowagie.text.pdf.PdfSpotColor)", "public com.lowagie.text.pdf.SpotColor(com.lowagie.text.pdf.PdfSpotColor)"], ["com.lowagie.text.pdf.PdfSpotColor", "com.lowagie.text.pdf.SpotColor.getPdfSpotColor()", "public com.lowagie.text.pdf.PdfSpotColor getPdfSpotColor()"], ["float", "com.lowagie.text.pdf.SpotColor.getTint()", "public float getTint()"], ["boolean", "com.lowagie.text.pdf.SpotColor.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.SpotColor.hashCode()", "public int hashCode()"], ["void", "com.lowagie.text.pdf.StampContent.setAction(com.lowagie.text.pdf.PdfAction, float, float, float, float)", "public void setAction(com.lowagie.text.pdf.PdfAction, float, float, float, float)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.StampContent.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["com.lowagie.text.pdf.StandardDecryption", "com.lowagie.text.pdf.StandardDecryption(byte[], int, int, int)", "public com.lowagie.text.pdf.StandardDecryption(byte[], int, int, int)"], ["byte[]", "com.lowagie.text.pdf.StandardDecryption.update(byte[], int, int)", "public byte[] update(byte[], int, int)"], ["byte[]", "com.lowagie.text.pdf.StandardDecryption.finish()", "public byte[] finish()"], ["com.lowagie.text.pdf.TextField", "com.lowagie.text.pdf.TextField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)", "public com.lowagie.text.pdf.TextField(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle, java.lang.String)"], ["com.lowagie.text.pdf.PdfAppearance", "com.lowagie.text.pdf.TextField.getAppearance()", "public com.lowagie.text.pdf.PdfAppearance getAppearance() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.TextField.getTextField()", "public com.lowagie.text.pdf.PdfFormField getTextField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.TextField.getComboField()", "public com.lowagie.text.pdf.PdfFormField getComboField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfFormField", "com.lowagie.text.pdf.TextField.getListField()", "public com.lowagie.text.pdf.PdfFormField getListField() throws java.io.IOException, com.lowagie.text.DocumentException"], ["java.lang.String", "com.lowagie.text.pdf.TextField.getDefaultText()", "public java.lang.String getDefaultText()"], ["void", "com.lowagie.text.pdf.TextField.setDefaultText(java.lang.String)", "public void setDefaultText(java.lang.String)"], ["java.lang.String[]", "com.lowagie.text.pdf.TextField.getChoices()", "public java.lang.String[] getChoices()"], ["void", "com.lowagie.text.pdf.TextField.setChoices(java.lang.String[])", "public void setChoices(java.lang.String[])"], ["java.lang.String[]", "com.lowagie.text.pdf.TextField.getChoiceExports()", "public java.lang.String[] getChoiceExports()"], ["void", "com.lowagie.text.pdf.TextField.setChoiceExports(java.lang.String[])", "public void setChoiceExports(java.lang.String[])"], ["int", "com.lowagie.text.pdf.TextField.getChoiceSelection()", "public int getChoiceSelection()"], ["void", "com.lowagie.text.pdf.TextField.setChoiceSelection(int)", "public void setChoiceSelection(int)"], ["void", "com.lowagie.text.pdf.TextField.setExtraMargin(float, float)", "public void setExtraMargin(float, float)"], ["java.util.ArrayList", "com.lowagie.text.pdf.TextField.getSubstitutionFonts()", "public java.util.ArrayList getSubstitutionFonts()"], ["void", "com.lowagie.text.pdf.TextField.setSubstitutionFonts(java.util.ArrayList)", "public void setSubstitutionFonts(java.util.ArrayList)"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.TextField.getExtensionFont()", "public com.lowagie.text.pdf.BaseFont getExtensionFont()"], ["void", "com.lowagie.text.pdf.TextField.setExtensionFont(com.lowagie.text.pdf.BaseFont)", "public void setExtensionFont(com.lowagie.text.pdf.BaseFont)"], ["int", "com.lowagie.text.pdf.TrueTypeFont.getKerning(int, int)", "public int getKerning(int, int)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.TrueTypeFont.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream() throws java.io.IOException, com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.TrueTypeFont.getFontDescriptor(int, float)", "public float getFontDescriptor(int, float)"], ["int[]", "com.lowagie.text.pdf.TrueTypeFont.getMetricsTT(int)", "public int[] getMetricsTT(int)"], ["java.lang.String", "com.lowagie.text.pdf.TrueTypeFont.getPostscriptFontName()", "public java.lang.String getPostscriptFontName()"], ["java.lang.String[]", "com.lowagie.text.pdf.TrueTypeFont.getCodePagesSupported()", "public java.lang.String[] getCodePagesSupported()"], ["java.lang.String[][]", "com.lowagie.text.pdf.TrueTypeFont.getFullFontName()", "public java.lang.String[][] getFullFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.TrueTypeFont.getAllNameEntries()", "public java.lang.String[][] getAllNameEntries()"], ["java.lang.String[][]", "com.lowagie.text.pdf.TrueTypeFont.getFamilyFontName()", "public java.lang.String[][] getFamilyFontName()"], ["boolean", "com.lowagie.text.pdf.TrueTypeFont.hasKernPairs()", "public boolean hasKernPairs()"], ["void", "com.lowagie.text.pdf.TrueTypeFont.setPostscriptFontName(java.lang.String)", "public void setPostscriptFontName(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.TrueTypeFont.setKerning(int, int, int)", "public boolean setKerning(int, int, int)"], ["int", "com.lowagie.text.pdf.TrueTypeFontUnicode.getWidth(int)", "public int getWidth(int)"], ["int", "com.lowagie.text.pdf.TrueTypeFontUnicode.getWidth(java.lang.String)", "public int getWidth(java.lang.String)"], ["int", "com.lowagie.text.pdf.TrueTypeFontUnicode.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.TrueTypeFontUnicode.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream() throws java.io.IOException, com.lowagie.text.DocumentException"], ["int[]", "com.lowagie.text.pdf.TrueTypeFontUnicode.getMetricsTT(int)", "public int[] getMetricsTT(int)"], ["boolean", "com.lowagie.text.pdf.TrueTypeFontUnicode.charExists(int)", "public boolean charExists(int)"], ["boolean", "com.lowagie.text.pdf.TrueTypeFontUnicode.setCharAdvance(int, int)", "public boolean setCharAdvance(int, int)"], ["int[]", "com.lowagie.text.pdf.TrueTypeFontUnicode.getCharBBox(int)", "public int[] getCharBBox(int)"], ["int", "com.lowagie.text.pdf.Type1Font.getKerning(int, int)", "public int getKerning(int, int)"], ["void", "com.lowagie.text.pdf.Type1Font.process(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public void process(com.lowagie.text.pdf.RandomAccessFileOrArray) throws com.lowagie.text.DocumentException, java.io.IOException"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.Type1Font.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream() throws com.lowagie.text.DocumentException"], ["float", "com.lowagie.text.pdf.Type1Font.getFontDescriptor(int, float)", "public float getFontDescriptor(int, float)"], ["java.lang.String", "com.lowagie.text.pdf.Type1Font.getPostscriptFontName()", "public java.lang.String getPostscriptFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type1Font.getFullFontName()", "public java.lang.String[][] getFullFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type1Font.getAllNameEntries()", "public java.lang.String[][] getAllNameEntries()"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type1Font.getFamilyFontName()", "public java.lang.String[][] getFamilyFontName()"], ["boolean", "com.lowagie.text.pdf.Type1Font.hasKernPairs()", "public boolean hasKernPairs()"], ["void", "com.lowagie.text.pdf.Type1Font.setPostscriptFontName(java.lang.String)", "public void setPostscriptFontName(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.Type1Font.setKerning(int, int, int)", "public boolean setKerning(int, int, int)"], ["com.lowagie.text.pdf.Type3Font", "com.lowagie.text.pdf.Type3Font(com.lowagie.text.pdf.PdfWriter, char[], boolean)", "public com.lowagie.text.pdf.Type3Font(com.lowagie.text.pdf.PdfWriter, char[], boolean)"], ["com.lowagie.text.pdf.Type3Font", "com.lowagie.text.pdf.Type3Font(com.lowagie.text.pdf.PdfWriter, boolean)", "public com.lowagie.text.pdf.Type3Font(com.lowagie.text.pdf.PdfWriter, boolean)"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.Type3Font.defineGlyph(char, float, float, float, float, float)", "public com.lowagie.text.pdf.PdfContentByte defineGlyph(char, float, float, float, float, float)"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type3Font.getFamilyFontName()", "public java.lang.String[][] getFamilyFontName()"], ["float", "com.lowagie.text.pdf.Type3Font.getFontDescriptor(int, float)", "public float getFontDescriptor(int, float)"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type3Font.getFullFontName()", "public java.lang.String[][] getFullFontName()"], ["java.lang.String[][]", "com.lowagie.text.pdf.Type3Font.getAllNameEntries()", "public java.lang.String[][] getAllNameEntries()"], ["int", "com.lowagie.text.pdf.Type3Font.getKerning(int, int)", "public int getKerning(int, int)"], ["java.lang.String", "com.lowagie.text.pdf.Type3Font.getPostscriptFontName()", "public java.lang.String getPostscriptFontName()"], ["boolean", "com.lowagie.text.pdf.Type3Font.hasKernPairs()", "public boolean hasKernPairs()"], ["boolean", "com.lowagie.text.pdf.Type3Font.setKerning(int, int, int)", "public boolean setKerning(int, int, int)"], ["void", "com.lowagie.text.pdf.Type3Font.setPostscriptFontName(java.lang.String)", "public void setPostscriptFontName(java.lang.String)"], ["com.lowagie.text.pdf.PdfStream", "com.lowagie.text.pdf.Type3Font.getFullFontStream()", "public com.lowagie.text.pdf.PdfStream getFullFontStream()"], ["int", "com.lowagie.text.pdf.Type3Font.getWidth(int)", "public int getWidth(int)"], ["int", "com.lowagie.text.pdf.Type3Font.getWidth(java.lang.String)", "public int getWidth(java.lang.String)"], ["int[]", "com.lowagie.text.pdf.Type3Font.getCharBBox(int)", "public int[] getCharBBox(int)"], ["boolean", "com.lowagie.text.pdf.Type3Font.charExists(int)", "public boolean charExists(int)"], ["boolean", "com.lowagie.text.pdf.Type3Font.setCharAdvance(int, int)", "public boolean setCharAdvance(int, int)"], ["void", "com.lowagie.text.pdf.Type3Glyph.addImage(com.lowagie.text.Image, float, float, float, float, float, float, boolean)", "public void addImage(com.lowagie.text.Image, float, float, float, float, float, float, boolean) throws com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.PdfContentByte", "com.lowagie.text.pdf.Type3Glyph.getDuplicate()", "public com.lowagie.text.pdf.PdfContentByte getDuplicate()"], ["com.lowagie.text.pdf.VerticalText", "com.lowagie.text.pdf.VerticalText(com.lowagie.text.pdf.PdfContentByte)", "public com.lowagie.text.pdf.VerticalText(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.VerticalText.addText(com.lowagie.text.Phrase)", "public void addText(com.lowagie.text.Phrase)"], ["void", "com.lowagie.text.pdf.VerticalText.addText(com.lowagie.text.Chunk)", "public void addText(com.lowagie.text.Chunk)"], ["void", "com.lowagie.text.pdf.VerticalText.setVerticalLayout(float, float, float, int, float)", "public void setVerticalLayout(float, float, float, int, float)"], ["void", "com.lowagie.text.pdf.VerticalText.setLeading(float)", "public void setLeading(float)"], ["float", "com.lowagie.text.pdf.VerticalText.getLeading()", "public float getLeading()"], ["int", "com.lowagie.text.pdf.VerticalText.go()", "public int go()"], ["int", "com.lowagie.text.pdf.VerticalText.go(boolean)", "public int go(boolean)"], ["void", "com.lowagie.text.pdf.VerticalText.setOrigin(float, float)", "public void setOrigin(float, float)"], ["float", "com.lowagie.text.pdf.VerticalText.getOriginX()", "public float getOriginX()"], ["float", "com.lowagie.text.pdf.VerticalText.getOriginY()", "public float getOriginY()"], ["int", "com.lowagie.text.pdf.VerticalText.getMaxLines()", "public int getMaxLines()"], ["void", "com.lowagie.text.pdf.VerticalText.setMaxLines(int)", "public void setMaxLines(int)"], ["float", "com.lowagie.text.pdf.VerticalText.getHeight()", "public float getHeight()"], ["void", "com.lowagie.text.pdf.VerticalText.setHeight(float)", "public void setHeight(float)"], ["void", "com.lowagie.text.pdf.VerticalText.setAlignment(int)", "public void setAlignment(int)"], ["int", "com.lowagie.text.pdf.VerticalText.getAlignment()", "public int getAlignment()"], ["com.lowagie.text.pdf.XfaForm$AcroFieldsSearch", "com.lowagie.text.pdf.XfaForm$AcroFieldsSearch(java.util.Collection)", "public com.lowagie.text.pdf.XfaForm$AcroFieldsSearch(java.util.Collection)"], ["java.util.HashMap", "com.lowagie.text.pdf.XfaForm$AcroFieldsSearch.getAcroShort2LongName()", "public java.util.HashMap getAcroShort2LongName()"], ["void", "com.lowagie.text.pdf.XfaForm$AcroFieldsSearch.setAcroShort2LongName(java.util.HashMap)", "public void setAcroShort2LongName(java.util.HashMap)"], ["com.lowagie.text.pdf.XfaForm$InverseStore", "com.lowagie.text.pdf.XfaForm$InverseStore()", "public com.lowagie.text.pdf.XfaForm$InverseStore()"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$InverseStore.getDefaultName()", "public java.lang.String getDefaultName()"], ["boolean", "com.lowagie.text.pdf.XfaForm$InverseStore.isSimilar(java.lang.String)", "public boolean isSimilar(java.lang.String)"], ["com.lowagie.text.pdf.XfaForm$Stack2", "com.lowagie.text.pdf.XfaForm$Stack2()", "public com.lowagie.text.pdf.XfaForm$Stack2()"], ["java.lang.Object", "com.lowagie.text.pdf.XfaForm$Stack2.peek()", "public java.lang.Object peek()"], ["java.lang.Object", "com.lowagie.text.pdf.XfaForm$Stack2.pop()", "public java.lang.Object pop()"], ["java.lang.Object", "com.lowagie.text.pdf.XfaForm$Stack2.push(java.lang.Object)", "public java.lang.Object push(java.lang.Object)"], ["boolean", "com.lowagie.text.pdf.XfaForm$Stack2.empty()", "public boolean empty()"], ["com.lowagie.text.pdf.XfaForm$Xml2Som", "com.lowagie.text.pdf.XfaForm$Xml2Som()", "public com.lowagie.text.pdf.XfaForm$Xml2Som()"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$Xml2Som.escapeSom(java.lang.String)", "public static java.lang.String escapeSom(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$Xml2Som.unescapeSom(java.lang.String)", "public static java.lang.String unescapeSom(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$Xml2Som.getShortName(java.lang.String)", "public static java.lang.String getShortName(java.lang.String)"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2Som.inverseSearchAdd(java.lang.String)", "public void inverseSearchAdd(java.lang.String)"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2Som.inverseSearchAdd(java.util.HashMap, com.lowagie.text.pdf.XfaForm$Stack2, java.lang.String)", "public static void inverseSearchAdd(java.util.HashMap, com.lowagie.text.pdf.XfaForm$Stack2, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$Xml2Som.inverseSearchGlobal(java.util.ArrayList)", "public java.lang.String inverseSearchGlobal(java.util.ArrayList)"], ["com.lowagie.text.pdf.XfaForm$Stack2", "com.lowagie.text.pdf.XfaForm$Xml2Som.splitParts(java.lang.String)", "public static com.lowagie.text.pdf.XfaForm$Stack2 splitParts(java.lang.String)"], ["java.util.ArrayList", "com.lowagie.text.pdf.XfaForm$Xml2Som.getOrder()", "public java.util.ArrayList getOrder()"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2Som.setOrder(java.util.ArrayList)", "public void setOrder(java.util.ArrayList)"], ["java.util.HashMap", "com.lowagie.text.pdf.XfaForm$Xml2Som.getName2Node()", "public java.util.HashMap getName2Node()"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2Som.setName2Node(java.util.HashMap)", "public void setName2Node(java.util.HashMap)"], ["java.util.HashMap", "com.lowagie.text.pdf.XfaForm$Xml2Som.getInverseSearch()", "public java.util.HashMap getInverseSearch()"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2Som.setInverseSearch(java.util.HashMap)", "public void setInverseSearch(java.util.HashMap)"], ["com.lowagie.text.pdf.XfaForm$Xml2SomDatasets", "com.lowagie.text.pdf.XfaForm$Xml2SomDatasets(org.w3c.dom.Node)", "public com.lowagie.text.pdf.XfaForm$Xml2SomDatasets(org.w3c.dom.Node)"], ["org.w3c.dom.Node", "com.lowagie.text.pdf.XfaForm$Xml2SomDatasets.insertNode(org.w3c.dom.Node, java.lang.String)", "public org.w3c.dom.Node insertNode(org.w3c.dom.Node, java.lang.String)"], ["com.lowagie.text.pdf.XfaForm$Xml2SomTemplate", "com.lowagie.text.pdf.XfaForm$Xml2SomTemplate(org.w3c.dom.Node)", "public com.lowagie.text.pdf.XfaForm$Xml2SomTemplate(org.w3c.dom.Node)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm$Xml2SomTemplate.getFieldType(java.lang.String)", "public java.lang.String getFieldType(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.XfaForm$Xml2SomTemplate.isDynamicForm()", "public boolean isDynamicForm()"], ["void", "com.lowagie.text.pdf.XfaForm$Xml2SomTemplate.setDynamicForm(boolean)", "public void setDynamicForm(boolean)"], ["com.lowagie.text.pdf.XfaForm", "com.lowagie.text.pdf.XfaForm()", "public com.lowagie.text.pdf.XfaForm()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.XfaForm.getXfaObject(com.lowagie.text.pdf.PdfReader)", "public static com.lowagie.text.pdf.PdfObject getXfaObject(com.lowagie.text.pdf.PdfReader)"], ["com.lowagie.text.pdf.XfaForm", "com.lowagie.text.pdf.XfaForm(com.lowagie.text.pdf.PdfReader)", "public com.lowagie.text.pdf.XfaForm(com.lowagie.text.pdf.PdfReader) throws java.io.IOException, javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException"], ["void", "com.lowagie.text.pdf.XfaForm.setXfa(com.lowagie.text.pdf.XfaForm, com.lowagie.text.pdf.PdfReader, com.lowagie.text.pdf.PdfWriter)", "public static void setXfa(com.lowagie.text.pdf.XfaForm, com.lowagie.text.pdf.PdfReader, com.lowagie.text.pdf.PdfWriter) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.XfaForm.setXfa(com.lowagie.text.pdf.PdfWriter)", "public void setXfa(com.lowagie.text.pdf.PdfWriter) throws java.io.IOException"], ["byte[]", "com.lowagie.text.pdf.XfaForm.serializeDoc(org.w3c.dom.Node)", "public static byte[] serializeDoc(org.w3c.dom.Node) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.XfaForm.isXfaPresent()", "public boolean isXfaPresent()"], ["org.w3c.dom.Document", "com.lowagie.text.pdf.XfaForm.getDomDocument()", "public org.w3c.dom.Document getDomDocument()"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm.findFieldName(java.lang.String, com.lowagie.text.pdf.AcroFields)", "public java.lang.String findFieldName(java.lang.String, com.lowagie.text.pdf.AcroFields)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm.findDatasetsName(java.lang.String)", "public java.lang.String findDatasetsName(java.lang.String)"], ["org.w3c.dom.Node", "com.lowagie.text.pdf.XfaForm.findDatasetsNode(java.lang.String)", "public org.w3c.dom.Node findDatasetsNode(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfaForm.getNodeText(org.w3c.dom.Node)", "public static java.lang.String getNodeText(org.w3c.dom.Node)"], ["void", "com.lowagie.text.pdf.XfaForm.setNodeText(org.w3c.dom.Node, java.lang.String)", "public void setNodeText(org.w3c.dom.Node, java.lang.String)"], ["void", "com.lowagie.text.pdf.XfaForm.setXfaPresent(boolean)", "public void setXfaPresent(boolean)"], ["void", "com.lowagie.text.pdf.XfaForm.setDomDocument(org.w3c.dom.Document)", "public void setDomDocument(org.w3c.dom.Document)"], ["com.lowagie.text.pdf.PdfReader", "com.lowagie.text.pdf.XfaForm.getReader()", "public com.lowagie.text.pdf.PdfReader getReader()"], ["void", "com.lowagie.text.pdf.XfaForm.setReader(com.lowagie.text.pdf.PdfReader)", "public void setReader(com.lowagie.text.pdf.PdfReader)"], ["boolean", "com.lowagie.text.pdf.XfaForm.isChanged()", "public boolean isChanged()"], ["void", "com.lowagie.text.pdf.XfaForm.setChanged(boolean)", "public void setChanged(boolean)"], ["com.lowagie.text.pdf.XfaForm$Xml2SomTemplate", "com.lowagie.text.pdf.XfaForm.getTemplateSom()", "public com.lowagie.text.pdf.XfaForm$Xml2SomTemplate getTemplateSom()"], ["void", "com.lowagie.text.pdf.XfaForm.setTemplateSom(com.lowagie.text.pdf.XfaForm$Xml2SomTemplate)", "public void setTemplateSom(com.lowagie.text.pdf.XfaForm$Xml2SomTemplate)"], ["com.lowagie.text.pdf.XfaForm$Xml2SomDatasets", "com.lowagie.text.pdf.XfaForm.getDatasetsSom()", "public com.lowagie.text.pdf.XfaForm$Xml2SomDatasets getDatasetsSom()"], ["void", "com.lowagie.text.pdf.XfaForm.setDatasetsSom(com.lowagie.text.pdf.XfaForm$Xml2SomDatasets)", "public void setDatasetsSom(com.lowagie.text.pdf.XfaForm$Xml2SomDatasets)"], ["com.lowagie.text.pdf.XfaForm$AcroFieldsSearch", "com.lowagie.text.pdf.XfaForm.getAcroFieldsSom()", "public com.lowagie.text.pdf.XfaForm$AcroFieldsSearch getAcroFieldsSom()"], ["void", "com.lowagie.text.pdf.XfaForm.setAcroFieldsSom(com.lowagie.text.pdf.XfaForm$AcroFieldsSearch)", "public void setAcroFieldsSom(com.lowagie.text.pdf.XfaForm$AcroFieldsSearch)"], ["org.w3c.dom.Node", "com.lowagie.text.pdf.XfaForm.getDatasetsNode()", "public org.w3c.dom.Node getDatasetsNode()"], ["com.lowagie.text.pdf.XfdfReader", "com.lowagie.text.pdf.XfdfReader(java.lang.String)", "public com.lowagie.text.pdf.XfdfReader(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.XfdfReader", "com.lowagie.text.pdf.XfdfReader(byte[])", "public com.lowagie.text.pdf.XfdfReader(byte[]) throws java.io.IOException"], ["java.util.HashMap", "com.lowagie.text.pdf.XfdfReader.getFields()", "public java.util.HashMap getFields()"], ["java.lang.String", "com.lowagie.text.pdf.XfdfReader.getField(java.lang.String)", "public java.lang.String getField(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfdfReader.getFieldValue(java.lang.String)", "public java.lang.String getFieldValue(java.lang.String)"], ["java.util.List", "com.lowagie.text.pdf.XfdfReader.getListValues(java.lang.String)", "public java.util.List getListValues(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.XfdfReader.getFileSpec()", "public java.lang.String getFileSpec()"], ["void", "com.lowagie.text.pdf.XfdfReader.startElement(java.lang.String, java.util.HashMap)", "public void startElement(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.pdf.XfdfReader.endElement(java.lang.String)", "public void endElement(java.lang.String)"], ["void", "com.lowagie.text.pdf.XfdfReader.startDocument()", "public void startDocument()"], ["void", "com.lowagie.text.pdf.XfdfReader.endDocument()", "public void endDocument()"], ["void", "com.lowagie.text.pdf.XfdfReader.text(java.lang.String)", "public void text(java.lang.String)"], ["com.lowagie.text.pdf.codec.Base64$InputStream", "com.lowagie.text.pdf.codec.Base64$InputStream(java.io.InputStream)", "public com.lowagie.text.pdf.codec.Base64$InputStream(java.io.InputStream)"], ["com.lowagie.text.pdf.codec.Base64$InputStream", "com.lowagie.text.pdf.codec.Base64$InputStream(java.io.InputStream, int)", "public com.lowagie.text.pdf.codec.Base64$InputStream(java.io.InputStream, int)"], ["int", "com.lowagie.text.pdf.codec.Base64$InputStream.read()", "public int read() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.Base64$InputStream.read(byte[], int, int)", "public int read(byte[], int, int) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.Base64$OutputStream", "com.lowagie.text.pdf.codec.Base64$OutputStream(java.io.OutputStream)", "public com.lowagie.text.pdf.codec.Base64$OutputStream(java.io.OutputStream)"], ["com.lowagie.text.pdf.codec.Base64$OutputStream", "com.lowagie.text.pdf.codec.Base64$OutputStream(java.io.OutputStream, int)", "public com.lowagie.text.pdf.codec.Base64$OutputStream(java.io.OutputStream, int)"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.write(int)", "public void write(int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.write(byte[], int, int)", "public void write(byte[], int, int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.flushBase64()", "public void flushBase64() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.close()", "public void close() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.suspendEncoding()", "public void suspendEncoding() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.Base64$OutputStream.resumeEncoding()", "public void resumeEncoding()"], ["void", "com.lowagie.text.pdf.codec.Base64.main(java.lang.String[])", "public static final void main(java.lang.String[])"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeObject(java.io.Serializable)", "public static java.lang.String encodeObject(java.io.Serializable)"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeObject(java.io.Serializable, int)", "public static java.lang.String encodeObject(java.io.Serializable, int)"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeBytes(byte[])", "public static java.lang.String encodeBytes(byte[])"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeBytes(byte[], int)", "public static java.lang.String encodeBytes(byte[], int)"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeBytes(byte[], int, int)", "public static java.lang.String encodeBytes(byte[], int, int)"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeBytes(byte[], int, int, int)", "public static java.lang.String encodeBytes(byte[], int, int, int)"], ["byte[]", "com.lowagie.text.pdf.codec.Base64.decode(byte[], int, int, int)", "public static byte[] decode(byte[], int, int, int)"], ["byte[]", "com.lowagie.text.pdf.codec.Base64.decode(java.lang.String)", "public static byte[] decode(java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.codec.Base64.decode(java.lang.String, int)", "public static byte[] decode(java.lang.String, int)"], ["java.lang.Object", "com.lowagie.text.pdf.codec.Base64.decodeToObject(java.lang.String)", "public static java.lang.Object decodeToObject(java.lang.String)"], ["boolean", "com.lowagie.text.pdf.codec.Base64.encodeToFile(byte[], java.lang.String)", "public static boolean encodeToFile(byte[], java.lang.String)"], ["boolean", "com.lowagie.text.pdf.codec.Base64.decodeToFile(java.lang.String, java.lang.String)", "public static boolean decodeToFile(java.lang.String, java.lang.String)"], ["byte[]", "com.lowagie.text.pdf.codec.Base64.decodeFromFile(java.lang.String)", "public static byte[] decodeFromFile(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.codec.Base64.encodeFromFile(java.lang.String)", "public static java.lang.String encodeFromFile(java.lang.String)"], ["void", "com.lowagie.text.pdf.codec.Base64.encodeFileToFile(java.lang.String, java.lang.String)", "public static void encodeFileToFile(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.codec.Base64.decodeFileToFile(java.lang.String, java.lang.String)", "public static void decodeFileToFile(java.lang.String, java.lang.String)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.BmpImage.getImage(java.net.URL)", "public static com.lowagie.text.Image getImage(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.BmpImage.getImage(java.io.InputStream)", "public static com.lowagie.text.Image getImage(java.io.InputStream) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.BmpImage.getImage(java.io.InputStream, boolean, int)", "public static com.lowagie.text.Image getImage(java.io.InputStream, boolean, int) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.BmpImage.getImage(java.lang.String)", "public static com.lowagie.text.Image getImage(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.BmpImage.getImage(byte[])", "public static com.lowagie.text.Image getImage(byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.CCITTG4Encoder", "com.lowagie.text.pdf.codec.CCITTG4Encoder(int)", "public com.lowagie.text.pdf.codec.CCITTG4Encoder(int)"], ["void", "com.lowagie.text.pdf.codec.CCITTG4Encoder.fax4Encode(byte[], int, int)", "public void fax4Encode(byte[], int, int)"], ["byte[]", "com.lowagie.text.pdf.codec.CCITTG4Encoder.compress(byte[], int, int)", "public static byte[] compress(byte[], int, int)"], ["void", "com.lowagie.text.pdf.codec.CCITTG4Encoder.fax4Encode(byte[], int)", "public void fax4Encode(byte[], int)"], ["byte[]", "com.lowagie.text.pdf.codec.CCITTG4Encoder.close()", "public byte[] close()"], ["com.lowagie.text.pdf.codec.GifImage", "com.lowagie.text.pdf.codec.GifImage(java.net.URL)", "public com.lowagie.text.pdf.codec.GifImage(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.GifImage", "com.lowagie.text.pdf.codec.GifImage(java.lang.String)", "public com.lowagie.text.pdf.codec.GifImage(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.GifImage", "com.lowagie.text.pdf.codec.GifImage(byte[])", "public com.lowagie.text.pdf.codec.GifImage(byte[]) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.GifImage", "com.lowagie.text.pdf.codec.GifImage(java.io.InputStream)", "public com.lowagie.text.pdf.codec.GifImage(java.io.InputStream) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.GifImage.getFrameCount()", "public int getFrameCount()"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.GifImage.getImage(int)", "public com.lowagie.text.Image getImage(int)"], ["int[]", "com.lowagie.text.pdf.codec.GifImage.getFramePosition(int)", "public int[] getFramePosition(int)"], ["int[]", "com.lowagie.text.pdf.codec.GifImage.getLogicalScreen()", "public int[] getLogicalScreen()"], ["byte[]", "com.lowagie.text.pdf.codec.PngImage$NewByteArrayOutputStream.getBuf()", "public byte[] getBuf()"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.PngImage.getImage(java.net.URL)", "public static com.lowagie.text.Image getImage(java.net.URL) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.PngImage.getImage(java.io.InputStream)", "public static com.lowagie.text.Image getImage(java.io.InputStream) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.PngImage.getImage(java.lang.String)", "public static com.lowagie.text.Image getImage(java.lang.String) throws java.io.IOException"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.PngImage.getImage(byte[])", "public static com.lowagie.text.Image getImage(byte[]) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.PngImage.getInt(java.io.InputStream)", "public static final int getInt(java.io.InputStream) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.PngImage.getWord(java.io.InputStream)", "public static final int getWord(java.io.InputStream) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.pdf.codec.PngImage.getString(java.io.InputStream)", "public static final java.lang.String getString(java.io.InputStream) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.TIFFConstants", "com.lowagie.text.pdf.codec.TIFFConstants()", "public com.lowagie.text.pdf.codec.TIFFConstants()"], ["com.lowagie.text.pdf.codec.TIFFDirectory", "com.lowagie.text.pdf.codec.TIFFDirectory(com.lowagie.text.pdf.RandomAccessFileOrArray, int)", "public com.lowagie.text.pdf.codec.TIFFDirectory(com.lowagie.text.pdf.RandomAccessFileOrArray, int) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.TIFFDirectory", "com.lowagie.text.pdf.codec.TIFFDirectory(com.lowagie.text.pdf.RandomAccessFileOrArray, long, int)", "public com.lowagie.text.pdf.codec.TIFFDirectory(com.lowagie.text.pdf.RandomAccessFileOrArray, long, int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.TIFFDirectory.getNumEntries()", "public int getNumEntries()"], ["com.lowagie.text.pdf.codec.TIFFField", "com.lowagie.text.pdf.codec.TIFFDirectory.getField(int)", "public com.lowagie.text.pdf.codec.TIFFField getField(int)"], ["boolean", "com.lowagie.text.pdf.codec.TIFFDirectory.isTagPresent(int)", "public boolean isTagPresent(int)"], ["int[]", "com.lowagie.text.pdf.codec.TIFFDirectory.getTags()", "public int[] getTags()"], ["com.lowagie.text.pdf.codec.TIFFField[]", "com.lowagie.text.pdf.codec.TIFFDirectory.getFields()", "public com.lowagie.text.pdf.codec.TIFFField[] getFields()"], ["byte", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsByte(int, int)", "public byte getFieldAsByte(int, int)"], ["byte", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsByte(int)", "public byte getFieldAsByte(int)"], ["long", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsLong(int, int)", "public long getFieldAsLong(int, int)"], ["long", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsLong(int)", "public long getFieldAsLong(int)"], ["float", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsFloat(int, int)", "public float getFieldAsFloat(int, int)"], ["float", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsFloat(int)", "public float getFieldAsFloat(int)"], ["double", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsDouble(int, int)", "public double getFieldAsDouble(int, int)"], ["double", "com.lowagie.text.pdf.codec.TIFFDirectory.getFieldAsDouble(int)", "public double getFieldAsDouble(int)"], ["int", "com.lowagie.text.pdf.codec.TIFFDirectory.getNumDirectories(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public static int getNumDirectories(com.lowagie.text.pdf.RandomAccessFileOrArray) throws java.io.IOException"], ["boolean", "com.lowagie.text.pdf.codec.TIFFDirectory.isBigEndian()", "public boolean isBigEndian()"], ["long", "com.lowagie.text.pdf.codec.TIFFDirectory.getIFDOffset()", "public long getIFDOffset()"], ["long", "com.lowagie.text.pdf.codec.TIFFDirectory.getNextIFDOffset()", "public long getNextIFDOffset()"], ["com.lowagie.text.pdf.codec.TIFFFaxDecoder", "com.lowagie.text.pdf.codec.TIFFFaxDecoder(int, int, int)", "public com.lowagie.text.pdf.codec.TIFFFaxDecoder(int, int, int)"], ["void", "com.lowagie.text.pdf.codec.TIFFFaxDecoder.reverseBits(byte[])", "public static void reverseBits(byte[])"], ["void", "com.lowagie.text.pdf.codec.TIFFFaxDecoder.decode1D(byte[], byte[], int, int)", "public void decode1D(byte[], byte[], int, int)"], ["void", "com.lowagie.text.pdf.codec.TIFFFaxDecoder.decodeNextScanline(byte[], int, int)", "public void decodeNextScanline(byte[], int, int)"], ["void", "com.lowagie.text.pdf.codec.TIFFFaxDecoder.decode2D(byte[], byte[], int, int, long)", "public void decode2D(byte[], byte[], int, int, long)"], ["void", "com.lowagie.text.pdf.codec.TIFFFaxDecoder.decodeT6(byte[], byte[], int, int, long)", "public void decodeT6(byte[], byte[], int, int, long)"], ["com.lowagie.text.pdf.codec.TIFFField", "com.lowagie.text.pdf.codec.TIFFField(int, int, int, java.lang.Object)", "public com.lowagie.text.pdf.codec.TIFFField(int, int, int, java.lang.Object)"], ["int", "com.lowagie.text.pdf.codec.TIFFField.getTag()", "public int getTag()"], ["int", "com.lowagie.text.pdf.codec.TIFFField.getType()", "public int getType()"], ["int", "com.lowagie.text.pdf.codec.TIFFField.getCount()", "public int getCount()"], ["byte[]", "com.lowagie.text.pdf.codec.TIFFField.getAsBytes()", "public byte[] getAsBytes()"], ["char[]", "com.lowagie.text.pdf.codec.TIFFField.getAsChars()", "public char[] getAsChars()"], ["short[]", "com.lowagie.text.pdf.codec.TIFFField.getAsShorts()", "public short[] getAsShorts()"], ["int[]", "com.lowagie.text.pdf.codec.TIFFField.getAsInts()", "public int[] getAsInts()"], ["long[]", "com.lowagie.text.pdf.codec.TIFFField.getAsLongs()", "public long[] getAsLongs()"], ["float[]", "com.lowagie.text.pdf.codec.TIFFField.getAsFloats()", "public float[] getAsFloats()"], ["double[]", "com.lowagie.text.pdf.codec.TIFFField.getAsDoubles()", "public double[] getAsDoubles()"], ["int[][]", "com.lowagie.text.pdf.codec.TIFFField.getAsSRationals()", "public int[][] getAsSRationals()"], ["long[][]", "com.lowagie.text.pdf.codec.TIFFField.getAsRationals()", "public long[][] getAsRationals()"], ["int", "com.lowagie.text.pdf.codec.TIFFField.getAsInt(int)", "public int getAsInt(int)"], ["long", "com.lowagie.text.pdf.codec.TIFFField.getAsLong(int)", "public long getAsLong(int)"], ["float", "com.lowagie.text.pdf.codec.TIFFField.getAsFloat(int)", "public float getAsFloat(int)"], ["double", "com.lowagie.text.pdf.codec.TIFFField.getAsDouble(int)", "public double getAsDouble(int)"], ["java.lang.String", "com.lowagie.text.pdf.codec.TIFFField.getAsString(int)", "public java.lang.String getAsString(int)"], ["int[]", "com.lowagie.text.pdf.codec.TIFFField.getAsSRational(int)", "public int[] getAsSRational(int)"], ["long[]", "com.lowagie.text.pdf.codec.TIFFField.getAsRational(int)", "public long[] getAsRational(int)"], ["int", "com.lowagie.text.pdf.codec.TIFFField.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["com.lowagie.text.pdf.codec.TIFFLZWDecoder", "com.lowagie.text.pdf.codec.TIFFLZWDecoder(int, int, int)", "public com.lowagie.text.pdf.codec.TIFFLZWDecoder(int, int, int)"], ["byte[]", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.decode(byte[], byte[], int)", "public byte[] decode(byte[], byte[], int)"], ["void", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.initializeStringTable()", "public void initializeStringTable()"], ["void", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.writeString(byte[])", "public void writeString(byte[])"], ["void", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.addStringToTable(byte[], byte)", "public void addStringToTable(byte[], byte)"], ["void", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.addStringToTable(byte[])", "public void addStringToTable(byte[])"], ["byte[]", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.composeString(byte[], byte)", "public byte[] composeString(byte[], byte)"], ["int", "com.lowagie.text.pdf.codec.TIFFLZWDecoder.getNextCode()", "public int getNextCode()"], ["com.lowagie.text.pdf.codec.TiffImage", "com.lowagie.text.pdf.codec.TiffImage()", "public com.lowagie.text.pdf.codec.TiffImage()"], ["int", "com.lowagie.text.pdf.codec.TiffImage.getNumberOfPages(com.lowagie.text.pdf.RandomAccessFileOrArray)", "public static int getNumberOfPages(com.lowagie.text.pdf.RandomAccessFileOrArray)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.TiffImage.getTiffImage(com.lowagie.text.pdf.RandomAccessFileOrArray, int)", "public static com.lowagie.text.Image getTiffImage(com.lowagie.text.pdf.RandomAccessFileOrArray, int)"], ["com.lowagie.text.Image", "com.lowagie.text.pdf.codec.TiffImage.getTiffImage(com.lowagie.text.pdf.RandomAccessFileOrArray, int, boolean)", "public static com.lowagie.text.Image getTiffImage(com.lowagie.text.pdf.RandomAccessFileOrArray, int, boolean)"], ["void", "com.lowagie.text.pdf.codec.TiffImage.decodePackbits(byte[], byte[])", "public static void decodePackbits(byte[], byte[])"], ["void", "com.lowagie.text.pdf.codec.TiffImage.inflate(byte[], byte[])", "public static void inflate(byte[], byte[])"], ["com.lowagie.text.pdf.codec.wmf.InputMeta", "com.lowagie.text.pdf.codec.wmf.InputMeta(java.io.InputStream)", "public com.lowagie.text.pdf.codec.wmf.InputMeta(java.io.InputStream)"], ["int", "com.lowagie.text.pdf.codec.wmf.InputMeta.readWord()", "public int readWord() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.InputMeta.readShort()", "public int readShort() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.InputMeta.readInt()", "public int readInt() throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.InputMeta.readByte()", "public int readByte() throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.wmf.InputMeta.skip(int)", "public void skip(int) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.InputMeta.getLength()", "public int getLength()"], ["java.awt.Color", "com.lowagie.text.pdf.codec.wmf.InputMeta.readColor()", "public java.awt.Color readColor() throws java.io.IOException"], ["com.lowagie.text.pdf.codec.wmf.MetaBrush", "com.lowagie.text.pdf.codec.wmf.MetaBrush()", "public com.lowagie.text.pdf.codec.wmf.MetaBrush()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaBrush.init(com.lowagie.text.pdf.codec.wmf.InputMeta)", "public void init(com.lowagie.text.pdf.codec.wmf.InputMeta) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaBrush.getStyle()", "public int getStyle()"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaBrush.getHatch()", "public int getHatch()"], ["java.awt.Color", "com.lowagie.text.pdf.codec.wmf.MetaBrush.getColor()", "public java.awt.Color getColor()"], ["com.lowagie.text.pdf.codec.wmf.MetaDo", "com.lowagie.text.pdf.codec.wmf.MetaDo(java.io.InputStream, com.lowagie.text.pdf.PdfContentByte)", "public com.lowagie.text.pdf.codec.wmf.MetaDo(java.io.InputStream, com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaDo.readAll()", "public void readAll() throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaDo.outputText(int, int, int, int, int, int, int, java.lang.String)", "public void outputText(int, int, int, int, int, int, int, java.lang.String)"], ["boolean", "com.lowagie.text.pdf.codec.wmf.MetaDo.isNullStrokeFill(boolean)", "public boolean isNullStrokeFill(boolean)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaDo.strokeAndFill()", "public void strokeAndFill()"], ["byte[]", "com.lowagie.text.pdf.codec.wmf.MetaDo.wrapBMP(com.lowagie.text.Image)", "public static byte[] wrapBMP(com.lowagie.text.Image) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaDo.writeWord(java.io.OutputStream, int)", "public static void writeWord(java.io.OutputStream, int) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaDo.writeDWord(java.io.OutputStream, int)", "public static void writeDWord(java.io.OutputStream, int) throws java.io.IOException"], ["com.lowagie.text.pdf.codec.wmf.MetaFont", "com.lowagie.text.pdf.codec.wmf.MetaFont()", "public com.lowagie.text.pdf.codec.wmf.MetaFont()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaFont.init(com.lowagie.text.pdf.codec.wmf.InputMeta)", "public void init(com.lowagie.text.pdf.codec.wmf.InputMeta) throws java.io.IOException"], ["com.lowagie.text.pdf.BaseFont", "com.lowagie.text.pdf.codec.wmf.MetaFont.getFont()", "public com.lowagie.text.pdf.BaseFont getFont()"], ["float", "com.lowagie.text.pdf.codec.wmf.MetaFont.getAngle()", "public float getAngle()"], ["boolean", "com.lowagie.text.pdf.codec.wmf.MetaFont.isUnderline()", "public boolean isUnderline()"], ["boolean", "com.lowagie.text.pdf.codec.wmf.MetaFont.isStrikeout()", "public boolean isStrikeout()"], ["float", "com.lowagie.text.pdf.codec.wmf.MetaFont.getFontSize(com.lowagie.text.pdf.codec.wmf.MetaState)", "public float getFontSize(com.lowagie.text.pdf.codec.wmf.MetaState)"], ["com.lowagie.text.pdf.codec.wmf.MetaObject", "com.lowagie.text.pdf.codec.wmf.MetaObject()", "public com.lowagie.text.pdf.codec.wmf.MetaObject()"], ["com.lowagie.text.pdf.codec.wmf.MetaObject", "com.lowagie.text.pdf.codec.wmf.MetaObject(int)", "public com.lowagie.text.pdf.codec.wmf.MetaObject(int)"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaObject.getType()", "public int getType()"], ["com.lowagie.text.pdf.codec.wmf.MetaPen", "com.lowagie.text.pdf.codec.wmf.MetaPen()", "public com.lowagie.text.pdf.codec.wmf.MetaPen()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaPen.init(com.lowagie.text.pdf.codec.wmf.InputMeta)", "public void init(com.lowagie.text.pdf.codec.wmf.InputMeta) throws java.io.IOException"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaPen.getStyle()", "public int getStyle()"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaPen.getPenWidth()", "public int getPenWidth()"], ["java.awt.Color", "com.lowagie.text.pdf.codec.wmf.MetaPen.getColor()", "public java.awt.Color getColor()"], ["com.lowagie.text.pdf.codec.wmf.MetaState", "com.lowagie.text.pdf.codec.wmf.MetaState()", "public com.lowagie.text.pdf.codec.wmf.MetaState()"], ["com.lowagie.text.pdf.codec.wmf.MetaState", "com.lowagie.text.pdf.codec.wmf.MetaState(com.lowagie.text.pdf.codec.wmf.MetaState)", "public com.lowagie.text.pdf.codec.wmf.MetaState(com.lowagie.text.pdf.codec.wmf.MetaState)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setMetaState(com.lowagie.text.pdf.codec.wmf.MetaState)", "public void setMetaState(com.lowagie.text.pdf.codec.wmf.MetaState)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.addMetaObject(com.lowagie.text.pdf.codec.wmf.MetaObject)", "public void addMetaObject(com.lowagie.text.pdf.codec.wmf.MetaObject)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.selectMetaObject(int, com.lowagie.text.pdf.PdfContentByte)", "public void selectMetaObject(int, com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.deleteMetaObject(int)", "public void deleteMetaObject(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.saveState(com.lowagie.text.pdf.PdfContentByte)", "public void saveState(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.restoreState(int, com.lowagie.text.pdf.PdfContentByte)", "public void restoreState(int, com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.cleanup(com.lowagie.text.pdf.PdfContentByte)", "public void cleanup(com.lowagie.text.pdf.PdfContentByte)"], ["float", "com.lowagie.text.pdf.codec.wmf.MetaState.transformX(int)", "public float transformX(int)"], ["float", "com.lowagie.text.pdf.codec.wmf.MetaState.transformY(int)", "public float transformY(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setScalingX(float)", "public void setScalingX(float)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setScalingY(float)", "public void setScalingY(float)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setOffsetWx(int)", "public void setOffsetWx(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setOffsetWy(int)", "public void setOffsetWy(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setExtentWx(int)", "public void setExtentWx(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setExtentWy(int)", "public void setExtentWy(int)"], ["float", "com.lowagie.text.pdf.codec.wmf.MetaState.transformAngle(float)", "public float transformAngle(float)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setCurrentPoint(java.awt.Point)", "public void setCurrentPoint(java.awt.Point)"], ["java.awt.Point", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentPoint()", "public java.awt.Point getCurrentPoint()"], ["com.lowagie.text.pdf.codec.wmf.MetaBrush", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentBrush()", "public com.lowagie.text.pdf.codec.wmf.MetaBrush getCurrentBrush()"], ["com.lowagie.text.pdf.codec.wmf.MetaPen", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentPen()", "public com.lowagie.text.pdf.codec.wmf.MetaPen getCurrentPen()"], ["com.lowagie.text.pdf.codec.wmf.MetaFont", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentFont()", "public com.lowagie.text.pdf.codec.wmf.MetaFont getCurrentFont()"], ["java.awt.Color", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentBackgroundColor()", "public java.awt.Color getCurrentBackgroundColor()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setCurrentBackgroundColor(java.awt.Color)", "public void setCurrentBackgroundColor(java.awt.Color)"], ["java.awt.Color", "com.lowagie.text.pdf.codec.wmf.MetaState.getCurrentTextColor()", "public java.awt.Color getCurrentTextColor()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setCurrentTextColor(java.awt.Color)", "public void setCurrentTextColor(java.awt.Color)"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaState.getBackgroundMode()", "public int getBackgroundMode()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setBackgroundMode(int)", "public void setBackgroundMode(int)"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaState.getTextAlign()", "public int getTextAlign()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setTextAlign(int)", "public void setTextAlign(int)"], ["int", "com.lowagie.text.pdf.codec.wmf.MetaState.getPolyFillMode()", "public int getPolyFillMode()"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setPolyFillMode(int)", "public void setPolyFillMode(int)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setLineJoinRectangle(com.lowagie.text.pdf.PdfContentByte)", "public void setLineJoinRectangle(com.lowagie.text.pdf.PdfContentByte)"], ["void", "com.lowagie.text.pdf.codec.wmf.MetaState.setLineJoinPolygon(com.lowagie.text.pdf.PdfContentByte)", "public void setLineJoinPolygon(com.lowagie.text.pdf.PdfContentByte)"], ["boolean", "com.lowagie.text.pdf.codec.wmf.MetaState.getLineNeutral()", "public boolean getLineNeutral()"], ["com.lowagie.text.pdf.collection.PdfCollection", "com.lowagie.text.pdf.collection.PdfCollection(int)", "public com.lowagie.text.pdf.collection.PdfCollection(int)"], ["void", "com.lowagie.text.pdf.collection.PdfCollection.setInitialDocument(java.lang.String)", "public void setInitialDocument(java.lang.String)"], ["void", "com.lowagie.text.pdf.collection.PdfCollection.setSchema(com.lowagie.text.pdf.collection.PdfCollectionSchema)", "public void setSchema(com.lowagie.text.pdf.collection.PdfCollectionSchema)"], ["com.lowagie.text.pdf.collection.PdfCollectionSchema", "com.lowagie.text.pdf.collection.PdfCollection.getSchema()", "public com.lowagie.text.pdf.collection.PdfCollectionSchema getSchema()"], ["void", "com.lowagie.text.pdf.collection.PdfCollection.setSort(com.lowagie.text.pdf.collection.PdfCollectionSort)", "public void setSort(com.lowagie.text.pdf.collection.PdfCollectionSort)"], ["com.lowagie.text.pdf.collection.PdfCollectionField", "com.lowagie.text.pdf.collection.PdfCollectionField(java.lang.String, int)", "public com.lowagie.text.pdf.collection.PdfCollectionField(java.lang.String, int)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionField.setOrder(int)", "public void setOrder(int)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionField.setVisible(boolean)", "public void setVisible(boolean)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionField.setEditable(boolean)", "public void setEditable(boolean)"], ["boolean", "com.lowagie.text.pdf.collection.PdfCollectionField.isCollectionItem()", "public boolean isCollectionItem()"], ["com.lowagie.text.pdf.PdfObject", "com.lowagie.text.pdf.collection.PdfCollectionField.getValue(java.lang.String)", "public com.lowagie.text.pdf.PdfObject getValue(java.lang.String)"], ["com.lowagie.text.pdf.collection.PdfCollectionItem", "com.lowagie.text.pdf.collection.PdfCollectionItem(com.lowagie.text.pdf.collection.PdfCollectionSchema)", "public com.lowagie.text.pdf.collection.PdfCollectionItem(com.lowagie.text.pdf.collection.PdfCollectionSchema)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, java.lang.String)", "public void addItem(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, com.lowagie.text.pdf.PdfString)", "public void addItem(java.lang.String, com.lowagie.text.pdf.PdfString)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, com.lowagie.text.pdf.PdfDate)", "public void addItem(java.lang.String, com.lowagie.text.pdf.PdfDate)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, com.lowagie.text.pdf.PdfNumber)", "public void addItem(java.lang.String, com.lowagie.text.pdf.PdfNumber)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, java.util.Calendar)", "public void addItem(java.lang.String, java.util.Calendar)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, int)", "public void addItem(java.lang.String, int)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, float)", "public void addItem(java.lang.String, float)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.addItem(java.lang.String, double)", "public void addItem(java.lang.String, double)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionItem.setPrefix(java.lang.String, java.lang.String)", "public void setPrefix(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.collection.PdfCollectionSchema", "com.lowagie.text.pdf.collection.PdfCollectionSchema()", "public com.lowagie.text.pdf.collection.PdfCollectionSchema()"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionSchema.addField(java.lang.String, com.lowagie.text.pdf.collection.PdfCollectionField)", "public void addField(java.lang.String, com.lowagie.text.pdf.collection.PdfCollectionField)"], ["com.lowagie.text.pdf.collection.PdfCollectionSort", "com.lowagie.text.pdf.collection.PdfCollectionSort(java.lang.String)", "public com.lowagie.text.pdf.collection.PdfCollectionSort(java.lang.String)"], ["com.lowagie.text.pdf.collection.PdfCollectionSort", "com.lowagie.text.pdf.collection.PdfCollectionSort(java.lang.String[])", "public com.lowagie.text.pdf.collection.PdfCollectionSort(java.lang.String[])"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionSort.setSortOrder(boolean)", "public void setSortOrder(boolean)"], ["void", "com.lowagie.text.pdf.collection.PdfCollectionSort.setSortOrder(boolean[])", "public void setSortOrder(boolean[])"], ["com.lowagie.text.pdf.collection.PdfTargetDictionary", "com.lowagie.text.pdf.collection.PdfTargetDictionary(com.lowagie.text.pdf.collection.PdfTargetDictionary)", "public com.lowagie.text.pdf.collection.PdfTargetDictionary(com.lowagie.text.pdf.collection.PdfTargetDictionary)"], ["com.lowagie.text.pdf.collection.PdfTargetDictionary", "com.lowagie.text.pdf.collection.PdfTargetDictionary(boolean)", "public com.lowagie.text.pdf.collection.PdfTargetDictionary(boolean)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setEmbeddedFileName(java.lang.String)", "public void setEmbeddedFileName(java.lang.String)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setFileAttachmentPagename(java.lang.String)", "public void setFileAttachmentPagename(java.lang.String)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setFileAttachmentPage(int)", "public void setFileAttachmentPage(int)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setFileAttachmentName(java.lang.String)", "public void setFileAttachmentName(java.lang.String)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setFileAttachmentIndex(int)", "public void setFileAttachmentIndex(int)"], ["void", "com.lowagie.text.pdf.collection.PdfTargetDictionary.setAdditionalPath(com.lowagie.text.pdf.collection.PdfTargetDictionary)", "public void setAdditionalPath(com.lowagie.text.pdf.collection.PdfTargetDictionary)"], ["com.lowagie.text.pdf.crypto.AESCipher", "com.lowagie.text.pdf.crypto.AESCipher(boolean, byte[], byte[])", "public com.lowagie.text.pdf.crypto.AESCipher(boolean, byte[], byte[])"], ["byte[]", "com.lowagie.text.pdf.crypto.AESCipher.update(byte[], int, int)", "public byte[] update(byte[], int, int)"], ["byte[]", "com.lowagie.text.pdf.crypto.AESCipher.doFinal()", "public byte[] doFinal()"], ["com.lowagie.text.pdf.crypto.ARCFOUREncryption", "com.lowagie.text.pdf.crypto.ARCFOUREncryption()", "public com.lowagie.text.pdf.crypto.ARCFOUREncryption()"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.prepareARCFOURKey(byte[])", "public void prepareARCFOURKey(byte[])"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.prepareARCFOURKey(byte[], int, int)", "public void prepareARCFOURKey(byte[], int, int)"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.encryptARCFOUR(byte[], int, int, byte[], int)", "public void encryptARCFOUR(byte[], int, int, byte[], int)"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.encryptARCFOUR(byte[], int, int)", "public void encryptARCFOUR(byte[], int, int)"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.encryptARCFOUR(byte[], byte[])", "public void encryptARCFOUR(byte[], byte[])"], ["void", "com.lowagie.text.pdf.crypto.ARCFOUREncryption.encryptARCFOUR(byte[])", "public void encryptARCFOUR(byte[])"], ["byte[]", "com.lowagie.text.pdf.crypto.IVGenerator.getIV()", "public static byte[] getIV()"], ["byte[]", "com.lowagie.text.pdf.crypto.IVGenerator.getIV(int)", "public static byte[] getIV(int)"], ["com.lowagie.text.pdf.draw.DottedLineSeparator", "com.lowagie.text.pdf.draw.DottedLineSeparator()", "public com.lowagie.text.pdf.draw.DottedLineSeparator()"], ["void", "com.lowagie.text.pdf.draw.DottedLineSeparator.draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)", "public void draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)"], ["float", "com.lowagie.text.pdf.draw.DottedLineSeparator.getGap()", "public float getGap()"], ["void", "com.lowagie.text.pdf.draw.DottedLineSeparator.setGap(float)", "public void setGap(float)"], ["com.lowagie.text.pdf.draw.LineSeparator", "com.lowagie.text.pdf.draw.LineSeparator(float, float, java.awt.Color, int, float)", "public com.lowagie.text.pdf.draw.LineSeparator(float, float, java.awt.Color, int, float)"], ["com.lowagie.text.pdf.draw.LineSeparator", "com.lowagie.text.pdf.draw.LineSeparator()", "public com.lowagie.text.pdf.draw.LineSeparator()"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)", "public void draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.drawLine(com.lowagie.text.pdf.PdfContentByte, float, float, float)", "public void drawLine(com.lowagie.text.pdf.PdfContentByte, float, float, float)"], ["float", "com.lowagie.text.pdf.draw.LineSeparator.getLineWidth()", "public float getLineWidth()"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.setLineWidth(float)", "public void setLineWidth(float)"], ["float", "com.lowagie.text.pdf.draw.LineSeparator.getPercentage()", "public float getPercentage()"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.setPercentage(float)", "public void setPercentage(float)"], ["java.awt.Color", "com.lowagie.text.pdf.draw.LineSeparator.getLineColor()", "public java.awt.Color getLineColor()"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.setLineColor(java.awt.Color)", "public void setLineColor(java.awt.Color)"], ["int", "com.lowagie.text.pdf.draw.LineSeparator.getAlignment()", "public int getAlignment()"], ["void", "com.lowagie.text.pdf.draw.LineSeparator.setAlignment(int)", "public void setAlignment(int)"], ["com.lowagie.text.pdf.draw.VerticalPositionMark", "com.lowagie.text.pdf.draw.VerticalPositionMark()", "public com.lowagie.text.pdf.draw.VerticalPositionMark()"], ["com.lowagie.text.pdf.draw.VerticalPositionMark", "com.lowagie.text.pdf.draw.VerticalPositionMark(com.lowagie.text.pdf.draw.DrawInterface, float)", "public com.lowagie.text.pdf.draw.VerticalPositionMark(com.lowagie.text.pdf.draw.DrawInterface, float)"], ["void", "com.lowagie.text.pdf.draw.VerticalPositionMark.draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)", "public void draw(com.lowagie.text.pdf.PdfContentByte, float, float, float, float, float)"], ["boolean", "com.lowagie.text.pdf.draw.VerticalPositionMark.process(com.lowagie.text.ElementListener)", "public boolean process(com.lowagie.text.ElementListener)"], ["int", "com.lowagie.text.pdf.draw.VerticalPositionMark.type()", "public int type()"], ["boolean", "com.lowagie.text.pdf.draw.VerticalPositionMark.isContent()", "public boolean isContent()"], ["boolean", "com.lowagie.text.pdf.draw.VerticalPositionMark.isNestable()", "public boolean isNestable()"], ["java.util.ArrayList", "com.lowagie.text.pdf.draw.VerticalPositionMark.getChunks()", "public java.util.ArrayList getChunks()"], ["com.lowagie.text.pdf.draw.DrawInterface", "com.lowagie.text.pdf.draw.VerticalPositionMark.getDrawInterface()", "public com.lowagie.text.pdf.draw.DrawInterface getDrawInterface()"], ["void", "com.lowagie.text.pdf.draw.VerticalPositionMark.setDrawInterface(com.lowagie.text.pdf.draw.DrawInterface)", "public void setDrawInterface(com.lowagie.text.pdf.draw.DrawInterface)"], ["float", "com.lowagie.text.pdf.draw.VerticalPositionMark.getOffset()", "public float getOffset()"], ["void", "com.lowagie.text.pdf.draw.VerticalPositionMark.setOffset(float)", "public void setOffset(float)"], ["com.lowagie.text.pdf.events.FieldPositioningEvents", "com.lowagie.text.pdf.events.FieldPositioningEvents()", "public com.lowagie.text.pdf.events.FieldPositioningEvents()"], ["void", "com.lowagie.text.pdf.events.FieldPositioningEvents.addField(java.lang.String, com.lowagie.text.pdf.PdfFormField)", "public void addField(java.lang.String, com.lowagie.text.pdf.PdfFormField)"], ["com.lowagie.text.pdf.events.FieldPositioningEvents", "com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfFormField)", "public com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfFormField)"], ["com.lowagie.text.pdf.events.FieldPositioningEvents", "com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfFormField, com.lowagie.text.pdf.PdfFormField)", "public com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfFormField, com.lowagie.text.pdf.PdfFormField)"], ["com.lowagie.text.pdf.events.FieldPositioningEvents", "com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, java.lang.String)", "public com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, java.lang.String) throws java.io.IOException, com.lowagie.text.DocumentException"], ["com.lowagie.text.pdf.events.FieldPositioningEvents", "com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfFormField, java.lang.String)", "public com.lowagie.text.pdf.events.FieldPositioningEvents(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.pdf.PdfFormField, java.lang.String) throws java.io.IOException, com.lowagie.text.DocumentException"], ["void", "com.lowagie.text.pdf.events.FieldPositioningEvents.setPadding(float)", "public void setPadding(float)"], ["void", "com.lowagie.text.pdf.events.FieldPositioningEvents.setParent(com.lowagie.text.pdf.PdfFormField)", "public void setParent(com.lowagie.text.pdf.PdfFormField)"], ["void", "com.lowagie.text.pdf.events.FieldPositioningEvents.onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)", "public void onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)"], ["void", "com.lowagie.text.pdf.events.FieldPositioningEvents.cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])", "public void cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])"], ["int", "com.lowagie.text.pdf.events.IndexEvents$1.compare(java.lang.Object, java.lang.Object)", "public int compare(java.lang.Object, java.lang.Object)"], ["com.lowagie.text.pdf.events.IndexEvents$Entry", "com.lowagie.text.pdf.events.IndexEvents$Entry(com.lowagie.text.pdf.events.IndexEvents, java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.lowagie.text.pdf.events.IndexEvents$Entry(com.lowagie.text.pdf.events.IndexEvents, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.getIn1()", "public java.lang.String getIn1()"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.getIn2()", "public java.lang.String getIn2()"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.getIn3()", "public java.lang.String getIn3()"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.getTag()", "public java.lang.String getTag()"], ["int", "com.lowagie.text.pdf.events.IndexEvents$Entry.getPageNumber()", "public int getPageNumber()"], ["void", "com.lowagie.text.pdf.events.IndexEvents$Entry.addPageNumberAndTag(int, java.lang.String)", "public void addPageNumberAndTag(int, java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.getKey()", "public java.lang.String getKey()"], ["java.util.List", "com.lowagie.text.pdf.events.IndexEvents$Entry.getPagenumbers()", "public java.util.List getPagenumbers()"], ["java.util.List", "com.lowagie.text.pdf.events.IndexEvents$Entry.getTags()", "public java.util.List getTags()"], ["java.lang.String", "com.lowagie.text.pdf.events.IndexEvents$Entry.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.events.IndexEvents", "com.lowagie.text.pdf.events.IndexEvents()", "public com.lowagie.text.pdf.events.IndexEvents()"], ["void", "com.lowagie.text.pdf.events.IndexEvents.onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)", "public void onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.pdf.events.IndexEvents.create(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.lowagie.text.Chunk create(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.pdf.events.IndexEvents.create(java.lang.String, java.lang.String)", "public com.lowagie.text.Chunk create(java.lang.String, java.lang.String)"], ["com.lowagie.text.Chunk", "com.lowagie.text.pdf.events.IndexEvents.create(java.lang.String, java.lang.String, java.lang.String)", "public com.lowagie.text.Chunk create(java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.events.IndexEvents.create(com.lowagie.text.Chunk, java.lang.String, java.lang.String, java.lang.String)", "public void create(com.lowagie.text.Chunk, java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.events.IndexEvents.create(com.lowagie.text.Chunk, java.lang.String)", "public void create(com.lowagie.text.Chunk, java.lang.String)"], ["void", "com.lowagie.text.pdf.events.IndexEvents.create(com.lowagie.text.Chunk, java.lang.String, java.lang.String)", "public void create(com.lowagie.text.Chunk, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.events.IndexEvents.setComparator(java.util.Comparator)", "public void setComparator(java.util.Comparator)"], ["java.util.List", "com.lowagie.text.pdf.events.IndexEvents.getSortedEntries()", "public java.util.List getSortedEntries()"], ["com.lowagie.text.pdf.events.PdfPCellEventForwarder", "com.lowagie.text.pdf.events.PdfPCellEventForwarder()", "public com.lowagie.text.pdf.events.PdfPCellEventForwarder()"], ["void", "com.lowagie.text.pdf.events.PdfPCellEventForwarder.addCellEvent(com.lowagie.text.pdf.PdfPCellEvent)", "public void addCellEvent(com.lowagie.text.pdf.PdfPCellEvent)"], ["void", "com.lowagie.text.pdf.events.PdfPCellEventForwarder.cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])", "public void cellLayout(com.lowagie.text.pdf.PdfPCell, com.lowagie.text.Rectangle, com.lowagie.text.pdf.PdfContentByte[])"], ["com.lowagie.text.pdf.events.PdfPTableEventForwarder", "com.lowagie.text.pdf.events.PdfPTableEventForwarder()", "public com.lowagie.text.pdf.events.PdfPTableEventForwarder()"], ["void", "com.lowagie.text.pdf.events.PdfPTableEventForwarder.addTableEvent(com.lowagie.text.pdf.PdfPTableEvent)", "public void addTableEvent(com.lowagie.text.pdf.PdfPTableEvent)"], ["void", "com.lowagie.text.pdf.events.PdfPTableEventForwarder.tableLayout(com.lowagie.text.pdf.PdfPTable, float[][], float[], int, int, com.lowagie.text.pdf.PdfContentByte[])", "public void tableLayout(com.lowagie.text.pdf.PdfPTable, float[][], float[], int, int, com.lowagie.text.pdf.PdfContentByte[])"], ["com.lowagie.text.pdf.events.PdfPageEventForwarder", "com.lowagie.text.pdf.events.PdfPageEventForwarder()", "public com.lowagie.text.pdf.events.PdfPageEventForwarder()"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.addPageEvent(com.lowagie.text.pdf.PdfPageEvent)", "public void addPageEvent(com.lowagie.text.pdf.PdfPageEvent)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onOpenDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onOpenDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onStartPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onStartPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onEndPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onEndPage(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onCloseDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)", "public void onCloseDocument(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onParagraph(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onParagraph(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onParagraphEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onParagraphEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onChapter(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, com.lowagie.text.Paragraph)", "public void onChapter(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, com.lowagie.text.Paragraph)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onChapterEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onChapterEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onSection(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, int, com.lowagie.text.Paragraph)", "public void onSection(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float, int, com.lowagie.text.Paragraph)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onSectionEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)", "public void onSectionEnd(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, float)"], ["void", "com.lowagie.text.pdf.events.PdfPageEventForwarder.onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)", "public void onGenericTag(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Document, com.lowagie.text.Rectangle, java.lang.String)"], ["com.lowagie.text.pdf.fonts.FontsResourceAnchor", "com.lowagie.text.pdf.fonts.FontsResourceAnchor()", "public com.lowagie.text.pdf.fonts.FontsResourceAnchor()"], ["com.lowagie.text.pdf.fonts.cmaps.CMap", "com.lowagie.text.pdf.fonts.cmaps.CMap()", "public com.lowagie.text.pdf.fonts.cmaps.CMap()"], ["boolean", "com.lowagie.text.pdf.fonts.cmaps.CMap.hasOneByteMappings()", "public boolean hasOneByteMappings()"], ["boolean", "com.lowagie.text.pdf.fonts.cmaps.CMap.hasTwoByteMappings()", "public boolean hasTwoByteMappings()"], ["java.lang.String", "com.lowagie.text.pdf.fonts.cmaps.CMap.lookup(byte[], int, int)", "public java.lang.String lookup(byte[], int, int)"], ["void", "com.lowagie.text.pdf.fonts.cmaps.CMap.addMapping(byte[], java.lang.String)", "public void addMapping(byte[], java.lang.String) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.fonts.cmaps.CMap.addCodespaceRange(com.lowagie.text.pdf.fonts.cmaps.CodespaceRange)", "public void addCodespaceRange(com.lowagie.text.pdf.fonts.cmaps.CodespaceRange)"], ["java.util.List", "com.lowagie.text.pdf.fonts.cmaps.CMap.getCodeSpaceRanges()", "public java.util.List getCodeSpaceRanges()"], ["com.lowagie.text.pdf.fonts.cmaps.CMapParser", "com.lowagie.text.pdf.fonts.cmaps.CMapParser()", "public com.lowagie.text.pdf.fonts.cmaps.CMapParser()"], ["com.lowagie.text.pdf.fonts.cmaps.CMap", "com.lowagie.text.pdf.fonts.cmaps.CMapParser.parse(java.io.InputStream)", "public com.lowagie.text.pdf.fonts.cmaps.CMap parse(java.io.InputStream) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.fonts.cmaps.CMapParser.main(java.lang.String[])", "public static void main(java.lang.String[]) throws java.lang.Exception"], ["com.lowagie.text.pdf.fonts.cmaps.CodespaceRange", "com.lowagie.text.pdf.fonts.cmaps.CodespaceRange()", "public com.lowagie.text.pdf.fonts.cmaps.CodespaceRange()"], ["byte[]", "com.lowagie.text.pdf.fonts.cmaps.CodespaceRange.getEnd()", "public byte[] getEnd()"], ["void", "com.lowagie.text.pdf.fonts.cmaps.CodespaceRange.setEnd(byte[])", "public void setEnd(byte[])"], ["byte[]", "com.lowagie.text.pdf.fonts.cmaps.CodespaceRange.getStart()", "public byte[] getStart()"], ["void", "com.lowagie.text.pdf.fonts.cmaps.CodespaceRange.setStart(byte[])", "public void setStart(byte[])"], ["com.lowagie.text.pdf.hyphenation.ByteVector", "com.lowagie.text.pdf.hyphenation.ByteVector()", "public com.lowagie.text.pdf.hyphenation.ByteVector()"], ["com.lowagie.text.pdf.hyphenation.ByteVector", "com.lowagie.text.pdf.hyphenation.ByteVector(int)", "public com.lowagie.text.pdf.hyphenation.ByteVector(int)"], ["com.lowagie.text.pdf.hyphenation.ByteVector", "com.lowagie.text.pdf.hyphenation.ByteVector(byte[])", "public com.lowagie.text.pdf.hyphenation.ByteVector(byte[])"], ["com.lowagie.text.pdf.hyphenation.ByteVector", "com.lowagie.text.pdf.hyphenation.ByteVector(byte[], int)", "public com.lowagie.text.pdf.hyphenation.ByteVector(byte[], int)"], ["byte[]", "com.lowagie.text.pdf.hyphenation.ByteVector.getArray()", "public byte[] getArray()"], ["int", "com.lowagie.text.pdf.hyphenation.ByteVector.length()", "public int length()"], ["int", "com.lowagie.text.pdf.hyphenation.ByteVector.capacity()", "public int capacity()"], ["void", "com.lowagie.text.pdf.hyphenation.ByteVector.put(int, byte)", "public void put(int, byte)"], ["byte", "com.lowagie.text.pdf.hyphenation.ByteVector.get(int)", "public byte get(int)"], ["int", "com.lowagie.text.pdf.hyphenation.ByteVector.alloc(int)", "public int alloc(int)"], ["void", "com.lowagie.text.pdf.hyphenation.ByteVector.trimToSize()", "public void trimToSize()"], ["com.lowagie.text.pdf.hyphenation.CharVector", "com.lowagie.text.pdf.hyphenation.CharVector()", "public com.lowagie.text.pdf.hyphenation.CharVector()"], ["com.lowagie.text.pdf.hyphenation.CharVector", "com.lowagie.text.pdf.hyphenation.CharVector(int)", "public com.lowagie.text.pdf.hyphenation.CharVector(int)"], ["com.lowagie.text.pdf.hyphenation.CharVector", "com.lowagie.text.pdf.hyphenation.CharVector(char[])", "public com.lowagie.text.pdf.hyphenation.CharVector(char[])"], ["com.lowagie.text.pdf.hyphenation.CharVector", "com.lowagie.text.pdf.hyphenation.CharVector(char[], int)", "public com.lowagie.text.pdf.hyphenation.CharVector(char[], int)"], ["void", "com.lowagie.text.pdf.hyphenation.CharVector.clear()", "public void clear()"], ["java.lang.Object", "com.lowagie.text.pdf.hyphenation.CharVector.clone()", "public java.lang.Object clone()"], ["char[]", "com.lowagie.text.pdf.hyphenation.CharVector.getArray()", "public char[] getArray()"], ["int", "com.lowagie.text.pdf.hyphenation.CharVector.length()", "public int length()"], ["int", "com.lowagie.text.pdf.hyphenation.CharVector.capacity()", "public int capacity()"], ["void", "com.lowagie.text.pdf.hyphenation.CharVector.put(int, char)", "public void put(int, char)"], ["char", "com.lowagie.text.pdf.hyphenation.CharVector.get(int)", "public char get(int)"], ["int", "com.lowagie.text.pdf.hyphenation.CharVector.alloc(int)", "public int alloc(int)"], ["void", "com.lowagie.text.pdf.hyphenation.CharVector.trimToSize()", "public void trimToSize()"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.Hyphen.toString()", "public java.lang.String toString()"], ["int", "com.lowagie.text.pdf.hyphenation.Hyphenation.length()", "public int length()"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.Hyphenation.getPreHyphenText(int)", "public java.lang.String getPreHyphenText(int)"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.Hyphenation.getPostHyphenText(int)", "public java.lang.String getPostHyphenText(int)"], ["int[]", "com.lowagie.text.pdf.hyphenation.Hyphenation.getHyphenationPoints()", "public int[] getHyphenationPoints()"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.Hyphenation.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.hyphenation.HyphenationException", "com.lowagie.text.pdf.hyphenation.HyphenationException(java.lang.String)", "public com.lowagie.text.pdf.hyphenation.HyphenationException(java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.HyphenationTree", "com.lowagie.text.pdf.hyphenation.HyphenationTree()", "public com.lowagie.text.pdf.hyphenation.HyphenationTree()"], ["void", "com.lowagie.text.pdf.hyphenation.HyphenationTree.loadSimplePatterns(java.io.InputStream)", "public void loadSimplePatterns(java.io.InputStream)"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.HyphenationTree.findPattern(java.lang.String)", "public java.lang.String findPattern(java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.HyphenationTree.hyphenate(java.lang.String, int, int)", "public com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(java.lang.String, int, int)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.HyphenationTree.hyphenate(char[], int, int, int, int)", "public com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(char[], int, int, int, int)"], ["void", "com.lowagie.text.pdf.hyphenation.HyphenationTree.addClass(java.lang.String)", "public void addClass(java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.HyphenationTree.addException(java.lang.String, java.util.ArrayList)", "public void addException(java.lang.String, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.hyphenation.HyphenationTree.addPattern(java.lang.String, java.lang.String)", "public void addPattern(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.HyphenationTree.printStats()", "public void printStats()"], ["com.lowagie.text.pdf.hyphenation.Hyphenator", "com.lowagie.text.pdf.hyphenation.Hyphenator(java.lang.String, java.lang.String, int, int)", "public com.lowagie.text.pdf.hyphenation.Hyphenator(java.lang.String, java.lang.String, int, int)"], ["com.lowagie.text.pdf.hyphenation.HyphenationTree", "com.lowagie.text.pdf.hyphenation.Hyphenator.getHyphenationTree(java.lang.String, java.lang.String)", "public static com.lowagie.text.pdf.hyphenation.HyphenationTree getHyphenationTree(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.HyphenationTree", "com.lowagie.text.pdf.hyphenation.Hyphenator.getResourceHyphenationTree(java.lang.String)", "public static com.lowagie.text.pdf.hyphenation.HyphenationTree getResourceHyphenationTree(java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.HyphenationTree", "com.lowagie.text.pdf.hyphenation.Hyphenator.getFileHyphenationTree(java.lang.String)", "public static com.lowagie.text.pdf.hyphenation.HyphenationTree getFileHyphenationTree(java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.Hyphenator.hyphenate(java.lang.String, java.lang.String, java.lang.String, int, int)", "public static com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(java.lang.String, java.lang.String, java.lang.String, int, int)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.Hyphenator.hyphenate(java.lang.String, java.lang.String, char[], int, int, int, int)", "public static com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(java.lang.String, java.lang.String, char[], int, int, int, int)"], ["void", "com.lowagie.text.pdf.hyphenation.Hyphenator.setMinRemainCharCount(int)", "public void setMinRemainCharCount(int)"], ["void", "com.lowagie.text.pdf.hyphenation.Hyphenator.setMinPushCharCount(int)", "public void setMinPushCharCount(int)"], ["void", "com.lowagie.text.pdf.hyphenation.Hyphenator.setLanguage(java.lang.String, java.lang.String)", "public void setLanguage(java.lang.String, java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.Hyphenator.hyphenate(char[], int, int)", "public com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(char[], int, int)"], ["com.lowagie.text.pdf.hyphenation.Hyphenation", "com.lowagie.text.pdf.hyphenation.Hyphenator.hyphenate(java.lang.String)", "public com.lowagie.text.pdf.hyphenation.Hyphenation hyphenate(java.lang.String)"], ["java.lang.String", "com.lowagie.text.pdf.hyphenation.Hyphenator.getHyphenDir()", "public static java.lang.String getHyphenDir()"], ["void", "com.lowagie.text.pdf.hyphenation.Hyphenator.setHyphenDir(java.lang.String)", "public static void setHyphenDir(java.lang.String)"], ["com.lowagie.text.pdf.hyphenation.SimplePatternParser", "com.lowagie.text.pdf.hyphenation.SimplePatternParser()", "public com.lowagie.text.pdf.hyphenation.SimplePatternParser()"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.parse(java.io.InputStream, com.lowagie.text.pdf.hyphenation.PatternConsumer)", "public void parse(java.io.InputStream, com.lowagie.text.pdf.hyphenation.PatternConsumer)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.endDocument()", "public void endDocument()"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.endElement(java.lang.String)", "public void endElement(java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.startDocument()", "public void startDocument()"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.startElement(java.lang.String, java.util.HashMap)", "public void startElement(java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.text(java.lang.String)", "public void text(java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.addClass(java.lang.String)", "public void addClass(java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.addException(java.lang.String, java.util.ArrayList)", "public void addException(java.lang.String, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.addPattern(java.lang.String, java.lang.String)", "public void addPattern(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.pdf.hyphenation.SimplePatternParser.main(java.lang.String[])", "public static void main(java.lang.String[]) throws java.lang.Exception"], ["com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item(com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator)", "public com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item(com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator)"], ["com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item(com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator, char, char)", "public com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item(com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator, char, char)"], ["java.lang.Object", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator$Item.clone()", "public java.lang.Object clone()"], ["com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator(com.lowagie.text.pdf.hyphenation.TernaryTree)", "public com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator(com.lowagie.text.pdf.hyphenation.TernaryTree)"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator.rewind()", "public void rewind()"], ["java.lang.Object", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator.nextElement()", "public java.lang.Object nextElement()"], ["char", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator.getValue()", "public char getValue()"], ["boolean", "com.lowagie.text.pdf.hyphenation.TernaryTree$Iterator.hasMoreElements()", "public boolean hasMoreElements()"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.insert(java.lang.String, char)", "public void insert(java.lang.String, char)"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.insert(char[], int, char)", "public void insert(char[], int, char)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.strcmp(char[], int, char[], int)", "public static int strcmp(char[], int, char[], int)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.strcmp(java.lang.String, char[], int)", "public static int strcmp(java.lang.String, char[], int)"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.strcpy(char[], int, char[], int)", "public static void strcpy(char[], int, char[], int)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.strlen(char[], int)", "public static int strlen(char[], int)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.strlen(char[])", "public static int strlen(char[])"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.find(java.lang.String)", "public int find(java.lang.String)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.find(char[], int)", "public int find(char[], int)"], ["boolean", "com.lowagie.text.pdf.hyphenation.TernaryTree.knows(java.lang.String)", "public boolean knows(java.lang.String)"], ["int", "com.lowagie.text.pdf.hyphenation.TernaryTree.size()", "public int size()"], ["java.lang.Object", "com.lowagie.text.pdf.hyphenation.TernaryTree.clone()", "public java.lang.Object clone()"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.balance()", "public void balance()"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.trimToSize()", "public void trimToSize()"], ["java.util.Enumeration", "com.lowagie.text.pdf.hyphenation.TernaryTree.keys()", "public java.util.Enumeration keys()"], ["void", "com.lowagie.text.pdf.hyphenation.TernaryTree.printStats()", "public void printStats()"], ["com.lowagie.text.pdf.internal.PdfAnnotationsImp", "com.lowagie.text.pdf.internal.PdfAnnotationsImp(com.lowagie.text.pdf.PdfWriter)", "public com.lowagie.text.pdf.internal.PdfAnnotationsImp(com.lowagie.text.pdf.PdfWriter)"], ["boolean", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.hasValidAcroForm()", "public boolean hasValidAcroForm()"], ["com.lowagie.text.pdf.PdfAcroForm", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.getAcroForm()", "public com.lowagie.text.pdf.PdfAcroForm getAcroForm()"], ["void", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.setSigFlags(int)", "public void setSigFlags(int)"], ["void", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.addCalculationOrder(com.lowagie.text.pdf.PdfFormField)", "public void addCalculationOrder(com.lowagie.text.pdf.PdfFormField)"], ["void", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.addAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["void", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.addPlainAnnotation(com.lowagie.text.pdf.PdfAnnotation)", "public void addPlainAnnotation(com.lowagie.text.pdf.PdfAnnotation)"], ["boolean", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.hasUnusedAnnotations()", "public boolean hasUnusedAnnotations()"], ["void", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.resetAnnotations()", "public void resetAnnotations()"], ["com.lowagie.text.pdf.PdfArray", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.rotateAnnotations(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle)", "public com.lowagie.text.pdf.PdfArray rotateAnnotations(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Rectangle)"], ["com.lowagie.text.pdf.PdfAnnotation", "com.lowagie.text.pdf.internal.PdfAnnotationsImp.convertAnnotation(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Annotation, com.lowagie.text.Rectangle)", "public static com.lowagie.text.pdf.PdfAnnotation convertAnnotation(com.lowagie.text.pdf.PdfWriter, com.lowagie.text.Annotation, com.lowagie.text.Rectangle) throws java.io.IOException"], ["com.lowagie.text.pdf.internal.PdfVersionImp", "com.lowagie.text.pdf.internal.PdfVersionImp()", "public com.lowagie.text.pdf.internal.PdfVersionImp()"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.setPdfVersion(char)", "public void setPdfVersion(char)"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.setAtLeastPdfVersion(char)", "public void setAtLeastPdfVersion(char)"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.setPdfVersion(com.lowagie.text.pdf.PdfName)", "public void setPdfVersion(com.lowagie.text.pdf.PdfName)"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.setAppendmode(boolean)", "public void setAppendmode(boolean)"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.writeHeader(com.lowagie.text.pdf.OutputStreamCounter)", "public void writeHeader(com.lowagie.text.pdf.OutputStreamCounter) throws java.io.IOException"], ["com.lowagie.text.pdf.PdfName", "com.lowagie.text.pdf.internal.PdfVersionImp.getVersionAsName(char)", "public com.lowagie.text.pdf.PdfName getVersionAsName(char)"], ["byte[]", "com.lowagie.text.pdf.internal.PdfVersionImp.getVersionAsByteArray(char)", "public byte[] getVersionAsByteArray(char)"], ["void", "com.lowagie.text.pdf.internal.PdfVersionImp.addToCatalog(com.lowagie.text.pdf.PdfDictionary)", "public void addToCatalog(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.internal.PdfViewerPreferencesImp", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp()", "public com.lowagie.text.pdf.internal.PdfViewerPreferencesImp()"], ["int", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.getPageLayoutAndMode()", "public int getPageLayoutAndMode()"], ["com.lowagie.text.pdf.PdfDictionary", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.getViewerPreferences()", "public com.lowagie.text.pdf.PdfDictionary getViewerPreferences()"], ["void", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.setViewerPreferences(int)", "public void setViewerPreferences(int)"], ["void", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)", "public void addViewerPreference(com.lowagie.text.pdf.PdfName, com.lowagie.text.pdf.PdfObject)"], ["void", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.addToCatalog(com.lowagie.text.pdf.PdfDictionary)", "public void addToCatalog(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.internal.PdfViewerPreferencesImp", "com.lowagie.text.pdf.internal.PdfViewerPreferencesImp.getViewerPreferences(com.lowagie.text.pdf.PdfDictionary)", "public static com.lowagie.text.pdf.internal.PdfViewerPreferencesImp getViewerPreferences(com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.internal.PdfXConformanceImp", "com.lowagie.text.pdf.internal.PdfXConformanceImp()", "public com.lowagie.text.pdf.internal.PdfXConformanceImp()"], ["void", "com.lowagie.text.pdf.internal.PdfXConformanceImp.setPDFXConformance(int)", "public void setPDFXConformance(int)"], ["int", "com.lowagie.text.pdf.internal.PdfXConformanceImp.getPDFXConformance()", "public int getPDFXConformance()"], ["boolean", "com.lowagie.text.pdf.internal.PdfXConformanceImp.isPdfX()", "public boolean isPdfX()"], ["boolean", "com.lowagie.text.pdf.internal.PdfXConformanceImp.isPdfX1A2001()", "public boolean isPdfX1A2001()"], ["boolean", "com.lowagie.text.pdf.internal.PdfXConformanceImp.isPdfX32002()", "public boolean isPdfX32002()"], ["boolean", "com.lowagie.text.pdf.internal.PdfXConformanceImp.isPdfA1()", "public boolean isPdfA1()"], ["boolean", "com.lowagie.text.pdf.internal.PdfXConformanceImp.isPdfA1A()", "public boolean isPdfA1A()"], ["void", "com.lowagie.text.pdf.internal.PdfXConformanceImp.completeInfoDictionary(com.lowagie.text.pdf.PdfDictionary)", "public void completeInfoDictionary(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.pdf.internal.PdfXConformanceImp.completeExtraCatalog(com.lowagie.text.pdf.PdfDictionary)", "public void completeExtraCatalog(com.lowagie.text.pdf.PdfDictionary)"], ["void", "com.lowagie.text.pdf.internal.PdfXConformanceImp.checkPDFXConformance(com.lowagie.text.pdf.PdfWriter, int, java.lang.Object)", "public static void checkPDFXConformance(com.lowagie.text.pdf.PdfWriter, int, java.lang.Object)"], ["com.lowagie.text.pdf.internal.PolylineShape", "com.lowagie.text.pdf.internal.PolylineShape(int[], int[], int)", "public com.lowagie.text.pdf.internal.PolylineShape(int[], int[], int)"], ["java.awt.geom.Rectangle2D", "com.lowagie.text.pdf.internal.PolylineShape.getBounds2D()", "public java.awt.geom.Rectangle2D getBounds2D()"], ["java.awt.Rectangle", "com.lowagie.text.pdf.internal.PolylineShape.getBounds()", "public java.awt.Rectangle getBounds()"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.contains(double, double)", "public boolean contains(double, double)"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.contains(java.awt.geom.Point2D)", "public boolean contains(java.awt.geom.Point2D)"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.contains(double, double, double, double)", "public boolean contains(double, double, double, double)"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.contains(java.awt.geom.Rectangle2D)", "public boolean contains(java.awt.geom.Rectangle2D)"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.intersects(double, double, double, double)", "public boolean intersects(double, double, double, double)"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShape.intersects(java.awt.geom.Rectangle2D)", "public boolean intersects(java.awt.geom.Rectangle2D)"], ["java.awt.geom.PathIterator", "com.lowagie.text.pdf.internal.PolylineShape.getPathIterator(java.awt.geom.AffineTransform)", "public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)"], ["java.awt.geom.PathIterator", "com.lowagie.text.pdf.internal.PolylineShape.getPathIterator(java.awt.geom.AffineTransform, double)", "public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)"], ["int", "com.lowagie.text.pdf.internal.PolylineShapeIterator.currentSegment(double[])", "public int currentSegment(double[])"], ["int", "com.lowagie.text.pdf.internal.PolylineShapeIterator.currentSegment(float[])", "public int currentSegment(float[])"], ["int", "com.lowagie.text.pdf.internal.PolylineShapeIterator.getWindingRule()", "public int getWindingRule()"], ["boolean", "com.lowagie.text.pdf.internal.PolylineShapeIterator.isDone()", "public boolean isDone()"], ["void", "com.lowagie.text.pdf.internal.PolylineShapeIterator.next()", "public void next()"], ["com.lowagie.text.pdf.parser.GraphicsState", "com.lowagie.text.pdf.parser.GraphicsState()", "public com.lowagie.text.pdf.parser.GraphicsState()"], ["com.lowagie.text.pdf.parser.GraphicsState", "com.lowagie.text.pdf.parser.GraphicsState(com.lowagie.text.pdf.parser.GraphicsState)", "public com.lowagie.text.pdf.parser.GraphicsState(com.lowagie.text.pdf.parser.GraphicsState)"], ["com.lowagie.text.pdf.parser.Matrix", "com.lowagie.text.pdf.parser.Matrix()", "public com.lowagie.text.pdf.parser.Matrix()"], ["com.lowagie.text.pdf.parser.Matrix", "com.lowagie.text.pdf.parser.Matrix(float, float)", "public com.lowagie.text.pdf.parser.Matrix(float, float)"], ["com.lowagie.text.pdf.parser.Matrix", "com.lowagie.text.pdf.parser.Matrix(float, float, float, float, float, float)", "public com.lowagie.text.pdf.parser.Matrix(float, float, float, float, float, float)"], ["float", "com.lowagie.text.pdf.parser.Matrix.get(int)", "public float get(int)"], ["com.lowagie.text.pdf.parser.Matrix", "com.lowagie.text.pdf.parser.Matrix.multiply(com.lowagie.text.pdf.parser.Matrix)", "public com.lowagie.text.pdf.parser.Matrix multiply(com.lowagie.text.pdf.parser.Matrix)"], ["boolean", "com.lowagie.text.pdf.parser.Matrix.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.lowagie.text.pdf.parser.Matrix.hashCode()", "public int hashCode()"], ["java.lang.String", "com.lowagie.text.pdf.parser.Matrix.toString()", "public java.lang.String toString()"], ["com.lowagie.text.pdf.parser.PdfContentReaderTool", "com.lowagie.text.pdf.parser.PdfContentReaderTool()", "public com.lowagie.text.pdf.parser.PdfContentReaderTool()"], ["java.lang.String", "com.lowagie.text.pdf.parser.PdfContentReaderTool.getDictionaryDetail(com.lowagie.text.pdf.PdfDictionary)", "public static java.lang.String getDictionaryDetail(com.lowagie.text.pdf.PdfDictionary)"], ["java.lang.String", "com.lowagie.text.pdf.parser.PdfContentReaderTool.getDictionaryDetail(com.lowagie.text.pdf.PdfDictionary, int)", "public static java.lang.String getDictionaryDetail(com.lowagie.text.pdf.PdfDictionary, int)"], ["void", "com.lowagie.text.pdf.parser.PdfContentReaderTool.listContentStream(java.io.File)", "public static void listContentStream(java.io.File) throws java.io.IOException"], ["void", "com.lowagie.text.pdf.parser.PdfContentReaderTool.main(java.lang.String[])", "public static void main(java.lang.String[]) throws java.lang.Exception"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$BeginText.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$EndText.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$ModifyCurrentTransformationMatrix.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$MoveNextLineAndShowText.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$MoveNextLineAndShowTextWithSpacing.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$PopGraphicsState.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$ProcessGraphicsStateResource.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$PushGraphicsState.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextCharacterSpacing.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextFont.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextHorizontalScaling.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextLeading.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextRenderMode.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextRise.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$SetTextWordSpacing.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$ShowText.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$ShowTextArray.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$TextMoveNextLine.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$TextMoveStartNextLine.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$TextMoveStartNextLineWithLeading.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor$TextSetTextMatrix.invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invoke(com.lowagie.text.pdf.parser.PdfContentStreamProcessor, com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["com.lowagie.text.pdf.parser.PdfContentStreamProcessor", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor()", "public com.lowagie.text.pdf.parser.PdfContentStreamProcessor()"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.reset()", "public void reset()"], ["com.lowagie.text.pdf.parser.GraphicsState", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.gs()", "public com.lowagie.text.pdf.parser.GraphicsState gs()"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.invokeOperator(com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)", "public void invokeOperator(com.lowagie.text.pdf.PdfLiteral, java.util.ArrayList)"], ["float", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.getStringWidth(java.lang.String, float)", "public float getStringWidth(java.lang.String, float)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.displayPdfString(com.lowagie.text.pdf.PdfString, float)", "public void displayPdfString(com.lowagie.text.pdf.PdfString, float)"], ["void", "com.lowagie.text.pdf.parser.PdfContentStreamProcessor.processContent(byte[], com.lowagie.text.pdf.PdfDictionary)", "public void processContent(byte[], com.lowagie.text.pdf.PdfDictionary)"], ["com.lowagie.text.pdf.parser.PdfTextExtractor", "com.lowagie.text.pdf.parser.PdfTextExtractor(com.lowagie.text.pdf.PdfReader)", "public com.lowagie.text.pdf.parser.PdfTextExtractor(com.lowagie.text.pdf.PdfReader)"], ["java.lang.String", "com.lowagie.text.pdf.parser.PdfTextExtractor.getTextFromPage(int)", "public java.lang.String getTextFromPage(int) throws java.io.IOException"], ["com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor", "com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor()", "public com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor()"], ["void", "com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor.reset()", "public void reset()"], ["java.lang.String", "com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor.getResultantText()", "public java.lang.String getResultantText()"], ["void", "com.lowagie.text.pdf.parser.SimpleTextExtractingPdfContentStreamProcessor.displayText(java.lang.String, com.lowagie.text.pdf.parser.Matrix)", "public void displayText(java.lang.String, com.lowagie.text.pdf.parser.Matrix)"], ["com.lowagie.text.xml.SAXiTextHandler", "com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener)", "public com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener)"], ["com.lowagie.text.xml.SAXiTextHandler", "com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, com.lowagie.text.html.HtmlTagMap)", "public com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, com.lowagie.text.html.HtmlTagMap)"], ["com.lowagie.text.xml.SAXiTextHandler", "com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, com.lowagie.text.html.HtmlTagMap, com.lowagie.text.pdf.BaseFont)", "public com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, com.lowagie.text.html.HtmlTagMap, com.lowagie.text.pdf.BaseFont)"], ["com.lowagie.text.xml.SAXiTextHandler", "com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, java.util.HashMap)", "public com.lowagie.text.xml.SAXiTextHandler(com.lowagie.text.DocListener, java.util.HashMap)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.setControlOpenClose(boolean)", "public void setControlOpenClose(boolean)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)", "public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.handleStartingTags(java.lang.String, java.util.Properties)", "public void handleStartingTags(java.lang.String, java.util.Properties)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.ignorableWhitespace(char[], int, int)", "public void ignorableWhitespace(char[], int, int)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.characters(char[], int, int)", "public void characters(char[], int, int)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.setBaseFont(com.lowagie.text.pdf.BaseFont)", "public void setBaseFont(com.lowagie.text.pdf.BaseFont)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.endElement(java.lang.String, java.lang.String, java.lang.String)", "public void endElement(java.lang.String, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.xml.SAXiTextHandler.handleEndingTags(java.lang.String)", "public void handleEndingTags(java.lang.String)"], ["com.lowagie.text.xml.SAXmyHandler", "com.lowagie.text.xml.SAXmyHandler(com.lowagie.text.DocListener, java.util.HashMap)", "public com.lowagie.text.xml.SAXmyHandler(com.lowagie.text.DocListener, java.util.HashMap)"], ["void", "com.lowagie.text.xml.SAXmyHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)", "public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "com.lowagie.text.xml.SAXmyHandler.endElement(java.lang.String, java.lang.String, java.lang.String)", "public void endElement(java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.xml.TagMap$AttributeHandler", "com.lowagie.text.xml.TagMap$AttributeHandler(com.lowagie.text.xml.TagMap, java.util.HashMap)", "public com.lowagie.text.xml.TagMap$AttributeHandler(com.lowagie.text.xml.TagMap, java.util.HashMap)"], ["void", "com.lowagie.text.xml.TagMap$AttributeHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)", "public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "com.lowagie.text.xml.TagMap$AttributeHandler.ignorableWhitespace(char[], int, int)", "public void ignorableWhitespace(char[], int, int)"], ["void", "com.lowagie.text.xml.TagMap$AttributeHandler.characters(char[], int, int)", "public void characters(char[], int, int)"], ["void", "com.lowagie.text.xml.TagMap$AttributeHandler.endElement(java.lang.String, java.lang.String, java.lang.String)", "public void endElement(java.lang.String, java.lang.String, java.lang.String)"], ["com.lowagie.text.xml.TagMap", "com.lowagie.text.xml.TagMap(java.lang.String)", "public com.lowagie.text.xml.TagMap(java.lang.String)"], ["com.lowagie.text.xml.TagMap", "com.lowagie.text.xml.TagMap(java.io.InputStream)", "public com.lowagie.text.xml.TagMap(java.io.InputStream)"], ["com.lowagie.text.xml.XmlDomWriter", "com.lowagie.text.xml.XmlDomWriter()", "public com.lowagie.text.xml.XmlDomWriter()"], ["com.lowagie.text.xml.XmlDomWriter", "com.lowagie.text.xml.XmlDomWriter(boolean)", "public com.lowagie.text.xml.XmlDomWriter(boolean)"], ["void", "com.lowagie.text.xml.XmlDomWriter.setCanonical(boolean)", "public void setCanonical(boolean)"], ["void", "com.lowagie.text.xml.XmlDomWriter.setOutput(java.io.OutputStream, java.lang.String)", "public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException"], ["void", "com.lowagie.text.xml.XmlDomWriter.setOutput(java.io.Writer)", "public void setOutput(java.io.Writer)"], ["void", "com.lowagie.text.xml.XmlDomWriter.write(org.w3c.dom.Node)", "public void write(org.w3c.dom.Node)"], ["com.lowagie.text.xml.XmlParser", "com.lowagie.text.xml.XmlParser()", "public com.lowagie.text.xml.XmlParser()"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, org.xml.sax.InputSource)", "public void go(com.lowagie.text.DocListener, org.xml.sax.InputSource)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.lang.String)", "public void go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.io.InputStream)", "public void go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.io.InputStream)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.util.HashMap)", "public void go(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.util.HashMap)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, java.lang.String)", "public void go(com.lowagie.text.DocListener, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, java.lang.String, java.lang.String)", "public void go(com.lowagie.text.DocListener, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.go(com.lowagie.text.DocListener, java.lang.String, java.util.HashMap)", "public void go(com.lowagie.text.DocListener, java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, org.xml.sax.InputSource)", "public static void parse(com.lowagie.text.DocListener, org.xml.sax.InputSource)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.util.HashMap)", "public static void parse(com.lowagie.text.DocListener, org.xml.sax.InputSource, java.util.HashMap)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.lang.String, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.lang.String, java.util.HashMap)", "public static void parse(com.lowagie.text.DocListener, java.lang.String, java.util.HashMap)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.InputStream)", "public static void parse(com.lowagie.text.DocListener, java.io.InputStream)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.InputStream, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, java.io.InputStream, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.InputStream, java.util.HashMap)", "public static void parse(com.lowagie.text.DocListener, java.io.InputStream, java.util.HashMap)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.Reader)", "public static void parse(com.lowagie.text.DocListener, java.io.Reader)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.Reader, java.lang.String)", "public static void parse(com.lowagie.text.DocListener, java.io.Reader, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlParser.parse(com.lowagie.text.DocListener, java.io.Reader, java.util.HashMap)", "public static void parse(com.lowagie.text.DocListener, java.io.Reader, java.util.HashMap)"], ["com.lowagie.text.xml.XmlPeer", "com.lowagie.text.xml.XmlPeer(java.lang.String, java.lang.String)", "public com.lowagie.text.xml.XmlPeer(java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.XmlPeer.getTag()", "public java.lang.String getTag()"], ["java.lang.String", "com.lowagie.text.xml.XmlPeer.getAlias()", "public java.lang.String getAlias()"], ["java.util.Properties", "com.lowagie.text.xml.XmlPeer.getAttributes(org.xml.sax.Attributes)", "public java.util.Properties getAttributes(org.xml.sax.Attributes)"], ["void", "com.lowagie.text.xml.XmlPeer.addAlias(java.lang.String, java.lang.String)", "public void addAlias(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlPeer.addValue(java.lang.String, java.lang.String)", "public void addValue(java.lang.String, java.lang.String)"], ["void", "com.lowagie.text.xml.XmlPeer.setContent(java.lang.String)", "public void setContent(java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.XmlPeer.getName(java.lang.String)", "public java.lang.String getName(java.lang.String)"], ["java.util.Properties", "com.lowagie.text.xml.XmlPeer.getDefaultValues()", "public java.util.Properties getDefaultValues()"], ["com.lowagie.text.xml.simpleparser.EntitiesToSymbol", "com.lowagie.text.xml.simpleparser.EntitiesToSymbol()", "public com.lowagie.text.xml.simpleparser.EntitiesToSymbol()"], ["com.lowagie.text.Chunk", "com.lowagie.text.xml.simpleparser.EntitiesToSymbol.get(java.lang.String, com.lowagie.text.Font)", "public static com.lowagie.text.Chunk get(java.lang.String, com.lowagie.text.Font)"], ["char", "com.lowagie.text.xml.simpleparser.EntitiesToSymbol.getCorrespondingSymbol(java.lang.String)", "public static char getCorrespondingSymbol(java.lang.String)"], ["com.lowagie.text.xml.simpleparser.EntitiesToUnicode", "com.lowagie.text.xml.simpleparser.EntitiesToUnicode()", "public com.lowagie.text.xml.simpleparser.EntitiesToUnicode()"], ["char", "com.lowagie.text.xml.simpleparser.EntitiesToUnicode.decodeEntity(java.lang.String)", "public static char decodeEntity(java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.simpleparser.EntitiesToUnicode.decodeString(java.lang.String)", "public static java.lang.String decodeString(java.lang.String)"], ["com.lowagie.text.xml.simpleparser.IanaEncodings", "com.lowagie.text.xml.simpleparser.IanaEncodings()", "public com.lowagie.text.xml.simpleparser.IanaEncodings()"], ["java.lang.String", "com.lowagie.text.xml.simpleparser.IanaEncodings.getJavaEncoding(java.lang.String)", "public static java.lang.String getJavaEncoding(java.lang.String)"], ["void", "com.lowagie.text.xml.simpleparser.SimpleXMLParser.parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, com.lowagie.text.xml.simpleparser.SimpleXMLDocHandlerComment, java.io.Reader, boolean)", "public static void parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, com.lowagie.text.xml.simpleparser.SimpleXMLDocHandlerComment, java.io.Reader, boolean) throws java.io.IOException"], ["void", "com.lowagie.text.xml.simpleparser.SimpleXMLParser.parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, java.io.InputStream)", "public static void parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, java.io.InputStream) throws java.io.IOException"], ["void", "com.lowagie.text.xml.simpleparser.SimpleXMLParser.parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, java.io.Reader)", "public static void parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler, java.io.Reader) throws java.io.IOException"], ["java.lang.String", "com.lowagie.text.xml.simpleparser.SimpleXMLParser.escapeXML(java.lang.String, boolean)", "public static java.lang.String escapeXML(java.lang.String, boolean)"], ["com.lowagie.text.xml.xmp.DublinCoreSchema", "com.lowagie.text.xml.xmp.DublinCoreSchema()", "public com.lowagie.text.xml.xmp.DublinCoreSchema()"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addTitle(java.lang.String)", "public void addTitle(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addDescription(java.lang.String)", "public void addDescription(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addSubject(java.lang.String)", "public void addSubject(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addSubject(java.lang.String[])", "public void addSubject(java.lang.String[])"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addAuthor(java.lang.String)", "public void addAuthor(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addAuthor(java.lang.String[])", "public void addAuthor(java.lang.String[])"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addPublisher(java.lang.String)", "public void addPublisher(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.DublinCoreSchema.addPublisher(java.lang.String[])", "public void addPublisher(java.lang.String[])"], ["com.lowagie.text.xml.xmp.LangAlt", "com.lowagie.text.xml.xmp.LangAlt(java.lang.String)", "public com.lowagie.text.xml.xmp.LangAlt(java.lang.String)"], ["com.lowagie.text.xml.xmp.LangAlt", "com.lowagie.text.xml.xmp.LangAlt()", "public com.lowagie.text.xml.xmp.LangAlt()"], ["void", "com.lowagie.text.xml.xmp.LangAlt.addLanguage(java.lang.String, java.lang.String)", "public void addLanguage(java.lang.String, java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.xmp.LangAlt.toString()", "public java.lang.String toString()"], ["com.lowagie.text.xml.xmp.PdfA1Schema", "com.lowagie.text.xml.xmp.PdfA1Schema()", "public com.lowagie.text.xml.xmp.PdfA1Schema()"], ["void", "com.lowagie.text.xml.xmp.PdfA1Schema.addPart(java.lang.String)", "public void addPart(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.PdfA1Schema.addConformance(java.lang.String)", "public void addConformance(java.lang.String)"], ["com.lowagie.text.xml.xmp.PdfSchema", "com.lowagie.text.xml.xmp.PdfSchema()", "public com.lowagie.text.xml.xmp.PdfSchema()"], ["void", "com.lowagie.text.xml.xmp.PdfSchema.addKeywords(java.lang.String)", "public void addKeywords(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.PdfSchema.addProducer(java.lang.String)", "public void addProducer(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.PdfSchema.addVersion(java.lang.String)", "public void addVersion(java.lang.String)"], ["com.lowagie.text.xml.xmp.XmpArray", "com.lowagie.text.xml.xmp.XmpArray(java.lang.String)", "public com.lowagie.text.xml.xmp.XmpArray(java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.xmp.XmpArray.toString()", "public java.lang.String toString()"], ["com.lowagie.text.xml.xmp.XmpBasicSchema", "com.lowagie.text.xml.xmp.XmpBasicSchema()", "public com.lowagie.text.xml.xmp.XmpBasicSchema()"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addCreatorTool(java.lang.String)", "public void addCreatorTool(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addCreateDate(java.lang.String)", "public void addCreateDate(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addModDate(java.lang.String)", "public void addModDate(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addMetaDataDate(java.lang.String)", "public void addMetaDataDate(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addIdentifiers(java.lang.String[])", "public void addIdentifiers(java.lang.String[])"], ["void", "com.lowagie.text.xml.xmp.XmpBasicSchema.addNickname(java.lang.String)", "public void addNickname(java.lang.String)"], ["com.lowagie.text.xml.xmp.XmpMMSchema", "com.lowagie.text.xml.xmp.XmpMMSchema()", "public com.lowagie.text.xml.xmp.XmpMMSchema()"], ["com.lowagie.text.xml.xmp.XmpReader", "com.lowagie.text.xml.xmp.XmpReader(byte[])", "public com.lowagie.text.xml.xmp.XmpReader(byte[]) throws org.xml.sax.SAXException, java.io.IOException"], ["void", "com.lowagie.text.xml.xmp.XmpReader.replace(java.lang.String, java.lang.String, java.lang.String)", "public void replace(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "com.lowagie.text.xml.xmp.XmpReader.setNodeText(org.w3c.dom.Document, org.w3c.dom.Node, java.lang.String)", "public boolean setNodeText(org.w3c.dom.Document, org.w3c.dom.Node, java.lang.String)"], ["byte[]", "com.lowagie.text.xml.xmp.XmpReader.serializeDoc()", "public byte[] serializeDoc() throws java.io.IOException"], ["com.lowagie.text.xml.xmp.XmpSchema", "com.lowagie.text.xml.xmp.XmpSchema(java.lang.String)", "public com.lowagie.text.xml.xmp.XmpSchema(java.lang.String)"], ["java.lang.String", "com.lowagie.text.xml.xmp.XmpSchema.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.lowagie.text.xml.xmp.XmpSchema.getXmlns()", "public java.lang.String getXmlns()"], ["java.lang.Object", "com.lowagie.text.xml.xmp.XmpSchema.addProperty(java.lang.String, java.lang.String)", "public java.lang.Object addProperty(java.lang.String, java.lang.String)"], ["java.lang.Object", "com.lowagie.text.xml.xmp.XmpSchema.setProperty(java.lang.String, java.lang.String)", "public java.lang.Object setProperty(java.lang.String, java.lang.String)"], ["java.lang.Object", "com.lowagie.text.xml.xmp.XmpSchema.setProperty(java.lang.String, com.lowagie.text.xml.xmp.XmpArray)", "public java.lang.Object setProperty(java.lang.String, com.lowagie.text.xml.xmp.XmpArray)"], ["java.lang.Object", "com.lowagie.text.xml.xmp.XmpSchema.setProperty(java.lang.String, com.lowagie.text.xml.xmp.LangAlt)", "public java.lang.Object setProperty(java.lang.String, com.lowagie.text.xml.xmp.LangAlt)"], ["java.lang.String", "com.lowagie.text.xml.xmp.XmpSchema.escape(java.lang.String)", "public static java.lang.String escape(java.lang.String)"], ["com.lowagie.text.xml.xmp.XmpWriter", "com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, java.lang.String, int)", "public com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, java.lang.String, int) throws java.io.IOException"], ["com.lowagie.text.xml.xmp.XmpWriter", "com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream)", "public com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream) throws java.io.IOException"], ["void", "com.lowagie.text.xml.xmp.XmpWriter.setReadOnly()", "public void setReadOnly()"], ["void", "com.lowagie.text.xml.xmp.XmpWriter.setAbout(java.lang.String)", "public void setAbout(java.lang.String)"], ["void", "com.lowagie.text.xml.xmp.XmpWriter.addRdfDescription(java.lang.String, java.lang.String)", "public void addRdfDescription(java.lang.String, java.lang.String) throws java.io.IOException"], ["void", "com.lowagie.text.xml.xmp.XmpWriter.addRdfDescription(com.lowagie.text.xml.xmp.XmpSchema)", "public void addRdfDescription(com.lowagie.text.xml.xmp.XmpSchema) throws java.io.IOException"], ["void", "com.lowagie.text.xml.xmp.XmpWriter.close()", "public void close() throws java.io.IOException"], ["com.lowagie.text.xml.xmp.XmpWriter", "com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, com.lowagie.text.pdf.PdfDictionary, int)", "public com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, com.lowagie.text.pdf.PdfDictionary, int) throws java.io.IOException"], ["com.lowagie.text.xml.xmp.XmpWriter", "com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, java.util.Map)", "public com.lowagie.text.xml.xmp.XmpWriter(java.io.OutputStream, java.util.Map) throws java.io.IOException"], ["com.lowagie.tools.BuildTutorial", "com.lowagie.tools.BuildTutorial()", "public com.lowagie.tools.BuildTutorial()"], ["void", "com.lowagie.tools.BuildTutorial.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["void", "com.lowagie.tools.BuildTutorial.action(java.io.File, java.io.File, java.io.File, java.io.File)", "public static void action(java.io.File, java.io.File, java.io.File, java.io.File) throws java.io.IOException"], ["void", "com.lowagie.tools.BuildTutorial.convert(java.io.File, java.io.File, java.io.File)", "public static void convert(java.io.File, java.io.File, java.io.File)"], ["com.lowagie.tools.ConcatPdf", "com.lowagie.tools.ConcatPdf()", "public com.lowagie.tools.ConcatPdf()"], ["void", "com.lowagie.tools.ConcatPdf.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.tools.EncryptPdf", "com.lowagie.tools.EncryptPdf()", "public com.lowagie.tools.EncryptPdf()"], ["void", "com.lowagie.tools.EncryptPdf.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.tools.Executable", "com.lowagie.tools.Executable()", "public com.lowagie.tools.Executable()"], ["java.lang.Process", "com.lowagie.tools.Executable.openDocument(java.lang.String, boolean)", "public static final java.lang.Process openDocument(java.lang.String, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.openDocument(java.io.File, boolean)", "public static final java.lang.Process openDocument(java.io.File, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.openDocument(java.lang.String)", "public static final java.lang.Process openDocument(java.lang.String) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.openDocument(java.io.File)", "public static final java.lang.Process openDocument(java.io.File) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocument(java.lang.String, boolean)", "public static final java.lang.Process printDocument(java.lang.String, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocument(java.io.File, boolean)", "public static final java.lang.Process printDocument(java.io.File, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocument(java.lang.String)", "public static final java.lang.Process printDocument(java.lang.String) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocument(java.io.File)", "public static final java.lang.Process printDocument(java.io.File) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocumentSilent(java.lang.String, boolean)", "public static final java.lang.Process printDocumentSilent(java.lang.String, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocumentSilent(java.io.File, boolean)", "public static final java.lang.Process printDocumentSilent(java.io.File, boolean) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocumentSilent(java.lang.String)", "public static final java.lang.Process printDocumentSilent(java.lang.String) throws java.io.IOException"], ["java.lang.Process", "com.lowagie.tools.Executable.printDocumentSilent(java.io.File)", "public static final java.lang.Process printDocumentSilent(java.io.File) throws java.io.IOException"], ["void", "com.lowagie.tools.Executable.launchBrowser(java.lang.String)", "public static final void launchBrowser(java.lang.String) throws java.io.IOException"], ["boolean", "com.lowagie.tools.Executable.isWindows()", "public static boolean isWindows()"], ["boolean", "com.lowagie.tools.Executable.isWindows9X()", "public static boolean isWindows9X()"], ["boolean", "com.lowagie.tools.Executable.isMac()", "public static boolean isMac()"], ["boolean", "com.lowagie.tools.Executable.isLinux()", "public static boolean isLinux()"], ["com.lowagie.tools.HandoutPdf", "com.lowagie.tools.HandoutPdf()", "public com.lowagie.tools.HandoutPdf()"], ["void", "com.lowagie.tools.HandoutPdf.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.tools.SplitPdf", "com.lowagie.tools.SplitPdf()", "public com.lowagie.tools.SplitPdf()"], ["void", "com.lowagie.tools.SplitPdf.main(java.lang.String[])", "public static void main(java.lang.String[])"], ["com.lowagie.tools.ToolboxAvailable", "com.lowagie.tools.ToolboxAvailable()", "public com.lowagie.tools.ToolboxAvailable()"], ["void", "com.lowagie.tools.ToolboxAvailable.main(java.lang.String[])", "public static void main(java.lang.String[])"]]}