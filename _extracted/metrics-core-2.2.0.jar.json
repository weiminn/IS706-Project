{"metrics-core-2.2.0.jar": [["com.yammer.metrics.core.Clock$CpuTimeClock", "com.yammer.metrics.core.Clock$CpuTimeClock()", "public com.yammer.metrics.core.Clock$CpuTimeClock()"], ["long", "com.yammer.metrics.core.Clock$CpuTimeClock.tick()", "public long tick()"], ["com.yammer.metrics.core.Clock$UserTimeClock", "com.yammer.metrics.core.Clock$UserTimeClock()", "public com.yammer.metrics.core.Clock$UserTimeClock()"], ["long", "com.yammer.metrics.core.Clock$UserTimeClock.tick()", "public long tick()"], ["com.yammer.metrics.core.Clock", "com.yammer.metrics.core.Clock()", "public com.yammer.metrics.core.Clock()"], ["long", "com.yammer.metrics.core.Clock.time()", "public long time()"], ["com.yammer.metrics.core.Clock", "com.yammer.metrics.core.Clock.defaultClock()", "public static com.yammer.metrics.core.Clock defaultClock()"], ["void", "com.yammer.metrics.core.Counter.inc()", "public void inc()"], ["void", "com.yammer.metrics.core.Counter.inc(long)", "public void inc(long)"], ["void", "com.yammer.metrics.core.Counter.dec()", "public void dec()"], ["void", "com.yammer.metrics.core.Counter.dec(long)", "public void dec(long)"], ["long", "com.yammer.metrics.core.Counter.count()", "public long count()"], ["void", "com.yammer.metrics.core.Counter.clear()", "public void clear()"], ["<T> void", "com.yammer.metrics.core.Counter.processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T)", "public <T> void processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T) throws java.lang.Exception"], ["com.yammer.metrics.core.Gauge", "com.yammer.metrics.core.Gauge()", "public com.yammer.metrics.core.Gauge()"], ["<U> void", "com.yammer.metrics.core.Gauge.processWith(com.yammer.metrics.core.MetricProcessor<U>, com.yammer.metrics.core.MetricName, U)", "public <U> void processWith(com.yammer.metrics.core.MetricProcessor<U>, com.yammer.metrics.core.MetricName, U) throws java.lang.Exception"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.healthy()", "public static com.yammer.metrics.core.HealthCheck$Result healthy()"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.healthy(java.lang.String)", "public static com.yammer.metrics.core.HealthCheck$Result healthy(java.lang.String)"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.healthy(java.lang.String, java.lang.Object...)", "public static com.yammer.metrics.core.HealthCheck$Result healthy(java.lang.String, java.lang.Object...)"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.unhealthy(java.lang.String)", "public static com.yammer.metrics.core.HealthCheck$Result unhealthy(java.lang.String)"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.unhealthy(java.lang.String, java.lang.Object...)", "public static com.yammer.metrics.core.HealthCheck$Result unhealthy(java.lang.String, java.lang.Object...)"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck$Result.unhealthy(java.lang.Throwable)", "public static com.yammer.metrics.core.HealthCheck$Result unhealthy(java.lang.Throwable)"], ["boolean", "com.yammer.metrics.core.HealthCheck$Result.isHealthy()", "public boolean isHealthy()"], ["java.lang.String", "com.yammer.metrics.core.HealthCheck$Result.getMessage()", "public java.lang.String getMessage()"], ["java.lang.Throwable", "com.yammer.metrics.core.HealthCheck$Result.getError()", "public java.lang.Throwable getError()"], ["boolean", "com.yammer.metrics.core.HealthCheck$Result.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.yammer.metrics.core.HealthCheck$Result.hashCode()", "public int hashCode()"], ["java.lang.String", "com.yammer.metrics.core.HealthCheck$Result.toString()", "public java.lang.String toString()"], ["java.lang.String", "com.yammer.metrics.core.HealthCheck.getName()", "public java.lang.String getName()"], ["com.yammer.metrics.core.HealthCheck$Result", "com.yammer.metrics.core.HealthCheck.execute()", "public com.yammer.metrics.core.HealthCheck$Result execute()"], ["com.yammer.metrics.core.HealthCheckRegistry", "com.yammer.metrics.core.HealthCheckRegistry()", "public com.yammer.metrics.core.HealthCheckRegistry()"], ["void", "com.yammer.metrics.core.HealthCheckRegistry.register(com.yammer.metrics.core.HealthCheck)", "public void register(com.yammer.metrics.core.HealthCheck)"], ["void", "com.yammer.metrics.core.HealthCheckRegistry.unregister(java.lang.String)", "public void unregister(java.lang.String)"], ["void", "com.yammer.metrics.core.HealthCheckRegistry.unregister(com.yammer.metrics.core.HealthCheck)", "public void unregister(com.yammer.metrics.core.HealthCheck)"], ["java.util.SortedMap<java.lang.String, com.yammer.metrics.core.HealthCheck$Result>", "com.yammer.metrics.core.HealthCheckRegistry.runHealthChecks()", "public java.util.SortedMap<java.lang.String, com.yammer.metrics.core.HealthCheck$Result> runHealthChecks()"], ["com.yammer.metrics.stats.Sample", "com.yammer.metrics.core.Histogram$SampleType$1.newSample()", "public com.yammer.metrics.stats.Sample newSample()"], ["com.yammer.metrics.stats.Sample", "com.yammer.metrics.core.Histogram$SampleType$2.newSample()", "public com.yammer.metrics.stats.Sample newSample()"], ["com.yammer.metrics.core.Histogram$SampleType[]", "com.yammer.metrics.core.Histogram$SampleType.values()", "public static com.yammer.metrics.core.Histogram$SampleType[] values()"], ["com.yammer.metrics.core.Histogram$SampleType", "com.yammer.metrics.core.Histogram$SampleType.valueOf(java.lang.String)", "public static com.yammer.metrics.core.Histogram$SampleType valueOf(java.lang.String)"], ["void", "com.yammer.metrics.core.Histogram.clear()", "public void clear()"], ["void", "com.yammer.metrics.core.Histogram.update(int)", "public void update(int)"], ["void", "com.yammer.metrics.core.Histogram.update(long)", "public void update(long)"], ["long", "com.yammer.metrics.core.Histogram.count()", "public long count()"], ["double", "com.yammer.metrics.core.Histogram.max()", "public double max()"], ["double", "com.yammer.metrics.core.Histogram.min()", "public double min()"], ["double", "com.yammer.metrics.core.Histogram.mean()", "public double mean()"], ["double", "com.yammer.metrics.core.Histogram.stdDev()", "public double stdDev()"], ["double", "com.yammer.metrics.core.Histogram.sum()", "public double sum()"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.core.Histogram.getSnapshot()", "public com.yammer.metrics.stats.Snapshot getSnapshot()"], ["<T> void", "com.yammer.metrics.core.Histogram.processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T)", "public <T> void processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T) throws java.lang.Exception"], ["void", "com.yammer.metrics.core.Meter$1.run()", "public void run()"], ["java.util.concurrent.TimeUnit", "com.yammer.metrics.core.Meter.rateUnit()", "public java.util.concurrent.TimeUnit rateUnit()"], ["java.lang.String", "com.yammer.metrics.core.Meter.eventType()", "public java.lang.String eventType()"], ["void", "com.yammer.metrics.core.Meter.mark()", "public void mark()"], ["void", "com.yammer.metrics.core.Meter.mark(long)", "public void mark(long)"], ["long", "com.yammer.metrics.core.Meter.count()", "public long count()"], ["double", "com.yammer.metrics.core.Meter.fifteenMinuteRate()", "public double fifteenMinuteRate()"], ["double", "com.yammer.metrics.core.Meter.fiveMinuteRate()", "public double fiveMinuteRate()"], ["double", "com.yammer.metrics.core.Meter.meanRate()", "public double meanRate()"], ["double", "com.yammer.metrics.core.Meter.oneMinuteRate()", "public double oneMinuteRate()"], ["void", "com.yammer.metrics.core.Meter.stop()", "public void stop()"], ["<T> void", "com.yammer.metrics.core.Meter.processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T)", "public <T> void processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T) throws java.lang.Exception"], ["com.yammer.metrics.core.MetricName", "com.yammer.metrics.core.MetricName(java.lang.Class<?>, java.lang.String)", "public com.yammer.metrics.core.MetricName(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.MetricName", "com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.MetricName", "com.yammer.metrics.core.MetricName(java.lang.Class<?>, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.MetricName(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.MetricName", "com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.MetricName", "com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.MetricName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.yammer.metrics.core.MetricName.getGroup()", "public java.lang.String getGroup()"], ["java.lang.String", "com.yammer.metrics.core.MetricName.getType()", "public java.lang.String getType()"], ["java.lang.String", "com.yammer.metrics.core.MetricName.getName()", "public java.lang.String getName()"], ["java.lang.String", "com.yammer.metrics.core.MetricName.getScope()", "public java.lang.String getScope()"], ["boolean", "com.yammer.metrics.core.MetricName.hasScope()", "public boolean hasScope()"], ["java.lang.String", "com.yammer.metrics.core.MetricName.getMBeanName()", "public java.lang.String getMBeanName()"], ["boolean", "com.yammer.metrics.core.MetricName.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "com.yammer.metrics.core.MetricName.hashCode()", "public int hashCode()"], ["java.lang.String", "com.yammer.metrics.core.MetricName.toString()", "public java.lang.String toString()"], ["int", "com.yammer.metrics.core.MetricName.compareTo(com.yammer.metrics.core.MetricName)", "public int compareTo(com.yammer.metrics.core.MetricName)"], ["java.lang.String", "com.yammer.metrics.core.MetricName.chooseGroup(java.lang.String, java.lang.Class<?>)", "public static java.lang.String chooseGroup(java.lang.String, java.lang.Class<?>)"], ["java.lang.String", "com.yammer.metrics.core.MetricName.chooseType(java.lang.String, java.lang.Class<?>)", "public static java.lang.String chooseType(java.lang.String, java.lang.Class<?>)"], ["java.lang.String", "com.yammer.metrics.core.MetricName.chooseName(java.lang.String, java.lang.reflect.Method)", "public static java.lang.String chooseName(java.lang.String, java.lang.reflect.Method)"], ["int", "com.yammer.metrics.core.MetricName.compareTo(java.lang.Object)", "public int compareTo(java.lang.Object)"], ["boolean", "com.yammer.metrics.core.MetricPredicate$1.matches(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric)", "public boolean matches(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric)"], ["com.yammer.metrics.core.MetricsRegistry", "com.yammer.metrics.core.MetricsRegistry()", "public com.yammer.metrics.core.MetricsRegistry()"], ["com.yammer.metrics.core.MetricsRegistry", "com.yammer.metrics.core.MetricsRegistry(com.yammer.metrics.core.Clock)", "public com.yammer.metrics.core.MetricsRegistry(com.yammer.metrics.core.Clock)"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.core.MetricsRegistry.newGauge(java.lang.Class<?>, java.lang.String, com.yammer.metrics.core.Gauge<T>)", "public <T> com.yammer.metrics.core.Gauge<T> newGauge(java.lang.Class<?>, java.lang.String, com.yammer.metrics.core.Gauge<T>)"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.core.MetricsRegistry.newGauge(java.lang.Class<?>, java.lang.String, java.lang.String, com.yammer.metrics.core.Gauge<T>)", "public <T> com.yammer.metrics.core.Gauge<T> newGauge(java.lang.Class<?>, java.lang.String, java.lang.String, com.yammer.metrics.core.Gauge<T>)"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.core.MetricsRegistry.newGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<T>)", "public <T> com.yammer.metrics.core.Gauge<T> newGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<T>)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.core.MetricsRegistry.newCounter(java.lang.Class<?>, java.lang.String)", "public com.yammer.metrics.core.Counter newCounter(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.core.MetricsRegistry.newCounter(java.lang.Class<?>, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.Counter newCounter(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.core.MetricsRegistry.newCounter(com.yammer.metrics.core.MetricName)", "public com.yammer.metrics.core.Counter newCounter(com.yammer.metrics.core.MetricName)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.core.MetricsRegistry.newHistogram(java.lang.Class<?>, java.lang.String, boolean)", "public com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, boolean)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.core.MetricsRegistry.newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String, boolean)", "public com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String, boolean)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.core.MetricsRegistry.newHistogram(java.lang.Class<?>, java.lang.String)", "public com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.core.MetricsRegistry.newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.core.MetricsRegistry.newHistogram(com.yammer.metrics.core.MetricName, boolean)", "public com.yammer.metrics.core.Histogram newHistogram(com.yammer.metrics.core.MetricName, boolean)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.core.MetricsRegistry.newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Meter newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.core.MetricsRegistry.newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Meter newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.core.MetricsRegistry.newMeter(com.yammer.metrics.core.MetricName, java.lang.String, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Meter newMeter(com.yammer.metrics.core.MetricName, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.core.MetricsRegistry.newTimer(java.lang.Class<?>, java.lang.String)", "public com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.core.MetricsRegistry.newTimer(java.lang.Class<?>, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.core.MetricsRegistry.newTimer(java.lang.Class<?>, java.lang.String, java.lang.String)", "public com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.core.MetricsRegistry.newTimer(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.core.MetricsRegistry.newTimer(com.yammer.metrics.core.MetricName, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.core.Timer newTimer(com.yammer.metrics.core.MetricName, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["java.util.Map<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric>", "com.yammer.metrics.core.MetricsRegistry.allMetrics()", "public java.util.Map<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric> allMetrics()"], ["java.util.SortedMap<java.lang.String, java.util.SortedMap<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric>>", "com.yammer.metrics.core.MetricsRegistry.groupedMetrics()", "public java.util.SortedMap<java.lang.String, java.util.SortedMap<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric>> groupedMetrics()"], ["java.util.SortedMap<java.lang.String, java.util.SortedMap<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric>>", "com.yammer.metrics.core.MetricsRegistry.groupedMetrics(com.yammer.metrics.core.MetricPredicate)", "public java.util.SortedMap<java.lang.String, java.util.SortedMap<com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric>> groupedMetrics(com.yammer.metrics.core.MetricPredicate)"], ["void", "com.yammer.metrics.core.MetricsRegistry.shutdown()", "public void shutdown()"], ["java.util.concurrent.ScheduledExecutorService", "com.yammer.metrics.core.MetricsRegistry.newScheduledThreadPool(int, java.lang.String)", "public java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int, java.lang.String)"], ["void", "com.yammer.metrics.core.MetricsRegistry.removeMetric(java.lang.Class<?>, java.lang.String)", "public void removeMetric(java.lang.Class<?>, java.lang.String)"], ["void", "com.yammer.metrics.core.MetricsRegistry.removeMetric(java.lang.Class<?>, java.lang.String, java.lang.String)", "public void removeMetric(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["void", "com.yammer.metrics.core.MetricsRegistry.removeMetric(com.yammer.metrics.core.MetricName)", "public void removeMetric(com.yammer.metrics.core.MetricName)"], ["void", "com.yammer.metrics.core.MetricsRegistry.addListener(com.yammer.metrics.core.MetricsRegistryListener)", "public void addListener(com.yammer.metrics.core.MetricsRegistryListener)"], ["void", "com.yammer.metrics.core.MetricsRegistry.removeListener(com.yammer.metrics.core.MetricsRegistryListener)", "public void removeListener(com.yammer.metrics.core.MetricsRegistryListener)"], ["java.lang.Thread", "com.yammer.metrics.core.ThreadPools$NamedThreadFactory.newThread(java.lang.Runnable)", "public java.lang.Thread newThread(java.lang.Runnable)"], ["java.util.concurrent.TimeUnit", "com.yammer.metrics.core.Timer.durationUnit()", "public java.util.concurrent.TimeUnit durationUnit()"], ["java.util.concurrent.TimeUnit", "com.yammer.metrics.core.Timer.rateUnit()", "public java.util.concurrent.TimeUnit rateUnit()"], ["void", "com.yammer.metrics.core.Timer.clear()", "public void clear()"], ["void", "com.yammer.metrics.core.Timer.update(long, java.util.concurrent.TimeUnit)", "public void update(long, java.util.concurrent.TimeUnit)"], ["<T> T", "com.yammer.metrics.core.Timer.time(java.util.concurrent.Callable<T>)", "public <T> T time(java.util.concurrent.Callable<T>) throws java.lang.Exception"], ["com.yammer.metrics.core.TimerContext", "com.yammer.metrics.core.Timer.time()", "public com.yammer.metrics.core.TimerContext time()"], ["long", "com.yammer.metrics.core.Timer.count()", "public long count()"], ["double", "com.yammer.metrics.core.Timer.fifteenMinuteRate()", "public double fifteenMinuteRate()"], ["double", "com.yammer.metrics.core.Timer.fiveMinuteRate()", "public double fiveMinuteRate()"], ["double", "com.yammer.metrics.core.Timer.meanRate()", "public double meanRate()"], ["double", "com.yammer.metrics.core.Timer.oneMinuteRate()", "public double oneMinuteRate()"], ["double", "com.yammer.metrics.core.Timer.max()", "public double max()"], ["double", "com.yammer.metrics.core.Timer.min()", "public double min()"], ["double", "com.yammer.metrics.core.Timer.mean()", "public double mean()"], ["double", "com.yammer.metrics.core.Timer.stdDev()", "public double stdDev()"], ["double", "com.yammer.metrics.core.Timer.sum()", "public double sum()"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.core.Timer.getSnapshot()", "public com.yammer.metrics.stats.Snapshot getSnapshot()"], ["java.lang.String", "com.yammer.metrics.core.Timer.eventType()", "public java.lang.String eventType()"], ["void", "com.yammer.metrics.core.Timer.stop()", "public void stop()"], ["<T> void", "com.yammer.metrics.core.Timer.processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T)", "public <T> void processWith(com.yammer.metrics.core.MetricProcessor<T>, com.yammer.metrics.core.MetricName, T) throws java.lang.Exception"], ["void", "com.yammer.metrics.core.TimerContext.stop()", "public void stop()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats.getCount()", "public long getCount()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats.getMemoryUsed()", "public long getMemoryUsed()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats.getTotalCapacity()", "public long getTotalCapacity()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics$GarbageCollectorStats.getRuns()", "public long getRuns()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics$GarbageCollectorStats.getTime(java.util.concurrent.TimeUnit)", "public long getTime(java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.VirtualMachineMetrics", "com.yammer.metrics.core.VirtualMachineMetrics.getInstance()", "public static com.yammer.metrics.core.VirtualMachineMetrics getInstance()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.totalInit()", "public double totalInit()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.totalUsed()", "public double totalUsed()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.totalMax()", "public double totalMax()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.totalCommitted()", "public double totalCommitted()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.heapInit()", "public double heapInit()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.heapUsed()", "public double heapUsed()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.heapMax()", "public double heapMax()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.heapCommitted()", "public double heapCommitted()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.heapUsage()", "public double heapUsage()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.nonHeapUsage()", "public double nonHeapUsage()"], ["java.util.Map<java.lang.String, java.lang.Double>", "com.yammer.metrics.core.VirtualMachineMetrics.memoryPoolUsage()", "public java.util.Map<java.lang.String, java.lang.Double> memoryPoolUsage()"], ["double", "com.yammer.metrics.core.VirtualMachineMetrics.fileDescriptorUsage()", "public double fileDescriptorUsage()"], ["java.lang.String", "com.yammer.metrics.core.VirtualMachineMetrics.version()", "public java.lang.String version()"], ["java.lang.String", "com.yammer.metrics.core.VirtualMachineMetrics.name()", "public java.lang.String name()"], ["long", "com.yammer.metrics.core.VirtualMachineMetrics.uptime()", "public long uptime()"], ["int", "com.yammer.metrics.core.VirtualMachineMetrics.threadCount()", "public int threadCount()"], ["int", "com.yammer.metrics.core.VirtualMachineMetrics.daemonThreadCount()", "public int daemonThreadCount()"], ["java.util.Map<java.lang.String, com.yammer.metrics.core.VirtualMachineMetrics$GarbageCollectorStats>", "com.yammer.metrics.core.VirtualMachineMetrics.garbageCollectors()", "public java.util.Map<java.lang.String, com.yammer.metrics.core.VirtualMachineMetrics$GarbageCollectorStats> garbageCollectors()"], ["java.util.Set<java.lang.String>", "com.yammer.metrics.core.VirtualMachineMetrics.deadlockedThreads()", "public java.util.Set<java.lang.String> deadlockedThreads()"], ["java.util.Map<java.lang.Thread$State, java.lang.Double>", "com.yammer.metrics.core.VirtualMachineMetrics.threadStatePercentages()", "public java.util.Map<java.lang.Thread$State, java.lang.Double> threadStatePercentages()"], ["void", "com.yammer.metrics.core.VirtualMachineMetrics.threadDump(java.io.OutputStream)", "public void threadDump(java.io.OutputStream)"], ["java.util.Map<java.lang.String, com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats>", "com.yammer.metrics.core.VirtualMachineMetrics.getBufferPoolStats()", "public java.util.Map<java.lang.String, com.yammer.metrics.core.VirtualMachineMetrics$BufferPoolStats> getBufferPoolStats()"], ["void", "com.yammer.metrics.HealthChecks.register(com.yammer.metrics.core.HealthCheck)", "public static void register(com.yammer.metrics.core.HealthCheck)"], ["java.util.Map<java.lang.String, com.yammer.metrics.core.HealthCheck$Result>", "com.yammer.metrics.HealthChecks.runHealthChecks()", "public static java.util.Map<java.lang.String, com.yammer.metrics.core.HealthCheck$Result> runHealthChecks()"], ["com.yammer.metrics.core.HealthCheckRegistry", "com.yammer.metrics.HealthChecks.defaultRegistry()", "public static com.yammer.metrics.core.HealthCheckRegistry defaultRegistry()"], ["void", "com.yammer.metrics.Metrics$1.run()", "public void run()"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.Metrics.newGauge(java.lang.Class<?>, java.lang.String, com.yammer.metrics.core.Gauge<T>)", "public static <T> com.yammer.metrics.core.Gauge<T> newGauge(java.lang.Class<?>, java.lang.String, com.yammer.metrics.core.Gauge<T>)"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.Metrics.newGauge(java.lang.Class<?>, java.lang.String, java.lang.String, com.yammer.metrics.core.Gauge<T>)", "public static <T> com.yammer.metrics.core.Gauge<T> newGauge(java.lang.Class<?>, java.lang.String, java.lang.String, com.yammer.metrics.core.Gauge<T>)"], ["<T> com.yammer.metrics.core.Gauge<T>", "com.yammer.metrics.Metrics.newGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<T>)", "public static <T> com.yammer.metrics.core.Gauge<T> newGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<T>)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.Metrics.newCounter(java.lang.Class<?>, java.lang.String)", "public static com.yammer.metrics.core.Counter newCounter(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.Metrics.newCounter(java.lang.Class<?>, java.lang.String, java.lang.String)", "public static com.yammer.metrics.core.Counter newCounter(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Counter", "com.yammer.metrics.Metrics.newCounter(com.yammer.metrics.core.MetricName)", "public static com.yammer.metrics.core.Counter newCounter(com.yammer.metrics.core.MetricName)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(java.lang.Class<?>, java.lang.String, boolean)", "public static com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, boolean)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String, boolean)", "public static com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String, boolean)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(com.yammer.metrics.core.MetricName, boolean)", "public static com.yammer.metrics.core.Histogram newHistogram(com.yammer.metrics.core.MetricName, boolean)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(java.lang.Class<?>, java.lang.String)", "public static com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String)", "public static com.yammer.metrics.core.Histogram newHistogram(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Histogram", "com.yammer.metrics.Metrics.newHistogram(com.yammer.metrics.core.MetricName)", "public static com.yammer.metrics.core.Histogram newHistogram(com.yammer.metrics.core.MetricName)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.Metrics.newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Meter newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.Metrics.newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Meter newMeter(java.lang.Class<?>, java.lang.String, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Meter", "com.yammer.metrics.Metrics.newMeter(com.yammer.metrics.core.MetricName, java.lang.String, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Meter newMeter(com.yammer.metrics.core.MetricName, java.lang.String, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.Metrics.newTimer(java.lang.Class<?>, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.Metrics.newTimer(java.lang.Class<?>, java.lang.String)", "public static com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.Metrics.newTimer(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.Metrics.newTimer(java.lang.Class<?>, java.lang.String, java.lang.String)", "public static com.yammer.metrics.core.Timer newTimer(java.lang.Class<?>, java.lang.String, java.lang.String)"], ["com.yammer.metrics.core.Timer", "com.yammer.metrics.Metrics.newTimer(com.yammer.metrics.core.MetricName, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)", "public static com.yammer.metrics.core.Timer newTimer(com.yammer.metrics.core.MetricName, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.core.MetricsRegistry", "com.yammer.metrics.Metrics.defaultRegistry()", "public static com.yammer.metrics.core.MetricsRegistry defaultRegistry()"], ["void", "com.yammer.metrics.Metrics.shutdown()", "public static void shutdown()"], ["void", "com.yammer.metrics.reporting.AbstractPollingReporter.start(long, java.util.concurrent.TimeUnit)", "public void start(long, java.util.concurrent.TimeUnit)"], ["void", "com.yammer.metrics.reporting.AbstractPollingReporter.shutdown(long, java.util.concurrent.TimeUnit)", "public void shutdown(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException"], ["void", "com.yammer.metrics.reporting.AbstractPollingReporter.shutdown()", "public void shutdown()"], ["void", "com.yammer.metrics.reporting.AbstractReporter.shutdown()", "public void shutdown()"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.enable(long, java.util.concurrent.TimeUnit)", "public static void enable(long, java.util.concurrent.TimeUnit)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.enable(com.yammer.metrics.core.MetricsRegistry, long, java.util.concurrent.TimeUnit)", "public static void enable(com.yammer.metrics.core.MetricsRegistry, long, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.reporting.ConsoleReporter", "com.yammer.metrics.reporting.ConsoleReporter(java.io.PrintStream)", "public com.yammer.metrics.reporting.ConsoleReporter(java.io.PrintStream)"], ["com.yammer.metrics.reporting.ConsoleReporter", "com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate)", "public com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate)"], ["com.yammer.metrics.reporting.ConsoleReporter", "com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate, com.yammer.metrics.core.Clock, java.util.TimeZone)", "public com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate, com.yammer.metrics.core.Clock, java.util.TimeZone)"], ["com.yammer.metrics.reporting.ConsoleReporter", "com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate, com.yammer.metrics.core.Clock, java.util.TimeZone, java.util.Locale)", "public com.yammer.metrics.reporting.ConsoleReporter(com.yammer.metrics.core.MetricsRegistry, java.io.PrintStream, com.yammer.metrics.core.MetricPredicate, com.yammer.metrics.core.Clock, java.util.TimeZone, java.util.Locale)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.run()", "public void run()"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, java.io.PrintStream)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, java.io.PrintStream)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.io.PrintStream)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.io.PrintStream)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.io.PrintStream)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.io.PrintStream)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.io.PrintStream)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.io.PrintStream)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.io.PrintStream)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.io.PrintStream)"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.ConsoleReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object) throws java.lang.Exception"], ["java.io.PrintStream", "com.yammer.metrics.reporting.CsvReporter$1.getStream(java.lang.String)", "public java.io.PrintStream getStream(java.lang.String) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.enable(java.io.File, long, java.util.concurrent.TimeUnit)", "public static void enable(java.io.File, long, java.util.concurrent.TimeUnit)"], ["void", "com.yammer.metrics.reporting.CsvReporter.enable(com.yammer.metrics.core.MetricsRegistry, java.io.File, long, java.util.concurrent.TimeUnit)", "public static void enable(com.yammer.metrics.core.MetricsRegistry, java.io.File, long, java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.reporting.CsvReporter", "com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, java.io.File)", "public com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, java.io.File)"], ["com.yammer.metrics.reporting.CsvReporter", "com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, com.yammer.metrics.core.MetricPredicate, java.io.File)", "public com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, com.yammer.metrics.core.MetricPredicate, java.io.File)"], ["com.yammer.metrics.reporting.CsvReporter", "com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, com.yammer.metrics.core.MetricPredicate, java.io.File, com.yammer.metrics.core.Clock)", "public com.yammer.metrics.reporting.CsvReporter(com.yammer.metrics.core.MetricsRegistry, com.yammer.metrics.core.MetricPredicate, java.io.File, com.yammer.metrics.core.Clock)"], ["void", "com.yammer.metrics.reporting.CsvReporter.run()", "public void run()"], ["void", "com.yammer.metrics.reporting.CsvReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, com.yammer.metrics.reporting.CsvReporter$Context)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, com.yammer.metrics.reporting.CsvReporter$Context) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, com.yammer.metrics.reporting.CsvReporter$Context)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, com.yammer.metrics.reporting.CsvReporter$Context) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, com.yammer.metrics.reporting.CsvReporter$Context)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, com.yammer.metrics.reporting.CsvReporter$Context) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, com.yammer.metrics.reporting.CsvReporter$Context)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, com.yammer.metrics.reporting.CsvReporter$Context) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, com.yammer.metrics.reporting.CsvReporter$Context)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, com.yammer.metrics.reporting.CsvReporter$Context) throws java.io.IOException"], ["void", "com.yammer.metrics.reporting.CsvReporter.start(long, java.util.concurrent.TimeUnit)", "public void start(long, java.util.concurrent.TimeUnit)"], ["void", "com.yammer.metrics.reporting.CsvReporter.shutdown()", "public void shutdown()"], ["void", "com.yammer.metrics.reporting.CsvReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.CsvReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.CsvReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.CsvReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.CsvReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object) throws java.lang.Exception"], ["javax.management.ObjectName", "com.yammer.metrics.reporting.JmxReporter$AbstractBean.objectName()", "public javax.management.ObjectName objectName()"], ["com.yammer.metrics.reporting.JmxReporter$Context", "com.yammer.metrics.reporting.JmxReporter$Context(com.yammer.metrics.core.MetricName, javax.management.ObjectName)", "public com.yammer.metrics.reporting.JmxReporter$Context(com.yammer.metrics.core.MetricName, javax.management.ObjectName)"], ["long", "com.yammer.metrics.reporting.JmxReporter$Counter.getCount()", "public long getCount()"], ["java.lang.Object", "com.yammer.metrics.reporting.JmxReporter$Gauge.getValue()", "public java.lang.Object getValue()"], ["javax.management.ObjectName", "com.yammer.metrics.reporting.JmxReporter$Histogram.objectName()", "public javax.management.ObjectName objectName()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get50thPercentile()", "public double get50thPercentile()"], ["long", "com.yammer.metrics.reporting.JmxReporter$Histogram.getCount()", "public long getCount()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.getMin()", "public double getMin()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.getMax()", "public double getMax()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.getMean()", "public double getMean()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.getStdDev()", "public double getStdDev()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get75thPercentile()", "public double get75thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get95thPercentile()", "public double get95thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get98thPercentile()", "public double get98thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get99thPercentile()", "public double get99thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Histogram.get999thPercentile()", "public double get999thPercentile()"], ["double[]", "com.yammer.metrics.reporting.JmxReporter$Histogram.values()", "public double[] values()"], ["long", "com.yammer.metrics.reporting.JmxReporter$Meter.getCount()", "public long getCount()"], ["java.lang.String", "com.yammer.metrics.reporting.JmxReporter$Meter.getEventType()", "public java.lang.String getEventType()"], ["java.util.concurrent.TimeUnit", "com.yammer.metrics.reporting.JmxReporter$Meter.getRateUnit()", "public java.util.concurrent.TimeUnit getRateUnit()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Meter.getMeanRate()", "public double getMeanRate()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Meter.getOneMinuteRate()", "public double getOneMinuteRate()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Meter.getFiveMinuteRate()", "public double getFiveMinuteRate()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Meter.getFifteenMinuteRate()", "public double getFifteenMinuteRate()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get50thPercentile()", "public double get50thPercentile()"], ["java.util.concurrent.TimeUnit", "com.yammer.metrics.reporting.JmxReporter$Timer.getLatencyUnit()", "public java.util.concurrent.TimeUnit getLatencyUnit()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.getMin()", "public double getMin()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.getMax()", "public double getMax()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.getMean()", "public double getMean()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.getStdDev()", "public double getStdDev()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get75thPercentile()", "public double get75thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get95thPercentile()", "public double get95thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get98thPercentile()", "public double get98thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get99thPercentile()", "public double get99thPercentile()"], ["double", "com.yammer.metrics.reporting.JmxReporter$Timer.get999thPercentile()", "public double get999thPercentile()"], ["double[]", "com.yammer.metrics.reporting.JmxReporter$Timer.values()", "public double[] values()"], ["void", "com.yammer.metrics.reporting.JmxReporter.startDefault(com.yammer.metrics.core.MetricsRegistry)", "public static void startDefault(com.yammer.metrics.core.MetricsRegistry)"], ["com.yammer.metrics.reporting.JmxReporter", "com.yammer.metrics.reporting.JmxReporter.getDefault()", "public static com.yammer.metrics.reporting.JmxReporter getDefault()"], ["void", "com.yammer.metrics.reporting.JmxReporter.shutdownDefault()", "public static void shutdownDefault()"], ["com.yammer.metrics.reporting.JmxReporter", "com.yammer.metrics.reporting.JmxReporter(com.yammer.metrics.core.MetricsRegistry)", "public com.yammer.metrics.reporting.JmxReporter(com.yammer.metrics.core.MetricsRegistry)"], ["void", "com.yammer.metrics.reporting.JmxReporter.onMetricAdded(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric)", "public void onMetricAdded(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metric)"], ["void", "com.yammer.metrics.reporting.JmxReporter.onMetricRemoved(com.yammer.metrics.core.MetricName)", "public void onMetricRemoved(com.yammer.metrics.core.MetricName)"], ["void", "com.yammer.metrics.reporting.JmxReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, com.yammer.metrics.reporting.JmxReporter$Context)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, com.yammer.metrics.reporting.JmxReporter$Context) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, com.yammer.metrics.reporting.JmxReporter$Context)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, com.yammer.metrics.reporting.JmxReporter$Context) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, com.yammer.metrics.reporting.JmxReporter$Context)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, com.yammer.metrics.reporting.JmxReporter$Context) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, com.yammer.metrics.reporting.JmxReporter$Context)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, com.yammer.metrics.reporting.JmxReporter$Context) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, com.yammer.metrics.reporting.JmxReporter$Context)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge<?>, com.yammer.metrics.reporting.JmxReporter$Context) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.shutdown()", "public void shutdown()"], ["void", "com.yammer.metrics.reporting.JmxReporter.start()", "public final void start()"], ["void", "com.yammer.metrics.reporting.JmxReporter.processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object)", "public void processGauge(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Gauge, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object)", "public void processTimer(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Timer, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object)", "public void processHistogram(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Histogram, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object)", "public void processCounter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Counter, java.lang.Object) throws java.lang.Exception"], ["void", "com.yammer.metrics.reporting.JmxReporter.processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object)", "public void processMeter(com.yammer.metrics.core.MetricName, com.yammer.metrics.core.Metered, java.lang.Object) throws java.lang.Exception"], ["com.yammer.metrics.stats.EWMA", "com.yammer.metrics.stats.EWMA.oneMinuteEWMA()", "public static com.yammer.metrics.stats.EWMA oneMinuteEWMA()"], ["com.yammer.metrics.stats.EWMA", "com.yammer.metrics.stats.EWMA.fiveMinuteEWMA()", "public static com.yammer.metrics.stats.EWMA fiveMinuteEWMA()"], ["com.yammer.metrics.stats.EWMA", "com.yammer.metrics.stats.EWMA.fifteenMinuteEWMA()", "public static com.yammer.metrics.stats.EWMA fifteenMinuteEWMA()"], ["com.yammer.metrics.stats.EWMA", "com.yammer.metrics.stats.EWMA(double, long, java.util.concurrent.TimeUnit)", "public com.yammer.metrics.stats.EWMA(double, long, java.util.concurrent.TimeUnit)"], ["void", "com.yammer.metrics.stats.EWMA.update(long)", "public void update(long)"], ["void", "com.yammer.metrics.stats.EWMA.tick()", "public void tick()"], ["double", "com.yammer.metrics.stats.EWMA.rate(java.util.concurrent.TimeUnit)", "public double rate(java.util.concurrent.TimeUnit)"], ["com.yammer.metrics.stats.ExponentiallyDecayingSample", "com.yammer.metrics.stats.ExponentiallyDecayingSample(int, double)", "public com.yammer.metrics.stats.ExponentiallyDecayingSample(int, double)"], ["com.yammer.metrics.stats.ExponentiallyDecayingSample", "com.yammer.metrics.stats.ExponentiallyDecayingSample(int, double, com.yammer.metrics.core.Clock)", "public com.yammer.metrics.stats.ExponentiallyDecayingSample(int, double, com.yammer.metrics.core.Clock)"], ["void", "com.yammer.metrics.stats.ExponentiallyDecayingSample.clear()", "public void clear()"], ["int", "com.yammer.metrics.stats.ExponentiallyDecayingSample.size()", "public int size()"], ["void", "com.yammer.metrics.stats.ExponentiallyDecayingSample.update(long)", "public void update(long)"], ["void", "com.yammer.metrics.stats.ExponentiallyDecayingSample.update(long, long)", "public void update(long, long)"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.stats.ExponentiallyDecayingSample.getSnapshot()", "public com.yammer.metrics.stats.Snapshot getSnapshot()"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.stats.Snapshot(java.util.Collection<java.lang.Long>)", "public com.yammer.metrics.stats.Snapshot(java.util.Collection<java.lang.Long>)"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.stats.Snapshot(double[])", "public com.yammer.metrics.stats.Snapshot(double[])"], ["double", "com.yammer.metrics.stats.Snapshot.getValue(double)", "public double getValue(double)"], ["int", "com.yammer.metrics.stats.Snapshot.size()", "public int size()"], ["double", "com.yammer.metrics.stats.Snapshot.getMedian()", "public double getMedian()"], ["double", "com.yammer.metrics.stats.Snapshot.get75thPercentile()", "public double get75thPercentile()"], ["double", "com.yammer.metrics.stats.Snapshot.get95thPercentile()", "public double get95thPercentile()"], ["double", "com.yammer.metrics.stats.Snapshot.get98thPercentile()", "public double get98thPercentile()"], ["double", "com.yammer.metrics.stats.Snapshot.get99thPercentile()", "public double get99thPercentile()"], ["double", "com.yammer.metrics.stats.Snapshot.get999thPercentile()", "public double get999thPercentile()"], ["double[]", "com.yammer.metrics.stats.Snapshot.getValues()", "public double[] getValues()"], ["void", "com.yammer.metrics.stats.Snapshot.dump(java.io.File)", "public void dump(java.io.File) throws java.io.IOException"], ["com.yammer.metrics.stats.ThreadLocalRandom", "com.yammer.metrics.stats.ThreadLocalRandom.current()", "public static com.yammer.metrics.stats.ThreadLocalRandom current()"], ["void", "com.yammer.metrics.stats.ThreadLocalRandom.setSeed(long)", "public void setSeed(long)"], ["int", "com.yammer.metrics.stats.ThreadLocalRandom.nextInt(int, int)", "public int nextInt(int, int)"], ["long", "com.yammer.metrics.stats.ThreadLocalRandom.nextLong(long)", "public long nextLong(long)"], ["long", "com.yammer.metrics.stats.ThreadLocalRandom.nextLong(long, long)", "public long nextLong(long, long)"], ["double", "com.yammer.metrics.stats.ThreadLocalRandom.nextDouble(double)", "public double nextDouble(double)"], ["double", "com.yammer.metrics.stats.ThreadLocalRandom.nextDouble(double, double)", "public double nextDouble(double, double)"], ["com.yammer.metrics.stats.UniformSample", "com.yammer.metrics.stats.UniformSample(int)", "public com.yammer.metrics.stats.UniformSample(int)"], ["void", "com.yammer.metrics.stats.UniformSample.clear()", "public void clear()"], ["int", "com.yammer.metrics.stats.UniformSample.size()", "public int size()"], ["void", "com.yammer.metrics.stats.UniformSample.update(long)", "public void update(long)"], ["com.yammer.metrics.stats.Snapshot", "com.yammer.metrics.stats.UniformSample.getSnapshot()", "public com.yammer.metrics.stats.Snapshot getSnapshot()"], ["com.yammer.metrics.util.DeadlockHealthCheck", "com.yammer.metrics.util.DeadlockHealthCheck(com.yammer.metrics.core.VirtualMachineMetrics)", "public com.yammer.metrics.util.DeadlockHealthCheck(com.yammer.metrics.core.VirtualMachineMetrics)"], ["com.yammer.metrics.util.DeadlockHealthCheck", "com.yammer.metrics.util.DeadlockHealthCheck()", "public com.yammer.metrics.util.DeadlockHealthCheck()"], ["com.yammer.metrics.util.DeathRattleExceptionHandler", "com.yammer.metrics.util.DeathRattleExceptionHandler(com.yammer.metrics.core.Counter)", "public com.yammer.metrics.util.DeathRattleExceptionHandler(com.yammer.metrics.core.Counter)"], ["void", "com.yammer.metrics.util.DeathRattleExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)", "public void uncaughtException(java.lang.Thread, java.lang.Throwable)"], ["com.yammer.metrics.util.JmxGauge", "com.yammer.metrics.util.JmxGauge(java.lang.String, java.lang.String)", "public com.yammer.metrics.util.JmxGauge(java.lang.String, java.lang.String) throws javax.management.MalformedObjectNameException"], ["com.yammer.metrics.util.JmxGauge", "com.yammer.metrics.util.JmxGauge(javax.management.ObjectName, java.lang.String)", "public com.yammer.metrics.util.JmxGauge(javax.management.ObjectName, java.lang.String)"], ["java.lang.Object", "com.yammer.metrics.util.JmxGauge.value()", "public java.lang.Object value()"], ["com.yammer.metrics.util.PercentGauge", "com.yammer.metrics.util.PercentGauge()", "public com.yammer.metrics.util.PercentGauge()"], ["java.lang.Double", "com.yammer.metrics.util.PercentGauge.value()", "public java.lang.Double value()"], ["java.lang.Object", "com.yammer.metrics.util.PercentGauge.value()", "public java.lang.Object value()"], ["com.yammer.metrics.util.RatioGauge", "com.yammer.metrics.util.RatioGauge()", "public com.yammer.metrics.util.RatioGauge()"], ["java.lang.Double", "com.yammer.metrics.util.RatioGauge.value()", "public java.lang.Double value()"], ["java.lang.Object", "com.yammer.metrics.util.RatioGauge.value()", "public java.lang.Object value()"], ["com.yammer.metrics.util.ToggleGauge", "com.yammer.metrics.util.ToggleGauge()", "public com.yammer.metrics.util.ToggleGauge()"], ["java.lang.Integer", "com.yammer.metrics.util.ToggleGauge.value()", "public java.lang.Integer value()"], ["java.lang.Object", "com.yammer.metrics.util.ToggleGauge.value()", "public java.lang.Object value()"]]}