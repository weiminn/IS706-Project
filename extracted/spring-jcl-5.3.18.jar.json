{"spring-jcl-5.3.18.jar": [["org.apache.commons.logging.impl.NoOpLog", "org.apache.commons.logging.impl.NoOpLog()", "public org.apache.commons.logging.impl.NoOpLog()"], ["org.apache.commons.logging.impl.NoOpLog", "org.apache.commons.logging.impl.NoOpLog(java.lang.String)", "public org.apache.commons.logging.impl.NoOpLog(java.lang.String)"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isFatalEnabled()", "public boolean isFatalEnabled()"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isErrorEnabled()", "public boolean isErrorEnabled()"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isWarnEnabled()", "public boolean isWarnEnabled()"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isInfoEnabled()", "public boolean isInfoEnabled()"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isDebugEnabled()", "public boolean isDebugEnabled()"], ["boolean", "org.apache.commons.logging.impl.NoOpLog.isTraceEnabled()", "public boolean isTraceEnabled()"], ["void", "org.apache.commons.logging.impl.NoOpLog.fatal(java.lang.Object)", "public void fatal(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.fatal(java.lang.Object, java.lang.Throwable)", "public void fatal(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.impl.NoOpLog.error(java.lang.Object)", "public void error(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.error(java.lang.Object, java.lang.Throwable)", "public void error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.impl.NoOpLog.warn(java.lang.Object)", "public void warn(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.warn(java.lang.Object, java.lang.Throwable)", "public void warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.impl.NoOpLog.info(java.lang.Object)", "public void info(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.info(java.lang.Object, java.lang.Throwable)", "public void info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.impl.NoOpLog.debug(java.lang.Object)", "public void debug(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.debug(java.lang.Object, java.lang.Throwable)", "public void debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.impl.NoOpLog.trace(java.lang.Object)", "public void trace(java.lang.Object)"], ["void", "org.apache.commons.logging.impl.NoOpLog.trace(java.lang.Object, java.lang.Throwable)", "public void trace(java.lang.Object, java.lang.Throwable)"], ["org.apache.commons.logging.impl.SimpleLog", "org.apache.commons.logging.impl.SimpleLog(java.lang.String)", "public org.apache.commons.logging.impl.SimpleLog(java.lang.String)"], ["org.apache.commons.logging.LogAdapter$Slf4jLog", "org.apache.commons.logging.LogAdapter$Slf4jLog(T)", "public org.apache.commons.logging.LogAdapter$Slf4jLog(T)"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isFatalEnabled()", "public boolean isFatalEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isErrorEnabled()", "public boolean isErrorEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isWarnEnabled()", "public boolean isWarnEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isInfoEnabled()", "public boolean isInfoEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isDebugEnabled()", "public boolean isDebugEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Slf4jLog.isTraceEnabled()", "public boolean isTraceEnabled()"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.fatal(java.lang.Object)", "public void fatal(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.fatal(java.lang.Object, java.lang.Throwable)", "public void fatal(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.error(java.lang.Object)", "public void error(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.error(java.lang.Object, java.lang.Throwable)", "public void error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.warn(java.lang.Object)", "public void warn(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.warn(java.lang.Object, java.lang.Throwable)", "public void warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.info(java.lang.Object)", "public void info(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.info(java.lang.Object, java.lang.Throwable)", "public void info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.debug(java.lang.Object)", "public void debug(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.debug(java.lang.Object, java.lang.Throwable)", "public void debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.trace(java.lang.Object)", "public void trace(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLog.trace(java.lang.Object, java.lang.Throwable)", "public void trace(java.lang.Object, java.lang.Throwable)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogAdapter$Log4jAdapter.createLog(java.lang.String)", "public static org.apache.commons.logging.Log createLog(java.lang.String)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogAdapter$Slf4jAdapter.createLocationAwareLog(java.lang.String)", "public static org.apache.commons.logging.Log createLocationAwareLog(java.lang.String)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogAdapter$Slf4jAdapter.createLog(java.lang.String)", "public static org.apache.commons.logging.Log createLog(java.lang.String)"], ["org.apache.commons.logging.LogFactoryService", "org.apache.commons.logging.LogFactoryService()", "public org.apache.commons.logging.LogFactoryService()"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactoryService.getInstance(java.lang.Class<?>)", "public org.apache.commons.logging.Log getInstance(java.lang.Class<?>)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactoryService.getInstance(java.lang.String)", "public org.apache.commons.logging.Log getInstance(java.lang.String)"], ["void", "org.apache.commons.logging.LogFactoryService.setAttribute(java.lang.String, java.lang.Object)", "public void setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.commons.logging.LogFactoryService.removeAttribute(java.lang.String)", "public void removeAttribute(java.lang.String)"], ["java.lang.Object", "org.apache.commons.logging.LogFactoryService.getAttribute(java.lang.String)", "public java.lang.Object getAttribute(java.lang.String)"], ["java.lang.String[]", "org.apache.commons.logging.LogFactoryService.getAttributeNames()", "public java.lang.String[] getAttributeNames()"], ["void", "org.apache.commons.logging.LogFactoryService.release()", "public void release()"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogAdapter.createLog(java.lang.String)", "public static org.apache.commons.logging.Log createLog(java.lang.String)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogAdapter$JavaUtilAdapter.createLog(java.lang.String)", "public static org.apache.commons.logging.Log createLog(java.lang.String)"], ["org.apache.commons.logging.LogAdapter$JavaUtilLog", "org.apache.commons.logging.LogAdapter$JavaUtilLog(java.lang.String)", "public org.apache.commons.logging.LogAdapter$JavaUtilLog(java.lang.String)"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isFatalEnabled()", "public boolean isFatalEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isErrorEnabled()", "public boolean isErrorEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isWarnEnabled()", "public boolean isWarnEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isInfoEnabled()", "public boolean isInfoEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isDebugEnabled()", "public boolean isDebugEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$JavaUtilLog.isTraceEnabled()", "public boolean isTraceEnabled()"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.fatal(java.lang.Object)", "public void fatal(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.fatal(java.lang.Object, java.lang.Throwable)", "public void fatal(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.error(java.lang.Object)", "public void error(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.error(java.lang.Object, java.lang.Throwable)", "public void error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.warn(java.lang.Object)", "public void warn(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.warn(java.lang.Object, java.lang.Throwable)", "public void warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.info(java.lang.Object)", "public void info(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.info(java.lang.Object, java.lang.Throwable)", "public void info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.debug(java.lang.Object)", "public void debug(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.debug(java.lang.Object, java.lang.Throwable)", "public void debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.trace(java.lang.Object)", "public void trace(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$JavaUtilLog.trace(java.lang.Object, java.lang.Throwable)", "public void trace(java.lang.Object, java.lang.Throwable)"], ["org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog(org.slf4j.spi.LocationAwareLogger)", "public org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog(org.slf4j.spi.LocationAwareLogger)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.fatal(java.lang.Object)", "public void fatal(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.fatal(java.lang.Object, java.lang.Throwable)", "public void fatal(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.error(java.lang.Object)", "public void error(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.error(java.lang.Object, java.lang.Throwable)", "public void error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.warn(java.lang.Object)", "public void warn(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.warn(java.lang.Object, java.lang.Throwable)", "public void warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.info(java.lang.Object)", "public void info(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.info(java.lang.Object, java.lang.Throwable)", "public void info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.debug(java.lang.Object)", "public void debug(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.debug(java.lang.Object, java.lang.Throwable)", "public void debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.trace(java.lang.Object)", "public void trace(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog.trace(java.lang.Object, java.lang.Throwable)", "public void trace(java.lang.Object, java.lang.Throwable)"], ["org.apache.commons.logging.LogAdapter$Log4jLog", "org.apache.commons.logging.LogAdapter$Log4jLog(java.lang.String)", "public org.apache.commons.logging.LogAdapter$Log4jLog(java.lang.String)"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isFatalEnabled()", "public boolean isFatalEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isErrorEnabled()", "public boolean isErrorEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isWarnEnabled()", "public boolean isWarnEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isInfoEnabled()", "public boolean isInfoEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isDebugEnabled()", "public boolean isDebugEnabled()"], ["boolean", "org.apache.commons.logging.LogAdapter$Log4jLog.isTraceEnabled()", "public boolean isTraceEnabled()"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.fatal(java.lang.Object)", "public void fatal(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.fatal(java.lang.Object, java.lang.Throwable)", "public void fatal(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.error(java.lang.Object)", "public void error(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.error(java.lang.Object, java.lang.Throwable)", "public void error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.warn(java.lang.Object)", "public void warn(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.warn(java.lang.Object, java.lang.Throwable)", "public void warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.info(java.lang.Object)", "public void info(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.info(java.lang.Object, java.lang.Throwable)", "public void info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.debug(java.lang.Object)", "public void debug(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.debug(java.lang.Object, java.lang.Throwable)", "public void debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.trace(java.lang.Object)", "public void trace(java.lang.Object)"], ["void", "org.apache.commons.logging.LogAdapter$Log4jLog.trace(java.lang.Object, java.lang.Throwable)", "public void trace(java.lang.Object, java.lang.Throwable)"], ["org.apache.commons.logging.LogAdapter$LogApi[]", "org.apache.commons.logging.LogAdapter$LogApi.values()", "public static org.apache.commons.logging.LogAdapter$LogApi[] values()"], ["org.apache.commons.logging.LogAdapter$LogApi", "org.apache.commons.logging.LogAdapter$LogApi.valueOf(java.lang.String)", "public static org.apache.commons.logging.LogAdapter$LogApi valueOf(java.lang.String)"], ["org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord", "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord(java.util.logging.Level, java.lang.String)", "public org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord(java.util.logging.Level, java.lang.String)"], ["java.lang.String", "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord.getSourceClassName()", "public java.lang.String getSourceClassName()"], ["void", "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord.setSourceClassName(java.lang.String)", "public void setSourceClassName(java.lang.String)"], ["java.lang.String", "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord.getSourceMethodName()", "public java.lang.String getSourceMethodName()"], ["void", "org.apache.commons.logging.LogAdapter$LocationResolvingLogRecord.setSourceMethodName(java.lang.String)", "public void setSourceMethodName(java.lang.String)"], ["org.apache.commons.logging.LogFactory", "org.apache.commons.logging.LogFactory()", "public org.apache.commons.logging.LogFactory()"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactory.getLog(java.lang.Class<?>)", "public static org.apache.commons.logging.Log getLog(java.lang.Class<?>)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactory.getLog(java.lang.String)", "public static org.apache.commons.logging.Log getLog(java.lang.String)"], ["org.apache.commons.logging.LogFactory", "org.apache.commons.logging.LogFactory.getFactory()", "public static org.apache.commons.logging.LogFactory getFactory()"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactory.getInstance(java.lang.Class<?>)", "public org.apache.commons.logging.Log getInstance(java.lang.Class<?>)"], ["org.apache.commons.logging.Log", "org.apache.commons.logging.LogFactory.getInstance(java.lang.String)", "public org.apache.commons.logging.Log getInstance(java.lang.String)"]]}