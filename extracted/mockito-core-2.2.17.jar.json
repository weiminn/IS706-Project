{"mockito-core-2.2.17.jar": [["org.mockito.Matchers", "org.mockito.Matchers()"], ["T", "org.mockito.BDDMockito$ThenImpl.should()"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.verification.VerificationMode)"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder)"], ["T", "org.mockito.BDDMockito$ThenImpl.should(org.mockito.InOrder, org.mockito.verification.VerificationMode)"], ["void", "org.mockito.BDDMockito$ThenImpl.shouldHaveZeroInteractions()"], ["void", "org.mockito.BDDMockito$ThenImpl.shouldHaveNoMoreInteractions()"], ["org.mockito.MockitoAnnotations", "org.mockito.MockitoAnnotations()"], ["void", "org.mockito.MockitoAnnotations.initMocks(java.lang.Object)"], ["org.mockito.ArgumentMatchers", "org.mockito.ArgumentMatchers()"], ["<T> T", "org.mockito.ArgumentMatchers.any()"], ["<T> T", "org.mockito.ArgumentMatchers.anyObject()"], ["<T> T", "org.mockito.ArgumentMatchers.any(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.isA(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.anyVararg()"], ["boolean", "org.mockito.ArgumentMatchers.anyBoolean()"], ["byte", "org.mockito.ArgumentMatchers.anyByte()"], ["char", "org.mockito.ArgumentMatchers.anyChar()"], ["int", "org.mockito.ArgumentMatchers.anyInt()"], ["long", "org.mockito.ArgumentMatchers.anyLong()"], ["float", "org.mockito.ArgumentMatchers.anyFloat()"], ["double", "org.mockito.ArgumentMatchers.anyDouble()"], ["short", "org.mockito.ArgumentMatchers.anyShort()"], ["java.lang.String", "org.mockito.ArgumentMatchers.anyString()"], ["<T> java.util.List<T>", "org.mockito.ArgumentMatchers.anyList()"], ["<T> java.util.List<T>", "org.mockito.ArgumentMatchers.anyListOf(java.lang.Class<T>)"], ["<T> java.util.Set<T>", "org.mockito.ArgumentMatchers.anySet()"], ["<T> java.util.Set<T>", "org.mockito.ArgumentMatchers.anySetOf(java.lang.Class<T>)"], ["<K, V> java.util.Map<K, V>", "org.mockito.ArgumentMatchers.anyMap()"], ["<K, V> java.util.Map<K, V>", "org.mockito.ArgumentMatchers.anyMapOf(java.lang.Class<K>, java.lang.Class<V>)"], ["<T> java.util.Collection<T>", "org.mockito.ArgumentMatchers.anyCollection()"], ["<T> java.util.Collection<T>", "org.mockito.ArgumentMatchers.anyCollectionOf(java.lang.Class<T>)"], ["<T> java.lang.Iterable<T>", "org.mockito.ArgumentMatchers.anyIterable()"], ["<T> java.lang.Iterable<T>", "org.mockito.ArgumentMatchers.anyIterableOf(java.lang.Class<T>)"], ["boolean", "org.mockito.ArgumentMatchers.eq(boolean)"], ["byte", "org.mockito.ArgumentMatchers.eq(byte)"], ["char", "org.mockito.ArgumentMatchers.eq(char)"], ["double", "org.mockito.ArgumentMatchers.eq(double)"], ["float", "org.mockito.ArgumentMatchers.eq(float)"], ["int", "org.mockito.ArgumentMatchers.eq(int)"], ["long", "org.mockito.ArgumentMatchers.eq(long)"], ["short", "org.mockito.ArgumentMatchers.eq(short)"], ["<T> T", "org.mockito.ArgumentMatchers.eq(T)"], ["<T> T", "org.mockito.ArgumentMatchers.refEq(T, java.lang.String...)"], ["<T> T", "org.mockito.ArgumentMatchers.same(T)"], ["<T> T", "org.mockito.ArgumentMatchers.isNull()"], ["<T> T", "org.mockito.ArgumentMatchers.isNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.notNull()"], ["<T> T", "org.mockito.ArgumentMatchers.notNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.isNotNull()"], ["<T> T", "org.mockito.ArgumentMatchers.isNotNull(java.lang.Class<T>)"], ["<T> T", "org.mockito.ArgumentMatchers.nullable(java.lang.Class<T>)"], ["java.lang.String", "org.mockito.ArgumentMatchers.contains(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.matches(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.endsWith(java.lang.String)"], ["java.lang.String", "org.mockito.ArgumentMatchers.startsWith(java.lang.String)"], ["<T> T", "org.mockito.ArgumentMatchers.argThat(org.mockito.ArgumentMatcher<T>)"], ["char", "org.mockito.ArgumentMatchers.charThat(org.mockito.ArgumentMatcher<java.lang.Character>)"], ["boolean", "org.mockito.ArgumentMatchers.booleanThat(org.mockito.ArgumentMatcher<java.lang.Boolean>)"], ["byte", "org.mockito.ArgumentMatchers.byteThat(org.mockito.ArgumentMatcher<java.lang.Byte>)"], ["short", "org.mockito.ArgumentMatchers.shortThat(org.mockito.ArgumentMatcher<java.lang.Short>)"], ["int", "org.mockito.ArgumentMatchers.intThat(org.mockito.ArgumentMatcher<java.lang.Integer>)"], ["long", "org.mockito.ArgumentMatchers.longThat(org.mockito.ArgumentMatcher<java.lang.Long>)"], ["float", "org.mockito.ArgumentMatchers.floatThat(org.mockito.ArgumentMatcher<java.lang.Float>)"], ["double", "org.mockito.ArgumentMatchers.doubleThat(org.mockito.ArgumentMatcher<java.lang.Double>)"], ["T", "org.mockito.ArgumentCaptor.capture()"], ["T", "org.mockito.ArgumentCaptor.getValue()"], ["<U, S extends U> org.mockito.ArgumentCaptor<U>", "org.mockito.ArgumentCaptor.forClass(java.lang.Class<S>)"], ["org.mockito.BDDMockito$BDDStubberImpl", "org.mockito.BDDMockito$BDDStubberImpl(org.mockito.stubbing.Stubber)"], ["<T> T", "org.mockito.BDDMockito$BDDStubberImpl.given(T)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.will(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willDoNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Throwable...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito$BDDStubberImpl.willCallRealMethod()"], ["org.mockito.AdditionalMatchers", "org.mockito.AdditionalMatchers()"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.geq(T)"], ["byte", "org.mockito.AdditionalMatchers.geq(byte)"], ["double", "org.mockito.AdditionalMatchers.geq(double)"], ["float", "org.mockito.AdditionalMatchers.geq(float)"], ["int", "org.mockito.AdditionalMatchers.geq(int)"], ["long", "org.mockito.AdditionalMatchers.geq(long)"], ["short", "org.mockito.AdditionalMatchers.geq(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.leq(T)"], ["byte", "org.mockito.AdditionalMatchers.leq(byte)"], ["double", "org.mockito.AdditionalMatchers.leq(double)"], ["float", "org.mockito.AdditionalMatchers.leq(float)"], ["int", "org.mockito.AdditionalMatchers.leq(int)"], ["long", "org.mockito.AdditionalMatchers.leq(long)"], ["short", "org.mockito.AdditionalMatchers.leq(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.gt(T)"], ["byte", "org.mockito.AdditionalMatchers.gt(byte)"], ["double", "org.mockito.AdditionalMatchers.gt(double)"], ["float", "org.mockito.AdditionalMatchers.gt(float)"], ["int", "org.mockito.AdditionalMatchers.gt(int)"], ["long", "org.mockito.AdditionalMatchers.gt(long)"], ["short", "org.mockito.AdditionalMatchers.gt(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.lt(T)"], ["byte", "org.mockito.AdditionalMatchers.lt(byte)"], ["double", "org.mockito.AdditionalMatchers.lt(double)"], ["float", "org.mockito.AdditionalMatchers.lt(float)"], ["int", "org.mockito.AdditionalMatchers.lt(int)"], ["long", "org.mockito.AdditionalMatchers.lt(long)"], ["short", "org.mockito.AdditionalMatchers.lt(short)"], ["<T extends java.lang.Comparable<T>> T", "org.mockito.AdditionalMatchers.cmpEq(T)"], ["java.lang.String", "org.mockito.AdditionalMatchers.find(java.lang.String)"], ["<T> T[]", "org.mockito.AdditionalMatchers.aryEq(T[])"], ["short[]", "org.mockito.AdditionalMatchers.aryEq(short[])"], ["long[]", "org.mockito.AdditionalMatchers.aryEq(long[])"], ["int[]", "org.mockito.AdditionalMatchers.aryEq(int[])"], ["float[]", "org.mockito.AdditionalMatchers.aryEq(float[])"], ["double[]", "org.mockito.AdditionalMatchers.aryEq(double[])"], ["char[]", "org.mockito.AdditionalMatchers.aryEq(char[])"], ["byte[]", "org.mockito.AdditionalMatchers.aryEq(byte[])"], ["boolean[]", "org.mockito.AdditionalMatchers.aryEq(boolean[])"], ["boolean", "org.mockito.AdditionalMatchers.and(boolean, boolean)"], ["byte", "org.mockito.AdditionalMatchers.and(byte, byte)"], ["char", "org.mockito.AdditionalMatchers.and(char, char)"], ["double", "org.mockito.AdditionalMatchers.and(double, double)"], ["float", "org.mockito.AdditionalMatchers.and(float, float)"], ["int", "org.mockito.AdditionalMatchers.and(int, int)"], ["long", "org.mockito.AdditionalMatchers.and(long, long)"], ["short", "org.mockito.AdditionalMatchers.and(short, short)"], ["<T> T", "org.mockito.AdditionalMatchers.and(T, T)"], ["boolean", "org.mockito.AdditionalMatchers.or(boolean, boolean)"], ["<T> T", "org.mockito.AdditionalMatchers.or(T, T)"], ["short", "org.mockito.AdditionalMatchers.or(short, short)"], ["long", "org.mockito.AdditionalMatchers.or(long, long)"], ["int", "org.mockito.AdditionalMatchers.or(int, int)"], ["float", "org.mockito.AdditionalMatchers.or(float, float)"], ["double", "org.mockito.AdditionalMatchers.or(double, double)"], ["char", "org.mockito.AdditionalMatchers.or(char, char)"], ["byte", "org.mockito.AdditionalMatchers.or(byte, byte)"], ["<T> T", "org.mockito.AdditionalMatchers.not(T)"], ["short", "org.mockito.AdditionalMatchers.not(short)"], ["int", "org.mockito.AdditionalMatchers.not(int)"], ["long", "org.mockito.AdditionalMatchers.not(long)"], ["float", "org.mockito.AdditionalMatchers.not(float)"], ["double", "org.mockito.AdditionalMatchers.not(double)"], ["char", "org.mockito.AdditionalMatchers.not(char)"], ["boolean", "org.mockito.AdditionalMatchers.not(boolean)"], ["byte", "org.mockito.AdditionalMatchers.not(byte)"], ["double", "org.mockito.AdditionalMatchers.eq(double, double)"], ["float", "org.mockito.AdditionalMatchers.eq(float, float)"], ["org.mockito.BDDMockito$BDDOngoingStubbingImpl", "org.mockito.BDDMockito$BDDOngoingStubbingImpl(org.mockito.stubbing.OngoingStubbing<T>)"], ["<M> M", "org.mockito.BDDMockito$BDDOngoingStubbingImpl.getMock()"], ["org.mockito.AdditionalAnswers", "org.mockito.AdditionalAnswers()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsFirstArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsSecondArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsLastArg()"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsArgAt(int)"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.delegatesTo(java.lang.Object)"], ["<T> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.returnsElementsOf(java.util.Collection<?>)"], ["<T, A> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer1<T, A>)"], ["<A> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer1<A>)"], ["<T, A, B> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer2<T, A, B>)"], ["<A, B> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer2<A, B>)"], ["<T, A, B, C> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer3<T, A, B, C>)"], ["<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer3<A, B, C>)"], ["<T, A, B, C, D> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"], ["<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"], ["<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>", "org.mockito.AdditionalAnswers.answer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"], ["<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.AdditionalAnswers.answerVoid(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"], ["org.mockito.BDDMockito", "org.mockito.BDDMockito()"], ["<T> org.mockito.BDDMockito$BDDMyOngoingStubbing<T>", "org.mockito.BDDMockito.given(T)"], ["<T> org.mockito.BDDMockito$Then<T>", "org.mockito.BDDMockito.then(T)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Throwable...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willAnswer(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.will(org.mockito.stubbing.Answer<?>)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willDoNothing()"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willReturn(java.lang.Object)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.BDDMockito$BDDStubber", "org.mockito.BDDMockito.willCallRealMethod()"], ["org.mockito.Mockito", "org.mockito.Mockito()"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, java.lang.String)"], ["org.mockito.MockingDetails", "org.mockito.Mockito.mockingDetails(java.lang.Object)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.stubbing.Answer)"], ["<T> T", "org.mockito.Mockito.mock(java.lang.Class<T>, org.mockito.MockSettings)"], ["<T> T", "org.mockito.Mockito.spy(T)"], ["<T> T", "org.mockito.Mockito.spy(java.lang.Class<T>)"], ["<T> org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.Mockito.when(T)"], ["<T> T", "org.mockito.Mockito.verify(T)"], ["<T> T", "org.mockito.Mockito.verify(T, org.mockito.verification.VerificationMode)"], ["<T> void", "org.mockito.Mockito.reset(T...)"], ["<T> void", "org.mockito.Mockito.clearInvocations(T...)"], ["void", "org.mockito.Mockito.verifyNoMoreInteractions(java.lang.Object...)"], ["void", "org.mockito.Mockito.verifyZeroInteractions(java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Throwable...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doCallRealMethod()"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doNothing()"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doReturn(java.lang.Object)"], ["org.mockito.stubbing.Stubber", "org.mockito.Mockito.doReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.InOrder", "org.mockito.Mockito.inOrder(java.lang.Object...)"], ["java.lang.Object[]", "org.mockito.Mockito.ignoreStubs(java.lang.Object...)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.times(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.never()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.calls(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.only()"], ["org.mockito.verification.VerificationWithTimeout", "org.mockito.Mockito.timeout(long)"], ["org.mockito.verification.VerificationAfterDelay", "org.mockito.Mockito.after(long)"], ["void", "org.mockito.Mockito.validateMockitoUsage()"], ["org.mockito.MockSettings", "org.mockito.Mockito.withSettings()"], ["org.mockito.verification.VerificationMode", "org.mockito.Mockito.description(java.lang.String)"], ["org.mockito.MockitoFramework", "org.mockito.Mockito.framework()"], ["org.mockito.Answers[]", "org.mockito.Answers.values()"], ["org.mockito.Answers", "org.mockito.Answers.valueOf(java.lang.String)"], ["java.lang.Object", "org.mockito.Answers.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.mock.SerializableMode[]", "org.mockito.mock.SerializableMode.values()"], ["org.mockito.mock.SerializableMode", "org.mockito.mock.SerializableMode.valueOf(java.lang.String)"], ["org.mockito.verification.Timeout", "org.mockito.verification.Timeout(long, org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.never()"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.Timeout.description(java.lang.String)"], ["org.mockito.verification.After", "org.mockito.verification.After(long, org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.verification.After.description(java.lang.String)"], ["org.mockito.junit.MockitoJUnit", "org.mockito.junit.MockitoJUnit()"], ["org.mockito.junit.MockitoRule", "org.mockito.junit.MockitoJUnit.rule()"], ["org.mockito.junit.VerificationCollector", "org.mockito.junit.MockitoJUnit.collector()"], ["org.mockito.configuration.DefaultMockitoConfiguration", "org.mockito.configuration.DefaultMockitoConfiguration()"], ["org.mockito.configuration.AnnotationEngine", "org.mockito.configuration.DefaultMockitoConfiguration.getAnnotationEngine()"], ["boolean", "org.mockito.configuration.DefaultMockitoConfiguration.cleansStackTrace()"], ["boolean", "org.mockito.configuration.DefaultMockitoConfiguration.enableClassCache()"], ["org.mockito.internal.InOrderImpl", "org.mockito.internal.InOrderImpl(java.util.List<? extends java.lang.Object>)"], ["<T> T", "org.mockito.internal.InOrderImpl.verify(T)"], ["<T> T", "org.mockito.internal.InOrderImpl.verify(T, org.mockito.verification.VerificationMode)"], ["boolean", "org.mockito.internal.InOrderImpl.isVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.InOrderImpl.markVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.InOrderImpl.verifyNoMoreInteractions()"], ["org.mockito.internal.MockitoCore", "org.mockito.internal.MockitoCore()"], ["boolean", "org.mockito.internal.MockitoCore.isTypeMockable(java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.MockitoCore.mock(java.lang.Class<T>, org.mockito.MockSettings)"], ["<T> org.mockito.stubbing.OngoingStubbing<T>", "org.mockito.internal.MockitoCore.when(T)"], ["<T> T", "org.mockito.internal.MockitoCore.verify(T, org.mockito.verification.VerificationMode)"], ["<T> void", "org.mockito.internal.MockitoCore.reset(T...)"], ["<T> void", "org.mockito.internal.MockitoCore.clearInvocations(T...)"], ["void", "org.mockito.internal.MockitoCore.verifyNoMoreInteractions(java.lang.Object...)"], ["void", "org.mockito.internal.MockitoCore.verifyNoMoreInteractionsInOrder(java.util.List<java.lang.Object>, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.InOrder", "org.mockito.internal.MockitoCore.inOrder(java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.MockitoCore.stubber()"], ["void", "org.mockito.internal.MockitoCore.validateMockitoUsage()"], ["org.mockito.invocation.Invocation", "org.mockito.internal.MockitoCore.getLastInvocation()"], ["java.lang.Object[]", "org.mockito.internal.MockitoCore.ignoreStubs(java.lang.Object...)"], ["org.mockito.MockingDetails", "org.mockito.internal.MockitoCore.mockingDetails(java.lang.Object)"], ["org.mockito.internal.handler.InvocationNotifierHandler", "org.mockito.internal.handler.InvocationNotifierHandler(org.mockito.internal.InternalMockHandler<T>, org.mockito.mock.MockCreationSettings<T>)"], ["java.lang.Object", "org.mockito.internal.handler.InvocationNotifierHandler.handle(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.handler.InvocationNotifierHandler.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.InvocationNotifierHandler.getInvocationContainer()"], ["org.mockito.internal.handler.MockHandlerFactory", "org.mockito.internal.handler.MockHandlerFactory()"], ["<T> org.mockito.internal.InternalMockHandler<T>", "org.mockito.internal.handler.MockHandlerFactory.createMockHandler(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.internal.handler.NotifiedMethodInvocationReport", "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Object)"], ["org.mockito.internal.handler.NotifiedMethodInvocationReport", "org.mockito.internal.handler.NotifiedMethodInvocationReport(org.mockito.invocation.Invocation, java.lang.Throwable)"], ["org.mockito.invocation.DescribedInvocation", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getInvocation()"], ["java.lang.Object", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getReturnedValue()"], ["java.lang.Throwable", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getThrowable()"], ["boolean", "org.mockito.internal.handler.NotifiedMethodInvocationReport.threwException()"], ["java.lang.String", "org.mockito.internal.handler.NotifiedMethodInvocationReport.getLocationOfStubbing()"], ["boolean", "org.mockito.internal.handler.NotifiedMethodInvocationReport.equals(java.lang.Object)"], ["int", "org.mockito.internal.handler.NotifiedMethodInvocationReport.hashCode()"], ["org.mockito.internal.handler.NullResultGuardian", "org.mockito.internal.handler.NullResultGuardian(org.mockito.internal.InternalMockHandler<T>)"], ["java.lang.Object", "org.mockito.internal.handler.NullResultGuardian.handle(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.handler.NullResultGuardian.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.NullResultGuardian.getInvocationContainer()"], ["org.mockito.internal.handler.MockHandlerImpl", "org.mockito.internal.handler.MockHandlerImpl(org.mockito.mock.MockCreationSettings<T>)"], ["java.lang.Object", "org.mockito.internal.handler.MockHandlerImpl.handle(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.handler.MockHandlerImpl.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["org.mockito.internal.stubbing.InvocationContainer", "org.mockito.internal.handler.MockHandlerImpl.getInvocationContainer()"], ["org.mockito.internal.progress.ArgumentMatcherStorageImpl", "org.mockito.internal.progress.ArgumentMatcherStorageImpl()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportMatcher(org.mockito.ArgumentMatcher)"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportAnd()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportOr()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportNot()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.validateState()"], ["void", "org.mockito.internal.progress.ArgumentMatcherStorageImpl.reset()"], ["org.mockito.internal.progress.MockingProgressImpl", "org.mockito.internal.progress.MockingProgressImpl()"], ["org.mockito.verification.VerificationStrategy", "org.mockito.internal.progress.MockingProgressImpl.getDefaultVerificationStrategy()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.reportOngoingStubbing(org.mockito.stubbing.OngoingStubbing)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.verificationStarted(org.mockito.verification.VerificationMode)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.resetOngoingStubbing()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl.pullVerificationMode()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.stubbingStarted()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.validateState()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.stubbingCompleted(org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.progress.MockingProgressImpl.toString()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.reset()"], ["org.mockito.internal.progress.ArgumentMatcherStorage", "org.mockito.internal.progress.MockingProgressImpl.getArgumentMatcherStorage()"], ["void", "org.mockito.internal.progress.MockingProgressImpl.mockingStarted(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.addListener(org.mockito.listeners.MockitoListener)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.removeListener(org.mockito.listeners.MockitoListener)"], ["void", "org.mockito.internal.progress.MockingProgressImpl.setVerificationStrategy(org.mockito.verification.VerificationStrategy)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl.maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.progress.MockingProgressImpl$1.maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.internal.progress.MockingProgress", "org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress()"], ["org.mockito.internal.progress.SequenceNumber", "org.mockito.internal.progress.SequenceNumber()"], ["synchronized", "org.mockito.internal.progress.SequenceNumber.int next()"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.util.MockUtil.typeMockabilityOf(java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.util.MockUtil.createMock(org.mockito.mock.MockCreationSettings<T>)"], ["<T> void", "org.mockito.internal.util.MockUtil.resetMock(T)"], ["<T> org.mockito.internal.InternalMockHandler<T>", "org.mockito.internal.util.MockUtil.getMockHandler(T)"], ["boolean", "org.mockito.internal.util.MockUtil.isMock(java.lang.Object)"], ["boolean", "org.mockito.internal.util.MockUtil.isSpy(java.lang.Object)"], ["org.mockito.mock.MockName", "org.mockito.internal.util.MockUtil.getMockName(java.lang.Object)"], ["void", "org.mockito.internal.util.MockUtil.maybeRedefineMockName(java.lang.Object, java.lang.String)"], ["org.mockito.mock.MockCreationSettings", "org.mockito.internal.util.MockUtil.getMockSettings(java.lang.Object)"], ["org.mockito.internal.util.MockCreationValidator", "org.mockito.internal.util.MockCreationValidator()"], ["void", "org.mockito.internal.util.MockCreationValidator.validateType(java.lang.Class<?>)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateExtraInterfaces(java.lang.Class<?>, java.util.Collection<java.lang.Class<?>>)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateMockedType(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateDelegatedInstance(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.util.MockCreationValidator.validateConstructorUse(boolean, org.mockito.mock.SerializableMode)"], ["java.lang.String", "org.mockito.internal.util.Platform.describe()"], ["boolean", "org.mockito.internal.util.Platform.isJava8BelowUpdate45()"], ["org.mockito.internal.util.Checks", "org.mockito.internal.util.Checks()"], ["<T> T", "org.mockito.internal.util.Checks.checkNotNull(T, java.lang.String)"], ["<T extends java.lang.Iterable<?>> T", "org.mockito.internal.util.Checks.checkItemsNotNull(T, java.lang.String)"], ["org.mockito.internal.util.Decamelizer", "org.mockito.internal.util.Decamelizer()"], ["java.lang.String", "org.mockito.internal.util.Decamelizer.decamelizeMatcher(java.lang.String)"], ["org.mockito.internal.util.RemoveFirstLine", "org.mockito.internal.util.RemoveFirstLine()"], ["java.lang.String", "org.mockito.internal.util.RemoveFirstLine.of(java.lang.String)"], ["org.mockito.internal.util.DefaultMockingDetails", "org.mockito.internal.util.DefaultMockingDetails(java.lang.Object)"], ["boolean", "org.mockito.internal.util.DefaultMockingDetails.isMock()"], ["boolean", "org.mockito.internal.util.DefaultMockingDetails.isSpy()"], ["java.lang.String", "org.mockito.internal.util.DefaultMockingDetails.printInvocations()"], ["org.mockito.internal.util.MockNameImpl", "org.mockito.internal.util.MockNameImpl(java.lang.String, java.lang.Class<?>)"], ["org.mockito.internal.util.MockNameImpl", "org.mockito.internal.util.MockNameImpl(java.lang.String)"], ["boolean", "org.mockito.internal.util.MockNameImpl.isDefault()"], ["java.lang.String", "org.mockito.internal.util.MockNameImpl.toString()"], ["org.mockito.internal.util.StringJoiner", "org.mockito.internal.util.StringJoiner()"], ["java.lang.String", "org.mockito.internal.util.StringJoiner.join(java.lang.Object...)"], ["java.lang.String", "org.mockito.internal.util.StringJoiner.join(java.lang.String, java.lang.Iterable<?>)"], ["org.mockito.internal.util.Timer", "org.mockito.internal.util.Timer(long)"], ["boolean", "org.mockito.internal.util.Timer.isCounting()"], ["void", "org.mockito.internal.util.Timer.start()"], ["long", "org.mockito.internal.util.Timer.duration()"], ["boolean", "org.mockito.internal.util.ObjectMethodsGuru.isToStringMethod(java.lang.reflect.Method)"], ["boolean", "org.mockito.internal.util.ObjectMethodsGuru.isCompareToMethod(java.lang.reflect.Method)"], ["java.lang.Object", "org.mockito.internal.util.JavaEightUtil.emptyOptional()"], ["java.lang.Object", "org.mockito.internal.util.JavaEightUtil.emptyStream()"], ["org.mockito.internal.util.ConsoleMockitoLogger", "org.mockito.internal.util.ConsoleMockitoLogger()"], ["void", "org.mockito.internal.util.ConsoleMockitoLogger.log(java.lang.Object)"], ["org.mockito.internal.util.Primitives", "org.mockito.internal.util.Primitives()"], ["<T> java.lang.Class<T>", "org.mockito.internal.util.Primitives.primitiveTypeOf(java.lang.Class<T>)"], ["boolean", "org.mockito.internal.util.Primitives.isPrimitiveOrWrapper(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.util.Primitives.isAssignableFromWrapper(java.lang.Class<?>, java.lang.Class<?>)"], ["<T> T", "org.mockito.internal.util.Primitives.defaultValue(java.lang.Class<T>)"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner[]", "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.values()"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner", "org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner.valueOf(java.lang.String)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.hasNext()"], ["java.util.Map$Entry<K, V>", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.remove()"], ["java.lang.Object", "org.mockito.internal.util.concurrent.WeakConcurrentMap$EntryIterator.next()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$LatentKey.hashCode()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.remove()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.next()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet$ReducingIterator.hasNext()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.hashCode()"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey.equals(java.lang.Object)"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.get(K)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.containsKey(K)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.put(K, V)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.remove(K)"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.iterator()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.approximateSize()"], ["org.mockito.internal.util.concurrent.DetachedThreadLocal", "org.mockito.internal.util.concurrent.DetachedThreadLocal(org.mockito.internal.util.concurrent.DetachedThreadLocal$Cleaner)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.get()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.set(T)"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.clear()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.clearAll()"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.pushTo(java.lang.Thread)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.fetchFrom(java.lang.Thread)"], ["T", "org.mockito.internal.util.concurrent.DetachedThreadLocal.get(java.lang.Thread)"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.define(java.lang.Thread, T)"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Thread, T>", "org.mockito.internal.util.concurrent.DetachedThreadLocal.getBackingMap()"], ["void", "org.mockito.internal.util.concurrent.DetachedThreadLocal.run()"], ["K", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getKey()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.getValue()"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap$SimpleEntry.setValue(V)"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet", "org.mockito.internal.util.concurrent.WeakConcurrentSet(org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.add(V)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.contains(V)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentSet.remove(V)"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.clear()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentSet.approximateSize()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.run()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentSet.expungeStaleEntries()"], ["java.lang.Thread", "org.mockito.internal.util.concurrent.WeakConcurrentSet.getCleanerThread()"], ["org.mockito.internal.util.concurrent.WeakConcurrentMap", "org.mockito.internal.util.concurrent.WeakConcurrentMap(boolean)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.get(K)"], ["boolean", "org.mockito.internal.util.concurrent.WeakConcurrentMap.containsKey(K)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.put(K, V)"], ["V", "org.mockito.internal.util.concurrent.WeakConcurrentMap.remove(K)"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.clear()"], ["java.lang.Thread", "org.mockito.internal.util.concurrent.WeakConcurrentMap.getCleanerThread()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.expungeStaleEntries()"], ["int", "org.mockito.internal.util.concurrent.WeakConcurrentMap.approximateSize()"], ["void", "org.mockito.internal.util.concurrent.WeakConcurrentMap.run()"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.mockito.internal.util.concurrent.WeakConcurrentMap.iterator()"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner[]", "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.values()"], ["org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner", "org.mockito.internal.util.concurrent.WeakConcurrentSet$Cleaner.valueOf(java.lang.String)"], ["void", "org.mockito.internal.util.reflection.FieldSetter.setField(java.lang.Object, java.lang.reflect.Field, java.lang.Object)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType(java.lang.reflect.TypeVariable<?>)"], ["java.lang.reflect.Type", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.firstBound()"], ["java.lang.reflect.Type[]", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.interfaceBounds()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.hashCode()"], ["java.lang.String", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVarBoundedType.toString()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.Type)"], ["org.mockito.internal.util.reflection.FieldCopier", "org.mockito.internal.util.reflection.FieldCopier()"], ["<T> void", "org.mockito.internal.util.reflection.FieldCopier.copyValue(T, T, java.lang.reflect.Field)"], ["org.mockito.internal.util.reflection.InstanceField", "org.mockito.internal.util.reflection.InstanceField(java.lang.reflect.Field, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.util.reflection.InstanceField.read()"], ["void", "org.mockito.internal.util.reflection.InstanceField.set(java.lang.Object)"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isNull()"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isAnnotatedBy(java.lang.Class<? extends java.lang.annotation.Annotation>)"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.isSynthetic()"], ["<A extends java.lang.annotation.Annotation> A", "org.mockito.internal.util.reflection.InstanceField.annotation(java.lang.Class<A>)"], ["java.lang.reflect.Field", "org.mockito.internal.util.reflection.InstanceField.jdkField()"], ["java.lang.String", "org.mockito.internal.util.reflection.InstanceField.name()"], ["java.lang.String", "org.mockito.internal.util.reflection.InstanceField.toString()"], ["boolean", "org.mockito.internal.util.reflection.InstanceField.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.InstanceField.hashCode()"], ["org.mockito.internal.util.reflection.LenientCopyTool", "org.mockito.internal.util.reflection.LenientCopyTool()"], ["<T> void", "org.mockito.internal.util.reflection.LenientCopyTool.copyToMock(T, T)"], ["<T> void", "org.mockito.internal.util.reflection.LenientCopyTool.copyToRealObject(T, T)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport(java.lang.Class<?>)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.TypeVariable<?>)"], ["boolean", "org.mockito.internal.util.reflection.Fields$1.isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$1.isOut(java.lang.Object)"], ["boolean", "org.mockito.internal.util.reflection.Fields$2.isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$2.isOut(java.lang.Object)"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator.instantiate()"], ["org.mockito.internal.util.reflection.FieldReader", "org.mockito.internal.util.reflection.FieldReader(java.lang.Object, java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.util.reflection.FieldReader.isNull()"], ["java.lang.Object", "org.mockito.internal.util.reflection.FieldReader.read()"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializationReport(java.lang.Object, boolean, boolean)"], ["java.lang.Object", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldInstance()"], ["boolean", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitialized()"], ["boolean", "org.mockito.internal.util.reflection.FieldInitializationReport.fieldWasInitializedUsingContructorArgs()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$GenericArrayReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, int)"], ["boolean", "org.mockito.internal.util.reflection.Fields$3.isOut(org.mockito.internal.util.reflection.InstanceField)"], ["boolean", "org.mockito.internal.util.reflection.Fields$3.isOut(java.lang.Object)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields(java.lang.Object, java.util.List<org.mockito.internal.util.reflection.InstanceField>)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields.filter(org.mockito.internal.util.collections.ListUtil$Filter<org.mockito.internal.util.reflection.InstanceField>)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields$InstanceFields.notNull()"], ["org.mockito.internal.util.reflection.Constructors", "org.mockito.internal.util.reflection.Constructors()"], ["org.mockito.internal.util.reflection.GenericMaster", "org.mockito.internal.util.reflection.GenericMaster()"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate()"], ["org.mockito.internal.util.reflection.FieldInitializer", "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field)"], ["org.mockito.internal.util.reflection.FieldInitializer", "org.mockito.internal.util.reflection.FieldInitializer(java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver)"], ["org.mockito.internal.util.reflection.FieldInitializationReport", "org.mockito.internal.util.reflection.FieldInitializer.initialize()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType", "org.mockito.internal.util.reflection.GenericMetadataSupport$ParameterizedReturnType(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.reflect.TypeVariable<?>[], java.lang.reflect.ParameterizedType)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType(java.lang.reflect.WildcardType)"], ["java.lang.reflect.Type", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.firstBound()"], ["java.lang.reflect.Type[]", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.interfaceBounds()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.hashCode()"], ["java.lang.String", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.toString()"], ["java.lang.reflect.WildcardType", "org.mockito.internal.util.reflection.GenericMetadataSupport$WildCardBoundedType.wildCard()"], ["org.mockito.internal.util.reflection.AccessibilityChanger", "org.mockito.internal.util.reflection.AccessibilityChanger()"], ["void", "org.mockito.internal.util.reflection.AccessibilityChanger.safelyDisableAccess(java.lang.reflect.AccessibleObject)"], ["void", "org.mockito.internal.util.reflection.AccessibilityChanger.enableAccess(java.lang.reflect.AccessibleObject)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport()"], ["boolean", "org.mockito.internal.util.reflection.GenericMetadataSupport.hasRawExtraInterfaces()"], ["java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>", "org.mockito.internal.util.reflection.GenericMetadataSupport.actualTypeArguments()"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport.resolveGenericReturnType(java.lang.reflect.Method)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport.inferFrom(java.lang.reflect.Type)"], ["org.mockito.internal.util.reflection.GenericTypeExtractor", "org.mockito.internal.util.reflection.GenericTypeExtractor()"], ["org.mockito.internal.util.reflection.Fields", "org.mockito.internal.util.reflection.Fields()"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields.allDeclaredFieldsOf(java.lang.Object)"], ["org.mockito.internal.util.reflection.Fields$InstanceFields", "org.mockito.internal.util.reflection.Fields.declaredFieldsOf(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.reflect.Constructor<?>, java.lang.reflect.Constructor<?>)"], ["int", "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1.compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.util.reflection.BeanPropertySetter", "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field, boolean)"], ["org.mockito.internal.util.reflection.BeanPropertySetter", "org.mockito.internal.util.reflection.BeanPropertySetter(java.lang.Object, java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.util.reflection.BeanPropertySetter.set(java.lang.Object)"], ["int", "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.reflect.Field, java.lang.reflect.Field)"], ["int", "org.mockito.internal.util.reflection.SuperTypesLastSorter$1.compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport", "org.mockito.internal.util.reflection.GenericMetadataSupport$FromParameterizedTypeGenericMetadataSupport(java.lang.reflect.ParameterizedType)"], ["org.mockito.internal.util.junit.JUnitFailureHacker", "org.mockito.internal.util.junit.JUnitFailureHacker()"], ["void", "org.mockito.internal.util.junit.JUnitFailureHacker.appendWarnings(org.junit.runner.notification.Failure, java.lang.String)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.hasNext()"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.next()"], ["void", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1.remove()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.size()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.isEmpty()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.contains(java.lang.Object)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.add(java.lang.Object)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.remove(java.lang.Object)"], ["void", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clear()"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.clone()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.hashCode()"], ["java.lang.Object[]", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray()"], ["<T> T[]", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray(T[])"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.removeAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.addAll(java.util.Collection<?>)"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.retainAll(java.util.Collection<?>)"], ["java.lang.String", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toString()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Object...)"], ["org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet", "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Iterable<java.lang.Object>)"], ["org.mockito.internal.util.collections.Sets", "org.mockito.internal.util.collections.Sets()"], ["org.mockito.internal.util.collections.IdentitySet", "org.mockito.internal.util.collections.Sets.newIdentitySet()"], ["<T> java.util.Set<T>", "org.mockito.internal.util.collections.Sets.newSet(T...)"], ["org.mockito.internal.util.collections.ListUtil", "org.mockito.internal.util.collections.ListUtil()"], ["<T> java.util.LinkedList<T>", "org.mockito.internal.util.collections.ListUtil.filter(java.util.Collection<T>, org.mockito.internal.util.collections.ListUtil$Filter<T>)"], ["org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.get()"], ["boolean", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.equals(java.lang.Object)"], ["int", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.hashCode()"], ["org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.toString()"], ["org.mockito.internal.util.collections.IdentitySet", "org.mockito.internal.util.collections.IdentitySet()"], ["boolean", "org.mockito.internal.util.collections.IdentitySet.contains(java.lang.Object)"], ["void", "org.mockito.internal.util.collections.IdentitySet.add(java.lang.Object)"], ["org.mockito.internal.util.collections.Iterables", "org.mockito.internal.util.collections.Iterables()"], ["<T> java.lang.Iterable<T>", "org.mockito.internal.util.collections.Iterables.toIterable(java.util.Enumeration<T>)"], ["org.mockito.internal.util.io.IOUtil", "org.mockito.internal.util.io.IOUtil()"], ["void", "org.mockito.internal.util.io.IOUtil.writeText(java.lang.String, java.io.File)"], ["void", "org.mockito.internal.util.io.IOUtil.closeQuietly(java.io.Closeable)"], ["void", "org.mockito.internal.util.io.IOUtil.close(java.io.Closeable)"], ["org.mockito.internal.reporting.Discrepancy", "org.mockito.internal.reporting.Discrepancy(int, int)"], ["int", "org.mockito.internal.reporting.Discrepancy.getWantedCount()"], ["java.lang.String", "org.mockito.internal.reporting.Discrepancy.getPluralizedWantedCount()"], ["int", "org.mockito.internal.reporting.Discrepancy.getActualCount()"], ["java.lang.String", "org.mockito.internal.reporting.Discrepancy.getPluralizedActualCount()"], ["org.mockito.internal.reporting.Pluralizer", "org.mockito.internal.reporting.Pluralizer()"], ["java.lang.String", "org.mockito.internal.reporting.Pluralizer.pluralize(int)"], ["java.lang.String", "org.mockito.internal.reporting.Pluralizer.were_exactly_x_interactions(int)"], ["org.mockito.internal.reporting.SmartPrinter", "org.mockito.internal.reporting.SmartPrinter(org.mockito.invocation.MatchableInvocation, org.mockito.invocation.Invocation, java.lang.Integer...)"], ["java.lang.String", "org.mockito.internal.reporting.SmartPrinter.getWanted()"], ["java.lang.String", "org.mockito.internal.reporting.SmartPrinter.getActual()"], ["org.mockito.internal.reporting.PrintSettings", "org.mockito.internal.reporting.PrintSettings()"], ["void", "org.mockito.internal.reporting.PrintSettings.setMultiline(boolean)"], ["boolean", "org.mockito.internal.reporting.PrintSettings.isMultiline()"], ["org.mockito.internal.reporting.PrintSettings", "org.mockito.internal.reporting.PrintSettings.verboseMatchers(java.lang.Integer...)"], ["boolean", "org.mockito.internal.reporting.PrintSettings.extraTypeInfoFor(int)"], ["void", "org.mockito.internal.reporting.PrintSettings.setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.Invocation)"], ["java.lang.String", "org.mockito.internal.reporting.PrintSettings.print(org.mockito.invocation.MatchableInvocation)"], ["org.mockito.internal.verification.Description", "org.mockito.internal.verification.Description(org.mockito.verification.VerificationMode, java.lang.String)"], ["void", "org.mockito.internal.verification.Description.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Description.description(java.lang.String)"], ["org.mockito.internal.verification.SingleRegisteredInvocation", "org.mockito.internal.verification.SingleRegisteredInvocation()"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.add(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.removeLast()"], ["void", "org.mockito.internal.verification.SingleRegisteredInvocation.clear()"], ["boolean", "org.mockito.internal.verification.SingleRegisteredInvocation.isEmpty()"], ["org.mockito.internal.verification.InOrderWrapper", "org.mockito.internal.verification.InOrderWrapper(org.mockito.internal.verification.api.VerificationInOrderMode, org.mockito.internal.InOrderImpl)"], ["void", "org.mockito.internal.verification.InOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.InOrderWrapper.description(java.lang.String)"], ["org.mockito.internal.verification.NoMoreInteractions", "org.mockito.internal.verification.NoMoreInteractions()"], ["void", "org.mockito.internal.verification.NoMoreInteractions.verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.NoMoreInteractions.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.NoMoreInteractions.description(java.lang.String)"], ["org.mockito.internal.verification.VerificationWrapper", "org.mockito.internal.verification.VerificationWrapper(WrapperType)"], ["void", "org.mockito.internal.verification.VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.times(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.never()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapper.only()"], ["org.mockito.internal.verification.InOrderContextImpl", "org.mockito.internal.verification.InOrderContextImpl()"], ["boolean", "org.mockito.internal.verification.InOrderContextImpl.isVerified(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.InOrderContextImpl.markVerified(org.mockito.invocation.Invocation)"], ["org.mockito.internal.verification.VerificationWrapperInOrderWrapper", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper(org.mockito.internal.verification.VerificationWrapper<?>, org.mockito.internal.InOrderImpl)"], ["void", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationWrapperInOrderWrapper.description(java.lang.String)"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations$RemoveToString.isOut(java.lang.Object)"], ["org.mockito.internal.verification.Calls", "org.mockito.internal.verification.Calls(int)"], ["void", "org.mockito.internal.verification.Calls.verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.Calls.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.Calls.toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Calls.description(java.lang.String)"], ["org.mockito.internal.verification.VerificationModeFactory", "org.mockito.internal.verification.VerificationModeFactory()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atLeastOnce()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atLeast(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.only()"], ["org.mockito.internal.verification.Times", "org.mockito.internal.verification.VerificationModeFactory.times(int)"], ["org.mockito.internal.verification.Calls", "org.mockito.internal.verification.VerificationModeFactory.calls(int)"], ["org.mockito.internal.verification.NoMoreInteractions", "org.mockito.internal.verification.VerificationModeFactory.noMoreInteractions()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.atMost(int)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationModeFactory.description(org.mockito.verification.VerificationMode, java.lang.String)"], ["org.mockito.internal.verification.DefaultRegisteredInvocations", "org.mockito.internal.verification.DefaultRegisteredInvocations()"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.add(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.removeLast()"], ["void", "org.mockito.internal.verification.DefaultRegisteredInvocations.clear()"], ["boolean", "org.mockito.internal.verification.DefaultRegisteredInvocations.isEmpty()"], ["org.mockito.internal.verification.Only", "org.mockito.internal.verification.Only()"], ["void", "org.mockito.internal.verification.Only.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Only.description(java.lang.String)"], ["org.mockito.internal.verification.AtMost", "org.mockito.internal.verification.AtMost(int)"], ["void", "org.mockito.internal.verification.AtMost.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.AtMost.description(java.lang.String)"], ["org.mockito.internal.verification.VerificationDataImpl", "org.mockito.internal.verification.VerificationDataImpl(org.mockito.internal.stubbing.InvocationContainer, org.mockito.internal.invocation.InvocationMatcher)"], ["org.mockito.invocation.MatchableInvocation", "org.mockito.internal.verification.VerificationDataImpl.getTarget()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.verification.VerificationDataImpl.getWanted()"], ["org.mockito.internal.verification.MockAwareVerificationMode", "org.mockito.internal.verification.MockAwareVerificationMode(java.lang.Object, org.mockito.verification.VerificationMode)"], ["void", "org.mockito.internal.verification.MockAwareVerificationMode.verify(org.mockito.internal.verification.api.VerificationData)"], ["java.lang.Object", "org.mockito.internal.verification.MockAwareVerificationMode.getMock()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.MockAwareVerificationMode.description(java.lang.String)"], ["org.mockito.internal.verification.AtLeast", "org.mockito.internal.verification.AtLeast(int)"], ["void", "org.mockito.internal.verification.AtLeast.verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.AtLeast.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.AtLeast.toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.AtLeast.description(java.lang.String)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl(long, long, org.mockito.verification.VerificationMode, boolean)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl(long, org.mockito.verification.VerificationMode, boolean, org.mockito.internal.util.Timer)"], ["void", "org.mockito.internal.verification.VerificationOverTimeImpl.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.internal.verification.VerificationOverTimeImpl", "org.mockito.internal.verification.VerificationOverTimeImpl.copyWithVerificationMode(org.mockito.verification.VerificationMode)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationOverTimeImpl.description(java.lang.String)"], ["boolean", "org.mockito.internal.verification.VerificationOverTimeImpl.isReturnOnSuccess()"], ["long", "org.mockito.internal.verification.VerificationOverTimeImpl.getPollingPeriodMillis()"], ["org.mockito.internal.util.Timer", "org.mockito.internal.verification.VerificationOverTimeImpl.getTimer()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.VerificationOverTimeImpl.getDelegate()"], ["org.mockito.internal.verification.Times", "org.mockito.internal.verification.Times(int)"], ["void", "org.mockito.internal.verification.Times.verify(org.mockito.internal.verification.api.VerificationData)"], ["void", "org.mockito.internal.verification.Times.verifyInOrder(org.mockito.internal.verification.api.VerificationDataInOrder)"], ["java.lang.String", "org.mockito.internal.verification.Times.toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.verification.Times.description(java.lang.String)"], ["java.lang.Integer[]", "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(java.util.List<org.mockito.ArgumentMatcher>, java.lang.Object[])"], ["org.mockito.internal.verification.checkers.AtLeastDiscrepancy", "org.mockito.internal.verification.checkers.AtLeastDiscrepancy(int, int)"], ["java.lang.String", "org.mockito.internal.verification.checkers.AtLeastDiscrepancy.getPluralizedWantedCount()"], ["void", "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.verification.checkers.MissingInvocationChecker.checkMissingInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker()"], ["void", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"], ["void", "org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker.checkAtLeastNumberOfInvocations(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.NumberOfInvocationsChecker", "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker()"], ["void", "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int)"], ["void", "org.mockito.internal.verification.checkers.NonGreedyNumberOfInvocationsInOrderChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker", "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker()"], ["void", "org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker.check(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.verification.api.VerificationDataInOrderImpl", "org.mockito.internal.verification.api.VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["org.mockito.internal.verification.api.InOrderContext", "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getOrderingContext()"], ["org.mockito.invocation.MatchableInvocation", "org.mockito.internal.verification.api.VerificationDataInOrderImpl.getWanted()"], ["org.mockito.internal.invocation.MatcherApplicationStrategy", "org.mockito.internal.invocation.MatcherApplicationStrategy.getMatcherApplicationStrategyFor(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher<?>>)"], ["boolean", "org.mockito.internal.invocation.MatcherApplicationStrategy.forEachMatcherAndArgument(org.mockito.internal.invocation.ArgumentMatcherAction)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstMatchingUnverifiedInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationsFinder.findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext, java.util.List<org.mockito.invocation.Invocation>)"], ["org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveUnverifiedInOrder.isOut(java.lang.Object)"], ["org.mockito.internal.invocation.StubInfoImpl", "org.mockito.internal.invocation.StubInfoImpl(org.mockito.invocation.DescribedInvocation)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.StubInfoImpl.stubbedAt()"], ["org.mockito.internal.invocation.ArgumentsProcessor", "org.mockito.internal.invocation.ArgumentsProcessor()"], ["java.lang.Object[]", "org.mockito.internal.invocation.ArgumentsProcessor.expandVarArgs(boolean, java.lang.Object[])"], ["org.mockito.internal.invocation.ArgumentMatcherAction", "org.mockito.internal.invocation.TypeSafeMatching.matchesTypeSafe()"], ["boolean", "org.mockito.internal.invocation.TypeSafeMatching.apply(org.mockito.ArgumentMatcher, java.lang.Object)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher$1.apply(org.mockito.ArgumentMatcher<?>, java.lang.Object)"], ["org.mockito.internal.invocation.MatchersBinder", "org.mockito.internal.invocation.MatchersBinder()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.MatchersBinder.bindMatchers(org.mockito.internal.progress.ArgumentMatcherStorage, org.mockito.invocation.Invocation)"], ["org.mockito.internal.invocation.InvocationComparator", "org.mockito.internal.invocation.InvocationComparator()"], ["int", "org.mockito.internal.invocation.InvocationComparator.compare(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"], ["int", "org.mockito.internal.invocation.InvocationComparator.compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.invocation.SerializableMethod", "org.mockito.internal.invocation.SerializableMethod(java.lang.reflect.Method)"], ["java.lang.String", "org.mockito.internal.invocation.SerializableMethod.getName()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.isVarArgs()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.isAbstract()"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.SerializableMethod.getJavaMethod()"], ["int", "org.mockito.internal.invocation.SerializableMethod.hashCode()"], ["boolean", "org.mockito.internal.invocation.SerializableMethod.equals(java.lang.Object)"], ["org.mockito.internal.invocation.UnusedStubsFinder", "org.mockito.internal.invocation.UnusedStubsFinder()"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching.isOut(java.lang.Object)"], ["org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType[]", "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.values()"], ["org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType", "org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType.valueOf(java.lang.String)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerified(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerified(org.mockito.invocation.Invocation, org.mockito.invocation.MatchableInvocation)"], ["void", "org.mockito.internal.invocation.InvocationMarker.markVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)"], ["org.mockito.internal.invocation.InvocationImpl", "org.mockito.internal.invocation.InvocationImpl(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], int, org.mockito.internal.invocation.realmethod.RealMethod, org.mockito.invocation.Location)"], ["java.lang.Object", "org.mockito.internal.invocation.InvocationImpl.getMock()"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.InvocationImpl.getMethod()"], ["java.lang.Object[]", "org.mockito.internal.invocation.InvocationImpl.getArguments()"], ["<T> T", "org.mockito.internal.invocation.InvocationImpl.getArgument(int)"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.isVerified()"], ["int", "org.mockito.internal.invocation.InvocationImpl.getSequenceNumber()"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.equals(java.lang.Object)"], ["int", "org.mockito.internal.invocation.InvocationImpl.hashCode()"], ["java.lang.String", "org.mockito.internal.invocation.InvocationImpl.toString()"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationImpl.getLocation()"], ["java.lang.Object[]", "org.mockito.internal.invocation.InvocationImpl.getRawArguments()"], ["java.lang.Object", "org.mockito.internal.invocation.InvocationImpl.callRealMethod()"], ["void", "org.mockito.internal.invocation.InvocationImpl.markVerified()"], ["org.mockito.invocation.StubInfo", "org.mockito.internal.invocation.InvocationImpl.stubInfo()"], ["void", "org.mockito.internal.invocation.InvocationImpl.markStubbed(org.mockito.invocation.StubInfo)"], ["boolean", "org.mockito.internal.invocation.InvocationImpl.isIgnoredForVerification()"], ["void", "org.mockito.internal.invocation.InvocationImpl.ignoreForVerification()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation, java.util.List<org.mockito.ArgumentMatcher>)"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.invocation.InvocationMatcher(org.mockito.invocation.Invocation)"], ["java.lang.reflect.Method", "org.mockito.internal.invocation.InvocationMatcher.getMethod()"], ["org.mockito.invocation.Invocation", "org.mockito.internal.invocation.InvocationMatcher.getInvocation()"], ["java.lang.String", "org.mockito.internal.invocation.InvocationMatcher.toString()"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.matches(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.hasSimilarMethod(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.InvocationMatcher.hasSameMethod(org.mockito.invocation.Invocation)"], ["org.mockito.invocation.Location", "org.mockito.internal.invocation.InvocationMatcher.getLocation()"], ["void", "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(org.mockito.invocation.Invocation)"], ["org.mockito.internal.invocation.realmethod.DefaultRealMethod", "org.mockito.internal.invocation.realmethod.DefaultRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)"], ["java.lang.Object", "org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(java.lang.Object, java.lang.Object[])"], ["org.mockito.internal.invocation.realmethod.CleanTraceRealMethod", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.creation.util.MockitoMethodProxy)"], ["org.mockito.internal.invocation.realmethod.CleanTraceRealMethod", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod(org.mockito.internal.invocation.realmethod.RealMethod)"], ["java.lang.Object", "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(java.lang.Object, java.lang.Object[])"], ["boolean", "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.invocation.finder.VerifiableInvocationsFinder$RemoveIgnoredForVerification.isOut(java.lang.Object)"], ["org.mockito.internal.debugging.VerboseMockInvocationLogger", "org.mockito.internal.debugging.VerboseMockInvocationLogger()"], ["org.mockito.internal.debugging.VerboseMockInvocationLogger", "org.mockito.internal.debugging.VerboseMockInvocationLogger(java.io.PrintStream)"], ["void", "org.mockito.internal.debugging.VerboseMockInvocationLogger.reportInvocation(org.mockito.listeners.MethodInvocationReport)"], ["boolean", "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(org.mockito.stubbing.Stubbing)"], ["boolean", "org.mockito.internal.debugging.InvocationsPrinter$1.isOut(java.lang.Object)"], ["org.mockito.internal.debugging.WarningsPrinterImpl", "org.mockito.internal.debugging.WarningsPrinterImpl(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>, boolean)"], ["java.lang.String", "org.mockito.internal.debugging.WarningsPrinterImpl.print()"], ["org.mockito.internal.debugging.LoggingListener", "org.mockito.internal.debugging.LoggingListener(boolean)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundStubCalledWithDifferentArgs(org.mockito.invocation.Invocation, org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundUnusedStub(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.debugging.LoggingListener.foundUnstubbed(org.mockito.internal.invocation.InvocationMatcher)"], ["java.lang.String", "org.mockito.internal.debugging.LoggingListener.getStubbingInfo()"], ["org.mockito.internal.debugging.WarningsFinder", "org.mockito.internal.debugging.WarningsFinder(java.util.List<org.mockito.invocation.Invocation>, java.util.List<org.mockito.internal.invocation.InvocationMatcher>)"], ["void", "org.mockito.internal.debugging.WarningsFinder.find(org.mockito.internal.debugging.FindingsListener)"], ["org.mockito.internal.debugging.WarningsCollector", "org.mockito.internal.debugging.WarningsCollector()"], ["java.lang.String", "org.mockito.internal.debugging.WarningsCollector.getWarnings()"], ["org.mockito.internal.debugging.InvocationsPrinter", "org.mockito.internal.debugging.InvocationsPrinter()"], ["java.lang.String", "org.mockito.internal.debugging.InvocationsPrinter.printInvocations(java.lang.Object)"], ["org.mockito.internal.debugging.LocationImpl", "org.mockito.internal.debugging.LocationImpl()"], ["org.mockito.internal.debugging.LocationImpl", "org.mockito.internal.debugging.LocationImpl(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)"], ["java.lang.String", "org.mockito.internal.debugging.LocationImpl.toString()"], ["org.mockito.internal.debugging.Localized", "org.mockito.internal.debugging.Localized(T)"], ["T", "org.mockito.internal.debugging.Localized.getObject()"], ["org.mockito.invocation.Location", "org.mockito.internal.debugging.Localized.getLocation()"], ["org.mockito.internal.debugging.MockitoDebuggerImpl", "org.mockito.internal.debugging.MockitoDebuggerImpl()"], ["java.lang.String", "org.mockito.internal.debugging.MockitoDebuggerImpl.printInvocations(java.lang.Object...)"], ["java.lang.AssertionError", "org.mockito.internal.junit.FriendlyExceptionMaker.createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.mockito.internal.junit.JUnitDetecter.hasJUnit()"], ["void", "org.mockito.internal.junit.StubbingArgMismatches.add(org.mockito.invocation.Invocation, org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.junit.StubbingArgMismatches.format(java.lang.String, org.mockito.internal.util.MockitoLogger)"], ["int", "org.mockito.internal.junit.StubbingArgMismatches.size()"], ["java.lang.String", "org.mockito.internal.junit.StubbingArgMismatches.toString()"], ["org.mockito.internal.junit.UnnecessaryStubbingsReporter", "org.mockito.internal.junit.UnnecessaryStubbingsReporter()"], ["void", "org.mockito.internal.junit.UnnecessaryStubbingsReporter.validateUnusedStubs(java.lang.Class<?>, org.junit.runner.notification.RunNotifier)"], ["void", "org.mockito.internal.junit.UnnecessaryStubbingsReporter.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["org.mockito.internal.junit.JUnitTool", "org.mockito.internal.junit.JUnitTool()"], ["boolean", "org.mockito.internal.junit.JUnitTool.hasJUnit()"], ["java.lang.AssertionError", "org.mockito.internal.junit.JUnitTool.createArgumentsAreDifferentException(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl$1.evaluate()"], ["void", "org.mockito.internal.junit.RuleStubbingHintsReporter.onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.verify(org.mockito.internal.verification.api.VerificationData)"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.junit.VerificationCollectorImpl$VerificationWrapper.description(java.lang.String)"], ["int", "org.mockito.internal.junit.UnusedStubbings.size()"], ["java.lang.String", "org.mockito.internal.junit.UnusedStubbings.toString()"], ["org.mockito.internal.junit.UnusedStubbingsFinder", "org.mockito.internal.junit.UnusedStubbingsFinder()"], ["org.mockito.internal.junit.UnusedStubbings", "org.mockito.internal.junit.UnusedStubbingsFinder.getUnusedStubbings(java.lang.Iterable<java.lang.Object>)"], ["boolean", "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(org.mockito.stubbing.Stubbing)"], ["boolean", "org.mockito.internal.junit.UnusedStubbingsFinder$1.isOut(java.lang.Object)"], ["org.mockito.internal.junit.JUnitRule$SilentStatement", "org.mockito.internal.junit.JUnitRule$SilentStatement(org.mockito.internal.junit.JUnitRule, java.lang.Object, org.junit.runners.model.Statement)"], ["void", "org.mockito.internal.junit.JUnitRule$SilentStatement.evaluate()"], ["java.lang.String", "org.mockito.internal.junit.StubbingHint.toString()"], ["org.mockito.verification.VerificationMode", "org.mockito.internal.junit.VerificationCollectorImpl$2.maybeVerifyLazily(org.mockito.verification.VerificationMode)"], ["org.mockito.internal.junit.JUnitRule", "org.mockito.internal.junit.JUnitRule(org.mockito.internal.util.MockitoLogger, boolean)"], ["org.junit.runners.model.Statement", "org.mockito.internal.junit.JUnitRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["org.mockito.internal.junit.JUnitRule", "org.mockito.internal.junit.JUnitRule.silent()"], ["org.mockito.junit.MockitoRule", "org.mockito.internal.junit.JUnitRule.silent()"], ["void", "org.mockito.internal.junit.JUnitRule$DefaultStatement.evaluate()"], ["org.mockito.internal.junit.VerificationCollectorImpl", "org.mockito.internal.junit.VerificationCollectorImpl()"], ["org.junit.runners.model.Statement", "org.mockito.internal.junit.VerificationCollectorImpl.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["void", "org.mockito.internal.junit.VerificationCollectorImpl.collectAndReport()"], ["org.mockito.junit.VerificationCollector", "org.mockito.internal.junit.VerificationCollectorImpl.assertLazily()"], ["org.mockito.internal.creation.DelegatingMethod", "org.mockito.internal.creation.DelegatingMethod(java.lang.reflect.Method)"], ["java.lang.reflect.Method", "org.mockito.internal.creation.DelegatingMethod.getJavaMethod()"], ["java.lang.String", "org.mockito.internal.creation.DelegatingMethod.getName()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.isVarArgs()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.isAbstract()"], ["boolean", "org.mockito.internal.creation.DelegatingMethod.equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.DelegatingMethod.hashCode()"], ["org.mockito.internal.creation.MockSettingsImpl", "org.mockito.internal.creation.MockSettingsImpl()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.serializable()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.serializable(org.mockito.mock.SerializableMode)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.extraInterfaces(java.lang.Class<?>...)"], ["org.mockito.mock.MockName", "org.mockito.internal.creation.MockSettingsImpl.getMockName()"], ["java.lang.Object", "org.mockito.internal.creation.MockSettingsImpl.getSpiedInstance()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.name(java.lang.String)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.spiedInstance(java.lang.Object)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.defaultAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.useConstructor()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.outerInstance(java.lang.Object)"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.isUsingConstructor()"], ["java.lang.Object", "org.mockito.internal.creation.MockSettingsImpl.getOuterClassInstance()"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.isStubOnly()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.verboseLogging()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.invocationListeners(org.mockito.listeners.InvocationListener...)"], ["boolean", "org.mockito.internal.creation.MockSettingsImpl.hasInvocationListeners()"], ["org.mockito.MockSettings", "org.mockito.internal.creation.MockSettingsImpl.stubOnly()"], ["org.mockito.internal.creation.settings.CreationSettings", "org.mockito.internal.creation.settings.CreationSettings()"], ["org.mockito.internal.creation.settings.CreationSettings", "org.mockito.internal.creation.settings.CreationSettings(org.mockito.internal.creation.settings.CreationSettings)"], ["java.lang.String", "org.mockito.internal.creation.settings.CreationSettings.getName()"], ["java.lang.Object", "org.mockito.internal.creation.settings.CreationSettings.getSpiedInstance()"], ["org.mockito.mock.MockName", "org.mockito.internal.creation.settings.CreationSettings.getMockName()"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isSerializable()"], ["org.mockito.mock.SerializableMode", "org.mockito.internal.creation.settings.CreationSettings.getSerializableMode()"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isUsingConstructor()"], ["java.lang.Object", "org.mockito.internal.creation.settings.CreationSettings.getOuterClassInstance()"], ["boolean", "org.mockito.internal.creation.settings.CreationSettings.isStubOnly()"], ["org.mockito.internal.creation.instance.DefaultInstantiatorProvider", "org.mockito.internal.creation.instance.DefaultInstantiatorProvider()"], ["org.mockito.internal.creation.instance.Instantiator", "org.mockito.internal.creation.instance.DefaultInstantiatorProvider.getInstantiator(org.mockito.mock.MockCreationSettings<?>)"], ["org.mockito.internal.creation.instance.ConstructorInstantiator", "org.mockito.internal.creation.instance.ConstructorInstantiator(java.lang.Object)"], ["<T> T", "org.mockito.internal.creation.instance.ConstructorInstantiator.newInstance(java.lang.Class<T>)"], ["org.mockito.internal.creation.instance.InstantiationException", "org.mockito.internal.creation.instance.InstantiationException(java.lang.String, java.lang.Throwable)"], ["<T> T", "org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(java.lang.Class<T>)"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.values()"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.valueOf(java.lang.String)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$IsIllegal.invoke()"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.get()"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$LookupKey.hashCode()"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.hashCode()"], ["<T> org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey<T>", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$CachedBytecodeGenerator$MockKey.of(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>)"], ["org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"], ["org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice(org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>, java.lang.String)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMock(java.lang.Object)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMocked(java.lang.Object, java.lang.reflect.Method)"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ReturnValueWrapper.call()"], ["org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject()"], ["void", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject.doReadObject(java.lang.String, org.mockito.internal.creation.bytebuddy.MockAccess, java.io.ObjectInputStream)"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectInputStream(java.io.InputStream, java.lang.Class<?>, java.util.Set<java.lang.Class<?>>)"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey(java.lang.ClassLoader, java.lang.ref.ReferenceQueue<java.lang.ClassLoader>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.equals(java.lang.Object)"], ["int", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.hashCode()"], ["java.lang.ClassLoader", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$WeakKey.get()"], ["org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator()"], ["org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator(net.bytebuddy.implementation.Implementation, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator(org.mockito.internal.creation.bytebuddy.BytecodeGenerator, boolean)"], ["<T> java.lang.Class<T>", "org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["net.bytebuddy.jar.asm.ClassVisitor", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper.wrap(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.jar.asm.ClassVisitor, net.bytebuddy.implementation.Implementation$Context, net.bytebuddy.pool.TypePool, int, int)"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace.doWriteReplace(org.mockito.internal.creation.bytebuddy.MockAccess)"], ["<T> org.mockito.internal.creation.bytebuddy.MockFeatures<T>", "org.mockito.internal.creation.bytebuddy.MockFeatures.withMockFeatures(java.lang.Class<T>, java.util.Set<java.lang.Class<?>>, org.mockito.mock.SerializableMode)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SuperMethodCall.isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SuperMethodCall.invoke()"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode()"], ["int", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode.doIdentityHashCode(java.lang.Object)"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$MockitoMockObjectOutputStream(java.io.ByteArrayOutputStream)"], ["org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator(java.lang.instrument.Instrumentation, org.mockito.internal.util.concurrent.WeakConcurrentMap<java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor>)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(org.mockito.internal.creation.bytebuddy.MockFeatures<T>)"], ["byte[]", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(java.lang.ClassLoader, java.lang.String, java.lang.Class<?>, java.security.ProtectionDomain, byte[])"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.reflect.Method, java.lang.Object[], java.util.concurrent.Callable<?>)"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(java.lang.Object, org.mockito.internal.creation.bytebuddy.MockMethodInterceptor, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation(java.lang.Object, org.mockito.internal.invocation.MockitoMethod, java.lang.Object[], org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod, int)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.isVerified()"], ["int", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getSequenceNumber()"], ["org.mockito.invocation.Location", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getLocation()"], ["java.lang.Object[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getRawArguments()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.markVerified()"], ["org.mockito.invocation.StubInfo", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.stubInfo()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.markStubbed(org.mockito.invocation.StubInfo)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.isIgnoredForVerification()"], ["void", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.ignoreForVerification()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getMock()"], ["java.lang.reflect.Method", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getMethod()"], ["java.lang.Object[]", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getArguments()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.getArgument(int)"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.callRealMethod()"], ["int", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.hashCode()"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.equals(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation.toString()"], ["org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable(java.util.concurrent.Callable<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable.isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.InterceptedInvocation$SuperMethod$FromCallable.invoke()"], ["net.bytebuddy.jar.asm.MethodVisitor", "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator$ParameterWritingVisitorWrapper$ParameterAddingClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport.writeReplace(java.lang.Object)"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor(org.mockito.internal.InternalMockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getMockHandler()"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.getSerializationSupport()"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableSuperMethodCall.isInvokable()"], ["java.lang.Object", "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SerializableSuperMethodCall.invoke()"], ["org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy", "org.mockito.internal.creation.bytebuddy.ByteBuddyCrossClassLoaderSerializationSupport$CrossClassLoaderSerializationProxy(java.lang.Object)"], ["org.mockito.internal.creation.bytebuddy.MockMethodDispatcher", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher()"], ["org.mockito.internal.creation.bytebuddy.MockMethodDispatcher", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher.get(java.lang.String, java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.MockMethodDispatcher.set(java.lang.String, org.mockito.internal.creation.bytebuddy.MockMethodDispatcher)"], ["boolean", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.mockable()"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker$1.nonMockableReason()"], ["org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker()"], ["<T> T", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(org.mockito.mock.MockCreationSettings<T>, org.mockito.invocation.MockHandler)"], ["<T> java.lang.Class<? extends T>", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(org.mockito.mock.MockCreationSettings<T>)"], ["org.mockito.invocation.MockHandler", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.getHandler(java.lang.Object)"], ["void", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.resetMock(java.lang.Object, org.mockito.invocation.MockHandler, org.mockito.mock.MockCreationSettings)"], ["org.mockito.plugins.MockMaker$TypeMockability", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.isTypeMockable(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.mockable()"], ["java.lang.String", "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker$1.nonMockableReason()"], ["org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals()"], ["boolean", "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals.doIdentityEquals(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.configuration.SpyAnnotationEngine", "org.mockito.internal.configuration.SpyAnnotationEngine()"], ["void", "org.mockito.internal.configuration.SpyAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.internal.configuration.DefaultInjectionEngine", "org.mockito.internal.configuration.DefaultInjectionEngine()"], ["void", "org.mockito.internal.configuration.DefaultInjectionEngine.injectMocksOnFields(java.util.Set<java.lang.reflect.Field>, java.util.Set<java.lang.Object>, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.configuration.DefaultAnnotationEngine$1.process(A, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.GlobalConfiguration", "org.mockito.internal.configuration.GlobalConfiguration()"], ["void", "org.mockito.internal.configuration.GlobalConfiguration.validate()"], ["org.mockito.configuration.AnnotationEngine", "org.mockito.internal.configuration.GlobalConfiguration.getAnnotationEngine()"], ["boolean", "org.mockito.internal.configuration.GlobalConfiguration.cleansStackTrace()"], ["boolean", "org.mockito.internal.configuration.GlobalConfiguration.enableClassCache()"], ["org.mockito.internal.configuration.DefaultAnnotationEngine", "org.mockito.internal.configuration.DefaultAnnotationEngine()"], ["void", "org.mockito.internal.configuration.DefaultAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.internal.configuration.CaptorAnnotationProcessor", "org.mockito.internal.configuration.CaptorAnnotationProcessor()"], ["java.lang.Object", "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(org.mockito.Captor, java.lang.reflect.Field)"], ["java.lang.Object", "org.mockito.internal.configuration.CaptorAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.MockAnnotationProcessor", "org.mockito.internal.configuration.MockAnnotationProcessor()"], ["java.lang.Object", "org.mockito.internal.configuration.MockAnnotationProcessor.process(org.mockito.Mock, java.lang.reflect.Field)"], ["java.lang.Object", "org.mockito.internal.configuration.MockAnnotationProcessor.process(java.lang.annotation.Annotation, java.lang.reflect.Field)"], ["org.mockito.internal.configuration.InjectingAnnotationEngine", "org.mockito.internal.configuration.InjectingAnnotationEngine()"], ["void", "org.mockito.internal.configuration.InjectingAnnotationEngine.process(java.lang.Class<?>, java.lang.Object)"], ["void", "org.mockito.internal.configuration.InjectingAnnotationEngine.injectMocks(java.lang.Object)"], ["org.mockito.internal.configuration.ClassPathLoader", "org.mockito.internal.configuration.ClassPathLoader()"], ["org.mockito.configuration.IMockitoConfiguration", "org.mockito.internal.configuration.ClassPathLoader.loadConfiguration()"], ["org.mockito.internal.configuration.plugins.PluginFinder", "org.mockito.internal.configuration.plugins.PluginFinder(org.mockito.plugins.PluginSwitch)"], ["org.mockito.internal.configuration.plugins.PluginLoader", "org.mockito.internal.configuration.plugins.PluginLoader(org.mockito.plugins.PluginSwitch)"], ["org.mockito.internal.configuration.plugins.Plugins", "org.mockito.internal.configuration.plugins.Plugins()"], ["org.mockito.plugins.StackTraceCleanerProvider", "org.mockito.internal.configuration.plugins.Plugins.getStackTraceCleanerProvider()"], ["org.mockito.plugins.MockMaker", "org.mockito.internal.configuration.plugins.Plugins.getMockMaker()"], ["org.mockito.plugins.InstantiatorProvider", "org.mockito.internal.configuration.plugins.Plugins.getInstantiatorProvider()"], ["boolean", "org.mockito.internal.configuration.plugins.DefaultPluginSwitch.isEnabled(java.lang.String)"], ["org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler", "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler()"], ["org.mockito.internal.configuration.injection.ConstructorInjection", "org.mockito.internal.configuration.injection.ConstructorInjection()"], ["boolean", "org.mockito.internal.configuration.injection.ConstructorInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver", "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver(java.util.Set<java.lang.Object>)"], ["java.lang.Object[]", "org.mockito.internal.configuration.injection.ConstructorInjection$SimpleArgumentResolver.resolveTypeInstances(java.lang.Class<?>...)"], ["org.mockito.internal.configuration.injection.MockInjection", "org.mockito.internal.configuration.injection.MockInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection.onField(java.lang.reflect.Field, java.lang.Object)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection.onFields(java.util.Set<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy()"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy.nop()"], ["org.mockito.internal.configuration.injection.MockInjectionStrategy", "org.mockito.internal.configuration.injection.MockInjectionStrategy.thenTry(org.mockito.internal.configuration.injection.MockInjectionStrategy)"], ["boolean", "org.mockito.internal.configuration.injection.MockInjectionStrategy.process(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.withMocks(java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryConstructorInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.tryPropertyOrFieldInjection()"], ["org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.handleSpyAnnotation()"], ["void", "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.apply()"], ["org.mockito.internal.configuration.injection.PropertyAndSetterInjection", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection()"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection.processInjection(java.lang.reflect.Field, java.lang.Object, java.util.Set<java.lang.Object>)"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.reflect.Field)"], ["boolean", "org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1.isOut(java.lang.Object)"], ["org.mockito.internal.configuration.injection.scanner.MockScanner", "org.mockito.internal.configuration.injection.scanner.MockScanner(java.lang.Object, java.lang.Class<?>)"], ["void", "org.mockito.internal.configuration.injection.scanner.MockScanner.addPreparedMocks(java.util.Set<java.lang.Object>)"], ["org.mockito.internal.configuration.injection.scanner.InjectMocksScanner", "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner(java.lang.Class<?>)"], ["void", "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner.addTo(java.util.Set<java.lang.reflect.Field>)"], ["java.lang.Object", "org.mockito.internal.configuration.injection.filter.OngoingInjector$1.thenInject()"], ["org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter", "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter", "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter(org.mockito.internal.configuration.injection.filter.MockCandidateFilter)"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1.thenInject()"], ["org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter()"], ["org.mockito.internal.configuration.injection.filter.OngoingInjector", "org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter.filterCandidate(java.util.Collection<java.lang.Object>, java.lang.reflect.Field, java.util.List<java.lang.reflect.Field>, java.lang.Object)"], ["org.mockito.internal.runners.StrictRunner", "org.mockito.internal.runners.StrictRunner(org.mockito.internal.runners.RunnerImpl, java.lang.Class<?>)"], ["void", "org.mockito.internal.runners.StrictRunner.run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.internal.runners.StrictRunner.getDescription()"], ["void", "org.mockito.internal.runners.StrictRunner.filter(org.junit.runner.manipulation.Filter)"], ["org.mockito.internal.runners.RunnerFactory", "org.mockito.internal.runners.RunnerFactory()"], ["org.mockito.internal.runners.RunnerImpl", "org.mockito.internal.runners.RunnerFactory.create(java.lang.Class<?>)"], ["org.mockito.internal.runners.SilentJUnitRunner", "org.mockito.internal.runners.SilentJUnitRunner(java.lang.Class<?>)"], ["void", "org.mockito.internal.runners.SilentJUnitRunner.run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.internal.runners.SilentJUnitRunner.getDescription()"], ["void", "org.mockito.internal.runners.SilentJUnitRunner.filter(org.junit.runner.manipulation.Filter)"], ["org.mockito.internal.runners.util.FailureDetector", "org.mockito.internal.runners.util.FailureDetector()"], ["void", "org.mockito.internal.runners.util.FailureDetector.testFailure(org.junit.runner.notification.Failure)"], ["boolean", "org.mockito.internal.runners.util.FailureDetector.isSuccessful()"], ["boolean", "org.mockito.internal.runners.util.TestMethodsFinder.hasTestMethods(java.lang.Class<?>)"], ["org.mockito.internal.runners.util.FrameworkUsageValidator", "org.mockito.internal.runners.util.FrameworkUsageValidator(org.junit.runner.notification.RunNotifier)"], ["void", "org.mockito.internal.runners.util.FrameworkUsageValidator.testFailure(org.junit.runner.notification.Failure)"], ["void", "org.mockito.internal.runners.util.FrameworkUsageValidator.testFinished(org.junit.runner.Description)"], ["org.mockito.internal.runners.util.RunnerProvider", "org.mockito.internal.runners.util.RunnerProvider()"], ["org.mockito.internal.runners.RunnerImpl", "org.mockito.internal.runners.util.RunnerProvider.newInstance(java.lang.String, java.lang.Class<?>)"], ["org.mockito.internal.hamcrest.MatcherGenericTypeExtractor", "org.mockito.internal.hamcrest.MatcherGenericTypeExtractor()"], ["org.mockito.internal.hamcrest.HamcrestArgumentMatcher", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher(org.hamcrest.Matcher<T>)"], ["boolean", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.hamcrest.HamcrestArgumentMatcher.toString()"], ["org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings", "org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings(java.lang.String, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.checkedExceptionInvalid(java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotStubWithNullThrowable()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unfinishedStubbing(org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.incorrectUseOfApi()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.missingMethodInvocation()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unfinishedVerificationException(org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerify(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToVerify()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToWhenMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToWhenMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedToVerifyNoMoreInteractions()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAMockPassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.nullPassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mocksHaveToBePassedWhenCreatingInOrder()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.inOrderRequiresFamiliarMock()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidUseOfMatchers(int, java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.incorrectUseOfAdditionalMatchers(java.lang.String, int, java.util.Collection<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.stubPassedToVerify()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.reportNoSubMatchersFound(java.lang.String)"], ["java.lang.AssertionError", "org.mockito.internal.exceptions.Reporter.argumentsAreDifferent(java.lang.String, java.lang.String, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvoked(org.mockito.invocation.DescribedInvocation, java.util.List<? extends org.mockito.invocation.DescribedInvocation>)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedButNotInvokedInOrder(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.DescribedInvocation)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooManyActualInvocations(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.neverWantedButInvoked(org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooManyActualInvocationsInOrder(int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWanted(org.mockito.invocation.Invocation, java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.noMoreInteractionsWantedInOrder(org.mockito.invocation.Invocation)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotMockClass(java.lang.Class<?>, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotStubVoidMethodWithAReturnValue(java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.onlyVoidMethodsCanBeSetToDoNothing()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeOfReturnValue(java.lang.String, java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeReturnedByDefaultAnswer(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.internal.exceptions.Reporter.wantedAtMostX(int, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.misplacedArgumentMatcher(java.util.List<org.mockito.internal.matchers.LocalizedMatcher>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.smartNullPointerException(java.lang.String, org.mockito.invocation.Location)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.noArgumentValueWasCaptured()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesDoesNotAcceptNullParameters()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesAcceptsOnlyInterfaces(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesCannotContainMockedType(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.extraInterfacesRequiresAtLeastOneInterface()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithSpiedInstanceType(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotCallAbstractRealMethod()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotVerifyToString()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.moreThanOneAnnotationNotAllowed(java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.unsupportedCombinationOfAnnotations(java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInitializeForSpyAnnotation(java.lang.String, java.lang.Exception)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInitializeForInjectMocksAnnotation(java.lang.String, java.lang.String)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.atMostAndNeverShouldNotBeUsedWithTimeout()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.fieldInitialisationThrewException(java.lang.reflect.Field, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenerDoesNotAcceptNullParameters()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenersRequiresAtLeastOneListener()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invocationListenerThrewException(org.mockito.listeners.InvocationListener, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotInjectDependency(java.lang.reflect.Field, java.lang.Object, java.lang.Exception)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.mockedTypeIsInconsistentWithDelegatedInstanceType(java.lang.Class<?>, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.spyAndDelegateAreMutuallyExclusive()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidArgumentRangeAtIdentityAnswerCreationTime()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.invalidArgumentPositionRangeAtInvocationTime(org.mockito.invocation.InvocationOnMock, boolean, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.wrongTypeOfArgumentToReturn(org.mockito.invocation.InvocationOnMock, java.lang.String, java.lang.Class<?>, int)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.defaultAnswerDoesNotAcceptNullParameter()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.serializableWontWorkForObjectsThatDontImplementSerializable(java.lang.Class<?>)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.delegatedMethodHasWrongReturnType(java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.delegatedMethodDoesNotExistOnDelegate(java.lang.reflect.Method, java.lang.Object, java.lang.Object)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.usingConstructorWithFancySerializable(org.mockito.mock.SerializableMode)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.cannotCreateTimerWithNegativeDurationTime(long)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.internal.exceptions.Reporter.notAnException()"], ["org.mockito.exceptions.misusing.UnnecessaryStubbingException", "org.mockito.internal.exceptions.Reporter.formatUnncessaryStubbingException(java.lang.Class<?>, java.util.Collection<org.mockito.invocation.Invocation>)"], ["org.mockito.internal.exceptions.MockitoLimitations", "org.mockito.internal.exceptions.MockitoLimitations()"], ["org.mockito.internal.exceptions.util.ScenarioPrinter", "org.mockito.internal.exceptions.util.ScenarioPrinter()"], ["java.lang.String", "org.mockito.internal.exceptions.util.ScenarioPrinter.print(java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)"], ["org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider()"], ["org.mockito.exceptions.stacktrace.StackTraceCleaner", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider.getStackTraceCleaner(org.mockito.exceptions.stacktrace.StackTraceCleaner)"], ["org.mockito.internal.exceptions.stacktrace.StackTraceFilter", "org.mockito.internal.exceptions.stacktrace.StackTraceFilter()"], ["java.lang.StackTraceElement[]", "org.mockito.internal.exceptions.stacktrace.StackTraceFilter.filter(java.lang.StackTraceElement[], boolean)"], ["org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner()"], ["boolean", "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner.isIn(java.lang.StackTraceElement)"], ["org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter", "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter()"], ["void", "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.filter(java.lang.Throwable)"], ["org.mockito.internal.framework.DefaultMockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework()"], ["org.mockito.MockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework.addListener(org.mockito.listeners.MockitoListener)"], ["org.mockito.MockitoFramework", "org.mockito.internal.framework.DefaultMockitoFramework.removeListener(org.mockito.listeners.MockitoListener)"], ["org.mockito.internal.matchers.ArrayEquals", "org.mockito.internal.matchers.ArrayEquals(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.ArrayEquals.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.ArrayEquals.toString()"], ["java.lang.Object[]", "org.mockito.internal.matchers.ArrayEquals.createObjectArray(java.lang.Object)"], ["org.mockito.internal.matchers.GreaterThan", "org.mockito.internal.matchers.GreaterThan(T)"], ["org.mockito.internal.matchers.Matches", "org.mockito.internal.matchers.Matches(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Matches.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Matches.toString()"], ["org.mockito.internal.matchers.Same", "org.mockito.internal.matchers.Same(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Same.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Same.toString()"], ["org.mockito.internal.matchers.And", "org.mockito.internal.matchers.And(java.util.List<org.mockito.ArgumentMatcher>)"], ["boolean", "org.mockito.internal.matchers.And.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.And.toString()"], ["org.mockito.internal.matchers.LessOrEqual", "org.mockito.internal.matchers.LessOrEqual(T)"], ["org.mockito.internal.matchers.Not", "org.mockito.internal.matchers.Not(org.mockito.ArgumentMatcher)"], ["boolean", "org.mockito.internal.matchers.Not.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Not.toString()"], ["org.mockito.internal.matchers.LocalizedMatcher", "org.mockito.internal.matchers.LocalizedMatcher(org.mockito.ArgumentMatcher<?>)"], ["org.mockito.invocation.Location", "org.mockito.internal.matchers.LocalizedMatcher.getLocation()"], ["org.mockito.internal.matchers.InstanceOf", "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>)"], ["org.mockito.internal.matchers.InstanceOf", "org.mockito.internal.matchers.InstanceOf(java.lang.Class<?>, java.lang.String)"], ["boolean", "org.mockito.internal.matchers.InstanceOf.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.InstanceOf.toString()"], ["org.mockito.internal.matchers.CompareTo", "org.mockito.internal.matchers.CompareTo(T)"], ["boolean", "org.mockito.internal.matchers.CompareTo.matches(T)"], ["java.lang.String", "org.mockito.internal.matchers.CompareTo.toString()"], ["boolean", "org.mockito.internal.matchers.CompareTo.matches(java.lang.Object)"], ["org.mockito.internal.matchers.StartsWith", "org.mockito.internal.matchers.StartsWith(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.StartsWith.matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.StartsWith.toString()"], ["boolean", "org.mockito.internal.matchers.StartsWith.matches(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Any.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Any.toString()"], ["org.mockito.internal.matchers.CapturingMatcher", "org.mockito.internal.matchers.CapturingMatcher()"], ["boolean", "org.mockito.internal.matchers.CapturingMatcher.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.CapturingMatcher.toString()"], ["T", "org.mockito.internal.matchers.CapturingMatcher.getLastValue()"], ["void", "org.mockito.internal.matchers.CapturingMatcher.captureFrom(java.lang.Object)"], ["org.mockito.internal.matchers.LessThan", "org.mockito.internal.matchers.LessThan(T)"], ["org.mockito.internal.matchers.Equals", "org.mockito.internal.matchers.Equals(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Equals.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Equals.toString()"], ["boolean", "org.mockito.internal.matchers.Equals.equals(java.lang.Object)"], ["int", "org.mockito.internal.matchers.Equals.hashCode()"], ["java.lang.String", "org.mockito.internal.matchers.Equals.toStringWithType()"], ["boolean", "org.mockito.internal.matchers.Equals.typeMatches(java.lang.Object)"], ["org.mockito.internal.matchers.Find", "org.mockito.internal.matchers.Find(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Find.matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.Find.toString()"], ["boolean", "org.mockito.internal.matchers.Find.matches(java.lang.Object)"], ["org.mockito.internal.matchers.Or", "org.mockito.internal.matchers.Or(java.util.List<org.mockito.ArgumentMatcher>)"], ["boolean", "org.mockito.internal.matchers.Or.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Or.toString()"], ["org.mockito.internal.matchers.InstanceOf$VarArgAware", "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>)"], ["org.mockito.internal.matchers.InstanceOf$VarArgAware", "org.mockito.internal.matchers.InstanceOf$VarArgAware(java.lang.Class<?>, java.lang.String)"], ["org.mockito.internal.matchers.EndsWith", "org.mockito.internal.matchers.EndsWith(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.EndsWith.matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.EndsWith.toString()"], ["boolean", "org.mockito.internal.matchers.EndsWith.matches(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.Null.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.Null.toString()"], ["org.mockito.internal.matchers.CompareEqual", "org.mockito.internal.matchers.CompareEqual(T)"], ["boolean", "org.mockito.internal.matchers.NotNull.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.NotNull.toString()"], ["org.mockito.internal.matchers.Contains", "org.mockito.internal.matchers.Contains(java.lang.String)"], ["boolean", "org.mockito.internal.matchers.Contains.matches(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.Contains.toString()"], ["boolean", "org.mockito.internal.matchers.Contains.matches(java.lang.Object)"], ["org.mockito.internal.matchers.EqualsWithDelta", "org.mockito.internal.matchers.EqualsWithDelta(java.lang.Number, java.lang.Number)"], ["boolean", "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Number)"], ["java.lang.String", "org.mockito.internal.matchers.EqualsWithDelta.toString()"], ["boolean", "org.mockito.internal.matchers.EqualsWithDelta.matches(java.lang.Object)"], ["org.mockito.internal.matchers.Equality", "org.mockito.internal.matchers.Equality()"], ["boolean", "org.mockito.internal.matchers.Equality.areEqual(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.matchers.GreaterOrEqual", "org.mockito.internal.matchers.GreaterOrEqual(T)"], ["org.mockito.internal.matchers.text.FormattedText", "org.mockito.internal.matchers.text.FormattedText(java.lang.String)"], ["java.lang.String", "org.mockito.internal.matchers.text.FormattedText.getText()"], ["org.mockito.internal.matchers.text.ArrayIterator", "org.mockito.internal.matchers.text.ArrayIterator(java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.text.ArrayIterator.hasNext()"], ["java.lang.Object", "org.mockito.internal.matchers.text.ArrayIterator.next()"], ["void", "org.mockito.internal.matchers.text.ArrayIterator.remove()"], ["org.mockito.internal.matchers.text.ValuePrinter", "org.mockito.internal.matchers.text.ValuePrinter()"], ["java.lang.String", "org.mockito.internal.matchers.text.ValuePrinter.print(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.text.ValuePrinter.printValues(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)"], ["org.mockito.internal.matchers.text.MatchersPrinter", "org.mockito.internal.matchers.text.MatchersPrinter()"], ["java.lang.String", "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsLine(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"], ["java.lang.String", "org.mockito.internal.matchers.text.MatchersPrinter.getArgumentsBlock(java.util.List<org.mockito.ArgumentMatcher>, org.mockito.internal.reporting.PrintSettings)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder()"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String[])"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>)"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, java.lang.Class<?>, java.lang.String[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.appendSuper(boolean)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long, long)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int, int)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short, short)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char, char)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte, byte)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double, double)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float, float)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean, boolean)"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(java.lang.Object[], java.lang.Object[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(long[], long[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(int[], int[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(short[], short[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(char[], char[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(byte[], byte[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(double[], double[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(float[], float[])"], ["org.mockito.internal.matchers.apachecommons.EqualsBuilder", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.append(boolean[], boolean[])"], ["boolean", "org.mockito.internal.matchers.apachecommons.EqualsBuilder.isEquals()"], ["org.mockito.internal.matchers.apachecommons.ReflectionEquals", "org.mockito.internal.matchers.apachecommons.ReflectionEquals(java.lang.Object, java.lang.String...)"], ["boolean", "org.mockito.internal.matchers.apachecommons.ReflectionEquals.matches(java.lang.Object)"], ["java.lang.String", "org.mockito.internal.matchers.apachecommons.ReflectionEquals.toString()"], ["org.mockito.internal.stubbing.InvocationContainerImpl", "org.mockito.internal.stubbing.InvocationContainerImpl(org.mockito.mock.MockCreationSettings)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addConsecutiveAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(org.mockito.stubbing.Answer, boolean)"], ["org.mockito.internal.stubbing.StubbedInvocationMatcher", "org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor(org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.addAnswerForVoidMethod(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setAnswersForStubbing(java.util.List<org.mockito.stubbing.Answer<?>>)"], ["boolean", "org.mockito.internal.stubbing.InvocationContainerImpl.hasAnswersForStubbing()"], ["boolean", "org.mockito.internal.stubbing.InvocationContainerImpl.hasInvocationForPotentialStubbing()"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.setMethodForStubbing(org.mockito.internal.invocation.InvocationMatcher)"], ["java.lang.String", "org.mockito.internal.stubbing.InvocationContainerImpl.toString()"], ["void", "org.mockito.internal.stubbing.InvocationContainerImpl.clearInvocations()"], ["java.lang.Object", "org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock()"], ["org.mockito.internal.invocation.InvocationMatcher", "org.mockito.internal.stubbing.InvocationContainerImpl.getInvocationForStubbing()"], ["org.mockito.internal.stubbing.ConsecutiveStubbing", "org.mockito.internal.stubbing.ConsecutiveStubbing(org.mockito.internal.stubbing.InvocationContainerImpl)"], ["<M> M", "org.mockito.internal.stubbing.ConsecutiveStubbing.getMock()"], ["org.mockito.internal.stubbing.OngoingStubbingImpl", "org.mockito.internal.stubbing.OngoingStubbingImpl(org.mockito.internal.stubbing.InvocationContainerImpl)"], ["<M> M", "org.mockito.internal.stubbing.OngoingStubbingImpl.getMock()"], ["org.mockito.internal.stubbing.BaseStubbing", "org.mockito.internal.stubbing.BaseStubbing()"], ["org.mockito.internal.stubbing.StubbingComparator", "org.mockito.internal.stubbing.StubbingComparator()"], ["int", "org.mockito.internal.stubbing.StubbingComparator.compare(org.mockito.stubbing.Stubbing, org.mockito.stubbing.Stubbing)"], ["int", "org.mockito.internal.stubbing.StubbingComparator.compare(java.lang.Object, java.lang.Object)"], ["org.mockito.internal.stubbing.StubbedInvocationMatcher", "org.mockito.internal.stubbing.StubbedInvocationMatcher(org.mockito.internal.invocation.InvocationMatcher, org.mockito.stubbing.Answer)"], ["java.lang.Object", "org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(org.mockito.invocation.InvocationOnMock)"], ["void", "org.mockito.internal.stubbing.StubbedInvocationMatcher.addAnswer(org.mockito.stubbing.Answer)"], ["void", "org.mockito.internal.stubbing.StubbedInvocationMatcher.markStubUsed(org.mockito.invocation.DescribedInvocation)"], ["boolean", "org.mockito.internal.stubbing.StubbedInvocationMatcher.wasUsed()"], ["java.lang.String", "org.mockito.internal.stubbing.StubbedInvocationMatcher.toString()"], ["org.mockito.internal.stubbing.StubberImpl", "org.mockito.internal.stubbing.StubberImpl()"], ["<T> T", "org.mockito.internal.stubbing.StubberImpl.when(T)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doReturn(java.lang.Object, java.lang.Object...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Throwable...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doThrow(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>...)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doNothing()"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doAnswer(org.mockito.stubbing.Answer)"], ["org.mockito.stubbing.Stubber", "org.mockito.internal.stubbing.StubberImpl.doCallRealMethod()"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues", "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf", "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer", "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations", "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsMocks", "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues", "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback(org.mockito.internal.util.reflection.GenericMetadataSupport)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls()"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer(org.mockito.invocation.InvocationOnMock, org.mockito.invocation.Location)"], ["java.lang.Object", "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls$ThrowsSmartNullPointer.answer(org.mockito.invocation.InvocationOnMock)"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$5.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$8.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.ThrowsException", "org.mockito.internal.stubbing.answers.ThrowsException(java.lang.Throwable)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ThrowsException.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Throwable", "org.mockito.internal.stubbing.answers.ThrowsException.getThrowable()"], ["org.mockito.internal.stubbing.answers.ThrowsExceptionClass", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass(java.lang.Class<? extends java.lang.Throwable>)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Class<? extends java.lang.Throwable>", "org.mockito.internal.stubbing.answers.ThrowsExceptionClass.getThrowableClass()"], ["org.mockito.internal.stubbing.answers.DoesNothing", "org.mockito.internal.stubbing.answers.DoesNothing()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.DoesNothing.answer(org.mockito.invocation.InvocationOnMock)"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$3.answer(org.mockito.invocation.InvocationOnMock)"], ["<T, A> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer1<T, A>)"], ["<A> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer1<A>)"], ["<T, A, B> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer2<T, A, B>)"], ["<A, B> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer2<A, B>)"], ["<T, A, B, C> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer3<T, A, B, C>)"], ["<A, B, C> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer3<A, B, C>)"], ["<T, A, B, C, D> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer4<T, A, B, C, D>)"], ["<A, B, C, D> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer4<A, B, C, D>)"], ["<T, A, B, C, D, E> org.mockito.stubbing.Answer<T>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.Answer5<T, A, B, C, D, E>)"], ["<A, B, C, D, E> org.mockito.stubbing.Answer<java.lang.Void>", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces.toAnswer(org.mockito.stubbing.VoidAnswer5<A, B, C, D, E>)"], ["org.mockito.internal.stubbing.answers.ReturnsElementsOf", "org.mockito.internal.stubbing.answers.ReturnsElementsOf(java.util.Collection<?>)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ReturnsElementsOf.answer(org.mockito.invocation.InvocationOnMock)"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$7.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.MethodInfo", "org.mockito.internal.stubbing.answers.MethodInfo(org.mockito.invocation.Invocation)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isValidException(java.lang.Throwable)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isValidReturnType(java.lang.Class<?>)"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isVoid()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.MethodInfo.printMethodReturnType()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.MethodInfo.getMethodName()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.returnsPrimitive()"], ["java.lang.reflect.Method", "org.mockito.internal.stubbing.answers.MethodInfo.getMethod()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isDeclaredOnInterface()"], ["boolean", "org.mockito.internal.stubbing.answers.MethodInfo.isAbstract()"], ["org.mockito.internal.stubbing.answers.AnswersValidator", "org.mockito.internal.stubbing.answers.AnswersValidator()"], ["void", "org.mockito.internal.stubbing.answers.AnswersValidator.validate(org.mockito.stubbing.Answer<?>, org.mockito.invocation.Invocation)"], ["void", "org.mockito.internal.stubbing.answers.AnswersValidator.validateDefaultAnswerReturnedValue(org.mockito.invocation.Invocation, java.lang.Object)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$6.answer(org.mockito.invocation.InvocationOnMock)"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$1.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.CallsRealMethods", "org.mockito.internal.stubbing.answers.CallsRealMethods()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(org.mockito.invocation.InvocationOnMock)"], ["T", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$9.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$10.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$2.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.ReturnsArgumentAt", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt(int)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.answer(org.mockito.invocation.InvocationOnMock)"], ["int", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.wantedArgumentPosition()"], ["void", "org.mockito.internal.stubbing.answers.ReturnsArgumentAt.validateIndexWithinInvocationRange(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Void", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.ClonesArguments", "org.mockito.internal.stubbing.answers.ClonesArguments()"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.ClonesArguments.answer(org.mockito.invocation.InvocationOnMock)"], ["org.mockito.internal.stubbing.answers.Returns", "org.mockito.internal.stubbing.answers.Returns(java.lang.Object)"], ["java.lang.Object", "org.mockito.internal.stubbing.answers.Returns.answer(org.mockito.invocation.InvocationOnMock)"], ["java.lang.String", "org.mockito.internal.stubbing.answers.Returns.printReturnType()"], ["boolean", "org.mockito.internal.stubbing.answers.Returns.returnsNull()"], ["java.lang.String", "org.mockito.internal.stubbing.answers.Returns.toString()"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)"], ["org.mockito.runners.MockitoJUnitRunner", "org.mockito.runners.MockitoJUnitRunner(java.lang.Class<?>)"], ["void", "org.mockito.runners.MockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.MockitoJUnitRunner.getDescription()"], ["void", "org.mockito.runners.MockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"], ["org.mockito.runners.MockitoJUnitRunner$Strict", "org.mockito.runners.MockitoJUnitRunner$Strict(java.lang.Class<?>)"], ["org.mockito.runners.ConsoleSpammingMockitoJUnitRunner", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner(java.lang.Class<?>)"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.getDescription()"], ["void", "org.mockito.runners.ConsoleSpammingMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner$1.testStarted(org.junit.runner.Description)"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner$1.testFailure(org.junit.runner.notification.Failure)"], ["org.mockito.runners.VerboseMockitoJUnitRunner", "org.mockito.runners.VerboseMockitoJUnitRunner(java.lang.Class<?>)"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner.run(org.junit.runner.notification.RunNotifier)"], ["org.junit.runner.Description", "org.mockito.runners.VerboseMockitoJUnitRunner.getDescription()"], ["void", "org.mockito.runners.VerboseMockitoJUnitRunner.filter(org.junit.runner.manipulation.Filter)"], ["org.mockito.runners.MockitoJUnitRunner$Silent", "org.mockito.runners.MockitoJUnitRunner$Silent(java.lang.Class<?>)"], ["org.mockito.hamcrest.MockitoHamcrest", "org.mockito.hamcrest.MockitoHamcrest()"], ["<T> T", "org.mockito.hamcrest.MockitoHamcrest.argThat(org.hamcrest.Matcher<T>)"], ["char", "org.mockito.hamcrest.MockitoHamcrest.charThat(org.hamcrest.Matcher<java.lang.Character>)"], ["boolean", "org.mockito.hamcrest.MockitoHamcrest.booleanThat(org.hamcrest.Matcher<java.lang.Boolean>)"], ["byte", "org.mockito.hamcrest.MockitoHamcrest.byteThat(org.hamcrest.Matcher<java.lang.Byte>)"], ["short", "org.mockito.hamcrest.MockitoHamcrest.shortThat(org.hamcrest.Matcher<java.lang.Short>)"], ["int", "org.mockito.hamcrest.MockitoHamcrest.intThat(org.hamcrest.Matcher<java.lang.Integer>)"], ["long", "org.mockito.hamcrest.MockitoHamcrest.longThat(org.hamcrest.Matcher<java.lang.Long>)"], ["float", "org.mockito.hamcrest.MockitoHamcrest.floatThat(org.hamcrest.Matcher<java.lang.Float>)"], ["double", "org.mockito.hamcrest.MockitoHamcrest.doubleThat(org.hamcrest.Matcher<java.lang.Double>)"], ["org.mockito.exceptions.verification.VerificationInOrderFailure", "org.mockito.exceptions.verification.VerificationInOrderFailure(java.lang.String)"], ["org.mockito.exceptions.verification.WantedButNotInvoked", "org.mockito.exceptions.verification.WantedButNotInvoked(java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.WantedButNotInvoked.toString()"], ["org.mockito.exceptions.verification.TooLittleActualInvocations", "org.mockito.exceptions.verification.TooLittleActualInvocations(java.lang.String)"], ["org.mockito.exceptions.verification.NeverWantedButInvoked", "org.mockito.exceptions.verification.NeverWantedButInvoked(java.lang.String)"], ["org.mockito.exceptions.verification.NoInteractionsWanted", "org.mockito.exceptions.verification.NoInteractionsWanted(java.lang.String)"], ["org.mockito.exceptions.verification.SmartNullPointerException", "org.mockito.exceptions.verification.SmartNullPointerException(java.lang.String)"], ["org.mockito.exceptions.verification.ArgumentsAreDifferent", "org.mockito.exceptions.verification.ArgumentsAreDifferent(java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.ArgumentsAreDifferent.toString()"], ["org.mockito.exceptions.verification.TooManyActualInvocations", "org.mockito.exceptions.verification.TooManyActualInvocations(java.lang.String)"], ["org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getMessage()"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.getUnfilteredStackTrace()"], ["java.lang.String", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent.toString()"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.exceptions.base.MockitoAssertionError(java.lang.String)"], ["org.mockito.exceptions.base.MockitoAssertionError", "org.mockito.exceptions.base.MockitoAssertionError(org.mockito.exceptions.base.MockitoAssertionError, java.lang.String)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoAssertionError.getUnfilteredStackTrace()"], ["org.mockito.exceptions.base.MockitoSerializationIssue", "org.mockito.exceptions.base.MockitoSerializationIssue(java.lang.String, java.lang.Exception)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoSerializationIssue.getUnfilteredStackTrace()"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.exceptions.base.MockitoException(java.lang.String, java.lang.Throwable)"], ["org.mockito.exceptions.base.MockitoException", "org.mockito.exceptions.base.MockitoException(java.lang.String)"], ["java.lang.StackTraceElement[]", "org.mockito.exceptions.base.MockitoException.getUnfilteredStackTrace()"], ["org.mockito.exceptions.misusing.FriendlyReminderException", "org.mockito.exceptions.misusing.FriendlyReminderException(java.lang.String)"], ["org.mockito.exceptions.misusing.MockitoConfigurationException", "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String)"], ["org.mockito.exceptions.misusing.MockitoConfigurationException", "org.mockito.exceptions.misusing.MockitoConfigurationException(java.lang.String, java.lang.Exception)"], ["org.mockito.exceptions.misusing.UnfinishedStubbingException", "org.mockito.exceptions.misusing.UnfinishedStubbingException(java.lang.String)"], ["org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue", "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue(java.lang.String)"], ["org.mockito.exceptions.misusing.MissingMethodInvocationException", "org.mockito.exceptions.misusing.MissingMethodInvocationException(java.lang.String)"], ["org.mockito.exceptions.misusing.UnfinishedVerificationException", "org.mockito.exceptions.misusing.UnfinishedVerificationException(java.lang.String)"], ["org.mockito.exceptions.misusing.UnnecessaryStubbingException", "org.mockito.exceptions.misusing.UnnecessaryStubbingException(java.lang.String)"], ["org.mockito.exceptions.misusing.NotAMockException", "org.mockito.exceptions.misusing.NotAMockException(java.lang.String)"], ["org.mockito.exceptions.misusing.InvalidUseOfMatchersException", "org.mockito.exceptions.misusing.InvalidUseOfMatchersException(java.lang.String)"], ["org.mockito.exceptions.misusing.InvalidUseOfMatchersException", "org.mockito.exceptions.misusing.InvalidUseOfMatchersException()"], ["org.mockito.exceptions.misusing.NullInsteadOfMockException", "org.mockito.exceptions.misusing.NullInsteadOfMockException(java.lang.String)"], ["org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock", "org.mockito.exceptions.misusing.CannotVerifyStubOnlyMock(java.lang.String)"], ["org.mockito.exceptions.misusing.WrongTypeOfReturnValue", "org.mockito.exceptions.misusing.WrongTypeOfReturnValue(java.lang.String)"]]}