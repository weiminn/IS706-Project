{"wiremock-2.14.0.jar": [["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.PathPattern.getValuePattern()"], ["boolean", "com.github.tomakehurst.wiremock.matching.PathPattern.isSimple()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.PathPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.PathPattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern$7.apply(com.github.tomakehurst.wiremock.http.Request)"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern$7.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$3.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.EqualToJsonPattern", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern(java.lang.String, java.lang.Boolean, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.matching.EqualToJsonPattern", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern(com.fasterxml.jackson.databind.JsonNode, java.lang.Boolean, java.lang.Boolean)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getSerializedEqualToJson()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getEqualToJson()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.isIgnoreArrayOrder()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.isIgnoreExtraElements()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getExpected()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.match(java.lang.String)"], ["com.fasterxml.jackson.databind.JsonNode", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.getNodeAtPath(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(com.github.tomakehurst.wiremock.matching.ValueMatcher<com.github.tomakehurst.wiremock.http.Request>)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(com.github.tomakehurst.wiremock.http.RequestMethod, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.newRequestPattern(com.github.tomakehurst.wiremock.http.RequestMethod, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.newRequestPattern()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.forCustomMatcher(com.github.tomakehurst.wiremock.matching.ValueMatcher<com.github.tomakehurst.wiremock.http.Request>)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.forCustomMatcher(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.allRequests()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.like(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.but()"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withUrl(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withoutHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withBasicAuth(com.github.tomakehurst.wiremock.client.BasicCredentials)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.ContentPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withRequestBodyPart(com.github.tomakehurst.wiremock.matching.MultipartValuePattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withAnyRequestBodyPart(com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.withAllRequestBodyParts(com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPatternBuilder.build()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$1.match(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$1.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1.getDistance()"], ["com.github.tomakehurst.wiremock.matching.ContentPatternDeserialiser", "com.github.tomakehurst.wiremock.matching.ContentPatternDeserialiser()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.ContentPatternDeserialiser.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$1.apply(com.github.tomakehurst.wiremock.http.Request$Part)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$5.apply(com.github.tomakehurst.wiremock.matching.ContentPattern)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$5.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MatchesJsonPathPattern.getMatchesJsonPath()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.match(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.getName()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$1.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$2$2.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$2$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.AbsentPattern", "com.github.tomakehurst.wiremock.matching.AbsentPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbsentPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbsentPattern.match(java.lang.Object)"], ["org.xml.sax.InputSource", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$SkipResolvingEntitiesDocumentBuilderFactory$ResolveToEmptyString.resolveEntity(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$3.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePattern", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern(java.lang.String, com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.List<com.github.tomakehurst.wiremock.matching.ContentPattern<?>>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.isMatchAny()"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.isMatchAll()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.match(com.github.tomakehurst.wiremock.http.Request$Part)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.match(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.getName()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.getHeaders()"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.getMatchingType()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.WeightedMatchResult", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult.weight(com.github.tomakehurst.wiremock.matching.MatchResult, double)"], ["com.github.tomakehurst.wiremock.matching.WeightedMatchResult", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult.weight(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.matching.WeightedMatchResult", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.matching.WeightedMatchResult", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult(com.github.tomakehurst.wiremock.matching.MatchResult, double)"], ["boolean", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult.getDistance()"], ["double", "com.github.tomakehurst.wiremock.matching.WeightedMatchResult.getWeighting()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$4.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$4.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern$1.apply(java.lang.reflect.Constructor<?>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$2.apply(com.github.tomakehurst.wiremock.http.Request$Part)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$2.apply(java.lang.Object)"], ["org.xmlunit.diff.ComparisonResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$2.evaluate(org.xmlunit.diff.Comparison, org.xmlunit.diff.ComparisonResult)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$6.apply(com.github.tomakehurst.wiremock.matching.MultipartValuePattern)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$6.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$1.getDistance()"], ["com.github.tomakehurst.wiremock.matching.XPathPatternJsonSerializer", "com.github.tomakehurst.wiremock.matching.XPathPatternJsonSerializer()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$2.match(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension$2.match(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.RequestPattern$2$1.compare(com.github.tomakehurst.wiremock.matching.MatchResult, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["int", "com.github.tomakehurst.wiremock.matching.RequestPattern$2$1.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.matching.UrlPathPattern(com.github.tomakehurst.wiremock.matching.StringValuePattern, boolean)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPathPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern$2.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.RequestPattern$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder()"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder.matchingType(com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder.withName(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder.withBody(com.github.tomakehurst.wiremock.matching.ContentPattern<?>)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePattern", "com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder.build()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$4.apply(com.github.tomakehurst.wiremock.matching.ContentPattern)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$4.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.UrlPattern(com.github.tomakehurst.wiremock.matching.StringValuePattern, boolean)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.UrlPattern.fromOneOf(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.getName()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.isRegex()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.UrlPattern.getPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.getExpected()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.UrlPattern.toString()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.UrlPattern.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.matching.UrlPattern.isSpecified()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.UrlPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbstractRegexPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AbstractRegexPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition.getName()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition.getParameters()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.StringValuePattern(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.isPresent()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.isAbsent()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.nullSafeIsAbsent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.StringValuePattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.StringValuePattern.hashCode()"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern(java.lang.String, java.util.Map<java.lang.String, java.lang.String>, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.withXPathNamespace(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.getMatchesXPath()"], ["java.util.Map<java.lang.String, java.lang.String>", "com.github.tomakehurst.wiremock.matching.MatchesXPathPattern.getXPathNamespaces()"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.of(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.absent()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.match(com.github.tomakehurst.wiremock.http.MultiValue)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getValuePattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.hashCode()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$3.apply(com.github.tomakehurst.wiremock.matching.WeightedMatchResult)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$SkipResolvingEntitiesDocumentBuilderFactory", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$SkipResolvingEntitiesDocumentBuilderFactory()"], ["javax.xml.parsers.DocumentBuilder", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$SkipResolvingEntitiesDocumentBuilderFactory.newDocumentBuilder()"], ["com.github.tomakehurst.wiremock.matching.WeightedMatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult$1.apply(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.MatchResult$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.PathPatternJsonSerializer", "com.github.tomakehurst.wiremock.matching.PathPatternJsonSerializer()"], ["void", "com.github.tomakehurst.wiremock.matching.PathPatternJsonSerializer.serialize(T, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.matching.PathPatternJsonSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.tomakehurst.wiremock.matching.NegativeRegexPattern", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.getDoesNotMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestMatcher", "com.github.tomakehurst.wiremock.matching.RequestMatcher()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestMatcher.getExpected()"], ["int", "com.github.tomakehurst.wiremock.matching.RequestMatcher.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestMatcher.equals(java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$DecodePathFunction.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.EqualToJsonPattern$DecodePathFunction.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern(byte[])"], ["com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.match(byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.getExpected()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.getBinaryEqualTo()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.EqualToXmlPattern", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.getEqualToXml()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.getExpected()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.partialMatch(double)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.exactMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.noMatch()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.of(boolean)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregate(com.github.tomakehurst.wiremock.matching.MatchResult...)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregate(java.util.List<com.github.tomakehurst.wiremock.matching.MatchResult>)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregateWeighted(com.github.tomakehurst.wiremock.matching.WeightedMatchResult...)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MatchResult.aggregateWeighted(java.util.List<com.github.tomakehurst.wiremock.matching.WeightedMatchResult>)"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult.compareTo(com.github.tomakehurst.wiremock.matching.MatchResult)"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult.compareTo(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer.buildStringValuePattern(com.fasterxml.jackson.databind.JsonNode)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.matching.JsonPathPatternJsonSerializer", "com.github.tomakehurst.wiremock.matching.JsonPathPatternJsonSerializer()"], ["boolean", "com.github.tomakehurst.wiremock.matching.EqualToPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.EqualToPattern$1.getDistance()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$2.apply(java.lang.reflect.Constructor<?>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$2.apply(java.lang.Object)"], ["double", "com.github.tomakehurst.wiremock.matching.EagerMatchResult.getDistance()"], ["boolean", "com.github.tomakehurst.wiremock.matching.EagerMatchResult.isExactMatch()"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.UrlPattern, com.github.tomakehurst.wiremock.http.RequestMethod, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.client.BasicCredentials, java.util.List<com.github.tomakehurst.wiremock.matching.ContentPattern<?>>, com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition, java.util.List<com.github.tomakehurst.wiremock.matching.MultipartValuePattern>)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.RequestMethod, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>, com.github.tomakehurst.wiremock.client.BasicCredentials, java.util.List<com.github.tomakehurst.wiremock.matching.ContentPattern<?>>, com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition, java.util.List<com.github.tomakehurst.wiremock.matching.MultipartValuePattern>)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.ValueMatcher<com.github.tomakehurst.wiremock.http.Request>)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern(com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern.everything()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(com.github.tomakehurst.wiremock.http.Request, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.combineBasicAuthAndOtherHeaders()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.isMatchedBy(com.github.tomakehurst.wiremock.http.Request, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlPathPattern()"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.matching.RequestPattern.getUrlMatcher()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.matching.RequestPattern.getMethod()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getHeaders()"], ["com.github.tomakehurst.wiremock.client.BasicCredentials", "com.github.tomakehurst.wiremock.matching.RequestPattern.getBasicAuthCredentials()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.MultiValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getQueryParameters()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern>", "com.github.tomakehurst.wiremock.matching.RequestPattern.getCookies()"], ["com.github.tomakehurst.wiremock.matching.CustomMatcherDefinition", "com.github.tomakehurst.wiremock.matching.RequestPattern.getCustomMatcher()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.hasCustomMatcher()"], ["boolean", "com.github.tomakehurst.wiremock.matching.RequestPattern.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.matching.RequestPattern.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestPattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern$1.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.NegativeRegexPattern$1.getDistance()"], ["void", "com.github.tomakehurst.wiremock.matching.EqualToXmlPattern$1$1.comparisonPerformed(org.xmlunit.diff.Comparison, org.xmlunit.diff.ComparisonResult)"], ["com.github.tomakehurst.wiremock.matching.EqualToPattern", "com.github.tomakehurst.wiremock.matching.EqualToPattern(java.lang.String, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.matching.EqualToPattern", "com.github.tomakehurst.wiremock.matching.EqualToPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.EqualToPattern.getEqualTo()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.matching.EqualToPattern.getCaseInsensitive()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.EqualToPattern.match(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.matching.MatchResult$2.isExactMatch()"], ["double", "com.github.tomakehurst.wiremock.matching.MatchResult$2.getDistance()"], ["int", "com.github.tomakehurst.wiremock.matching.MatchResult$2.compareTo(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType[]", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType.values()"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType", "com.github.tomakehurst.wiremock.matching.MultipartValuePattern$MatchingType.valueOf(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.ContentPattern", "com.github.tomakehurst.wiremock.matching.ContentPattern(T)"], ["T", "com.github.tomakehurst.wiremock.matching.ContentPattern.getValue()"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$1.apply(java.util.Map$Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>)"], ["boolean", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonDeserializer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RegexPattern", "com.github.tomakehurst.wiremock.matching.RegexPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RegexPattern.getMatches()"], ["com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer()"], ["void", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer.serialize(com.github.tomakehurst.wiremock.matching.StringValuePattern, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.matching.StringValuePatternJsonSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$2.compare(com.github.tomakehurst.wiremock.matching.MatchResult, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["int", "com.github.tomakehurst.wiremock.matching.MultiValuePattern$2.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.ContainsPattern", "com.github.tomakehurst.wiremock.matching.ContainsPattern(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.ContainsPattern.getContains()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.ContainsPattern.match(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.ContainsPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.AnythingPattern", "com.github.tomakehurst.wiremock.matching.AnythingPattern(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.AnythingPattern", "com.github.tomakehurst.wiremock.matching.AnythingPattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.AnythingPattern.getAnything()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AnythingPattern.match(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.AnythingPattern.toString()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.AnythingPattern.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.matching.RequestMatcherExtension", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.match(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.getName()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.matching.RequestMatcherExtension.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter()"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.init(javax.servlet.FilterConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter.destroy()"], ["com.github.tomakehurst.wiremock.servlet.BodyChunker", "com.github.tomakehurst.wiremock.servlet.BodyChunker()"], ["byte[][]", "com.github.tomakehurst.wiremock.servlet.BodyChunker.chunkBody(byte[], int)"], ["com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener()"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener.contextInitialized(javax.servlet.ServletContextEvent)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockWebContextListener.contextDestroyed(javax.servlet.ServletContextEvent)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet$ServletHttpResponder$1.run()"], ["com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver()"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver.save(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver.save(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver.remove(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedMappingsSaver.removeAll()"], ["com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse(javax.servlet.http.HttpServletResponse, java.lang.String, javax.servlet.http.HttpServletRequest)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter$StatusAndRedirectExposingHttpServletResponse.sendRedirect(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter(javax.servlet.http.HttpServletRequest)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter(javax.servlet.http.HttpServletRequest, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getAbsoluteUrl()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getMethod()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getClientIp()"], ["byte[]", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBodyAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getBodyAsBase64()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.header(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.contentTypeHeader()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.containsHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getHeaders()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getCookies()"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.queryParameter(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.isBrowserProxyRequest()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.isMultipart()"], ["com.github.tomakehurst.wiremock.http.Request$Part", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.getPart(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter.toString()"], ["com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet()"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet.init(javax.servlet.ServletConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet.applyResponse(com.github.tomakehurst.wiremock.http.Response, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["com.github.tomakehurst.wiremock.servlet.WarConfiguration", "com.github.tomakehurst.wiremock.servlet.WarConfiguration(javax.servlet.ServletContext)"], ["int", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.portNumber()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.httpsSettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.jettySettings()"], ["int", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.containerThreads()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.browserProxyingEnabled()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.proxyVia()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.filesRoot()"], ["com.github.tomakehurst.wiremock.standalone.MappingsLoader", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.mappingsLoader()"], ["com.github.tomakehurst.wiremock.core.MappingsSaver", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.mappingsSaver()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.notifier()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.requestJournalDisabled()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.bindAddress()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.shouldPreserveHostHeader()"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.proxyHostHeader()"], ["com.github.tomakehurst.wiremock.http.HttpServerFactory", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.httpServerFactory()"], ["com.github.tomakehurst.wiremock.http.ThreadPoolFactory", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.threadPoolFactory()"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.extensionsOfType(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.networkTrafficListener()"], ["com.github.tomakehurst.wiremock.security.Authenticator", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.getAdminAuthenticator()"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.getHttpsRequiredForAdminApi()"], ["com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.getNotMatchedRenderer()"], ["com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings", "com.github.tomakehurst.wiremock.servlet.WarConfiguration.getAsynchronousResponseSettings()"], ["com.github.tomakehurst.wiremock.servlet.NoFaultInjector", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.connectionResetByPeer()"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.servlet.NoFaultInjector.randomDataAndCloseConnection()"], ["com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory", "com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory()"], ["com.github.tomakehurst.wiremock.core.FaultInjector", "com.github.tomakehurst.wiremock.servlet.NoFaultInjectorFactory.buildFaultInjector(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$3.apply(com.github.tomakehurst.wiremock.http.Request$Part)"], ["boolean", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$1.apply(java.util.Collection<java.lang.String>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter()"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.init(javax.servlet.FilterConfig)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter.destroy()"], ["com.github.tomakehurst.wiremock.servlet.NotImplementedContainer", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer()"], ["int", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer.port()"], ["void", "com.github.tomakehurst.wiremock.servlet.NotImplementedContainer.shutdown()"], ["com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet$ServletHttpResponder", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet$ServletHttpResponder(com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet$ServletHttpResponder.respond(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.Response)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter(javax.servlet.http.Part)"], ["com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter.from(javax.servlet.http.Part)"], ["java.lang.String", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter.getName()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter.getHeaders()"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletMultipartAdapter.getBody()"], ["com.github.tomakehurst.wiremock.http.Request$Part", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$2.apply(javax.servlet.http.Part)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.servlet.WireMockHttpServletRequestAdapter$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, java.lang.Integer, com.github.tomakehurst.wiremock.common.FileSource, boolean, com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, com.github.tomakehurst.wiremock.common.FileSource, boolean, com.github.tomakehurst.wiremock.common.ProxySettings)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, com.github.tomakehurst.wiremock.common.FileSource, boolean)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.WireMockServer", "com.github.tomakehurst.wiremock.WireMockServer()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.loadMappingsUsing(com.github.tomakehurst.wiremock.standalone.MappingsLoader)"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.WireMockServer.getGlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.addMockServiceRequestListener(com.github.tomakehurst.wiremock.http.RequestListener)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.enableRecordMappings(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.common.FileSource)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.stop()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.start()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.shutdown()"], ["int", "com.github.tomakehurst.wiremock.WireMockServer.port()"], ["int", "com.github.tomakehurst.wiremock.WireMockServer.httpsPort()"], ["java.lang.String", "com.github.tomakehurst.wiremock.WireMockServer.url(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.WireMockServer.isRunning()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.WireMockServer.givenThat(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.WireMockServer.stubFor(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.editStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.removeStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.removeStub(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.WireMockServer.getSingleStubMapping(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.verify(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.verify(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.setGlobalFixedDelay(int)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.WireMockServer.listAllStubMappings()"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.WireMockServer.getStubMapping(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetAll()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetToDefaultMappings()"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.WireMockServer.getServeEvents()"], ["com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult", "com.github.tomakehurst.wiremock.WireMockServer.getServedStub(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.resetMappings()"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.WireMockServer.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.WireMockServer.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.WireMockServer.findUnmatchedRequests()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.admin.model.GetScenariosResult", "com.github.tomakehurst.wiremock.WireMockServer.getAllScenarios()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.WireMockServer.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.startRecording(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.WireMockServer.stopRecording()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.WireMockServer.getRecordingStatus()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.WireMockServer.snapshotRecord()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.WireMockServer.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.WireMockServer.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["com.github.tomakehurst.wiremock.core.Options", "com.github.tomakehurst.wiremock.WireMockServer.getOptions()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer.shutdownServer()"], ["com.github.tomakehurst.wiremock.core.ConfigurationException", "com.github.tomakehurst.wiremock.core.ConfigurationException(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockApp", "com.github.tomakehurst.wiremock.core.WireMockApp(com.github.tomakehurst.wiremock.core.Options, com.github.tomakehurst.wiremock.core.Container)"], ["com.github.tomakehurst.wiremock.core.WireMockApp", "com.github.tomakehurst.wiremock.core.WireMockApp(boolean, com.github.tomakehurst.wiremock.standalone.MappingsLoader, com.github.tomakehurst.wiremock.core.MappingsSaver, boolean, com.google.common.base.Optional<java.lang.Integer>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.core.Container)"], ["com.github.tomakehurst.wiremock.http.AdminRequestHandler", "com.github.tomakehurst.wiremock.core.WireMockApp.buildAdminRequestHandler()"], ["com.github.tomakehurst.wiremock.http.StubRequestHandler", "com.github.tomakehurst.wiremock.core.WireMockApp.buildStubRequestHandler()"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.core.WireMockApp.getGlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.loadMappingsUsing(com.github.tomakehurst.wiremock.standalone.MappingsLoader)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.core.WireMockApp.serveStubFor(com.github.tomakehurst.wiremock.http.Request)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.listAllStubMappings()"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.core.WireMockApp.getStubMapping(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetAll()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetToDefaultMappings()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.resetMappings()"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.getServeEvents()"], ["com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult", "com.github.tomakehurst.wiremock.core.WireMockApp.getServedStub(java.util.UUID)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.core.WireMockApp.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.admin.model.GetScenariosResult", "com.github.tomakehurst.wiremock.core.WireMockApp.getAllScenarios()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.core.WireMockApp.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["int", "com.github.tomakehurst.wiremock.core.WireMockApp.port()"], ["com.github.tomakehurst.wiremock.core.Options", "com.github.tomakehurst.wiremock.core.WireMockApp.getOptions()"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.shutdownServer()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.core.WireMockApp.snapshotRecord()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.core.WireMockApp.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.core.WireMockApp.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.startRecording(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["void", "com.github.tomakehurst.wiremock.core.WireMockApp.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.core.WireMockApp.stopRecording()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.core.WireMockApp.getRecordingStatus()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockApp$1.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockApp$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.options()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.port(int)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.dynamicPort()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpsPort(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.dynamicHttpsPort()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.containerThreads(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyAcceptors(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyAcceptQueueSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyHeaderBufferSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettyStopTimeout(java.lang.Long)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.keystoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.trustStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.needClientAuth(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.enableBrowserProxying(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia(com.github.tomakehurst.wiremock.common.ProxySettings)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.withRootDirectory(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.usingFilesUnderDirectory(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.usingFilesUnderClasspath(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.fileSource(com.github.tomakehurst.wiremock.common.FileSource)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.mappingSource(com.github.tomakehurst.wiremock.standalone.MappingsSource)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.notifier(com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.bindAddress(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.disableRequestJournal()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.maxRequestJournalEntries(com.google.common.base.Optional<java.lang.Integer>)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.maxRequestJournalEntries(int)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.recordRequestHeadersForMatching(java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.preserveHostHeader(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyHostHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(java.lang.String...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(com.github.tomakehurst.wiremock.extension.Extension...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensions(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>...)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpServerFactory(com.github.tomakehurst.wiremock.http.HttpServerFactory)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.threadPoolFactory(com.github.tomakehurst.wiremock.http.ThreadPoolFactory)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.networkTrafficListener(com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.adminAuthenticator(com.github.tomakehurst.wiremock.security.Authenticator)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.basicAdminAuthenticator(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.requireHttpsForAdminApi()"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.notMatchedRenderer(com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.asynchronousResponseEnabled(boolean)"], ["com.github.tomakehurst.wiremock.core.WireMockConfiguration", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.asynchronousResponseThreads(int)"], ["int", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.portNumber()"], ["int", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.containerThreads()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpsSettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.jettySettings()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.browserProxyingEnabled()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyVia()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.filesRoot()"], ["com.github.tomakehurst.wiremock.standalone.MappingsLoader", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.mappingsLoader()"], ["com.github.tomakehurst.wiremock.core.MappingsSaver", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.mappingsSaver()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.notifier()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.requestJournalDisabled()"], ["java.lang.String", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.bindAddress()"], ["com.github.tomakehurst.wiremock.http.HttpServerFactory", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.httpServerFactory()"], ["com.github.tomakehurst.wiremock.http.ThreadPoolFactory", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.threadPoolFactory()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.shouldPreserveHostHeader()"], ["java.lang.String", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.proxyHostHeader()"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.extensionsOfType(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.networkTrafficListener()"], ["com.github.tomakehurst.wiremock.security.Authenticator", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.getAdminAuthenticator()"], ["boolean", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.getHttpsRequiredForAdminApi()"], ["com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.getNotMatchedRenderer()"], ["com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings", "com.github.tomakehurst.wiremock.core.WireMockConfiguration.getAsynchronousResponseSettings()"], ["com.github.tomakehurst.wiremock.extension.ExtensionLoader", "com.github.tomakehurst.wiremock.extension.ExtensionLoader()"], ["<T> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.loadExtension(java.lang.String...)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.load(java.lang.String...)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.asMap(java.lang.Iterable<com.github.tomakehurst.wiremock.extension.Extension>)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.load(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>...)"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> com.google.common.base.Predicate<java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader.valueAssignableFrom(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.extension.Parameters.getInt(java.lang.String)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.extension.Parameters.getBoolean(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.Parameters.getString(java.lang.String)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.empty()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.from(java.util.Map<java.lang.String, java.lang.Object>)"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.one(java.lang.String, java.lang.Object)"], ["<T> T", "com.github.tomakehurst.wiremock.extension.Parameters.as(java.lang.Class<T>)"], ["<T> com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.extension.Parameters.of(T)"], ["com.github.tomakehurst.wiremock.extension.AbstractTransformer", "com.github.tomakehurst.wiremock.extension.AbstractTransformer()"], ["boolean", "com.github.tomakehurst.wiremock.extension.AbstractTransformer.applyGlobally()"], ["java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$3.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$3.apply(java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$1.apply(com.github.tomakehurst.wiremock.extension.Extension)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer", "com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer.transform(com.github.tomakehurst.wiremock.http.Request, java.lang.Object, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.extension.ResponseTransformer", "com.github.tomakehurst.wiremock.extension.ResponseTransformer()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ResponseTransformer.transform(com.github.tomakehurst.wiremock.http.Request, java.lang.Object, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.extension.PostServeAction", "com.github.tomakehurst.wiremock.extension.PostServeAction()"], ["void", "com.github.tomakehurst.wiremock.extension.PostServeAction.doAction(com.github.tomakehurst.wiremock.stubbing.ServeEvent, com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.extension.Parameters)"], ["void", "com.github.tomakehurst.wiremock.extension.PostServeAction.doGlobalAction(com.github.tomakehurst.wiremock.stubbing.ServeEvent, com.github.tomakehurst.wiremock.core.Admin)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer$1.apply(com.github.tomakehurst.wiremock.http.HttpHeader)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.UrlPath", "com.github.tomakehurst.wiremock.extension.responsetemplating.UrlPath(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.responsetemplating.UrlPath.toString()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel(java.lang.String, com.github.tomakehurst.wiremock.extension.responsetemplating.UrlPath, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>, java.lang.String)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.from(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getUrl()"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.UrlPath", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getPath()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getQuery()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getHeaders()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>>", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getCookies()"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel.getBody()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer(boolean)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer(boolean, java.lang.String, com.github.jknack.handlebars.Helper)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer(boolean, java.util.Map<java.lang.String, com.github.jknack.handlebars.Helper>)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer(boolean, com.github.jknack.handlebars.Handlebars, java.util.Map<java.lang.String, com.github.jknack.handlebars.Helper>)"], ["boolean", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer.applyGlobally()"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer.getName()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer.transform(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.ResponseDefinition, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer.transform(com.github.tomakehurst.wiremock.http.Request, java.lang.Object, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsHelper", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsHelper()"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsXPathHelper", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsXPathHelper()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsXPathHelper.apply(java.lang.String, com.github.jknack.handlebars.Options)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsXPathHelper.apply(java.lang.Object, com.github.jknack.handlebars.Options)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers$1.apply(java.lang.Object, com.github.jknack.handlebars.Options)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsSoapHelper", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsSoapHelper()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers$3.apply(java.lang.Object, com.github.jknack.handlebars.Options)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsJsonPathHelper", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsJsonPathHelper()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsJsonPathHelper.apply(java.lang.String, com.github.jknack.handlebars.Options)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.HandlebarsJsonPathHelper.apply(java.lang.Object, com.github.jknack.handlebars.Options)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers$2.apply(java.lang.Object, com.github.jknack.handlebars.Options)"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers[]", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers.values()"], ["com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers", "com.github.tomakehurst.wiremock.extension.responsetemplating.helpers.WiremockHelpers.valueOf(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.RequestTemplateModel$2.apply(java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer$1$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer$1$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.Extension", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$2.apply(java.lang.Class<? extends com.github.tomakehurst.wiremock.extension.Extension>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.extension.StubMappingTransformer", "com.github.tomakehurst.wiremock.extension.StubMappingTransformer()"], ["boolean", "com.github.tomakehurst.wiremock.extension.StubMappingTransformer.applyGlobally()"], ["boolean", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$4.apply(java.util.Map$Entry<java.lang.String, com.github.tomakehurst.wiremock.extension.Extension>)"], ["boolean", "com.github.tomakehurst.wiremock.extension.ExtensionLoader$4.apply(java.lang.Object)"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner$1.loadMappingsInto(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["com.github.tomakehurst.wiremock.standalone.RemoteMappingsLoader", "com.github.tomakehurst.wiremock.standalone.RemoteMappingsLoader(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.client.WireMock)"], ["void", "com.github.tomakehurst.wiremock.standalone.RemoteMappingsLoader.load()"], ["com.github.tomakehurst.wiremock.standalone.WireMockServerRunner", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner()"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.run(java.lang.String...)"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.stop()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.isRunning()"], ["int", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.port()"], ["void", "com.github.tomakehurst.wiremock.standalone.WireMockServerRunner.main(java.lang.String...)"], ["com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource(com.github.tomakehurst.wiremock.common.FileSource)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.save(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.save(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.remove(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.removeAll()"], ["void", "com.github.tomakehurst.wiremock.standalone.JsonFileMappingsSource.loadMappingsInto(com.github.tomakehurst.wiremock.stubbing.StubMappings)"], ["com.github.tomakehurst.wiremock.standalone.CommandLineOptions", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions(java.lang.String...)"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.verboseLoggingEnabled()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.recordMappingsEnabled()"], ["com.github.tomakehurst.wiremock.http.HttpServerFactory", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.httpServerFactory()"], ["com.github.tomakehurst.wiremock.http.ThreadPoolFactory", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.threadPoolFactory()"], ["int", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.portNumber()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.bindAddress()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.httpsSettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.jettySettings()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.help()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.helpText()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.specifiesProxyUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyUrl()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.shouldPreserveHostHeader()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyHostHeader()"], ["<T extends com.github.tomakehurst.wiremock.extension.Extension> java.util.Map<java.lang.String, T>", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.extensionsOfType(java.lang.Class<T>)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.networkTrafficListener()"], ["com.github.tomakehurst.wiremock.security.Authenticator", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.getAdminAuthenticator()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.getHttpsRequiredForAdminApi()"], ["com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.getNotMatchedRenderer()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.browserProxyingEnabled()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.proxyVia()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.filesRoot()"], ["com.github.tomakehurst.wiremock.standalone.MappingsLoader", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.mappingsLoader()"], ["com.github.tomakehurst.wiremock.core.MappingsSaver", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.mappingsSaver()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.notifier()"], ["boolean", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.requestJournalDisabled()"], ["int", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.containerThreads()"], ["java.lang.String", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.toString()"], ["com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings", "com.github.tomakehurst.wiremock.standalone.CommandLineOptions.getAsynchronousResponseSettings()"], ["com.github.tomakehurst.wiremock.security.NoClientAuthenticator", "com.github.tomakehurst.wiremock.security.NoClientAuthenticator()"], ["com.github.tomakehurst.wiremock.security.NoClientAuthenticator", "com.github.tomakehurst.wiremock.security.NoClientAuthenticator.noClientAuthenticator()"], ["java.lang.String", "com.github.tomakehurst.wiremock.security.BasicAuthenticator$1.apply(com.github.tomakehurst.wiremock.client.BasicCredentials)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.security.BasicAuthenticator$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.security.ClientBasicAuthenticator", "com.github.tomakehurst.wiremock.security.ClientBasicAuthenticator(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.security.NoAuthenticator", "com.github.tomakehurst.wiremock.security.NoAuthenticator()"], ["boolean", "com.github.tomakehurst.wiremock.security.NoAuthenticator.authenticate(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.security.BasicAuthenticator", "com.github.tomakehurst.wiremock.security.BasicAuthenticator(java.util.List<com.github.tomakehurst.wiremock.client.BasicCredentials>)"], ["com.github.tomakehurst.wiremock.security.BasicAuthenticator", "com.github.tomakehurst.wiremock.security.BasicAuthenticator(com.github.tomakehurst.wiremock.client.BasicCredentials...)"], ["com.github.tomakehurst.wiremock.security.BasicAuthenticator", "com.github.tomakehurst.wiremock.security.BasicAuthenticator(java.lang.String, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.security.BasicAuthenticator.authenticate(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.security.NotAuthorisedException", "com.github.tomakehurst.wiremock.security.NotAuthorisedException()"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockClassRule", "com.github.tomakehurst.wiremock.junit.WireMockClassRule()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockClassRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockClassRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["com.github.tomakehurst.wiremock.junit.WireMockStaticRule", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockStaticRule", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule()"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule.stopServer()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockRule$1.evaluate()"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockClassRule$1.evaluate()"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(com.github.tomakehurst.wiremock.core.Options, boolean)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(int)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule(int, java.lang.Integer)"], ["com.github.tomakehurst.wiremock.junit.WireMockRule", "com.github.tomakehurst.wiremock.junit.WireMockRule()"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)"], ["org.junit.runners.model.Statement", "com.github.tomakehurst.wiremock.junit.WireMockRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)"], ["void", "com.github.tomakehurst.wiremock.junit.WireMockStaticRule$1.evaluate()"], ["boolean", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor$2.apply(java.util.Map$Entry<com.github.tomakehurst.wiremock.matching.RequestPattern, java.util.Collection<com.github.tomakehurst.wiremock.stubbing.StubMapping>>)"], ["boolean", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.forTarget(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.onlyRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.onlyRequestIds(java.util.List<java.util.UUID>)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.extractTextBodiesOver(long)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.extractBinaryBodiesOver(long)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.makeStubsPersistent(boolean)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.ignoreRepeatRequests()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.transformers(java.lang.String...)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.transformers(java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.transformerParameters(com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.captureHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.captureHeader(java.lang.String, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.chooseBodyMatchTypeAutomatically()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.chooseBodyMatchTypeAutomatically(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.matchRequestBodyWithEqualToJson()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.matchRequestBodyWithEqualToJson(java.lang.Boolean, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.matchRequestBodyWithEqualToXml()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.matchRequestBodyWithEqualTo()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.matchRequestBodyWithEqualTo(java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.recording.RecordSpec", "com.github.tomakehurst.wiremock.recording.RecordSpecBuilder.build()"], ["com.github.tomakehurst.wiremock.recording.Recorder", "com.github.tomakehurst.wiremock.recording.Recorder(com.github.tomakehurst.wiremock.core.Admin)"], ["synchronized", "com.github.tomakehurst.wiremock.recording.Recorder.void startRecording(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["synchronized", "com.github.tomakehurst.wiremock.recording.Recorder.com.github.tomakehurst.wiremock.recording.SnapshotRecordResult stopRecording()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.Recorder.takeSnapshot(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServeEvent>, com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingPostProcessor", "com.github.tomakehurst.wiremock.recording.Recorder.getStubMappingPostProcessor(com.github.tomakehurst.wiremock.core.Options, com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["com.github.tomakehurst.wiremock.recording.RecordingStatus", "com.github.tomakehurst.wiremock.recording.Recorder.getStatus()"], ["com.github.tomakehurst.wiremock.recording.ScenarioProcessor", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor()"], ["void", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor.putRepeatedRequestsInScenarios(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["java.util.UUID", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$1.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.Recorder$State", "com.github.tomakehurst.wiremock.recording.Recorder$State(com.github.tomakehurst.wiremock.recording.RecordingStatus, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.recording.RecordSpec, java.util.UUID, java.util.UUID)"], ["com.github.tomakehurst.wiremock.recording.Recorder$State", "com.github.tomakehurst.wiremock.recording.Recorder$State.initial()"], ["com.github.tomakehurst.wiremock.recording.Recorder$State", "com.github.tomakehurst.wiremock.recording.Recorder$State.start(java.util.UUID, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["com.github.tomakehurst.wiremock.recording.Recorder$State", "com.github.tomakehurst.wiremock.recording.Recorder$State.stop(java.util.UUID)"], ["com.github.tomakehurst.wiremock.recording.RecordingStatus", "com.github.tomakehurst.wiremock.recording.Recorder$State.getStatus()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.recording.Recorder$State.getProxyMapping()"], ["com.github.tomakehurst.wiremock.recording.RecordSpec", "com.github.tomakehurst.wiremock.recording.Recorder$State.getSpec()"], ["java.util.UUID", "com.github.tomakehurst.wiremock.recording.Recorder$State.getStartingServeEventId()"], ["java.util.UUID", "com.github.tomakehurst.wiremock.recording.Recorder$State.getFinishingServeEventId()"], ["boolean", "com.github.tomakehurst.wiremock.recording.Recorder$1.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.recording.Recorder$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter[]", "com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter.values()"], ["com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter", "com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter.valueOf(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter", "com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter.fromString(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$Ids", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$Ids(java.util.List<java.util.UUID>)"], ["com.github.tomakehurst.wiremock.recording.RequestBodyEqualToXmlPatternFactory", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToXmlPatternFactory()"], ["com.github.tomakehurst.wiremock.matching.EqualToXmlPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToXmlPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.matching.ContentPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToXmlPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult.full(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult.idsFromMappings(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult.ids(java.util.List<java.util.UUID>)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult.empty()"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor$1.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.ScenarioProcessor$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingPostProcessor", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingPostProcessor(boolean, com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner, com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher, com.github.tomakehurst.wiremock.recording.SnapshotStubMappingBodyExtractor)"], ["com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer()"], ["com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["long", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer.parseJsonNode(com.fasterxml.jackson.databind.JsonNode)"], ["long", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer.parseFilesize(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcherDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.recording.RequestPatternTransformer", "com.github.tomakehurst.wiremock.recording.RequestPatternTransformer(java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec>, com.github.tomakehurst.wiremock.recording.RequestBodyPatternFactory)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.recording.RequestPatternTransformer.apply(com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.RequestPatternTransformer.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.RequestBodyAutomaticPatternFactory", "com.github.tomakehurst.wiremock.recording.RequestBodyAutomaticPatternFactory(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyAutomaticPatternFactory.isIgnoreArrayOrder()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyAutomaticPatternFactory.isIgnoreExtraElements()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyAutomaticPatternFactory.isCaseInsensitive()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatus[]", "com.github.tomakehurst.wiremock.recording.RecordingStatus.values()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatus", "com.github.tomakehurst.wiremock.recording.RecordingStatus.valueOf(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingBodyExtractor", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingBodyExtractor(com.github.tomakehurst.wiremock.common.FileSource)"], ["void", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingBodyExtractor.extractInPlace(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters", "com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters()"], ["com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters", "com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters(com.github.tomakehurst.wiremock.matching.RequestPattern, java.util.List<java.util.UUID>)"], ["boolean", "com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResultDeserialiser.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResultDeserialiser.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter$2.format(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer", "com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer.apply(com.github.tomakehurst.wiremock.http.LoggedResponse)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator(com.github.tomakehurst.wiremock.recording.RequestPatternTransformer, com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator(java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec>, com.github.tomakehurst.wiremock.recording.RequestBodyPatternFactory)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingGenerator.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory(java.lang.Boolean, java.lang.Boolean)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory.isIgnoreArrayOrder()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory.isIgnoreExtraElements()"], ["com.github.tomakehurst.wiremock.matching.EqualToJsonPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.matching.ContentPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToJsonPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.recording.RecordSpec", "com.github.tomakehurst.wiremock.recording.RecordSpec(java.lang.String, com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec>, com.github.tomakehurst.wiremock.recording.RequestBodyPatternFactory, com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher, com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter, java.lang.Boolean, java.lang.Boolean, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.recording.RecordSpec", "com.github.tomakehurst.wiremock.recording.RecordSpec.forBaseUrl(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.recording.RecordSpec.getTargetBaseUrl()"], ["com.github.tomakehurst.wiremock.recording.ProxiedServeEventFilters", "com.github.tomakehurst.wiremock.recording.RecordSpec.getFilters()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec>", "com.github.tomakehurst.wiremock.recording.RecordSpec.getCaptureHeaders()"], ["com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter", "com.github.tomakehurst.wiremock.recording.RecordSpec.getOutputFormat()"], ["boolean", "com.github.tomakehurst.wiremock.recording.RecordSpec.shouldPersist()"], ["boolean", "com.github.tomakehurst.wiremock.recording.RecordSpec.shouldRecordRepeatsAsScenarios()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RecordSpec.getRepeatsAsScenarios()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.recording.RecordSpec.getTransformerParameters()"], ["com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher", "com.github.tomakehurst.wiremock.recording.RecordSpec.getExtractBodyCriteria()"], ["com.github.tomakehurst.wiremock.recording.RequestBodyPatternFactory", "com.github.tomakehurst.wiremock.recording.RecordSpec.getRequestBodyPatternFactory()"], ["com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher(long, long)"], ["java.lang.String", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.getTextSizeThreshold()"], ["java.lang.String", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.getBinarySizeThreshold()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.match(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["boolean", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.hashCode()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.recording.ResponseDefinitionBodyMatcher.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.NotRecordingException", "com.github.tomakehurst.wiremock.recording.NotRecordingException()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.recording.RecordingStatusResult(java.lang.String)"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.recording.RecordingStatusResult(com.github.tomakehurst.wiremock.recording.RecordingStatus)"], ["com.github.tomakehurst.wiremock.recording.RecordingStatus", "com.github.tomakehurst.wiremock.recording.RecordingStatusResult.getStatus()"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner(java.lang.Iterable<com.github.tomakehurst.wiremock.extension.StubMappingTransformer>)"], ["com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner(java.lang.Iterable<com.github.tomakehurst.wiremock.extension.StubMappingTransformer>, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters, com.github.tomakehurst.wiremock.common.FileSource)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.recording.SnapshotStubMappingTransformerRunner.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$Full", "com.github.tomakehurst.wiremock.recording.SnapshotRecordResult$Full(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.recording.RequestBodyEqualToPatternFactory", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToPatternFactory(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToPatternFactory.isCaseInsensitive()"], ["com.github.tomakehurst.wiremock.matching.EqualToPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.matching.ContentPattern", "com.github.tomakehurst.wiremock.recording.RequestBodyEqualToPatternFactory.forRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.recording.SnapshotOutputFormatter$1.format(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["boolean", "com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer$1.apply(com.github.tomakehurst.wiremock.http.HttpHeader)"], ["boolean", "com.github.tomakehurst.wiremock.recording.LoggedResponseDefinitionTransformer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec", "com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec(java.lang.Boolean)"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.recording.CaptureHeadersSpec.getCaseInsensitive()"], ["com.github.tomakehurst.wiremock.admin.tasks.GlobalSettingsUpdateTask", "com.github.tomakehurst.wiremock.admin.tasks.GlobalSettingsUpdateTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GlobalSettingsUpdateTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.EditStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.EditStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.EditStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestPatternTask", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestPatternTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestPatternTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.FindUnmatchedRequestsTask", "com.github.tomakehurst.wiremock.admin.tasks.FindUnmatchedRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.FindUnmatchedRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.DeleteStubFileTask", "com.github.tomakehurst.wiremock.admin.tasks.DeleteStubFileTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.DeleteStubFileTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.OldResetRequestsTask", "com.github.tomakehurst.wiremock.admin.tasks.OldResetRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.OldResetRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.GetStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.CreateStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.CreateStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.CreateStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.ResetStubMappingsTask", "com.github.tomakehurst.wiremock.admin.tasks.ResetStubMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ResetStubMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.RootRedirectTask", "com.github.tomakehurst.wiremock.admin.tasks.RootRedirectTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.RootRedirectTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetRequestCountTask", "com.github.tomakehurst.wiremock.admin.tasks.GetRequestCountTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetRequestCountTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.AbstractGetDocTask", "com.github.tomakehurst.wiremock.admin.tasks.AbstractGetDocTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.AbstractGetDocTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.OldCreateStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.OldCreateStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.OldCreateStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetSwaggerSpecTask", "com.github.tomakehurst.wiremock.admin.tasks.GetSwaggerSpecTask()"], ["com.github.tomakehurst.wiremock.admin.tasks.ResetRequestsTask", "com.github.tomakehurst.wiremock.admin.tasks.ResetRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ResetRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.NotFoundAdminTask", "com.github.tomakehurst.wiremock.admin.tasks.NotFoundAdminTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.NotFoundAdminTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.SnapshotTask", "com.github.tomakehurst.wiremock.admin.tasks.SnapshotTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.SnapshotTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.ResetScenariosTask", "com.github.tomakehurst.wiremock.admin.tasks.ResetScenariosTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ResetScenariosTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetRamlSpecTask", "com.github.tomakehurst.wiremock.admin.tasks.GetRamlSpecTask()"], ["com.github.tomakehurst.wiremock.admin.tasks.GetAllRequestsTask", "com.github.tomakehurst.wiremock.admin.tasks.GetAllRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetAllRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetAllStubMappingsTask", "com.github.tomakehurst.wiremock.admin.tasks.GetAllStubMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetAllStubMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.ResetTask", "com.github.tomakehurst.wiremock.admin.tasks.ResetTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ResetTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetServedStubTask", "com.github.tomakehurst.wiremock.admin.tasks.GetServedStubTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetServedStubTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForUnmatchedTask", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForUnmatchedTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForUnmatchedTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.ShutdownServerTask", "com.github.tomakehurst.wiremock.admin.tasks.ShutdownServerTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ShutdownServerTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetRecordingsIndexTask", "com.github.tomakehurst.wiremock.admin.tasks.GetRecordingsIndexTask()"], ["com.github.tomakehurst.wiremock.admin.tasks.GetDocIndexTask", "com.github.tomakehurst.wiremock.admin.tasks.GetDocIndexTask()"], ["com.github.tomakehurst.wiremock.admin.tasks.RootTask", "com.github.tomakehurst.wiremock.admin.tasks.RootTask()"], ["com.github.tomakehurst.wiremock.admin.tasks.RemoveStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.RemoveStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.RemoveStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.SaveMappingsTask", "com.github.tomakehurst.wiremock.admin.tasks.SaveMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.SaveMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.GetAllStubFilesTask", "com.github.tomakehurst.wiremock.admin.tasks.GetAllStubFilesTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.GetAllStubFilesTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.OldEditStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.OldEditStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.OldEditStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.FindRequestsTask", "com.github.tomakehurst.wiremock.admin.tasks.FindRequestsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.FindRequestsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.EditStubFileTask", "com.github.tomakehurst.wiremock.admin.tasks.EditStubFileTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.EditStubFileTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.OldRemoveStubMappingTask", "com.github.tomakehurst.wiremock.admin.tasks.OldRemoveStubMappingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.OldRemoveStubMappingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.ResetToDefaultMappingsTask", "com.github.tomakehurst.wiremock.admin.tasks.ResetToDefaultMappingsTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.ResetToDefaultMappingsTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestTask", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.tasks.FindNearMissesForRequestTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.GetAllScenariosTask", "com.github.tomakehurst.wiremock.admin.GetAllScenariosTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.GetAllScenariosTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.GetRecordingStatusTask", "com.github.tomakehurst.wiremock.admin.GetRecordingStatusTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.GetRecordingStatusTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.RequestSpec(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.RequestSpec.requestSpec(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.admin.RequestSpec.method()"], ["com.github.tomakehurst.wiremock.admin.AdminUriTemplate", "com.github.tomakehurst.wiremock.admin.RequestSpec.getUriTemplate()"], ["java.lang.String", "com.github.tomakehurst.wiremock.admin.RequestSpec.path()"], ["java.lang.String", "com.github.tomakehurst.wiremock.admin.RequestSpec.path(com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["boolean", "com.github.tomakehurst.wiremock.admin.RequestSpec.matches(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.admin.RequestSpec.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.admin.RequestSpec.hashCode()"], ["com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator", "com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator(java.util.List<T>, java.lang.Integer, java.lang.Integer)"], ["<T> com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator<T>", "com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator.fromRequest(java.util.List<T>, com.github.tomakehurst.wiremock.http.Request)"], ["int", "com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator.getTotal()"], ["<T> com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator<T>", "com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator.none(java.util.List<T>)"], ["com.github.tomakehurst.wiremock.admin.Conversions", "com.github.tomakehurst.wiremock.admin.Conversions()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.admin.Conversions.toInt(com.github.tomakehurst.wiremock.http.QueryParameter)"], ["java.util.Date", "com.github.tomakehurst.wiremock.admin.Conversions.toDate(com.github.tomakehurst.wiremock.http.QueryParameter)"], ["com.github.tomakehurst.wiremock.admin.AdminRoutes", "com.github.tomakehurst.wiremock.admin.AdminRoutes.defaults()"], ["com.github.tomakehurst.wiremock.admin.AdminRoutes", "com.github.tomakehurst.wiremock.admin.AdminRoutes.defaultsPlus(java.lang.Iterable<com.github.tomakehurst.wiremock.extension.AdminApiExtension>, com.github.tomakehurst.wiremock.admin.AdminTask)"], ["com.github.tomakehurst.wiremock.admin.AdminTask", "com.github.tomakehurst.wiremock.admin.AdminRoutes.taskFor(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.AdminRoutes.requestSpecForTask(java.lang.Class<? extends com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["com.github.tomakehurst.wiremock.admin.AdminRoutes$RouteBuilder", "com.github.tomakehurst.wiremock.admin.AdminRoutes$RouteBuilder()"], ["void", "com.github.tomakehurst.wiremock.admin.AdminRoutes$RouteBuilder.add(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String, java.lang.Class<? extends com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["void", "com.github.tomakehurst.wiremock.admin.AdminRoutes$RouteBuilder.add(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String, com.github.tomakehurst.wiremock.admin.AdminTask)"], ["void", "com.github.tomakehurst.wiremock.admin.AdminRoutes$RouteBuilder.add(com.github.tomakehurst.wiremock.admin.RequestSpec, com.github.tomakehurst.wiremock.admin.AdminTask)"], ["com.github.tomakehurst.wiremock.admin.StartRecordingTask", "com.github.tomakehurst.wiremock.admin.StartRecordingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.StartRecordingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminRoutes$2.apply(java.util.Map$Entry<com.github.tomakehurst.wiremock.admin.RequestSpec, com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminRoutes$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.admin.AdminUriTemplate", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate.matches(java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.model.PathParams", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate.parse(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate.render(com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.admin.AdminUriTemplate.hashCode()"], ["com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult", "com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult", "com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult.fromOptional(com.google.common.base.Optional<com.github.tomakehurst.wiremock.stubbing.ServeEvent>)"], ["com.github.tomakehurst.wiremock.admin.model.PathParams", "com.github.tomakehurst.wiremock.admin.model.PathParams()"], ["com.github.tomakehurst.wiremock.admin.model.PathParams", "com.github.tomakehurst.wiremock.admin.model.PathParams.empty()"], ["com.github.tomakehurst.wiremock.admin.model.PathParams", "com.github.tomakehurst.wiremock.admin.model.PathParams.add(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.model.PathParams", "com.github.tomakehurst.wiremock.admin.model.PathParams.single(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult.fromOptional(com.google.common.base.Optional<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.StubMapping>, com.github.tomakehurst.wiremock.admin.model.PaginatedResult$Meta)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult(com.github.tomakehurst.wiremock.admin.LimitAndOffsetPaginator<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["com.github.tomakehurst.wiremock.admin.model.PaginatedResult$Meta", "com.github.tomakehurst.wiremock.admin.model.PaginatedResult.getMeta()"], ["com.github.tomakehurst.wiremock.admin.model.PaginatedResult$Meta", "com.github.tomakehurst.wiremock.admin.model.PaginatedResult$Meta(int)"], ["com.github.tomakehurst.wiremock.admin.model.GetScenariosResult", "com.github.tomakehurst.wiremock.admin.model.GetScenariosResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.Scenario>)"], ["boolean", "com.github.tomakehurst.wiremock.admin.model.RequestJournalDependentResult.isRequestJournalDisabled()"], ["com.github.tomakehurst.wiremock.admin.model.SingleItemResult", "com.github.tomakehurst.wiremock.admin.model.SingleItemResult(T)"], ["T", "com.github.tomakehurst.wiremock.admin.model.SingleItemResult.getItem()"], ["boolean", "com.github.tomakehurst.wiremock.admin.model.SingleItemResult.isPresent()"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServeEvent>, com.github.tomakehurst.wiremock.admin.model.PaginatedResult$Meta, boolean)"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult(com.github.tomakehurst.wiremock.admin.Paginator<com.github.tomakehurst.wiremock.stubbing.ServeEvent>, boolean)"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult.requestJournalEnabled(com.github.tomakehurst.wiremock.admin.Paginator<com.github.tomakehurst.wiremock.stubbing.ServeEvent>)"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult.requestJournalDisabled(com.github.tomakehurst.wiremock.admin.Paginator<com.github.tomakehurst.wiremock.stubbing.ServeEvent>)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminRoutes$4.apply(java.util.Map$Entry<com.github.tomakehurst.wiremock.admin.RequestSpec, com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["boolean", "com.github.tomakehurst.wiremock.admin.AdminRoutes$4.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.admin.RequestSpec", "com.github.tomakehurst.wiremock.admin.AdminRoutes$3.apply(java.util.Map$Entry<com.github.tomakehurst.wiremock.admin.RequestSpec, com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.admin.AdminRoutes$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.admin.AdminTask", "com.github.tomakehurst.wiremock.admin.AdminRoutes$1.apply(java.util.Map$Entry<com.github.tomakehurst.wiremock.admin.RequestSpec, com.github.tomakehurst.wiremock.admin.AdminTask>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.admin.AdminRoutes$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator$1.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.admin.StopRecordingTask", "com.github.tomakehurst.wiremock.admin.StopRecordingTask()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.admin.StopRecordingTask.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.admin.NotFoundException", "com.github.tomakehurst.wiremock.admin.NotFoundException(java.lang.String)"], ["com.github.tomakehurst.wiremock.admin.NotFoundException", "com.github.tomakehurst.wiremock.admin.NotFoundException(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator", "com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServeEvent>, java.lang.Integer, java.util.Date)"], ["com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator", "com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator.fromRequest(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServeEvent>, com.github.tomakehurst.wiremock.http.Request)"], ["int", "com.github.tomakehurst.wiremock.admin.LimitAndSinceDatePaginator.getTotal()"], ["void", "com.github.tomakehurst.wiremock.WireMockServer$1.run()"], ["com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory", "com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory()"], ["void", "com.github.tomakehurst.wiremock.jetty9.CustomizedSslContextFactory.customize(javax.net.ssl.SSLEngine)"], ["com.github.tomakehurst.wiremock.jetty9.NotFoundHandler", "com.github.tomakehurst.wiremock.jetty9.NotFoundHandler()"], ["void", "com.github.tomakehurst.wiremock.jetty9.NotFoundHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory()"], ["com.github.tomakehurst.wiremock.http.HttpServer", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServerFactory.buildHttpServer(com.github.tomakehurst.wiremock.core.Options, com.github.tomakehurst.wiremock.http.AdminRequestHandler, com.github.tomakehurst.wiremock.http.StubRequestHandler)"], ["com.github.tomakehurst.wiremock.http.Request$Part", "com.github.tomakehurst.wiremock.jetty9.MultipartParser$1.apply(javax.servlet.http.Part)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.jetty9.MultipartParser$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.connectionResetByPeer()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector.randomDataAndCloseConnection()"], ["com.github.tomakehurst.wiremock.jetty9.JettyHttpServer", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer(com.github.tomakehurst.wiremock.core.Options, com.github.tomakehurst.wiremock.http.AdminRequestHandler, com.github.tomakehurst.wiremock.http.StubRequestHandler)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.start()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.stop()"], ["boolean", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.isRunning()"], ["int", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.port()"], ["int", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.httpsPort()"], ["com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory()"], ["com.github.tomakehurst.wiremock.core.FaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjectorFactory.buildFaultInjector(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["com.github.tomakehurst.wiremock.jetty9.QueuedThreadPoolFactory", "com.github.tomakehurst.wiremock.jetty9.QueuedThreadPoolFactory()"], ["org.eclipse.jetty.util.thread.ThreadPool", "com.github.tomakehurst.wiremock.jetty9.QueuedThreadPoolFactory.buildThreadPool(com.github.tomakehurst.wiremock.core.Options)"], ["com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector(javax.servlet.http.HttpServletResponse)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.connectionResetByPeer()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.emptyResponseAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.malformedResponseChunk()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyFaultInjector.randomDataAndCloseConnection()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector$1.succeeded()"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpsFaultInjector$1.failed(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.jetty9.JettyUtils", "com.github.tomakehurst.wiremock.jetty9.JettyUtils()"], ["org.eclipse.jetty.server.Response", "com.github.tomakehurst.wiremock.jetty9.JettyUtils.unwrapResponse(javax.servlet.http.HttpServletResponse)"], ["java.net.Socket", "com.github.tomakehurst.wiremock.jetty9.JettyUtils.getTlsSocket(org.eclipse.jetty.server.Response)"], ["java.net.URI", "com.github.tomakehurst.wiremock.jetty9.JettyUtils.getUri(org.eclipse.jetty.server.Request)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer$NetworkTrafficListenerAdapter.opened(java.net.Socket)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer$NetworkTrafficListenerAdapter.incoming(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer$NetworkTrafficListenerAdapter.outgoing(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.jetty9.JettyHttpServer$NetworkTrafficListenerAdapter.closed(java.net.Socket)"], ["com.github.tomakehurst.wiremock.jetty9.MultipartParser", "com.github.tomakehurst.wiremock.jetty9.MultipartParser()"], ["com.github.tomakehurst.wiremock.verification.JournalBasedResult", "com.github.tomakehurst.wiremock.verification.JournalBasedResult(boolean)"], ["boolean", "com.github.tomakehurst.wiremock.verification.JournalBasedResult.requestJournalIsDisabled()"], ["void", "com.github.tomakehurst.wiremock.verification.JournalBasedResult.assertRequestJournalEnabled()"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$2.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest$1.apply(com.github.tomakehurst.wiremock.http.Request$Part)"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.verification.FindNearMissesResult(java.util.List<com.github.tomakehurst.wiremock.verification.NearMiss>)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.LoggedRequest.createFrom(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.LoggedRequest(java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>, boolean, java.util.Date, java.lang.String, java.lang.String, java.util.Collection<com.github.tomakehurst.wiremock.http.Request$Part>)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getAbsoluteUrl()"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getMethod()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getClientIp()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.verification.LoggedRequest.header(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.verification.LoggedRequest.contentTypeHeader()"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest.containsHeader(java.lang.String)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.Cookie>", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getCookies()"], ["byte[]", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBodyAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getBodyAsBase64()"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.verification.LoggedRequest.queryParameter(java.lang.String)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.QueryParameter>", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getQueryParams()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getHeaders()"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest.isBrowserProxyRequest()"], ["java.util.Date", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getLoggedDate()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getLoggedDateString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.LoggedRequest.toString()"], ["boolean", "com.github.tomakehurst.wiremock.verification.LoggedRequest.isMultipart()"], ["com.github.tomakehurst.wiremock.http.Request$Part", "com.github.tomakehurst.wiremock.verification.LoggedRequest.getPart(java.lang.String)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$3.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult(java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>, boolean)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult.withRequestJournalDisabled()"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.verification.FindRequestsResult.withRequests(java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>)"], ["int", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$1.compare(com.github.tomakehurst.wiremock.verification.NearMiss, com.github.tomakehurst.wiremock.verification.NearMiss)"], ["int", "com.github.tomakehurst.wiremock.verification.NearMissCalculator$1.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult(java.lang.Integer, boolean)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.from(java.lang.String)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.withCount(int)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.verification.VerificationResult.withRequestJournalDisabled()"], ["int", "com.github.tomakehurst.wiremock.verification.VerificationResult.getCount()"], ["com.github.tomakehurst.wiremock.verification.diff.Diff", "com.github.tomakehurst.wiremock.verification.diff.Diff(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.verification.diff.Diff", "com.github.tomakehurst.wiremock.verification.diff.Diff(com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.http.Request)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.Diff.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.Diff.getStubMappingName()"], ["boolean", "com.github.tomakehurst.wiremock.verification.diff.Diff.hasCustomMatcher()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer$1.apply(com.github.tomakehurst.wiremock.verification.diff.DiffLine<?>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.diff.SpacerLine", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine.getActual()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine.getMessage()"], ["boolean", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine.isForNonMatch()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine.getPrintedPatternValue()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SpacerLine.getRequestAttribute()"], ["com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter(java.lang.String)"], ["com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter.getMessage()"], ["boolean", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter.isForNonMatch()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter.getPrintedPatternValue()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter.getActual()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.SectionDelimiter.getRequestAttribute()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer$2.apply(com.github.tomakehurst.wiremock.verification.diff.DiffLine<?>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer.render(com.github.tomakehurst.wiremock.verification.diff.Diff)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.JUnitStyleDiffRenderer.junitStyleDiffMessage(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.diff.DiffLine", "com.github.tomakehurst.wiremock.verification.diff.DiffLine(java.lang.String, com.github.tomakehurst.wiremock.matching.NamedValueMatcher<V>, V, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.DiffLine.getRequestAttribute()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.diff.DiffLine.getActual()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.DiffLine.getPrintedPatternValue()"], ["boolean", "com.github.tomakehurst.wiremock.verification.diff.DiffLine.isForNonMatch()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.DiffLine.getMessage()"], ["com.github.tomakehurst.wiremock.verification.diff.MissingMultipart", "com.github.tomakehurst.wiremock.verification.diff.MissingMultipart()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.MissingMultipart.getName()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.verification.diff.MissingMultipart.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.verification.diff.MissingMultipart.getHeaders()"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.verification.diff.MissingMultipart.getBody()"], ["com.github.tomakehurst.wiremock.verification.diff.PlainTextDiffRenderer", "com.github.tomakehurst.wiremock.verification.diff.PlainTextDiffRenderer()"], ["com.github.tomakehurst.wiremock.verification.diff.PlainTextDiffRenderer", "com.github.tomakehurst.wiremock.verification.diff.PlainTextDiffRenderer(int)"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.diff.PlainTextDiffRenderer.render(com.github.tomakehurst.wiremock.verification.diff.Diff)"], ["com.github.tomakehurst.wiremock.verification.NearMissCalculator", "com.github.tomakehurst.wiremock.verification.NearMissCalculator(com.github.tomakehurst.wiremock.stubbing.StubMappings, com.github.tomakehurst.wiremock.verification.RequestJournal)"], ["com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal(com.google.common.base.Optional<java.lang.Integer>)"], ["int", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.requestReceived(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["void", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal.reset()"], ["com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer", "com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.verification.notmatched.NotMatchedRenderer.execute(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.admin.model.PathParams)"], ["com.github.tomakehurst.wiremock.verification.notmatched.PlainTextStubNotMatchedRenderer", "com.github.tomakehurst.wiremock.verification.notmatched.PlainTextStubNotMatchedRenderer()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.verification.notmatched.PlainTextStubNotMatchedRenderer.render(com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$3.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.FindServeEventsResult", "com.github.tomakehurst.wiremock.verification.FindServeEventsResult(java.util.List<com.github.tomakehurst.wiremock.stubbing.ServeEvent>)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$1.apply(com.github.tomakehurst.wiremock.http.Request)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.DisabledRequestJournal", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal()"], ["int", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.reset()"], ["void", "com.github.tomakehurst.wiremock.verification.DisabledRequestJournal.requestReceived(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$2.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.verification.InMemoryRequestJournal$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.NearMiss", "com.github.tomakehurst.wiremock.verification.NearMiss(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.matching.MatchResult)"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.verification.NearMiss.getRequest()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.verification.NearMiss.getStubMapping()"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.verification.NearMiss.getRequestPattern()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.verification.NearMiss.getMatchResult()"], ["int", "com.github.tomakehurst.wiremock.verification.NearMiss.compareTo(com.github.tomakehurst.wiremock.verification.NearMiss)"], ["com.github.tomakehurst.wiremock.verification.diff.Diff", "com.github.tomakehurst.wiremock.verification.NearMiss.getDiff()"], ["java.lang.String", "com.github.tomakehurst.wiremock.verification.NearMiss.toString()"], ["int", "com.github.tomakehurst.wiremock.verification.NearMiss.compareTo(java.lang.Object)"], ["com.github.tomakehurst.wiremock.verification.RequestJournalDisabledException", "com.github.tomakehurst.wiremock.verification.RequestJournalDisabledException()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder()"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.port(int)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.keyStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStorePath(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStorePassword(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.trustStoreType(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings$Builder", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.needClientAuth(boolean)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings$Builder.build()"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$1.apply(java.util.zip.ZipEntry)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.InvalidInputException", "com.github.tomakehurst.wiremock.common.InvalidInputException(com.github.tomakehurst.wiremock.common.Errors)"], ["com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.generate(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.generate(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$3.apply(java.util.zip.ZipEntry)"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.Strings", "com.github.tomakehurst.wiremock.common.Strings()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Strings.stringFromBytes(byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Strings.stringFromBytes(byte[], java.nio.charset.Charset)"], ["byte[]", "com.github.tomakehurst.wiremock.common.Strings.bytesFromString(java.lang.String)"], ["byte[]", "com.github.tomakehurst.wiremock.common.Strings.bytesFromString(java.lang.String, java.nio.charset.Charset)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Strings.wrapIfLongestLineExceedsLimit(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.aJettySettings()"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withAcceptors(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withAcceptQueueSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withRequestHeaderSize(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.common.JettySettings$Builder", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.withStopTimeout(java.lang.Long)"], ["com.github.tomakehurst.wiremock.common.JettySettings", "com.github.tomakehurst.wiremock.common.JettySettings$Builder.build()"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.common.ProxySettings(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.common.ProxySettings", "com.github.tomakehurst.wiremock.common.ProxySettings.fromString(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ProxySettings.host()"], ["int", "com.github.tomakehurst.wiremock.common.ProxySettings.port()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ProxySettings.toString()"], ["com.github.tomakehurst.wiremock.common.SilentErrorHandler", "com.github.tomakehurst.wiremock.common.SilentErrorHandler()"], ["void", "com.github.tomakehurst.wiremock.common.SilentErrorHandler.warning(org.xml.sax.SAXParseException)"], ["void", "com.github.tomakehurst.wiremock.common.SilentErrorHandler.error(org.xml.sax.SAXParseException)"], ["void", "com.github.tomakehurst.wiremock.common.SilentErrorHandler.fatalError(org.xml.sax.SAXParseException)"], ["com.github.tomakehurst.wiremock.common.ClasspathFileSource", "com.github.tomakehurst.wiremock.common.ClasspathFileSource(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getBinaryFileNamed(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getTextFileNamed(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.createIfNecessary()"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.child(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getPath()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.getUri()"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.writeTextFile(java.lang.String, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.writeBinaryFile(java.lang.String, byte[])"], ["boolean", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.exists()"], ["void", "com.github.tomakehurst.wiremock.common.ClasspathFileSource.deleteFile(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.ConsoleNotifier", "com.github.tomakehurst.wiremock.common.ConsoleNotifier(boolean)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.ConsoleNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.ListOrStringDeserialiser", "com.github.tomakehurst.wiremock.common.ListOrStringDeserialiser()"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.ListOrStringDeserialiser.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["com.github.tomakehurst.wiremock.common.Encoding", "com.github.tomakehurst.wiremock.common.Encoding()"], ["byte[]", "com.github.tomakehurst.wiremock.common.Encoding.decodeBase64(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Encoding.encodeBase64(byte[])"], ["com.github.tomakehurst.wiremock.common.ServletContextFileSource", "com.github.tomakehurst.wiremock.common.ServletContextFileSource(javax.servlet.ServletContext, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.ServletContextFileSource.child(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.TextFile(java.net.URI)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.TextFile.readContentsAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.TextFile.getPath()"], ["com.github.tomakehurst.wiremock.common.JsonException", "com.github.tomakehurst.wiremock.common.JsonException.fromJackson(com.fasterxml.jackson.databind.JsonMappingException)"], ["com.github.tomakehurst.wiremock.common.Gzip", "com.github.tomakehurst.wiremock.common.Gzip()"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.unGzip(byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Gzip.unGzipToString(byte[])"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.gzip(java.lang.String)"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.gzip(java.lang.String, java.nio.charset.Charset)"], ["byte[]", "com.github.tomakehurst.wiremock.common.Gzip.gzip(byte[])"], ["boolean", "com.github.tomakehurst.wiremock.common.Gzip.isGzipped(byte[])"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.DatatypeConverterBase64Encoder.encode(byte[])"], ["byte[]", "com.github.tomakehurst.wiremock.common.DatatypeConverterBase64Encoder.decode(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Json$PublicView", "com.github.tomakehurst.wiremock.common.Json$PublicView()"], ["com.github.tomakehurst.wiremock.common.ContentTypes", "com.github.tomakehurst.wiremock.common.ContentTypes()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ContentTypes.determineFileExtension(java.lang.String, com.github.tomakehurst.wiremock.http.ContentTypeHeader, byte[])"], ["com.github.tomakehurst.wiremock.common.TextType", "com.github.tomakehurst.wiremock.common.ContentTypes.determineTextType(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ContentTypes.determineTextFileExtension(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ContentTypes.determineIsTextFromExtension(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ContentTypes.determineIsTextFromMimeType(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ContentTypes.determineIsText(java.lang.String, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource$2.accept(java.io.File)"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier$NullNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$2.apply(java.util.zip.ZipEntry)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.Errors$Error", "com.github.tomakehurst.wiremock.common.Errors$Error(java.lang.Integer, com.github.tomakehurst.wiremock.common.Errors$Error$Source, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors$Error", "com.github.tomakehurst.wiremock.common.Errors$Error(int, com.github.tomakehurst.wiremock.common.Errors$Error$Source, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors$Error", "com.github.tomakehurst.wiremock.common.Errors$Error(int, java.lang.String)"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.common.Errors$Error.getCode()"], ["com.github.tomakehurst.wiremock.common.Errors$Error$Source", "com.github.tomakehurst.wiremock.common.Errors$Error.getSource()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Errors$Error.getTitle()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Errors$Error.getDetail()"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.common.Urls$1.transformEntry(java.lang.String, java.util.Collection<java.lang.String>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.Urls$1.transformEntry(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.FatalStartupException", "com.github.tomakehurst.wiremock.common.FatalStartupException(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.AbstractFileSource", "com.github.tomakehurst.wiremock.common.AbstractFileSource(java.io.File)"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getBinaryFileNamed(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getTextFileNamed(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.createIfNecessary()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getPath()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.AbstractFileSource.getUri()"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.writeTextFile(java.lang.String, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.writeBinaryFile(java.lang.String, byte[])"], ["void", "com.github.tomakehurst.wiremock.common.AbstractFileSource.deleteFile(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource.exists()"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$4.apply(java.io.File)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.ClasspathFileSource$4.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource$3.apply(com.github.tomakehurst.wiremock.common.BinaryFile)"], ["boolean", "com.github.tomakehurst.wiremock.common.AbstractFileSource$3.apply(java.lang.Object)"], ["<T> T", "com.github.tomakehurst.wiremock.common.Json.read(java.lang.String, java.lang.Class<T>)"], ["<T> java.lang.String", "com.github.tomakehurst.wiremock.common.Json.write(T)"], ["<T> java.lang.String", "com.github.tomakehurst.wiremock.common.Json.writePrivate(T)"], ["<T> java.lang.String", "com.github.tomakehurst.wiremock.common.Json.write(T, java.lang.Class<?>)"], ["com.fasterxml.jackson.databind.ObjectMapper", "com.github.tomakehurst.wiremock.common.Json.getObjectMapper()"], ["byte[]", "com.github.tomakehurst.wiremock.common.Json.toByteArray(java.lang.Object)"], ["com.fasterxml.jackson.databind.JsonNode", "com.github.tomakehurst.wiremock.common.Json.node(java.lang.String)"], ["int", "com.github.tomakehurst.wiremock.common.Json.maxDeepSize(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode)"], ["int", "com.github.tomakehurst.wiremock.common.Json.deepSize(com.fasterxml.jackson.databind.JsonNode)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Json.prettyPrint(java.lang.String)"], ["<T> T", "com.github.tomakehurst.wiremock.common.Json.mapToObject(java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>)"], ["<T> java.util.Map<java.lang.String, java.lang.Object>", "com.github.tomakehurst.wiremock.common.Json.objectToMap(T)"], ["com.github.tomakehurst.wiremock.common.TextFile", "com.github.tomakehurst.wiremock.common.AbstractFileSource$1.apply(java.io.File)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.AbstractFileSource$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.Dates", "com.github.tomakehurst.wiremock.common.Dates()"], ["java.util.Date", "com.github.tomakehurst.wiremock.common.Dates.parse(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Dates.format(java.util.Date)"], ["com.github.tomakehurst.wiremock.common.Exceptions", "com.github.tomakehurst.wiremock.common.Exceptions()"], ["<T> T", "com.github.tomakehurst.wiremock.common.Exceptions.throwUnchecked(java.lang.Throwable, java.lang.Class<T>)"], ["void", "com.github.tomakehurst.wiremock.common.Exceptions.throwUnchecked(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.KeyStoreSettings", "com.github.tomakehurst.wiremock.common.KeyStoreSettings(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.path()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.password()"], ["java.security.KeyStore", "com.github.tomakehurst.wiremock.common.KeyStoreSettings.loadStore()"], ["com.github.tomakehurst.wiremock.common.LocalNotifier", "com.github.tomakehurst.wiremock.common.LocalNotifier()"], ["com.github.tomakehurst.wiremock.common.Notifier", "com.github.tomakehurst.wiremock.common.LocalNotifier.notifier()"], ["void", "com.github.tomakehurst.wiremock.common.LocalNotifier.set(com.github.tomakehurst.wiremock.common.Notifier)"], ["com.github.tomakehurst.wiremock.common.Slf4jNotifier", "com.github.tomakehurst.wiremock.common.Slf4jNotifier(boolean)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.info(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.error(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.common.Slf4jNotifier.error(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.VeryShortIdGenerator", "com.github.tomakehurst.wiremock.common.VeryShortIdGenerator()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.VeryShortIdGenerator.generate()"], ["com.github.tomakehurst.wiremock.common.ListOrSingle", "com.github.tomakehurst.wiremock.common.ListOrSingle(java.util.Collection<? extends T>)"], ["com.github.tomakehurst.wiremock.common.ListOrSingle", "com.github.tomakehurst.wiremock.common.ListOrSingle(T...)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.ListOrSingle.toString()"], ["<T> com.github.tomakehurst.wiremock.common.ListOrSingle<T>", "com.github.tomakehurst.wiremock.common.ListOrSingle.of(T...)"], ["<T> com.github.tomakehurst.wiremock.common.ListOrSingle<T>", "com.github.tomakehurst.wiremock.common.ListOrSingle.of(java.util.List<T>)"], ["T", "com.github.tomakehurst.wiremock.common.ListOrSingle.first()"], ["boolean", "com.github.tomakehurst.wiremock.common.ListOrSingle.isSingle()"], ["com.github.tomakehurst.wiremock.common.SingleRootFileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource(java.io.File)"], ["com.github.tomakehurst.wiremock.common.SingleRootFileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.FileSource", "com.github.tomakehurst.wiremock.common.SingleRootFileSource.child(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SingleRootFileSource.toString()"], ["com.github.tomakehurst.wiremock.common.Errors$Error$Source", "com.github.tomakehurst.wiremock.common.Errors$Error$Source(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Errors$Error$Source.getPointer()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.JsonException$1.apply(com.fasterxml.jackson.databind.JsonMappingException$Reference)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.common.JsonException$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.ClientError", "com.github.tomakehurst.wiremock.common.ClientError(com.github.tomakehurst.wiremock.common.Errors)"], ["com.github.tomakehurst.wiremock.common.ClientError", "com.github.tomakehurst.wiremock.common.ClientError.fromErrors(com.github.tomakehurst.wiremock.common.Errors)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.ClientError.getErrors()"], ["com.github.tomakehurst.wiremock.common.Xml", "com.github.tomakehurst.wiremock.common.Xml()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Xml.prettyPrint(java.lang.String)"], ["org.w3c.dom.Document", "com.github.tomakehurst.wiremock.common.Xml.read(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Xml.toStringValue(org.w3c.dom.Node)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Xml.render(org.w3c.dom.Node)"], ["com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings", "com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings(boolean, int)"], ["boolean", "com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings.isEnabled()"], ["int", "com.github.tomakehurst.wiremock.common.AsynchronousResponseSettings.getThreads()"], ["com.github.tomakehurst.wiremock.common.GuavaBase64Encoder", "com.github.tomakehurst.wiremock.common.GuavaBase64Encoder()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.GuavaBase64Encoder.encode(byte[])"], ["byte[]", "com.github.tomakehurst.wiremock.common.GuavaBase64Encoder.decode(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ContentTypes$1.apply(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.common.ContentTypes$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.common.ListOrSingleSerialiser", "com.github.tomakehurst.wiremock.common.ListOrSingleSerialiser()"], ["void", "com.github.tomakehurst.wiremock.common.ListOrSingleSerialiser.serialize(com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.Object>, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.common.ListOrSingleSerialiser.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.tomakehurst.wiremock.common.HttpClientUtils", "com.github.tomakehurst.wiremock.common.HttpClientUtils()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpClientUtils.getEntityAsStringAndCloseStream(org.apache.http.HttpResponse)"], ["byte[]", "com.github.tomakehurst.wiremock.common.HttpClientUtils.getEntityAsByteArrayAndCloseStream(org.apache.http.HttpResponse)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors(java.util.List<com.github.tomakehurst.wiremock.common.Errors$Error>)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors.single(java.lang.Integer, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors.single(java.lang.Integer, java.lang.String, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors.single(java.lang.Integer, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors.notRecording()"], ["com.github.tomakehurst.wiremock.common.Errors", "com.github.tomakehurst.wiremock.common.Errors.validation(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Errors$Error", "com.github.tomakehurst.wiremock.common.Errors.first()"], ["com.github.tomakehurst.wiremock.common.BinaryFile", "com.github.tomakehurst.wiremock.common.BinaryFile(java.net.URI)"], ["byte[]", "com.github.tomakehurst.wiremock.common.BinaryFile.readContents()"], ["java.net.URI", "com.github.tomakehurst.wiremock.common.BinaryFile.getUri()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.BinaryFile.name()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.BinaryFile.toString()"], ["com.github.tomakehurst.wiremock.common.SafeNames", "com.github.tomakehurst.wiremock.common.SafeNames()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SafeNames.makeSafeFileName(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SafeNames.makeSafeFileName(com.github.tomakehurst.wiremock.stubbing.StubMapping, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SafeNames.makeSafeNameFromUrl(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.SafeNames.makeSafeName(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.Json$PrivateView", "com.github.tomakehurst.wiremock.common.Json$PrivateView()"], ["com.github.tomakehurst.wiremock.common.TextType[]", "com.github.tomakehurst.wiremock.common.TextType.values()"], ["com.github.tomakehurst.wiremock.common.TextType", "com.github.tomakehurst.wiremock.common.TextType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.JettySettings.toString()"], ["com.github.tomakehurst.wiremock.common.Urls", "com.github.tomakehurst.wiremock.common.Urls()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.QueryParameter>", "com.github.tomakehurst.wiremock.common.Urls.splitQuery(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Urls.urlToPathParts(java.net.URI)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.http.QueryParameter>", "com.github.tomakehurst.wiremock.common.Urls.splitQuery(java.net.URI)"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.Urls.decode(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.String)"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.String, java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.AdminException", "com.github.tomakehurst.wiremock.common.AdminException(java.lang.Throwable)"], ["com.github.tomakehurst.wiremock.common.HttpsSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["int", "com.github.tomakehurst.wiremock.common.HttpsSettings.port()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStorePath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStorePassword()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.keyStoreType()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.enabled()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStorePath()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStorePassword()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStoreType()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.needClientAuth()"], ["boolean", "com.github.tomakehurst.wiremock.common.HttpsSettings.hasTrustStore()"], ["com.github.tomakehurst.wiremock.common.KeyStoreSettings", "com.github.tomakehurst.wiremock.common.HttpsSettings.trustStore()"], ["java.lang.String", "com.github.tomakehurst.wiremock.common.HttpsSettings.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$2.apply(com.fasterxml.jackson.databind.JsonNode)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.from(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey.value()"], ["void", "com.github.tomakehurst.wiremock.http.Fault$4.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["com.github.tomakehurst.wiremock.http.LogNormal", "com.github.tomakehurst.wiremock.http.LogNormal(double, double)"], ["long", "com.github.tomakehurst.wiremock.http.LogNormal.sampleMillis()"], ["com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["<T> java.lang.Iterable<T>", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.all(java.util.Iterator<T>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)"], ["void", "com.github.tomakehurst.wiremock.http.Fault$2.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer()"], ["void", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer.serialize(com.github.tomakehurst.wiremock.http.HttpHeaders, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["void", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)"], ["com.github.tomakehurst.wiremock.http.LoggedResponse", "com.github.tomakehurst.wiremock.http.LoggedResponse(int, com.github.tomakehurst.wiremock.http.HttpHeaders, java.lang.String, com.github.tomakehurst.wiremock.http.Fault, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.LoggedResponse", "com.github.tomakehurst.wiremock.http.LoggedResponse.from(com.github.tomakehurst.wiremock.http.Response)"], ["int", "com.github.tomakehurst.wiremock.http.LoggedResponse.getStatus()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.LoggedResponse.getHeaders()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.LoggedResponse.getBodyAsString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.LoggedResponse.getMimeType()"], ["java.nio.charset.Charset", "com.github.tomakehurst.wiremock.http.LoggedResponse.getCharset()"], ["byte[]", "com.github.tomakehurst.wiremock.http.LoggedResponse.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.LoggedResponse.getBodyAsBase64()"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.LoggedResponse.getFault()"], ["com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay", "com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay(java.lang.Integer, java.lang.Integer)"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay.getNumberOfChunks()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay.getTotalDuration()"], ["com.github.tomakehurst.wiremock.http.GenericHttpUriRequest", "com.github.tomakehurst.wiremock.http.GenericHttpUriRequest(java.lang.String, java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.GenericHttpUriRequest.getMethod()"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey$1.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.CaseInsensitiveKey$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$1.apply(java.util.Map$Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.HttpHeadersJsonDeserializer$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.absent()"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.or(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.mimeTypePart()"], ["java.nio.charset.Charset", "com.github.tomakehurst.wiremock.http.ContentTypeHeader.charset()"], ["void", "com.github.tomakehurst.wiremock.http.Fault$3.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["void", "com.github.tomakehurst.wiremock.http.Fault$1.apply(com.github.tomakehurst.wiremock.core.FaultInjector)"], ["com.github.tomakehurst.wiremock.http.ProxyResponseRenderer", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer(com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.KeyStoreSettings, boolean, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ProxyResponseRenderer", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["org.apache.http.client.methods.HttpUriRequest", "com.github.tomakehurst.wiremock.http.ProxyResponseRenderer.getHttpRequestFor(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.AbstractRequestHandler", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler(com.github.tomakehurst.wiremock.http.ResponseRenderer)"], ["void", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler.addRequestListener(com.github.tomakehurst.wiremock.http.RequestListener)"], ["void", "com.github.tomakehurst.wiremock.http.AbstractRequestHandler.handle(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.HttpResponder)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response.notConfigured()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response.response()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response(int, java.lang.String, byte[], com.github.tomakehurst.wiremock.http.HttpHeaders, boolean, com.github.tomakehurst.wiremock.http.Fault, long, com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay, boolean)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response(int, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, boolean, com.github.tomakehurst.wiremock.http.Fault, long, com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay, boolean)"], ["int", "com.github.tomakehurst.wiremock.http.Response.getStatus()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.getStatusMessage()"], ["byte[]", "com.github.tomakehurst.wiremock.http.Response.getBody()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.getBodyAsString()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.Response.getHeaders()"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.Response.getFault()"], ["long", "com.github.tomakehurst.wiremock.http.Response.getInitialDelay()"], ["com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay", "com.github.tomakehurst.wiremock.http.Response.getChunkedDribbleDelay()"], ["boolean", "com.github.tomakehurst.wiremock.http.Response.shouldAddChunkedDribbleDelay()"], ["boolean", "com.github.tomakehurst.wiremock.http.Response.wasConfigured()"], ["boolean", "com.github.tomakehurst.wiremock.http.Response.isFromProxy()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Response.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue$2.apply(java.lang.String)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.http.MultiValue$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.http.RequestMethod(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.RequestMethod", "com.github.tomakehurst.wiremock.http.RequestMethod.fromString(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.value()"], ["boolean", "com.github.tomakehurst.wiremock.http.RequestMethod.isOneOf(com.github.tomakehurst.wiremock.http.RequestMethod...)"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.http.RequestMethod.match(com.github.tomakehurst.wiremock.http.RequestMethod)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.getExpected()"], ["boolean", "com.github.tomakehurst.wiremock.http.RequestMethod.equals(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.http.RequestMethod.hasEntity()"], ["int", "com.github.tomakehurst.wiremock.http.RequestMethod.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.RequestMethod.toString()"], ["com.github.tomakehurst.wiremock.http.RequestMethod[]", "com.github.tomakehurst.wiremock.http.RequestMethod.values()"], ["com.github.tomakehurst.wiremock.matching.MatchResult", "com.github.tomakehurst.wiremock.http.RequestMethod.match(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener", "com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener()"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener.opened(java.net.Socket)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener.incoming(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener.outgoing(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.ConsoleNotifyingWiremockNetworkTrafficListener.closed(java.net.Socket)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener", "com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener()"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener.opened(java.net.Socket)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener.incoming(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener.outgoing(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.DoNothingWiremockNetworkTrafficListener.closed(java.net.Socket)"], ["com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener()"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.opened(java.net.Socket)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.incoming(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.outgoing(java.net.Socket, java.nio.ByteBuffer)"], ["void", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.closed(java.net.Socket)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.getAllRequests()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.trafficlistener.CollectingNetworkTrafficListener.getAllResponses()"], ["com.github.tomakehurst.wiremock.http.MimeType[]", "com.github.tomakehurst.wiremock.http.MimeType.values()"], ["com.github.tomakehurst.wiremock.http.MimeType", "com.github.tomakehurst.wiremock.http.MimeType.valueOf(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MimeType.toString()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(com.github.tomakehurst.wiremock.http.CaseInsensitiveKey, java.util.Collection<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader(java.lang.String, java.util.Collection<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.httpHeader(com.github.tomakehurst.wiremock.http.CaseInsensitiveKey, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.httpHeader(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.absent(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeader.empty(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.CaseInsensitiveKey", "com.github.tomakehurst.wiremock.http.HttpHeader.caseInsensitiveKey()"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeader.keyEquals(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeader.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeader.hashCode()"], ["com.github.tomakehurst.wiremock.http.BasicResponseRenderer", "com.github.tomakehurst.wiremock.http.BasicResponseRenderer()"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.BasicResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter(java.lang.String, java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter.queryParam(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.QueryParameter", "com.github.tomakehurst.wiremock.http.QueryParameter.absent(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.QueryParameter.isPresent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.QueryParameter.key()"], ["boolean", "com.github.tomakehurst.wiremock.http.QueryParameter.isSingleValued()"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie.cookie(com.github.tomakehurst.wiremock.common.ListOrSingle<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie.cookie(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie.absent()"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie(java.util.List<java.lang.String>)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.http.Cookie", "com.github.tomakehurst.wiremock.http.Cookie(java.lang.String, java.util.List<java.lang.String>)"], ["boolean", "com.github.tomakehurst.wiremock.http.Cookie.isAbsent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Cookie.getValue()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Cookie.toString()"], ["com.github.tomakehurst.wiremock.http.Fault[]", "com.github.tomakehurst.wiremock.http.Fault.values()"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.Fault.valueOf(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(com.github.tomakehurst.wiremock.http.HttpHeader...)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(java.lang.Iterable<com.github.tomakehurst.wiremock.http.HttpHeader>)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.noHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeader", "com.github.tomakehurst.wiremock.http.HttpHeaders.getHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ContentTypeHeader", "com.github.tomakehurst.wiremock.http.HttpHeaders.getContentTypeHeader()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.copyOf(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeaders.size()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.HttpHeaders.plus(com.github.tomakehurst.wiremock.http.HttpHeader...)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpHeaders.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.HttpHeaders.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.HttpHeaders.toString()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.like(com.github.tomakehurst.wiremock.http.Response)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.but()"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.status(int)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.statusMessage(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.body(byte[])"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.body(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.headers(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.configured(boolean)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.fault(com.github.tomakehurst.wiremock.http.Fault)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.incrementInitialDelay(long)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.chunkedDribbleDelay(com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay)"], ["com.github.tomakehurst.wiremock.http.Response$Builder", "com.github.tomakehurst.wiremock.http.Response$Builder.fromProxy(boolean)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.Response$Builder.build()"], ["com.github.tomakehurst.wiremock.http.MultiValue", "com.github.tomakehurst.wiremock.http.MultiValue(java.lang.String, java.util.List<java.lang.String>)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.isPresent()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.key()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.firstValue()"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.isSingleValued()"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.containsValue(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue.hasValueMatching(com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.MultiValue.toString()"], ["com.github.tomakehurst.wiremock.http.StubRequestHandler", "com.github.tomakehurst.wiremock.http.StubRequestHandler(com.github.tomakehurst.wiremock.core.StubServer, com.github.tomakehurst.wiremock.http.ResponseRenderer, com.github.tomakehurst.wiremock.core.Admin, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.PostServeAction>, com.github.tomakehurst.wiremock.verification.RequestJournal)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.http.StubRequestHandler.handleRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String, java.lang.String, com.fasterxml.jackson.databind.JsonNode, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, com.github.tomakehurst.wiremock.http.HttpHeaders, java.lang.Integer, com.github.tomakehurst.wiremock.http.DelayDistribution, com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay, java.lang.String, com.github.tomakehurst.wiremock.http.Fault, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String, byte[], com.fasterxml.jackson.databind.JsonNode, java.lang.String, java.lang.String, com.github.tomakehurst.wiremock.http.HttpHeaders, com.github.tomakehurst.wiremock.http.HttpHeaders, java.lang.Integer, com.github.tomakehurst.wiremock.http.DelayDistribution, com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay, java.lang.String, com.github.tomakehurst.wiremock.http.Fault, java.util.List<java.lang.String>, com.github.tomakehurst.wiremock.extension.Parameters, java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition(int, byte[])"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notFound()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.ok()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.okEmptyJson()"], ["<T> com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.okForJson(T)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.created()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.noContent()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.badRequest(com.github.tomakehurst.wiremock.common.Errors)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.redirectTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notConfigured()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notAuthorised()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.notPermitted(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.browserProxy(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.http.ResponseDefinition.copyOf(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getHeaders()"], ["com.github.tomakehurst.wiremock.http.HttpHeaders", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getAdditionalProxyRequestHeaders()"], ["int", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getStatus()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getStatusMessage()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBody()"], ["byte[]", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getByteBody()"], ["byte[]", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getByteBodyIfBinary()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBase64Body()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getBodyFileName()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.wasConfigured()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.isFromConfiguredStub()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getFixedDelayMilliseconds()"], ["com.github.tomakehurst.wiremock.http.DelayDistribution", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getDelayDistribution()"], ["com.github.tomakehurst.wiremock.http.ChunkedDribbleDelay", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getChunkedDribbleDelay()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getProxyUrl()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getProxyBaseUrl()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBodyFile()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBodyContent()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.specifiesBinaryBodyContent()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.isProxyResponse()"], ["com.github.tomakehurst.wiremock.http.Request", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getOriginalRequest()"], ["void", "com.github.tomakehurst.wiremock.http.ResponseDefinition.setOriginalRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.Fault", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getFault()"], ["com.github.tomakehurst.wiremock.extension.Parameters", "com.github.tomakehurst.wiremock.http.ResponseDefinition.getTransformerParameters()"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.hasTransformer(com.github.tomakehurst.wiremock.extension.AbstractTransformer)"], ["boolean", "com.github.tomakehurst.wiremock.http.ResponseDefinition.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.ResponseDefinition.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.ResponseDefinition.toString()"], ["com.github.tomakehurst.wiremock.http.HttpStatus", "com.github.tomakehurst.wiremock.http.HttpStatus()"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpStatus.isSuccess(int)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpStatus.isRedirection(int)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpStatus.isClientError(int)"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpStatus.isServerError(int)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue$1.apply(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.http.MultiValue$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.StubResponseRenderer", "com.github.tomakehurst.wiremock.http.StubResponseRenderer(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.global.GlobalSettingsHolder, com.github.tomakehurst.wiremock.http.ProxyResponseRenderer, java.util.List<com.github.tomakehurst.wiremock.extension.ResponseTransformer>)"], ["com.github.tomakehurst.wiremock.http.Response", "com.github.tomakehurst.wiremock.http.StubResponseRenderer.render(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.AdminRequestHandler", "com.github.tomakehurst.wiremock.http.AdminRequestHandler(com.github.tomakehurst.wiremock.admin.AdminRoutes, com.github.tomakehurst.wiremock.core.Admin, com.github.tomakehurst.wiremock.http.ResponseRenderer, com.github.tomakehurst.wiremock.security.Authenticator, boolean)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.http.AdminRequestHandler.handleRequest(com.github.tomakehurst.wiremock.http.Request)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(byte[])"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body(com.fasterxml.jackson.databind.JsonNode)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body.ofBinaryOrText(byte[], com.github.tomakehurst.wiremock.http.ContentTypeHeader)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body.fromOneOf(byte[], java.lang.String, com.fasterxml.jackson.databind.JsonNode, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.Body", "com.github.tomakehurst.wiremock.http.Body.none()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.asString()"], ["byte[]", "com.github.tomakehurst.wiremock.http.Body.asBytes()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.asBase64()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isBinary()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isAbsent()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.isPresent()"], ["boolean", "com.github.tomakehurst.wiremock.http.Body.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.http.Body.hashCode()"], ["java.lang.String", "com.github.tomakehurst.wiremock.http.Body.toString()"], ["boolean", "com.github.tomakehurst.wiremock.http.HttpClientFactory$1.isTrusted(java.security.cert.X509Certificate[], java.lang.String)"], ["com.github.tomakehurst.wiremock.http.HttpClientFactory", "com.github.tomakehurst.wiremock.http.HttpClientFactory()"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int, int, com.github.tomakehurst.wiremock.common.ProxySettings, com.github.tomakehurst.wiremock.common.KeyStoreSettings)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int, int)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(int)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient(com.github.tomakehurst.wiremock.common.ProxySettings)"], ["org.apache.http.impl.client.CloseableHttpClient", "com.github.tomakehurst.wiremock.http.HttpClientFactory.createClient()"], ["org.apache.http.client.methods.HttpUriRequest", "com.github.tomakehurst.wiremock.http.HttpClientFactory.getHttpRequestFor(com.github.tomakehurst.wiremock.http.RequestMethod, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.UniformDistribution", "com.github.tomakehurst.wiremock.http.UniformDistribution(int, int)"], ["long", "com.github.tomakehurst.wiremock.http.UniformDistribution.sampleMillis()"], ["com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings(java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.matching.RequestMatcherExtension>, java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.ResponseDefinitionTransformer>, com.github.tomakehurst.wiremock.common.FileSource)"], ["com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings()"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.serveFor(com.github.tomakehurst.wiremock.http.Request)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.addMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.removeMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.editMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.reset()"], ["void", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings.resetScenarios()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServeEvent$2.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServeEvent$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder(com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.common.FileSource, com.github.tomakehurst.wiremock.core.Admin, java.util.List<com.github.tomakehurst.wiremock.http.CaseInsensitiveKey>)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder.requestReceived(com.github.tomakehurst.wiremock.http.Request, com.github.tomakehurst.wiremock.http.Response)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder.setIdGenerator(com.github.tomakehurst.wiremock.common.IdGenerator)"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenarios$1.apply(com.github.tomakehurst.wiremock.stubbing.Scenario)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.stubbing.Scenarios$1.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet()"], ["void", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.add(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.remove(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.replace(com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.clear()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet.toString()"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent(java.util.UUID, com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.http.ResponseDefinition, com.github.tomakehurst.wiremock.http.LoggedResponse, boolean)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.forUnmatchedRequest(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.forBadRequest(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.common.Errors)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.of(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.of(com.github.tomakehurst.wiremock.verification.LoggedRequest, com.github.tomakehurst.wiremock.http.ResponseDefinition, com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.stubbing.ServeEvent", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.complete(com.github.tomakehurst.wiremock.http.Response)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.isNoExactMatch()"], ["java.util.UUID", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getId()"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getRequest()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getResponseDefinition()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getWasMatched()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getStubMapping()"], ["com.github.tomakehurst.wiremock.http.LoggedResponse", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getResponse()"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters>", "com.github.tomakehurst.wiremock.stubbing.ServeEvent.getPostServeActions()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.stubbing.StubMapping.buildFrom(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.buildJsonStringFor(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.util.UUID", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getUuid()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setId(java.util.UUID)"], ["java.util.UUID", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getId()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getName()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setName(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setUuid(java.util.UUID)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.shouldBePersisted()"], ["java.lang.Boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isPersistent()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setPersistent(java.lang.Boolean)"], ["com.github.tomakehurst.wiremock.matching.RequestPattern", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getRequest()"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getResponse()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setRequest(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setResponse(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.toString()"], ["long", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getInsertionIndex()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setInsertionIndex(long)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isDirty()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setDirty(boolean)"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getPriority()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setPriority(java.lang.Integer)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getScenarioName()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setScenarioName(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getRequiredScenarioState()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setRequiredScenarioState(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getNewScenarioState()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setNewScenarioState(java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isInScenario()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.modifiesScenarioState()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.isIndependentOfScenarioState()"], ["int", "com.github.tomakehurst.wiremock.stubbing.StubMapping.comparePriorityWith(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters>", "com.github.tomakehurst.wiremock.stubbing.StubMapping.getPostServeActions()"], ["void", "com.github.tomakehurst.wiremock.stubbing.StubMapping.setPostServeActions(java.util.Map<java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters>)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMapping.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.stubbing.StubMapping.hashCode()"], ["com.github.tomakehurst.wiremock.verification.LoggedRequest", "com.github.tomakehurst.wiremock.stubbing.ServeEvent$1.apply(com.github.tomakehurst.wiremock.stubbing.ServeEvent)"], ["java.lang.Object", "com.github.tomakehurst.wiremock.stubbing.ServeEvent$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder$1.apply(com.github.tomakehurst.wiremock.http.HttpHeader)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.StubMappingJsonRecorder$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenarios$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenarios$2.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$3.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$3.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$1.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$2.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenario(java.util.UUID, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenario.inStartedState(java.lang.String)"], ["java.util.UUID", "com.github.tomakehurst.wiremock.stubbing.Scenario.getId()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.Scenario.getName()"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.Scenario.getState()"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenario.withoutPossibleState(java.lang.String)"], ["java.lang.String", "com.github.tomakehurst.wiremock.stubbing.Scenario.toString()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenario.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.stubbing.Scenario.hashCode()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenario$1.apply(com.github.tomakehurst.wiremock.stubbing.Scenario)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenario$1.apply(java.lang.Object)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$2.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.InMemoryStubMappings$2.apply(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$1.compare(com.github.tomakehurst.wiremock.stubbing.StubMapping, com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["int", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$1.compare(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.stubbing.Scenarios", "com.github.tomakehurst.wiremock.stubbing.Scenarios()"], ["com.github.tomakehurst.wiremock.stubbing.Scenario", "com.github.tomakehurst.wiremock.stubbing.Scenarios.getByName(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenarios.onStubMappingAddedOrUpdated(com.github.tomakehurst.wiremock.stubbing.StubMapping, java.lang.Iterable<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenarios.onStubMappingRemoved(com.github.tomakehurst.wiremock.stubbing.StubMapping, java.lang.Iterable<com.github.tomakehurst.wiremock.stubbing.StubMapping>)"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenarios.onStubServed(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenarios.reset()"], ["void", "com.github.tomakehurst.wiremock.stubbing.Scenarios.clear()"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.Scenarios.mappingMatchesScenarioState(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$3.apply(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["boolean", "com.github.tomakehurst.wiremock.stubbing.SortedConcurrentMappingSet$3.apply(java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forUnmatchedRequestPattern(com.github.tomakehurst.wiremock.verification.diff.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forSingleUnmatchedRequest(com.github.tomakehurst.wiremock.verification.diff.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forUnmatchedNearMisses(java.util.List<com.github.tomakehurst.wiremock.verification.NearMiss>)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(java.lang.String, com.github.tomakehurst.wiremock.verification.diff.Diff)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, int, int)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException(com.github.tomakehurst.wiremock.matching.RequestPattern, com.github.tomakehurst.wiremock.client.CountMatchingStrategy, int)"], ["com.github.tomakehurst.wiremock.client.VerificationException", "com.github.tomakehurst.wiremock.client.VerificationException.forUnmatchedRequests(java.util.List<com.github.tomakehurst.wiremock.verification.LoggedRequest>)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.like(com.github.tomakehurst.wiremock.http.ResponseDefinition)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.jsonResponse(java.lang.Object)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.jsonResponse(java.lang.Object, int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.but()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withStatus(int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withHeader(java.lang.String, java.lang.String...)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBodyFile(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBody(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBody(byte[])"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withFixedDelay(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withRandomDelay(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withLogNormalRandomDelay(double, double)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withUniformRandomDelay(int, int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withChunkedDribbleDelay(int, int)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformers(java.lang.String...)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformerParameter(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withTransformer(java.lang.String, java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.proxiedFrom(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.responseDefinition()"], ["<T> com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.okForJson(T)"], ["<T> com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.okForEmptyJson()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withHeaders(com.github.tomakehurst.wiremock.http.HttpHeaders)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withBase64Body(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withStatusMessage(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.withFault(com.github.tomakehurst.wiremock.http.Fault)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder.build()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder.withAdditionalRequestHeader(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.http.ResponseDefinition", "com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder$ProxyResponseDefinitionBuilder.build()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$5.test(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, int, com.github.tomakehurst.wiremock.security.ClientAuthenticator)"], ["com.github.tomakehurst.wiremock.client.HttpAdminClient", "com.github.tomakehurst.wiremock.client.HttpAdminClient(java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.addStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.editStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.listAllStubMappings()"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getStubMapping(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetAll()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.resetToDefaultMappings()"], ["com.github.tomakehurst.wiremock.admin.model.GetServeEventsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getServeEvents()"], ["com.github.tomakehurst.wiremock.admin.model.SingleServedStubResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getServedStub(java.util.UUID)"], ["com.github.tomakehurst.wiremock.verification.VerificationResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.countRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findRequestsMatching(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["com.github.tomakehurst.wiremock.verification.FindRequestsResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findNearMissesForUnmatchedRequests()"], ["com.github.tomakehurst.wiremock.admin.model.GetScenariosResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getAllScenarios()"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findTopNearMissesFor(com.github.tomakehurst.wiremock.verification.LoggedRequest)"], ["com.github.tomakehurst.wiremock.verification.FindNearMissesResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.findTopNearMissesFor(com.github.tomakehurst.wiremock.matching.RequestPattern)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.updateGlobalSettings(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.snapshotRecord()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.snapshotRecord(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.startRecording(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpec)"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.stopRecording()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getRecordingStatus()"], ["com.github.tomakehurst.wiremock.core.Options", "com.github.tomakehurst.wiremock.client.HttpAdminClient.getOptions()"], ["void", "com.github.tomakehurst.wiremock.client.HttpAdminClient.shutdownServer()"], ["int", "com.github.tomakehurst.wiremock.client.HttpAdminClient.port()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$1.test(java.lang.Object, java.lang.Object)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$3.test(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy(com.github.tomakehurst.wiremock.client.CountMatchingMode, int)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy.match(int)"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy.toString()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$4.test(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.BasicCredentials", "com.github.tomakehurst.wiremock.client.BasicCredentials(java.lang.String, java.lang.String)"], ["boolean", "com.github.tomakehurst.wiremock.client.BasicCredentials.present()"], ["com.github.tomakehurst.wiremock.matching.MultiValuePattern", "com.github.tomakehurst.wiremock.client.BasicCredentials.asAuthorizationMultiValuePattern()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.BasicCredentials.asAuthorizationHeaderValue()"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder()"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.port(int)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.host(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.urlPathPrefix(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.scheme(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.http()"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.https()"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.hostHeader(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.proxyHost(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.proxyPort(int)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.authenticator(com.github.tomakehurst.wiremock.security.ClientAuthenticator)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMockBuilder.basicAuthenticator(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMockBuilder.build()"], ["java.lang.String", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.getFriendlyName()"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.test(java.lang.Integer, java.lang.Integer)"], ["boolean", "com.github.tomakehurst.wiremock.client.CountMatchingStrategy$2.test(java.lang.Object, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.WireMockBuilder", "com.github.tomakehurst.wiremock.client.WireMock.create()"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(com.github.tomakehurst.wiremock.core.Admin)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, java.lang.String, int)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, java.lang.String, int, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, int, com.github.tomakehurst.wiremock.security.ClientAuthenticator)"], ["com.github.tomakehurst.wiremock.client.WireMock", "com.github.tomakehurst.wiremock.client.WireMock()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.WireMock.givenThat(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.WireMock.stubFor(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.editStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStub(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStub(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.WireMock.listAllStubMappings()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.WireMock.getSingleStubMapping(java.util.UUID)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, int, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, java.lang.String, int, java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(java.lang.String, java.lang.String, int, java.lang.String, int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configureFor(com.github.tomakehurst.wiremock.client.WireMock)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.configure()"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern", "com.github.tomakehurst.wiremock.client.WireMock.binaryEqualTo(byte[])"], ["com.github.tomakehurst.wiremock.matching.BinaryEqualToPattern", "com.github.tomakehurst.wiremock.client.WireMock.binaryEqualTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToIgnoreCase(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToJson(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToJson(java.lang.String, boolean, boolean)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingJsonPath(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingJsonPath(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.equalToXml(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.MatchesXPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingXPath(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingXPath(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matchingXPath(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.containing(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.matching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.notMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.StringValuePattern", "com.github.tomakehurst.wiremock.client.WireMock.absent()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.saveMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.saveAllMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeAllMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.reset()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetAllRequests()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetRequests()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetAllScenarios()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetToDefaultMappings()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.resetToDefault()"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.WireMock.register(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.register(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.editStubMapping(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStubMapping(com.github.tomakehurst.wiremock.client.MappingBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.removeStubMapping(com.github.tomakehurst.wiremock.stubbing.StubMapping)"], ["com.github.tomakehurst.wiremock.admin.model.ListStubMappingsResult", "com.github.tomakehurst.wiremock.client.WireMock.allStubMappings()"], ["com.github.tomakehurst.wiremock.admin.model.SingleStubMappingResult", "com.github.tomakehurst.wiremock.client.WireMock.getStubMapping(java.util.UUID)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlPathEqualTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPathPattern", "com.github.tomakehurst.wiremock.client.WireMock.urlPathMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.matching.UrlPattern", "com.github.tomakehurst.wiremock.client.WireMock.anyUrl()"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.lessThan(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.lessThanOrExactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.exactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.moreThanOrExactly(int)"], ["com.github.tomakehurst.wiremock.client.CountMatchingStrategy", "com.github.tomakehurst.wiremock.client.WireMock.moreThan(int)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.get(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.post(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.put(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.delete(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.patch(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.head(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.options(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.trace(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.any(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.request(java.lang.String, com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMatching(com.github.tomakehurst.wiremock.matching.ValueMatcher<com.github.tomakehurst.wiremock.http.Request>)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.aResponse()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.ok()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.ok(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.okForContentType(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.okJson(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.okXml(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.okTextXml(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.proxyAllTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.get(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.post(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.put(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.WireMock.delete(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.created()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.noContent()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.permanentRedirect(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.temporaryRedirect(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.seeOther(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.badRequest()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.badRequestEntity()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.unauthorized()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.forbidden()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.notFound()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.serverError()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.serviceUnavailable()"], ["com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder", "com.github.tomakehurst.wiremock.client.WireMock.status(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verifyThat(com.github.tomakehurst.wiremock.client.CountMatchingStrategy, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(int, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.verify(com.github.tomakehurst.wiremock.client.CountMatchingStrategy, com.github.tomakehurst.wiremock.matching.RequestPatternBuilder)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.getRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.putRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.deleteRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.patchRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.headRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.optionsRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.traceRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.anyRequestedFor(com.github.tomakehurst.wiremock.matching.UrlPattern)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMadeFor(java.lang.String, com.github.tomakehurst.wiremock.extension.Parameters)"], ["com.github.tomakehurst.wiremock.matching.RequestPatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.requestMadeFor(com.github.tomakehurst.wiremock.matching.ValueMatcher<com.github.tomakehurst.wiremock.http.Request>)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalFixedDelay(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalFixedDelayVariable(int)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalRandomDelay(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.setGlobalRandomDelayVariable(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.shutdown()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.shutdownServer()"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.loadMappingsFrom(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.loadMappingsFrom(java.io.File)"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.aMultipart()"], ["com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder", "com.github.tomakehurst.wiremock.client.WireMock.aMultipart(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.startRecording(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.startRecording(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.startStubRecording(java.lang.String)"], ["void", "com.github.tomakehurst.wiremock.client.WireMock.startStubRecording(com.github.tomakehurst.wiremock.recording.RecordSpecBuilder)"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.WireMock.stopRecording()"], ["com.github.tomakehurst.wiremock.recording.SnapshotRecordResult", "com.github.tomakehurst.wiremock.client.WireMock.stopStubRecording()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.client.WireMock.getRecordingStatus()"], ["com.github.tomakehurst.wiremock.recording.RecordingStatusResult", "com.github.tomakehurst.wiremock.client.WireMock.getStubRecordingStatus()"], ["com.github.tomakehurst.wiremock.recording.RecordSpecBuilder", "com.github.tomakehurst.wiremock.client.WireMock.recordSpec()"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.ContentPattern<?>)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withMultipartRequestBody(com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.inScenario(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.whenScenarioStateIs(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willSetStateTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withName(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.persistent()"], ["com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["<P> com.github.tomakehurst.wiremock.client.BasicMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withPostServeAction(java.lang.String, P)"], ["com.github.tomakehurst.wiremock.stubbing.StubMapping", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.build()"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withPostServeAction(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.inScenario(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withMultipartRequestBody(com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.ContentPattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willSetStateTo(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.ScenarioMappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.whenScenarioStateIs(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.willReturn(com.github.tomakehurst.wiremock.client.ResponseDefinitionBuilder)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withPostServeAction(java.lang.String, java.lang.Object)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withCookie(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withBasicAuth(java.lang.String, java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.persistent()"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withName(java.lang.String)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withId(java.util.UUID)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withMultipartRequestBody(com.github.tomakehurst.wiremock.matching.MultipartValuePatternBuilder)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withRequestBody(com.github.tomakehurst.wiremock.matching.ContentPattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withQueryParam(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.withHeader(java.lang.String, com.github.tomakehurst.wiremock.matching.StringValuePattern)"], ["com.github.tomakehurst.wiremock.client.MappingBuilder", "com.github.tomakehurst.wiremock.client.BasicMappingBuilder.atPriority(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.global.RequestDelaySpec", "com.github.tomakehurst.wiremock.global.RequestDelaySpec(int)"], ["int", "com.github.tomakehurst.wiremock.global.RequestDelaySpec.milliseconds()"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettings()"], ["java.lang.Integer", "com.github.tomakehurst.wiremock.global.GlobalSettings.getFixedDelay()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettings.setFixedDelay(java.lang.Integer)"], ["com.github.tomakehurst.wiremock.http.DelayDistribution", "com.github.tomakehurst.wiremock.global.GlobalSettings.getDelayDistribution()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettings.setDelayDistribution(com.github.tomakehurst.wiremock.http.DelayDistribution)"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettings.copy()"], ["boolean", "com.github.tomakehurst.wiremock.global.GlobalSettings.equals(java.lang.Object)"], ["int", "com.github.tomakehurst.wiremock.global.GlobalSettings.hashCode()"], ["com.github.tomakehurst.wiremock.global.GlobalSettingsHolder", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder()"], ["void", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder.replaceWith(com.github.tomakehurst.wiremock.global.GlobalSettings)"], ["com.github.tomakehurst.wiremock.global.GlobalSettings", "com.github.tomakehurst.wiremock.global.GlobalSettingsHolder.get()"]]}