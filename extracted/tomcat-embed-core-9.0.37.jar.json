{"tomcat-embed-core-9.0.37.jar": [["javax.security.auth.message.AuthException", "javax.security.auth.message.AuthException()"], ["javax.security.auth.message.AuthException", "javax.security.auth.message.AuthException(java.lang.String)"], ["java.lang.String", "javax.security.auth.message.AuthStatus.toString()"], ["javax.security.auth.message.MessagePolicy$TargetPolicy", "javax.security.auth.message.MessagePolicy$TargetPolicy(javax.security.auth.message.MessagePolicy$Target[], javax.security.auth.message.MessagePolicy$ProtectionPolicy)"], ["javax.security.auth.message.MessagePolicy$Target[]", "javax.security.auth.message.MessagePolicy$TargetPolicy.getTargets()"], ["javax.security.auth.message.MessagePolicy$ProtectionPolicy", "javax.security.auth.message.MessagePolicy$TargetPolicy.getProtectionPolicy()"], ["javax.security.auth.message.MessagePolicy", "javax.security.auth.message.MessagePolicy(javax.security.auth.message.MessagePolicy$TargetPolicy[], boolean)"], ["boolean", "javax.security.auth.message.MessagePolicy.isMandatory()"], ["javax.security.auth.message.MessagePolicy$TargetPolicy[]", "javax.security.auth.message.MessagePolicy.getTargetPolicies()"], ["javax.security.auth.message.callback.CallerPrincipalCallback", "javax.security.auth.message.callback.CallerPrincipalCallback(javax.security.auth.Subject, java.security.Principal)"], ["javax.security.auth.message.callback.CallerPrincipalCallback", "javax.security.auth.message.callback.CallerPrincipalCallback(javax.security.auth.Subject, java.lang.String)"], ["javax.security.auth.Subject", "javax.security.auth.message.callback.CallerPrincipalCallback.getSubject()"], ["java.security.Principal", "javax.security.auth.message.callback.CallerPrincipalCallback.getPrincipal()"], ["java.lang.String", "javax.security.auth.message.callback.CallerPrincipalCallback.getName()"], ["javax.security.auth.message.callback.CertStoreCallback", "javax.security.auth.message.callback.CertStoreCallback()"], ["void", "javax.security.auth.message.callback.CertStoreCallback.setCertStore(java.security.cert.CertStore)"], ["java.security.cert.CertStore", "javax.security.auth.message.callback.CertStoreCallback.getCertStore()"], ["javax.security.auth.message.callback.GroupPrincipalCallback", "javax.security.auth.message.callback.GroupPrincipalCallback(javax.security.auth.Subject, java.lang.String[])"], ["javax.security.auth.Subject", "javax.security.auth.message.callback.GroupPrincipalCallback.getSubject()"], ["java.lang.String[]", "javax.security.auth.message.callback.GroupPrincipalCallback.getGroups()"], ["javax.security.auth.message.callback.PasswordValidationCallback", "javax.security.auth.message.callback.PasswordValidationCallback(javax.security.auth.Subject, java.lang.String, char[])"], ["javax.security.auth.Subject", "javax.security.auth.message.callback.PasswordValidationCallback.getSubject()"], ["java.lang.String", "javax.security.auth.message.callback.PasswordValidationCallback.getUsername()"], ["char[]", "javax.security.auth.message.callback.PasswordValidationCallback.getPassword()"], ["void", "javax.security.auth.message.callback.PasswordValidationCallback.clearPassword()"], ["void", "javax.security.auth.message.callback.PasswordValidationCallback.setResult(boolean)"], ["boolean", "javax.security.auth.message.callback.PasswordValidationCallback.getResult()"], ["javax.security.auth.message.callback.PrivateKeyCallback$AliasRequest", "javax.security.auth.message.callback.PrivateKeyCallback$AliasRequest(java.lang.String)"], ["java.lang.String", "javax.security.auth.message.callback.PrivateKeyCallback$AliasRequest.getAlias()"], ["javax.security.auth.message.callback.PrivateKeyCallback$DigestRequest", "javax.security.auth.message.callback.PrivateKeyCallback$DigestRequest(byte[], java.lang.String)"], ["byte[]", "javax.security.auth.message.callback.PrivateKeyCallback$DigestRequest.getDigest()"], ["java.lang.String", "javax.security.auth.message.callback.PrivateKeyCallback$DigestRequest.getAlgorithm()"], ["javax.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest", "javax.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest(javax.security.auth.x500.X500Principal, java.math.BigInteger)"], ["javax.security.auth.x500.X500Principal", "javax.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest.getIssuer()"], ["java.math.BigInteger", "javax.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest.getSerialNum()"], ["javax.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest", "javax.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest(byte[])"], ["byte[]", "javax.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest.getSubjectKeyID()"], ["javax.security.auth.message.callback.PrivateKeyCallback", "javax.security.auth.message.callback.PrivateKeyCallback(javax.security.auth.message.callback.PrivateKeyCallback$Request)"], ["javax.security.auth.message.callback.PrivateKeyCallback$Request", "javax.security.auth.message.callback.PrivateKeyCallback.getRequest()"], ["void", "javax.security.auth.message.callback.PrivateKeyCallback.setKey(java.security.PrivateKey, java.security.cert.Certificate[])"], ["java.security.PrivateKey", "javax.security.auth.message.callback.PrivateKeyCallback.getKey()"], ["java.security.cert.Certificate[]", "javax.security.auth.message.callback.PrivateKeyCallback.getChain()"], ["javax.security.auth.message.callback.SecretKeyCallback$AliasRequest", "javax.security.auth.message.callback.SecretKeyCallback$AliasRequest(java.lang.String)"], ["java.lang.String", "javax.security.auth.message.callback.SecretKeyCallback$AliasRequest.getAlias()"], ["javax.security.auth.message.callback.SecretKeyCallback", "javax.security.auth.message.callback.SecretKeyCallback(javax.security.auth.message.callback.SecretKeyCallback$Request)"], ["javax.security.auth.message.callback.SecretKeyCallback$Request", "javax.security.auth.message.callback.SecretKeyCallback.getRequest()"], ["void", "javax.security.auth.message.callback.SecretKeyCallback.setKey(javax.crypto.SecretKey)"], ["javax.crypto.SecretKey", "javax.security.auth.message.callback.SecretKeyCallback.getKey()"], ["javax.security.auth.message.callback.TrustStoreCallback", "javax.security.auth.message.callback.TrustStoreCallback()"], ["void", "javax.security.auth.message.callback.TrustStoreCallback.setTrustStore(java.security.KeyStore)"], ["java.security.KeyStore", "javax.security.auth.message.callback.TrustStoreCallback.getTrustStore()"], ["javax.security.auth.message.config.AuthConfigFactory", "javax.security.auth.message.config.AuthConfigFactory$1.run()"], ["java.lang.Object", "javax.security.auth.message.config.AuthConfigFactory$1.run()"], ["java.lang.String", "javax.security.auth.message.config.AuthConfigFactory$2.run()"], ["java.lang.Object", "javax.security.auth.message.config.AuthConfigFactory$2.run()"], ["javax.security.auth.message.config.AuthConfigFactory", "javax.security.auth.message.config.AuthConfigFactory()"], ["javax.security.auth.message.config.AuthConfigFactory", "javax.security.auth.message.config.AuthConfigFactory.getFactory()"], ["synchronized", "javax.security.auth.message.config.AuthConfigFactory.void setFactory(javax.security.auth.message.config.AuthConfigFactory)"], ["javax.servlet.AsyncEvent", "javax.servlet.AsyncEvent(javax.servlet.AsyncContext)"], ["javax.servlet.AsyncEvent", "javax.servlet.AsyncEvent(javax.servlet.AsyncContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.AsyncEvent", "javax.servlet.AsyncEvent(javax.servlet.AsyncContext, java.lang.Throwable)"], ["javax.servlet.AsyncEvent", "javax.servlet.AsyncEvent(javax.servlet.AsyncContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.Throwable)"], ["javax.servlet.AsyncContext", "javax.servlet.AsyncEvent.getAsyncContext()"], ["javax.servlet.ServletRequest", "javax.servlet.AsyncEvent.getSuppliedRequest()"], ["javax.servlet.ServletResponse", "javax.servlet.AsyncEvent.getSuppliedResponse()"], ["java.lang.Throwable", "javax.servlet.AsyncEvent.getThrowable()"], ["javax.servlet.DispatcherType[]", "javax.servlet.DispatcherType.values()"], ["javax.servlet.DispatcherType", "javax.servlet.DispatcherType.valueOf(java.lang.String)"], ["default", "javax.servlet.Filter.void init(javax.servlet.FilterConfig)"], ["default", "javax.servlet.Filter.void destroy()"], ["javax.servlet.GenericFilter", "javax.servlet.GenericFilter()"], ["java.lang.String", "javax.servlet.GenericFilter.getInitParameter(java.lang.String)"], ["javax.servlet.FilterConfig", "javax.servlet.GenericFilter.getFilterConfig()"], ["javax.servlet.ServletContext", "javax.servlet.GenericFilter.getServletContext()"], ["void", "javax.servlet.GenericFilter.init(javax.servlet.FilterConfig)"], ["void", "javax.servlet.GenericFilter.init()"], ["java.lang.String", "javax.servlet.GenericFilter.getFilterName()"], ["javax.servlet.GenericServlet", "javax.servlet.GenericServlet()"], ["void", "javax.servlet.GenericServlet.destroy()"], ["java.lang.String", "javax.servlet.GenericServlet.getInitParameter(java.lang.String)"], ["javax.servlet.ServletConfig", "javax.servlet.GenericServlet.getServletConfig()"], ["javax.servlet.ServletContext", "javax.servlet.GenericServlet.getServletContext()"], ["java.lang.String", "javax.servlet.GenericServlet.getServletInfo()"], ["void", "javax.servlet.GenericServlet.init(javax.servlet.ServletConfig)"], ["void", "javax.servlet.GenericServlet.init()"], ["void", "javax.servlet.GenericServlet.log(java.lang.String)"], ["void", "javax.servlet.GenericServlet.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "javax.servlet.GenericServlet.getServletName()"], ["javax.servlet.HttpConstraintElement", "javax.servlet.HttpConstraintElement()"], ["javax.servlet.HttpConstraintElement", "javax.servlet.HttpConstraintElement(javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic)"], ["javax.servlet.HttpConstraintElement", "javax.servlet.HttpConstraintElement(javax.servlet.annotation.ServletSecurity$TransportGuarantee, java.lang.String...)"], ["javax.servlet.HttpConstraintElement", "javax.servlet.HttpConstraintElement(javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic, javax.servlet.annotation.ServletSecurity$TransportGuarantee, java.lang.String...)"], ["javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic", "javax.servlet.HttpConstraintElement.getEmptyRoleSemantic()"], ["javax.servlet.annotation.ServletSecurity$TransportGuarantee", "javax.servlet.HttpConstraintElement.getTransportGuarantee()"], ["java.lang.String[]", "javax.servlet.HttpConstraintElement.getRolesAllowed()"], ["javax.servlet.HttpMethodConstraintElement", "javax.servlet.HttpMethodConstraintElement(java.lang.String)"], ["javax.servlet.HttpMethodConstraintElement", "javax.servlet.HttpMethodConstraintElement(java.lang.String, javax.servlet.HttpConstraintElement)"], ["java.lang.String", "javax.servlet.HttpMethodConstraintElement.getMethodName()"], ["javax.servlet.MultipartConfigElement", "javax.servlet.MultipartConfigElement(java.lang.String)"], ["javax.servlet.MultipartConfigElement", "javax.servlet.MultipartConfigElement(java.lang.String, long, long, int)"], ["javax.servlet.MultipartConfigElement", "javax.servlet.MultipartConfigElement(javax.servlet.annotation.MultipartConfig)"], ["java.lang.String", "javax.servlet.MultipartConfigElement.getLocation()"], ["long", "javax.servlet.MultipartConfigElement.getMaxFileSize()"], ["long", "javax.servlet.MultipartConfigElement.getMaxRequestSize()"], ["int", "javax.servlet.MultipartConfigElement.getFileSizeThreshold()"], ["javax.servlet.ServletContextAttributeEvent", "javax.servlet.ServletContextAttributeEvent(javax.servlet.ServletContext, java.lang.String, java.lang.Object)"], ["java.lang.String", "javax.servlet.ServletContextAttributeEvent.getName()"], ["java.lang.Object", "javax.servlet.ServletContextAttributeEvent.getValue()"], ["default", "javax.servlet.ServletContextAttributeListener.void attributeAdded(javax.servlet.ServletContextAttributeEvent)"], ["default", "javax.servlet.ServletContextAttributeListener.void attributeRemoved(javax.servlet.ServletContextAttributeEvent)"], ["default", "javax.servlet.ServletContextAttributeListener.void attributeReplaced(javax.servlet.ServletContextAttributeEvent)"], ["javax.servlet.ServletContextEvent", "javax.servlet.ServletContextEvent(javax.servlet.ServletContext)"], ["javax.servlet.ServletContext", "javax.servlet.ServletContextEvent.getServletContext()"], ["default", "javax.servlet.ServletContextListener.void contextInitialized(javax.servlet.ServletContextEvent)"], ["default", "javax.servlet.ServletContextListener.void contextDestroyed(javax.servlet.ServletContextEvent)"], ["javax.servlet.ServletException", "javax.servlet.ServletException()"], ["javax.servlet.ServletException", "javax.servlet.ServletException(java.lang.String)"], ["javax.servlet.ServletException", "javax.servlet.ServletException(java.lang.String, java.lang.Throwable)"], ["javax.servlet.ServletException", "javax.servlet.ServletException(java.lang.Throwable)"], ["java.lang.Throwable", "javax.servlet.ServletException.getRootCause()"], ["int", "javax.servlet.ServletInputStream.readLine(byte[], int, int)"], ["void", "javax.servlet.ServletOutputStream.print(java.lang.String)"], ["void", "javax.servlet.ServletOutputStream.print(boolean)"], ["void", "javax.servlet.ServletOutputStream.print(char)"], ["void", "javax.servlet.ServletOutputStream.print(int)"], ["void", "javax.servlet.ServletOutputStream.print(long)"], ["void", "javax.servlet.ServletOutputStream.print(float)"], ["void", "javax.servlet.ServletOutputStream.print(double)"], ["void", "javax.servlet.ServletOutputStream.println()"], ["void", "javax.servlet.ServletOutputStream.println(java.lang.String)"], ["void", "javax.servlet.ServletOutputStream.println(boolean)"], ["void", "javax.servlet.ServletOutputStream.println(char)"], ["void", "javax.servlet.ServletOutputStream.println(int)"], ["void", "javax.servlet.ServletOutputStream.println(long)"], ["void", "javax.servlet.ServletOutputStream.println(float)"], ["void", "javax.servlet.ServletOutputStream.println(double)"], ["javax.servlet.ServletRequestAttributeEvent", "javax.servlet.ServletRequestAttributeEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest, java.lang.String, java.lang.Object)"], ["java.lang.String", "javax.servlet.ServletRequestAttributeEvent.getName()"], ["java.lang.Object", "javax.servlet.ServletRequestAttributeEvent.getValue()"], ["default", "javax.servlet.ServletRequestAttributeListener.void attributeAdded(javax.servlet.ServletRequestAttributeEvent)"], ["default", "javax.servlet.ServletRequestAttributeListener.void attributeRemoved(javax.servlet.ServletRequestAttributeEvent)"], ["default", "javax.servlet.ServletRequestAttributeListener.void attributeReplaced(javax.servlet.ServletRequestAttributeEvent)"], ["javax.servlet.ServletRequestEvent", "javax.servlet.ServletRequestEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest)"], ["javax.servlet.ServletRequest", "javax.servlet.ServletRequestEvent.getServletRequest()"], ["javax.servlet.ServletContext", "javax.servlet.ServletRequestEvent.getServletContext()"], ["default", "javax.servlet.ServletRequestListener.void requestDestroyed(javax.servlet.ServletRequestEvent)"], ["default", "javax.servlet.ServletRequestListener.void requestInitialized(javax.servlet.ServletRequestEvent)"], ["javax.servlet.ServletRequestWrapper", "javax.servlet.ServletRequestWrapper(javax.servlet.ServletRequest)"], ["javax.servlet.ServletRequest", "javax.servlet.ServletRequestWrapper.getRequest()"], ["void", "javax.servlet.ServletRequestWrapper.setRequest(javax.servlet.ServletRequest)"], ["java.lang.Object", "javax.servlet.ServletRequestWrapper.getAttribute(java.lang.String)"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getCharacterEncoding()"], ["void", "javax.servlet.ServletRequestWrapper.setCharacterEncoding(java.lang.String)"], ["int", "javax.servlet.ServletRequestWrapper.getContentLength()"], ["long", "javax.servlet.ServletRequestWrapper.getContentLengthLong()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getContentType()"], ["javax.servlet.ServletInputStream", "javax.servlet.ServletRequestWrapper.getInputStream()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "javax.servlet.ServletRequestWrapper.getParameterMap()"], ["java.lang.String[]", "javax.servlet.ServletRequestWrapper.getParameterValues(java.lang.String)"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getProtocol()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getScheme()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getServerName()"], ["int", "javax.servlet.ServletRequestWrapper.getServerPort()"], ["java.io.BufferedReader", "javax.servlet.ServletRequestWrapper.getReader()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getRemoteAddr()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getRemoteHost()"], ["void", "javax.servlet.ServletRequestWrapper.setAttribute(java.lang.String, java.lang.Object)"], ["void", "javax.servlet.ServletRequestWrapper.removeAttribute(java.lang.String)"], ["java.util.Locale", "javax.servlet.ServletRequestWrapper.getLocale()"], ["boolean", "javax.servlet.ServletRequestWrapper.isSecure()"], ["javax.servlet.RequestDispatcher", "javax.servlet.ServletRequestWrapper.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getRealPath(java.lang.String)"], ["int", "javax.servlet.ServletRequestWrapper.getRemotePort()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getLocalName()"], ["java.lang.String", "javax.servlet.ServletRequestWrapper.getLocalAddr()"], ["int", "javax.servlet.ServletRequestWrapper.getLocalPort()"], ["javax.servlet.ServletContext", "javax.servlet.ServletRequestWrapper.getServletContext()"], ["javax.servlet.AsyncContext", "javax.servlet.ServletRequestWrapper.startAsync()"], ["javax.servlet.AsyncContext", "javax.servlet.ServletRequestWrapper.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["boolean", "javax.servlet.ServletRequestWrapper.isAsyncStarted()"], ["boolean", "javax.servlet.ServletRequestWrapper.isAsyncSupported()"], ["javax.servlet.AsyncContext", "javax.servlet.ServletRequestWrapper.getAsyncContext()"], ["boolean", "javax.servlet.ServletRequestWrapper.isWrapperFor(javax.servlet.ServletRequest)"], ["boolean", "javax.servlet.ServletRequestWrapper.isWrapperFor(java.lang.Class<?>)"], ["javax.servlet.DispatcherType", "javax.servlet.ServletRequestWrapper.getDispatcherType()"], ["javax.servlet.ServletResponseWrapper", "javax.servlet.ServletResponseWrapper(javax.servlet.ServletResponse)"], ["javax.servlet.ServletResponse", "javax.servlet.ServletResponseWrapper.getResponse()"], ["void", "javax.servlet.ServletResponseWrapper.setResponse(javax.servlet.ServletResponse)"], ["void", "javax.servlet.ServletResponseWrapper.setCharacterEncoding(java.lang.String)"], ["java.lang.String", "javax.servlet.ServletResponseWrapper.getCharacterEncoding()"], ["javax.servlet.ServletOutputStream", "javax.servlet.ServletResponseWrapper.getOutputStream()"], ["java.io.PrintWriter", "javax.servlet.ServletResponseWrapper.getWriter()"], ["void", "javax.servlet.ServletResponseWrapper.setContentLength(int)"], ["void", "javax.servlet.ServletResponseWrapper.setContentLengthLong(long)"], ["void", "javax.servlet.ServletResponseWrapper.setContentType(java.lang.String)"], ["java.lang.String", "javax.servlet.ServletResponseWrapper.getContentType()"], ["void", "javax.servlet.ServletResponseWrapper.setBufferSize(int)"], ["int", "javax.servlet.ServletResponseWrapper.getBufferSize()"], ["void", "javax.servlet.ServletResponseWrapper.flushBuffer()"], ["boolean", "javax.servlet.ServletResponseWrapper.isCommitted()"], ["void", "javax.servlet.ServletResponseWrapper.reset()"], ["void", "javax.servlet.ServletResponseWrapper.resetBuffer()"], ["void", "javax.servlet.ServletResponseWrapper.setLocale(java.util.Locale)"], ["java.util.Locale", "javax.servlet.ServletResponseWrapper.getLocale()"], ["boolean", "javax.servlet.ServletResponseWrapper.isWrapperFor(javax.servlet.ServletResponse)"], ["boolean", "javax.servlet.ServletResponseWrapper.isWrapperFor(java.lang.Class<?>)"], ["javax.servlet.ServletSecurityElement", "javax.servlet.ServletSecurityElement()"], ["javax.servlet.ServletSecurityElement", "javax.servlet.ServletSecurityElement(javax.servlet.HttpConstraintElement)"], ["javax.servlet.ServletSecurityElement", "javax.servlet.ServletSecurityElement(java.util.Collection<javax.servlet.HttpMethodConstraintElement>)"], ["javax.servlet.ServletSecurityElement", "javax.servlet.ServletSecurityElement(javax.servlet.HttpConstraintElement, java.util.Collection<javax.servlet.HttpMethodConstraintElement>)"], ["javax.servlet.ServletSecurityElement", "javax.servlet.ServletSecurityElement(javax.servlet.annotation.ServletSecurity)"], ["javax.servlet.SessionTrackingMode[]", "javax.servlet.SessionTrackingMode.values()"], ["javax.servlet.SessionTrackingMode", "javax.servlet.SessionTrackingMode.valueOf(java.lang.String)"], ["javax.servlet.UnavailableException", "javax.servlet.UnavailableException(javax.servlet.Servlet, java.lang.String)"], ["javax.servlet.UnavailableException", "javax.servlet.UnavailableException(int, javax.servlet.Servlet, java.lang.String)"], ["javax.servlet.UnavailableException", "javax.servlet.UnavailableException(java.lang.String)"], ["javax.servlet.UnavailableException", "javax.servlet.UnavailableException(java.lang.String, int)"], ["boolean", "javax.servlet.UnavailableException.isPermanent()"], ["javax.servlet.Servlet", "javax.servlet.UnavailableException.getServlet()"], ["int", "javax.servlet.UnavailableException.getUnavailableSeconds()"], ["javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic[]", "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic.values()"], ["javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic", "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic.valueOf(java.lang.String)"], ["javax.servlet.annotation.ServletSecurity$TransportGuarantee[]", "javax.servlet.annotation.ServletSecurity$TransportGuarantee.values()"], ["javax.servlet.annotation.ServletSecurity$TransportGuarantee", "javax.servlet.annotation.ServletSecurity$TransportGuarantee.valueOf(java.lang.String)"], ["java.lang.Boolean", "javax.servlet.http.Cookie$1.run()"], ["java.lang.Object", "javax.servlet.http.Cookie$1.run()"], ["java.lang.String", "javax.servlet.http.Cookie$2.run()"], ["java.lang.Object", "javax.servlet.http.Cookie$2.run()"], ["java.lang.String", "javax.servlet.http.Cookie$3.run()"], ["java.lang.Object", "javax.servlet.http.Cookie$3.run()"], ["javax.servlet.http.Cookie", "javax.servlet.http.Cookie(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.Cookie.setComment(java.lang.String)"], ["java.lang.String", "javax.servlet.http.Cookie.getComment()"], ["void", "javax.servlet.http.Cookie.setDomain(java.lang.String)"], ["java.lang.String", "javax.servlet.http.Cookie.getDomain()"], ["void", "javax.servlet.http.Cookie.setMaxAge(int)"], ["int", "javax.servlet.http.Cookie.getMaxAge()"], ["void", "javax.servlet.http.Cookie.setPath(java.lang.String)"], ["java.lang.String", "javax.servlet.http.Cookie.getPath()"], ["void", "javax.servlet.http.Cookie.setSecure(boolean)"], ["boolean", "javax.servlet.http.Cookie.getSecure()"], ["java.lang.String", "javax.servlet.http.Cookie.getName()"], ["void", "javax.servlet.http.Cookie.setValue(java.lang.String)"], ["java.lang.String", "javax.servlet.http.Cookie.getValue()"], ["int", "javax.servlet.http.Cookie.getVersion()"], ["void", "javax.servlet.http.Cookie.setVersion(int)"], ["java.lang.Object", "javax.servlet.http.Cookie.clone()"], ["void", "javax.servlet.http.Cookie.setHttpOnly(boolean)"], ["boolean", "javax.servlet.http.Cookie.isHttpOnly()"], ["javax.servlet.http.HttpFilter", "javax.servlet.http.HttpFilter()"], ["void", "javax.servlet.http.HttpFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["javax.servlet.http.HttpServlet", "javax.servlet.http.HttpServlet()"], ["void", "javax.servlet.http.HttpServlet.service(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["java.lang.String", "javax.servlet.http.HttpServletRequest$1.getMatchValue()"], ["java.lang.String", "javax.servlet.http.HttpServletRequest$1.getPattern()"], ["java.lang.String", "javax.servlet.http.HttpServletRequest$1.getServletName()"], ["javax.servlet.http.MappingMatch", "javax.servlet.http.HttpServletRequest$1.getMappingMatch()"], ["default", "javax.servlet.http.HttpServletRequest.javax.servlet.http.HttpServletMapping getHttpServletMapping()"], ["default", "javax.servlet.http.HttpServletRequest.javax.servlet.http.PushBuilder newPushBuilder()"], ["java.util.Map<java.lang.String, java.lang.String>", "javax.servlet.http.HttpServletRequest.getTrailerFields()"], ["default", "javax.servlet.http.HttpServletRequest.boolean isTrailerFieldsReady()"], ["javax.servlet.http.HttpServletRequestWrapper", "javax.servlet.http.HttpServletRequestWrapper(javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getAuthType()"], ["javax.servlet.http.Cookie[]", "javax.servlet.http.HttpServletRequestWrapper.getCookies()"], ["long", "javax.servlet.http.HttpServletRequestWrapper.getDateHeader(java.lang.String)"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getHeader(java.lang.String)"], ["int", "javax.servlet.http.HttpServletRequestWrapper.getIntHeader(java.lang.String)"], ["javax.servlet.http.HttpServletMapping", "javax.servlet.http.HttpServletRequestWrapper.getHttpServletMapping()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getMethod()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getPathInfo()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getPathTranslated()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getContextPath()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getQueryString()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getRemoteUser()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isUserInRole(java.lang.String)"], ["java.security.Principal", "javax.servlet.http.HttpServletRequestWrapper.getUserPrincipal()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getRequestedSessionId()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getRequestURI()"], ["java.lang.StringBuffer", "javax.servlet.http.HttpServletRequestWrapper.getRequestURL()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.getServletPath()"], ["javax.servlet.http.HttpSession", "javax.servlet.http.HttpServletRequestWrapper.getSession(boolean)"], ["javax.servlet.http.HttpSession", "javax.servlet.http.HttpServletRequestWrapper.getSession()"], ["java.lang.String", "javax.servlet.http.HttpServletRequestWrapper.changeSessionId()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isRequestedSessionIdValid()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isRequestedSessionIdFromCookie()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isRequestedSessionIdFromURL()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isRequestedSessionIdFromUrl()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.authenticate(javax.servlet.http.HttpServletResponse)"], ["void", "javax.servlet.http.HttpServletRequestWrapper.login(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.HttpServletRequestWrapper.logout()"], ["javax.servlet.http.Part", "javax.servlet.http.HttpServletRequestWrapper.getPart(java.lang.String)"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "javax.servlet.http.HttpServletRequestWrapper.upgrade(java.lang.Class<T>)"], ["javax.servlet.http.PushBuilder", "javax.servlet.http.HttpServletRequestWrapper.newPushBuilder()"], ["java.util.Map<java.lang.String, java.lang.String>", "javax.servlet.http.HttpServletRequestWrapper.getTrailerFields()"], ["boolean", "javax.servlet.http.HttpServletRequestWrapper.isTrailerFieldsReady()"], ["default", "javax.servlet.http.HttpServletResponse.void setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>)"], ["java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>", "javax.servlet.http.HttpServletResponse.getTrailerFields()"], ["javax.servlet.http.HttpServletResponseWrapper", "javax.servlet.http.HttpServletResponseWrapper(javax.servlet.http.HttpServletResponse)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.addCookie(javax.servlet.http.Cookie)"], ["boolean", "javax.servlet.http.HttpServletResponseWrapper.containsHeader(java.lang.String)"], ["java.lang.String", "javax.servlet.http.HttpServletResponseWrapper.encodeURL(java.lang.String)"], ["java.lang.String", "javax.servlet.http.HttpServletResponseWrapper.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "javax.servlet.http.HttpServletResponseWrapper.encodeUrl(java.lang.String)"], ["java.lang.String", "javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.sendError(int, java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.sendError(int)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.sendRedirect(java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setDateHeader(java.lang.String, long)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.addDateHeader(java.lang.String, long)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setHeader(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.addHeader(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setIntHeader(java.lang.String, int)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.addIntHeader(java.lang.String, int)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setStatus(int)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setStatus(int, java.lang.String)"], ["int", "javax.servlet.http.HttpServletResponseWrapper.getStatus()"], ["java.lang.String", "javax.servlet.http.HttpServletResponseWrapper.getHeader(java.lang.String)"], ["void", "javax.servlet.http.HttpServletResponseWrapper.setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>)"], ["java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>", "javax.servlet.http.HttpServletResponseWrapper.getTrailerFields()"], ["default", "javax.servlet.http.HttpSessionActivationListener.void sessionWillPassivate(javax.servlet.http.HttpSessionEvent)"], ["default", "javax.servlet.http.HttpSessionActivationListener.void sessionDidActivate(javax.servlet.http.HttpSessionEvent)"], ["default", "javax.servlet.http.HttpSessionAttributeListener.void attributeAdded(javax.servlet.http.HttpSessionBindingEvent)"], ["default", "javax.servlet.http.HttpSessionAttributeListener.void attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)"], ["default", "javax.servlet.http.HttpSessionAttributeListener.void attributeReplaced(javax.servlet.http.HttpSessionBindingEvent)"], ["javax.servlet.http.HttpSessionBindingEvent", "javax.servlet.http.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String)"], ["javax.servlet.http.HttpSessionBindingEvent", "javax.servlet.http.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String, java.lang.Object)"], ["javax.servlet.http.HttpSession", "javax.servlet.http.HttpSessionBindingEvent.getSession()"], ["java.lang.String", "javax.servlet.http.HttpSessionBindingEvent.getName()"], ["java.lang.Object", "javax.servlet.http.HttpSessionBindingEvent.getValue()"], ["default", "javax.servlet.http.HttpSessionBindingListener.void valueBound(javax.servlet.http.HttpSessionBindingEvent)"], ["default", "javax.servlet.http.HttpSessionBindingListener.void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)"], ["javax.servlet.http.HttpSessionEvent", "javax.servlet.http.HttpSessionEvent(javax.servlet.http.HttpSession)"], ["javax.servlet.http.HttpSession", "javax.servlet.http.HttpSessionEvent.getSession()"], ["default", "javax.servlet.http.HttpSessionListener.void sessionCreated(javax.servlet.http.HttpSessionEvent)"], ["default", "javax.servlet.http.HttpSessionListener.void sessionDestroyed(javax.servlet.http.HttpSessionEvent)"], ["javax.servlet.http.HttpUtils", "javax.servlet.http.HttpUtils()"], ["java.util.Hashtable<java.lang.String, java.lang.String[]>", "javax.servlet.http.HttpUtils.parseQueryString(java.lang.String)"], ["java.util.Hashtable<java.lang.String, java.lang.String[]>", "javax.servlet.http.HttpUtils.parsePostData(int, javax.servlet.ServletInputStream)"], ["java.lang.StringBuffer", "javax.servlet.http.HttpUtils.getRequestURL(javax.servlet.http.HttpServletRequest)"], ["javax.servlet.http.MappingMatch[]", "javax.servlet.http.MappingMatch.values()"], ["javax.servlet.http.MappingMatch", "javax.servlet.http.MappingMatch.valueOf(java.lang.String)"], ["void", "javax.servlet.http.NoBodyOutputStream.write(int)"], ["void", "javax.servlet.http.NoBodyOutputStream.write(byte[], int, int)"], ["boolean", "javax.servlet.http.NoBodyOutputStream.isReady()"], ["void", "javax.servlet.http.NoBodyOutputStream.setWriteListener(javax.servlet.WriteListener)"], ["void", "javax.servlet.http.NoBodyResponse.setContentLength(int)"], ["void", "javax.servlet.http.NoBodyResponse.setContentLengthLong(long)"], ["void", "javax.servlet.http.NoBodyResponse.setHeader(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.NoBodyResponse.addHeader(java.lang.String, java.lang.String)"], ["void", "javax.servlet.http.NoBodyResponse.setIntHeader(java.lang.String, int)"], ["void", "javax.servlet.http.NoBodyResponse.addIntHeader(java.lang.String, int)"], ["javax.servlet.ServletOutputStream", "javax.servlet.http.NoBodyResponse.getOutputStream()"], ["java.io.PrintWriter", "javax.servlet.http.NoBodyResponse.getWriter()"], ["java.lang.String", "org.apache.catalina.Container.getConfigPath(org.apache.catalina.Container, java.lang.String)"], ["org.apache.catalina.Service", "org.apache.catalina.Container.getService(org.apache.catalina.Container)"], ["org.apache.catalina.ContainerEvent", "org.apache.catalina.ContainerEvent(org.apache.catalina.Container, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.ContainerEvent.getData()"], ["org.apache.catalina.Container", "org.apache.catalina.ContainerEvent.getContainer()"], ["java.lang.String", "org.apache.catalina.ContainerEvent.getType()"], ["java.lang.String", "org.apache.catalina.ContainerEvent.toString()"], ["default", "org.apache.catalina.Context.void addServletMappingDecoded(java.lang.String, java.lang.String)"], ["org.apache.catalina.Globals", "org.apache.catalina.Globals()"], ["org.apache.catalina.LifecycleEvent", "org.apache.catalina.LifecycleEvent(org.apache.catalina.Lifecycle, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.LifecycleEvent.getData()"], ["org.apache.catalina.Lifecycle", "org.apache.catalina.LifecycleEvent.getLifecycle()"], ["java.lang.String", "org.apache.catalina.LifecycleEvent.getType()"], ["org.apache.catalina.LifecycleException", "org.apache.catalina.LifecycleException()"], ["org.apache.catalina.LifecycleException", "org.apache.catalina.LifecycleException(java.lang.String)"], ["org.apache.catalina.LifecycleException", "org.apache.catalina.LifecycleException(java.lang.Throwable)"], ["org.apache.catalina.LifecycleException", "org.apache.catalina.LifecycleException(java.lang.String, java.lang.Throwable)"], ["org.apache.catalina.LifecycleState[]", "org.apache.catalina.LifecycleState.values()"], ["org.apache.catalina.LifecycleState", "org.apache.catalina.LifecycleState.valueOf(java.lang.String)"], ["boolean", "org.apache.catalina.LifecycleState.isAvailable()"], ["java.lang.String", "org.apache.catalina.LifecycleState.getLifecycleEvent()"], ["default", "org.apache.catalina.Manager.java.lang.String rotateSessionId(org.apache.catalina.Session)"], ["default", "org.apache.catalina.Manager.boolean getNotifyBindingListenerOnUnchangedValue()"], ["default", "org.apache.catalina.Manager.boolean getNotifyAttributeListenerOnUnchangedValue()"], ["default", "org.apache.catalina.Realm.java.security.Principal authenticate(org.ietf.jgss.GSSName, org.ietf.jgss.GSSCredential)"], ["default", "org.apache.catalina.Realm.boolean isAvailable()"], ["org.apache.catalina.SessionEvent", "org.apache.catalina.SessionEvent(org.apache.catalina.Session, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.SessionEvent.getData()"], ["org.apache.catalina.Session", "org.apache.catalina.SessionEvent.getSession()"], ["java.lang.String", "org.apache.catalina.SessionEvent.getType()"], ["java.lang.String", "org.apache.catalina.SessionEvent.toString()"], ["default", "org.apache.catalina.UserDatabase.void backgroundProcess()"], ["org.apache.catalina.WebResourceRoot$ResourceSetType[]", "org.apache.catalina.WebResourceRoot$ResourceSetType.values()"], ["org.apache.catalina.WebResourceRoot$ResourceSetType", "org.apache.catalina.WebResourceRoot$ResourceSetType.valueOf(java.lang.String)"], ["org.apache.catalina.authenticator.AuthenticatorBase$AllowCorsPreflight[]", "org.apache.catalina.authenticator.AuthenticatorBase$AllowCorsPreflight.values()"], ["org.apache.catalina.authenticator.AuthenticatorBase$AllowCorsPreflight", "org.apache.catalina.authenticator.AuthenticatorBase$AllowCorsPreflight.valueOf(java.lang.String)"], ["org.apache.catalina.authenticator.AuthenticatorBase", "org.apache.catalina.authenticator.AuthenticatorBase()"], ["java.lang.String", "org.apache.catalina.authenticator.AuthenticatorBase.getAllowCorsPreflight()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setAllowCorsPreflight(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.getAlwaysUseSession()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setAlwaysUseSession(boolean)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.getCache()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setCache(boolean)"], ["org.apache.catalina.Container", "org.apache.catalina.authenticator.AuthenticatorBase.getContainer()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setContainer(org.apache.catalina.Container)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.getDisableProxyCaching()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setDisableProxyCaching(boolean)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.getSecurePagesWithPragma()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setSecurePagesWithPragma(boolean)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.getChangeSessionIdOnAuthentication()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setChangeSessionIdOnAuthentication(boolean)"], ["java.lang.String", "org.apache.catalina.authenticator.AuthenticatorBase.getSecureRandomClass()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setSecureRandomClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.AuthenticatorBase.getSecureRandomAlgorithm()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setSecureRandomAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.AuthenticatorBase.getSecureRandomProvider()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setSecureRandomProvider(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.AuthenticatorBase.getJaspicCallbackHandlerClass()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setJaspicCallbackHandlerClass(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.isSendAuthInfoResponseHeaders()"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.setSendAuthInfoResponseHeaders(boolean)"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["boolean", "org.apache.catalina.authenticator.AuthenticatorBase.authenticate(org.apache.catalina.connector.Request, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.register(org.apache.catalina.connector.Request, javax.servlet.http.HttpServletResponse, java.security.Principal, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.login(java.lang.String, java.lang.String, org.apache.catalina.connector.Request)"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.logout(org.apache.catalina.connector.Request)"], ["void", "org.apache.catalina.authenticator.AuthenticatorBase.notify(java.lang.String, java.lang.String)"], ["org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials", "org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials(org.apache.tomcat.util.buf.ByteChunk, java.nio.charset.Charset)"], ["org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials", "org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials(org.apache.tomcat.util.buf.ByteChunk, java.nio.charset.Charset, boolean)"], ["java.lang.String", "org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials.getUsername()"], ["java.lang.String", "org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials.getPassword()"], ["org.apache.catalina.authenticator.BasicAuthenticator", "org.apache.catalina.authenticator.BasicAuthenticator()"], ["java.lang.String", "org.apache.catalina.authenticator.BasicAuthenticator.getCharset()"], ["void", "org.apache.catalina.authenticator.BasicAuthenticator.setCharset(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.BasicAuthenticator.getTrimCredentials()"], ["void", "org.apache.catalina.authenticator.BasicAuthenticator.setTrimCredentials(boolean)"], ["org.apache.catalina.authenticator.Constants", "org.apache.catalina.authenticator.Constants()"], ["org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo(java.lang.String, long, java.lang.String, java.util.Map<java.lang.String, org.apache.catalina.authenticator.DigestAuthenticator$NonceInfo>, boolean)"], ["java.lang.String", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.getUsername()"], ["boolean", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.parse(org.apache.catalina.connector.Request, java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.validate(org.apache.catalina.connector.Request)"], ["boolean", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.isNonceStale()"], ["java.security.Principal", "org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.authenticate(org.apache.catalina.Realm)"], ["org.apache.catalina.authenticator.DigestAuthenticator$NonceInfo", "org.apache.catalina.authenticator.DigestAuthenticator$NonceInfo(long, int)"], ["synchronized", "org.apache.catalina.authenticator.DigestAuthenticator$NonceInfo.boolean nonceCountValid(long)"], ["long", "org.apache.catalina.authenticator.DigestAuthenticator$NonceInfo.getTimestamp()"], ["org.apache.catalina.authenticator.DigestAuthenticator", "org.apache.catalina.authenticator.DigestAuthenticator()"], ["int", "org.apache.catalina.authenticator.DigestAuthenticator.getNonceCountWindowSize()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setNonceCountWindowSize(int)"], ["int", "org.apache.catalina.authenticator.DigestAuthenticator.getNonceCacheSize()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setNonceCacheSize(int)"], ["java.lang.String", "org.apache.catalina.authenticator.DigestAuthenticator.getKey()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setKey(java.lang.String)"], ["long", "org.apache.catalina.authenticator.DigestAuthenticator.getNonceValidity()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setNonceValidity(long)"], ["java.lang.String", "org.apache.catalina.authenticator.DigestAuthenticator.getOpaque()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setOpaque(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.DigestAuthenticator.isValidateUri()"], ["void", "org.apache.catalina.authenticator.DigestAuthenticator.setValidateUri(boolean)"], ["org.apache.catalina.authenticator.FormAuthenticator", "org.apache.catalina.authenticator.FormAuthenticator()"], ["java.lang.String", "org.apache.catalina.authenticator.FormAuthenticator.getCharacterEncoding()"], ["void", "org.apache.catalina.authenticator.FormAuthenticator.setCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.FormAuthenticator.getLandingPage()"], ["void", "org.apache.catalina.authenticator.FormAuthenticator.setLandingPage(java.lang.String)"], ["org.apache.catalina.authenticator.NonLoginAuthenticator", "org.apache.catalina.authenticator.NonLoginAuthenticator()"], ["org.apache.catalina.authenticator.SSLAuthenticator", "org.apache.catalina.authenticator.SSLAuthenticator()"], ["org.apache.catalina.authenticator.SavedRequest", "org.apache.catalina.authenticator.SavedRequest()"], ["void", "org.apache.catalina.authenticator.SavedRequest.addCookie(javax.servlet.http.Cookie)"], ["void", "org.apache.catalina.authenticator.SavedRequest.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.authenticator.SavedRequest.addLocale(java.util.Locale)"], ["java.lang.String", "org.apache.catalina.authenticator.SavedRequest.getMethod()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setMethod(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.SavedRequest.getQueryString()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setQueryString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.SavedRequest.getRequestURI()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setRequestURI(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.SavedRequest.getDecodedRequestURI()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setDecodedRequestURI(java.lang.String)"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.catalina.authenticator.SavedRequest.getBody()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setBody(org.apache.tomcat.util.buf.ByteChunk)"], ["java.lang.String", "org.apache.catalina.authenticator.SavedRequest.getContentType()"], ["void", "org.apache.catalina.authenticator.SavedRequest.setContentType(java.lang.String)"], ["org.apache.catalina.authenticator.SingleSignOn", "org.apache.catalina.authenticator.SingleSignOn()"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOn.getCookieDomain()"], ["void", "org.apache.catalina.authenticator.SingleSignOn.setCookieDomain(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.SingleSignOn.getRequireReauthentication()"], ["void", "org.apache.catalina.authenticator.SingleSignOn.setRequireReauthentication(boolean)"], ["void", "org.apache.catalina.authenticator.SingleSignOn.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.authenticator.SingleSignOn.sessionDestroyed(java.lang.String, org.apache.catalina.Session)"], ["org.apache.catalina.authenticator.SingleSignOnEntry", "org.apache.catalina.authenticator.SingleSignOnEntry(java.security.Principal, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.authenticator.SingleSignOnEntry.addSession(org.apache.catalina.authenticator.SingleSignOn, java.lang.String, org.apache.catalina.Session)"], ["void", "org.apache.catalina.authenticator.SingleSignOnEntry.removeSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnEntry.getAuthType()"], ["boolean", "org.apache.catalina.authenticator.SingleSignOnEntry.getCanReauthenticate()"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnEntry.getPassword()"], ["java.security.Principal", "org.apache.catalina.authenticator.SingleSignOnEntry.getPrincipal()"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnEntry.getUsername()"], ["synchronized", "org.apache.catalina.authenticator.SingleSignOnEntry.void updateCredentials(java.security.Principal, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.authenticator.SingleSignOnListener", "org.apache.catalina.authenticator.SingleSignOnListener(java.lang.String)"], ["void", "org.apache.catalina.authenticator.SingleSignOnListener.sessionEvent(org.apache.catalina.SessionEvent)"], ["org.apache.catalina.authenticator.SingleSignOnSessionKey", "org.apache.catalina.authenticator.SingleSignOnSessionKey(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnSessionKey.getSessionId()"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnSessionKey.getContextName()"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnSessionKey.getHostName()"], ["int", "org.apache.catalina.authenticator.SingleSignOnSessionKey.hashCode()"], ["boolean", "org.apache.catalina.authenticator.SingleSignOnSessionKey.equals(java.lang.Object)"], ["java.lang.String", "org.apache.catalina.authenticator.SingleSignOnSessionKey.toString()"], ["org.ietf.jgss.GSSCredential", "org.apache.catalina.authenticator.SpnegoAuthenticator$1.run()"], ["java.lang.Object", "org.apache.catalina.authenticator.SpnegoAuthenticator$1.run()"], ["org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction", "org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction(org.ietf.jgss.GSSContext, byte[])"], ["byte[]", "org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction.run()"], ["java.lang.Object", "org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction.run()"], ["org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction", "org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction(org.apache.catalina.Realm, org.ietf.jgss.GSSContext, boolean)"], ["java.security.Principal", "org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction.run()"], ["java.lang.Object", "org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction.run()"], ["void", "org.apache.catalina.authenticator.SpnegoAuthenticator$SpnegoTokenFixer.fix(byte[])"], ["org.apache.catalina.authenticator.SpnegoAuthenticator", "org.apache.catalina.authenticator.SpnegoAuthenticator()"], ["java.lang.String", "org.apache.catalina.authenticator.SpnegoAuthenticator.getLoginConfigName()"], ["void", "org.apache.catalina.authenticator.SpnegoAuthenticator.setLoginConfigName(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.SpnegoAuthenticator.isStoreDelegatedCredential()"], ["void", "org.apache.catalina.authenticator.SpnegoAuthenticator.setStoreDelegatedCredential(boolean)"], ["java.lang.String", "org.apache.catalina.authenticator.SpnegoAuthenticator.getNoKeepAliveUserAgents()"], ["void", "org.apache.catalina.authenticator.SpnegoAuthenticator.setNoKeepAliveUserAgents(java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.SpnegoAuthenticator.getApplyJava8u40Fix()"], ["void", "org.apache.catalina.authenticator.SpnegoAuthenticator.setApplyJava8u40Fix(boolean)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationContextImpl.getMessageLayer()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationContextImpl.getAppContext()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationContextImpl.getDescription()"], ["boolean", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationContextImpl.isPersistent()"], ["org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationListenerWrapper", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationListenerWrapper(java.lang.String, java.lang.String, javax.security.auth.message.config.RegistrationListener)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationListenerWrapper.getMessageLayer()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationListenerWrapper.getAppContext()"], ["javax.security.auth.message.config.RegistrationListener", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl$RegistrationListenerWrapper.getListener()"], ["org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl()"], ["javax.security.auth.message.config.AuthConfigProvider", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.getConfigProvider(java.lang.String, java.lang.String, javax.security.auth.message.config.RegistrationListener)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.registerConfigProvider(java.lang.String, java.util.Map, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.registerConfigProvider(javax.security.auth.message.config.AuthConfigProvider, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.removeRegistration(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.detachListener(javax.security.auth.message.config.RegistrationListener, java.lang.String, java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.getRegistrationIDs(javax.security.auth.message.config.AuthConfigProvider)"], ["javax.security.auth.message.config.AuthConfigFactory$RegistrationContext", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.getRegistrationContext(java.lang.String)"], ["void", "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl.refresh()"], ["javax.security.auth.callback.CallbackHandler", "org.apache.catalina.authenticator.jaspic.CallbackHandlerImpl.getInstance()"], ["void", "org.apache.catalina.authenticator.jaspic.CallbackHandlerImpl.handle(javax.security.auth.callback.Callback[])"], ["org.apache.catalina.authenticator.jaspic.MessageInfoImpl", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl()"], ["org.apache.catalina.authenticator.jaspic.MessageInfoImpl", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)"], ["java.util.Map", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl.getMap()"], ["java.lang.Object", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl.getRequestMessage()"], ["java.lang.Object", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl.getResponseMessage()"], ["void", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl.setRequestMessage(java.lang.Object)"], ["void", "org.apache.catalina.authenticator.jaspic.MessageInfoImpl.setResponseMessage(java.lang.Object)"], ["org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property.getName()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property.setName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property.getValue()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property.setValue(java.lang.String)"], ["org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getClassName()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.setClassName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getLayer()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.setLayer(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getAppContext()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.setAppContext(java.lang.String)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getDescription()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.setDescription(java.lang.String)"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.addProperty(org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Property)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getProperties()"], ["org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Providers", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Providers()"], ["void", "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Providers.addProvider(org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider)"], ["org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider", "org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider(java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.message.config.AuthConfigFactory)"], ["javax.security.auth.message.config.ClientAuthConfig", "org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider.getClientAuthConfig(java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler)"], ["javax.security.auth.message.config.ServerAuthConfig", "org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider.getServerAuthConfig(java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler)"], ["void", "org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider.refresh()"], ["org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig(java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler, java.util.Map<java.lang.String, java.lang.String>)"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.getMessageLayer()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.getAppContext()"], ["java.lang.String", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.getAuthContextID(javax.security.auth.message.MessageInfo)"], ["void", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.refresh()"], ["boolean", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.isProtected()"], ["javax.security.auth.message.config.ServerAuthContext", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig.getAuthContext(java.lang.String, javax.security.auth.Subject, java.util.Map)"], ["org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext(java.util.List<javax.security.auth.message.module.ServerAuthModule>)"], ["javax.security.auth.message.AuthStatus", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext.validateRequest(javax.security.auth.message.MessageInfo, javax.security.auth.Subject, javax.security.auth.Subject)"], ["javax.security.auth.message.AuthStatus", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext.secureResponse(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)"], ["void", "org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext.cleanSubject(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)"], ["org.apache.catalina.connector.ClientAbortException", "org.apache.catalina.connector.ClientAbortException()"], ["org.apache.catalina.connector.ClientAbortException", "org.apache.catalina.connector.ClientAbortException(java.lang.String)"], ["org.apache.catalina.connector.ClientAbortException", "org.apache.catalina.connector.ClientAbortException(java.lang.Throwable)"], ["org.apache.catalina.connector.ClientAbortException", "org.apache.catalina.connector.ClientAbortException(java.lang.String, java.lang.Throwable)"], ["org.apache.catalina.connector.Connector", "org.apache.catalina.connector.Connector()"], ["org.apache.catalina.connector.Connector", "org.apache.catalina.connector.Connector(java.lang.String)"], ["org.apache.catalina.connector.Connector", "org.apache.catalina.connector.Connector(org.apache.coyote.ProtocolHandler)"], ["java.lang.Object", "org.apache.catalina.connector.Connector.getProperty(java.lang.String)"], ["boolean", "org.apache.catalina.connector.Connector.setProperty(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.catalina.connector.Connector.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.connector.Connector.setAttribute(java.lang.String, java.lang.Object)"], ["org.apache.catalina.Service", "org.apache.catalina.connector.Connector.getService()"], ["void", "org.apache.catalina.connector.Connector.setService(org.apache.catalina.Service)"], ["boolean", "org.apache.catalina.connector.Connector.getAllowTrace()"], ["void", "org.apache.catalina.connector.Connector.setAllowTrace(boolean)"], ["long", "org.apache.catalina.connector.Connector.getAsyncTimeout()"], ["void", "org.apache.catalina.connector.Connector.setAsyncTimeout(long)"], ["boolean", "org.apache.catalina.connector.Connector.getDiscardFacades()"], ["void", "org.apache.catalina.connector.Connector.setDiscardFacades(boolean)"], ["boolean", "org.apache.catalina.connector.Connector.getEnableLookups()"], ["void", "org.apache.catalina.connector.Connector.setEnableLookups(boolean)"], ["int", "org.apache.catalina.connector.Connector.getMaxCookieCount()"], ["void", "org.apache.catalina.connector.Connector.setMaxCookieCount(int)"], ["int", "org.apache.catalina.connector.Connector.getMaxParameterCount()"], ["void", "org.apache.catalina.connector.Connector.setMaxParameterCount(int)"], ["int", "org.apache.catalina.connector.Connector.getMaxPostSize()"], ["void", "org.apache.catalina.connector.Connector.setMaxPostSize(int)"], ["int", "org.apache.catalina.connector.Connector.getMaxSavePostSize()"], ["void", "org.apache.catalina.connector.Connector.setMaxSavePostSize(int)"], ["java.lang.String", "org.apache.catalina.connector.Connector.getParseBodyMethods()"], ["void", "org.apache.catalina.connector.Connector.setParseBodyMethods(java.lang.String)"], ["int", "org.apache.catalina.connector.Connector.getPort()"], ["void", "org.apache.catalina.connector.Connector.setPort(int)"], ["int", "org.apache.catalina.connector.Connector.getPortOffset()"], ["void", "org.apache.catalina.connector.Connector.setPortOffset(int)"], ["int", "org.apache.catalina.connector.Connector.getPortWithOffset()"], ["int", "org.apache.catalina.connector.Connector.getLocalPort()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getProtocol()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getProtocolHandlerClassName()"], ["org.apache.coyote.ProtocolHandler", "org.apache.catalina.connector.Connector.getProtocolHandler()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getProxyName()"], ["void", "org.apache.catalina.connector.Connector.setProxyName(java.lang.String)"], ["int", "org.apache.catalina.connector.Connector.getProxyPort()"], ["void", "org.apache.catalina.connector.Connector.setProxyPort(int)"], ["int", "org.apache.catalina.connector.Connector.getRedirectPort()"], ["void", "org.apache.catalina.connector.Connector.setRedirectPort(int)"], ["int", "org.apache.catalina.connector.Connector.getRedirectPortWithOffset()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getScheme()"], ["void", "org.apache.catalina.connector.Connector.setScheme(java.lang.String)"], ["boolean", "org.apache.catalina.connector.Connector.getSecure()"], ["void", "org.apache.catalina.connector.Connector.setSecure(boolean)"], ["java.lang.String", "org.apache.catalina.connector.Connector.getURIEncoding()"], ["java.nio.charset.Charset", "org.apache.catalina.connector.Connector.getURICharset()"], ["void", "org.apache.catalina.connector.Connector.setURIEncoding(java.lang.String)"], ["boolean", "org.apache.catalina.connector.Connector.getUseBodyEncodingForURI()"], ["void", "org.apache.catalina.connector.Connector.setUseBodyEncodingForURI(boolean)"], ["boolean", "org.apache.catalina.connector.Connector.getXpoweredBy()"], ["void", "org.apache.catalina.connector.Connector.setXpoweredBy(boolean)"], ["void", "org.apache.catalina.connector.Connector.setUseIPVHosts(boolean)"], ["boolean", "org.apache.catalina.connector.Connector.getUseIPVHosts()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getExecutorName()"], ["void", "org.apache.catalina.connector.Connector.addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig)"], ["org.apache.tomcat.util.net.SSLHostConfig[]", "org.apache.catalina.connector.Connector.findSslHostConfigs()"], ["void", "org.apache.catalina.connector.Connector.addUpgradeProtocol(org.apache.coyote.UpgradeProtocol)"], ["org.apache.coyote.UpgradeProtocol[]", "org.apache.catalina.connector.Connector.findUpgradeProtocols()"], ["java.lang.String", "org.apache.catalina.connector.Connector.getEncodedSolidusHandling()"], ["void", "org.apache.catalina.connector.Connector.setEncodedSolidusHandling(java.lang.String)"], ["org.apache.tomcat.util.buf.EncodedSolidusHandling", "org.apache.catalina.connector.Connector.getEncodedSolidusHandlingInternal()"], ["org.apache.catalina.connector.Request", "org.apache.catalina.connector.Connector.createRequest()"], ["org.apache.catalina.connector.Response", "org.apache.catalina.connector.Connector.createResponse()"], ["void", "org.apache.catalina.connector.Connector.pause()"], ["void", "org.apache.catalina.connector.Connector.resume()"], ["java.lang.String", "org.apache.catalina.connector.Connector.toString()"], ["org.apache.catalina.connector.CoyoteAdapter", "org.apache.catalina.connector.CoyoteAdapter(org.apache.catalina.connector.Connector)"], ["boolean", "org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(org.apache.coyote.Request, org.apache.coyote.Response, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.catalina.connector.CoyoteAdapter.service(org.apache.coyote.Request, org.apache.coyote.Response)"], ["boolean", "org.apache.catalina.connector.CoyoteAdapter.prepare(org.apache.coyote.Request, org.apache.coyote.Response)"], ["void", "org.apache.catalina.connector.CoyoteAdapter.log(org.apache.coyote.Request, org.apache.coyote.Response, long)"], ["void", "org.apache.catalina.connector.CoyoteAdapter.checkRecycled(org.apache.coyote.Request, org.apache.coyote.Response)"], ["java.lang.String", "org.apache.catalina.connector.CoyoteAdapter.getDomain()"], ["boolean", "org.apache.catalina.connector.CoyoteAdapter.normalize(org.apache.tomcat.util.buf.MessageBytes)"], ["boolean", "org.apache.catalina.connector.CoyoteAdapter.checkNormalize(org.apache.tomcat.util.buf.MessageBytes)"], ["org.apache.catalina.connector.CoyoteInputStream$PrivilegedAvailable", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedAvailable(org.apache.catalina.connector.InputBuffer)"], ["java.lang.Integer", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedAvailable.run()"], ["java.lang.Object", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedAvailable.run()"], ["org.apache.catalina.connector.CoyoteInputStream$PrivilegedClose", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedClose(org.apache.catalina.connector.InputBuffer)"], ["java.lang.Void", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedClose.run()"], ["java.lang.Object", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedClose.run()"], ["org.apache.catalina.connector.CoyoteInputStream$PrivilegedRead", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedRead(org.apache.catalina.connector.InputBuffer)"], ["java.lang.Integer", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedRead.run()"], ["java.lang.Object", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedRead.run()"], ["org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadArray", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadArray(org.apache.catalina.connector.InputBuffer, byte[], int, int)"], ["java.lang.Integer", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadArray.run()"], ["java.lang.Object", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadArray.run()"], ["org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadBuffer", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadBuffer(org.apache.catalina.connector.InputBuffer, java.nio.ByteBuffer)"], ["java.lang.Integer", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadBuffer.run()"], ["java.lang.Object", "org.apache.catalina.connector.CoyoteInputStream$PrivilegedReadBuffer.run()"], ["int", "org.apache.catalina.connector.CoyoteInputStream.read()"], ["int", "org.apache.catalina.connector.CoyoteInputStream.available()"], ["int", "org.apache.catalina.connector.CoyoteInputStream.read(byte[])"], ["int", "org.apache.catalina.connector.CoyoteInputStream.read(byte[], int, int)"], ["int", "org.apache.catalina.connector.CoyoteInputStream.read(java.nio.ByteBuffer)"], ["void", "org.apache.catalina.connector.CoyoteInputStream.close()"], ["boolean", "org.apache.catalina.connector.CoyoteInputStream.isFinished()"], ["boolean", "org.apache.catalina.connector.CoyoteInputStream.isReady()"], ["void", "org.apache.catalina.connector.CoyoteInputStream.setReadListener(javax.servlet.ReadListener)"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.write(int)"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.write(byte[])"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.write(byte[], int, int)"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.write(java.nio.ByteBuffer)"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.flush()"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.close()"], ["boolean", "org.apache.catalina.connector.CoyoteOutputStream.isReady()"], ["void", "org.apache.catalina.connector.CoyoteOutputStream.setWriteListener(javax.servlet.WriteListener)"], ["org.apache.catalina.connector.CoyotePrincipal", "org.apache.catalina.connector.CoyotePrincipal(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.CoyotePrincipal.getName()"], ["java.lang.String", "org.apache.catalina.connector.CoyotePrincipal.toString()"], ["org.apache.catalina.connector.CoyoteReader", "org.apache.catalina.connector.CoyoteReader(org.apache.catalina.connector.InputBuffer)"], ["void", "org.apache.catalina.connector.CoyoteReader.close()"], ["int", "org.apache.catalina.connector.CoyoteReader.read()"], ["int", "org.apache.catalina.connector.CoyoteReader.read(char[])"], ["int", "org.apache.catalina.connector.CoyoteReader.read(char[], int, int)"], ["long", "org.apache.catalina.connector.CoyoteReader.skip(long)"], ["boolean", "org.apache.catalina.connector.CoyoteReader.ready()"], ["boolean", "org.apache.catalina.connector.CoyoteReader.markSupported()"], ["void", "org.apache.catalina.connector.CoyoteReader.mark(int)"], ["void", "org.apache.catalina.connector.CoyoteReader.reset()"], ["java.lang.String", "org.apache.catalina.connector.CoyoteReader.readLine()"], ["org.apache.catalina.connector.CoyoteWriter", "org.apache.catalina.connector.CoyoteWriter(org.apache.catalina.connector.OutputBuffer)"], ["void", "org.apache.catalina.connector.CoyoteWriter.flush()"], ["void", "org.apache.catalina.connector.CoyoteWriter.close()"], ["boolean", "org.apache.catalina.connector.CoyoteWriter.checkError()"], ["void", "org.apache.catalina.connector.CoyoteWriter.write(int)"], ["void", "org.apache.catalina.connector.CoyoteWriter.write(char[], int, int)"], ["void", "org.apache.catalina.connector.CoyoteWriter.write(char[])"], ["void", "org.apache.catalina.connector.CoyoteWriter.write(java.lang.String, int, int)"], ["void", "org.apache.catalina.connector.CoyoteWriter.write(java.lang.String)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(boolean)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(char)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(int)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(long)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(float)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(double)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(char[])"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(java.lang.String)"], ["void", "org.apache.catalina.connector.CoyoteWriter.print(java.lang.Object)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println()"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(boolean)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(char)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(int)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(long)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(float)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(double)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(char[])"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(java.lang.String)"], ["void", "org.apache.catalina.connector.CoyoteWriter.println(java.lang.Object)"], ["org.apache.catalina.connector.InputBuffer$PrivilegedCreateConverter", "org.apache.catalina.connector.InputBuffer$PrivilegedCreateConverter(java.nio.charset.Charset)"], ["org.apache.tomcat.util.buf.B2CConverter", "org.apache.catalina.connector.InputBuffer$PrivilegedCreateConverter.run()"], ["java.lang.Object", "org.apache.catalina.connector.InputBuffer$PrivilegedCreateConverter.run()"], ["org.apache.catalina.connector.InputBuffer", "org.apache.catalina.connector.InputBuffer()"], ["org.apache.catalina.connector.InputBuffer", "org.apache.catalina.connector.InputBuffer(int)"], ["void", "org.apache.catalina.connector.InputBuffer.setRequest(org.apache.coyote.Request)"], ["void", "org.apache.catalina.connector.InputBuffer.recycle()"], ["void", "org.apache.catalina.connector.InputBuffer.close()"], ["int", "org.apache.catalina.connector.InputBuffer.available()"], ["void", "org.apache.catalina.connector.InputBuffer.setReadListener(javax.servlet.ReadListener)"], ["boolean", "org.apache.catalina.connector.InputBuffer.isFinished()"], ["boolean", "org.apache.catalina.connector.InputBuffer.isReady()"], ["int", "org.apache.catalina.connector.InputBuffer.realReadBytes()"], ["int", "org.apache.catalina.connector.InputBuffer.readByte()"], ["int", "org.apache.catalina.connector.InputBuffer.read(byte[], int, int)"], ["int", "org.apache.catalina.connector.InputBuffer.read(java.nio.ByteBuffer)"], ["int", "org.apache.catalina.connector.InputBuffer.realReadChars()"], ["int", "org.apache.catalina.connector.InputBuffer.read()"], ["int", "org.apache.catalina.connector.InputBuffer.read(char[])"], ["int", "org.apache.catalina.connector.InputBuffer.read(char[], int, int)"], ["long", "org.apache.catalina.connector.InputBuffer.skip(long)"], ["boolean", "org.apache.catalina.connector.InputBuffer.ready()"], ["boolean", "org.apache.catalina.connector.InputBuffer.markSupported()"], ["void", "org.apache.catalina.connector.InputBuffer.mark(int)"], ["void", "org.apache.catalina.connector.InputBuffer.reset()"], ["void", "org.apache.catalina.connector.InputBuffer.checkConverter()"], ["void", "org.apache.catalina.connector.InputBuffer.setByteBuffer(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.catalina.connector.InputBuffer.getByteBuffer()"], ["void", "org.apache.catalina.connector.InputBuffer.expand(int)"], ["org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter", "org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter(java.nio.charset.Charset)"], ["org.apache.tomcat.util.buf.C2BConverter", "org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter.run()"], ["java.lang.Object", "org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter.run()"], ["org.apache.catalina.connector.OutputBuffer", "org.apache.catalina.connector.OutputBuffer(int)"], ["void", "org.apache.catalina.connector.OutputBuffer.setResponse(org.apache.coyote.Response)"], ["boolean", "org.apache.catalina.connector.OutputBuffer.isSuspended()"], ["void", "org.apache.catalina.connector.OutputBuffer.setSuspended(boolean)"], ["boolean", "org.apache.catalina.connector.OutputBuffer.isClosed()"], ["void", "org.apache.catalina.connector.OutputBuffer.recycle()"], ["void", "org.apache.catalina.connector.OutputBuffer.close()"], ["void", "org.apache.catalina.connector.OutputBuffer.flush()"], ["void", "org.apache.catalina.connector.OutputBuffer.realWriteBytes(java.nio.ByteBuffer)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(byte[], int, int)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(java.nio.ByteBuffer)"], ["void", "org.apache.catalina.connector.OutputBuffer.writeByte(int)"], ["void", "org.apache.catalina.connector.OutputBuffer.realWriteChars(java.nio.CharBuffer)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(int)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(char[])"], ["void", "org.apache.catalina.connector.OutputBuffer.write(char[], int, int)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(java.lang.String, int, int)"], ["void", "org.apache.catalina.connector.OutputBuffer.write(java.lang.String)"], ["void", "org.apache.catalina.connector.OutputBuffer.checkConverter()"], ["long", "org.apache.catalina.connector.OutputBuffer.getContentWritten()"], ["boolean", "org.apache.catalina.connector.OutputBuffer.isNew()"], ["void", "org.apache.catalina.connector.OutputBuffer.setBufferSize(int)"], ["void", "org.apache.catalina.connector.OutputBuffer.reset()"], ["void", "org.apache.catalina.connector.OutputBuffer.reset(boolean)"], ["int", "org.apache.catalina.connector.OutputBuffer.getBufferSize()"], ["boolean", "org.apache.catalina.connector.OutputBuffer.isReady()"], ["void", "org.apache.catalina.connector.OutputBuffer.setWriteListener(javax.servlet.WriteListener)"], ["boolean", "org.apache.catalina.connector.OutputBuffer.isBlocking()"], ["void", "org.apache.catalina.connector.OutputBuffer.checkRegisterForWrite()"], ["void", "org.apache.catalina.connector.OutputBuffer.append(byte[], int, int)"], ["void", "org.apache.catalina.connector.OutputBuffer.append(char[], int, int)"], ["void", "org.apache.catalina.connector.OutputBuffer.append(java.nio.ByteBuffer)"], ["java.lang.Object", "org.apache.catalina.connector.Request$1.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$1.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$2.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$2.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$3.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$3.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$4.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$4.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$5.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$5.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$6.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$6.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$7.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$7.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$8.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$8.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.catalina.connector.Request$9.get(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.connector.Request$9.set(org.apache.catalina.connector.Request, java.lang.String, java.lang.Object)"], ["org.apache.catalina.connector.Request", "org.apache.catalina.connector.Request(org.apache.catalina.connector.Connector)"], ["void", "org.apache.catalina.connector.Request.setCoyoteRequest(org.apache.coyote.Request)"], ["org.apache.coyote.Request", "org.apache.catalina.connector.Request.getCoyoteRequest()"], ["void", "org.apache.catalina.connector.Request.setAsyncSupported(boolean)"], ["void", "org.apache.catalina.connector.Request.recycle()"], ["org.apache.catalina.connector.Connector", "org.apache.catalina.connector.Request.getConnector()"], ["org.apache.catalina.Context", "org.apache.catalina.connector.Request.getContext()"], ["boolean", "org.apache.catalina.connector.Request.getDiscardFacades()"], ["javax.servlet.FilterChain", "org.apache.catalina.connector.Request.getFilterChain()"], ["void", "org.apache.catalina.connector.Request.setFilterChain(javax.servlet.FilterChain)"], ["org.apache.catalina.Host", "org.apache.catalina.connector.Request.getHost()"], ["org.apache.catalina.mapper.MappingData", "org.apache.catalina.connector.Request.getMappingData()"], ["javax.servlet.http.HttpServletRequest", "org.apache.catalina.connector.Request.getRequest()"], ["void", "org.apache.catalina.connector.Request.setRequest(javax.servlet.http.HttpServletRequest)"], ["org.apache.catalina.connector.Response", "org.apache.catalina.connector.Request.getResponse()"], ["void", "org.apache.catalina.connector.Request.setResponse(org.apache.catalina.connector.Response)"], ["java.io.InputStream", "org.apache.catalina.connector.Request.getStream()"], ["org.apache.catalina.Wrapper", "org.apache.catalina.connector.Request.getWrapper()"], ["javax.servlet.ServletInputStream", "org.apache.catalina.connector.Request.createInputStream()"], ["void", "org.apache.catalina.connector.Request.finishRequest()"], ["java.lang.Object", "org.apache.catalina.connector.Request.getNote(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.removeNote(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setLocalPort(int)"], ["void", "org.apache.catalina.connector.Request.setNote(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.connector.Request.setRemoteAddr(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setRemoteHost(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setSecure(boolean)"], ["void", "org.apache.catalina.connector.Request.setServerPort(int)"], ["java.lang.Object", "org.apache.catalina.connector.Request.getAttribute(java.lang.String)"], ["long", "org.apache.catalina.connector.Request.getContentLengthLong()"], ["java.lang.String", "org.apache.catalina.connector.Request.getCharacterEncoding()"], ["int", "org.apache.catalina.connector.Request.getContentLength()"], ["java.lang.String", "org.apache.catalina.connector.Request.getContentType()"], ["void", "org.apache.catalina.connector.Request.setContentType(java.lang.String)"], ["javax.servlet.ServletInputStream", "org.apache.catalina.connector.Request.getInputStream()"], ["java.util.Locale", "org.apache.catalina.connector.Request.getLocale()"], ["java.lang.String", "org.apache.catalina.connector.Request.getParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.catalina.connector.Request.getParameterMap()"], ["java.lang.String[]", "org.apache.catalina.connector.Request.getParameterValues(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Request.getProtocol()"], ["java.io.BufferedReader", "org.apache.catalina.connector.Request.getReader()"], ["java.lang.String", "org.apache.catalina.connector.Request.getRealPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Request.getRemoteAddr()"], ["java.lang.String", "org.apache.catalina.connector.Request.getRemoteHost()"], ["int", "org.apache.catalina.connector.Request.getRemotePort()"], ["java.lang.String", "org.apache.catalina.connector.Request.getLocalName()"], ["java.lang.String", "org.apache.catalina.connector.Request.getLocalAddr()"], ["int", "org.apache.catalina.connector.Request.getLocalPort()"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.connector.Request.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Request.getScheme()"], ["java.lang.String", "org.apache.catalina.connector.Request.getServerName()"], ["int", "org.apache.catalina.connector.Request.getServerPort()"], ["boolean", "org.apache.catalina.connector.Request.isSecure()"], ["void", "org.apache.catalina.connector.Request.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.connector.Request.setCharacterEncoding(java.lang.String)"], ["javax.servlet.ServletContext", "org.apache.catalina.connector.Request.getServletContext()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.Request.startAsync()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["boolean", "org.apache.catalina.connector.Request.isAsyncStarted()"], ["boolean", "org.apache.catalina.connector.Request.isAsyncDispatching()"], ["boolean", "org.apache.catalina.connector.Request.isAsyncCompleting()"], ["boolean", "org.apache.catalina.connector.Request.isAsync()"], ["boolean", "org.apache.catalina.connector.Request.isAsyncSupported()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.Request.getAsyncContext()"], ["org.apache.catalina.core.AsyncContextImpl", "org.apache.catalina.connector.Request.getAsyncContextInternal()"], ["javax.servlet.DispatcherType", "org.apache.catalina.connector.Request.getDispatcherType()"], ["void", "org.apache.catalina.connector.Request.addCookie(javax.servlet.http.Cookie)"], ["void", "org.apache.catalina.connector.Request.addLocale(java.util.Locale)"], ["void", "org.apache.catalina.connector.Request.clearCookies()"], ["void", "org.apache.catalina.connector.Request.clearLocales()"], ["void", "org.apache.catalina.connector.Request.setAuthType(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setPathInfo(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setRequestedSessionCookie(boolean)"], ["void", "org.apache.catalina.connector.Request.setRequestedSessionId(java.lang.String)"], ["void", "org.apache.catalina.connector.Request.setRequestedSessionURL(boolean)"], ["void", "org.apache.catalina.connector.Request.setRequestedSessionSSL(boolean)"], ["java.lang.String", "org.apache.catalina.connector.Request.getDecodedRequestURI()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.catalina.connector.Request.getDecodedRequestURIMB()"], ["void", "org.apache.catalina.connector.Request.setUserPrincipal(java.security.Principal)"], ["boolean", "org.apache.catalina.connector.Request.isTrailerFieldsReady()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.connector.Request.getTrailerFields()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.connector.Request.newPushBuilder()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.connector.Request.newPushBuilder(javax.servlet.http.HttpServletRequest)"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.apache.catalina.connector.Request.upgrade(java.lang.Class<T>)"], ["java.lang.String", "org.apache.catalina.connector.Request.getAuthType()"], ["java.lang.String", "org.apache.catalina.connector.Request.getContextPath()"], ["javax.servlet.http.Cookie[]", "org.apache.catalina.connector.Request.getCookies()"], ["org.apache.tomcat.util.http.ServerCookies", "org.apache.catalina.connector.Request.getServerCookies()"], ["long", "org.apache.catalina.connector.Request.getDateHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Request.getHeader(java.lang.String)"], ["int", "org.apache.catalina.connector.Request.getIntHeader(java.lang.String)"], ["javax.servlet.http.HttpServletMapping", "org.apache.catalina.connector.Request.getHttpServletMapping()"], ["java.lang.String", "org.apache.catalina.connector.Request.getMethod()"], ["java.lang.String", "org.apache.catalina.connector.Request.getPathInfo()"], ["java.lang.String", "org.apache.catalina.connector.Request.getPathTranslated()"], ["java.lang.String", "org.apache.catalina.connector.Request.getQueryString()"], ["java.lang.String", "org.apache.catalina.connector.Request.getRemoteUser()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.catalina.connector.Request.getRequestPathMB()"], ["java.lang.String", "org.apache.catalina.connector.Request.getRequestedSessionId()"], ["java.lang.String", "org.apache.catalina.connector.Request.getRequestURI()"], ["java.lang.StringBuffer", "org.apache.catalina.connector.Request.getRequestURL()"], ["java.lang.String", "org.apache.catalina.connector.Request.getServletPath()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.connector.Request.getSession()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.connector.Request.getSession(boolean)"], ["boolean", "org.apache.catalina.connector.Request.isRequestedSessionIdFromCookie()"], ["boolean", "org.apache.catalina.connector.Request.isRequestedSessionIdFromURL()"], ["boolean", "org.apache.catalina.connector.Request.isRequestedSessionIdFromUrl()"], ["boolean", "org.apache.catalina.connector.Request.isRequestedSessionIdValid()"], ["boolean", "org.apache.catalina.connector.Request.isUserInRole(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.connector.Request.getPrincipal()"], ["java.security.Principal", "org.apache.catalina.connector.Request.getUserPrincipal()"], ["org.apache.catalina.Session", "org.apache.catalina.connector.Request.getSessionInternal()"], ["void", "org.apache.catalina.connector.Request.changeSessionId(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Request.changeSessionId()"], ["org.apache.catalina.Session", "org.apache.catalina.connector.Request.getSessionInternal(boolean)"], ["boolean", "org.apache.catalina.connector.Request.isParametersParsed()"], ["boolean", "org.apache.catalina.connector.Request.isFinished()"], ["boolean", "org.apache.catalina.connector.Request.authenticate(javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.connector.Request.login(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.Request.logout()"], ["javax.servlet.http.Part", "org.apache.catalina.connector.Request.getPart(java.lang.String)"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction.run()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade$GetCharacterEncodingPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetCharacterEncodingPrivilegedAction.run()"], ["javax.servlet.http.Cookie[]", "org.apache.catalina.connector.RequestFacade$GetCookiesPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetCookiesPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetHeaderNamesPrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade$GetHeadersPrivilegedAction", "org.apache.catalina.connector.RequestFacade$GetHeadersPrivilegedAction(org.apache.catalina.connector.RequestFacade, java.lang.String)"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetHeadersPrivilegedAction.run()"], ["java.util.Locale", "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetLocalesPrivilegedAction.run()"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction", "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction(org.apache.catalina.connector.RequestFacade, java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction", "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction(org.apache.catalina.connector.RequestFacade, java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction", "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction(org.apache.catalina.connector.RequestFacade, java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction", "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction(org.apache.catalina.connector.RequestFacade, boolean)"], ["javax.servlet.http.HttpSession", "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction.run()"], ["org.apache.catalina.connector.RequestFacade", "org.apache.catalina.connector.RequestFacade(org.apache.catalina.connector.Request)"], ["void", "org.apache.catalina.connector.RequestFacade.clear()"], ["java.lang.Object", "org.apache.catalina.connector.RequestFacade.getAttribute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getCharacterEncoding()"], ["void", "org.apache.catalina.connector.RequestFacade.setCharacterEncoding(java.lang.String)"], ["int", "org.apache.catalina.connector.RequestFacade.getContentLength()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getContentType()"], ["javax.servlet.ServletInputStream", "org.apache.catalina.connector.RequestFacade.getInputStream()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getParameter(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.connector.RequestFacade.getParameterValues(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.catalina.connector.RequestFacade.getParameterMap()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getProtocol()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getScheme()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getServerName()"], ["int", "org.apache.catalina.connector.RequestFacade.getServerPort()"], ["java.io.BufferedReader", "org.apache.catalina.connector.RequestFacade.getReader()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRemoteAddr()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRemoteHost()"], ["void", "org.apache.catalina.connector.RequestFacade.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.connector.RequestFacade.removeAttribute(java.lang.String)"], ["java.util.Locale", "org.apache.catalina.connector.RequestFacade.getLocale()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isSecure()"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.connector.RequestFacade.getRequestDispatcher(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRealPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getAuthType()"], ["javax.servlet.http.Cookie[]", "org.apache.catalina.connector.RequestFacade.getCookies()"], ["long", "org.apache.catalina.connector.RequestFacade.getDateHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getHeader(java.lang.String)"], ["int", "org.apache.catalina.connector.RequestFacade.getIntHeader(java.lang.String)"], ["javax.servlet.http.HttpServletMapping", "org.apache.catalina.connector.RequestFacade.getHttpServletMapping()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getMethod()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getPathInfo()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getPathTranslated()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getContextPath()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getQueryString()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRemoteUser()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isUserInRole(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.connector.RequestFacade.getUserPrincipal()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRequestedSessionId()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getRequestURI()"], ["java.lang.StringBuffer", "org.apache.catalina.connector.RequestFacade.getRequestURL()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getServletPath()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.connector.RequestFacade.getSession(boolean)"], ["javax.servlet.http.HttpSession", "org.apache.catalina.connector.RequestFacade.getSession()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.changeSessionId()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isRequestedSessionIdValid()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isRequestedSessionIdFromCookie()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isRequestedSessionIdFromURL()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isRequestedSessionIdFromUrl()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getLocalAddr()"], ["java.lang.String", "org.apache.catalina.connector.RequestFacade.getLocalName()"], ["int", "org.apache.catalina.connector.RequestFacade.getLocalPort()"], ["int", "org.apache.catalina.connector.RequestFacade.getRemotePort()"], ["javax.servlet.ServletContext", "org.apache.catalina.connector.RequestFacade.getServletContext()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.RequestFacade.startAsync()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.RequestFacade.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["boolean", "org.apache.catalina.connector.RequestFacade.isAsyncStarted()"], ["boolean", "org.apache.catalina.connector.RequestFacade.isAsyncSupported()"], ["javax.servlet.AsyncContext", "org.apache.catalina.connector.RequestFacade.getAsyncContext()"], ["javax.servlet.DispatcherType", "org.apache.catalina.connector.RequestFacade.getDispatcherType()"], ["boolean", "org.apache.catalina.connector.RequestFacade.authenticate(javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.connector.RequestFacade.login(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.RequestFacade.logout()"], ["javax.servlet.http.Part", "org.apache.catalina.connector.RequestFacade.getPart(java.lang.String)"], ["boolean", "org.apache.catalina.connector.RequestFacade.getAllowTrace()"], ["long", "org.apache.catalina.connector.RequestFacade.getContentLengthLong()"], ["<T extends javax.servlet.http.HttpUpgradeHandler> T", "org.apache.catalina.connector.RequestFacade.upgrade(java.lang.Class<T>)"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.connector.RequestFacade.newPushBuilder()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.connector.RequestFacade.newPushBuilder(javax.servlet.http.HttpServletRequest)"], ["boolean", "org.apache.catalina.connector.RequestFacade.isTrailerFieldsReady()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.connector.RequestFacade.getTrailerFields()"], ["org.apache.catalina.connector.Response$PrivilegedDoIsEncodable", "org.apache.catalina.connector.Response$PrivilegedDoIsEncodable(org.apache.catalina.Context, org.apache.catalina.connector.Request, org.apache.catalina.Session, java.lang.String)"], ["java.lang.Boolean", "org.apache.catalina.connector.Response$PrivilegedDoIsEncodable.run()"], ["java.lang.Object", "org.apache.catalina.connector.Response$PrivilegedDoIsEncodable.run()"], ["org.apache.catalina.connector.Response$PrivilegedGenerateCookieString", "org.apache.catalina.connector.Response$PrivilegedGenerateCookieString(org.apache.catalina.Context, javax.servlet.http.Cookie, javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "org.apache.catalina.connector.Response$PrivilegedGenerateCookieString.run()"], ["java.lang.Object", "org.apache.catalina.connector.Response$PrivilegedGenerateCookieString.run()"], ["org.apache.catalina.connector.Response$PrivilgedEncodeUrl", "org.apache.catalina.connector.Response$PrivilgedEncodeUrl(org.apache.tomcat.util.buf.UEncoder, java.lang.String, int)"], ["org.apache.tomcat.util.buf.CharChunk", "org.apache.catalina.connector.Response$PrivilgedEncodeUrl.run()"], ["java.lang.Object", "org.apache.catalina.connector.Response$PrivilgedEncodeUrl.run()"], ["org.apache.catalina.connector.Response", "org.apache.catalina.connector.Response()"], ["org.apache.catalina.connector.Response", "org.apache.catalina.connector.Response(int)"], ["void", "org.apache.catalina.connector.Response.setCoyoteResponse(org.apache.coyote.Response)"], ["org.apache.coyote.Response", "org.apache.catalina.connector.Response.getCoyoteResponse()"], ["org.apache.catalina.Context", "org.apache.catalina.connector.Response.getContext()"], ["void", "org.apache.catalina.connector.Response.recycle()"], ["long", "org.apache.catalina.connector.Response.getContentWritten()"], ["long", "org.apache.catalina.connector.Response.getBytesWritten(boolean)"], ["void", "org.apache.catalina.connector.Response.setAppCommitted(boolean)"], ["boolean", "org.apache.catalina.connector.Response.isAppCommitted()"], ["org.apache.catalina.connector.Request", "org.apache.catalina.connector.Response.getRequest()"], ["void", "org.apache.catalina.connector.Response.setRequest(org.apache.catalina.connector.Request)"], ["javax.servlet.http.HttpServletResponse", "org.apache.catalina.connector.Response.getResponse()"], ["void", "org.apache.catalina.connector.Response.setResponse(javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.connector.Response.setSuspended(boolean)"], ["boolean", "org.apache.catalina.connector.Response.isSuspended()"], ["boolean", "org.apache.catalina.connector.Response.isClosed()"], ["boolean", "org.apache.catalina.connector.Response.setError()"], ["boolean", "org.apache.catalina.connector.Response.isError()"], ["boolean", "org.apache.catalina.connector.Response.isErrorReportRequired()"], ["boolean", "org.apache.catalina.connector.Response.setErrorReported()"], ["void", "org.apache.catalina.connector.Response.finishResponse()"], ["int", "org.apache.catalina.connector.Response.getContentLength()"], ["java.lang.String", "org.apache.catalina.connector.Response.getContentType()"], ["java.io.PrintWriter", "org.apache.catalina.connector.Response.getReporter()"], ["void", "org.apache.catalina.connector.Response.flushBuffer()"], ["int", "org.apache.catalina.connector.Response.getBufferSize()"], ["java.lang.String", "org.apache.catalina.connector.Response.getCharacterEncoding()"], ["javax.servlet.ServletOutputStream", "org.apache.catalina.connector.Response.getOutputStream()"], ["java.util.Locale", "org.apache.catalina.connector.Response.getLocale()"], ["java.io.PrintWriter", "org.apache.catalina.connector.Response.getWriter()"], ["boolean", "org.apache.catalina.connector.Response.isCommitted()"], ["void", "org.apache.catalina.connector.Response.reset()"], ["void", "org.apache.catalina.connector.Response.resetBuffer()"], ["void", "org.apache.catalina.connector.Response.resetBuffer(boolean)"], ["void", "org.apache.catalina.connector.Response.setBufferSize(int)"], ["void", "org.apache.catalina.connector.Response.setContentLength(int)"], ["void", "org.apache.catalina.connector.Response.setContentLengthLong(long)"], ["void", "org.apache.catalina.connector.Response.setContentType(java.lang.String)"], ["void", "org.apache.catalina.connector.Response.setCharacterEncoding(java.lang.String)"], ["void", "org.apache.catalina.connector.Response.setLocale(java.util.Locale)"], ["java.lang.String", "org.apache.catalina.connector.Response.getHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Response.getMessage()"], ["int", "org.apache.catalina.connector.Response.getStatus()"], ["void", "org.apache.catalina.connector.Response.addCookie(javax.servlet.http.Cookie)"], ["void", "org.apache.catalina.connector.Response.addSessionCookieInternal(javax.servlet.http.Cookie)"], ["java.lang.String", "org.apache.catalina.connector.Response.generateCookieString(javax.servlet.http.Cookie)"], ["void", "org.apache.catalina.connector.Response.addDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.connector.Response.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.Response.addIntHeader(java.lang.String, int)"], ["boolean", "org.apache.catalina.connector.Response.containsHeader(java.lang.String)"], ["void", "org.apache.catalina.connector.Response.setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>)"], ["java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>", "org.apache.catalina.connector.Response.getTrailerFields()"], ["java.lang.String", "org.apache.catalina.connector.Response.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Response.encodeRedirectUrl(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Response.encodeURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.Response.encodeUrl(java.lang.String)"], ["void", "org.apache.catalina.connector.Response.sendAcknowledgement()"], ["void", "org.apache.catalina.connector.Response.sendError(int)"], ["void", "org.apache.catalina.connector.Response.sendError(int, java.lang.String)"], ["void", "org.apache.catalina.connector.Response.sendRedirect(java.lang.String)"], ["void", "org.apache.catalina.connector.Response.sendRedirect(java.lang.String, int)"], ["void", "org.apache.catalina.connector.Response.setDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.connector.Response.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.Response.setIntHeader(java.lang.String, int)"], ["void", "org.apache.catalina.connector.Response.setStatus(int)"], ["void", "org.apache.catalina.connector.Response.setStatus(int, java.lang.String)"], ["java.lang.Void", "org.apache.catalina.connector.ResponseFacade$DateHeaderPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.ResponseFacade$DateHeaderPrivilegedAction.run()"], ["org.apache.catalina.connector.ResponseFacade$FlushBufferPrivilegedAction", "org.apache.catalina.connector.ResponseFacade$FlushBufferPrivilegedAction(org.apache.catalina.connector.Response)"], ["java.lang.Void", "org.apache.catalina.connector.ResponseFacade$FlushBufferPrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.ResponseFacade$FlushBufferPrivilegedAction.run()"], ["org.apache.catalina.connector.ResponseFacade$SetContentTypePrivilegedAction", "org.apache.catalina.connector.ResponseFacade$SetContentTypePrivilegedAction(org.apache.catalina.connector.ResponseFacade, java.lang.String)"], ["java.lang.Void", "org.apache.catalina.connector.ResponseFacade$SetContentTypePrivilegedAction.run()"], ["java.lang.Object", "org.apache.catalina.connector.ResponseFacade$SetContentTypePrivilegedAction.run()"], ["org.apache.catalina.connector.ResponseFacade", "org.apache.catalina.connector.ResponseFacade(org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.connector.ResponseFacade.clear()"], ["void", "org.apache.catalina.connector.ResponseFacade.finish()"], ["boolean", "org.apache.catalina.connector.ResponseFacade.isFinished()"], ["long", "org.apache.catalina.connector.ResponseFacade.getContentWritten()"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.getCharacterEncoding()"], ["javax.servlet.ServletOutputStream", "org.apache.catalina.connector.ResponseFacade.getOutputStream()"], ["java.io.PrintWriter", "org.apache.catalina.connector.ResponseFacade.getWriter()"], ["void", "org.apache.catalina.connector.ResponseFacade.setContentLength(int)"], ["void", "org.apache.catalina.connector.ResponseFacade.setContentLengthLong(long)"], ["void", "org.apache.catalina.connector.ResponseFacade.setContentType(java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.setBufferSize(int)"], ["int", "org.apache.catalina.connector.ResponseFacade.getBufferSize()"], ["void", "org.apache.catalina.connector.ResponseFacade.flushBuffer()"], ["void", "org.apache.catalina.connector.ResponseFacade.resetBuffer()"], ["boolean", "org.apache.catalina.connector.ResponseFacade.isCommitted()"], ["void", "org.apache.catalina.connector.ResponseFacade.reset()"], ["void", "org.apache.catalina.connector.ResponseFacade.setLocale(java.util.Locale)"], ["java.util.Locale", "org.apache.catalina.connector.ResponseFacade.getLocale()"], ["void", "org.apache.catalina.connector.ResponseFacade.addCookie(javax.servlet.http.Cookie)"], ["boolean", "org.apache.catalina.connector.ResponseFacade.containsHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.encodeURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.encodeUrl(java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.encodeRedirectUrl(java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.sendError(int, java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.sendError(int)"], ["void", "org.apache.catalina.connector.ResponseFacade.sendRedirect(java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.setDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.connector.ResponseFacade.addDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.connector.ResponseFacade.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.setIntHeader(java.lang.String, int)"], ["void", "org.apache.catalina.connector.ResponseFacade.addIntHeader(java.lang.String, int)"], ["void", "org.apache.catalina.connector.ResponseFacade.setStatus(int)"], ["void", "org.apache.catalina.connector.ResponseFacade.setStatus(int, java.lang.String)"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.getContentType()"], ["void", "org.apache.catalina.connector.ResponseFacade.setCharacterEncoding(java.lang.String)"], ["int", "org.apache.catalina.connector.ResponseFacade.getStatus()"], ["java.lang.String", "org.apache.catalina.connector.ResponseFacade.getHeader(java.lang.String)"], ["void", "org.apache.catalina.connector.ResponseFacade.setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>)"], ["java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>", "org.apache.catalina.connector.ResponseFacade.getTrailerFields()"], ["org.apache.catalina.core.AccessLogAdapter", "org.apache.catalina.core.AccessLogAdapter(org.apache.catalina.AccessLog)"], ["void", "org.apache.catalina.core.AccessLogAdapter.add(org.apache.catalina.AccessLog)"], ["void", "org.apache.catalina.core.AccessLogAdapter.log(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.core.AccessLogAdapter.setRequestAttributesEnabled(boolean)"], ["boolean", "org.apache.catalina.core.AccessLogAdapter.getRequestAttributesEnabled()"], ["org.apache.catalina.core.ApplicationContext$DispatchData", "org.apache.catalina.core.ApplicationContext$DispatchData()"], ["org.apache.catalina.core.ApplicationContext", "org.apache.catalina.core.ApplicationContext(org.apache.catalina.core.StandardContext)"], ["java.lang.Object", "org.apache.catalina.core.ApplicationContext.getAttribute(java.lang.String)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.ApplicationContext.getContext(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getContextPath()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getInitParameter(java.lang.String)"], ["int", "org.apache.catalina.core.ApplicationContext.getMajorVersion()"], ["int", "org.apache.catalina.core.ApplicationContext.getMinorVersion()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getMimeType(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.ApplicationContext.getNamedDispatcher(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getRealPath(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.ApplicationContext.getRequestDispatcher(java.lang.String)"], ["java.net.URL", "org.apache.catalina.core.ApplicationContext.getResource(java.lang.String)"], ["java.io.InputStream", "org.apache.catalina.core.ApplicationContext.getResourceAsStream(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getServerInfo()"], ["javax.servlet.Servlet", "org.apache.catalina.core.ApplicationContext.getServlet(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getServletContextName()"], ["void", "org.apache.catalina.core.ApplicationContext.log(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContext.log(java.lang.Exception, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContext.log(java.lang.String, java.lang.Throwable)"], ["void", "org.apache.catalina.core.ApplicationContext.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContext.setAttribute(java.lang.String, java.lang.Object)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addFilter(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addFilter(java.lang.String, javax.servlet.Filter)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>)"], ["<T extends javax.servlet.Filter> T", "org.apache.catalina.core.ApplicationContext.createFilter(java.lang.Class<T>)"], ["javax.servlet.FilterRegistration", "org.apache.catalina.core.ApplicationContext.getFilterRegistration(java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addServlet(java.lang.String, java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addServlet(java.lang.String, javax.servlet.Servlet)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContext.addJspFile(java.lang.String, java.lang.String)"], ["<T extends javax.servlet.Servlet> T", "org.apache.catalina.core.ApplicationContext.createServlet(java.lang.Class<T>)"], ["javax.servlet.ServletRegistration", "org.apache.catalina.core.ApplicationContext.getServletRegistration(java.lang.String)"], ["javax.servlet.SessionCookieConfig", "org.apache.catalina.core.ApplicationContext.getSessionCookieConfig()"], ["void", "org.apache.catalina.core.ApplicationContext.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["boolean", "org.apache.catalina.core.ApplicationContext.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContext.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["void", "org.apache.catalina.core.ApplicationContext.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.apache.catalina.core.ApplicationContext.addListener(T)"], ["<T extends java.util.EventListener> T", "org.apache.catalina.core.ApplicationContext.createListener(java.lang.Class<T>)"], ["void", "org.apache.catalina.core.ApplicationContext.declareRoles(java.lang.String...)"], ["java.lang.ClassLoader", "org.apache.catalina.core.ApplicationContext.getClassLoader()"], ["int", "org.apache.catalina.core.ApplicationContext.getEffectiveMajorVersion()"], ["int", "org.apache.catalina.core.ApplicationContext.getEffectiveMinorVersion()"], ["java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration>", "org.apache.catalina.core.ApplicationContext.getFilterRegistrations()"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.catalina.core.ApplicationContext.getJspConfigDescriptor()"], ["java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration>", "org.apache.catalina.core.ApplicationContext.getServletRegistrations()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getVirtualServerName()"], ["int", "org.apache.catalina.core.ApplicationContext.getSessionTimeout()"], ["void", "org.apache.catalina.core.ApplicationContext.setSessionTimeout(int)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getRequestCharacterEncoding()"], ["void", "org.apache.catalina.core.ApplicationContext.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContext.getResponseCharacterEncoding()"], ["void", "org.apache.catalina.core.ApplicationContext.setResponseCharacterEncoding(java.lang.String)"], ["org.apache.catalina.core.ApplicationContextFacade$PrivilegedExecuteMethod", "org.apache.catalina.core.ApplicationContextFacade$PrivilegedExecuteMethod(java.lang.reflect.Method, org.apache.catalina.core.ApplicationContext, java.lang.Object[])"], ["java.lang.Object", "org.apache.catalina.core.ApplicationContextFacade$PrivilegedExecuteMethod.run()"], ["org.apache.catalina.core.ApplicationContextFacade", "org.apache.catalina.core.ApplicationContextFacade(org.apache.catalina.core.ApplicationContext)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.ApplicationContextFacade.getContext(java.lang.String)"], ["int", "org.apache.catalina.core.ApplicationContextFacade.getMajorVersion()"], ["int", "org.apache.catalina.core.ApplicationContextFacade.getMinorVersion()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getMimeType(java.lang.String)"], ["java.net.URL", "org.apache.catalina.core.ApplicationContextFacade.getResource(java.lang.String)"], ["java.io.InputStream", "org.apache.catalina.core.ApplicationContextFacade.getResourceAsStream(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.ApplicationContextFacade.getRequestDispatcher(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.ApplicationContextFacade.getNamedDispatcher(java.lang.String)"], ["javax.servlet.Servlet", "org.apache.catalina.core.ApplicationContextFacade.getServlet(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.log(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.log(java.lang.Exception, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getRealPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getServerInfo()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getInitParameter(java.lang.String)"], ["java.lang.Object", "org.apache.catalina.core.ApplicationContextFacade.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.removeAttribute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getServletContextName()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getContextPath()"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addFilter(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addFilter(java.lang.String, javax.servlet.Filter)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>)"], ["<T extends javax.servlet.Filter> T", "org.apache.catalina.core.ApplicationContextFacade.createFilter(java.lang.Class<T>)"], ["javax.servlet.FilterRegistration", "org.apache.catalina.core.ApplicationContextFacade.getFilterRegistration(java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addServlet(java.lang.String, java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addServlet(java.lang.String, javax.servlet.Servlet)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.ApplicationContextFacade.addJspFile(java.lang.String, java.lang.String)"], ["<T extends javax.servlet.Servlet> T", "org.apache.catalina.core.ApplicationContextFacade.createServlet(java.lang.Class<T>)"], ["javax.servlet.ServletRegistration", "org.apache.catalina.core.ApplicationContextFacade.getServletRegistration(java.lang.String)"], ["javax.servlet.SessionCookieConfig", "org.apache.catalina.core.ApplicationContextFacade.getSessionCookieConfig()"], ["void", "org.apache.catalina.core.ApplicationContextFacade.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["boolean", "org.apache.catalina.core.ApplicationContextFacade.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.apache.catalina.core.ApplicationContextFacade.addListener(T)"], ["<T extends java.util.EventListener> T", "org.apache.catalina.core.ApplicationContextFacade.createListener(java.lang.Class<T>)"], ["void", "org.apache.catalina.core.ApplicationContextFacade.declareRoles(java.lang.String...)"], ["java.lang.ClassLoader", "org.apache.catalina.core.ApplicationContextFacade.getClassLoader()"], ["int", "org.apache.catalina.core.ApplicationContextFacade.getEffectiveMajorVersion()"], ["int", "org.apache.catalina.core.ApplicationContextFacade.getEffectiveMinorVersion()"], ["java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration>", "org.apache.catalina.core.ApplicationContextFacade.getFilterRegistrations()"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.catalina.core.ApplicationContextFacade.getJspConfigDescriptor()"], ["java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration>", "org.apache.catalina.core.ApplicationContextFacade.getServletRegistrations()"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getVirtualServerName()"], ["int", "org.apache.catalina.core.ApplicationContextFacade.getSessionTimeout()"], ["void", "org.apache.catalina.core.ApplicationContextFacade.setSessionTimeout(int)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getRequestCharacterEncoding()"], ["void", "org.apache.catalina.core.ApplicationContextFacade.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationContextFacade.getResponseCharacterEncoding()"], ["void", "org.apache.catalina.core.ApplicationContextFacade.setResponseCharacterEncoding(java.lang.String)"], ["java.lang.Void", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch.run()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch.run()"], ["java.lang.Void", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward.run()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward.run()"], ["java.lang.Void", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude.run()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude.run()"], ["org.apache.catalina.core.ApplicationDispatcher", "org.apache.catalina.core.ApplicationDispatcher(org.apache.catalina.Wrapper, java.lang.String, java.lang.String, java.lang.String, java.lang.String, javax.servlet.http.HttpServletMapping, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.apache.catalina.core.ApplicationDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.apache.catalina.core.ApplicationDispatcher.dispatch(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["java.lang.Void", "org.apache.catalina.core.ApplicationFilterChain$1.run()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationFilterChain$1.run()"], ["org.apache.catalina.core.ApplicationFilterChain", "org.apache.catalina.core.ApplicationFilterChain()"], ["void", "org.apache.catalina.core.ApplicationFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["javax.servlet.ServletRequest", "org.apache.catalina.core.ApplicationFilterChain.getLastServicedRequest()"], ["javax.servlet.ServletResponse", "org.apache.catalina.core.ApplicationFilterChain.getLastServicedResponse()"], ["void", "org.apache.catalina.core.ApplicationFilterChain.findNonAsyncFilters(java.util.Set<java.lang.String>)"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterConfig.getFilterName()"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterConfig.getFilterClass()"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterConfig.getInitParameter(java.lang.String)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.ApplicationFilterConfig.getServletContext()"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterConfig.toString()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.core.ApplicationFilterConfig.getFilterInitParameterMap()"], ["org.apache.catalina.core.ApplicationFilterChain", "org.apache.catalina.core.ApplicationFilterFactory.createFilterChain(javax.servlet.ServletRequest, org.apache.catalina.Wrapper, javax.servlet.Servlet)"], ["org.apache.catalina.core.ApplicationFilterRegistration", "org.apache.catalina.core.ApplicationFilterRegistration(org.apache.tomcat.util.descriptor.web.FilterDef, org.apache.catalina.Context)"], ["void", "org.apache.catalina.core.ApplicationFilterRegistration.addMappingForServletNames(java.util.EnumSet<javax.servlet.DispatcherType>, boolean, java.lang.String...)"], ["void", "org.apache.catalina.core.ApplicationFilterRegistration.addMappingForUrlPatterns(java.util.EnumSet<javax.servlet.DispatcherType>, boolean, java.lang.String...)"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterRegistration.getClassName()"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterRegistration.getInitParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.core.ApplicationFilterRegistration.getInitParameters()"], ["java.lang.String", "org.apache.catalina.core.ApplicationFilterRegistration.getName()"], ["boolean", "org.apache.catalina.core.ApplicationFilterRegistration.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationFilterRegistration.setAsyncSupported(boolean)"], ["org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator", "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator(org.apache.catalina.core.ApplicationHttpRequest)"], ["boolean", "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator.hasMoreElements()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator.nextElement()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator.nextElement()"], ["org.apache.catalina.core.ApplicationHttpRequest", "org.apache.catalina.core.ApplicationHttpRequest(javax.servlet.http.HttpServletRequest, org.apache.catalina.Context, boolean)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.ApplicationHttpRequest.getServletContext()"], ["java.lang.Object", "org.apache.catalina.core.ApplicationHttpRequest.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpRequest.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpRequest.setAttribute(java.lang.String, java.lang.Object)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.ApplicationHttpRequest.getRequestDispatcher(java.lang.String)"], ["javax.servlet.DispatcherType", "org.apache.catalina.core.ApplicationHttpRequest.getDispatcherType()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getContextPath()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String[]>", "org.apache.catalina.core.ApplicationHttpRequest.getParameterMap()"], ["java.lang.String[]", "org.apache.catalina.core.ApplicationHttpRequest.getParameterValues(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getPathInfo()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getPathTranslated()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getQueryString()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getRequestURI()"], ["java.lang.StringBuffer", "org.apache.catalina.core.ApplicationHttpRequest.getRequestURL()"], ["java.lang.String", "org.apache.catalina.core.ApplicationHttpRequest.getServletPath()"], ["javax.servlet.http.HttpServletMapping", "org.apache.catalina.core.ApplicationHttpRequest.getHttpServletMapping()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.core.ApplicationHttpRequest.getSession()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.core.ApplicationHttpRequest.getSession(boolean)"], ["boolean", "org.apache.catalina.core.ApplicationHttpRequest.isRequestedSessionIdValid()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationHttpRequest.newPushBuilder()"], ["void", "org.apache.catalina.core.ApplicationHttpRequest.recycle()"], ["org.apache.catalina.core.ApplicationHttpResponse", "org.apache.catalina.core.ApplicationHttpResponse(javax.servlet.http.HttpServletResponse, boolean)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.reset()"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setContentLength(int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setContentLengthLong(long)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setContentType(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setLocale(java.util.Locale)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setBufferSize(int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.addCookie(javax.servlet.http.Cookie)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.addDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.addIntHeader(java.lang.String, int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.sendError(int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.sendError(int, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.sendRedirect(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setIntHeader(java.lang.String, int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setStatus(int)"], ["void", "org.apache.catalina.core.ApplicationHttpResponse.setStatus(int, java.lang.String)"], ["org.apache.catalina.core.ApplicationMapping$MappingImpl", "org.apache.catalina.core.ApplicationMapping$MappingImpl(java.lang.String, java.lang.String, javax.servlet.http.MappingMatch, java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationMapping$MappingImpl.getMatchValue()"], ["java.lang.String", "org.apache.catalina.core.ApplicationMapping$MappingImpl.getPattern()"], ["javax.servlet.http.MappingMatch", "org.apache.catalina.core.ApplicationMapping$MappingImpl.getMappingMatch()"], ["java.lang.String", "org.apache.catalina.core.ApplicationMapping$MappingImpl.getServletName()"], ["org.apache.catalina.core.ApplicationMapping", "org.apache.catalina.core.ApplicationMapping(org.apache.catalina.mapper.MappingData)"], ["javax.servlet.http.HttpServletMapping", "org.apache.catalina.core.ApplicationMapping.getHttpServletMapping()"], ["void", "org.apache.catalina.core.ApplicationMapping.recycle()"], ["org.apache.catalina.core.ApplicationPart", "org.apache.catalina.core.ApplicationPart(org.apache.tomcat.util.http.fileupload.FileItem, java.io.File)"], ["void", "org.apache.catalina.core.ApplicationPart.delete()"], ["java.lang.String", "org.apache.catalina.core.ApplicationPart.getContentType()"], ["java.lang.String", "org.apache.catalina.core.ApplicationPart.getHeader(java.lang.String)"], ["java.io.InputStream", "org.apache.catalina.core.ApplicationPart.getInputStream()"], ["java.lang.String", "org.apache.catalina.core.ApplicationPart.getName()"], ["long", "org.apache.catalina.core.ApplicationPart.getSize()"], ["void", "org.apache.catalina.core.ApplicationPart.write(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPart.getString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPart.getSubmittedFileName()"], ["org.apache.catalina.core.ApplicationPushBuilder", "org.apache.catalina.core.ApplicationPushBuilder(org.apache.catalina.connector.Request, javax.servlet.http.HttpServletRequest)"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.path(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPushBuilder.getPath()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.method(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPushBuilder.getMethod()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.queryString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPushBuilder.getQueryString()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.sessionId(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPushBuilder.getSessionId()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.addHeader(java.lang.String, java.lang.String)"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.setHeader(java.lang.String, java.lang.String)"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.core.ApplicationPushBuilder.removeHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationPushBuilder.getHeader(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationPushBuilder.push()"], ["org.apache.catalina.core.ApplicationRequest", "org.apache.catalina.core.ApplicationRequest(javax.servlet.ServletRequest)"], ["java.lang.Object", "org.apache.catalina.core.ApplicationRequest.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationRequest.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationRequest.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.core.ApplicationRequest.setRequest(javax.servlet.ServletRequest)"], ["org.apache.catalina.core.ApplicationResponse", "org.apache.catalina.core.ApplicationResponse(javax.servlet.ServletResponse, boolean)"], ["void", "org.apache.catalina.core.ApplicationResponse.reset()"], ["void", "org.apache.catalina.core.ApplicationResponse.setContentLength(int)"], ["void", "org.apache.catalina.core.ApplicationResponse.setContentLengthLong(long)"], ["void", "org.apache.catalina.core.ApplicationResponse.setContentType(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationResponse.setLocale(java.util.Locale)"], ["void", "org.apache.catalina.core.ApplicationResponse.setBufferSize(int)"], ["void", "org.apache.catalina.core.ApplicationResponse.setResponse(javax.servlet.ServletResponse)"], ["org.apache.catalina.core.ApplicationServletRegistration", "org.apache.catalina.core.ApplicationServletRegistration(org.apache.catalina.Wrapper, org.apache.catalina.Context)"], ["java.lang.String", "org.apache.catalina.core.ApplicationServletRegistration.getClassName()"], ["java.lang.String", "org.apache.catalina.core.ApplicationServletRegistration.getInitParameter(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.core.ApplicationServletRegistration.getInitParameters()"], ["java.lang.String", "org.apache.catalina.core.ApplicationServletRegistration.getName()"], ["boolean", "org.apache.catalina.core.ApplicationServletRegistration.setInitParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationServletRegistration.setAsyncSupported(boolean)"], ["void", "org.apache.catalina.core.ApplicationServletRegistration.setLoadOnStartup(int)"], ["void", "org.apache.catalina.core.ApplicationServletRegistration.setMultipartConfig(javax.servlet.MultipartConfigElement)"], ["void", "org.apache.catalina.core.ApplicationServletRegistration.setRunAsRole(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.ApplicationServletRegistration.getRunAsRole()"], ["org.apache.catalina.core.ApplicationSessionCookieConfig", "org.apache.catalina.core.ApplicationSessionCookieConfig(org.apache.catalina.core.StandardContext)"], ["java.lang.String", "org.apache.catalina.core.ApplicationSessionCookieConfig.getComment()"], ["java.lang.String", "org.apache.catalina.core.ApplicationSessionCookieConfig.getDomain()"], ["int", "org.apache.catalina.core.ApplicationSessionCookieConfig.getMaxAge()"], ["java.lang.String", "org.apache.catalina.core.ApplicationSessionCookieConfig.getName()"], ["java.lang.String", "org.apache.catalina.core.ApplicationSessionCookieConfig.getPath()"], ["boolean", "org.apache.catalina.core.ApplicationSessionCookieConfig.isHttpOnly()"], ["boolean", "org.apache.catalina.core.ApplicationSessionCookieConfig.isSecure()"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setComment(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setDomain(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setHttpOnly(boolean)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setMaxAge(int)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setName(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setPath(java.lang.String)"], ["void", "org.apache.catalina.core.ApplicationSessionCookieConfig.setSecure(boolean)"], ["javax.servlet.http.Cookie", "org.apache.catalina.core.ApplicationSessionCookieConfig.createSessionCookie(org.apache.catalina.Context, java.lang.String, boolean)"], ["boolean", "org.apache.catalina.core.AprLifecycleListener.isAprAvailable()"], ["org.apache.catalina.core.AprLifecycleListener", "org.apache.catalina.core.AprLifecycleListener()"], ["void", "org.apache.catalina.core.AprLifecycleListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["java.lang.String", "org.apache.catalina.core.AprLifecycleListener.getSSLEngine()"], ["void", "org.apache.catalina.core.AprLifecycleListener.setSSLEngine(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.AprLifecycleListener.getSSLRandomSeed()"], ["void", "org.apache.catalina.core.AprLifecycleListener.setSSLRandomSeed(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.AprLifecycleListener.getFIPSMode()"], ["void", "org.apache.catalina.core.AprLifecycleListener.setFIPSMode(java.lang.String)"], ["boolean", "org.apache.catalina.core.AprLifecycleListener.isFIPSModeActive()"], ["void", "org.apache.catalina.core.AprLifecycleListener.setUseAprConnector(boolean)"], ["boolean", "org.apache.catalina.core.AprLifecycleListener.getUseAprConnector()"], ["void", "org.apache.catalina.core.AprLifecycleListener.setUseOpenSSL(boolean)"], ["boolean", "org.apache.catalina.core.AprLifecycleListener.getUseOpenSSL()"], ["boolean", "org.apache.catalina.core.AprLifecycleListener.isInstanceCreated()"], ["org.apache.catalina.core.AsyncContextImpl$AsyncRunnable", "org.apache.catalina.core.AsyncContextImpl$AsyncRunnable(org.apache.catalina.connector.Request, org.apache.catalina.AsyncDispatcher, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["void", "org.apache.catalina.core.AsyncContextImpl$AsyncRunnable.run()"], ["org.apache.catalina.core.AsyncContextImpl$RunnableWrapper", "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper(java.lang.Runnable, org.apache.catalina.Context, org.apache.coyote.Request)"], ["void", "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper.run()"], ["org.apache.catalina.core.AsyncContextImpl", "org.apache.catalina.core.AsyncContextImpl(org.apache.catalina.connector.Request)"], ["void", "org.apache.catalina.core.AsyncContextImpl.complete()"], ["void", "org.apache.catalina.core.AsyncContextImpl.fireOnComplete()"], ["boolean", "org.apache.catalina.core.AsyncContextImpl.timeout()"], ["void", "org.apache.catalina.core.AsyncContextImpl.dispatch()"], ["void", "org.apache.catalina.core.AsyncContextImpl.dispatch(java.lang.String)"], ["void", "org.apache.catalina.core.AsyncContextImpl.dispatch(javax.servlet.ServletContext, java.lang.String)"], ["javax.servlet.ServletRequest", "org.apache.catalina.core.AsyncContextImpl.getRequest()"], ["javax.servlet.ServletResponse", "org.apache.catalina.core.AsyncContextImpl.getResponse()"], ["void", "org.apache.catalina.core.AsyncContextImpl.start(java.lang.Runnable)"], ["void", "org.apache.catalina.core.AsyncContextImpl.addListener(javax.servlet.AsyncListener)"], ["void", "org.apache.catalina.core.AsyncContextImpl.addListener(javax.servlet.AsyncListener, javax.servlet.ServletRequest, javax.servlet.ServletResponse)"], ["<T extends javax.servlet.AsyncListener> T", "org.apache.catalina.core.AsyncContextImpl.createListener(java.lang.Class<T>)"], ["void", "org.apache.catalina.core.AsyncContextImpl.recycle()"], ["boolean", "org.apache.catalina.core.AsyncContextImpl.isStarted()"], ["void", "org.apache.catalina.core.AsyncContextImpl.setStarted(org.apache.catalina.Context, javax.servlet.ServletRequest, javax.servlet.ServletResponse, boolean)"], ["boolean", "org.apache.catalina.core.AsyncContextImpl.hasOriginalRequestAndResponse()"], ["long", "org.apache.catalina.core.AsyncContextImpl.getTimeout()"], ["void", "org.apache.catalina.core.AsyncContextImpl.setTimeout(long)"], ["boolean", "org.apache.catalina.core.AsyncContextImpl.isAvailable()"], ["void", "org.apache.catalina.core.AsyncContextImpl.setErrorState(java.lang.Throwable, boolean)"], ["org.apache.catalina.core.AsyncListenerWrapper", "org.apache.catalina.core.AsyncListenerWrapper()"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.fireOnStartAsync(javax.servlet.AsyncEvent)"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.fireOnComplete(javax.servlet.AsyncEvent)"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.fireOnTimeout(javax.servlet.AsyncEvent)"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.fireOnError(javax.servlet.AsyncEvent)"], ["javax.servlet.AsyncListener", "org.apache.catalina.core.AsyncListenerWrapper.getListener()"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.setListener(javax.servlet.AsyncListener)"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.setServletRequest(javax.servlet.ServletRequest)"], ["void", "org.apache.catalina.core.AsyncListenerWrapper.setServletResponse(javax.servlet.ServletResponse)"], ["org.apache.catalina.core.Constants", "org.apache.catalina.core.Constants()"], ["void", "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run()"], ["void", "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessorMonitor.run()"], ["java.lang.Void", "org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run()"], ["java.lang.Object", "org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run()"], ["org.apache.catalina.core.ContainerBase$StartChild", "org.apache.catalina.core.ContainerBase$StartChild(org.apache.catalina.Container)"], ["java.lang.Void", "org.apache.catalina.core.ContainerBase$StartChild.call()"], ["java.lang.Object", "org.apache.catalina.core.ContainerBase$StartChild.call()"], ["org.apache.catalina.core.ContainerBase$StopChild", "org.apache.catalina.core.ContainerBase$StopChild(org.apache.catalina.Container)"], ["java.lang.Void", "org.apache.catalina.core.ContainerBase$StopChild.call()"], ["java.lang.Object", "org.apache.catalina.core.ContainerBase$StopChild.call()"], ["org.apache.catalina.core.ContainerBase", "org.apache.catalina.core.ContainerBase()"], ["int", "org.apache.catalina.core.ContainerBase.getStartStopThreads()"], ["void", "org.apache.catalina.core.ContainerBase.setStartStopThreads(int)"], ["int", "org.apache.catalina.core.ContainerBase.getBackgroundProcessorDelay()"], ["void", "org.apache.catalina.core.ContainerBase.setBackgroundProcessorDelay(int)"], ["org.apache.juli.logging.Log", "org.apache.catalina.core.ContainerBase.getLogger()"], ["java.lang.String", "org.apache.catalina.core.ContainerBase.getLogName()"], ["org.apache.catalina.Cluster", "org.apache.catalina.core.ContainerBase.getCluster()"], ["void", "org.apache.catalina.core.ContainerBase.setCluster(org.apache.catalina.Cluster)"], ["java.lang.String", "org.apache.catalina.core.ContainerBase.getName()"], ["void", "org.apache.catalina.core.ContainerBase.setName(java.lang.String)"], ["boolean", "org.apache.catalina.core.ContainerBase.getStartChildren()"], ["void", "org.apache.catalina.core.ContainerBase.setStartChildren(boolean)"], ["org.apache.catalina.Container", "org.apache.catalina.core.ContainerBase.getParent()"], ["void", "org.apache.catalina.core.ContainerBase.setParent(org.apache.catalina.Container)"], ["java.lang.ClassLoader", "org.apache.catalina.core.ContainerBase.getParentClassLoader()"], ["void", "org.apache.catalina.core.ContainerBase.setParentClassLoader(java.lang.ClassLoader)"], ["org.apache.catalina.Pipeline", "org.apache.catalina.core.ContainerBase.getPipeline()"], ["org.apache.catalina.Realm", "org.apache.catalina.core.ContainerBase.getRealm()"], ["void", "org.apache.catalina.core.ContainerBase.setRealm(org.apache.catalina.Realm)"], ["void", "org.apache.catalina.core.ContainerBase.addChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.ContainerBase.addContainerListener(org.apache.catalina.ContainerListener)"], ["void", "org.apache.catalina.core.ContainerBase.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["org.apache.catalina.Container", "org.apache.catalina.core.ContainerBase.findChild(java.lang.String)"], ["org.apache.catalina.Container[]", "org.apache.catalina.core.ContainerBase.findChildren()"], ["org.apache.catalina.ContainerListener[]", "org.apache.catalina.core.ContainerBase.findContainerListeners()"], ["void", "org.apache.catalina.core.ContainerBase.removeChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.ContainerBase.removeContainerListener(org.apache.catalina.ContainerListener)"], ["void", "org.apache.catalina.core.ContainerBase.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.core.ContainerBase.logAccess(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long, boolean)"], ["org.apache.catalina.AccessLog", "org.apache.catalina.core.ContainerBase.getAccessLog()"], ["synchronized", "org.apache.catalina.core.ContainerBase.void addValve(org.apache.catalina.Valve)"], ["void", "org.apache.catalina.core.ContainerBase.backgroundProcess()"], ["java.io.File", "org.apache.catalina.core.ContainerBase.getCatalinaBase()"], ["java.io.File", "org.apache.catalina.core.ContainerBase.getCatalinaHome()"], ["void", "org.apache.catalina.core.ContainerBase.fireContainerEvent(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.apache.catalina.core.ContainerBase.getMBeanKeyProperties()"], ["javax.management.ObjectName[]", "org.apache.catalina.core.ContainerBase.getChildren()"], ["java.lang.String", "org.apache.catalina.core.ContainerBase.toString()"], ["org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry(java.lang.String, java.lang.Class<?>[], java.lang.String, org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType)"], ["java.lang.String", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry.getAccessibleObjectName()"], ["java.lang.String", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry.getName()"], ["org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry.getType()"], ["org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType[]", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType.values()"], ["org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType", "org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntryType.valueOf(java.lang.String)"], ["org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetField", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetField(java.lang.Class<?>, org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)"], ["java.lang.reflect.Field", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetField.run()"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetField.run()"], ["org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetMethod", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetMethod(java.lang.Class<?>, org.apache.catalina.core.DefaultInstanceManager$AnnotationCacheEntry)"], ["java.lang.reflect.Method", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetMethod.run()"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedGetMethod.run()"], ["org.apache.catalina.core.DefaultInstanceManager$PrivilegedLoadClass", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedLoadClass(org.apache.catalina.core.DefaultInstanceManager, java.lang.String, java.lang.ClassLoader)"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager$PrivilegedLoadClass.run()"], ["org.apache.catalina.core.DefaultInstanceManager", "org.apache.catalina.core.DefaultInstanceManager(javax.naming.Context, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>, org.apache.catalina.Context, java.lang.ClassLoader)"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager.newInstance(java.lang.Class<?>)"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager.newInstance(java.lang.String)"], ["java.lang.Object", "org.apache.catalina.core.DefaultInstanceManager.newInstance(java.lang.String, java.lang.ClassLoader)"], ["void", "org.apache.catalina.core.DefaultInstanceManager.newInstance(java.lang.Object)"], ["void", "org.apache.catalina.core.DefaultInstanceManager.destroyInstance(java.lang.Object)"], ["void", "org.apache.catalina.core.DefaultInstanceManager.backgroundProcess()"], ["org.apache.catalina.core.FrameworkListener", "org.apache.catalina.core.FrameworkListener()"], ["void", "org.apache.catalina.core.FrameworkListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.core.FrameworkListener.containerEvent(org.apache.catalina.ContainerEvent)"], ["org.apache.catalina.core.JniLifecycleListener", "org.apache.catalina.core.JniLifecycleListener()"], ["void", "org.apache.catalina.core.JniLifecycleListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.core.JniLifecycleListener.setLibraryName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.JniLifecycleListener.getLibraryName()"], ["void", "org.apache.catalina.core.JniLifecycleListener.setLibraryPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.JniLifecycleListener.getLibraryPath()"], ["org.apache.catalina.core.JreMemoryLeakPreventionListener", "org.apache.catalina.core.JreMemoryLeakPreventionListener()"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isAppContextProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setAppContextProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isAWTThreadProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setAWTThreadProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isGcDaemonProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setGcDaemonProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isTokenPollerProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setTokenPollerProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isUrlCacheProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setUrlCacheProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isXmlParsingProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setXmlParsingProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isLdapPoolProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setLdapPoolProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.isDriverManagerProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setDriverManagerProtection(boolean)"], ["boolean", "org.apache.catalina.core.JreMemoryLeakPreventionListener.getForkJoinCommonPoolProtection()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setForkJoinCommonPoolProtection(boolean)"], ["java.lang.String", "org.apache.catalina.core.JreMemoryLeakPreventionListener.getClassesToInitialize()"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.setClassesToInitialize(java.lang.String)"], ["void", "org.apache.catalina.core.JreMemoryLeakPreventionListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.core.NamingContextListener", "org.apache.catalina.core.NamingContextListener()"], ["boolean", "org.apache.catalina.core.NamingContextListener.getExceptionOnFailedWrite()"], ["void", "org.apache.catalina.core.NamingContextListener.setExceptionOnFailedWrite(boolean)"], ["java.lang.String", "org.apache.catalina.core.NamingContextListener.getName()"], ["void", "org.apache.catalina.core.NamingContextListener.setName(java.lang.String)"], ["javax.naming.Context", "org.apache.catalina.core.NamingContextListener.getEnvContext()"], ["void", "org.apache.catalina.core.NamingContextListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.core.NamingContextListener.containerEvent(org.apache.catalina.ContainerEvent)"], ["void", "org.apache.catalina.core.NamingContextListener.propertyChange(java.beans.PropertyChangeEvent)"], ["void", "org.apache.catalina.core.NamingContextListener.addEjb(org.apache.tomcat.util.descriptor.web.ContextEjb)"], ["void", "org.apache.catalina.core.NamingContextListener.addEnvironment(org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["void", "org.apache.catalina.core.NamingContextListener.addLocalEjb(org.apache.tomcat.util.descriptor.web.ContextLocalEjb)"], ["void", "org.apache.catalina.core.NamingContextListener.addMessageDestinationRef(org.apache.tomcat.util.descriptor.web.MessageDestinationRef)"], ["void", "org.apache.catalina.core.NamingContextListener.addService(org.apache.tomcat.util.descriptor.web.ContextService)"], ["void", "org.apache.catalina.core.NamingContextListener.addResource(org.apache.tomcat.util.descriptor.web.ContextResource)"], ["void", "org.apache.catalina.core.NamingContextListener.addResourceEnvRef(org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef)"], ["void", "org.apache.catalina.core.NamingContextListener.addResourceLink(org.apache.tomcat.util.descriptor.web.ContextResourceLink)"], ["void", "org.apache.catalina.core.NamingContextListener.removeEjb(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeEnvironment(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeLocalEjb(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeMessageDestinationRef(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeService(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeResource(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeResourceEnvRef(java.lang.String)"], ["void", "org.apache.catalina.core.NamingContextListener.removeResourceLink(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext$1.bind()"], ["void", "org.apache.catalina.core.StandardContext$1.unbind()"], ["boolean", "org.apache.catalina.core.StandardContext$2.matches(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$2.mutate(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.FilterMap[]", "org.apache.catalina.core.StandardContext$ContextFilterMaps.asArray()"], ["void", "org.apache.catalina.core.StandardContext$ContextFilterMaps.add(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.core.StandardContext$ContextFilterMaps.addBefore(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.core.StandardContext$ContextFilterMaps.remove(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["org.apache.catalina.core.StandardContext$NoPluggabilityServletContext", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext(javax.servlet.ServletContext)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getContextPath()"], ["javax.servlet.ServletContext", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getContext(java.lang.String)"], ["int", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getMajorVersion()"], ["int", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getMinorVersion()"], ["int", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getEffectiveMajorVersion()"], ["int", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getEffectiveMinorVersion()"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getMimeType(java.lang.String)"], ["java.net.URL", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getResource(java.lang.String)"], ["java.io.InputStream", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getResourceAsStream(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getRequestDispatcher(java.lang.String)"], ["javax.servlet.RequestDispatcher", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getNamedDispatcher(java.lang.String)"], ["javax.servlet.Servlet", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServlet(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.log(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.log(java.lang.Exception, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.log(java.lang.String, java.lang.Throwable)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getRealPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServerInfo()"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getInitParameter(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setInitParameter(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.removeAttribute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServletContextName()"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addServlet(java.lang.String, java.lang.String)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addServlet(java.lang.String, javax.servlet.Servlet)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addServlet(java.lang.String, java.lang.Class<? extends javax.servlet.Servlet>)"], ["javax.servlet.ServletRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addJspFile(java.lang.String, java.lang.String)"], ["<T extends javax.servlet.Servlet> T", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.createServlet(java.lang.Class<T>)"], ["javax.servlet.ServletRegistration", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServletRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration>", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getServletRegistrations()"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addFilter(java.lang.String, java.lang.String)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addFilter(java.lang.String, javax.servlet.Filter)"], ["javax.servlet.FilterRegistration$Dynamic", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addFilter(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>)"], ["<T extends javax.servlet.Filter> T", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.createFilter(java.lang.Class<T>)"], ["javax.servlet.FilterRegistration", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getFilterRegistration(java.lang.String)"], ["java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration>", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getFilterRegistrations()"], ["javax.servlet.SessionCookieConfig", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getSessionCookieConfig()"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode>)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addListener(java.lang.String)"], ["<T extends java.util.EventListener> void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addListener(T)"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.addListener(java.lang.Class<? extends java.util.EventListener>)"], ["<T extends java.util.EventListener> T", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.createListener(java.lang.Class<T>)"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getJspConfigDescriptor()"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getClassLoader()"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.declareRoles(java.lang.String...)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getVirtualServerName()"], ["int", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getSessionTimeout()"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setSessionTimeout(int)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getRequestCharacterEncoding()"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getResponseCharacterEncoding()"], ["void", "org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.setResponseCharacterEncoding(java.lang.String)"], ["org.apache.catalina.core.StandardContext", "org.apache.catalina.core.StandardContext()"], ["void", "org.apache.catalina.core.StandardContext.setCreateUploadTargets(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getCreateUploadTargets()"], ["void", "org.apache.catalina.core.StandardContext.incrementInProgressAsyncCount()"], ["void", "org.apache.catalina.core.StandardContext.decrementInProgressAsyncCount()"], ["long", "org.apache.catalina.core.StandardContext.getInProgressAsyncCount()"], ["void", "org.apache.catalina.core.StandardContext.setAllowMultipleLeadingForwardSlashInPath(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getAllowMultipleLeadingForwardSlashInPath()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getRequestCharacterEncoding()"], ["void", "org.apache.catalina.core.StandardContext.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getResponseCharacterEncoding()"], ["void", "org.apache.catalina.core.StandardContext.setResponseCharacterEncoding(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.setDispatchersUseEncodedPaths(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getDispatchersUseEncodedPaths()"], ["void", "org.apache.catalina.core.StandardContext.setUseRelativeRedirects(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getUseRelativeRedirects()"], ["void", "org.apache.catalina.core.StandardContext.setMapperContextRootRedirectEnabled(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getMapperContextRootRedirectEnabled()"], ["void", "org.apache.catalina.core.StandardContext.setMapperDirectoryRedirectEnabled(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getMapperDirectoryRedirectEnabled()"], ["void", "org.apache.catalina.core.StandardContext.setValidateClientProvidedNewSessionId(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getValidateClientProvidedNewSessionId()"], ["void", "org.apache.catalina.core.StandardContext.setCookieProcessor(org.apache.tomcat.util.http.CookieProcessor)"], ["org.apache.tomcat.util.http.CookieProcessor", "org.apache.catalina.core.StandardContext.getCookieProcessor()"], ["java.lang.Object", "org.apache.catalina.core.StandardContext.getNamingToken()"], ["void", "org.apache.catalina.core.StandardContext.setContainerSciFilter(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getContainerSciFilter()"], ["boolean", "org.apache.catalina.core.StandardContext.getSendRedirectBody()"], ["void", "org.apache.catalina.core.StandardContext.setSendRedirectBody(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getPreemptiveAuthentication()"], ["void", "org.apache.catalina.core.StandardContext.setPreemptiveAuthentication(boolean)"], ["void", "org.apache.catalina.core.StandardContext.setFireRequestListenersOnForwards(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getFireRequestListenersOnForwards()"], ["void", "org.apache.catalina.core.StandardContext.setAddWebinfClassesResources(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getAddWebinfClassesResources()"], ["void", "org.apache.catalina.core.StandardContext.setWebappVersion(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getWebappVersion()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getBaseName()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getResourceOnlyServlets()"], ["void", "org.apache.catalina.core.StandardContext.setResourceOnlyServlets(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.isResourceOnlyServlet(java.lang.String)"], ["int", "org.apache.catalina.core.StandardContext.getEffectiveMajorVersion()"], ["void", "org.apache.catalina.core.StandardContext.setEffectiveMajorVersion(int)"], ["int", "org.apache.catalina.core.StandardContext.getEffectiveMinorVersion()"], ["void", "org.apache.catalina.core.StandardContext.setEffectiveMinorVersion(int)"], ["void", "org.apache.catalina.core.StandardContext.setLogEffectiveWebXml(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getLogEffectiveWebXml()"], ["org.apache.catalina.Authenticator", "org.apache.catalina.core.StandardContext.getAuthenticator()"], ["org.apache.tomcat.JarScanner", "org.apache.catalina.core.StandardContext.getJarScanner()"], ["void", "org.apache.catalina.core.StandardContext.setJarScanner(org.apache.tomcat.JarScanner)"], ["org.apache.tomcat.InstanceManager", "org.apache.catalina.core.StandardContext.getInstanceManager()"], ["void", "org.apache.catalina.core.StandardContext.setInstanceManager(org.apache.tomcat.InstanceManager)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getEncodedPath()"], ["void", "org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getAllowCasualMultipartParsing()"], ["void", "org.apache.catalina.core.StandardContext.setSwallowAbortedUploads(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getSwallowAbortedUploads()"], ["void", "org.apache.catalina.core.StandardContext.addServletContainerInitializer(javax.servlet.ServletContainerInitializer, java.util.Set<java.lang.Class<?>>)"], ["boolean", "org.apache.catalina.core.StandardContext.getDelegate()"], ["void", "org.apache.catalina.core.StandardContext.setDelegate(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.isUseNaming()"], ["void", "org.apache.catalina.core.StandardContext.setUseNaming(boolean)"], ["java.lang.Object[]", "org.apache.catalina.core.StandardContext.getApplicationEventListeners()"], ["void", "org.apache.catalina.core.StandardContext.setApplicationEventListeners(java.lang.Object[])"], ["void", "org.apache.catalina.core.StandardContext.addApplicationEventListener(java.lang.Object)"], ["java.lang.Object[]", "org.apache.catalina.core.StandardContext.getApplicationLifecycleListeners()"], ["void", "org.apache.catalina.core.StandardContext.setApplicationLifecycleListeners(java.lang.Object[])"], ["void", "org.apache.catalina.core.StandardContext.addApplicationLifecycleListener(java.lang.Object)"], ["boolean", "org.apache.catalina.core.StandardContext.getAntiResourceLocking()"], ["void", "org.apache.catalina.core.StandardContext.setAntiResourceLocking(boolean)"], ["org.apache.catalina.util.CharsetMapper", "org.apache.catalina.core.StandardContext.getCharsetMapper()"], ["void", "org.apache.catalina.core.StandardContext.setCharsetMapper(org.apache.catalina.util.CharsetMapper)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getCharset(java.util.Locale)"], ["java.net.URL", "org.apache.catalina.core.StandardContext.getConfigFile()"], ["void", "org.apache.catalina.core.StandardContext.setConfigFile(java.net.URL)"], ["boolean", "org.apache.catalina.core.StandardContext.getConfigured()"], ["void", "org.apache.catalina.core.StandardContext.setConfigured(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getCookies()"], ["void", "org.apache.catalina.core.StandardContext.setCookies(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getSessionCookieName()"], ["void", "org.apache.catalina.core.StandardContext.setSessionCookieName(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.getUseHttpOnly()"], ["void", "org.apache.catalina.core.StandardContext.setUseHttpOnly(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getSessionCookieDomain()"], ["void", "org.apache.catalina.core.StandardContext.setSessionCookieDomain(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getSessionCookiePath()"], ["void", "org.apache.catalina.core.StandardContext.setSessionCookiePath(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.getSessionCookiePathUsesTrailingSlash()"], ["void", "org.apache.catalina.core.StandardContext.setSessionCookiePathUsesTrailingSlash(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getCrossContext()"], ["void", "org.apache.catalina.core.StandardContext.setCrossContext(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getDefaultContextXml()"], ["void", "org.apache.catalina.core.StandardContext.setDefaultContextXml(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getDefaultWebXml()"], ["void", "org.apache.catalina.core.StandardContext.setDefaultWebXml(java.lang.String)"], ["long", "org.apache.catalina.core.StandardContext.getStartupTime()"], ["void", "org.apache.catalina.core.StandardContext.setStartupTime(long)"], ["long", "org.apache.catalina.core.StandardContext.getTldScanTime()"], ["void", "org.apache.catalina.core.StandardContext.setTldScanTime(long)"], ["boolean", "org.apache.catalina.core.StandardContext.getDenyUncoveredHttpMethods()"], ["void", "org.apache.catalina.core.StandardContext.setDenyUncoveredHttpMethods(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getDisplayName()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getAltDDName()"], ["void", "org.apache.catalina.core.StandardContext.setAltDDName(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.setDisplayName(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.getDistributable()"], ["void", "org.apache.catalina.core.StandardContext.setDistributable(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getDocBase()"], ["void", "org.apache.catalina.core.StandardContext.setDocBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getJ2EEApplication()"], ["void", "org.apache.catalina.core.StandardContext.setJ2EEApplication(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getJ2EEServer()"], ["void", "org.apache.catalina.core.StandardContext.setJ2EEServer(java.lang.String)"], ["org.apache.catalina.Loader", "org.apache.catalina.core.StandardContext.getLoader()"], ["void", "org.apache.catalina.core.StandardContext.setLoader(org.apache.catalina.Loader)"], ["org.apache.catalina.Manager", "org.apache.catalina.core.StandardContext.getManager()"], ["void", "org.apache.catalina.core.StandardContext.setManager(org.apache.catalina.Manager)"], ["boolean", "org.apache.catalina.core.StandardContext.getIgnoreAnnotations()"], ["void", "org.apache.catalina.core.StandardContext.setIgnoreAnnotations(boolean)"], ["org.apache.tomcat.util.descriptor.web.LoginConfig", "org.apache.catalina.core.StandardContext.getLoginConfig()"], ["void", "org.apache.catalina.core.StandardContext.setLoginConfig(org.apache.tomcat.util.descriptor.web.LoginConfig)"], ["org.apache.catalina.deploy.NamingResourcesImpl", "org.apache.catalina.core.StandardContext.getNamingResources()"], ["void", "org.apache.catalina.core.StandardContext.setNamingResources(org.apache.catalina.deploy.NamingResourcesImpl)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getPath()"], ["void", "org.apache.catalina.core.StandardContext.setPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getPublicId()"], ["void", "org.apache.catalina.core.StandardContext.setPublicId(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.getReloadable()"], ["boolean", "org.apache.catalina.core.StandardContext.getOverride()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getOriginalDocBase()"], ["void", "org.apache.catalina.core.StandardContext.setOriginalDocBase(java.lang.String)"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardContext.getParentClassLoader()"], ["boolean", "org.apache.catalina.core.StandardContext.getPrivileged()"], ["void", "org.apache.catalina.core.StandardContext.setPrivileged(boolean)"], ["void", "org.apache.catalina.core.StandardContext.setReloadable(boolean)"], ["void", "org.apache.catalina.core.StandardContext.setOverride(boolean)"], ["void", "org.apache.catalina.core.StandardContext.setReplaceWelcomeFiles(boolean)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.StandardContext.getServletContext()"], ["int", "org.apache.catalina.core.StandardContext.getSessionTimeout()"], ["void", "org.apache.catalina.core.StandardContext.setSessionTimeout(int)"], ["boolean", "org.apache.catalina.core.StandardContext.getSwallowOutput()"], ["void", "org.apache.catalina.core.StandardContext.setSwallowOutput(boolean)"], ["long", "org.apache.catalina.core.StandardContext.getUnloadDelay()"], ["void", "org.apache.catalina.core.StandardContext.setUnloadDelay(long)"], ["boolean", "org.apache.catalina.core.StandardContext.getUnpackWAR()"], ["void", "org.apache.catalina.core.StandardContext.setUnpackWAR(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getCopyXML()"], ["void", "org.apache.catalina.core.StandardContext.setCopyXML(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getWrapperClass()"], ["void", "org.apache.catalina.core.StandardContext.setWrapperClass(java.lang.String)"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.core.StandardContext.getResources()"], ["void", "org.apache.catalina.core.StandardContext.setResources(org.apache.catalina.WebResourceRoot)"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.catalina.core.StandardContext.getJspConfigDescriptor()"], ["void", "org.apache.catalina.core.StandardContext.setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)"], ["org.apache.catalina.ThreadBindingListener", "org.apache.catalina.core.StandardContext.getThreadBindingListener()"], ["void", "org.apache.catalina.core.StandardContext.setThreadBindingListener(org.apache.catalina.ThreadBindingListener)"], ["boolean", "org.apache.catalina.core.StandardContext.getJndiExceptionOnFailedWrite()"], ["void", "org.apache.catalina.core.StandardContext.setJndiExceptionOnFailedWrite(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getCharsetMapperClass()"], ["void", "org.apache.catalina.core.StandardContext.setCharsetMapperClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getWorkPath()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getWorkDir()"], ["void", "org.apache.catalina.core.StandardContext.setWorkDir(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesRmiTargets()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesRmiTargets(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesStopThreads()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesStopThreads(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesStopTimerThreads()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesStopTimerThreads(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesHttpClientKeepAliveThread()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesHttpClientKeepAliveThread(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getRenewThreadsWhenStoppingContext()"], ["void", "org.apache.catalina.core.StandardContext.setRenewThreadsWhenStoppingContext(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesObjectStreamClassCaches()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesObjectStreamClassCaches(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getClearReferencesThreadLocals()"], ["void", "org.apache.catalina.core.StandardContext.setClearReferencesThreadLocals(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getSkipMemoryLeakChecksOnJvmShutdown()"], ["void", "org.apache.catalina.core.StandardContext.setSkipMemoryLeakChecksOnJvmShutdown(boolean)"], ["java.lang.Boolean", "org.apache.catalina.core.StandardContext.getFailCtxIfServletStartFails()"], ["void", "org.apache.catalina.core.StandardContext.setFailCtxIfServletStartFails(java.lang.Boolean)"], ["void", "org.apache.catalina.core.StandardContext.addApplicationListener(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addApplicationParameter(org.apache.tomcat.util.descriptor.web.ApplicationParameter)"], ["void", "org.apache.catalina.core.StandardContext.addChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.StandardContext.addConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint)"], ["void", "org.apache.catalina.core.StandardContext.addErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["void", "org.apache.catalina.core.StandardContext.addFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef)"], ["void", "org.apache.catalina.core.StandardContext.addFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.core.StandardContext.addFilterMapBefore(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.core.StandardContext.addLocaleEncodingMappingParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addMessageDestination(org.apache.tomcat.util.descriptor.web.MessageDestination)"], ["void", "org.apache.catalina.core.StandardContext.addMessageDestinationRef(org.apache.tomcat.util.descriptor.web.MessageDestinationRef)"], ["void", "org.apache.catalina.core.StandardContext.addMimeMapping(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addRoleMapping(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addSecurityRole(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addServletMappingDecoded(java.lang.String, java.lang.String, boolean)"], ["void", "org.apache.catalina.core.StandardContext.addWatchedResource(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addWelcomeFile(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addWrapperLifecycle(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addWrapperListener(java.lang.String)"], ["org.apache.catalina.Wrapper", "org.apache.catalina.core.StandardContext.createWrapper()"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findApplicationListeners()"], ["org.apache.tomcat.util.descriptor.web.ApplicationParameter[]", "org.apache.catalina.core.StandardContext.findApplicationParameters()"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint[]", "org.apache.catalina.core.StandardContext.findConstraints()"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.core.StandardContext.findErrorPage(int)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.core.StandardContext.findErrorPage(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.core.StandardContext.findErrorPage(java.lang.Throwable)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage[]", "org.apache.catalina.core.StandardContext.findErrorPages()"], ["org.apache.tomcat.util.descriptor.web.FilterDef", "org.apache.catalina.core.StandardContext.findFilterDef(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.FilterDef[]", "org.apache.catalina.core.StandardContext.findFilterDefs()"], ["org.apache.tomcat.util.descriptor.web.FilterMap[]", "org.apache.catalina.core.StandardContext.findFilterMaps()"], ["org.apache.tomcat.util.descriptor.web.MessageDestination", "org.apache.catalina.core.StandardContext.findMessageDestination(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.MessageDestination[]", "org.apache.catalina.core.StandardContext.findMessageDestinations()"], ["org.apache.tomcat.util.descriptor.web.MessageDestinationRef", "org.apache.catalina.core.StandardContext.findMessageDestinationRef(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.MessageDestinationRef[]", "org.apache.catalina.core.StandardContext.findMessageDestinationRefs()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findMimeMapping(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findMimeMappings()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findParameter(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findParameters()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findRoleMapping(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.findSecurityRole(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findSecurityRoles()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findServletMapping(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findServletMappings()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findStatusPage(int)"], ["int[]", "org.apache.catalina.core.StandardContext.findStatusPages()"], ["boolean", "org.apache.catalina.core.StandardContext.findWelcomeFile(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findWatchedResources()"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findWelcomeFiles()"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findWrapperLifecycles()"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.findWrapperListeners()"], ["synchronized", "org.apache.catalina.core.StandardContext.void reload()"], ["void", "org.apache.catalina.core.StandardContext.removeApplicationListener(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeApplicationParameter(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.StandardContext.removeConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint)"], ["void", "org.apache.catalina.core.StandardContext.removeErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["void", "org.apache.catalina.core.StandardContext.removeFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef)"], ["void", "org.apache.catalina.core.StandardContext.removeFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.core.StandardContext.removeMessageDestination(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeMessageDestinationRef(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeMimeMapping(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeParameter(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeRoleMapping(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeSecurityRole(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeServletMapping(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeWatchedResource(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeWelcomeFile(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeWrapperLifecycle(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removeWrapperListener(java.lang.String)"], ["long", "org.apache.catalina.core.StandardContext.getProcessingTime()"], ["long", "org.apache.catalina.core.StandardContext.getMaxTime()"], ["long", "org.apache.catalina.core.StandardContext.getMinTime()"], ["int", "org.apache.catalina.core.StandardContext.getRequestCount()"], ["int", "org.apache.catalina.core.StandardContext.getErrorCount()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getRealPath(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.dynamicServletCreated(javax.servlet.Servlet)"], ["boolean", "org.apache.catalina.core.StandardContext.wasCreatedDynamicServlet(javax.servlet.Servlet)"], ["boolean", "org.apache.catalina.core.StandardContext.filterStart()"], ["boolean", "org.apache.catalina.core.StandardContext.filterStop()"], ["javax.servlet.FilterConfig", "org.apache.catalina.core.StandardContext.findFilterConfig(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardContext.listenerStart()"], ["boolean", "org.apache.catalina.core.StandardContext.listenerStop()"], ["void", "org.apache.catalina.core.StandardContext.resourcesStart()"], ["boolean", "org.apache.catalina.core.StandardContext.resourcesStop()"], ["boolean", "org.apache.catalina.core.StandardContext.loadOnStartup(org.apache.catalina.Container[])"], ["org.apache.tomcat.InstanceManager", "org.apache.catalina.core.StandardContext.createInstanceManager()"], ["void", "org.apache.catalina.core.StandardContext.backgroundProcess()"], ["boolean", "org.apache.catalina.core.StandardContext.isServlet22()"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardContext.bind(boolean, java.lang.ClassLoader)"], ["void", "org.apache.catalina.core.StandardContext.unbind(boolean, java.lang.ClassLoader)"], ["org.apache.catalina.core.NamingContextListener", "org.apache.catalina.core.StandardContext.getNamingContextListener()"], ["void", "org.apache.catalina.core.StandardContext.setNamingContextListener(org.apache.catalina.core.NamingContextListener)"], ["boolean", "org.apache.catalina.core.StandardContext.getPaused()"], ["boolean", "org.apache.catalina.core.StandardContext.fireRequestInitEvent(javax.servlet.ServletRequest)"], ["boolean", "org.apache.catalina.core.StandardContext.fireRequestDestroyEvent(javax.servlet.ServletRequest)"], ["void", "org.apache.catalina.core.StandardContext.addPostConstructMethod(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removePostConstructMethod(java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.addPreDestroyMethod(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardContext.removePreDestroyMethod(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findPostConstructMethod(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardContext.findPreDestroyMethod(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.core.StandardContext.findPostConstructMethods()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.core.StandardContext.findPreDestroyMethods()"], ["void", "org.apache.catalina.core.StandardContext.removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["javax.management.MBeanNotificationInfo[]", "org.apache.catalina.core.StandardContext.getNotificationInfo()"], ["void", "org.apache.catalina.core.StandardContext.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["void", "org.apache.catalina.core.StandardContext.removeNotificationListener(javax.management.NotificationListener)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.getWelcomeFiles()"], ["boolean", "org.apache.catalina.core.StandardContext.getXmlNamespaceAware()"], ["void", "org.apache.catalina.core.StandardContext.setXmlNamespaceAware(boolean)"], ["void", "org.apache.catalina.core.StandardContext.setXmlValidation(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getXmlValidation()"], ["void", "org.apache.catalina.core.StandardContext.setXmlBlockExternal(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getXmlBlockExternal()"], ["void", "org.apache.catalina.core.StandardContext.setTldValidation(boolean)"], ["boolean", "org.apache.catalina.core.StandardContext.getTldValidation()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.getServer()"], ["java.lang.String", "org.apache.catalina.core.StandardContext.setServer(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.getJavaVMs()"], ["java.lang.String[]", "org.apache.catalina.core.StandardContext.setJavaVMs(java.lang.String[])"], ["long", "org.apache.catalina.core.StandardContext.getStartTime()"], ["org.apache.catalina.core.StandardContextValve", "org.apache.catalina.core.StandardContextValve()"], ["void", "org.apache.catalina.core.StandardContextValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.core.StandardEngine$AccessLogListener", "org.apache.catalina.core.StandardEngine$AccessLogListener(org.apache.catalina.core.StandardEngine, org.apache.catalina.Host, org.apache.catalina.Context)"], ["void", "org.apache.catalina.core.StandardEngine$AccessLogListener.install()"], ["void", "org.apache.catalina.core.StandardEngine$AccessLogListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.core.StandardEngine$AccessLogListener.propertyChange(java.beans.PropertyChangeEvent)"], ["void", "org.apache.catalina.core.StandardEngine$AccessLogListener.containerEvent(org.apache.catalina.ContainerEvent)"], ["void", "org.apache.catalina.core.StandardEngine$NoopAccessLog.log(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.core.StandardEngine$NoopAccessLog.setRequestAttributesEnabled(boolean)"], ["boolean", "org.apache.catalina.core.StandardEngine$NoopAccessLog.getRequestAttributesEnabled()"], ["org.apache.catalina.core.StandardEngine", "org.apache.catalina.core.StandardEngine()"], ["org.apache.catalina.Realm", "org.apache.catalina.core.StandardEngine.getRealm()"], ["java.lang.String", "org.apache.catalina.core.StandardEngine.getDefaultHost()"], ["void", "org.apache.catalina.core.StandardEngine.setDefaultHost(java.lang.String)"], ["void", "org.apache.catalina.core.StandardEngine.setJvmRoute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardEngine.getJvmRoute()"], ["org.apache.catalina.Service", "org.apache.catalina.core.StandardEngine.getService()"], ["void", "org.apache.catalina.core.StandardEngine.setService(org.apache.catalina.Service)"], ["void", "org.apache.catalina.core.StandardEngine.addChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.StandardEngine.setParent(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.StandardEngine.logAccess(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long, boolean)"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardEngine.getParentClassLoader()"], ["java.io.File", "org.apache.catalina.core.StandardEngine.getCatalinaBase()"], ["java.io.File", "org.apache.catalina.core.StandardEngine.getCatalinaHome()"], ["org.apache.catalina.core.StandardEngineValve", "org.apache.catalina.core.StandardEngineValve()"], ["void", "org.apache.catalina.core.StandardEngineValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.core.StandardHost", "org.apache.catalina.core.StandardHost()"], ["boolean", "org.apache.catalina.core.StandardHost.getUndeployOldVersions()"], ["void", "org.apache.catalina.core.StandardHost.setUndeployOldVersions(boolean)"], ["java.util.concurrent.ExecutorService", "org.apache.catalina.core.StandardHost.getStartStopExecutor()"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getAppBase()"], ["java.io.File", "org.apache.catalina.core.StandardHost.getAppBaseFile()"], ["void", "org.apache.catalina.core.StandardHost.setAppBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getXmlBase()"], ["void", "org.apache.catalina.core.StandardHost.setXmlBase(java.lang.String)"], ["java.io.File", "org.apache.catalina.core.StandardHost.getConfigBaseFile()"], ["boolean", "org.apache.catalina.core.StandardHost.getCreateDirs()"], ["void", "org.apache.catalina.core.StandardHost.setCreateDirs(boolean)"], ["boolean", "org.apache.catalina.core.StandardHost.getAutoDeploy()"], ["void", "org.apache.catalina.core.StandardHost.setAutoDeploy(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getConfigClass()"], ["void", "org.apache.catalina.core.StandardHost.setConfigClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getContextClass()"], ["void", "org.apache.catalina.core.StandardHost.setContextClass(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardHost.getDeployOnStartup()"], ["void", "org.apache.catalina.core.StandardHost.setDeployOnStartup(boolean)"], ["boolean", "org.apache.catalina.core.StandardHost.isDeployXML()"], ["void", "org.apache.catalina.core.StandardHost.setDeployXML(boolean)"], ["boolean", "org.apache.catalina.core.StandardHost.isCopyXML()"], ["void", "org.apache.catalina.core.StandardHost.setCopyXML(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getErrorReportValveClass()"], ["void", "org.apache.catalina.core.StandardHost.setErrorReportValveClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getName()"], ["void", "org.apache.catalina.core.StandardHost.setName(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardHost.isUnpackWARs()"], ["void", "org.apache.catalina.core.StandardHost.setUnpackWARs(boolean)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getWorkDir()"], ["void", "org.apache.catalina.core.StandardHost.setWorkDir(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardHost.getDeployIgnore()"], ["java.util.regex.Pattern", "org.apache.catalina.core.StandardHost.getDeployIgnorePattern()"], ["void", "org.apache.catalina.core.StandardHost.setDeployIgnore(java.lang.String)"], ["boolean", "org.apache.catalina.core.StandardHost.isFailCtxIfServletStartFails()"], ["void", "org.apache.catalina.core.StandardHost.setFailCtxIfServletStartFails(boolean)"], ["void", "org.apache.catalina.core.StandardHost.addAlias(java.lang.String)"], ["void", "org.apache.catalina.core.StandardHost.addChild(org.apache.catalina.Container)"], ["java.lang.String[]", "org.apache.catalina.core.StandardHost.findReloadedContextMemoryLeaks()"], ["java.lang.String[]", "org.apache.catalina.core.StandardHost.findAliases()"], ["void", "org.apache.catalina.core.StandardHost.removeAlias(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardHost.getValveNames()"], ["java.lang.String[]", "org.apache.catalina.core.StandardHost.getAliases()"], ["org.apache.catalina.core.StandardHostValve", "org.apache.catalina.core.StandardHostValve()"], ["void", "org.apache.catalina.core.StandardHostValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.core.StandardPipeline", "org.apache.catalina.core.StandardPipeline()"], ["org.apache.catalina.core.StandardPipeline", "org.apache.catalina.core.StandardPipeline(org.apache.catalina.Container)"], ["boolean", "org.apache.catalina.core.StandardPipeline.isAsyncSupported()"], ["void", "org.apache.catalina.core.StandardPipeline.findNonAsyncValves(java.util.Set<java.lang.String>)"], ["org.apache.catalina.Container", "org.apache.catalina.core.StandardPipeline.getContainer()"], ["void", "org.apache.catalina.core.StandardPipeline.setContainer(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.core.StandardPipeline.toString()"], ["org.apache.catalina.Valve", "org.apache.catalina.core.StandardPipeline.getBasic()"], ["void", "org.apache.catalina.core.StandardPipeline.setBasic(org.apache.catalina.Valve)"], ["void", "org.apache.catalina.core.StandardPipeline.addValve(org.apache.catalina.Valve)"], ["org.apache.catalina.Valve[]", "org.apache.catalina.core.StandardPipeline.getValves()"], ["javax.management.ObjectName[]", "org.apache.catalina.core.StandardPipeline.getValveObjectNames()"], ["void", "org.apache.catalina.core.StandardPipeline.removeValve(org.apache.catalina.Valve)"], ["org.apache.catalina.Valve", "org.apache.catalina.core.StandardPipeline.getFirst()"], ["void", "org.apache.catalina.core.StandardServer$1.run()"], ["void", "org.apache.catalina.core.StandardServer$2.run()"], ["org.apache.catalina.core.StandardServer", "org.apache.catalina.core.StandardServer()"], ["java.lang.Object", "org.apache.catalina.core.StandardServer.getNamingToken()"], ["javax.naming.Context", "org.apache.catalina.core.StandardServer.getGlobalNamingContext()"], ["void", "org.apache.catalina.core.StandardServer.setGlobalNamingContext(javax.naming.Context)"], ["org.apache.catalina.deploy.NamingResourcesImpl", "org.apache.catalina.core.StandardServer.getGlobalNamingResources()"], ["void", "org.apache.catalina.core.StandardServer.setGlobalNamingResources(org.apache.catalina.deploy.NamingResourcesImpl)"], ["java.lang.String", "org.apache.catalina.core.StandardServer.getServerInfo()"], ["java.lang.String", "org.apache.catalina.core.StandardServer.getServerBuilt()"], ["java.lang.String", "org.apache.catalina.core.StandardServer.getServerNumber()"], ["int", "org.apache.catalina.core.StandardServer.getPort()"], ["void", "org.apache.catalina.core.StandardServer.setPort(int)"], ["int", "org.apache.catalina.core.StandardServer.getPortOffset()"], ["void", "org.apache.catalina.core.StandardServer.setPortOffset(int)"], ["int", "org.apache.catalina.core.StandardServer.getPortWithOffset()"], ["java.lang.String", "org.apache.catalina.core.StandardServer.getAddress()"], ["void", "org.apache.catalina.core.StandardServer.setAddress(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardServer.getShutdown()"], ["void", "org.apache.catalina.core.StandardServer.setShutdown(java.lang.String)"], ["org.apache.catalina.startup.Catalina", "org.apache.catalina.core.StandardServer.getCatalina()"], ["void", "org.apache.catalina.core.StandardServer.setCatalina(org.apache.catalina.startup.Catalina)"], ["int", "org.apache.catalina.core.StandardServer.getUtilityThreads()"], ["void", "org.apache.catalina.core.StandardServer.setUtilityThreads(int)"], ["boolean", "org.apache.catalina.core.StandardServer.getUtilityThreadsAsDaemon()"], ["void", "org.apache.catalina.core.StandardServer.setUtilityThreadsAsDaemon(boolean)"], ["int", "org.apache.catalina.core.StandardServer.getPeriodicEventDelay()"], ["void", "org.apache.catalina.core.StandardServer.setPeriodicEventDelay(int)"], ["void", "org.apache.catalina.core.StandardServer.addService(org.apache.catalina.Service)"], ["void", "org.apache.catalina.core.StandardServer.stopAwait()"], ["void", "org.apache.catalina.core.StandardServer.await()"], ["org.apache.catalina.Service", "org.apache.catalina.core.StandardServer.findService(java.lang.String)"], ["org.apache.catalina.Service[]", "org.apache.catalina.core.StandardServer.findServices()"], ["javax.management.ObjectName[]", "org.apache.catalina.core.StandardServer.getServiceNames()"], ["void", "org.apache.catalina.core.StandardServer.removeService(org.apache.catalina.Service)"], ["java.io.File", "org.apache.catalina.core.StandardServer.getCatalinaBase()"], ["void", "org.apache.catalina.core.StandardServer.setCatalinaBase(java.io.File)"], ["java.io.File", "org.apache.catalina.core.StandardServer.getCatalinaHome()"], ["void", "org.apache.catalina.core.StandardServer.setCatalinaHome(java.io.File)"], ["void", "org.apache.catalina.core.StandardServer.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.core.StandardServer.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.lang.String", "org.apache.catalina.core.StandardServer.toString()"], ["synchronized", "org.apache.catalina.core.StandardServer.void storeConfig()"], ["synchronized", "org.apache.catalina.core.StandardServer.void storeContext(org.apache.catalina.Context)"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardServer.getParentClassLoader()"], ["void", "org.apache.catalina.core.StandardServer.setParentClassLoader(java.lang.ClassLoader)"], ["java.util.concurrent.ScheduledExecutorService", "org.apache.catalina.core.StandardServer.getUtilityExecutor()"], ["org.apache.catalina.core.StandardService", "org.apache.catalina.core.StandardService()"], ["org.apache.catalina.mapper.Mapper", "org.apache.catalina.core.StandardService.getMapper()"], ["org.apache.catalina.Engine", "org.apache.catalina.core.StandardService.getContainer()"], ["void", "org.apache.catalina.core.StandardService.setContainer(org.apache.catalina.Engine)"], ["java.lang.String", "org.apache.catalina.core.StandardService.getName()"], ["void", "org.apache.catalina.core.StandardService.setName(java.lang.String)"], ["org.apache.catalina.Server", "org.apache.catalina.core.StandardService.getServer()"], ["void", "org.apache.catalina.core.StandardService.setServer(org.apache.catalina.Server)"], ["void", "org.apache.catalina.core.StandardService.addConnector(org.apache.catalina.connector.Connector)"], ["javax.management.ObjectName[]", "org.apache.catalina.core.StandardService.getConnectorNames()"], ["void", "org.apache.catalina.core.StandardService.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["org.apache.catalina.connector.Connector[]", "org.apache.catalina.core.StandardService.findConnectors()"], ["void", "org.apache.catalina.core.StandardService.removeConnector(org.apache.catalina.connector.Connector)"], ["void", "org.apache.catalina.core.StandardService.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.lang.String", "org.apache.catalina.core.StandardService.toString()"], ["void", "org.apache.catalina.core.StandardService.addExecutor(org.apache.catalina.Executor)"], ["org.apache.catalina.Executor[]", "org.apache.catalina.core.StandardService.findExecutors()"], ["org.apache.catalina.Executor", "org.apache.catalina.core.StandardService.getExecutor(java.lang.String)"], ["void", "org.apache.catalina.core.StandardService.removeExecutor(org.apache.catalina.Executor)"], ["java.lang.ClassLoader", "org.apache.catalina.core.StandardService.getParentClassLoader()"], ["void", "org.apache.catalina.core.StandardService.setParentClassLoader(java.lang.ClassLoader)"], ["java.lang.String", "org.apache.catalina.core.StandardService.getObjectNameKeyProperties()"], ["org.apache.catalina.core.StandardThreadExecutor", "org.apache.catalina.core.StandardThreadExecutor()"], ["void", "org.apache.catalina.core.StandardThreadExecutor.execute(java.lang.Runnable, long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.execute(java.lang.Runnable)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.contextStopping()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getThreadPriority()"], ["boolean", "org.apache.catalina.core.StandardThreadExecutor.isDaemon()"], ["java.lang.String", "org.apache.catalina.core.StandardThreadExecutor.getNamePrefix()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getMaxIdleTime()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getMaxThreads()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getMinSpareThreads()"], ["java.lang.String", "org.apache.catalina.core.StandardThreadExecutor.getName()"], ["boolean", "org.apache.catalina.core.StandardThreadExecutor.isPrestartminSpareThreads()"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setThreadPriority(int)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setDaemon(boolean)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setNamePrefix(java.lang.String)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setMaxIdleTime(int)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setMaxThreads(int)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setMinSpareThreads(int)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setPrestartminSpareThreads(boolean)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setName(java.lang.String)"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setMaxQueueSize(int)"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getMaxQueueSize()"], ["long", "org.apache.catalina.core.StandardThreadExecutor.getThreadRenewalDelay()"], ["void", "org.apache.catalina.core.StandardThreadExecutor.setThreadRenewalDelay(long)"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getActiveCount()"], ["long", "org.apache.catalina.core.StandardThreadExecutor.getCompletedTaskCount()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getCorePoolSize()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getLargestPoolSize()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getPoolSize()"], ["int", "org.apache.catalina.core.StandardThreadExecutor.getQueueSize()"], ["boolean", "org.apache.catalina.core.StandardThreadExecutor.resizePool(int, int)"], ["boolean", "org.apache.catalina.core.StandardThreadExecutor.resizeQueue(int)"], ["org.apache.catalina.core.StandardWrapper", "org.apache.catalina.core.StandardWrapper()"], ["boolean", "org.apache.catalina.core.StandardWrapper.isOverridable()"], ["void", "org.apache.catalina.core.StandardWrapper.setOverridable(boolean)"], ["long", "org.apache.catalina.core.StandardWrapper.getAvailable()"], ["void", "org.apache.catalina.core.StandardWrapper.setAvailable(long)"], ["int", "org.apache.catalina.core.StandardWrapper.getCountAllocated()"], ["int", "org.apache.catalina.core.StandardWrapper.getLoadOnStartup()"], ["void", "org.apache.catalina.core.StandardWrapper.setLoadOnStartup(int)"], ["void", "org.apache.catalina.core.StandardWrapper.setLoadOnStartupString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.getLoadOnStartupString()"], ["int", "org.apache.catalina.core.StandardWrapper.getMaxInstances()"], ["void", "org.apache.catalina.core.StandardWrapper.setMaxInstances(int)"], ["void", "org.apache.catalina.core.StandardWrapper.setParent(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.getRunAs()"], ["void", "org.apache.catalina.core.StandardWrapper.setRunAs(java.lang.String)"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.getServletClass()"], ["void", "org.apache.catalina.core.StandardWrapper.setServletClass(java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.setServletName(java.lang.String)"], ["java.lang.Boolean", "org.apache.catalina.core.StandardWrapper.isSingleThreadModel()"], ["boolean", "org.apache.catalina.core.StandardWrapper.isUnavailable()"], ["java.lang.String[]", "org.apache.catalina.core.StandardWrapper.getServletMethods()"], ["javax.servlet.Servlet", "org.apache.catalina.core.StandardWrapper.getServlet()"], ["void", "org.apache.catalina.core.StandardWrapper.setServlet(javax.servlet.Servlet)"], ["void", "org.apache.catalina.core.StandardWrapper.backgroundProcess()"], ["java.lang.Throwable", "org.apache.catalina.core.StandardWrapper.getRootCause(javax.servlet.ServletException)"], ["void", "org.apache.catalina.core.StandardWrapper.addChild(org.apache.catalina.Container)"], ["void", "org.apache.catalina.core.StandardWrapper.addInitParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.addMapping(java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.addSecurityReference(java.lang.String, java.lang.String)"], ["javax.servlet.Servlet", "org.apache.catalina.core.StandardWrapper.allocate()"], ["void", "org.apache.catalina.core.StandardWrapper.deallocate(javax.servlet.Servlet)"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.findInitParameter(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardWrapper.findInitParameters()"], ["java.lang.String[]", "org.apache.catalina.core.StandardWrapper.findMappings()"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.findSecurityReference(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.core.StandardWrapper.findSecurityReferences()"], ["synchronized", "org.apache.catalina.core.StandardWrapper.void load()"], ["synchronized", "org.apache.catalina.core.StandardWrapper.javax.servlet.Servlet loadServlet()"], ["void", "org.apache.catalina.core.StandardWrapper.removeInitParameter(java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.removeMapping(java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.removeSecurityReference(java.lang.String)"], ["void", "org.apache.catalina.core.StandardWrapper.unavailable(javax.servlet.UnavailableException)"], ["synchronized", "org.apache.catalina.core.StandardWrapper.void unload()"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.getInitParameter(java.lang.String)"], ["javax.servlet.ServletContext", "org.apache.catalina.core.StandardWrapper.getServletContext()"], ["java.lang.String", "org.apache.catalina.core.StandardWrapper.getServletName()"], ["long", "org.apache.catalina.core.StandardWrapper.getProcessingTime()"], ["long", "org.apache.catalina.core.StandardWrapper.getMaxTime()"], ["long", "org.apache.catalina.core.StandardWrapper.getMinTime()"], ["int", "org.apache.catalina.core.StandardWrapper.getRequestCount()"], ["int", "org.apache.catalina.core.StandardWrapper.getErrorCount()"], ["void", "org.apache.catalina.core.StandardWrapper.incrementErrorCount()"], ["long", "org.apache.catalina.core.StandardWrapper.getLoadTime()"], ["int", "org.apache.catalina.core.StandardWrapper.getClassLoadTime()"], ["javax.servlet.MultipartConfigElement", "org.apache.catalina.core.StandardWrapper.getMultipartConfigElement()"], ["void", "org.apache.catalina.core.StandardWrapper.setMultipartConfigElement(javax.servlet.MultipartConfigElement)"], ["boolean", "org.apache.catalina.core.StandardWrapper.isAsyncSupported()"], ["void", "org.apache.catalina.core.StandardWrapper.setAsyncSupported(boolean)"], ["boolean", "org.apache.catalina.core.StandardWrapper.isEnabled()"], ["void", "org.apache.catalina.core.StandardWrapper.setEnabled(boolean)"], ["void", "org.apache.catalina.core.StandardWrapper.removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["javax.management.MBeanNotificationInfo[]", "org.apache.catalina.core.StandardWrapper.getNotificationInfo()"], ["void", "org.apache.catalina.core.StandardWrapper.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["void", "org.apache.catalina.core.StandardWrapper.removeNotificationListener(javax.management.NotificationListener)"], ["org.apache.catalina.core.StandardWrapperFacade", "org.apache.catalina.core.StandardWrapperFacade(org.apache.catalina.core.StandardWrapper)"], ["java.lang.String", "org.apache.catalina.core.StandardWrapperFacade.getServletName()"], ["javax.servlet.ServletContext", "org.apache.catalina.core.StandardWrapperFacade.getServletContext()"], ["java.lang.String", "org.apache.catalina.core.StandardWrapperFacade.getInitParameter(java.lang.String)"], ["org.apache.catalina.core.StandardWrapperValve", "org.apache.catalina.core.StandardWrapperValve()"], ["void", "org.apache.catalina.core.StandardWrapperValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["long", "org.apache.catalina.core.StandardWrapperValve.getProcessingTime()"], ["long", "org.apache.catalina.core.StandardWrapperValve.getMaxTime()"], ["long", "org.apache.catalina.core.StandardWrapperValve.getMinTime()"], ["int", "org.apache.catalina.core.StandardWrapperValve.getRequestCount()"], ["int", "org.apache.catalina.core.StandardWrapperValve.getErrorCount()"], ["void", "org.apache.catalina.core.StandardWrapperValve.incrementErrorCount()"], ["org.apache.catalina.core.ThreadLocalLeakPreventionListener", "org.apache.catalina.core.ThreadLocalLeakPreventionListener()"], ["void", "org.apache.catalina.core.ThreadLocalLeakPreventionListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.core.ThreadLocalLeakPreventionListener.containerEvent(org.apache.catalina.ContainerEvent)"], ["org.apache.catalina.deploy.NamingResourcesImpl", "org.apache.catalina.deploy.NamingResourcesImpl()"], ["java.lang.Object", "org.apache.catalina.deploy.NamingResourcesImpl.getContainer()"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.setContainer(java.lang.Object)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.setTransaction(org.apache.tomcat.util.descriptor.web.ContextTransaction)"], ["org.apache.tomcat.util.descriptor.web.ContextTransaction", "org.apache.catalina.deploy.NamingResourcesImpl.getTransaction()"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addEjb(org.apache.tomcat.util.descriptor.web.ContextEjb)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addEnvironment(org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addLocalEjb(org.apache.tomcat.util.descriptor.web.ContextLocalEjb)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addMessageDestinationRef(org.apache.tomcat.util.descriptor.web.MessageDestinationRef)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addResource(org.apache.tomcat.util.descriptor.web.ContextResource)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addResourceEnvRef(org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addResourceLink(org.apache.tomcat.util.descriptor.web.ContextResourceLink)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.addService(org.apache.tomcat.util.descriptor.web.ContextService)"], ["org.apache.tomcat.util.descriptor.web.ContextEjb", "org.apache.catalina.deploy.NamingResourcesImpl.findEjb(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextEjb[]", "org.apache.catalina.deploy.NamingResourcesImpl.findEjbs()"], ["org.apache.tomcat.util.descriptor.web.ContextEnvironment", "org.apache.catalina.deploy.NamingResourcesImpl.findEnvironment(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextEnvironment[]", "org.apache.catalina.deploy.NamingResourcesImpl.findEnvironments()"], ["org.apache.tomcat.util.descriptor.web.ContextLocalEjb", "org.apache.catalina.deploy.NamingResourcesImpl.findLocalEjb(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextLocalEjb[]", "org.apache.catalina.deploy.NamingResourcesImpl.findLocalEjbs()"], ["org.apache.tomcat.util.descriptor.web.MessageDestinationRef", "org.apache.catalina.deploy.NamingResourcesImpl.findMessageDestinationRef(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.MessageDestinationRef[]", "org.apache.catalina.deploy.NamingResourcesImpl.findMessageDestinationRefs()"], ["org.apache.tomcat.util.descriptor.web.ContextResource", "org.apache.catalina.deploy.NamingResourcesImpl.findResource(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextResourceLink", "org.apache.catalina.deploy.NamingResourcesImpl.findResourceLink(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextResourceLink[]", "org.apache.catalina.deploy.NamingResourcesImpl.findResourceLinks()"], ["org.apache.tomcat.util.descriptor.web.ContextResource[]", "org.apache.catalina.deploy.NamingResourcesImpl.findResources()"], ["org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef", "org.apache.catalina.deploy.NamingResourcesImpl.findResourceEnvRef(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef[]", "org.apache.catalina.deploy.NamingResourcesImpl.findResourceEnvRefs()"], ["org.apache.tomcat.util.descriptor.web.ContextService", "org.apache.catalina.deploy.NamingResourcesImpl.findService(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextService[]", "org.apache.catalina.deploy.NamingResourcesImpl.findServices()"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeEjb(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeEnvironment(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeLocalEjb(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeMessageDestinationRef(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeResource(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeResourceEnvRef(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeResourceLink(java.lang.String)"], ["void", "org.apache.catalina.deploy.NamingResourcesImpl.removeService(java.lang.String)"], ["org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper", "org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper(javax.servlet.http.HttpServletResponse, java.lang.String)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper.setContentType(java.lang.String)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter$ResponseWrapper.setCharacterEncoding(java.lang.String)"], ["org.apache.catalina.filters.AddDefaultCharsetFilter", "org.apache.catalina.filters.AddDefaultCharsetFilter()"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter.setEncoding(java.lang.String)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter.init(javax.servlet.FilterConfig)"], ["void", "org.apache.catalina.filters.AddDefaultCharsetFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.Constants", "org.apache.catalina.filters.Constants()"], ["org.apache.catalina.filters.CorsFilter$CORSRequestType[]", "org.apache.catalina.filters.CorsFilter$CORSRequestType.values()"], ["org.apache.catalina.filters.CorsFilter$CORSRequestType", "org.apache.catalina.filters.CorsFilter$CORSRequestType.valueOf(java.lang.String)"], ["org.apache.catalina.filters.CorsFilter", "org.apache.catalina.filters.CorsFilter()"], ["void", "org.apache.catalina.filters.CorsFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "org.apache.catalina.filters.CorsFilter.init()"], ["boolean", "org.apache.catalina.filters.CorsFilter.isAnyOriginAllowed()"], ["boolean", "org.apache.catalina.filters.CorsFilter.isSupportsCredentials()"], ["long", "org.apache.catalina.filters.CorsFilter.getPreflightMaxAge()"], ["org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper", "org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper(javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper.encodeRedirectUrl(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper.encodeRedirectURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper.encodeUrl(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.CsrfPreventionFilter$CsrfResponseWrapper.encodeURL(java.lang.String)"], ["org.apache.catalina.filters.CsrfPreventionFilter$LruCache", "org.apache.catalina.filters.CsrfPreventionFilter$LruCache(int)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter$LruCache.add(T)"], ["boolean", "org.apache.catalina.filters.CsrfPreventionFilter$LruCache.contains(T)"], ["org.apache.catalina.filters.CsrfPreventionFilter", "org.apache.catalina.filters.CsrfPreventionFilter()"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter.setEntryPoints(java.lang.String)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter.setNonceCacheSize(int)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter.setNonceRequestParameterName(java.lang.String)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter.init(javax.servlet.FilterConfig)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.CsrfPreventionFilterBase", "org.apache.catalina.filters.CsrfPreventionFilterBase()"], ["int", "org.apache.catalina.filters.CsrfPreventionFilterBase.getDenyStatus()"], ["void", "org.apache.catalina.filters.CsrfPreventionFilterBase.setDenyStatus(int)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilterBase.setRandomClass(java.lang.String)"], ["void", "org.apache.catalina.filters.CsrfPreventionFilterBase.init(javax.servlet.FilterConfig)"], ["org.apache.catalina.filters.ExpiresFilter$Duration", "org.apache.catalina.filters.ExpiresFilter$Duration(int, org.apache.catalina.filters.ExpiresFilter$DurationUnit)"], ["int", "org.apache.catalina.filters.ExpiresFilter$Duration.getAmount()"], ["org.apache.catalina.filters.ExpiresFilter$DurationUnit", "org.apache.catalina.filters.ExpiresFilter$Duration.getUnit()"], ["java.lang.String", "org.apache.catalina.filters.ExpiresFilter$Duration.toString()"], ["org.apache.catalina.filters.ExpiresFilter$DurationUnit[]", "org.apache.catalina.filters.ExpiresFilter$DurationUnit.values()"], ["org.apache.catalina.filters.ExpiresFilter$DurationUnit", "org.apache.catalina.filters.ExpiresFilter$DurationUnit.valueOf(java.lang.String)"], ["int", "org.apache.catalina.filters.ExpiresFilter$DurationUnit.getCalendardField()"], ["org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration", "org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration(org.apache.catalina.filters.ExpiresFilter$StartingPoint, java.util.List<org.apache.catalina.filters.ExpiresFilter$Duration>)"], ["org.apache.catalina.filters.ExpiresFilter$StartingPoint", "org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration.getStartingPoint()"], ["java.lang.String", "org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration.toString()"], ["org.apache.catalina.filters.ExpiresFilter$StartingPoint[]", "org.apache.catalina.filters.ExpiresFilter$StartingPoint.values()"], ["org.apache.catalina.filters.ExpiresFilter$StartingPoint", "org.apache.catalina.filters.ExpiresFilter$StartingPoint.valueOf(java.lang.String)"], ["org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse(org.apache.catalina.filters.ExpiresFilter, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.addDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.addHeader(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getCacheControlHeader()"], ["long", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getLastModifiedHeader()"], ["javax.servlet.ServletOutputStream", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getOutputStream()"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getWriter()"], ["boolean", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.isLastModifiedHeaderSet()"], ["boolean", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.isWriteResponseBodyStarted()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.reset()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.setDateHeader(java.lang.String, long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.setWriteResponseBodyStarted(boolean)"], ["org.apache.catalina.filters.ExpiresFilter$XPrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter(org.apache.catalina.filters.ExpiresFilter, java.io.PrintWriter, javax.servlet.http.HttpServletRequest, org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse)"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(char)"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence)"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence, int, int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.close()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.flush()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(boolean)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(char)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(char[])"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(double)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(float)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(java.lang.Object)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.print(java.lang.String)"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object...)"], ["java.io.PrintWriter", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.printf(java.lang.String, java.lang.Object...)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(boolean)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(char)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(char[])"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(double)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(float)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(java.lang.Object)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.println(java.lang.String)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.write(char[])"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.write(char[], int, int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.write(int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.write(java.lang.String)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.write(java.lang.String, int, int)"], ["java.io.Writer", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(char)"], ["java.io.Writer", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence, int, int)"], ["java.io.Writer", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence)"], ["java.lang.Appendable", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(char)"], ["java.lang.Appendable", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence, int, int)"], ["java.lang.Appendable", "org.apache.catalina.filters.ExpiresFilter$XPrintWriter.append(java.lang.CharSequence)"], ["org.apache.catalina.filters.ExpiresFilter$XServletOutputStream", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream(org.apache.catalina.filters.ExpiresFilter, javax.servlet.ServletOutputStream, javax.servlet.http.HttpServletRequest, org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.close()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.flush()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(boolean)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(char)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(double)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(float)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.print(java.lang.String)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(boolean)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(char)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(double)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(float)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(long)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.println(java.lang.String)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.write(byte[])"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.write(byte[], int, int)"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.write(int)"], ["boolean", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.isReady()"], ["void", "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream.setWriteListener(javax.servlet.WriteListener)"], ["org.apache.catalina.filters.ExpiresFilter", "org.apache.catalina.filters.ExpiresFilter()"], ["void", "org.apache.catalina.filters.ExpiresFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration", "org.apache.catalina.filters.ExpiresFilter.getDefaultExpiresConfiguration()"], ["java.lang.String", "org.apache.catalina.filters.ExpiresFilter.getExcludedResponseStatusCodes()"], ["int[]", "org.apache.catalina.filters.ExpiresFilter.getExcludedResponseStatusCodesAsInts()"], ["java.util.Map<java.lang.String, org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration>", "org.apache.catalina.filters.ExpiresFilter.getExpiresConfigurationByContentType()"], ["void", "org.apache.catalina.filters.ExpiresFilter.init(javax.servlet.FilterConfig)"], ["void", "org.apache.catalina.filters.ExpiresFilter.onBeforeWriteResponseBody(javax.servlet.http.HttpServletRequest, org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse)"], ["void", "org.apache.catalina.filters.ExpiresFilter.setDefaultExpiresConfiguration(org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration)"], ["void", "org.apache.catalina.filters.ExpiresFilter.setExcludedResponseStatusCodes(int[])"], ["void", "org.apache.catalina.filters.ExpiresFilter.setExpiresConfigurationByContentType(java.util.Map<java.lang.String, org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration>)"], ["java.lang.String", "org.apache.catalina.filters.ExpiresFilter.toString()"], ["org.apache.catalina.filters.FailedRequestFilter", "org.apache.catalina.filters.FailedRequestFilter()"], ["void", "org.apache.catalina.filters.FailedRequestFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.FilterBase", "org.apache.catalina.filters.FilterBase()"], ["void", "org.apache.catalina.filters.FilterBase.init(javax.servlet.FilterConfig)"], ["org.apache.catalina.filters.HttpHeaderSecurityFilter$XFrameOption[]", "org.apache.catalina.filters.HttpHeaderSecurityFilter$XFrameOption.values()"], ["org.apache.catalina.filters.HttpHeaderSecurityFilter$XFrameOption", "org.apache.catalina.filters.HttpHeaderSecurityFilter$XFrameOption.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.HttpHeaderSecurityFilter$XFrameOption.getHeaderValue()"], ["org.apache.catalina.filters.HttpHeaderSecurityFilter", "org.apache.catalina.filters.HttpHeaderSecurityFilter()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.init(javax.servlet.FilterConfig)"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isHstsEnabled()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setHstsEnabled(boolean)"], ["int", "org.apache.catalina.filters.HttpHeaderSecurityFilter.getHstsMaxAgeSeconds()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setHstsMaxAgeSeconds(int)"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isHstsIncludeSubDomains()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setHstsIncludeSubDomains(boolean)"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isHstsPreload()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setHstsPreload(boolean)"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isAntiClickJackingEnabled()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setAntiClickJackingEnabled(boolean)"], ["java.lang.String", "org.apache.catalina.filters.HttpHeaderSecurityFilter.getAntiClickJackingOption()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setAntiClickJackingOption(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.HttpHeaderSecurityFilter.getAntiClickJackingUri()"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isBlockContentTypeSniffingEnabled()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setBlockContentTypeSniffingEnabled(boolean)"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setAntiClickJackingUri(java.lang.String)"], ["boolean", "org.apache.catalina.filters.HttpHeaderSecurityFilter.isXssProtectionEnabled()"], ["void", "org.apache.catalina.filters.HttpHeaderSecurityFilter.setXssProtectionEnabled(boolean)"], ["org.apache.catalina.filters.RemoteAddrFilter", "org.apache.catalina.filters.RemoteAddrFilter()"], ["void", "org.apache.catalina.filters.RemoteAddrFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.RemoteCIDRFilter", "org.apache.catalina.filters.RemoteCIDRFilter()"], ["java.lang.String", "org.apache.catalina.filters.RemoteCIDRFilter.getAllow()"], ["void", "org.apache.catalina.filters.RemoteCIDRFilter.setAllow(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.RemoteCIDRFilter.getDeny()"], ["void", "org.apache.catalina.filters.RemoteCIDRFilter.setDeny(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteCIDRFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.juli.logging.Log", "org.apache.catalina.filters.RemoteCIDRFilter.getLogger()"], ["org.apache.catalina.filters.RemoteHostFilter", "org.apache.catalina.filters.RemoteHostFilter()"], ["void", "org.apache.catalina.filters.RemoteHostFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest(javax.servlet.http.HttpServletRequest)"], ["long", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getDateHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getHeader(java.lang.String)"], ["int", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getIntHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getLocalName()"], ["int", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getLocalPort()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getRemoteAddr()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getRemoteHost()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getScheme()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getServerName()"], ["int", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getServerPort()"], ["boolean", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.isSecure()"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.removeHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setLocalName(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setLocalPort(int)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setRemoteAddr(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setRemoteHost(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setScheme(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setSecure(boolean)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setServerName(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.setServerPort(int)"], ["java.lang.StringBuffer", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.getRequestURL()"], ["javax.servlet.http.PushBuilder", "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest.newPushBuilder()"], ["org.apache.catalina.filters.RemoteIpFilter", "org.apache.catalina.filters.RemoteIpFilter()"], ["void", "org.apache.catalina.filters.RemoteIpFilter.doFilter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["boolean", "org.apache.catalina.filters.RemoteIpFilter.isChangeLocalName()"], ["boolean", "org.apache.catalina.filters.RemoteIpFilter.isChangeLocalPort()"], ["int", "org.apache.catalina.filters.RemoteIpFilter.getHttpsServerPort()"], ["java.util.regex.Pattern", "org.apache.catalina.filters.RemoteIpFilter.getInternalProxies()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter.getProtocolHeader()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter.getPortHeader()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter.getProtocolHeaderHttpsValue()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter.getProxiesHeader()"], ["java.lang.String", "org.apache.catalina.filters.RemoteIpFilter.getRemoteIpHeader()"], ["boolean", "org.apache.catalina.filters.RemoteIpFilter.getRequestAttributesEnabled()"], ["java.util.regex.Pattern", "org.apache.catalina.filters.RemoteIpFilter.getTrustedProxies()"], ["void", "org.apache.catalina.filters.RemoteIpFilter.init()"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setChangeLocalName(boolean)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setChangeLocalPort(boolean)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setHttpServerPort(int)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setHttpsServerPort(int)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setInternalProxies(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setHostHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setPortHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setProtocolHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setProtocolHeaderHttpsValue(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setProxiesHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setRemoteIpHeader(java.lang.String)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setRequestAttributesEnabled(boolean)"], ["void", "org.apache.catalina.filters.RemoteIpFilter.setTrustedProxies(java.lang.String)"], ["org.apache.catalina.filters.RequestDumperFilter", "org.apache.catalina.filters.RequestDumperFilter()"], ["void", "org.apache.catalina.filters.RequestDumperFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.RequestFilter", "org.apache.catalina.filters.RequestFilter()"], ["java.lang.String", "org.apache.catalina.filters.RequestFilter.getAllow()"], ["void", "org.apache.catalina.filters.RequestFilter.setAllow(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.RequestFilter.getDeny()"], ["void", "org.apache.catalina.filters.RequestFilter.setDeny(java.lang.String)"], ["int", "org.apache.catalina.filters.RequestFilter.getDenyStatus()"], ["void", "org.apache.catalina.filters.RequestFilter.setDenyStatus(int)"], ["boolean", "org.apache.catalina.filters.RestCsrfPreventionFilter$FetchRequest.apply(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.apache.catalina.filters.RestCsrfPreventionFilter$MethodType[]", "org.apache.catalina.filters.RestCsrfPreventionFilter$MethodType.values()"], ["org.apache.catalina.filters.RestCsrfPreventionFilter$MethodType", "org.apache.catalina.filters.RestCsrfPreventionFilter$MethodType.valueOf(java.lang.String)"], ["boolean", "org.apache.catalina.filters.RestCsrfPreventionFilter$StateChangingRequest.apply(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["org.apache.catalina.filters.RestCsrfPreventionFilter", "org.apache.catalina.filters.RestCsrfPreventionFilter()"], ["void", "org.apache.catalina.filters.RestCsrfPreventionFilter.init(javax.servlet.FilterConfig)"], ["void", "org.apache.catalina.filters.RestCsrfPreventionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["void", "org.apache.catalina.filters.RestCsrfPreventionFilter.setPathsAcceptingParams(java.lang.String)"], ["org.apache.catalina.filters.SessionInitializerFilter", "org.apache.catalina.filters.SessionInitializerFilter()"], ["void", "org.apache.catalina.filters.SessionInitializerFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.SetCharacterEncodingFilter", "org.apache.catalina.filters.SetCharacterEncodingFilter()"], ["void", "org.apache.catalina.filters.SetCharacterEncodingFilter.setEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.filters.SetCharacterEncodingFilter.getEncoding()"], ["void", "org.apache.catalina.filters.SetCharacterEncodingFilter.setIgnore(boolean)"], ["boolean", "org.apache.catalina.filters.SetCharacterEncodingFilter.isIgnore()"], ["void", "org.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.filters.WebdavFixFilter", "org.apache.catalina.filters.WebdavFixFilter()"], ["void", "org.apache.catalina.filters.WebdavFixFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"], ["org.apache.catalina.loader.Constants", "org.apache.catalina.loader.Constants()"], ["org.apache.catalina.loader.JdbcLeakPrevention", "org.apache.catalina.loader.JdbcLeakPrevention()"], ["org.apache.catalina.loader.ParallelWebappClassLoader", "org.apache.catalina.loader.ParallelWebappClassLoader()"], ["org.apache.catalina.loader.ParallelWebappClassLoader", "org.apache.catalina.loader.ParallelWebappClassLoader(java.lang.ClassLoader)"], ["org.apache.catalina.loader.ParallelWebappClassLoader", "org.apache.catalina.loader.ParallelWebappClassLoader.copyWithoutTransformers()"], ["java.lang.ClassLoader", "org.apache.catalina.loader.ParallelWebappClassLoader.copyWithoutTransformers()"], ["org.apache.catalina.loader.ResourceEntry", "org.apache.catalina.loader.ResourceEntry()"], ["org.apache.catalina.loader.WebappClassLoader", "org.apache.catalina.loader.WebappClassLoader()"], ["org.apache.catalina.loader.WebappClassLoader", "org.apache.catalina.loader.WebappClassLoader(java.lang.ClassLoader)"], ["org.apache.catalina.loader.WebappClassLoader", "org.apache.catalina.loader.WebappClassLoader.copyWithoutTransformers()"], ["java.lang.ClassLoader", "org.apache.catalina.loader.WebappClassLoader.copyWithoutTransformers()"], ["org.apache.catalina.loader.WebappClassLoaderBase$CombinedEnumeration", "org.apache.catalina.loader.WebappClassLoaderBase$CombinedEnumeration(java.util.Enumeration<java.net.URL>, java.util.Enumeration<java.net.URL>)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase$CombinedEnumeration.hasMoreElements()"], ["java.net.URL", "org.apache.catalina.loader.WebappClassLoaderBase$CombinedEnumeration.nextElement()"], ["java.lang.Object", "org.apache.catalina.loader.WebappClassLoaderBase$CombinedEnumeration.nextElement()"], ["java.lang.Object", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedFindClassByName.run()"], ["org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader(java.lang.Class<?>)"], ["java.lang.ClassLoader", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader.run()"], ["java.lang.Object", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedGetClassLoader.run()"], ["java.lang.Boolean", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedHasLoggingConfig.run()"], ["java.lang.Object", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedHasLoggingConfig.run()"], ["org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedJavaseGetResource", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedJavaseGetResource(org.apache.catalina.loader.WebappClassLoaderBase, java.lang.String)"], ["java.net.URL", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedJavaseGetResource.run()"], ["java.lang.Object", "org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedJavaseGetResource.run()"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.loader.WebappClassLoaderBase.getResources()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setResources(org.apache.catalina.WebResourceRoot)"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.getContextName()"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getDelegate()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setDelegate(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesRmiTargets()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesRmiTargets(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesStopThreads()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesStopThreads(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesStopTimerThreads()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesStopTimerThreads(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesLogFactoryRelease()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesLogFactoryRelease(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesHttpClientKeepAliveThread()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesHttpClientKeepAliveThread(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesObjectStreamClassCaches()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesObjectStreamClassCaches(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getClearReferencesThreadLocals()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setClearReferencesThreadLocals(boolean)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.getSkipMemoryLeakChecksOnJvmShutdown()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.setSkipMemoryLeakChecksOnJvmShutdown(boolean)"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.addTransformer(java.lang.instrument.ClassFileTransformer)"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.removeTransformer(java.lang.instrument.ClassFileTransformer)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.modified()"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.toString()"], ["java.net.URL", "org.apache.catalina.loader.WebappClassLoaderBase.findResource(java.lang.String)"], ["java.net.URL", "org.apache.catalina.loader.WebappClassLoaderBase.getResource(java.lang.String)"], ["java.io.InputStream", "org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(java.lang.String)"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.check(java.security.Permission)"], ["java.net.URL[]", "org.apache.catalina.loader.WebappClassLoaderBase.getURLs()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.addLifecycleListener(org.apache.catalina.LifecycleListener)"], ["org.apache.catalina.LifecycleListener[]", "org.apache.catalina.loader.WebappClassLoaderBase.findLifecycleListeners()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.removeLifecycleListener(org.apache.catalina.LifecycleListener)"], ["org.apache.catalina.LifecycleState", "org.apache.catalina.loader.WebappClassLoaderBase.getState()"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.getStateName()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.init()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.start()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.stop()"], ["void", "org.apache.catalina.loader.WebappClassLoaderBase.destroy()"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.getWebappName()"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.getHostName()"], ["java.lang.String", "org.apache.catalina.loader.WebappClassLoaderBase.getServiceName()"], ["boolean", "org.apache.catalina.loader.WebappClassLoaderBase.hasLoggingConfig()"], ["org.apache.catalina.loader.WebappLoader", "org.apache.catalina.loader.WebappLoader()"], ["org.apache.catalina.loader.WebappLoader", "org.apache.catalina.loader.WebappLoader(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.apache.catalina.loader.WebappLoader.getClassLoader()"], ["org.apache.catalina.Context", "org.apache.catalina.loader.WebappLoader.getContext()"], ["void", "org.apache.catalina.loader.WebappLoader.setContext(org.apache.catalina.Context)"], ["boolean", "org.apache.catalina.loader.WebappLoader.getDelegate()"], ["void", "org.apache.catalina.loader.WebappLoader.setDelegate(boolean)"], ["java.lang.String", "org.apache.catalina.loader.WebappLoader.getLoaderClass()"], ["void", "org.apache.catalina.loader.WebappLoader.setLoaderClass(java.lang.String)"], ["boolean", "org.apache.catalina.loader.WebappLoader.getReloadable()"], ["void", "org.apache.catalina.loader.WebappLoader.setReloadable(boolean)"], ["void", "org.apache.catalina.loader.WebappLoader.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.loader.WebappLoader.backgroundProcess()"], ["java.lang.String[]", "org.apache.catalina.loader.WebappLoader.getLoaderRepositories()"], ["java.lang.String", "org.apache.catalina.loader.WebappLoader.getLoaderRepositoriesString()"], ["java.lang.String", "org.apache.catalina.loader.WebappLoader.getClasspath()"], ["boolean", "org.apache.catalina.loader.WebappLoader.modified()"], ["void", "org.apache.catalina.loader.WebappLoader.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.lang.String", "org.apache.catalina.loader.WebappLoader.toString()"], ["void", "org.apache.catalina.loader.WebappLoader.propertyChange(java.beans.PropertyChangeEvent)"], ["org.apache.catalina.manager.Constants", "org.apache.catalina.manager.Constants()"], ["org.apache.catalina.manager.DummyProxySession", "org.apache.catalina.manager.DummyProxySession(java.lang.String)"], ["void", "org.apache.catalina.manager.DummyProxySession.access()"], ["void", "org.apache.catalina.manager.DummyProxySession.addSessionListener(org.apache.catalina.SessionListener)"], ["void", "org.apache.catalina.manager.DummyProxySession.endAccess()"], ["void", "org.apache.catalina.manager.DummyProxySession.expire()"], ["java.lang.String", "org.apache.catalina.manager.DummyProxySession.getAuthType()"], ["long", "org.apache.catalina.manager.DummyProxySession.getCreationTime()"], ["long", "org.apache.catalina.manager.DummyProxySession.getCreationTimeInternal()"], ["java.lang.String", "org.apache.catalina.manager.DummyProxySession.getId()"], ["java.lang.String", "org.apache.catalina.manager.DummyProxySession.getIdInternal()"], ["long", "org.apache.catalina.manager.DummyProxySession.getLastAccessedTime()"], ["long", "org.apache.catalina.manager.DummyProxySession.getLastAccessedTimeInternal()"], ["long", "org.apache.catalina.manager.DummyProxySession.getIdleTime()"], ["long", "org.apache.catalina.manager.DummyProxySession.getIdleTimeInternal()"], ["org.apache.catalina.Manager", "org.apache.catalina.manager.DummyProxySession.getManager()"], ["int", "org.apache.catalina.manager.DummyProxySession.getMaxInactiveInterval()"], ["java.lang.Object", "org.apache.catalina.manager.DummyProxySession.getNote(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.manager.DummyProxySession.getPrincipal()"], ["javax.servlet.http.HttpSession", "org.apache.catalina.manager.DummyProxySession.getSession()"], ["long", "org.apache.catalina.manager.DummyProxySession.getThisAccessedTime()"], ["long", "org.apache.catalina.manager.DummyProxySession.getThisAccessedTimeInternal()"], ["boolean", "org.apache.catalina.manager.DummyProxySession.isValid()"], ["void", "org.apache.catalina.manager.DummyProxySession.recycle()"], ["void", "org.apache.catalina.manager.DummyProxySession.removeNote(java.lang.String)"], ["void", "org.apache.catalina.manager.DummyProxySession.removeSessionListener(org.apache.catalina.SessionListener)"], ["void", "org.apache.catalina.manager.DummyProxySession.setAuthType(java.lang.String)"], ["void", "org.apache.catalina.manager.DummyProxySession.setCreationTime(long)"], ["void", "org.apache.catalina.manager.DummyProxySession.setId(java.lang.String)"], ["void", "org.apache.catalina.manager.DummyProxySession.setId(java.lang.String, boolean)"], ["void", "org.apache.catalina.manager.DummyProxySession.setManager(org.apache.catalina.Manager)"], ["void", "org.apache.catalina.manager.DummyProxySession.setMaxInactiveInterval(int)"], ["void", "org.apache.catalina.manager.DummyProxySession.setNew(boolean)"], ["void", "org.apache.catalina.manager.DummyProxySession.setNote(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.manager.DummyProxySession.setPrincipal(java.security.Principal)"], ["void", "org.apache.catalina.manager.DummyProxySession.setValid(boolean)"], ["void", "org.apache.catalina.manager.DummyProxySession.tellChangedSessionId(java.lang.String, java.lang.String, boolean, boolean)"], ["boolean", "org.apache.catalina.manager.DummyProxySession.isAttributeDistributable(java.lang.String, java.lang.Object)"], ["org.apache.catalina.manager.HTMLManagerServlet", "org.apache.catalina.manager.HTMLManagerServlet()"], ["void", "org.apache.catalina.manager.HTMLManagerServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.HTMLManagerServlet.doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["java.lang.String", "org.apache.catalina.manager.HTMLManagerServlet.getServletInfo()"], ["void", "org.apache.catalina.manager.HTMLManagerServlet.init()"], ["org.apache.catalina.manager.JMXProxyServlet", "org.apache.catalina.manager.JMXProxyServlet()"], ["void", "org.apache.catalina.manager.JMXProxyServlet.init()"], ["void", "org.apache.catalina.manager.JMXProxyServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.JMXProxyServlet.getAttribute(java.io.PrintWriter, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.manager.JMXProxyServlet.setAttribute(java.io.PrintWriter, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.manager.JMXProxyServlet.listBeans(java.io.PrintWriter, java.lang.String)"], ["boolean", "org.apache.catalina.manager.JMXProxyServlet.isSupported(java.lang.String)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.guessDisplayLocaleFromSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.guessDisplayUserFromSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.getDisplayCreationTimeForSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.getDisplayLastAccessedTimeForSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.getDisplayUsedTimeForSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.getDisplayTTLForSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.getDisplayInactiveTimeForSession(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.secondsToTimeString(long)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.escapeXml(java.lang.Object)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.escapeXml(java.lang.String)"], ["java.lang.String", "org.apache.catalina.manager.JspHelper.formatNumber(long)"], ["org.apache.catalina.manager.ManagerServlet", "org.apache.catalina.manager.ManagerServlet()"], ["org.apache.catalina.Wrapper", "org.apache.catalina.manager.ManagerServlet.getWrapper()"], ["void", "org.apache.catalina.manager.ManagerServlet.setWrapper(org.apache.catalina.Wrapper)"], ["void", "org.apache.catalina.manager.ManagerServlet.destroy()"], ["void", "org.apache.catalina.manager.ManagerServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.ManagerServlet.doPut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.ManagerServlet.init()"], ["org.apache.catalina.manager.StatusManagerServlet", "org.apache.catalina.manager.StatusManagerServlet()"], ["void", "org.apache.catalina.manager.StatusManagerServlet.init()"], ["void", "org.apache.catalina.manager.StatusManagerServlet.destroy()"], ["void", "org.apache.catalina.manager.StatusManagerServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.StatusManagerServlet.handleNotification(javax.management.Notification, java.lang.Object)"], ["org.apache.catalina.manager.StatusTransformer", "org.apache.catalina.manager.StatusTransformer()"], ["void", "org.apache.catalina.manager.StatusTransformer.setContentType(javax.servlet.http.HttpServletResponse, int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeHeader(java.io.PrintWriter, java.lang.Object[], int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeBody(java.io.PrintWriter, java.lang.Object[], int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeManager(java.io.PrintWriter, java.lang.Object[], int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writePageHeading(java.io.PrintWriter, java.lang.Object[], int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeServerInfo(java.io.PrintWriter, java.lang.Object[], int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeFooter(java.io.PrintWriter, int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeOSState(java.io.PrintWriter, int, java.lang.Object[])"], ["void", "org.apache.catalina.manager.StatusTransformer.writeVMState(java.io.PrintWriter, int, java.lang.Object[])"], ["void", "org.apache.catalina.manager.StatusTransformer.writeConnectorState(java.io.PrintWriter, javax.management.ObjectName, java.lang.String, javax.management.MBeanServer, java.util.Vector<javax.management.ObjectName>, java.util.Vector<javax.management.ObjectName>, int, java.lang.Object[])"], ["void", "org.apache.catalina.manager.StatusTransformer.writeDetailedState(java.io.PrintWriter, javax.management.MBeanServer, int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeManager(java.io.PrintWriter, javax.management.ObjectName, javax.management.MBeanServer, int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeJspMonitor(java.io.PrintWriter, java.util.Set<javax.management.ObjectName>, javax.management.MBeanServer, int)"], ["void", "org.apache.catalina.manager.StatusTransformer.writeWrapper(java.io.PrintWriter, javax.management.ObjectName, javax.management.MBeanServer, int)"], ["java.lang.String", "org.apache.catalina.manager.StatusTransformer.formatSize(java.lang.Object, boolean)"], ["java.lang.String", "org.apache.catalina.manager.StatusTransformer.formatTime(java.lang.Object, boolean)"], ["java.lang.String", "org.apache.catalina.manager.StatusTransformer.formatSeconds(java.lang.Object)"], ["org.apache.catalina.manager.host.Constants", "org.apache.catalina.manager.host.Constants()"], ["org.apache.catalina.manager.host.HTMLHostManagerServlet", "org.apache.catalina.manager.host.HTMLHostManagerServlet()"], ["void", "org.apache.catalina.manager.host.HTMLHostManagerServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.host.HTMLHostManagerServlet.doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.host.HTMLHostManagerServlet.list(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.apache.tomcat.util.res.StringManager)"], ["org.apache.catalina.manager.host.HostManagerServlet", "org.apache.catalina.manager.host.HostManagerServlet()"], ["org.apache.catalina.Wrapper", "org.apache.catalina.manager.host.HostManagerServlet.getWrapper()"], ["void", "org.apache.catalina.manager.host.HostManagerServlet.setWrapper(org.apache.catalina.Wrapper)"], ["void", "org.apache.catalina.manager.host.HostManagerServlet.destroy()"], ["void", "org.apache.catalina.manager.host.HostManagerServlet.doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.catalina.manager.host.HostManagerServlet.init()"], ["org.apache.catalina.manager.util.BaseSessionComparator", "org.apache.catalina.manager.util.BaseSessionComparator()"], ["int", "org.apache.catalina.manager.util.BaseSessionComparator.compare(org.apache.catalina.Session, org.apache.catalina.Session)"], ["int", "org.apache.catalina.manager.util.BaseSessionComparator.compare(java.lang.Object, java.lang.Object)"], ["java.util.Locale", "org.apache.catalina.manager.util.SessionUtils.guessLocaleFromSession(org.apache.catalina.Session)"], ["java.util.Locale", "org.apache.catalina.manager.util.SessionUtils.guessLocaleFromSession(javax.servlet.http.HttpSession)"], ["java.lang.Object", "org.apache.catalina.manager.util.SessionUtils.guessUserFromSession(org.apache.catalina.Session)"], ["long", "org.apache.catalina.manager.util.SessionUtils.getUsedTimeForSession(org.apache.catalina.Session)"], ["long", "org.apache.catalina.manager.util.SessionUtils.getTTLForSession(org.apache.catalina.Session)"], ["long", "org.apache.catalina.manager.util.SessionUtils.getInactiveTimeForSession(org.apache.catalina.Session)"], ["org.apache.catalina.mapper.Constants", "org.apache.catalina.mapper.Constants()"], ["org.apache.catalina.mapper.Mapper$ContextList", "org.apache.catalina.mapper.Mapper$ContextList()"], ["org.apache.catalina.mapper.Mapper$ContextList", "org.apache.catalina.mapper.Mapper$ContextList.addContext(org.apache.catalina.mapper.Mapper$MappedContext, int)"], ["org.apache.catalina.mapper.Mapper$ContextList", "org.apache.catalina.mapper.Mapper$ContextList.removeContext(java.lang.String)"], ["org.apache.catalina.mapper.Mapper$ContextVersion", "org.apache.catalina.mapper.Mapper$ContextVersion(java.lang.String, java.lang.String, int, org.apache.catalina.Context, org.apache.catalina.WebResourceRoot, java.lang.String[])"], ["boolean", "org.apache.catalina.mapper.Mapper$ContextVersion.isPaused()"], ["void", "org.apache.catalina.mapper.Mapper$ContextVersion.markPaused()"], ["org.apache.catalina.mapper.Mapper$MapElement", "org.apache.catalina.mapper.Mapper$MapElement(java.lang.String, T)"], ["org.apache.catalina.mapper.Mapper$MappedContext", "org.apache.catalina.mapper.Mapper$MappedContext(java.lang.String, org.apache.catalina.mapper.Mapper$ContextVersion)"], ["org.apache.catalina.mapper.Mapper$MappedHost", "org.apache.catalina.mapper.Mapper$MappedHost(java.lang.String, org.apache.catalina.Host)"], ["org.apache.catalina.mapper.Mapper$MappedHost", "org.apache.catalina.mapper.Mapper$MappedHost(java.lang.String, org.apache.catalina.mapper.Mapper$MappedHost)"], ["boolean", "org.apache.catalina.mapper.Mapper$MappedHost.isAlias()"], ["org.apache.catalina.mapper.Mapper$MappedHost", "org.apache.catalina.mapper.Mapper$MappedHost.getRealHost()"], ["java.lang.String", "org.apache.catalina.mapper.Mapper$MappedHost.getRealHostName()"], ["void", "org.apache.catalina.mapper.Mapper$MappedHost.addAlias(org.apache.catalina.mapper.Mapper$MappedHost)"], ["void", "org.apache.catalina.mapper.Mapper$MappedHost.addAliases(java.util.Collection<? extends org.apache.catalina.mapper.Mapper$MappedHost>)"], ["void", "org.apache.catalina.mapper.Mapper$MappedHost.removeAlias(org.apache.catalina.mapper.Mapper$MappedHost)"], ["org.apache.catalina.mapper.Mapper$MappedWrapper", "org.apache.catalina.mapper.Mapper$MappedWrapper(java.lang.String, org.apache.catalina.Wrapper, boolean, boolean)"], ["org.apache.catalina.mapper.Mapper", "org.apache.catalina.mapper.Mapper()"], ["synchronized", "org.apache.catalina.mapper.Mapper.void setDefaultHostName(java.lang.String)"], ["synchronized", "org.apache.catalina.mapper.Mapper.void addHost(java.lang.String, java.lang.String[], org.apache.catalina.Host)"], ["synchronized", "org.apache.catalina.mapper.Mapper.void removeHost(java.lang.String)"], ["synchronized", "org.apache.catalina.mapper.Mapper.void addHostAlias(java.lang.String, java.lang.String)"], ["synchronized", "org.apache.catalina.mapper.Mapper.void removeHostAlias(java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.addContextVersion(java.lang.String, org.apache.catalina.Host, java.lang.String, java.lang.String, org.apache.catalina.Context, java.lang.String[], org.apache.catalina.WebResourceRoot, java.util.Collection<org.apache.catalina.mapper.WrapperMappingInfo>)"], ["void", "org.apache.catalina.mapper.Mapper.removeContextVersion(org.apache.catalina.Context, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.pauseContextVersion(org.apache.catalina.Context, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.addWrapper(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.catalina.Wrapper, boolean, boolean)"], ["void", "org.apache.catalina.mapper.Mapper.addWrappers(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<org.apache.catalina.mapper.WrapperMappingInfo>)"], ["void", "org.apache.catalina.mapper.Mapper.removeWrapper(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.addWelcomeFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.removeWelcomeFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.clearWelcomeFiles(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mapper.Mapper.map(org.apache.tomcat.util.buf.MessageBytes, org.apache.tomcat.util.buf.MessageBytes, java.lang.String, org.apache.catalina.mapper.MappingData)"], ["void", "org.apache.catalina.mapper.Mapper.map(org.apache.catalina.Context, org.apache.tomcat.util.buf.MessageBytes, org.apache.catalina.mapper.MappingData)"], ["org.apache.catalina.mapper.MapperListener", "org.apache.catalina.mapper.MapperListener(org.apache.catalina.Service)"], ["void", "org.apache.catalina.mapper.MapperListener.startInternal()"], ["void", "org.apache.catalina.mapper.MapperListener.stopInternal()"], ["void", "org.apache.catalina.mapper.MapperListener.containerEvent(org.apache.catalina.ContainerEvent)"], ["void", "org.apache.catalina.mapper.MapperListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.mapper.MappingData", "org.apache.catalina.mapper.MappingData()"], ["void", "org.apache.catalina.mapper.MappingData.recycle()"], ["org.apache.catalina.mapper.WrapperMappingInfo", "org.apache.catalina.mapper.WrapperMappingInfo(java.lang.String, org.apache.catalina.Wrapper, boolean, boolean)"], ["java.lang.String", "org.apache.catalina.mapper.WrapperMappingInfo.getMapping()"], ["org.apache.catalina.Wrapper", "org.apache.catalina.mapper.WrapperMappingInfo.getWrapper()"], ["boolean", "org.apache.catalina.mapper.WrapperMappingInfo.isJspWildCard()"], ["boolean", "org.apache.catalina.mapper.WrapperMappingInfo.isResourceOnly()"], ["org.apache.catalina.mbeans.BaseCatalinaMBean", "org.apache.catalina.mbeans.BaseCatalinaMBean()"], ["org.apache.catalina.mbeans.ClassNameMBean", "org.apache.catalina.mbeans.ClassNameMBean()"], ["java.lang.String", "org.apache.catalina.mbeans.ClassNameMBean.getClassName()"], ["org.apache.catalina.mbeans.ConnectorMBean", "org.apache.catalina.mbeans.ConnectorMBean()"], ["java.lang.Object", "org.apache.catalina.mbeans.ConnectorMBean.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ConnectorMBean.setAttribute(javax.management.Attribute)"], ["org.apache.catalina.mbeans.ContainerMBean", "org.apache.catalina.mbeans.ContainerMBean()"], ["void", "org.apache.catalina.mbeans.ContainerMBean.addChild(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContainerMBean.removeChild(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.ContainerMBean.addValve(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContainerMBean.removeValve(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContainerMBean.addLifecycleListener(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContainerMBean.removeLifecycleListeners(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContainerMBean.findLifecycleListenerNames()"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContainerMBean.findContainerListenerNames()"], ["org.apache.catalina.mbeans.ContextEnvironmentMBean", "org.apache.catalina.mbeans.ContextEnvironmentMBean()"], ["void", "org.apache.catalina.mbeans.ContextEnvironmentMBean.setAttribute(javax.management.Attribute)"], ["org.apache.catalina.mbeans.ContextMBean", "org.apache.catalina.mbeans.ContextMBean()"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContextMBean.findApplicationParameters()"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContextMBean.findConstraints()"], ["java.lang.String", "org.apache.catalina.mbeans.ContextMBean.findErrorPage(int)"], ["java.lang.String", "org.apache.catalina.mbeans.ContextMBean.findErrorPage(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.ContextMBean.findErrorPage(java.lang.Throwable)"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContextMBean.findErrorPages()"], ["java.lang.String", "org.apache.catalina.mbeans.ContextMBean.findFilterDef(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContextMBean.findFilterDefs()"], ["java.lang.String[]", "org.apache.catalina.mbeans.ContextMBean.findFilterMaps()"], ["org.apache.catalina.mbeans.ContextResourceLinkMBean", "org.apache.catalina.mbeans.ContextResourceLinkMBean()"], ["java.lang.Object", "org.apache.catalina.mbeans.ContextResourceLinkMBean.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContextResourceLinkMBean.setAttribute(javax.management.Attribute)"], ["org.apache.catalina.mbeans.ContextResourceMBean", "org.apache.catalina.mbeans.ContextResourceMBean()"], ["java.lang.Object", "org.apache.catalina.mbeans.ContextResourceMBean.getAttribute(java.lang.String)"], ["void", "org.apache.catalina.mbeans.ContextResourceMBean.setAttribute(javax.management.Attribute)"], ["org.apache.catalina.mbeans.GlobalResourcesLifecycleListener", "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener()"], ["void", "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.mbeans.GroupMBean", "org.apache.catalina.mbeans.GroupMBean()"], ["java.lang.String[]", "org.apache.catalina.mbeans.GroupMBean.getRoles()"], ["java.lang.String[]", "org.apache.catalina.mbeans.GroupMBean.getUsers()"], ["void", "org.apache.catalina.mbeans.GroupMBean.addRole(java.lang.String)"], ["void", "org.apache.catalina.mbeans.GroupMBean.removeRole(java.lang.String)"], ["org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry(int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory, java.lang.String, java.rmi.Remote)"], ["java.rmi.Remote", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry.lookup(java.lang.String)"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry.bind(java.lang.String, java.rmi.Remote)"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry.unbind(java.lang.String)"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry.rebind(java.lang.String, java.rmi.Remote)"], ["java.lang.String[]", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$JmxRegistry.list()"], ["org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiClientLocalhostSocketFactory", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiClientLocalhostSocketFactory(java.rmi.server.RMIClientSocketFactory)"], ["java.net.Socket", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiClientLocalhostSocketFactory.createSocket(java.lang.String, int)"], ["org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiServerBindSocketFactory", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiServerBindSocketFactory(java.lang.String)"], ["java.net.ServerSocket", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$RmiServerBindSocketFactory.createServerSocket(int)"], ["org.apache.catalina.mbeans.JmxRemoteLifecycleListener$SslRmiServerBindSocketFactory", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$SslRmiServerBindSocketFactory(javax.net.ssl.SSLContext, java.lang.String[], java.lang.String[], boolean, java.lang.String)"], ["java.net.ServerSocket", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$SslRmiServerBindSocketFactory.createServerSocket(int)"], ["int", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$SslRmiServerBindSocketFactory.hashCode()"], ["boolean", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener$SslRmiServerBindSocketFactory.equals(java.lang.Object)"], ["org.apache.catalina.mbeans.JmxRemoteLifecycleListener", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener()"], ["java.lang.String", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getRmiBindAddress()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setRmiBindAddress(java.lang.String)"], ["int", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getRmiServerPortPlatform()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setRmiServerPortPlatform(int)"], ["int", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getRmiRegistryPortPlatform()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setRmiRegistryPortPlatform(int)"], ["boolean", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getUseLocalPorts()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setUseLocalPorts(boolean)"], ["boolean", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.isRmiRegistrySSL()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setRmiRegistrySSL(boolean)"], ["boolean", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.isRmiServerSSL()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setRmiServerSSL(boolean)"], ["boolean", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.isAuthenticate()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setAuthenticate(boolean)"], ["java.lang.String", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getPasswordFile()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setPasswordFile(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getLoginModuleName()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setLoginModuleName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.getAccessFile()"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.setAccessFile(java.lang.String)"], ["void", "org.apache.catalina.mbeans.JmxRemoteLifecycleListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.mbeans.MBeanDumper", "org.apache.catalina.mbeans.MBeanDumper()"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanDumper.dumpBeans(javax.management.MBeanServer, java.util.Set<javax.management.ObjectName>)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanDumper.escape(java.lang.String)"], ["org.apache.catalina.mbeans.MBeanFactory", "org.apache.catalina.mbeans.MBeanFactory()"], ["void", "org.apache.catalina.mbeans.MBeanFactory.setContainer(java.lang.Object)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createAjpConnector(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createDataSourceRealm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createHttpConnector(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createHttpsConnector(java.lang.String, java.lang.String, int)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createJDBCRealm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createJNDIRealm(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createMemoryRealm(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createStandardContext(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createStandardContext(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createStandardHost(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createStandardServiceEngine(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createStandardManager(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createUserDatabaseRealm(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createValve(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MBeanFactory.createWebappLoader(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeConnector(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeContext(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeHost(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeLoader(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeManager(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeRealm(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeService(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MBeanFactory.removeValve(java.lang.String)"], ["org.apache.catalina.mbeans.MBeanUtils", "org.apache.catalina.mbeans.MBeanUtils()"], ["javax.management.DynamicMBean", "org.apache.catalina.mbeans.MBeanUtils.createMBean(org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["javax.management.DynamicMBean", "org.apache.catalina.mbeans.MBeanUtils.createMBean(org.apache.tomcat.util.descriptor.web.ContextResource)"], ["javax.management.DynamicMBean", "org.apache.catalina.mbeans.MBeanUtils.createMBean(org.apache.tomcat.util.descriptor.web.ContextResourceLink)"], ["javax.management.ObjectName", "org.apache.catalina.mbeans.MBeanUtils.createObjectName(java.lang.String, org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["javax.management.ObjectName", "org.apache.catalina.mbeans.MBeanUtils.createObjectName(java.lang.String, org.apache.tomcat.util.descriptor.web.ContextResource)"], ["javax.management.ObjectName", "org.apache.catalina.mbeans.MBeanUtils.createObjectName(java.lang.String, org.apache.tomcat.util.descriptor.web.ContextResourceLink)"], ["synchronized", "org.apache.catalina.mbeans.MBeanUtils.org.apache.tomcat.util.modeler.Registry createRegistry()"], ["synchronized", "org.apache.catalina.mbeans.MBeanUtils.javax.management.MBeanServer createServer()"], ["void", "org.apache.catalina.mbeans.MBeanUtils.destroyMBean(org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["void", "org.apache.catalina.mbeans.MBeanUtils.destroyMBean(org.apache.tomcat.util.descriptor.web.ContextResource)"], ["void", "org.apache.catalina.mbeans.MBeanUtils.destroyMBean(org.apache.tomcat.util.descriptor.web.ContextResourceLink)"], ["org.apache.catalina.mbeans.MemoryUserDatabaseMBean", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean()"], ["java.lang.String[]", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.getGroups()"], ["java.lang.String[]", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.getRoles()"], ["java.lang.String[]", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.getUsers()"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.createGroup(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.createRole(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.createUser(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.findGroup(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.findRole(java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.findUser(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.removeGroup(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.removeRole(java.lang.String)"], ["void", "org.apache.catalina.mbeans.MemoryUserDatabaseMBean.removeUser(java.lang.String)"], ["org.apache.catalina.mbeans.NamingResourcesMBean", "org.apache.catalina.mbeans.NamingResourcesMBean()"], ["java.lang.String[]", "org.apache.catalina.mbeans.NamingResourcesMBean.getEnvironments()"], ["java.lang.String[]", "org.apache.catalina.mbeans.NamingResourcesMBean.getResources()"], ["java.lang.String[]", "org.apache.catalina.mbeans.NamingResourcesMBean.getResourceLinks()"], ["java.lang.String", "org.apache.catalina.mbeans.NamingResourcesMBean.addEnvironment(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.NamingResourcesMBean.addResource(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.mbeans.NamingResourcesMBean.addResourceLink(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.mbeans.NamingResourcesMBean.removeEnvironment(java.lang.String)"], ["void", "org.apache.catalina.mbeans.NamingResourcesMBean.removeResource(java.lang.String)"], ["void", "org.apache.catalina.mbeans.NamingResourcesMBean.removeResourceLink(java.lang.String)"], ["org.apache.catalina.mbeans.RoleMBean", "org.apache.catalina.mbeans.RoleMBean()"], ["org.apache.catalina.mbeans.ServiceMBean", "org.apache.catalina.mbeans.ServiceMBean()"], ["void", "org.apache.catalina.mbeans.ServiceMBean.addConnector(java.lang.String, int, boolean, boolean)"], ["void", "org.apache.catalina.mbeans.ServiceMBean.addExecutor(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.mbeans.ServiceMBean.findConnectors()"], ["java.lang.String[]", "org.apache.catalina.mbeans.ServiceMBean.findExecutors()"], ["java.lang.String", "org.apache.catalina.mbeans.ServiceMBean.getExecutor(java.lang.String)"], ["org.apache.catalina.mbeans.UserMBean", "org.apache.catalina.mbeans.UserMBean()"], ["java.lang.String[]", "org.apache.catalina.mbeans.UserMBean.getGroups()"], ["java.lang.String[]", "org.apache.catalina.mbeans.UserMBean.getRoles()"], ["void", "org.apache.catalina.mbeans.UserMBean.addGroup(java.lang.String)"], ["void", "org.apache.catalina.mbeans.UserMBean.addRole(java.lang.String)"], ["void", "org.apache.catalina.mbeans.UserMBean.removeGroup(java.lang.String)"], ["void", "org.apache.catalina.mbeans.UserMBean.removeRole(java.lang.String)"], ["org.apache.catalina.realm.AuthenticatedUserRealm", "org.apache.catalina.realm.AuthenticatedUserRealm()"], ["org.apache.catalina.realm.CombinedRealm", "org.apache.catalina.realm.CombinedRealm()"], ["void", "org.apache.catalina.realm.CombinedRealm.addRealm(org.apache.catalina.Realm)"], ["javax.management.ObjectName[]", "org.apache.catalina.realm.CombinedRealm.getRealms()"], ["org.apache.catalina.Realm[]", "org.apache.catalina.realm.CombinedRealm.getNestedRealms()"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.realm.CombinedRealm.setContainer(org.apache.catalina.Container)"], ["void", "org.apache.catalina.realm.CombinedRealm.backgroundProcess()"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(java.security.cert.X509Certificate[])"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(org.ietf.jgss.GSSContext, boolean)"], ["java.security.Principal", "org.apache.catalina.realm.CombinedRealm.authenticate(org.ietf.jgss.GSSName, org.ietf.jgss.GSSCredential)"], ["boolean", "org.apache.catalina.realm.CombinedRealm.hasRole(org.apache.catalina.Wrapper, java.security.Principal, java.lang.String)"], ["boolean", "org.apache.catalina.realm.CombinedRealm.isAvailable()"], ["void", "org.apache.catalina.realm.CombinedRealm.setCredentialHandler(org.apache.catalina.CredentialHandler)"], ["org.apache.catalina.realm.DataSourceRealm", "org.apache.catalina.realm.DataSourceRealm()"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getDataSourceName()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setDataSourceName(java.lang.String)"], ["boolean", "org.apache.catalina.realm.DataSourceRealm.getLocalDataSource()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setLocalDataSource(boolean)"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getRoleNameCol()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setRoleNameCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getUserCredCol()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setUserCredCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getUserNameCol()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setUserNameCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getUserRoleTable()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setUserRoleTable(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.DataSourceRealm.getUserTable()"], ["void", "org.apache.catalina.realm.DataSourceRealm.setUserTable(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.DataSourceRealm.authenticate(java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.realm.DataSourceRealm.isAvailable()"], ["org.apache.catalina.realm.DigestCredentialHandlerBase", "org.apache.catalina.realm.DigestCredentialHandlerBase()"], ["int", "org.apache.catalina.realm.DigestCredentialHandlerBase.getIterations()"], ["void", "org.apache.catalina.realm.DigestCredentialHandlerBase.setIterations(int)"], ["int", "org.apache.catalina.realm.DigestCredentialHandlerBase.getSaltLength()"], ["void", "org.apache.catalina.realm.DigestCredentialHandlerBase.setSaltLength(int)"], ["boolean", "org.apache.catalina.realm.DigestCredentialHandlerBase.getLogInvalidStoredCredentials()"], ["void", "org.apache.catalina.realm.DigestCredentialHandlerBase.setLogInvalidStoredCredentials(boolean)"], ["java.lang.String", "org.apache.catalina.realm.DigestCredentialHandlerBase.mutate(java.lang.String)"], ["org.apache.catalina.realm.GenericPrincipal$SerializablePrincipal", "org.apache.catalina.realm.GenericPrincipal$SerializablePrincipal(java.lang.String, java.lang.String, java.lang.String[], java.security.Principal)"], ["org.apache.catalina.realm.GenericPrincipal", "org.apache.catalina.realm.GenericPrincipal(java.lang.String, java.lang.String, java.util.List<java.lang.String>)"], ["org.apache.catalina.realm.GenericPrincipal", "org.apache.catalina.realm.GenericPrincipal(java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.security.Principal)"], ["org.apache.catalina.realm.GenericPrincipal", "org.apache.catalina.realm.GenericPrincipal(java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.security.Principal, javax.security.auth.login.LoginContext)"], ["org.apache.catalina.realm.GenericPrincipal", "org.apache.catalina.realm.GenericPrincipal(java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.security.Principal, javax.security.auth.login.LoginContext, org.ietf.jgss.GSSCredential)"], ["java.lang.String", "org.apache.catalina.realm.GenericPrincipal.getName()"], ["java.lang.String", "org.apache.catalina.realm.GenericPrincipal.getPassword()"], ["java.lang.String[]", "org.apache.catalina.realm.GenericPrincipal.getRoles()"], ["java.security.Principal", "org.apache.catalina.realm.GenericPrincipal.getUserPrincipal()"], ["org.ietf.jgss.GSSCredential", "org.apache.catalina.realm.GenericPrincipal.getGssCredential()"], ["boolean", "org.apache.catalina.realm.GenericPrincipal.hasRole(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.GenericPrincipal.toString()"], ["void", "org.apache.catalina.realm.GenericPrincipal.logout()"], ["org.apache.catalina.realm.JAASCallbackHandler", "org.apache.catalina.realm.JAASCallbackHandler(org.apache.catalina.realm.JAASRealm, java.lang.String, java.lang.String)"], ["org.apache.catalina.realm.JAASCallbackHandler", "org.apache.catalina.realm.JAASCallbackHandler(org.apache.catalina.realm.JAASRealm, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.realm.JAASCallbackHandler.handle(javax.security.auth.callback.Callback[])"], ["org.apache.catalina.realm.JAASMemoryLoginModule", "org.apache.catalina.realm.JAASMemoryLoginModule()"], ["boolean", "org.apache.catalina.realm.JAASMemoryLoginModule.abort()"], ["boolean", "org.apache.catalina.realm.JAASMemoryLoginModule.commit()"], ["void", "org.apache.catalina.realm.JAASMemoryLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map<java.lang.String, ?>, java.util.Map<java.lang.String, ?>)"], ["boolean", "org.apache.catalina.realm.JAASMemoryLoginModule.login()"], ["boolean", "org.apache.catalina.realm.JAASMemoryLoginModule.logout()"], ["org.apache.catalina.realm.JAASRealm", "org.apache.catalina.realm.JAASRealm()"], ["java.lang.String", "org.apache.catalina.realm.JAASRealm.getConfigFile()"], ["void", "org.apache.catalina.realm.JAASRealm.setConfigFile(java.lang.String)"], ["void", "org.apache.catalina.realm.JAASRealm.setAppName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JAASRealm.getAppName()"], ["void", "org.apache.catalina.realm.JAASRealm.setUseContextClassLoader(boolean)"], ["boolean", "org.apache.catalina.realm.JAASRealm.isUseContextClassLoader()"], ["void", "org.apache.catalina.realm.JAASRealm.setContainer(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.realm.JAASRealm.getRoleClassNames()"], ["void", "org.apache.catalina.realm.JAASRealm.setRoleClassNames(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JAASRealm.getUserClassNames()"], ["void", "org.apache.catalina.realm.JAASRealm.setUserClassNames(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.JAASRealm.authenticate(java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.JAASRealm.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.realm.JAASRealm.isAvailable()"], ["org.apache.catalina.realm.JDBCRealm", "org.apache.catalina.realm.JDBCRealm()"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getConnectionName()"], ["void", "org.apache.catalina.realm.JDBCRealm.setConnectionName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getConnectionPassword()"], ["void", "org.apache.catalina.realm.JDBCRealm.setConnectionPassword(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getConnectionURL()"], ["void", "org.apache.catalina.realm.JDBCRealm.setConnectionURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getDriverName()"], ["void", "org.apache.catalina.realm.JDBCRealm.setDriverName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getRoleNameCol()"], ["void", "org.apache.catalina.realm.JDBCRealm.setRoleNameCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getUserCredCol()"], ["void", "org.apache.catalina.realm.JDBCRealm.setUserCredCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getUserNameCol()"], ["void", "org.apache.catalina.realm.JDBCRealm.setUserNameCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getUserRoleTable()"], ["void", "org.apache.catalina.realm.JDBCRealm.setUserRoleTable(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JDBCRealm.getUserTable()"], ["void", "org.apache.catalina.realm.JDBCRealm.setUserTable(java.lang.String)"], ["synchronized", "org.apache.catalina.realm.JDBCRealm.java.security.Principal authenticate(java.lang.String, java.lang.String)"], ["synchronized", "org.apache.catalina.realm.JDBCRealm.java.security.Principal authenticate(java.sql.Connection, java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.realm.JDBCRealm.isAvailable()"], ["org.apache.catalina.realm.JNDIRealm$User", "org.apache.catalina.realm.JNDIRealm$User(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm$User.getUserName()"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm$User.getDN()"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm$User.getPassword()"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm$User.getUserRoleId()"], ["org.apache.catalina.realm.JNDIRealm", "org.apache.catalina.realm.JNDIRealm()"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getForceDnHexEscape()"], ["void", "org.apache.catalina.realm.JNDIRealm.setForceDnHexEscape(boolean)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getAuthentication()"], ["void", "org.apache.catalina.realm.JNDIRealm.setAuthentication(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getConnectionName()"], ["void", "org.apache.catalina.realm.JNDIRealm.setConnectionName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getConnectionPassword()"], ["void", "org.apache.catalina.realm.JNDIRealm.setConnectionPassword(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getConnectionURL()"], ["void", "org.apache.catalina.realm.JNDIRealm.setConnectionURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getContextFactory()"], ["void", "org.apache.catalina.realm.JNDIRealm.setContextFactory(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getDerefAliases()"], ["void", "org.apache.catalina.realm.JNDIRealm.setDerefAliases(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getProtocol()"], ["void", "org.apache.catalina.realm.JNDIRealm.setProtocol(java.lang.String)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getAdCompat()"], ["void", "org.apache.catalina.realm.JNDIRealm.setAdCompat(boolean)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getReferrals()"], ["void", "org.apache.catalina.realm.JNDIRealm.setReferrals(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserBase()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserSearch()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserSearch(java.lang.String)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.isUserSearchAsUser()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserSearchAsUser(boolean)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getUserSubtree()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserSubtree(boolean)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserRoleName()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserRoleName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getRoleBase()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getRoleName()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getRoleSearch()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleSearch(java.lang.String)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.isRoleSearchAsUser()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleSearchAsUser(boolean)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getRoleSubtree()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleSubtree(boolean)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getRoleNested()"], ["void", "org.apache.catalina.realm.JNDIRealm.setRoleNested(boolean)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserPassword()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserPassword(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserRoleAttribute()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserRoleAttribute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getUserPattern()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUserPattern(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getAlternateURL()"], ["void", "org.apache.catalina.realm.JNDIRealm.setAlternateURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getCommonRole()"], ["void", "org.apache.catalina.realm.JNDIRealm.setCommonRole(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getConnectionTimeout()"], ["void", "org.apache.catalina.realm.JNDIRealm.setConnectionTimeout(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getReadTimeout()"], ["void", "org.apache.catalina.realm.JNDIRealm.setReadTimeout(java.lang.String)"], ["long", "org.apache.catalina.realm.JNDIRealm.getSizeLimit()"], ["void", "org.apache.catalina.realm.JNDIRealm.setSizeLimit(long)"], ["int", "org.apache.catalina.realm.JNDIRealm.getTimeLimit()"], ["void", "org.apache.catalina.realm.JNDIRealm.setTimeLimit(int)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.isUseDelegatedCredential()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUseDelegatedCredential(boolean)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getSpnegoDelegationQop()"], ["void", "org.apache.catalina.realm.JNDIRealm.setSpnegoDelegationQop(java.lang.String)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.getUseStartTls()"], ["void", "org.apache.catalina.realm.JNDIRealm.setUseStartTls(boolean)"], ["void", "org.apache.catalina.realm.JNDIRealm.setCipherSuites(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.JNDIRealm.getHostnameVerifierClassName()"], ["void", "org.apache.catalina.realm.JNDIRealm.setHostnameVerifierClassName(java.lang.String)"], ["javax.net.ssl.HostnameVerifier", "org.apache.catalina.realm.JNDIRealm.getHostnameVerifier()"], ["void", "org.apache.catalina.realm.JNDIRealm.setSslSocketFactoryClassName(java.lang.String)"], ["void", "org.apache.catalina.realm.JNDIRealm.setSslProtocol(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.JNDIRealm.authenticate(java.lang.String, java.lang.String)"], ["synchronized", "org.apache.catalina.realm.JNDIRealm.java.security.Principal authenticate(javax.naming.directory.DirContext, java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.realm.JNDIRealm.isAvailable()"], ["int", "org.apache.catalina.realm.LockOutRealm$LockRecord.getFailures()"], ["void", "org.apache.catalina.realm.LockOutRealm$LockRecord.setFailures(int)"], ["long", "org.apache.catalina.realm.LockOutRealm$LockRecord.getLastFailureTime()"], ["void", "org.apache.catalina.realm.LockOutRealm$LockRecord.registerFailure()"], ["org.apache.catalina.realm.LockOutRealm", "org.apache.catalina.realm.LockOutRealm()"], ["java.security.Principal", "org.apache.catalina.realm.LockOutRealm.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.LockOutRealm.authenticate(java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.LockOutRealm.authenticate(java.security.cert.X509Certificate[])"], ["java.security.Principal", "org.apache.catalina.realm.LockOutRealm.authenticate(org.ietf.jgss.GSSContext, boolean)"], ["java.security.Principal", "org.apache.catalina.realm.LockOutRealm.authenticate(org.ietf.jgss.GSSName, org.ietf.jgss.GSSCredential)"], ["void", "org.apache.catalina.realm.LockOutRealm.unlock(java.lang.String)"], ["boolean", "org.apache.catalina.realm.LockOutRealm.isLocked(java.lang.String)"], ["int", "org.apache.catalina.realm.LockOutRealm.getFailureCount()"], ["void", "org.apache.catalina.realm.LockOutRealm.setFailureCount(int)"], ["int", "org.apache.catalina.realm.LockOutRealm.getLockOutTime()"], ["void", "org.apache.catalina.realm.LockOutRealm.setLockOutTime(int)"], ["int", "org.apache.catalina.realm.LockOutRealm.getCacheSize()"], ["void", "org.apache.catalina.realm.LockOutRealm.setCacheSize(int)"], ["int", "org.apache.catalina.realm.LockOutRealm.getCacheRemovalWarningTime()"], ["void", "org.apache.catalina.realm.LockOutRealm.setCacheRemovalWarningTime(int)"], ["org.apache.catalina.realm.MemoryRealm", "org.apache.catalina.realm.MemoryRealm()"], ["java.lang.String", "org.apache.catalina.realm.MemoryRealm.getPathname()"], ["void", "org.apache.catalina.realm.MemoryRealm.setPathname(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.MemoryRealm.authenticate(java.lang.String, java.lang.String)"], ["org.apache.catalina.realm.MemoryRuleSet", "org.apache.catalina.realm.MemoryRuleSet()"], ["org.apache.catalina.realm.MemoryRuleSet", "org.apache.catalina.realm.MemoryRuleSet(java.lang.String)"], ["void", "org.apache.catalina.realm.MemoryRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.realm.MemoryUserRule", "org.apache.catalina.realm.MemoryUserRule()"], ["void", "org.apache.catalina.realm.MemoryUserRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.realm.MessageDigestCredentialHandler", "org.apache.catalina.realm.MessageDigestCredentialHandler()"], ["java.lang.String", "org.apache.catalina.realm.MessageDigestCredentialHandler.getEncoding()"], ["void", "org.apache.catalina.realm.MessageDigestCredentialHandler.setEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.MessageDigestCredentialHandler.getAlgorithm()"], ["void", "org.apache.catalina.realm.MessageDigestCredentialHandler.setAlgorithm(java.lang.String)"], ["boolean", "org.apache.catalina.realm.MessageDigestCredentialHandler.matches(java.lang.String, java.lang.String)"], ["org.apache.catalina.realm.NestedCredentialHandler", "org.apache.catalina.realm.NestedCredentialHandler()"], ["boolean", "org.apache.catalina.realm.NestedCredentialHandler.matches(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.realm.NestedCredentialHandler.mutate(java.lang.String)"], ["void", "org.apache.catalina.realm.NestedCredentialHandler.addCredentialHandler(org.apache.catalina.CredentialHandler)"], ["org.apache.catalina.CredentialHandler[]", "org.apache.catalina.realm.NestedCredentialHandler.getCredentialHandlers()"], ["org.apache.catalina.realm.NullRealm", "org.apache.catalina.realm.NullRealm()"], ["boolean", "org.apache.catalina.realm.RealmBase$AllRolesMode.equals(java.lang.Object)"], ["int", "org.apache.catalina.realm.RealmBase$AllRolesMode.hashCode()"], ["java.lang.String", "org.apache.catalina.realm.RealmBase$AllRolesMode.toString()"], ["org.apache.catalina.realm.RealmBase", "org.apache.catalina.realm.RealmBase()"], ["int", "org.apache.catalina.realm.RealmBase.getTransportGuaranteeRedirectStatus()"], ["void", "org.apache.catalina.realm.RealmBase.setTransportGuaranteeRedirectStatus(int)"], ["org.apache.catalina.CredentialHandler", "org.apache.catalina.realm.RealmBase.getCredentialHandler()"], ["void", "org.apache.catalina.realm.RealmBase.setCredentialHandler(org.apache.catalina.CredentialHandler)"], ["org.apache.catalina.Container", "org.apache.catalina.realm.RealmBase.getContainer()"], ["void", "org.apache.catalina.realm.RealmBase.setContainer(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.getAllRolesMode()"], ["void", "org.apache.catalina.realm.RealmBase.setAllRolesMode(java.lang.String)"], ["boolean", "org.apache.catalina.realm.RealmBase.getValidate()"], ["void", "org.apache.catalina.realm.RealmBase.setValidate(boolean)"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.getX509UsernameRetrieverClassName()"], ["void", "org.apache.catalina.realm.RealmBase.setX509UsernameRetrieverClassName(java.lang.String)"], ["boolean", "org.apache.catalina.realm.RealmBase.isStripRealmForGss()"], ["void", "org.apache.catalina.realm.RealmBase.setStripRealmForGss(boolean)"], ["void", "org.apache.catalina.realm.RealmBase.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(java.security.cert.X509Certificate[])"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(org.ietf.jgss.GSSContext, boolean)"], ["java.security.Principal", "org.apache.catalina.realm.RealmBase.authenticate(org.ietf.jgss.GSSName, org.ietf.jgss.GSSCredential)"], ["void", "org.apache.catalina.realm.RealmBase.backgroundProcess()"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint[]", "org.apache.catalina.realm.RealmBase.findSecurityConstraints(org.apache.catalina.connector.Request, org.apache.catalina.Context)"], ["boolean", "org.apache.catalina.realm.RealmBase.hasResourcePermission(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, org.apache.tomcat.util.descriptor.web.SecurityConstraint[], org.apache.catalina.Context)"], ["boolean", "org.apache.catalina.realm.RealmBase.hasRole(org.apache.catalina.Wrapper, java.security.Principal, java.lang.String)"], ["boolean", "org.apache.catalina.realm.RealmBase.hasUserDataPermission(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, org.apache.tomcat.util.descriptor.web.SecurityConstraint[])"], ["void", "org.apache.catalina.realm.RealmBase.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.toString()"], ["void", "org.apache.catalina.realm.RealmBase.main(java.lang.String[])"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.getObjectNameKeyProperties()"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.getDomainInternal()"], ["java.lang.String", "org.apache.catalina.realm.RealmBase.getRealmPath()"], ["void", "org.apache.catalina.realm.RealmBase.setRealmPath(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.realm.RealmBase.getRoles(java.security.Principal)"], ["org.apache.catalina.realm.SecretKeyCredentialHandler", "org.apache.catalina.realm.SecretKeyCredentialHandler()"], ["java.lang.String", "org.apache.catalina.realm.SecretKeyCredentialHandler.getAlgorithm()"], ["void", "org.apache.catalina.realm.SecretKeyCredentialHandler.setAlgorithm(java.lang.String)"], ["int", "org.apache.catalina.realm.SecretKeyCredentialHandler.getKeyLength()"], ["void", "org.apache.catalina.realm.SecretKeyCredentialHandler.setKeyLength(int)"], ["boolean", "org.apache.catalina.realm.SecretKeyCredentialHandler.matches(java.lang.String, java.lang.String)"], ["org.apache.catalina.realm.UserDatabaseRealm", "org.apache.catalina.realm.UserDatabaseRealm()"], ["java.lang.String", "org.apache.catalina.realm.UserDatabaseRealm.getResourceName()"], ["void", "org.apache.catalina.realm.UserDatabaseRealm.setResourceName(java.lang.String)"], ["boolean", "org.apache.catalina.realm.UserDatabaseRealm.hasRole(org.apache.catalina.Wrapper, java.security.Principal, java.lang.String)"], ["void", "org.apache.catalina.realm.UserDatabaseRealm.backgroundProcess()"], ["org.apache.catalina.realm.X509SubjectDnRetriever", "org.apache.catalina.realm.X509SubjectDnRetriever()"], ["java.lang.String", "org.apache.catalina.realm.X509SubjectDnRetriever.getUsername(java.security.cert.X509Certificate)"], ["org.apache.catalina.security.Constants", "org.apache.catalina.security.Constants()"], ["org.apache.catalina.security.DeployXmlPermission", "org.apache.catalina.security.DeployXmlPermission(java.lang.String)"], ["org.apache.catalina.security.DeployXmlPermission", "org.apache.catalina.security.DeployXmlPermission(java.lang.String, java.lang.String)"], ["org.apache.catalina.security.SecurityClassLoad", "org.apache.catalina.security.SecurityClassLoad()"], ["void", "org.apache.catalina.security.SecurityClassLoad.securityClassLoad(java.lang.ClassLoader)"], ["org.apache.catalina.security.SecurityConfig", "org.apache.catalina.security.SecurityConfig.newInstance()"], ["void", "org.apache.catalina.security.SecurityConfig.setPackageAccess()"], ["void", "org.apache.catalina.security.SecurityConfig.setPackageDefinition()"], ["org.apache.catalina.security.SecurityListener", "org.apache.catalina.security.SecurityListener()"], ["void", "org.apache.catalina.security.SecurityListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["void", "org.apache.catalina.security.SecurityListener.setCheckedOsUsers(java.lang.String)"], ["java.lang.String", "org.apache.catalina.security.SecurityListener.getCheckedOsUsers()"], ["void", "org.apache.catalina.security.SecurityListener.setMinimumUmask(java.lang.String)"], ["java.lang.String", "org.apache.catalina.security.SecurityListener.getMinimumUmask()"], ["java.lang.Void", "org.apache.catalina.security.SecurityUtil$1.run()"], ["java.lang.Object", "org.apache.catalina.security.SecurityUtil$1.run()"], ["org.apache.catalina.security.SecurityUtil", "org.apache.catalina.security.SecurityUtil()"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Servlet)"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Servlet, java.lang.Class<?>[], java.lang.Object[])"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Servlet, java.lang.Class<?>[], java.lang.Object[], java.security.Principal)"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Filter)"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Filter, java.lang.Class<?>[], java.lang.Object[])"], ["void", "org.apache.catalina.security.SecurityUtil.doAsPrivilege(java.lang.String, javax.servlet.Filter, java.lang.Class<?>[], java.lang.Object[], java.security.Principal)"], ["void", "org.apache.catalina.security.SecurityUtil.remove(java.lang.Object)"], ["boolean", "org.apache.catalina.security.SecurityUtil.isPackageProtectionEnabled()"], ["java.lang.String", "org.apache.catalina.servlets.CGIServlet$CGIEnvironment.toString()"], ["void", "org.apache.catalina.servlets.CGIServlet$CGIRunner$1.run()"], ["int", "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream.read()"], ["org.apache.catalina.servlets.CGIServlet", "org.apache.catalina.servlets.CGIServlet()"], ["void", "org.apache.catalina.servlets.CGIServlet.init(javax.servlet.ServletConfig)"], ["org.apache.catalina.servlets.Constants", "org.apache.catalina.servlets.Constants()"], ["org.apache.catalina.servlets.DefaultServlet$CompressionFormat", "org.apache.catalina.servlets.DefaultServlet$CompressionFormat(java.lang.String, java.lang.String)"], ["org.apache.catalina.servlets.DefaultServlet$DirsFirstComparator", "org.apache.catalina.servlets.DefaultServlet$DirsFirstComparator(java.util.Comparator<org.apache.catalina.WebResource>)"], ["int", "org.apache.catalina.servlets.DefaultServlet$DirsFirstComparator.compare(org.apache.catalina.WebResource, org.apache.catalina.WebResource)"], ["int", "org.apache.catalina.servlets.DefaultServlet$DirsFirstComparator.compare(java.lang.Object, java.lang.Object)"], ["boolean", "org.apache.catalina.servlets.DefaultServlet$Range.validate()"], ["org.apache.catalina.servlets.DefaultServlet$ResourceLastModifiedDateComparator", "org.apache.catalina.servlets.DefaultServlet$ResourceLastModifiedDateComparator(java.util.Comparator<org.apache.catalina.WebResource>)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceLastModifiedDateComparator.compare(org.apache.catalina.WebResource, org.apache.catalina.WebResource)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceLastModifiedDateComparator.compare(java.lang.Object, java.lang.Object)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceNameComparator.compare(org.apache.catalina.WebResource, org.apache.catalina.WebResource)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceNameComparator.compare(java.lang.Object, java.lang.Object)"], ["org.apache.catalina.servlets.DefaultServlet$ResourceSizeComparator", "org.apache.catalina.servlets.DefaultServlet$ResourceSizeComparator(java.util.Comparator<org.apache.catalina.WebResource>)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceSizeComparator.compare(org.apache.catalina.WebResource, org.apache.catalina.WebResource)"], ["int", "org.apache.catalina.servlets.DefaultServlet$ResourceSizeComparator.compare(java.lang.Object, java.lang.Object)"], ["org.xml.sax.InputSource", "org.apache.catalina.servlets.DefaultServlet$SecureEntityResolver.resolveEntity(java.lang.String, java.lang.String)"], ["org.xml.sax.InputSource", "org.apache.catalina.servlets.DefaultServlet$SecureEntityResolver.getExternalSubset(java.lang.String, java.lang.String)"], ["org.xml.sax.InputSource", "org.apache.catalina.servlets.DefaultServlet$SecureEntityResolver.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.servlets.DefaultServlet$SortManager$Order", "org.apache.catalina.servlets.DefaultServlet$SortManager$Order(char, boolean)"], ["org.apache.catalina.servlets.DefaultServlet$SortManager", "org.apache.catalina.servlets.DefaultServlet$SortManager(boolean)"], ["void", "org.apache.catalina.servlets.DefaultServlet$SortManager.sort(org.apache.catalina.WebResource[], java.lang.String)"], ["org.apache.catalina.servlets.DefaultServlet$SortManager$Order", "org.apache.catalina.servlets.DefaultServlet$SortManager.getOrder(java.lang.String)"], ["org.apache.catalina.servlets.DefaultServlet", "org.apache.catalina.servlets.DefaultServlet()"], ["void", "org.apache.catalina.servlets.DefaultServlet.destroy()"], ["void", "org.apache.catalina.servlets.DefaultServlet.init()"], ["org.apache.catalina.servlets.WebdavServlet$LockInfo", "org.apache.catalina.servlets.WebdavServlet$LockInfo(int)"], ["java.lang.String", "org.apache.catalina.servlets.WebdavServlet$LockInfo.toString()"], ["boolean", "org.apache.catalina.servlets.WebdavServlet$LockInfo.hasExpired()"], ["boolean", "org.apache.catalina.servlets.WebdavServlet$LockInfo.isExclusive()"], ["void", "org.apache.catalina.servlets.WebdavServlet$LockInfo.toXML(org.apache.catalina.util.XMLWriter)"], ["org.apache.catalina.servlets.WebdavServlet$WebdavResolver", "org.apache.catalina.servlets.WebdavServlet$WebdavResolver(javax.servlet.ServletContext)"], ["org.xml.sax.InputSource", "org.apache.catalina.servlets.WebdavServlet$WebdavResolver.resolveEntity(java.lang.String, java.lang.String)"], ["org.apache.catalina.servlets.WebdavServlet", "org.apache.catalina.servlets.WebdavServlet()"], ["void", "org.apache.catalina.servlets.WebdavServlet.init()"], ["org.apache.catalina.session.Constants", "org.apache.catalina.session.Constants()"], ["org.apache.catalina.session.FileStore", "org.apache.catalina.session.FileStore()"], ["java.lang.String", "org.apache.catalina.session.FileStore.getDirectory()"], ["void", "org.apache.catalina.session.FileStore.setDirectory(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.FileStore.getThreadName()"], ["java.lang.String", "org.apache.catalina.session.FileStore.getStoreName()"], ["int", "org.apache.catalina.session.FileStore.getSize()"], ["void", "org.apache.catalina.session.FileStore.clear()"], ["java.lang.String[]", "org.apache.catalina.session.FileStore.keys()"], ["org.apache.catalina.Session", "org.apache.catalina.session.FileStore.load(java.lang.String)"], ["void", "org.apache.catalina.session.FileStore.remove(java.lang.String)"], ["void", "org.apache.catalina.session.FileStore.save(org.apache.catalina.Session)"], ["org.apache.catalina.session.JDBCStore", "org.apache.catalina.session.JDBCStore()"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getName()"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getThreadName()"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getStoreName()"], ["void", "org.apache.catalina.session.JDBCStore.setDriverName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getDriverName()"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getConnectionName()"], ["void", "org.apache.catalina.session.JDBCStore.setConnectionName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getConnectionPassword()"], ["void", "org.apache.catalina.session.JDBCStore.setConnectionPassword(java.lang.String)"], ["void", "org.apache.catalina.session.JDBCStore.setConnectionURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getConnectionURL()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionTable(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionTable()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionAppCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionAppCol()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionIdCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionIdCol()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionDataCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionDataCol()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionValidCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionValidCol()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionMaxInactiveCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionMaxInactiveCol()"], ["void", "org.apache.catalina.session.JDBCStore.setSessionLastAccessedCol(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getSessionLastAccessedCol()"], ["void", "org.apache.catalina.session.JDBCStore.setDataSourceName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.JDBCStore.getDataSourceName()"], ["boolean", "org.apache.catalina.session.JDBCStore.getLocalDataSource()"], ["void", "org.apache.catalina.session.JDBCStore.setLocalDataSource(boolean)"], ["java.lang.String[]", "org.apache.catalina.session.JDBCStore.expiredKeys()"], ["java.lang.String[]", "org.apache.catalina.session.JDBCStore.keys()"], ["int", "org.apache.catalina.session.JDBCStore.getSize()"], ["org.apache.catalina.Session", "org.apache.catalina.session.JDBCStore.load(java.lang.String)"], ["void", "org.apache.catalina.session.JDBCStore.remove(java.lang.String)"], ["void", "org.apache.catalina.session.JDBCStore.clear()"], ["void", "org.apache.catalina.session.JDBCStore.save(org.apache.catalina.Session)"], ["org.apache.catalina.session.ManagerBase$SessionTiming", "org.apache.catalina.session.ManagerBase$SessionTiming(long, int)"], ["long", "org.apache.catalina.session.ManagerBase$SessionTiming.getTimestamp()"], ["int", "org.apache.catalina.session.ManagerBase$SessionTiming.getDuration()"], ["org.apache.catalina.session.ManagerBase", "org.apache.catalina.session.ManagerBase()"], ["boolean", "org.apache.catalina.session.ManagerBase.getNotifyAttributeListenerOnUnchangedValue()"], ["void", "org.apache.catalina.session.ManagerBase.setNotifyAttributeListenerOnUnchangedValue(boolean)"], ["boolean", "org.apache.catalina.session.ManagerBase.getNotifyBindingListenerOnUnchangedValue()"], ["void", "org.apache.catalina.session.ManagerBase.setNotifyBindingListenerOnUnchangedValue(boolean)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSessionAttributeNameFilter()"], ["void", "org.apache.catalina.session.ManagerBase.setSessionAttributeNameFilter(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSessionAttributeValueClassNameFilter()"], ["void", "org.apache.catalina.session.ManagerBase.setSessionAttributeValueClassNameFilter(java.lang.String)"], ["boolean", "org.apache.catalina.session.ManagerBase.getWarnOnSessionAttributeFilterFailure()"], ["void", "org.apache.catalina.session.ManagerBase.setWarnOnSessionAttributeFilterFailure(boolean)"], ["org.apache.catalina.Context", "org.apache.catalina.session.ManagerBase.getContext()"], ["void", "org.apache.catalina.session.ManagerBase.setContext(org.apache.catalina.Context)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getClassName()"], ["org.apache.catalina.SessionIdGenerator", "org.apache.catalina.session.ManagerBase.getSessionIdGenerator()"], ["void", "org.apache.catalina.session.ManagerBase.setSessionIdGenerator(org.apache.catalina.SessionIdGenerator)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getName()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSecureRandomClass()"], ["void", "org.apache.catalina.session.ManagerBase.setSecureRandomClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSecureRandomAlgorithm()"], ["void", "org.apache.catalina.session.ManagerBase.setSecureRandomAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSecureRandomProvider()"], ["void", "org.apache.catalina.session.ManagerBase.setSecureRandomProvider(java.lang.String)"], ["int", "org.apache.catalina.session.ManagerBase.getRejectedSessions()"], ["long", "org.apache.catalina.session.ManagerBase.getExpiredSessions()"], ["void", "org.apache.catalina.session.ManagerBase.setExpiredSessions(long)"], ["long", "org.apache.catalina.session.ManagerBase.getProcessingTime()"], ["void", "org.apache.catalina.session.ManagerBase.setProcessingTime(long)"], ["int", "org.apache.catalina.session.ManagerBase.getProcessExpiresFrequency()"], ["void", "org.apache.catalina.session.ManagerBase.setProcessExpiresFrequency(int)"], ["boolean", "org.apache.catalina.session.ManagerBase.getPersistAuthentication()"], ["void", "org.apache.catalina.session.ManagerBase.setPersistAuthentication(boolean)"], ["void", "org.apache.catalina.session.ManagerBase.backgroundProcess()"], ["void", "org.apache.catalina.session.ManagerBase.processExpires()"], ["void", "org.apache.catalina.session.ManagerBase.add(org.apache.catalina.Session)"], ["void", "org.apache.catalina.session.ManagerBase.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["org.apache.catalina.Session", "org.apache.catalina.session.ManagerBase.createSession(java.lang.String)"], ["org.apache.catalina.Session", "org.apache.catalina.session.ManagerBase.createEmptySession()"], ["org.apache.catalina.Session", "org.apache.catalina.session.ManagerBase.findSession(java.lang.String)"], ["org.apache.catalina.Session[]", "org.apache.catalina.session.ManagerBase.findSessions()"], ["void", "org.apache.catalina.session.ManagerBase.remove(org.apache.catalina.Session)"], ["void", "org.apache.catalina.session.ManagerBase.remove(org.apache.catalina.Session, boolean)"], ["void", "org.apache.catalina.session.ManagerBase.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.session.ManagerBase.changeSessionId(org.apache.catalina.Session)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.rotateSessionId(org.apache.catalina.Session)"], ["void", "org.apache.catalina.session.ManagerBase.changeSessionId(org.apache.catalina.Session, java.lang.String)"], ["boolean", "org.apache.catalina.session.ManagerBase.willAttributeDistribute(java.lang.String, java.lang.Object)"], ["org.apache.catalina.Engine", "org.apache.catalina.session.ManagerBase.getEngine()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getJvmRoute()"], ["void", "org.apache.catalina.session.ManagerBase.setSessionCounter(long)"], ["long", "org.apache.catalina.session.ManagerBase.getSessionCounter()"], ["int", "org.apache.catalina.session.ManagerBase.getDuplicates()"], ["void", "org.apache.catalina.session.ManagerBase.setDuplicates(int)"], ["int", "org.apache.catalina.session.ManagerBase.getActiveSessions()"], ["int", "org.apache.catalina.session.ManagerBase.getMaxActive()"], ["void", "org.apache.catalina.session.ManagerBase.setMaxActive(int)"], ["int", "org.apache.catalina.session.ManagerBase.getMaxActiveSessions()"], ["void", "org.apache.catalina.session.ManagerBase.setMaxActiveSessions(int)"], ["int", "org.apache.catalina.session.ManagerBase.getSessionMaxAliveTime()"], ["void", "org.apache.catalina.session.ManagerBase.setSessionMaxAliveTime(int)"], ["void", "org.apache.catalina.session.ManagerBase.updateSessionMaxAliveTime(int)"], ["int", "org.apache.catalina.session.ManagerBase.getSessionAverageAliveTime()"], ["int", "org.apache.catalina.session.ManagerBase.getSessionCreateRate()"], ["int", "org.apache.catalina.session.ManagerBase.getSessionExpireRate()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.listSessionIds()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getSessionAttribute(java.lang.String, java.lang.String)"], ["java.util.HashMap<java.lang.String, java.lang.String>", "org.apache.catalina.session.ManagerBase.getSession(java.lang.String)"], ["void", "org.apache.catalina.session.ManagerBase.expireSession(java.lang.String)"], ["long", "org.apache.catalina.session.ManagerBase.getThisAccessedTimestamp(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getThisAccessedTime(java.lang.String)"], ["long", "org.apache.catalina.session.ManagerBase.getLastAccessedTimestamp(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getLastAccessedTime(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getCreationTime(java.lang.String)"], ["long", "org.apache.catalina.session.ManagerBase.getCreationTimestamp(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.toString()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getObjectNameKeyProperties()"], ["java.lang.String", "org.apache.catalina.session.ManagerBase.getDomainInternal()"], ["org.apache.catalina.session.PersistentManager", "org.apache.catalina.session.PersistentManager()"], ["java.lang.String", "org.apache.catalina.session.PersistentManager.getName()"], ["java.lang.Void", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear.run()"], ["java.lang.Object", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear.run()"], ["java.lang.String[]", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys.run()"], ["java.lang.Object", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys.run()"], ["org.apache.catalina.Session", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad.run()"], ["java.lang.Object", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad.run()"], ["java.lang.Void", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove.run()"], ["java.lang.Object", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove.run()"], ["java.lang.Void", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave.run()"], ["java.lang.Object", "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave.run()"], ["org.apache.catalina.session.PersistentManagerBase", "org.apache.catalina.session.PersistentManagerBase()"], ["int", "org.apache.catalina.session.PersistentManagerBase.getMaxIdleBackup()"], ["void", "org.apache.catalina.session.PersistentManagerBase.setMaxIdleBackup(int)"], ["int", "org.apache.catalina.session.PersistentManagerBase.getMaxIdleSwap()"], ["void", "org.apache.catalina.session.PersistentManagerBase.setMaxIdleSwap(int)"], ["int", "org.apache.catalina.session.PersistentManagerBase.getMinIdleSwap()"], ["void", "org.apache.catalina.session.PersistentManagerBase.setMinIdleSwap(int)"], ["boolean", "org.apache.catalina.session.PersistentManagerBase.isLoaded(java.lang.String)"], ["java.lang.String", "org.apache.catalina.session.PersistentManagerBase.getName()"], ["void", "org.apache.catalina.session.PersistentManagerBase.setStore(org.apache.catalina.Store)"], ["org.apache.catalina.Store", "org.apache.catalina.session.PersistentManagerBase.getStore()"], ["boolean", "org.apache.catalina.session.PersistentManagerBase.getSaveOnRestart()"], ["void", "org.apache.catalina.session.PersistentManagerBase.setSaveOnRestart(boolean)"], ["void", "org.apache.catalina.session.PersistentManagerBase.clearStore()"], ["void", "org.apache.catalina.session.PersistentManagerBase.processExpires()"], ["void", "org.apache.catalina.session.PersistentManagerBase.processPersistenceChecks()"], ["org.apache.catalina.Session", "org.apache.catalina.session.PersistentManagerBase.findSession(java.lang.String)"], ["void", "org.apache.catalina.session.PersistentManagerBase.removeSuper(org.apache.catalina.Session)"], ["void", "org.apache.catalina.session.PersistentManagerBase.load()"], ["void", "org.apache.catalina.session.PersistentManagerBase.remove(org.apache.catalina.Session, boolean)"], ["void", "org.apache.catalina.session.PersistentManagerBase.unload()"], ["int", "org.apache.catalina.session.PersistentManagerBase.getActiveSessionsFull()"], ["java.lang.Void", "org.apache.catalina.session.StandardManager$PrivilegedDoLoad.run()"], ["java.lang.Object", "org.apache.catalina.session.StandardManager$PrivilegedDoLoad.run()"], ["java.lang.Void", "org.apache.catalina.session.StandardManager$PrivilegedDoUnload.run()"], ["java.lang.Object", "org.apache.catalina.session.StandardManager$PrivilegedDoUnload.run()"], ["org.apache.catalina.session.StandardManager", "org.apache.catalina.session.StandardManager()"], ["java.lang.String", "org.apache.catalina.session.StandardManager.getName()"], ["java.lang.String", "org.apache.catalina.session.StandardManager.getPathname()"], ["void", "org.apache.catalina.session.StandardManager.setPathname(java.lang.String)"], ["void", "org.apache.catalina.session.StandardManager.load()"], ["void", "org.apache.catalina.session.StandardManager.unload()"], ["org.apache.catalina.session.StandardSession$PrivilegedNewSessionFacade", "org.apache.catalina.session.StandardSession$PrivilegedNewSessionFacade(javax.servlet.http.HttpSession)"], ["org.apache.catalina.session.StandardSessionFacade", "org.apache.catalina.session.StandardSession$PrivilegedNewSessionFacade.run()"], ["java.lang.Object", "org.apache.catalina.session.StandardSession$PrivilegedNewSessionFacade.run()"], ["org.apache.catalina.session.StandardSession", "org.apache.catalina.session.StandardSession(org.apache.catalina.Manager)"], ["java.lang.String", "org.apache.catalina.session.StandardSession.getAuthType()"], ["void", "org.apache.catalina.session.StandardSession.setAuthType(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.setCreationTime(long)"], ["java.lang.String", "org.apache.catalina.session.StandardSession.getId()"], ["java.lang.String", "org.apache.catalina.session.StandardSession.getIdInternal()"], ["void", "org.apache.catalina.session.StandardSession.setId(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.setId(java.lang.String, boolean)"], ["void", "org.apache.catalina.session.StandardSession.tellNew()"], ["void", "org.apache.catalina.session.StandardSession.tellChangedSessionId(java.lang.String, java.lang.String, boolean, boolean)"], ["long", "org.apache.catalina.session.StandardSession.getThisAccessedTime()"], ["long", "org.apache.catalina.session.StandardSession.getThisAccessedTimeInternal()"], ["long", "org.apache.catalina.session.StandardSession.getLastAccessedTime()"], ["long", "org.apache.catalina.session.StandardSession.getLastAccessedTimeInternal()"], ["long", "org.apache.catalina.session.StandardSession.getIdleTime()"], ["long", "org.apache.catalina.session.StandardSession.getIdleTimeInternal()"], ["org.apache.catalina.Manager", "org.apache.catalina.session.StandardSession.getManager()"], ["void", "org.apache.catalina.session.StandardSession.setManager(org.apache.catalina.Manager)"], ["int", "org.apache.catalina.session.StandardSession.getMaxInactiveInterval()"], ["void", "org.apache.catalina.session.StandardSession.setMaxInactiveInterval(int)"], ["void", "org.apache.catalina.session.StandardSession.setNew(boolean)"], ["java.security.Principal", "org.apache.catalina.session.StandardSession.getPrincipal()"], ["void", "org.apache.catalina.session.StandardSession.setPrincipal(java.security.Principal)"], ["javax.servlet.http.HttpSession", "org.apache.catalina.session.StandardSession.getSession()"], ["boolean", "org.apache.catalina.session.StandardSession.isValid()"], ["void", "org.apache.catalina.session.StandardSession.setValid(boolean)"], ["void", "org.apache.catalina.session.StandardSession.access()"], ["void", "org.apache.catalina.session.StandardSession.endAccess()"], ["void", "org.apache.catalina.session.StandardSession.addSessionListener(org.apache.catalina.SessionListener)"], ["void", "org.apache.catalina.session.StandardSession.expire()"], ["void", "org.apache.catalina.session.StandardSession.expire(boolean)"], ["void", "org.apache.catalina.session.StandardSession.passivate()"], ["void", "org.apache.catalina.session.StandardSession.activate()"], ["java.lang.Object", "org.apache.catalina.session.StandardSession.getNote(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.recycle()"], ["void", "org.apache.catalina.session.StandardSession.removeNote(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.removeSessionListener(org.apache.catalina.SessionListener)"], ["void", "org.apache.catalina.session.StandardSession.setNote(java.lang.String, java.lang.Object)"], ["java.lang.String", "org.apache.catalina.session.StandardSession.toString()"], ["void", "org.apache.catalina.session.StandardSession.readObjectData(java.io.ObjectInputStream)"], ["void", "org.apache.catalina.session.StandardSession.writeObjectData(java.io.ObjectOutputStream)"], ["long", "org.apache.catalina.session.StandardSession.getCreationTime()"], ["long", "org.apache.catalina.session.StandardSession.getCreationTimeInternal()"], ["javax.servlet.ServletContext", "org.apache.catalina.session.StandardSession.getServletContext()"], ["javax.servlet.http.HttpSessionContext", "org.apache.catalina.session.StandardSession.getSessionContext()"], ["java.lang.Object", "org.apache.catalina.session.StandardSession.getAttribute(java.lang.String)"], ["java.lang.Object", "org.apache.catalina.session.StandardSession.getValue(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.session.StandardSession.getValueNames()"], ["void", "org.apache.catalina.session.StandardSession.invalidate()"], ["boolean", "org.apache.catalina.session.StandardSession.isNew()"], ["void", "org.apache.catalina.session.StandardSession.putValue(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.session.StandardSession.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.removeAttribute(java.lang.String, boolean)"], ["void", "org.apache.catalina.session.StandardSession.removeValue(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSession.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.session.StandardSession.setAttribute(java.lang.String, java.lang.Object, boolean)"], ["boolean", "org.apache.catalina.session.StandardSession.isAttributeDistributable(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.session.StandardSession.fireSessionEvent(java.lang.String, java.lang.Object)"], ["javax.servlet.http.HttpSession", "org.apache.catalina.session.StandardSessionContext.getSession(java.lang.String)"], ["org.apache.catalina.session.StandardSessionFacade", "org.apache.catalina.session.StandardSessionFacade(javax.servlet.http.HttpSession)"], ["long", "org.apache.catalina.session.StandardSessionFacade.getCreationTime()"], ["java.lang.String", "org.apache.catalina.session.StandardSessionFacade.getId()"], ["long", "org.apache.catalina.session.StandardSessionFacade.getLastAccessedTime()"], ["javax.servlet.ServletContext", "org.apache.catalina.session.StandardSessionFacade.getServletContext()"], ["void", "org.apache.catalina.session.StandardSessionFacade.setMaxInactiveInterval(int)"], ["int", "org.apache.catalina.session.StandardSessionFacade.getMaxInactiveInterval()"], ["javax.servlet.http.HttpSessionContext", "org.apache.catalina.session.StandardSessionFacade.getSessionContext()"], ["java.lang.Object", "org.apache.catalina.session.StandardSessionFacade.getAttribute(java.lang.String)"], ["java.lang.Object", "org.apache.catalina.session.StandardSessionFacade.getValue(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.session.StandardSessionFacade.getValueNames()"], ["void", "org.apache.catalina.session.StandardSessionFacade.setAttribute(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.session.StandardSessionFacade.putValue(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.session.StandardSessionFacade.removeAttribute(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSessionFacade.removeValue(java.lang.String)"], ["void", "org.apache.catalina.session.StandardSessionFacade.invalidate()"], ["boolean", "org.apache.catalina.session.StandardSessionFacade.isNew()"], ["org.apache.catalina.session.StoreBase", "org.apache.catalina.session.StoreBase()"], ["java.lang.String", "org.apache.catalina.session.StoreBase.getStoreName()"], ["void", "org.apache.catalina.session.StoreBase.setManager(org.apache.catalina.Manager)"], ["org.apache.catalina.Manager", "org.apache.catalina.session.StoreBase.getManager()"], ["void", "org.apache.catalina.session.StoreBase.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.session.StoreBase.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["java.lang.String[]", "org.apache.catalina.session.StoreBase.expiredKeys()"], ["void", "org.apache.catalina.session.StoreBase.processExpires()"], ["java.lang.String", "org.apache.catalina.session.StoreBase.toString()"], ["org.apache.catalina.session.TooManyActiveSessionsException", "org.apache.catalina.session.TooManyActiveSessionsException(java.lang.String, int)"], ["int", "org.apache.catalina.session.TooManyActiveSessionsException.getMaxActiveSessions()"], ["org.apache.catalina.startup.AddPortOffsetRule", "org.apache.catalina.startup.AddPortOffsetRule()"], ["void", "org.apache.catalina.startup.AddPortOffsetRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.startup.Bootstrap", "org.apache.catalina.startup.Bootstrap()"], ["void", "org.apache.catalina.startup.Bootstrap.init()"], ["void", "org.apache.catalina.startup.Bootstrap.init(java.lang.String[])"], ["void", "org.apache.catalina.startup.Bootstrap.start()"], ["void", "org.apache.catalina.startup.Bootstrap.stop()"], ["void", "org.apache.catalina.startup.Bootstrap.stopServer()"], ["void", "org.apache.catalina.startup.Bootstrap.stopServer(java.lang.String[])"], ["void", "org.apache.catalina.startup.Bootstrap.setAwait(boolean)"], ["boolean", "org.apache.catalina.startup.Bootstrap.getAwait()"], ["void", "org.apache.catalina.startup.Bootstrap.destroy()"], ["void", "org.apache.catalina.startup.Bootstrap.main(java.lang.String[])"], ["java.lang.String", "org.apache.catalina.startup.Bootstrap.getCatalinaHome()"], ["java.lang.String", "org.apache.catalina.startup.Bootstrap.getCatalinaBase()"], ["java.io.File", "org.apache.catalina.startup.Bootstrap.getCatalinaHomeFile()"], ["java.io.File", "org.apache.catalina.startup.Bootstrap.getCatalinaBaseFile()"], ["void", "org.apache.catalina.startup.Catalina$CatalinaShutdownHook.run()"], ["org.apache.catalina.startup.Catalina$SetParentClassLoaderRule", "org.apache.catalina.startup.Catalina$SetParentClassLoaderRule(org.apache.catalina.startup.Catalina, java.lang.ClassLoader)"], ["void", "org.apache.catalina.startup.Catalina$SetParentClassLoaderRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.startup.Catalina", "org.apache.catalina.startup.Catalina()"], ["void", "org.apache.catalina.startup.Catalina.setConfigFile(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.Catalina.getConfigFile()"], ["void", "org.apache.catalina.startup.Catalina.setUseShutdownHook(boolean)"], ["boolean", "org.apache.catalina.startup.Catalina.getUseShutdownHook()"], ["boolean", "org.apache.catalina.startup.Catalina.getGenerateCode()"], ["void", "org.apache.catalina.startup.Catalina.setGenerateCode(boolean)"], ["boolean", "org.apache.catalina.startup.Catalina.getUseGeneratedCode()"], ["void", "org.apache.catalina.startup.Catalina.setUseGeneratedCode(boolean)"], ["java.io.File", "org.apache.catalina.startup.Catalina.getGeneratedCodeLocation()"], ["void", "org.apache.catalina.startup.Catalina.setGeneratedCodeLocation(java.io.File)"], ["void", "org.apache.catalina.startup.Catalina.setParentClassLoader(java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.apache.catalina.startup.Catalina.getParentClassLoader()"], ["void", "org.apache.catalina.startup.Catalina.setServer(org.apache.catalina.Server)"], ["org.apache.catalina.Server", "org.apache.catalina.startup.Catalina.getServer()"], ["boolean", "org.apache.catalina.startup.Catalina.isUseNaming()"], ["void", "org.apache.catalina.startup.Catalina.setUseNaming(boolean)"], ["void", "org.apache.catalina.startup.Catalina.setAwait(boolean)"], ["boolean", "org.apache.catalina.startup.Catalina.isAwait()"], ["void", "org.apache.catalina.startup.Catalina.stopServer()"], ["void", "org.apache.catalina.startup.Catalina.stopServer(java.lang.String[])"], ["void", "org.apache.catalina.startup.Catalina.load()"], ["void", "org.apache.catalina.startup.Catalina.load(java.lang.String[])"], ["void", "org.apache.catalina.startup.Catalina.start()"], ["void", "org.apache.catalina.startup.Catalina.stop()"], ["void", "org.apache.catalina.startup.Catalina.await()"], ["org.apache.catalina.startup.CatalinaBaseConfigurationSource", "org.apache.catalina.startup.CatalinaBaseConfigurationSource(java.io.File, java.lang.String)"], ["org.apache.tomcat.util.file.ConfigurationSource$Resource", "org.apache.catalina.startup.CatalinaBaseConfigurationSource.getServerXml()"], ["org.apache.tomcat.util.file.ConfigurationSource$Resource", "org.apache.catalina.startup.CatalinaBaseConfigurationSource.getResource(java.lang.String)"], ["java.net.URI", "org.apache.catalina.startup.CatalinaBaseConfigurationSource.getURI(java.lang.String)"], ["org.apache.catalina.startup.CatalinaProperties", "org.apache.catalina.startup.CatalinaProperties()"], ["java.lang.String", "org.apache.catalina.startup.CatalinaProperties.getProperty(java.lang.String)"], ["org.apache.catalina.startup.CertificateCreateRule", "org.apache.catalina.startup.CertificateCreateRule()"], ["void", "org.apache.catalina.startup.CertificateCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.catalina.startup.CertificateCreateRule.end(java.lang.String, java.lang.String)"], ["java.net.URLClassLoader", "org.apache.catalina.startup.ClassLoaderFactory$1.run()"], ["java.lang.Object", "org.apache.catalina.startup.ClassLoaderFactory$1.run()"], ["java.net.URLClassLoader", "org.apache.catalina.startup.ClassLoaderFactory$2.run()"], ["java.lang.Object", "org.apache.catalina.startup.ClassLoaderFactory$2.run()"], ["org.apache.catalina.startup.ClassLoaderFactory$Repository", "org.apache.catalina.startup.ClassLoaderFactory$Repository(java.lang.String, org.apache.catalina.startup.ClassLoaderFactory$RepositoryType)"], ["java.lang.String", "org.apache.catalina.startup.ClassLoaderFactory$Repository.getLocation()"], ["org.apache.catalina.startup.ClassLoaderFactory$RepositoryType", "org.apache.catalina.startup.ClassLoaderFactory$Repository.getType()"], ["org.apache.catalina.startup.ClassLoaderFactory$RepositoryType[]", "org.apache.catalina.startup.ClassLoaderFactory$RepositoryType.values()"], ["org.apache.catalina.startup.ClassLoaderFactory$RepositoryType", "org.apache.catalina.startup.ClassLoaderFactory$RepositoryType.valueOf(java.lang.String)"], ["org.apache.catalina.startup.ClassLoaderFactory", "org.apache.catalina.startup.ClassLoaderFactory()"], ["java.lang.ClassLoader", "org.apache.catalina.startup.ClassLoaderFactory.createClassLoader(java.io.File[], java.io.File[], java.lang.ClassLoader)"], ["java.lang.ClassLoader", "org.apache.catalina.startup.ClassLoaderFactory.createClassLoader(java.util.List<org.apache.catalina.startup.ClassLoaderFactory$Repository>, java.lang.ClassLoader)"], ["org.apache.catalina.startup.ConnectorCreateRule", "org.apache.catalina.startup.ConnectorCreateRule()"], ["void", "org.apache.catalina.startup.ConnectorCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.catalina.startup.ConnectorCreateRule.end(java.lang.String, java.lang.String)"], ["org.apache.catalina.startup.Constants", "org.apache.catalina.startup.Constants()"], ["org.apache.catalina.startup.ContextConfig$DefaultWebXmlCacheEntry", "org.apache.catalina.startup.ContextConfig$DefaultWebXmlCacheEntry(org.apache.tomcat.util.descriptor.web.WebXml, long, long)"], ["org.apache.tomcat.util.descriptor.web.WebXml", "org.apache.catalina.startup.ContextConfig$DefaultWebXmlCacheEntry.getWebXml()"], ["long", "org.apache.catalina.startup.ContextConfig$DefaultWebXmlCacheEntry.getGlobalTimeStamp()"], ["long", "org.apache.catalina.startup.ContextConfig$DefaultWebXmlCacheEntry.getHostTimeStamp()"], ["void", "org.apache.catalina.startup.ContextConfig$HostWebXmlCacheCleaner.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.ContextConfig$JavaClassCacheEntry", "org.apache.catalina.startup.ContextConfig$JavaClassCacheEntry(org.apache.tomcat.util.bcel.classfile.JavaClass)"], ["java.lang.String", "org.apache.catalina.startup.ContextConfig$JavaClassCacheEntry.getSuperclassName()"], ["java.lang.String[]", "org.apache.catalina.startup.ContextConfig$JavaClassCacheEntry.getInterfaceNames()"], ["void", "org.apache.catalina.startup.ContextConfig$JavaClassCacheEntry.setSciSet(java.util.Set<javax.servlet.ServletContainerInitializer>)"], ["org.apache.catalina.startup.ContextConfig", "org.apache.catalina.startup.ContextConfig()"], ["java.lang.String", "org.apache.catalina.startup.ContextConfig.getDefaultWebXml()"], ["void", "org.apache.catalina.startup.ContextConfig.setDefaultWebXml(java.lang.String)"], ["void", "org.apache.catalina.startup.ContextConfig.setCustomAuthenticators(java.util.Map<java.lang.String, org.apache.catalina.Authenticator>)"], ["void", "org.apache.catalina.startup.ContextConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["java.lang.String", "org.apache.catalina.startup.ContextConfig.getConfigBasePath()"], ["org.apache.catalina.startup.ContextRuleSet", "org.apache.catalina.startup.ContextRuleSet()"], ["org.apache.catalina.startup.ContextRuleSet", "org.apache.catalina.startup.ContextRuleSet(java.lang.String)"], ["org.apache.catalina.startup.ContextRuleSet", "org.apache.catalina.startup.ContextRuleSet(java.lang.String, boolean)"], ["void", "org.apache.catalina.startup.ContextRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.CopyParentClassLoaderRule", "org.apache.catalina.startup.CopyParentClassLoaderRule()"], ["void", "org.apache.catalina.startup.CopyParentClassLoaderRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.startup.CredentialHandlerRuleSet", "org.apache.catalina.startup.CredentialHandlerRuleSet()"], ["org.apache.catalina.startup.CredentialHandlerRuleSet", "org.apache.catalina.startup.CredentialHandlerRuleSet(java.lang.String)"], ["void", "org.apache.catalina.startup.CredentialHandlerRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.EngineConfig", "org.apache.catalina.startup.EngineConfig()"], ["void", "org.apache.catalina.startup.EngineConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.EngineRuleSet", "org.apache.catalina.startup.EngineRuleSet()"], ["org.apache.catalina.startup.EngineRuleSet", "org.apache.catalina.startup.EngineRuleSet(java.lang.String)"], ["void", "org.apache.catalina.startup.EngineRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.ExpandWar", "org.apache.catalina.startup.ExpandWar()"], ["java.lang.String", "org.apache.catalina.startup.ExpandWar.expand(org.apache.catalina.Host, java.net.URL, java.lang.String)"], ["void", "org.apache.catalina.startup.ExpandWar.validate(org.apache.catalina.Host, java.net.URL, java.lang.String)"], ["boolean", "org.apache.catalina.startup.ExpandWar.copy(java.io.File, java.io.File)"], ["boolean", "org.apache.catalina.startup.ExpandWar.delete(java.io.File)"], ["boolean", "org.apache.catalina.startup.ExpandWar.delete(java.io.File, boolean)"], ["boolean", "org.apache.catalina.startup.ExpandWar.deleteDir(java.io.File)"], ["boolean", "org.apache.catalina.startup.ExpandWar.deleteDir(java.io.File, boolean)"], ["org.apache.catalina.startup.FailedContext", "org.apache.catalina.startup.FailedContext()"], ["java.net.URL", "org.apache.catalina.startup.FailedContext.getConfigFile()"], ["void", "org.apache.catalina.startup.FailedContext.setConfigFile(java.net.URL)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getDocBase()"], ["void", "org.apache.catalina.startup.FailedContext.setDocBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getName()"], ["void", "org.apache.catalina.startup.FailedContext.setName(java.lang.String)"], ["org.apache.catalina.Container", "org.apache.catalina.startup.FailedContext.getParent()"], ["void", "org.apache.catalina.startup.FailedContext.setParent(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getPath()"], ["void", "org.apache.catalina.startup.FailedContext.setPath(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getWebappVersion()"], ["void", "org.apache.catalina.startup.FailedContext.setWebappVersion(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getMBeanKeyProperties()"], ["void", "org.apache.catalina.startup.FailedContext.addWatchedResource(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findWatchedResources()"], ["void", "org.apache.catalina.startup.FailedContext.removeWatchedResource(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addChild(org.apache.catalina.Container)"], ["org.apache.catalina.Container", "org.apache.catalina.startup.FailedContext.findChild(java.lang.String)"], ["org.apache.catalina.Container[]", "org.apache.catalina.startup.FailedContext.findChildren()"], ["void", "org.apache.catalina.startup.FailedContext.removeChild(org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.toString()"], ["org.apache.catalina.Loader", "org.apache.catalina.startup.FailedContext.getLoader()"], ["void", "org.apache.catalina.startup.FailedContext.setLoader(org.apache.catalina.Loader)"], ["org.apache.juli.logging.Log", "org.apache.catalina.startup.FailedContext.getLogger()"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getLogName()"], ["org.apache.catalina.Manager", "org.apache.catalina.startup.FailedContext.getManager()"], ["void", "org.apache.catalina.startup.FailedContext.setManager(org.apache.catalina.Manager)"], ["org.apache.catalina.Pipeline", "org.apache.catalina.startup.FailedContext.getPipeline()"], ["org.apache.catalina.Cluster", "org.apache.catalina.startup.FailedContext.getCluster()"], ["void", "org.apache.catalina.startup.FailedContext.setCluster(org.apache.catalina.Cluster)"], ["int", "org.apache.catalina.startup.FailedContext.getBackgroundProcessorDelay()"], ["void", "org.apache.catalina.startup.FailedContext.setBackgroundProcessorDelay(int)"], ["java.lang.ClassLoader", "org.apache.catalina.startup.FailedContext.getParentClassLoader()"], ["void", "org.apache.catalina.startup.FailedContext.setParentClassLoader(java.lang.ClassLoader)"], ["org.apache.catalina.Realm", "org.apache.catalina.startup.FailedContext.getRealm()"], ["void", "org.apache.catalina.startup.FailedContext.setRealm(org.apache.catalina.Realm)"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.startup.FailedContext.getResources()"], ["void", "org.apache.catalina.startup.FailedContext.setResources(org.apache.catalina.WebResourceRoot)"], ["void", "org.apache.catalina.startup.FailedContext.backgroundProcess()"], ["void", "org.apache.catalina.startup.FailedContext.addContainerListener(org.apache.catalina.ContainerListener)"], ["org.apache.catalina.ContainerListener[]", "org.apache.catalina.startup.FailedContext.findContainerListeners()"], ["void", "org.apache.catalina.startup.FailedContext.removeContainerListener(org.apache.catalina.ContainerListener)"], ["void", "org.apache.catalina.startup.FailedContext.addPropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.startup.FailedContext.removePropertyChangeListener(java.beans.PropertyChangeListener)"], ["void", "org.apache.catalina.startup.FailedContext.fireContainerEvent(java.lang.String, java.lang.Object)"], ["void", "org.apache.catalina.startup.FailedContext.logAccess(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long, boolean)"], ["org.apache.catalina.AccessLog", "org.apache.catalina.startup.FailedContext.getAccessLog()"], ["int", "org.apache.catalina.startup.FailedContext.getStartStopThreads()"], ["void", "org.apache.catalina.startup.FailedContext.setStartStopThreads(int)"], ["boolean", "org.apache.catalina.startup.FailedContext.getAllowCasualMultipartParsing()"], ["void", "org.apache.catalina.startup.FailedContext.setAllowCasualMultipartParsing(boolean)"], ["java.lang.Object[]", "org.apache.catalina.startup.FailedContext.getApplicationEventListeners()"], ["void", "org.apache.catalina.startup.FailedContext.setApplicationEventListeners(java.lang.Object[])"], ["java.lang.Object[]", "org.apache.catalina.startup.FailedContext.getApplicationLifecycleListeners()"], ["void", "org.apache.catalina.startup.FailedContext.setApplicationLifecycleListeners(java.lang.Object[])"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getCharset(java.util.Locale)"], ["boolean", "org.apache.catalina.startup.FailedContext.getConfigured()"], ["void", "org.apache.catalina.startup.FailedContext.setConfigured(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getCookies()"], ["void", "org.apache.catalina.startup.FailedContext.setCookies(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getSessionCookieName()"], ["void", "org.apache.catalina.startup.FailedContext.setSessionCookieName(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getUseHttpOnly()"], ["void", "org.apache.catalina.startup.FailedContext.setUseHttpOnly(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getSessionCookieDomain()"], ["void", "org.apache.catalina.startup.FailedContext.setSessionCookieDomain(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getSessionCookiePath()"], ["void", "org.apache.catalina.startup.FailedContext.setSessionCookiePath(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getSessionCookiePathUsesTrailingSlash()"], ["void", "org.apache.catalina.startup.FailedContext.setSessionCookiePathUsesTrailingSlash(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getCrossContext()"], ["void", "org.apache.catalina.startup.FailedContext.setCrossContext(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getAltDDName()"], ["void", "org.apache.catalina.startup.FailedContext.setAltDDName(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getDenyUncoveredHttpMethods()"], ["void", "org.apache.catalina.startup.FailedContext.setDenyUncoveredHttpMethods(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getDisplayName()"], ["void", "org.apache.catalina.startup.FailedContext.setDisplayName(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getDistributable()"], ["void", "org.apache.catalina.startup.FailedContext.setDistributable(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getEncodedPath()"], ["boolean", "org.apache.catalina.startup.FailedContext.getIgnoreAnnotations()"], ["void", "org.apache.catalina.startup.FailedContext.setIgnoreAnnotations(boolean)"], ["org.apache.tomcat.util.descriptor.web.LoginConfig", "org.apache.catalina.startup.FailedContext.getLoginConfig()"], ["void", "org.apache.catalina.startup.FailedContext.setLoginConfig(org.apache.tomcat.util.descriptor.web.LoginConfig)"], ["org.apache.catalina.deploy.NamingResourcesImpl", "org.apache.catalina.startup.FailedContext.getNamingResources()"], ["void", "org.apache.catalina.startup.FailedContext.setNamingResources(org.apache.catalina.deploy.NamingResourcesImpl)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getPublicId()"], ["void", "org.apache.catalina.startup.FailedContext.setPublicId(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getReloadable()"], ["void", "org.apache.catalina.startup.FailedContext.setReloadable(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getOverride()"], ["void", "org.apache.catalina.startup.FailedContext.setOverride(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getPrivileged()"], ["void", "org.apache.catalina.startup.FailedContext.setPrivileged(boolean)"], ["javax.servlet.ServletContext", "org.apache.catalina.startup.FailedContext.getServletContext()"], ["int", "org.apache.catalina.startup.FailedContext.getSessionTimeout()"], ["void", "org.apache.catalina.startup.FailedContext.setSessionTimeout(int)"], ["boolean", "org.apache.catalina.startup.FailedContext.getSwallowAbortedUploads()"], ["void", "org.apache.catalina.startup.FailedContext.setSwallowAbortedUploads(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getSwallowOutput()"], ["void", "org.apache.catalina.startup.FailedContext.setSwallowOutput(boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getWrapperClass()"], ["void", "org.apache.catalina.startup.FailedContext.setWrapperClass(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.getXmlNamespaceAware()"], ["void", "org.apache.catalina.startup.FailedContext.setXmlNamespaceAware(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getXmlValidation()"], ["void", "org.apache.catalina.startup.FailedContext.setXmlValidation(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getXmlBlockExternal()"], ["void", "org.apache.catalina.startup.FailedContext.setXmlBlockExternal(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getTldValidation()"], ["void", "org.apache.catalina.startup.FailedContext.setTldValidation(boolean)"], ["org.apache.tomcat.JarScanner", "org.apache.catalina.startup.FailedContext.getJarScanner()"], ["void", "org.apache.catalina.startup.FailedContext.setJarScanner(org.apache.tomcat.JarScanner)"], ["org.apache.catalina.Authenticator", "org.apache.catalina.startup.FailedContext.getAuthenticator()"], ["void", "org.apache.catalina.startup.FailedContext.setLogEffectiveWebXml(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getLogEffectiveWebXml()"], ["void", "org.apache.catalina.startup.FailedContext.addApplicationListener(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findApplicationListeners()"], ["void", "org.apache.catalina.startup.FailedContext.removeApplicationListener(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addApplicationParameter(org.apache.tomcat.util.descriptor.web.ApplicationParameter)"], ["org.apache.tomcat.util.descriptor.web.ApplicationParameter[]", "org.apache.catalina.startup.FailedContext.findApplicationParameters()"], ["void", "org.apache.catalina.startup.FailedContext.removeApplicationParameter(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint)"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint[]", "org.apache.catalina.startup.FailedContext.findConstraints()"], ["void", "org.apache.catalina.startup.FailedContext.removeConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint)"], ["void", "org.apache.catalina.startup.FailedContext.addErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.startup.FailedContext.findErrorPage(int)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.startup.FailedContext.findErrorPage(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.startup.FailedContext.findErrorPage(java.lang.Throwable)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage[]", "org.apache.catalina.startup.FailedContext.findErrorPages()"], ["void", "org.apache.catalina.startup.FailedContext.removeErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["void", "org.apache.catalina.startup.FailedContext.addFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef)"], ["org.apache.tomcat.util.descriptor.web.FilterDef", "org.apache.catalina.startup.FailedContext.findFilterDef(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.FilterDef[]", "org.apache.catalina.startup.FailedContext.findFilterDefs()"], ["void", "org.apache.catalina.startup.FailedContext.removeFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef)"], ["void", "org.apache.catalina.startup.FailedContext.addFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.startup.FailedContext.addFilterMapBefore(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["org.apache.tomcat.util.descriptor.web.FilterMap[]", "org.apache.catalina.startup.FailedContext.findFilterMaps()"], ["void", "org.apache.catalina.startup.FailedContext.removeFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.catalina.startup.FailedContext.addLocaleEncodingMappingParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addMimeMapping(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findMimeMapping(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findMimeMappings()"], ["void", "org.apache.catalina.startup.FailedContext.removeMimeMapping(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addParameter(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findParameter(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findParameters()"], ["void", "org.apache.catalina.startup.FailedContext.removeParameter(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addRoleMapping(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findRoleMapping(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.removeRoleMapping(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addSecurityRole(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.findSecurityRole(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findSecurityRoles()"], ["void", "org.apache.catalina.startup.FailedContext.removeSecurityRole(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addServletMappingDecoded(java.lang.String, java.lang.String, boolean)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findServletMapping(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findServletMappings()"], ["void", "org.apache.catalina.startup.FailedContext.removeServletMapping(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addWelcomeFile(java.lang.String)"], ["boolean", "org.apache.catalina.startup.FailedContext.findWelcomeFile(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findWelcomeFiles()"], ["void", "org.apache.catalina.startup.FailedContext.removeWelcomeFile(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addWrapperLifecycle(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findWrapperLifecycles()"], ["void", "org.apache.catalina.startup.FailedContext.removeWrapperLifecycle(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addWrapperListener(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.startup.FailedContext.findWrapperListeners()"], ["void", "org.apache.catalina.startup.FailedContext.removeWrapperListener(java.lang.String)"], ["org.apache.tomcat.InstanceManager", "org.apache.catalina.startup.FailedContext.createInstanceManager()"], ["org.apache.catalina.Wrapper", "org.apache.catalina.startup.FailedContext.createWrapper()"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findStatusPage(int)"], ["int[]", "org.apache.catalina.startup.FailedContext.findStatusPages()"], ["boolean", "org.apache.catalina.startup.FailedContext.fireRequestInitEvent(javax.servlet.ServletRequest)"], ["boolean", "org.apache.catalina.startup.FailedContext.fireRequestDestroyEvent(javax.servlet.ServletRequest)"], ["void", "org.apache.catalina.startup.FailedContext.reload()"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getRealPath(java.lang.String)"], ["int", "org.apache.catalina.startup.FailedContext.getEffectiveMajorVersion()"], ["void", "org.apache.catalina.startup.FailedContext.setEffectiveMajorVersion(int)"], ["int", "org.apache.catalina.startup.FailedContext.getEffectiveMinorVersion()"], ["void", "org.apache.catalina.startup.FailedContext.setEffectiveMinorVersion(int)"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.catalina.startup.FailedContext.getJspConfigDescriptor()"], ["void", "org.apache.catalina.startup.FailedContext.setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)"], ["void", "org.apache.catalina.startup.FailedContext.addServletContainerInitializer(javax.servlet.ServletContainerInitializer, java.util.Set<java.lang.Class<?>>)"], ["boolean", "org.apache.catalina.startup.FailedContext.getPaused()"], ["boolean", "org.apache.catalina.startup.FailedContext.isServlet22()"], ["void", "org.apache.catalina.startup.FailedContext.setResourceOnlyServlets(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getResourceOnlyServlets()"], ["boolean", "org.apache.catalina.startup.FailedContext.isResourceOnlyServlet(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getBaseName()"], ["void", "org.apache.catalina.startup.FailedContext.setFireRequestListenersOnForwards(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getFireRequestListenersOnForwards()"], ["void", "org.apache.catalina.startup.FailedContext.setPreemptiveAuthentication(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getPreemptiveAuthentication()"], ["void", "org.apache.catalina.startup.FailedContext.setSendRedirectBody(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getSendRedirectBody()"], ["synchronized", "org.apache.catalina.startup.FailedContext.void addValve(org.apache.catalina.Valve)"], ["java.io.File", "org.apache.catalina.startup.FailedContext.getCatalinaBase()"], ["java.io.File", "org.apache.catalina.startup.FailedContext.getCatalinaHome()"], ["void", "org.apache.catalina.startup.FailedContext.setAddWebinfClassesResources(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getAddWebinfClassesResources()"], ["void", "org.apache.catalina.startup.FailedContext.addPostConstructMethod(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.addPreDestroyMethod(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.removePostConstructMethod(java.lang.String)"], ["void", "org.apache.catalina.startup.FailedContext.removePreDestroyMethod(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findPostConstructMethod(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.findPreDestroyMethod(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.startup.FailedContext.findPostConstructMethods()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.startup.FailedContext.findPreDestroyMethods()"], ["org.apache.tomcat.InstanceManager", "org.apache.catalina.startup.FailedContext.getInstanceManager()"], ["void", "org.apache.catalina.startup.FailedContext.setInstanceManager(org.apache.tomcat.InstanceManager)"], ["void", "org.apache.catalina.startup.FailedContext.setContainerSciFilter(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getContainerSciFilter()"], ["org.apache.catalina.ThreadBindingListener", "org.apache.catalina.startup.FailedContext.getThreadBindingListener()"], ["void", "org.apache.catalina.startup.FailedContext.setThreadBindingListener(org.apache.catalina.ThreadBindingListener)"], ["java.lang.ClassLoader", "org.apache.catalina.startup.FailedContext.bind(boolean, java.lang.ClassLoader)"], ["void", "org.apache.catalina.startup.FailedContext.unbind(boolean, java.lang.ClassLoader)"], ["java.lang.Object", "org.apache.catalina.startup.FailedContext.getNamingToken()"], ["void", "org.apache.catalina.startup.FailedContext.setCookieProcessor(org.apache.tomcat.util.http.CookieProcessor)"], ["org.apache.tomcat.util.http.CookieProcessor", "org.apache.catalina.startup.FailedContext.getCookieProcessor()"], ["void", "org.apache.catalina.startup.FailedContext.setValidateClientProvidedNewSessionId(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getValidateClientProvidedNewSessionId()"], ["void", "org.apache.catalina.startup.FailedContext.setMapperContextRootRedirectEnabled(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getMapperContextRootRedirectEnabled()"], ["void", "org.apache.catalina.startup.FailedContext.setMapperDirectoryRedirectEnabled(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getMapperDirectoryRedirectEnabled()"], ["void", "org.apache.catalina.startup.FailedContext.setUseRelativeRedirects(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getUseRelativeRedirects()"], ["void", "org.apache.catalina.startup.FailedContext.setDispatchersUseEncodedPaths(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getDispatchersUseEncodedPaths()"], ["void", "org.apache.catalina.startup.FailedContext.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getRequestCharacterEncoding()"], ["void", "org.apache.catalina.startup.FailedContext.setResponseCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.FailedContext.getResponseCharacterEncoding()"], ["void", "org.apache.catalina.startup.FailedContext.setAllowMultipleLeadingForwardSlashInPath(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getAllowMultipleLeadingForwardSlashInPath()"], ["void", "org.apache.catalina.startup.FailedContext.incrementInProgressAsyncCount()"], ["void", "org.apache.catalina.startup.FailedContext.decrementInProgressAsyncCount()"], ["void", "org.apache.catalina.startup.FailedContext.setCreateUploadTargets(boolean)"], ["boolean", "org.apache.catalina.startup.FailedContext.getCreateUploadTargets()"], ["org.apache.catalina.startup.HomesUserDatabase", "org.apache.catalina.startup.HomesUserDatabase()"], ["org.apache.catalina.startup.UserConfig", "org.apache.catalina.startup.HomesUserDatabase.getUserConfig()"], ["void", "org.apache.catalina.startup.HomesUserDatabase.setUserConfig(org.apache.catalina.startup.UserConfig)"], ["java.lang.String", "org.apache.catalina.startup.HomesUserDatabase.getHome(java.lang.String)"], ["org.apache.catalina.startup.HostConfig$DeployDescriptor", "org.apache.catalina.startup.HostConfig$DeployDescriptor(org.apache.catalina.startup.HostConfig, org.apache.catalina.util.ContextName, java.io.File)"], ["void", "org.apache.catalina.startup.HostConfig$DeployDescriptor.run()"], ["org.apache.catalina.startup.HostConfig$DeployDirectory", "org.apache.catalina.startup.HostConfig$DeployDirectory(org.apache.catalina.startup.HostConfig, org.apache.catalina.util.ContextName, java.io.File)"], ["void", "org.apache.catalina.startup.HostConfig$DeployDirectory.run()"], ["org.apache.catalina.startup.HostConfig$DeployWar", "org.apache.catalina.startup.HostConfig$DeployWar(org.apache.catalina.startup.HostConfig, org.apache.catalina.util.ContextName, java.io.File)"], ["void", "org.apache.catalina.startup.HostConfig$DeployWar.run()"], ["org.apache.catalina.startup.HostConfig$DeployedApplication", "org.apache.catalina.startup.HostConfig$DeployedApplication(java.lang.String, boolean)"], ["org.apache.catalina.startup.HostConfig$ExpandedDirectoryRemovalListener", "org.apache.catalina.startup.HostConfig$ExpandedDirectoryRemovalListener(java.io.File, java.lang.String)"], ["void", "org.apache.catalina.startup.HostConfig$ExpandedDirectoryRemovalListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.HostConfig", "org.apache.catalina.startup.HostConfig()"], ["java.lang.String", "org.apache.catalina.startup.HostConfig.getContextClass()"], ["void", "org.apache.catalina.startup.HostConfig.setContextClass(java.lang.String)"], ["boolean", "org.apache.catalina.startup.HostConfig.isDeployXML()"], ["void", "org.apache.catalina.startup.HostConfig.setDeployXML(boolean)"], ["boolean", "org.apache.catalina.startup.HostConfig.isCopyXML()"], ["void", "org.apache.catalina.startup.HostConfig.setCopyXML(boolean)"], ["boolean", "org.apache.catalina.startup.HostConfig.isUnpackWARs()"], ["void", "org.apache.catalina.startup.HostConfig.setUnpackWARs(boolean)"], ["void", "org.apache.catalina.startup.HostConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["synchronized", "org.apache.catalina.startup.HostConfig.void addServiced(java.lang.String)"], ["synchronized", "org.apache.catalina.startup.HostConfig.boolean isServiced(java.lang.String)"], ["synchronized", "org.apache.catalina.startup.HostConfig.void removeServiced(java.lang.String)"], ["long", "org.apache.catalina.startup.HostConfig.getDeploymentTime(java.lang.String)"], ["boolean", "org.apache.catalina.startup.HostConfig.isDeployed(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.HostConfig.getConfigBaseName()"], ["void", "org.apache.catalina.startup.HostConfig.beforeStart()"], ["void", "org.apache.catalina.startup.HostConfig.start()"], ["void", "org.apache.catalina.startup.HostConfig.stop()"], ["void", "org.apache.catalina.startup.HostConfig.check(java.lang.String)"], ["synchronized", "org.apache.catalina.startup.HostConfig.void checkUndeploy()"], ["void", "org.apache.catalina.startup.HostConfig.manageApp(org.apache.catalina.Context)"], ["void", "org.apache.catalina.startup.HostConfig.unmanageApp(java.lang.String)"], ["org.apache.catalina.startup.HostRuleSet", "org.apache.catalina.startup.HostRuleSet()"], ["org.apache.catalina.startup.HostRuleSet", "org.apache.catalina.startup.HostRuleSet(java.lang.String)"], ["void", "org.apache.catalina.startup.HostRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.LifecycleListenerRule", "org.apache.catalina.startup.LifecycleListenerRule(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.LifecycleListenerRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.startup.ListenerCreateRule$OptionalListener", "org.apache.catalina.startup.ListenerCreateRule$OptionalListener(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.ListenerCreateRule$OptionalListener.getClassName()"], ["void", "org.apache.catalina.startup.ListenerCreateRule$OptionalListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["java.lang.Object", "org.apache.catalina.startup.ListenerCreateRule$OptionalListener.getProperty(java.lang.String)"], ["boolean", "org.apache.catalina.startup.ListenerCreateRule$OptionalListener.setProperty(java.lang.String, java.lang.String)"], ["org.apache.catalina.startup.ListenerCreateRule", "org.apache.catalina.startup.ListenerCreateRule(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.ListenerCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.catalina.startup.NamingRuleSet", "org.apache.catalina.startup.NamingRuleSet()"], ["org.apache.catalina.startup.NamingRuleSet", "org.apache.catalina.startup.NamingRuleSet(java.lang.String)"], ["void", "org.apache.catalina.startup.NamingRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.PasswdUserDatabase", "org.apache.catalina.startup.PasswdUserDatabase()"], ["org.apache.catalina.startup.UserConfig", "org.apache.catalina.startup.PasswdUserDatabase.getUserConfig()"], ["void", "org.apache.catalina.startup.PasswdUserDatabase.setUserConfig(org.apache.catalina.startup.UserConfig)"], ["java.lang.String", "org.apache.catalina.startup.PasswdUserDatabase.getHome(java.lang.String)"], ["org.apache.catalina.startup.RealmRuleSet", "org.apache.catalina.startup.RealmRuleSet()"], ["org.apache.catalina.startup.RealmRuleSet", "org.apache.catalina.startup.RealmRuleSet(java.lang.String)"], ["void", "org.apache.catalina.startup.RealmRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory", "org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory()"], ["java.util.concurrent.ForkJoinWorkerThread", "org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory.newThread(java.util.concurrent.ForkJoinPool)"], ["org.apache.catalina.startup.SetAllPropertiesRule", "org.apache.catalina.startup.SetAllPropertiesRule()"], ["org.apache.catalina.startup.SetAllPropertiesRule", "org.apache.catalina.startup.SetAllPropertiesRule(java.lang.String[])"], ["org.apache.catalina.startup.SetContextPropertiesRule", "org.apache.catalina.startup.SetContextPropertiesRule()"], ["org.apache.catalina.startup.SetNextNamingRule", "org.apache.catalina.startup.SetNextNamingRule(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.SetNextNamingRule.end(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.SetNextNamingRule.toString()"], ["org.apache.catalina.startup.Tomcat$DefaultWebXmlListener", "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener()"], ["void", "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.Tomcat$ExistingStandardWrapper", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper(javax.servlet.Servlet)"], ["synchronized", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper.javax.servlet.Servlet loadServlet()"], ["long", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper.getAvailable()"], ["boolean", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper.isUnavailable()"], ["javax.servlet.Servlet", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper.getServlet()"], ["java.lang.String", "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper.getServletClass()"], ["org.apache.catalina.startup.Tomcat$FixContextListener", "org.apache.catalina.startup.Tomcat$FixContextListener()"], ["void", "org.apache.catalina.startup.Tomcat$FixContextListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.Tomcat", "org.apache.catalina.startup.Tomcat()"], ["void", "org.apache.catalina.startup.Tomcat.setBaseDir(java.lang.String)"], ["void", "org.apache.catalina.startup.Tomcat.setPort(int)"], ["void", "org.apache.catalina.startup.Tomcat.setHostname(java.lang.String)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addWebapp(java.lang.String, java.lang.String)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addWebapp(java.lang.String, java.net.URL)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addContext(java.lang.String, java.lang.String)"], ["org.apache.catalina.Wrapper", "org.apache.catalina.startup.Tomcat.addServlet(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.Wrapper", "org.apache.catalina.startup.Tomcat.addServlet(org.apache.catalina.Context, java.lang.String, java.lang.String)"], ["org.apache.catalina.Wrapper", "org.apache.catalina.startup.Tomcat.addServlet(java.lang.String, java.lang.String, javax.servlet.Servlet)"], ["org.apache.catalina.Wrapper", "org.apache.catalina.startup.Tomcat.addServlet(org.apache.catalina.Context, java.lang.String, javax.servlet.Servlet)"], ["void", "org.apache.catalina.startup.Tomcat.init(org.apache.tomcat.util.file.ConfigurationSource)"], ["void", "org.apache.catalina.startup.Tomcat.init(org.apache.tomcat.util.file.ConfigurationSource, java.lang.String[])"], ["void", "org.apache.catalina.startup.Tomcat.init()"], ["void", "org.apache.catalina.startup.Tomcat.start()"], ["void", "org.apache.catalina.startup.Tomcat.stop()"], ["void", "org.apache.catalina.startup.Tomcat.destroy()"], ["void", "org.apache.catalina.startup.Tomcat.addUser(java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.Tomcat.addRole(java.lang.String, java.lang.String)"], ["org.apache.catalina.connector.Connector", "org.apache.catalina.startup.Tomcat.getConnector()"], ["void", "org.apache.catalina.startup.Tomcat.setConnector(org.apache.catalina.connector.Connector)"], ["org.apache.catalina.Service", "org.apache.catalina.startup.Tomcat.getService()"], ["void", "org.apache.catalina.startup.Tomcat.setHost(org.apache.catalina.Host)"], ["org.apache.catalina.Host", "org.apache.catalina.startup.Tomcat.getHost()"], ["org.apache.catalina.Engine", "org.apache.catalina.startup.Tomcat.getEngine()"], ["org.apache.catalina.Server", "org.apache.catalina.startup.Tomcat.getServer()"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addContext(org.apache.catalina.Host, java.lang.String, java.lang.String)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addContext(org.apache.catalina.Host, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addWebapp(org.apache.catalina.Host, java.lang.String, java.lang.String)"], ["org.apache.catalina.Context", "org.apache.catalina.startup.Tomcat.addWebapp(org.apache.catalina.Host, java.lang.String, java.lang.String, org.apache.catalina.LifecycleListener)"], ["org.apache.catalina.LifecycleListener", "org.apache.catalina.startup.Tomcat.getDefaultWebXmlListener()"], ["java.lang.String", "org.apache.catalina.startup.Tomcat.noDefaultWebXmlPath()"], ["void", "org.apache.catalina.startup.Tomcat.setSilent(boolean)"], ["void", "org.apache.catalina.startup.Tomcat.setAddDefaultWebXmlToWebapp(boolean)"], ["void", "org.apache.catalina.startup.Tomcat.enableNaming()"], ["void", "org.apache.catalina.startup.Tomcat.initWebappDefaults(java.lang.String)"], ["void", "org.apache.catalina.startup.Tomcat.initWebappDefaults(org.apache.catalina.Context)"], ["void", "org.apache.catalina.startup.Tomcat.addDefaultMimeTypeMappings(org.apache.catalina.Context)"], ["void", "org.apache.catalina.startup.Tomcat.main(java.lang.String[])"], ["org.apache.catalina.startup.Tool", "org.apache.catalina.startup.Tool()"], ["void", "org.apache.catalina.startup.Tool.main(java.lang.String[])"], ["org.apache.catalina.startup.UserConfig$DeployUserDirectory", "org.apache.catalina.startup.UserConfig$DeployUserDirectory(org.apache.catalina.startup.UserConfig, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.startup.UserConfig$DeployUserDirectory.run()"], ["org.apache.catalina.startup.UserConfig", "org.apache.catalina.startup.UserConfig()"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getConfigClass()"], ["void", "org.apache.catalina.startup.UserConfig.setConfigClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getContextClass()"], ["void", "org.apache.catalina.startup.UserConfig.setContextClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getDirectoryName()"], ["void", "org.apache.catalina.startup.UserConfig.setDirectoryName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getHomeBase()"], ["void", "org.apache.catalina.startup.UserConfig.setHomeBase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getUserClass()"], ["void", "org.apache.catalina.startup.UserConfig.setUserClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getAllow()"], ["void", "org.apache.catalina.startup.UserConfig.setAllow(java.lang.String)"], ["java.lang.String", "org.apache.catalina.startup.UserConfig.getDeny()"], ["void", "org.apache.catalina.startup.UserConfig.setDeny(java.lang.String)"], ["void", "org.apache.catalina.startup.UserConfig.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.VersionLoggerListener", "org.apache.catalina.startup.VersionLoggerListener()"], ["boolean", "org.apache.catalina.startup.VersionLoggerListener.getLogArgs()"], ["void", "org.apache.catalina.startup.VersionLoggerListener.setLogArgs(boolean)"], ["boolean", "org.apache.catalina.startup.VersionLoggerListener.getLogEnv()"], ["void", "org.apache.catalina.startup.VersionLoggerListener.setLogEnv(boolean)"], ["boolean", "org.apache.catalina.startup.VersionLoggerListener.getLogProps()"], ["void", "org.apache.catalina.startup.VersionLoggerListener.setLogProps(boolean)"], ["void", "org.apache.catalina.startup.VersionLoggerListener.lifecycleEvent(org.apache.catalina.LifecycleEvent)"], ["org.apache.catalina.startup.WebAnnotationSet", "org.apache.catalina.startup.WebAnnotationSet()"], ["void", "org.apache.catalina.startup.WebAnnotationSet.loadApplicationAnnotations(org.apache.catalina.Context)"], ["org.apache.catalina.startup.WebappServiceLoader", "org.apache.catalina.startup.WebappServiceLoader(org.apache.catalina.Context)"], ["org.apache.catalina.users.AbstractGroup", "org.apache.catalina.users.AbstractGroup()"], ["java.lang.String", "org.apache.catalina.users.AbstractGroup.getDescription()"], ["void", "org.apache.catalina.users.AbstractGroup.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractGroup.getGroupname()"], ["void", "org.apache.catalina.users.AbstractGroup.setGroupname(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractGroup.getName()"], ["org.apache.catalina.users.AbstractRole", "org.apache.catalina.users.AbstractRole()"], ["java.lang.String", "org.apache.catalina.users.AbstractRole.getDescription()"], ["void", "org.apache.catalina.users.AbstractRole.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractRole.getRolename()"], ["void", "org.apache.catalina.users.AbstractRole.setRolename(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractRole.getName()"], ["org.apache.catalina.users.AbstractUser", "org.apache.catalina.users.AbstractUser()"], ["java.lang.String", "org.apache.catalina.users.AbstractUser.getFullName()"], ["void", "org.apache.catalina.users.AbstractUser.setFullName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractUser.getPassword()"], ["void", "org.apache.catalina.users.AbstractUser.setPassword(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractUser.getUsername()"], ["void", "org.apache.catalina.users.AbstractUser.setUsername(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.AbstractUser.getName()"], ["org.apache.catalina.users.Constants", "org.apache.catalina.users.Constants()"], ["org.apache.catalina.UserDatabase", "org.apache.catalina.users.MemoryGroup.getUserDatabase()"], ["void", "org.apache.catalina.users.MemoryGroup.addRole(org.apache.catalina.Role)"], ["boolean", "org.apache.catalina.users.MemoryGroup.isInRole(org.apache.catalina.Role)"], ["void", "org.apache.catalina.users.MemoryGroup.removeRole(org.apache.catalina.Role)"], ["void", "org.apache.catalina.users.MemoryGroup.removeRoles()"], ["java.lang.String", "org.apache.catalina.users.MemoryGroup.toString()"], ["org.apache.catalina.users.MemoryGroupCreationFactory", "org.apache.catalina.users.MemoryGroupCreationFactory(org.apache.catalina.users.MemoryUserDatabase)"], ["java.lang.Object", "org.apache.catalina.users.MemoryGroupCreationFactory.createObject(org.xml.sax.Attributes)"], ["org.apache.catalina.UserDatabase", "org.apache.catalina.users.MemoryRole.getUserDatabase()"], ["java.lang.String", "org.apache.catalina.users.MemoryRole.toString()"], ["org.apache.catalina.users.MemoryRoleCreationFactory", "org.apache.catalina.users.MemoryRoleCreationFactory(org.apache.catalina.users.MemoryUserDatabase)"], ["java.lang.Object", "org.apache.catalina.users.MemoryRoleCreationFactory.createObject(org.xml.sax.Attributes)"], ["org.apache.catalina.UserDatabase", "org.apache.catalina.users.MemoryUser.getUserDatabase()"], ["void", "org.apache.catalina.users.MemoryUser.addGroup(org.apache.catalina.Group)"], ["void", "org.apache.catalina.users.MemoryUser.addRole(org.apache.catalina.Role)"], ["boolean", "org.apache.catalina.users.MemoryUser.isInGroup(org.apache.catalina.Group)"], ["boolean", "org.apache.catalina.users.MemoryUser.isInRole(org.apache.catalina.Role)"], ["void", "org.apache.catalina.users.MemoryUser.removeGroup(org.apache.catalina.Group)"], ["void", "org.apache.catalina.users.MemoryUser.removeGroups()"], ["void", "org.apache.catalina.users.MemoryUser.removeRole(org.apache.catalina.Role)"], ["void", "org.apache.catalina.users.MemoryUser.removeRoles()"], ["java.lang.String", "org.apache.catalina.users.MemoryUser.toXml()"], ["java.lang.String", "org.apache.catalina.users.MemoryUser.toString()"], ["org.apache.catalina.users.MemoryUserCreationFactory", "org.apache.catalina.users.MemoryUserCreationFactory(org.apache.catalina.users.MemoryUserDatabase)"], ["java.lang.Object", "org.apache.catalina.users.MemoryUserCreationFactory.createObject(org.xml.sax.Attributes)"], ["org.apache.catalina.users.MemoryUserDatabase", "org.apache.catalina.users.MemoryUserDatabase()"], ["org.apache.catalina.users.MemoryUserDatabase", "org.apache.catalina.users.MemoryUserDatabase(java.lang.String)"], ["java.lang.String", "org.apache.catalina.users.MemoryUserDatabase.getId()"], ["java.lang.String", "org.apache.catalina.users.MemoryUserDatabase.getPathname()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.setPathname(java.lang.String)"], ["boolean", "org.apache.catalina.users.MemoryUserDatabase.getReadonly()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.setReadonly(boolean)"], ["boolean", "org.apache.catalina.users.MemoryUserDatabase.getWatchSource()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.setWatchSource(boolean)"], ["void", "org.apache.catalina.users.MemoryUserDatabase.close()"], ["org.apache.catalina.Group", "org.apache.catalina.users.MemoryUserDatabase.createGroup(java.lang.String, java.lang.String)"], ["org.apache.catalina.Role", "org.apache.catalina.users.MemoryUserDatabase.createRole(java.lang.String, java.lang.String)"], ["org.apache.catalina.User", "org.apache.catalina.users.MemoryUserDatabase.createUser(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.Group", "org.apache.catalina.users.MemoryUserDatabase.findGroup(java.lang.String)"], ["org.apache.catalina.Role", "org.apache.catalina.users.MemoryUserDatabase.findRole(java.lang.String)"], ["org.apache.catalina.User", "org.apache.catalina.users.MemoryUserDatabase.findUser(java.lang.String)"], ["void", "org.apache.catalina.users.MemoryUserDatabase.open()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.removeGroup(org.apache.catalina.Group)"], ["void", "org.apache.catalina.users.MemoryUserDatabase.removeRole(org.apache.catalina.Role)"], ["void", "org.apache.catalina.users.MemoryUserDatabase.removeUser(org.apache.catalina.User)"], ["boolean", "org.apache.catalina.users.MemoryUserDatabase.isWriteable()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.save()"], ["void", "org.apache.catalina.users.MemoryUserDatabase.backgroundProcess()"], ["java.lang.String", "org.apache.catalina.users.MemoryUserDatabase.toString()"], ["org.apache.catalina.users.MemoryUserDatabaseFactory", "org.apache.catalina.users.MemoryUserDatabaseFactory()"], ["java.lang.Object", "org.apache.catalina.users.MemoryUserDatabaseFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.catalina.util.CharsetMapper", "org.apache.catalina.util.CharsetMapper()"], ["org.apache.catalina.util.CharsetMapper", "org.apache.catalina.util.CharsetMapper(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.CharsetMapper.getCharset(java.util.Locale)"], ["void", "org.apache.catalina.util.CharsetMapper.addCharsetMappingFromDeploymentDescriptor(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.ConcurrentDateFormat.formatRfc1123(java.util.Date)"], ["org.apache.catalina.util.ConcurrentDateFormat", "org.apache.catalina.util.ConcurrentDateFormat(java.lang.String, java.util.Locale, java.util.TimeZone)"], ["java.lang.String", "org.apache.catalina.util.ConcurrentDateFormat.format(java.util.Date)"], ["org.apache.catalina.util.ContextName", "org.apache.catalina.util.ContextName(java.lang.String, boolean)"], ["org.apache.catalina.util.ContextName", "org.apache.catalina.util.ContextName(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.ContextName.getBaseName()"], ["java.lang.String", "org.apache.catalina.util.ContextName.getPath()"], ["java.lang.String", "org.apache.catalina.util.ContextName.getVersion()"], ["java.lang.String", "org.apache.catalina.util.ContextName.getName()"], ["java.lang.String", "org.apache.catalina.util.ContextName.getDisplayName()"], ["java.lang.String", "org.apache.catalina.util.ContextName.toString()"], ["org.apache.catalina.util.ContextName", "org.apache.catalina.util.ContextName.extractFromPath(java.lang.String)"], ["org.apache.catalina.util.CustomObjectInputStream", "org.apache.catalina.util.CustomObjectInputStream(java.io.InputStream, java.lang.ClassLoader)"], ["org.apache.catalina.util.CustomObjectInputStream", "org.apache.catalina.util.CustomObjectInputStream(java.io.InputStream, java.lang.ClassLoader, org.apache.juli.logging.Log, java.util.regex.Pattern, boolean)"], ["org.apache.catalina.util.DOMWriter", "org.apache.catalina.util.DOMWriter(java.io.Writer)"], ["void", "org.apache.catalina.util.DOMWriter.print(org.w3c.dom.Node)"], ["org.apache.catalina.util.ErrorPageSupport", "org.apache.catalina.util.ErrorPageSupport()"], ["void", "org.apache.catalina.util.ErrorPageSupport.add(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["void", "org.apache.catalina.util.ErrorPageSupport.remove(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.util.ErrorPageSupport.find(int)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.util.ErrorPageSupport.find(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.catalina.util.ErrorPageSupport.find(java.lang.Throwable)"], ["org.apache.tomcat.util.descriptor.web.ErrorPage[]", "org.apache.catalina.util.ErrorPageSupport.findAll()"], ["org.apache.catalina.util.Extension", "org.apache.catalina.util.Extension()"], ["java.lang.String", "org.apache.catalina.util.Extension.getExtensionName()"], ["void", "org.apache.catalina.util.Extension.setExtensionName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getImplementationURL()"], ["void", "org.apache.catalina.util.Extension.setImplementationURL(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getImplementationVendor()"], ["void", "org.apache.catalina.util.Extension.setImplementationVendor(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getImplementationVendorId()"], ["void", "org.apache.catalina.util.Extension.setImplementationVendorId(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getImplementationVersion()"], ["void", "org.apache.catalina.util.Extension.setImplementationVersion(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getSpecificationVendor()"], ["void", "org.apache.catalina.util.Extension.setSpecificationVendor(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.Extension.getSpecificationVersion()"], ["void", "org.apache.catalina.util.Extension.setSpecificationVersion(java.lang.String)"], ["void", "org.apache.catalina.util.Extension.setFulfilled(boolean)"], ["boolean", "org.apache.catalina.util.Extension.isFulfilled()"], ["boolean", "org.apache.catalina.util.Extension.isCompatibleWith(org.apache.catalina.util.Extension)"], ["java.lang.String", "org.apache.catalina.util.Extension.toString()"], ["org.apache.catalina.util.ExtensionValidator", "org.apache.catalina.util.ExtensionValidator()"], ["synchronized", "org.apache.catalina.util.ExtensionValidator.boolean validateApplication(org.apache.catalina.WebResourceRoot, org.apache.catalina.Context)"], ["void", "org.apache.catalina.util.ExtensionValidator.addSystemResource(java.io.File)"], ["void", "org.apache.catalina.util.IOTools.flow(java.io.Reader, java.io.Writer, char[])"], ["void", "org.apache.catalina.util.IOTools.flow(java.io.Reader, java.io.Writer)"], ["void", "org.apache.catalina.util.IOTools.flow(java.io.InputStream, java.io.OutputStream)"], ["int", "org.apache.catalina.util.IOTools.readFully(java.io.InputStream, byte[])"], ["java.lang.reflect.Field[]", "org.apache.catalina.util.Introspection$1.run()"], ["java.lang.Object", "org.apache.catalina.util.Introspection$1.run()"], ["java.lang.reflect.Method[]", "org.apache.catalina.util.Introspection$2.run()"], ["java.lang.Object", "org.apache.catalina.util.Introspection$2.run()"], ["org.apache.catalina.util.Introspection", "org.apache.catalina.util.Introspection()"], ["java.lang.String", "org.apache.catalina.util.Introspection.getPropertyName(java.lang.reflect.Method)"], ["boolean", "org.apache.catalina.util.Introspection.isValidSetter(java.lang.reflect.Method)"], ["boolean", "org.apache.catalina.util.Introspection.isValidLifecycleCallback(java.lang.reflect.Method)"], ["java.lang.reflect.Field[]", "org.apache.catalina.util.Introspection.getDeclaredFields(java.lang.Class<?>)"], ["java.lang.reflect.Method[]", "org.apache.catalina.util.Introspection.getDeclaredMethods(java.lang.Class<?>)"], ["org.apache.catalina.util.LifecycleBase", "org.apache.catalina.util.LifecycleBase()"], ["boolean", "org.apache.catalina.util.LifecycleBase.getThrowOnFailure()"], ["void", "org.apache.catalina.util.LifecycleBase.setThrowOnFailure(boolean)"], ["void", "org.apache.catalina.util.LifecycleBase.addLifecycleListener(org.apache.catalina.LifecycleListener)"], ["org.apache.catalina.LifecycleListener[]", "org.apache.catalina.util.LifecycleBase.findLifecycleListeners()"], ["void", "org.apache.catalina.util.LifecycleBase.removeLifecycleListener(org.apache.catalina.LifecycleListener)"], ["synchronized", "org.apache.catalina.util.LifecycleBase.void init()"], ["synchronized", "org.apache.catalina.util.LifecycleBase.void start()"], ["synchronized", "org.apache.catalina.util.LifecycleBase.void stop()"], ["synchronized", "org.apache.catalina.util.LifecycleBase.void destroy()"], ["org.apache.catalina.LifecycleState", "org.apache.catalina.util.LifecycleBase.getState()"], ["java.lang.String", "org.apache.catalina.util.LifecycleBase.getStateName()"], ["org.apache.catalina.util.LifecycleMBeanBase", "org.apache.catalina.util.LifecycleMBeanBase()"], ["void", "org.apache.catalina.util.LifecycleMBeanBase.setDomain(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.LifecycleMBeanBase.getDomain()"], ["javax.management.ObjectName", "org.apache.catalina.util.LifecycleMBeanBase.getObjectName()"], ["void", "org.apache.catalina.util.LifecycleMBeanBase.postDeregister()"], ["void", "org.apache.catalina.util.LifecycleMBeanBase.postRegister(java.lang.Boolean)"], ["void", "org.apache.catalina.util.LifecycleMBeanBase.preDeregister()"], ["javax.management.ObjectName", "org.apache.catalina.util.LifecycleMBeanBase.preRegister(javax.management.MBeanServer, javax.management.ObjectName)"], ["org.apache.catalina.util.ManifestResource", "org.apache.catalina.util.ManifestResource(java.lang.String, java.util.jar.Manifest, int)"], ["java.lang.String", "org.apache.catalina.util.ManifestResource.getResourceName()"], ["int", "org.apache.catalina.util.ManifestResource.getAvailableExtensionCount()"], ["int", "org.apache.catalina.util.ManifestResource.getRequiredExtensionCount()"], ["boolean", "org.apache.catalina.util.ManifestResource.isFulfilled()"], ["java.lang.String", "org.apache.catalina.util.ManifestResource.toString()"], ["org.apache.catalina.util.NetMask", "org.apache.catalina.util.NetMask(java.lang.String)"], ["boolean", "org.apache.catalina.util.NetMask.matches(java.net.InetAddress)"], ["java.lang.String", "org.apache.catalina.util.NetMask.toString()"], ["org.apache.catalina.util.ParameterMap", "org.apache.catalina.util.ParameterMap()"], ["org.apache.catalina.util.ParameterMap", "org.apache.catalina.util.ParameterMap(int)"], ["org.apache.catalina.util.ParameterMap", "org.apache.catalina.util.ParameterMap(int, float)"], ["org.apache.catalina.util.ParameterMap", "org.apache.catalina.util.ParameterMap(java.util.Map<K, V>)"], ["boolean", "org.apache.catalina.util.ParameterMap.isLocked()"], ["void", "org.apache.catalina.util.ParameterMap.setLocked(boolean)"], ["void", "org.apache.catalina.util.ParameterMap.clear()"], ["V", "org.apache.catalina.util.ParameterMap.put(K, V)"], ["void", "org.apache.catalina.util.ParameterMap.putAll(java.util.Map<? extends K, ? extends V>)"], ["V", "org.apache.catalina.util.ParameterMap.remove(java.lang.Object)"], ["int", "org.apache.catalina.util.ParameterMap.size()"], ["boolean", "org.apache.catalina.util.ParameterMap.isEmpty()"], ["boolean", "org.apache.catalina.util.ParameterMap.containsKey(java.lang.Object)"], ["boolean", "org.apache.catalina.util.ParameterMap.containsValue(java.lang.Object)"], ["V", "org.apache.catalina.util.ParameterMap.get(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<K, V>>", "org.apache.catalina.util.ParameterMap.entrySet()"], ["org.apache.catalina.util.RequestUtil", "org.apache.catalina.util.RequestUtil()"], ["java.lang.StringBuffer", "org.apache.catalina.util.RequestUtil.getRequestURL(javax.servlet.http.HttpServletRequest)"], ["org.apache.catalina.util.ResourceSet", "org.apache.catalina.util.ResourceSet()"], ["org.apache.catalina.util.ResourceSet", "org.apache.catalina.util.ResourceSet(int)"], ["org.apache.catalina.util.ResourceSet", "org.apache.catalina.util.ResourceSet(int, float)"], ["org.apache.catalina.util.ResourceSet", "org.apache.catalina.util.ResourceSet(java.util.Collection<T>)"], ["boolean", "org.apache.catalina.util.ResourceSet.isLocked()"], ["void", "org.apache.catalina.util.ResourceSet.setLocked(boolean)"], ["boolean", "org.apache.catalina.util.ResourceSet.add(T)"], ["void", "org.apache.catalina.util.ResourceSet.clear()"], ["boolean", "org.apache.catalina.util.ResourceSet.remove(java.lang.Object)"], ["org.apache.catalina.util.ServerInfo", "org.apache.catalina.util.ServerInfo()"], ["java.lang.String", "org.apache.catalina.util.ServerInfo.getServerInfo()"], ["java.lang.String", "org.apache.catalina.util.ServerInfo.getServerBuilt()"], ["java.lang.String", "org.apache.catalina.util.ServerInfo.getServerNumber()"], ["void", "org.apache.catalina.util.ServerInfo.main(java.lang.String[])"], ["java.lang.String", "org.apache.catalina.util.SessionConfig.getSessionCookieName(org.apache.catalina.Context)"], ["java.lang.String", "org.apache.catalina.util.SessionConfig.getSessionUriParamName(org.apache.catalina.Context)"], ["java.lang.String", "org.apache.catalina.util.SessionConfig.getSessionCookiePath(org.apache.catalina.Context)"], ["org.apache.catalina.util.SessionIdGeneratorBase", "org.apache.catalina.util.SessionIdGeneratorBase()"], ["java.lang.String", "org.apache.catalina.util.SessionIdGeneratorBase.getSecureRandomClass()"], ["void", "org.apache.catalina.util.SessionIdGeneratorBase.setSecureRandomClass(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.SessionIdGeneratorBase.getSecureRandomAlgorithm()"], ["void", "org.apache.catalina.util.SessionIdGeneratorBase.setSecureRandomAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.SessionIdGeneratorBase.getSecureRandomProvider()"], ["void", "org.apache.catalina.util.SessionIdGeneratorBase.setSecureRandomProvider(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.SessionIdGeneratorBase.getJvmRoute()"], ["void", "org.apache.catalina.util.SessionIdGeneratorBase.setJvmRoute(java.lang.String)"], ["int", "org.apache.catalina.util.SessionIdGeneratorBase.getSessionIdLength()"], ["void", "org.apache.catalina.util.SessionIdGeneratorBase.setSessionIdLength(int)"], ["java.lang.String", "org.apache.catalina.util.SessionIdGeneratorBase.generateSessionId()"], ["org.apache.catalina.util.StandardSessionIdGenerator", "org.apache.catalina.util.StandardSessionIdGenerator()"], ["java.lang.String", "org.apache.catalina.util.StandardSessionIdGenerator.generateSessionId(java.lang.String)"], ["org.apache.catalina.util.Strftime", "org.apache.catalina.util.Strftime(java.lang.String, java.util.Locale)"], ["java.lang.String", "org.apache.catalina.util.Strftime.format(java.util.Date)"], ["java.util.TimeZone", "org.apache.catalina.util.Strftime.getTimeZone()"], ["void", "org.apache.catalina.util.Strftime.setTimeZone(java.util.TimeZone)"], ["org.apache.catalina.util.TLSUtil", "org.apache.catalina.util.TLSUtil()"], ["boolean", "org.apache.catalina.util.TLSUtil.isTLSRequestAttribute(java.lang.String)"], ["java.lang.String", "org.apache.catalina.util.ToStringUtil.toString(org.apache.catalina.Contained)"], ["java.lang.String", "org.apache.catalina.util.ToStringUtil.toString(java.lang.Object, org.apache.catalina.Container)"], ["java.lang.String", "org.apache.catalina.util.ToStringUtil.toString(java.lang.Object, org.apache.catalina.Manager)"], ["org.apache.catalina.util.TomcatCSS", "org.apache.catalina.util.TomcatCSS()"], ["org.apache.catalina.util.URLEncoder", "org.apache.catalina.util.URLEncoder()"], ["void", "org.apache.catalina.util.URLEncoder.addSafeCharacter(char)"], ["void", "org.apache.catalina.util.URLEncoder.removeSafeCharacter(char)"], ["void", "org.apache.catalina.util.URLEncoder.setEncodeSpaceAsPlus(boolean)"], ["java.lang.String", "org.apache.catalina.util.URLEncoder.encode(java.lang.String, java.nio.charset.Charset)"], ["java.lang.Object", "org.apache.catalina.util.URLEncoder.clone()"], ["org.apache.catalina.util.XMLWriter", "org.apache.catalina.util.XMLWriter()"], ["org.apache.catalina.util.XMLWriter", "org.apache.catalina.util.XMLWriter(java.io.Writer)"], ["java.lang.String", "org.apache.catalina.util.XMLWriter.toString()"], ["void", "org.apache.catalina.util.XMLWriter.writeProperty(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.util.XMLWriter.writeElement(java.lang.String, java.lang.String, int)"], ["void", "org.apache.catalina.util.XMLWriter.writeElement(java.lang.String, java.lang.String, java.lang.String, int)"], ["void", "org.apache.catalina.util.XMLWriter.writeText(java.lang.String)"], ["void", "org.apache.catalina.util.XMLWriter.writeData(java.lang.String)"], ["void", "org.apache.catalina.util.XMLWriter.writeXMLHeader()"], ["void", "org.apache.catalina.util.XMLWriter.sendData()"], ["org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement", "org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement(boolean)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ByteSentElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ConnectionStatusElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$CookieElement", "org.apache.catalina.valves.AbstractAccessLogValve$CookieElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$CookieElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$DateAndTimeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve$DateFormatCache.getFormat(long)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve$DateFormatCache.getFormat(java.lang.String, java.util.Locale, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$ElapsedTimeElement", "org.apache.catalina.valves.AbstractAccessLogValve$ElapsedTimeElement(boolean)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ElapsedTimeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$FirstByteTimeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$FormatType[]", "org.apache.catalina.valves.AbstractAccessLogValve$FormatType.values()"], ["org.apache.catalina.valves.AbstractAccessLogValve$FormatType", "org.apache.catalina.valves.AbstractAccessLogValve$FormatType.valueOf(java.lang.String)"], ["org.apache.catalina.valves.AbstractAccessLogValve$HeaderElement", "org.apache.catalina.valves.AbstractAccessLogValve$HeaderElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$HeaderElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$HostElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$HostElement.cache(org.apache.catalina.connector.Request)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$HttpStatusCodeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$LocalAddrElement", "org.apache.catalina.valves.AbstractAccessLogValve$LocalAddrElement(boolean)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$LocalAddrElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$LocalServerNameElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$LogicalUserNameElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$MethodElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$PortElement", "org.apache.catalina.valves.AbstractAccessLogValve$PortElement(org.apache.catalina.valves.AbstractAccessLogValve)"], ["org.apache.catalina.valves.AbstractAccessLogValve$PortElement", "org.apache.catalina.valves.AbstractAccessLogValve$PortElement(org.apache.catalina.valves.AbstractAccessLogValve, java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$PortElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$PortElement.cache(org.apache.catalina.connector.Request)"], ["org.apache.catalina.valves.AbstractAccessLogValve$PortType[]", "org.apache.catalina.valves.AbstractAccessLogValve$PortType.values()"], ["org.apache.catalina.valves.AbstractAccessLogValve$PortType", "org.apache.catalina.valves.AbstractAccessLogValve$PortType.valueOf(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ProtocolElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$QueryElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement.cache(org.apache.catalina.connector.Request)"], ["org.apache.catalina.valves.AbstractAccessLogValve$RequestAttributeElement", "org.apache.catalina.valves.AbstractAccessLogValve$RequestAttributeElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$RequestAttributeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$RequestElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$RequestURIElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$ResponseHeaderElement", "org.apache.catalina.valves.AbstractAccessLogValve$ResponseHeaderElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ResponseHeaderElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$SessionAttributeElement", "org.apache.catalina.valves.AbstractAccessLogValve$SessionAttributeElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$SessionAttributeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$SessionIdElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve$StringElement", "org.apache.catalina.valves.AbstractAccessLogValve$StringElement(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$StringElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$ThreadNameElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve$UserElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AbstractAccessLogValve", "org.apache.catalina.valves.AbstractAccessLogValve()"], ["int", "org.apache.catalina.valves.AbstractAccessLogValve.getMaxLogMessageBufferSize()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setMaxLogMessageBufferSize(int)"], ["boolean", "org.apache.catalina.valves.AbstractAccessLogValve.getIpv6Canonical()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setIpv6Canonical(boolean)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setRequestAttributesEnabled(boolean)"], ["boolean", "org.apache.catalina.valves.AbstractAccessLogValve.getRequestAttributesEnabled()"], ["boolean", "org.apache.catalina.valves.AbstractAccessLogValve.getEnabled()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setEnabled(boolean)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve.getPattern()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setPattern(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve.getCondition()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setCondition(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve.getConditionUnless()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setConditionUnless(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve.getConditionIf()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setConditionIf(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AbstractAccessLogValve.getLocale()"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.setLocale(java.lang.String)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.AbstractAccessLogValve.log(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.AccessLogValve", "org.apache.catalina.valves.AccessLogValve()"], ["int", "org.apache.catalina.valves.AccessLogValve.getMaxDays()"], ["void", "org.apache.catalina.valves.AccessLogValve.setMaxDays(int)"], ["java.lang.String", "org.apache.catalina.valves.AccessLogValve.getDirectory()"], ["void", "org.apache.catalina.valves.AccessLogValve.setDirectory(java.lang.String)"], ["boolean", "org.apache.catalina.valves.AccessLogValve.isCheckExists()"], ["void", "org.apache.catalina.valves.AccessLogValve.setCheckExists(boolean)"], ["java.lang.String", "org.apache.catalina.valves.AccessLogValve.getPrefix()"], ["void", "org.apache.catalina.valves.AccessLogValve.setPrefix(java.lang.String)"], ["boolean", "org.apache.catalina.valves.AccessLogValve.isRotatable()"], ["void", "org.apache.catalina.valves.AccessLogValve.setRotatable(boolean)"], ["boolean", "org.apache.catalina.valves.AccessLogValve.isRenameOnRotate()"], ["void", "org.apache.catalina.valves.AccessLogValve.setRenameOnRotate(boolean)"], ["boolean", "org.apache.catalina.valves.AccessLogValve.isBuffered()"], ["void", "org.apache.catalina.valves.AccessLogValve.setBuffered(boolean)"], ["java.lang.String", "org.apache.catalina.valves.AccessLogValve.getSuffix()"], ["void", "org.apache.catalina.valves.AccessLogValve.setSuffix(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AccessLogValve.getFileDateFormat()"], ["void", "org.apache.catalina.valves.AccessLogValve.setFileDateFormat(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.AccessLogValve.getEncoding()"], ["void", "org.apache.catalina.valves.AccessLogValve.setEncoding(java.lang.String)"], ["synchronized", "org.apache.catalina.valves.AccessLogValve.void backgroundProcess()"], ["void", "org.apache.catalina.valves.AccessLogValve.rotate()"], ["synchronized", "org.apache.catalina.valves.AccessLogValve.boolean rotate(java.lang.String)"], ["void", "org.apache.catalina.valves.AccessLogValve.log(java.io.CharArrayWriter)"], ["org.apache.catalina.valves.Constants$AccessLog", "org.apache.catalina.valves.Constants$AccessLog()"], ["org.apache.catalina.valves.Constants", "org.apache.catalina.valves.Constants()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve$CrawlerHttpSessionBindingListener.valueUnbound(javax.servlet.http.HttpSessionBindingEvent)"], ["org.apache.catalina.valves.CrawlerSessionManagerValve", "org.apache.catalina.valves.CrawlerSessionManagerValve()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.setCrawlerUserAgents(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.CrawlerSessionManagerValve.getCrawlerUserAgents()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.setCrawlerIps(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.CrawlerSessionManagerValve.getCrawlerIps()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.setSessionInactiveInterval(int)"], ["int", "org.apache.catalina.valves.CrawlerSessionManagerValve.getSessionInactiveInterval()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.catalina.valves.CrawlerSessionManagerValve.getClientIpSessionId()"], ["boolean", "org.apache.catalina.valves.CrawlerSessionManagerValve.isHostAware()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.setHostAware(boolean)"], ["boolean", "org.apache.catalina.valves.CrawlerSessionManagerValve.isContextAware()"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.setContextAware(boolean)"], ["void", "org.apache.catalina.valves.CrawlerSessionManagerValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.ErrorReportValve", "org.apache.catalina.valves.ErrorReportValve()"], ["void", "org.apache.catalina.valves.ErrorReportValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.ErrorReportValve.setShowReport(boolean)"], ["boolean", "org.apache.catalina.valves.ErrorReportValve.isShowReport()"], ["void", "org.apache.catalina.valves.ErrorReportValve.setShowServerInfo(boolean)"], ["boolean", "org.apache.catalina.valves.ErrorReportValve.isShowServerInfo()"], ["boolean", "org.apache.catalina.valves.ErrorReportValve.setProperty(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.ErrorReportValve.getProperty(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$1.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$10.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$11.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$12.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$13.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$14.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$2.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$3.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$4.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$5.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$6.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$7.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$8.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$9.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$CookieElement", "org.apache.catalina.valves.ExtendedAccessLogValve$CookieElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$CookieElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$DateElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer(java.lang.String)"], ["boolean", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.hasSubToken()"], ["boolean", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.hasParameter()"], ["java.lang.String", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.getToken()"], ["java.lang.String", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.getParameter()"], ["java.lang.String", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.getWhiteSpaces()"], ["boolean", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.isEnded()"], ["java.lang.String", "org.apache.catalina.valves.ExtendedAccessLogValve$PatternTokenizer.getRemains()"], ["org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$RequestHeaderElement", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestHeaderElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestHeaderElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement", "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$ResponseHeaderElement", "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseHeaderElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseHeaderElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement", "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement", "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement(java.lang.String)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["void", "org.apache.catalina.valves.ExtendedAccessLogValve$TimeElement.addElement(java.io.CharArrayWriter, java.util.Date, org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["org.apache.catalina.valves.ExtendedAccessLogValve", "org.apache.catalina.valves.ExtendedAccessLogValve()"], ["org.apache.catalina.valves.HealthCheckValve", "org.apache.catalina.valves.HealthCheckValve()"], ["java.lang.String", "org.apache.catalina.valves.HealthCheckValve.getPath()"], ["void", "org.apache.catalina.valves.HealthCheckValve.setPath(java.lang.String)"], ["void", "org.apache.catalina.valves.HealthCheckValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.JDBCAccessLogValve", "org.apache.catalina.valves.JDBCAccessLogValve()"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setRequestAttributesEnabled(boolean)"], ["boolean", "org.apache.catalina.valves.JDBCAccessLogValve.getRequestAttributesEnabled()"], ["java.lang.String", "org.apache.catalina.valves.JDBCAccessLogValve.getConnectionName()"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setConnectionName(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setDriverName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.JDBCAccessLogValve.getConnectionPassword()"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setConnectionPassword(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setConnectionURL(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setTableName(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setRemoteHostField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setUserField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setTimestampField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setVirtualHostField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setMethodField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setQueryField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setStatusField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setBytesField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setRefererField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setUserAgentField(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setPattern(java.lang.String)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setResolveHosts(java.lang.String)"], ["boolean", "org.apache.catalina.valves.JDBCAccessLogValve.getUseLongContentLength()"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.setUseLongContentLength(boolean)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.JDBCAccessLogValve.log(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response, long)"], ["long", "org.apache.catalina.valves.JDBCAccessLogValve.getCurrentTimeMillis()"], ["org.apache.catalina.valves.LoadBalancerDrainingValve", "org.apache.catalina.valves.LoadBalancerDrainingValve()"], ["void", "org.apache.catalina.valves.LoadBalancerDrainingValve.setRedirectStatusCode(int)"], ["java.lang.String", "org.apache.catalina.valves.LoadBalancerDrainingValve.getIgnoreCookieName()"], ["void", "org.apache.catalina.valves.LoadBalancerDrainingValve.setIgnoreCookieName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.LoadBalancerDrainingValve.getIgnoreCookieValue()"], ["void", "org.apache.catalina.valves.LoadBalancerDrainingValve.setIgnoreCookieValue(java.lang.String)"], ["void", "org.apache.catalina.valves.LoadBalancerDrainingValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.PersistentValve", "org.apache.catalina.valves.PersistentValve()"], ["void", "org.apache.catalina.valves.PersistentValve.setContainer(org.apache.catalina.Container)"], ["void", "org.apache.catalina.valves.PersistentValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.RemoteAddrValve", "org.apache.catalina.valves.RemoteAddrValve()"], ["void", "org.apache.catalina.valves.RemoteAddrValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.RemoteCIDRValve", "org.apache.catalina.valves.RemoteCIDRValve()"], ["java.lang.String", "org.apache.catalina.valves.RemoteCIDRValve.getAllow()"], ["void", "org.apache.catalina.valves.RemoteCIDRValve.setAllow(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.RemoteCIDRValve.getDeny()"], ["void", "org.apache.catalina.valves.RemoteCIDRValve.setDeny(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteCIDRValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.RemoteHostValve", "org.apache.catalina.valves.RemoteHostValve()"], ["void", "org.apache.catalina.valves.RemoteHostValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.RemoteIpValve", "org.apache.catalina.valves.RemoteIpValve()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getHostHeader()"], ["void", "org.apache.catalina.valves.RemoteIpValve.setHostHeader(java.lang.String)"], ["boolean", "org.apache.catalina.valves.RemoteIpValve.isChangeLocalName()"], ["void", "org.apache.catalina.valves.RemoteIpValve.setChangeLocalName(boolean)"], ["int", "org.apache.catalina.valves.RemoteIpValve.getHttpServerPort()"], ["int", "org.apache.catalina.valves.RemoteIpValve.getHttpsServerPort()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getPortHeader()"], ["void", "org.apache.catalina.valves.RemoteIpValve.setPortHeader(java.lang.String)"], ["boolean", "org.apache.catalina.valves.RemoteIpValve.isChangeLocalPort()"], ["void", "org.apache.catalina.valves.RemoteIpValve.setChangeLocalPort(boolean)"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getInternalProxies()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getProtocolHeader()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getProtocolHeaderHttpsValue()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getProxiesHeader()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getRemoteIpHeader()"], ["boolean", "org.apache.catalina.valves.RemoteIpValve.getRequestAttributesEnabled()"], ["java.lang.String", "org.apache.catalina.valves.RemoteIpValve.getTrustedProxies()"], ["void", "org.apache.catalina.valves.RemoteIpValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setHttpServerPort(int)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setHttpsServerPort(int)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setInternalProxies(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setProtocolHeader(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setProtocolHeaderHttpsValue(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setProxiesHeader(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setRemoteIpHeader(java.lang.String)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setRequestAttributesEnabled(boolean)"], ["void", "org.apache.catalina.valves.RemoteIpValve.setTrustedProxies(java.lang.String)"], ["org.apache.catalina.valves.RequestFilterValve", "org.apache.catalina.valves.RequestFilterValve()"], ["java.lang.String", "org.apache.catalina.valves.RequestFilterValve.getAllow()"], ["void", "org.apache.catalina.valves.RequestFilterValve.setAllow(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.RequestFilterValve.getDeny()"], ["void", "org.apache.catalina.valves.RequestFilterValve.setDeny(java.lang.String)"], ["boolean", "org.apache.catalina.valves.RequestFilterValve.isAllowValid()"], ["boolean", "org.apache.catalina.valves.RequestFilterValve.isDenyValid()"], ["int", "org.apache.catalina.valves.RequestFilterValve.getDenyStatus()"], ["void", "org.apache.catalina.valves.RequestFilterValve.setDenyStatus(int)"], ["boolean", "org.apache.catalina.valves.RequestFilterValve.getInvalidAuthenticationWhenDeny()"], ["void", "org.apache.catalina.valves.RequestFilterValve.setInvalidAuthenticationWhenDeny(boolean)"], ["boolean", "org.apache.catalina.valves.RequestFilterValve.getAddConnectorPort()"], ["void", "org.apache.catalina.valves.RequestFilterValve.setAddConnectorPort(boolean)"], ["boolean", "org.apache.catalina.valves.RequestFilterValve.isAllowed(java.lang.String)"], ["org.apache.catalina.valves.SSLValve", "org.apache.catalina.valves.SSLValve()"], ["java.lang.String", "org.apache.catalina.valves.SSLValve.getSslClientCertHeader()"], ["void", "org.apache.catalina.valves.SSLValve.setSslClientCertHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.SSLValve.getSslCipherHeader()"], ["void", "org.apache.catalina.valves.SSLValve.setSslCipherHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.SSLValve.getSslSessionIdHeader()"], ["void", "org.apache.catalina.valves.SSLValve.setSslSessionIdHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.SSLValve.getSslCipherUserKeySizeHeader()"], ["void", "org.apache.catalina.valves.SSLValve.setSslCipherUserKeySizeHeader(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.SSLValve.mygetHeader(org.apache.catalina.connector.Request, java.lang.String)"], ["void", "org.apache.catalina.valves.SSLValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.SemaphoreValve", "org.apache.catalina.valves.SemaphoreValve()"], ["int", "org.apache.catalina.valves.SemaphoreValve.getConcurrency()"], ["void", "org.apache.catalina.valves.SemaphoreValve.setConcurrency(int)"], ["boolean", "org.apache.catalina.valves.SemaphoreValve.getFairness()"], ["void", "org.apache.catalina.valves.SemaphoreValve.setFairness(boolean)"], ["boolean", "org.apache.catalina.valves.SemaphoreValve.getBlock()"], ["void", "org.apache.catalina.valves.SemaphoreValve.setBlock(boolean)"], ["boolean", "org.apache.catalina.valves.SemaphoreValve.getInterruptible()"], ["void", "org.apache.catalina.valves.SemaphoreValve.setInterruptible(boolean)"], ["void", "org.apache.catalina.valves.SemaphoreValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["boolean", "org.apache.catalina.valves.SemaphoreValve.controlConcurrency(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.SemaphoreValve.permitDenied(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["org.apache.catalina.valves.StuckThreadDetectionValve$CompletedStuckThread", "org.apache.catalina.valves.StuckThreadDetectionValve$CompletedStuckThread(java.lang.Thread, long)"], ["java.lang.String", "org.apache.catalina.valves.StuckThreadDetectionValve$CompletedStuckThread.getName()"], ["long", "org.apache.catalina.valves.StuckThreadDetectionValve$CompletedStuckThread.getId()"], ["long", "org.apache.catalina.valves.StuckThreadDetectionValve$CompletedStuckThread.getTotalActiveTime()"], ["org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread(java.lang.Thread, java.lang.String, boolean)"], ["java.lang.Thread", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.getThread()"], ["java.lang.String", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.getRequestUri()"], ["long", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.getActiveTimeInMillis()"], ["java.util.Date", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.getStartTime()"], ["boolean", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.markAsStuckIfStillRunning()"], ["org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThreadState", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.markAsDone()"], ["boolean", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.interruptIfStuck(long)"], ["boolean", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThread.wasInterrupted()"], ["org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThreadState[]", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThreadState.values()"], ["org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThreadState", "org.apache.catalina.valves.StuckThreadDetectionValve$MonitoredThreadState.valueOf(java.lang.String)"], ["void", "org.apache.catalina.valves.StuckThreadDetectionValve.setThreshold(int)"], ["int", "org.apache.catalina.valves.StuckThreadDetectionValve.getThreshold()"], ["int", "org.apache.catalina.valves.StuckThreadDetectionValve.getInterruptThreadThreshold()"], ["void", "org.apache.catalina.valves.StuckThreadDetectionValve.setInterruptThreadThreshold(int)"], ["org.apache.catalina.valves.StuckThreadDetectionValve", "org.apache.catalina.valves.StuckThreadDetectionValve()"], ["void", "org.apache.catalina.valves.StuckThreadDetectionValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["void", "org.apache.catalina.valves.StuckThreadDetectionValve.backgroundProcess()"], ["int", "org.apache.catalina.valves.StuckThreadDetectionValve.getStuckThreadCount()"], ["long[]", "org.apache.catalina.valves.StuckThreadDetectionValve.getStuckThreadIds()"], ["java.lang.String[]", "org.apache.catalina.valves.StuckThreadDetectionValve.getStuckThreadNames()"], ["long", "org.apache.catalina.valves.StuckThreadDetectionValve.getInterruptedThreadsCount()"], ["org.apache.catalina.valves.ValveBase", "org.apache.catalina.valves.ValveBase()"], ["org.apache.catalina.valves.ValveBase", "org.apache.catalina.valves.ValveBase(boolean)"], ["org.apache.catalina.Container", "org.apache.catalina.valves.ValveBase.getContainer()"], ["void", "org.apache.catalina.valves.ValveBase.setContainer(org.apache.catalina.Container)"], ["boolean", "org.apache.catalina.valves.ValveBase.isAsyncSupported()"], ["void", "org.apache.catalina.valves.ValveBase.setAsyncSupported(boolean)"], ["org.apache.catalina.Valve", "org.apache.catalina.valves.ValveBase.getNext()"], ["void", "org.apache.catalina.valves.ValveBase.setNext(org.apache.catalina.Valve)"], ["void", "org.apache.catalina.valves.ValveBase.backgroundProcess()"], ["java.lang.String", "org.apache.catalina.valves.ValveBase.toString()"], ["java.lang.String", "org.apache.catalina.valves.ValveBase.getObjectNameKeyProperties()"], ["java.lang.String", "org.apache.catalina.valves.ValveBase.getDomainInternal()"], ["org.apache.catalina.valves.rewrite.InternalRewriteMap$Escape", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Escape()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Escape.setParameters(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Escape.lookup(java.lang.String)"], ["org.apache.catalina.valves.rewrite.InternalRewriteMap$LowerCase", "org.apache.catalina.valves.rewrite.InternalRewriteMap$LowerCase()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$LowerCase.setParameters(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$LowerCase.lookup(java.lang.String)"], ["org.apache.catalina.valves.rewrite.InternalRewriteMap$Unescape", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Unescape()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Unescape.setParameters(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$Unescape.lookup(java.lang.String)"], ["org.apache.catalina.valves.rewrite.InternalRewriteMap$UpperCase", "org.apache.catalina.valves.rewrite.InternalRewriteMap$UpperCase()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$UpperCase.setParameters(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.InternalRewriteMap$UpperCase.lookup(java.lang.String)"], ["org.apache.catalina.valves.rewrite.InternalRewriteMap", "org.apache.catalina.valves.rewrite.InternalRewriteMap()"], ["org.apache.catalina.valves.rewrite.RewriteMap", "org.apache.catalina.valves.rewrite.InternalRewriteMap.toMap(java.lang.String)"], ["org.apache.catalina.valves.rewrite.QuotedStringTokenizer$WordMode[]", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer$WordMode.values()"], ["org.apache.catalina.valves.rewrite.QuotedStringTokenizer$WordMode", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer$WordMode.valueOf(java.lang.String)"], ["org.apache.catalina.valves.rewrite.QuotedStringTokenizer", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer(java.lang.String)"], ["boolean", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer.hasMoreTokens()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer.nextToken()"], ["int", "org.apache.catalina.valves.rewrite.QuotedStringTokenizer.countTokens()"], ["org.apache.catalina.valves.rewrite.Resolver", "org.apache.catalina.valves.rewrite.Resolver()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Resolver.resolveEnv(java.lang.String)"], ["org.apache.catalina.valves.rewrite.ResolverImpl", "org.apache.catalina.valves.rewrite.ResolverImpl(org.apache.catalina.connector.Request)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.ResolverImpl.resolve(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.ResolverImpl.resolveEnv(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.ResolverImpl.resolveSsl(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.ResolverImpl.resolveHttp(java.lang.String)"], ["boolean", "org.apache.catalina.valves.rewrite.ResolverImpl.resolveResource(int, java.lang.String)"], ["java.nio.charset.Charset", "org.apache.catalina.valves.rewrite.ResolverImpl.getUriCharset()"], ["org.apache.catalina.valves.rewrite.RewriteCond$Condition", "org.apache.catalina.valves.rewrite.RewriteCond$Condition()"], ["org.apache.catalina.valves.rewrite.RewriteCond$LexicalCondition", "org.apache.catalina.valves.rewrite.RewriteCond$LexicalCondition()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond$LexicalCondition.evaluate(java.lang.String, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.RewriteCond$PatternCondition", "org.apache.catalina.valves.rewrite.RewriteCond$PatternCondition()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond$PatternCondition.evaluate(java.lang.String, org.apache.catalina.valves.rewrite.Resolver)"], ["java.util.regex.Matcher", "org.apache.catalina.valves.rewrite.RewriteCond$PatternCondition.getMatcher()"], ["org.apache.catalina.valves.rewrite.RewriteCond$ResourceCondition", "org.apache.catalina.valves.rewrite.RewriteCond$ResourceCondition()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond$ResourceCondition.evaluate(java.lang.String, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.RewriteCond", "org.apache.catalina.valves.rewrite.RewriteCond()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteCond.getCondPattern()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setCondPattern(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteCond.getTestString()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setTestString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteCond.getFlagsString()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setFlagsString(java.lang.String)"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.parse(java.util.Map<java.lang.String, org.apache.catalina.valves.rewrite.RewriteMap>)"], ["java.util.regex.Matcher", "org.apache.catalina.valves.rewrite.RewriteCond.getMatcher()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteCond.toString()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond.isNocase()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setNocase(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond.isOrnext()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setOrnext(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteCond.isPositive()"], ["void", "org.apache.catalina.valves.rewrite.RewriteCond.setPositive(boolean)"], ["default", "org.apache.catalina.valves.rewrite.RewriteMap.void setParameters(java.lang.String...)"], ["org.apache.catalina.valves.rewrite.RewriteRule", "org.apache.catalina.valves.rewrite.RewriteRule()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.parse(java.util.Map<java.lang.String, org.apache.catalina.valves.rewrite.RewriteMap>)"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.addCondition(org.apache.catalina.valves.rewrite.RewriteCond)"], ["java.lang.CharSequence", "org.apache.catalina.valves.rewrite.RewriteRule.evaluate(java.lang.CharSequence, org.apache.catalina.valves.rewrite.Resolver)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.toString()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isEscapeBackReferences()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setEscapeBackReferences(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isChain()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setChain(boolean)"], ["org.apache.catalina.valves.rewrite.RewriteCond[]", "org.apache.catalina.valves.rewrite.RewriteRule.getConditions()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setConditions(org.apache.catalina.valves.rewrite.RewriteCond[])"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isCookie()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookie(boolean)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getCookieName()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getCookieValue()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieValue(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getCookieResult()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isEnv()"], ["int", "org.apache.catalina.valves.rewrite.RewriteRule.getEnvSize()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setEnv(boolean)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getEnvName(int)"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.addEnvName(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getEnvValue(int)"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.addEnvValue(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getEnvResult(int)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isForbidden()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setForbidden(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isGone()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setGone(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isLast()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setLast(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isNext()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setNext(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isNocase()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setNocase(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isNoescape()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setNoescape(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isNosubreq()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setNosubreq(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isQsappend()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setQsappend(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isQsdiscard()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setQsdiscard(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isRedirect()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setRedirect(boolean)"], ["int", "org.apache.catalina.valves.rewrite.RewriteRule.getRedirectCode()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setRedirectCode(int)"], ["int", "org.apache.catalina.valves.rewrite.RewriteRule.getSkip()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setSkip(int)"], ["org.apache.catalina.valves.rewrite.Substitution", "org.apache.catalina.valves.rewrite.RewriteRule.getSubstitution()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setSubstitution(org.apache.catalina.valves.rewrite.Substitution)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isType()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setType(boolean)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getTypeValue()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setTypeValue(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getPatternString()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setPatternString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getSubstitutionString()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setSubstitutionString(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getFlagsString()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setFlagsString(java.lang.String)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isHost()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setHost(boolean)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getCookieDomain()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieDomain(java.lang.String)"], ["int", "org.apache.catalina.valves.rewrite.RewriteRule.getCookieLifetime()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieLifetime(int)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteRule.getCookiePath()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookiePath(java.lang.String)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isCookieSecure()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieSecure(boolean)"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteRule.isCookieHttpOnly()"], ["void", "org.apache.catalina.valves.rewrite.RewriteRule.setCookieHttpOnly(boolean)"], ["org.apache.catalina.valves.rewrite.RewriteValve", "org.apache.catalina.valves.rewrite.RewriteValve()"], ["boolean", "org.apache.catalina.valves.rewrite.RewriteValve.getEnabled()"], ["void", "org.apache.catalina.valves.rewrite.RewriteValve.setEnabled(boolean)"], ["void", "org.apache.catalina.valves.rewrite.RewriteValve.setConfiguration(java.lang.String)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.RewriteValve.getConfiguration()"], ["void", "org.apache.catalina.valves.rewrite.RewriteValve.invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response)"], ["java.lang.Object", "org.apache.catalina.valves.rewrite.RewriteValve.parse(java.lang.String)"], ["org.apache.catalina.valves.rewrite.Substitution$MapElement", "org.apache.catalina.valves.rewrite.Substitution$MapElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$MapElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$RewriteCondBackReferenceElement", "org.apache.catalina.valves.rewrite.Substitution$RewriteCondBackReferenceElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$RewriteCondBackReferenceElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$RewriteRuleBackReferenceElement", "org.apache.catalina.valves.rewrite.Substitution$RewriteRuleBackReferenceElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$RewriteRuleBackReferenceElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$ServerVariableElement", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$ServerVariableEnvElement", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableEnvElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableEnvElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$ServerVariableHttpElement", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableHttpElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableHttpElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$ServerVariableSslElement", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableSslElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$ServerVariableSslElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$StaticElement", "org.apache.catalina.valves.rewrite.Substitution$StaticElement(org.apache.catalina.valves.rewrite.Substitution)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution$StaticElement.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.valves.rewrite.Substitution$SubstitutionElement", "org.apache.catalina.valves.rewrite.Substitution$SubstitutionElement(org.apache.catalina.valves.rewrite.Substitution)"], ["org.apache.catalina.valves.rewrite.Substitution", "org.apache.catalina.valves.rewrite.Substitution()"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution.getSub()"], ["void", "org.apache.catalina.valves.rewrite.Substitution.setSub(java.lang.String)"], ["void", "org.apache.catalina.valves.rewrite.Substitution.parse(java.util.Map<java.lang.String, org.apache.catalina.valves.rewrite.RewriteMap>)"], ["java.lang.String", "org.apache.catalina.valves.rewrite.Substitution.evaluate(java.util.regex.Matcher, java.util.regex.Matcher, org.apache.catalina.valves.rewrite.Resolver)"], ["org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper(org.apache.catalina.webresources.AbstractArchiveResource, java.util.jar.JarEntry, java.io.InputStream)"], ["int", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.read()"], ["int", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.read(byte[])"], ["int", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.read(byte[], int, int)"], ["long", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.skip(long)"], ["int", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.available()"], ["void", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.close()"], ["synchronized", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.void mark(int)"], ["synchronized", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.void reset()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.markSupported()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper.getCertificates()"], ["long", "org.apache.catalina.webresources.AbstractArchiveResource.getLastModified()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.exists()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.isVirtual()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.isDirectory()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.isFile()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.delete()"], ["java.lang.String", "org.apache.catalina.webresources.AbstractArchiveResource.getName()"], ["long", "org.apache.catalina.webresources.AbstractArchiveResource.getContentLength()"], ["java.lang.String", "org.apache.catalina.webresources.AbstractArchiveResource.getCanonicalPath()"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResource.canRead()"], ["long", "org.apache.catalina.webresources.AbstractArchiveResource.getCreation()"], ["java.net.URL", "org.apache.catalina.webresources.AbstractArchiveResource.getURL()"], ["java.net.URL", "org.apache.catalina.webresources.AbstractArchiveResource.getCodeBase()"], ["byte[]", "org.apache.catalina.webresources.AbstractArchiveResource.getContent()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.AbstractArchiveResource.getCertificates()"], ["java.util.jar.Manifest", "org.apache.catalina.webresources.AbstractArchiveResource.getManifest()"], ["org.apache.catalina.webresources.AbstractArchiveResourceSet", "org.apache.catalina.webresources.AbstractArchiveResourceSet()"], ["java.net.URL", "org.apache.catalina.webresources.AbstractArchiveResourceSet.getBaseUrl()"], ["java.lang.String[]", "org.apache.catalina.webresources.AbstractArchiveResourceSet.list(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResourceSet.mkdir(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResourceSet.write(java.lang.String, java.io.InputStream, boolean)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.AbstractArchiveResourceSet.getResource(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.AbstractArchiveResourceSet.isReadOnly()"], ["void", "org.apache.catalina.webresources.AbstractArchiveResourceSet.setReadOnly(boolean)"], ["void", "org.apache.catalina.webresources.AbstractArchiveResourceSet.gc()"], ["void", "org.apache.catalina.webresources.AbstractFileResourceSet.setReadOnly(boolean)"], ["boolean", "org.apache.catalina.webresources.AbstractFileResourceSet.isReadOnly()"], ["java.net.URL", "org.apache.catalina.webresources.AbstractFileResourceSet.getBaseUrl()"], ["void", "org.apache.catalina.webresources.AbstractFileResourceSet.gc()"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.webresources.AbstractResource.getWebResourceRoot()"], ["java.lang.String", "org.apache.catalina.webresources.AbstractResource.getWebappPath()"], ["java.lang.String", "org.apache.catalina.webresources.AbstractResource.getLastModifiedHttp()"], ["java.lang.String", "org.apache.catalina.webresources.AbstractResource.getETag()"], ["void", "org.apache.catalina.webresources.AbstractResource.setMimeType(java.lang.String)"], ["java.lang.String", "org.apache.catalina.webresources.AbstractResource.getMimeType()"], ["java.io.InputStream", "org.apache.catalina.webresources.AbstractResource.getInputStream()"], ["org.apache.catalina.webresources.AbstractResourceSet", "org.apache.catalina.webresources.AbstractResourceSet()"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setRoot(org.apache.catalina.WebResourceRoot)"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setInternalPath(java.lang.String)"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setWebAppMount(java.lang.String)"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setBase(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.AbstractResourceSet.getClassLoaderOnly()"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setClassLoaderOnly(boolean)"], ["boolean", "org.apache.catalina.webresources.AbstractResourceSet.getStaticOnly()"], ["void", "org.apache.catalina.webresources.AbstractResourceSet.setStaticOnly(boolean)"], ["org.apache.catalina.webresources.AbstractSingleArchiveResourceSet", "org.apache.catalina.webresources.AbstractSingleArchiveResourceSet()"], ["org.apache.catalina.webresources.AbstractSingleArchiveResourceSet", "org.apache.catalina.webresources.AbstractSingleArchiveResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String, java.lang.String)"], ["int", "org.apache.catalina.webresources.Cache$EvictionOrder.compare(org.apache.catalina.webresources.CachedResource, org.apache.catalina.webresources.CachedResource)"], ["int", "org.apache.catalina.webresources.Cache$EvictionOrder.compare(java.lang.Object, java.lang.Object)"], ["org.apache.catalina.webresources.Cache", "org.apache.catalina.webresources.Cache(org.apache.catalina.webresources.StandardRoot)"], ["long", "org.apache.catalina.webresources.Cache.getTtl()"], ["void", "org.apache.catalina.webresources.Cache.setTtl(long)"], ["long", "org.apache.catalina.webresources.Cache.getMaxSize()"], ["void", "org.apache.catalina.webresources.Cache.setMaxSize(long)"], ["long", "org.apache.catalina.webresources.Cache.getLookupCount()"], ["long", "org.apache.catalina.webresources.Cache.getHitCount()"], ["void", "org.apache.catalina.webresources.Cache.setObjectMaxSize(int)"], ["int", "org.apache.catalina.webresources.Cache.getObjectMaxSize()"], ["int", "org.apache.catalina.webresources.Cache.getObjectMaxSizeBytes()"], ["void", "org.apache.catalina.webresources.Cache.clear()"], ["long", "org.apache.catalina.webresources.Cache.getSize()"], ["void", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.connect()"], ["java.io.InputStream", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getInputStream()"], ["java.security.Permission", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getPermission()"], ["long", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getLastModified()"], ["long", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getContentLengthLong()"], ["java.util.jar.JarFile", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getJarFile()"], ["java.util.jar.JarEntry", "org.apache.catalina.webresources.CachedResource$CachedResourceJarURLConnection.getJarEntry()"], ["void", "org.apache.catalina.webresources.CachedResource$CachedResourceURLConnection.connect()"], ["java.io.InputStream", "org.apache.catalina.webresources.CachedResource$CachedResourceURLConnection.getInputStream()"], ["java.security.Permission", "org.apache.catalina.webresources.CachedResource$CachedResourceURLConnection.getPermission()"], ["long", "org.apache.catalina.webresources.CachedResource$CachedResourceURLConnection.getLastModified()"], ["long", "org.apache.catalina.webresources.CachedResource$CachedResourceURLConnection.getContentLengthLong()"], ["org.apache.catalina.webresources.CachedResource$CachedResourceURLStreamHandler", "org.apache.catalina.webresources.CachedResource$CachedResourceURLStreamHandler(java.net.URL, org.apache.catalina.webresources.StandardRoot, java.lang.String, boolean)"], ["org.apache.catalina.webresources.CachedResource", "org.apache.catalina.webresources.CachedResource(org.apache.catalina.webresources.Cache, org.apache.catalina.webresources.StandardRoot, java.lang.String, long, int, boolean)"], ["long", "org.apache.catalina.webresources.CachedResource.getLastModified()"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getLastModifiedHttp()"], ["boolean", "org.apache.catalina.webresources.CachedResource.exists()"], ["boolean", "org.apache.catalina.webresources.CachedResource.isVirtual()"], ["boolean", "org.apache.catalina.webresources.CachedResource.isDirectory()"], ["boolean", "org.apache.catalina.webresources.CachedResource.isFile()"], ["boolean", "org.apache.catalina.webresources.CachedResource.delete()"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getName()"], ["long", "org.apache.catalina.webresources.CachedResource.getContentLength()"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getCanonicalPath()"], ["boolean", "org.apache.catalina.webresources.CachedResource.canRead()"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getWebappPath()"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getETag()"], ["void", "org.apache.catalina.webresources.CachedResource.setMimeType(java.lang.String)"], ["java.lang.String", "org.apache.catalina.webresources.CachedResource.getMimeType()"], ["java.io.InputStream", "org.apache.catalina.webresources.CachedResource.getInputStream()"], ["byte[]", "org.apache.catalina.webresources.CachedResource.getContent()"], ["long", "org.apache.catalina.webresources.CachedResource.getCreation()"], ["java.net.URL", "org.apache.catalina.webresources.CachedResource.getURL()"], ["java.net.URL", "org.apache.catalina.webresources.CachedResource.getCodeBase()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.CachedResource.getCertificates()"], ["java.util.jar.Manifest", "org.apache.catalina.webresources.CachedResource.getManifest()"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.webresources.CachedResource.getWebResourceRoot()"], ["org.apache.catalina.webresources.ClasspathURLStreamHandler", "org.apache.catalina.webresources.ClasspathURLStreamHandler()"], ["org.apache.catalina.webresources.DirResourceSet", "org.apache.catalina.webresources.DirResourceSet()"], ["org.apache.catalina.webresources.DirResourceSet", "org.apache.catalina.webresources.DirResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.DirResourceSet.getResource(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.webresources.DirResourceSet.list(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.DirResourceSet.mkdir(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.DirResourceSet.write(java.lang.String, java.io.InputStream, boolean)"], ["org.apache.catalina.webresources.EmptyResource", "org.apache.catalina.webresources.EmptyResource(org.apache.catalina.WebResourceRoot, java.lang.String)"], ["org.apache.catalina.webresources.EmptyResource", "org.apache.catalina.webresources.EmptyResource(org.apache.catalina.WebResourceRoot, java.lang.String, java.io.File)"], ["long", "org.apache.catalina.webresources.EmptyResource.getLastModified()"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getLastModifiedHttp()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.exists()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.isVirtual()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.isDirectory()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.isFile()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.delete()"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getName()"], ["long", "org.apache.catalina.webresources.EmptyResource.getContentLength()"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getCanonicalPath()"], ["boolean", "org.apache.catalina.webresources.EmptyResource.canRead()"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getWebappPath()"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getETag()"], ["void", "org.apache.catalina.webresources.EmptyResource.setMimeType(java.lang.String)"], ["java.lang.String", "org.apache.catalina.webresources.EmptyResource.getMimeType()"], ["java.io.InputStream", "org.apache.catalina.webresources.EmptyResource.getInputStream()"], ["byte[]", "org.apache.catalina.webresources.EmptyResource.getContent()"], ["long", "org.apache.catalina.webresources.EmptyResource.getCreation()"], ["java.net.URL", "org.apache.catalina.webresources.EmptyResource.getURL()"], ["java.net.URL", "org.apache.catalina.webresources.EmptyResource.getCodeBase()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.EmptyResource.getCertificates()"], ["java.util.jar.Manifest", "org.apache.catalina.webresources.EmptyResource.getManifest()"], ["org.apache.catalina.WebResourceRoot", "org.apache.catalina.webresources.EmptyResource.getWebResourceRoot()"], ["org.apache.catalina.webresources.EmptyResourceSet", "org.apache.catalina.webresources.EmptyResourceSet(org.apache.catalina.WebResourceRoot)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.EmptyResourceSet.getResource(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.webresources.EmptyResourceSet.list(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.EmptyResourceSet.mkdir(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.EmptyResourceSet.write(java.lang.String, java.io.InputStream, boolean)"], ["void", "org.apache.catalina.webresources.EmptyResourceSet.setRoot(org.apache.catalina.WebResourceRoot)"], ["boolean", "org.apache.catalina.webresources.EmptyResourceSet.getClassLoaderOnly()"], ["void", "org.apache.catalina.webresources.EmptyResourceSet.setClassLoaderOnly(boolean)"], ["boolean", "org.apache.catalina.webresources.EmptyResourceSet.getStaticOnly()"], ["void", "org.apache.catalina.webresources.EmptyResourceSet.setStaticOnly(boolean)"], ["java.net.URL", "org.apache.catalina.webresources.EmptyResourceSet.getBaseUrl()"], ["void", "org.apache.catalina.webresources.EmptyResourceSet.setReadOnly(boolean)"], ["boolean", "org.apache.catalina.webresources.EmptyResourceSet.isReadOnly()"], ["void", "org.apache.catalina.webresources.EmptyResourceSet.gc()"], ["org.apache.catalina.webresources.ExtractingRoot", "org.apache.catalina.webresources.ExtractingRoot()"], ["org.apache.catalina.webresources.FileResource", "org.apache.catalina.webresources.FileResource(org.apache.catalina.WebResourceRoot, java.lang.String, java.io.File, boolean, java.util.jar.Manifest)"], ["long", "org.apache.catalina.webresources.FileResource.getLastModified()"], ["boolean", "org.apache.catalina.webresources.FileResource.exists()"], ["boolean", "org.apache.catalina.webresources.FileResource.isVirtual()"], ["boolean", "org.apache.catalina.webresources.FileResource.isDirectory()"], ["boolean", "org.apache.catalina.webresources.FileResource.isFile()"], ["boolean", "org.apache.catalina.webresources.FileResource.delete()"], ["java.lang.String", "org.apache.catalina.webresources.FileResource.getName()"], ["long", "org.apache.catalina.webresources.FileResource.getContentLength()"], ["java.lang.String", "org.apache.catalina.webresources.FileResource.getCanonicalPath()"], ["boolean", "org.apache.catalina.webresources.FileResource.canRead()"], ["byte[]", "org.apache.catalina.webresources.FileResource.getContent()"], ["long", "org.apache.catalina.webresources.FileResource.getCreation()"], ["java.net.URL", "org.apache.catalina.webresources.FileResource.getURL()"], ["java.net.URL", "org.apache.catalina.webresources.FileResource.getCodeBase()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.FileResource.getCertificates()"], ["java.util.jar.Manifest", "org.apache.catalina.webresources.FileResource.getManifest()"], ["org.apache.catalina.webresources.FileResourceSet", "org.apache.catalina.webresources.FileResourceSet()"], ["org.apache.catalina.webresources.FileResourceSet", "org.apache.catalina.webresources.FileResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.FileResourceSet.getResource(java.lang.String)"], ["java.lang.String[]", "org.apache.catalina.webresources.FileResourceSet.list(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.FileResourceSet.mkdir(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.FileResourceSet.write(java.lang.String, java.io.InputStream, boolean)"], ["org.apache.catalina.webresources.JarResource", "org.apache.catalina.webresources.JarResource(org.apache.catalina.webresources.AbstractArchiveResourceSet, java.lang.String, java.lang.String, java.util.jar.JarEntry)"], ["org.apache.catalina.webresources.JarResourceRoot", "org.apache.catalina.webresources.JarResourceRoot(org.apache.catalina.WebResourceRoot, java.io.File, java.lang.String, java.lang.String)"], ["long", "org.apache.catalina.webresources.JarResourceRoot.getLastModified()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.exists()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.isVirtual()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.isDirectory()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.isFile()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.delete()"], ["java.lang.String", "org.apache.catalina.webresources.JarResourceRoot.getName()"], ["long", "org.apache.catalina.webresources.JarResourceRoot.getContentLength()"], ["java.lang.String", "org.apache.catalina.webresources.JarResourceRoot.getCanonicalPath()"], ["boolean", "org.apache.catalina.webresources.JarResourceRoot.canRead()"], ["byte[]", "org.apache.catalina.webresources.JarResourceRoot.getContent()"], ["long", "org.apache.catalina.webresources.JarResourceRoot.getCreation()"], ["java.net.URL", "org.apache.catalina.webresources.JarResourceRoot.getURL()"], ["java.net.URL", "org.apache.catalina.webresources.JarResourceRoot.getCodeBase()"], ["java.security.cert.Certificate[]", "org.apache.catalina.webresources.JarResourceRoot.getCertificates()"], ["java.util.jar.Manifest", "org.apache.catalina.webresources.JarResourceRoot.getManifest()"], ["org.apache.catalina.webresources.JarResourceSet", "org.apache.catalina.webresources.JarResourceSet()"], ["org.apache.catalina.webresources.JarResourceSet", "org.apache.catalina.webresources.JarResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.webresources.JarWarResource", "org.apache.catalina.webresources.JarWarResource(org.apache.catalina.webresources.AbstractArchiveResourceSet, java.lang.String, java.lang.String, java.util.jar.JarEntry, java.lang.String)"], ["org.apache.catalina.webresources.JarWarResourceSet$VersionedJarEntry", "org.apache.catalina.webresources.JarWarResourceSet$VersionedJarEntry(int, java.util.jar.JarEntry)"], ["int", "org.apache.catalina.webresources.JarWarResourceSet$VersionedJarEntry.getVersion()"], ["java.util.jar.JarEntry", "org.apache.catalina.webresources.JarWarResourceSet$VersionedJarEntry.getJarEntry()"], ["org.apache.catalina.webresources.JarWarResourceSet", "org.apache.catalina.webresources.JarWarResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.catalina.webresources.StandardRoot", "org.apache.catalina.webresources.StandardRoot()"], ["org.apache.catalina.webresources.StandardRoot", "org.apache.catalina.webresources.StandardRoot(org.apache.catalina.Context)"], ["java.lang.String[]", "org.apache.catalina.webresources.StandardRoot.list(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.StandardRoot.mkdir(java.lang.String)"], ["boolean", "org.apache.catalina.webresources.StandardRoot.write(java.lang.String, java.io.InputStream, boolean)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.StandardRoot.getResource(java.lang.String)"], ["org.apache.catalina.WebResource", "org.apache.catalina.webresources.StandardRoot.getClassLoaderResource(java.lang.String)"], ["org.apache.catalina.WebResource[]", "org.apache.catalina.webresources.StandardRoot.getClassLoaderResources(java.lang.String)"], ["org.apache.catalina.WebResource[]", "org.apache.catalina.webresources.StandardRoot.getResources(java.lang.String)"], ["org.apache.catalina.WebResource[]", "org.apache.catalina.webresources.StandardRoot.listResources(java.lang.String)"], ["void", "org.apache.catalina.webresources.StandardRoot.createWebResourceSet(org.apache.catalina.WebResourceRoot$ResourceSetType, java.lang.String, java.net.URL, java.lang.String)"], ["void", "org.apache.catalina.webresources.StandardRoot.createWebResourceSet(org.apache.catalina.WebResourceRoot$ResourceSetType, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.catalina.webresources.StandardRoot.addPreResources(org.apache.catalina.WebResourceSet)"], ["org.apache.catalina.WebResourceSet[]", "org.apache.catalina.webresources.StandardRoot.getPreResources()"], ["void", "org.apache.catalina.webresources.StandardRoot.addJarResources(org.apache.catalina.WebResourceSet)"], ["org.apache.catalina.WebResourceSet[]", "org.apache.catalina.webresources.StandardRoot.getJarResources()"], ["void", "org.apache.catalina.webresources.StandardRoot.addPostResources(org.apache.catalina.WebResourceSet)"], ["org.apache.catalina.WebResourceSet[]", "org.apache.catalina.webresources.StandardRoot.getPostResources()"], ["void", "org.apache.catalina.webresources.StandardRoot.setAllowLinking(boolean)"], ["boolean", "org.apache.catalina.webresources.StandardRoot.getAllowLinking()"], ["void", "org.apache.catalina.webresources.StandardRoot.setCachingAllowed(boolean)"], ["boolean", "org.apache.catalina.webresources.StandardRoot.isCachingAllowed()"], ["long", "org.apache.catalina.webresources.StandardRoot.getCacheTtl()"], ["void", "org.apache.catalina.webresources.StandardRoot.setCacheTtl(long)"], ["long", "org.apache.catalina.webresources.StandardRoot.getCacheMaxSize()"], ["void", "org.apache.catalina.webresources.StandardRoot.setCacheMaxSize(long)"], ["void", "org.apache.catalina.webresources.StandardRoot.setCacheObjectMaxSize(int)"], ["int", "org.apache.catalina.webresources.StandardRoot.getCacheObjectMaxSize()"], ["void", "org.apache.catalina.webresources.StandardRoot.setTrackLockedFiles(boolean)"], ["boolean", "org.apache.catalina.webresources.StandardRoot.getTrackLockedFiles()"], ["org.apache.catalina.Context", "org.apache.catalina.webresources.StandardRoot.getContext()"], ["void", "org.apache.catalina.webresources.StandardRoot.setContext(org.apache.catalina.Context)"], ["void", "org.apache.catalina.webresources.StandardRoot.backgroundProcess()"], ["void", "org.apache.catalina.webresources.StandardRoot.gc()"], ["void", "org.apache.catalina.webresources.StandardRoot.registerTrackedResource(org.apache.catalina.TrackedWebResource)"], ["void", "org.apache.catalina.webresources.StandardRoot.deregisterTrackedResource(org.apache.catalina.TrackedWebResource)"], ["org.apache.catalina.webresources.TomcatURLStreamHandlerFactory", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.getInstance()"], ["boolean", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.register()"], ["boolean", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.disable()"], ["void", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.release(java.lang.ClassLoader)"], ["boolean", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.isRegistered()"], ["void", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.addUserFactory(java.net.URLStreamHandlerFactory)"], ["java.net.URLStreamHandler", "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.createURLStreamHandler(java.lang.String)"], ["int", "org.apache.catalina.webresources.TrackedInputStream.read()"], ["int", "org.apache.catalina.webresources.TrackedInputStream.read(byte[])"], ["int", "org.apache.catalina.webresources.TrackedInputStream.read(byte[], int, int)"], ["long", "org.apache.catalina.webresources.TrackedInputStream.skip(long)"], ["int", "org.apache.catalina.webresources.TrackedInputStream.available()"], ["void", "org.apache.catalina.webresources.TrackedInputStream.close()"], ["synchronized", "org.apache.catalina.webresources.TrackedInputStream.void mark(int)"], ["synchronized", "org.apache.catalina.webresources.TrackedInputStream.void reset()"], ["boolean", "org.apache.catalina.webresources.TrackedInputStream.markSupported()"], ["java.lang.String", "org.apache.catalina.webresources.TrackedInputStream.getName()"], ["java.lang.Exception", "org.apache.catalina.webresources.TrackedInputStream.getCreatedBy()"], ["java.lang.String", "org.apache.catalina.webresources.TrackedInputStream.toString()"], ["org.apache.catalina.webresources.VirtualResource", "org.apache.catalina.webresources.VirtualResource(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String)"], ["boolean", "org.apache.catalina.webresources.VirtualResource.isVirtual()"], ["boolean", "org.apache.catalina.webresources.VirtualResource.isDirectory()"], ["java.lang.String", "org.apache.catalina.webresources.VirtualResource.getName()"], ["org.apache.catalina.webresources.WarResource", "org.apache.catalina.webresources.WarResource(org.apache.catalina.webresources.AbstractArchiveResourceSet, java.lang.String, java.lang.String, java.util.jar.JarEntry)"], ["org.apache.catalina.webresources.WarResourceSet", "org.apache.catalina.webresources.WarResourceSet()"], ["org.apache.catalina.webresources.WarResourceSet", "org.apache.catalina.webresources.WarResourceSet(org.apache.catalina.WebResourceRoot, java.lang.String, java.lang.String)"], ["org.apache.catalina.webresources.war.Handler", "org.apache.catalina.webresources.war.Handler()"], ["void", "org.apache.catalina.webresources.war.WarURLConnection.connect()"], ["java.io.InputStream", "org.apache.catalina.webresources.war.WarURLConnection.getInputStream()"], ["java.security.Permission", "org.apache.catalina.webresources.war.WarURLConnection.getPermission()"], ["long", "org.apache.catalina.webresources.war.WarURLConnection.getLastModified()"], ["int", "org.apache.catalina.webresources.war.WarURLConnection.getContentLength()"], ["long", "org.apache.catalina.webresources.war.WarURLConnection.getContentLengthLong()"], ["org.apache.coyote.AbstractProcessor", "org.apache.coyote.AbstractProcessor(org.apache.coyote.Adapter)"], ["org.apache.coyote.Request", "org.apache.coyote.AbstractProcessor.getRequest()"], ["org.apache.coyote.Adapter", "org.apache.coyote.AbstractProcessor.getAdapter()"], ["void", "org.apache.coyote.AbstractProcessor.setSslSupport(org.apache.tomcat.util.net.SSLSupport)"], ["boolean", "org.apache.coyote.AbstractProcessor.isAsync()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.AbstractProcessor.asyncPostProcess()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.AbstractProcessor.dispatch(org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.AbstractProcessor.action(org.apache.coyote.ActionCode, java.lang.Object)"], ["void", "org.apache.coyote.AbstractProcessor.timeoutAsync(long)"], ["boolean", "org.apache.coyote.AbstractProcessor.checkAsyncTimeoutGeneration()"], ["void", "org.apache.coyote.AbstractProcessor.setAsyncTimeout(long)"], ["long", "org.apache.coyote.AbstractProcessor.getAsyncTimeout()"], ["void", "org.apache.coyote.AbstractProcessor.recycle()"], ["org.apache.coyote.UpgradeToken", "org.apache.coyote.AbstractProcessor.getUpgradeToken()"], ["java.nio.ByteBuffer", "org.apache.coyote.AbstractProcessor.getLeftoverInput()"], ["boolean", "org.apache.coyote.AbstractProcessor.isUpgrade()"], ["org.apache.coyote.AbstractProcessorLight", "org.apache.coyote.AbstractProcessorLight()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.AbstractProcessorLight.process(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.AbstractProcessorLight.addDispatch(org.apache.tomcat.util.net.DispatchType)"], ["void", "org.apache.coyote.AbstractProtocol$1.run()"], ["void", "org.apache.coyote.AbstractProtocol$2.run()"], ["org.apache.coyote.AbstractProtocol$ConnectionHandler", "org.apache.coyote.AbstractProtocol$ConnectionHandler(org.apache.coyote.AbstractProtocol<S>)"], ["java.lang.Object", "org.apache.coyote.AbstractProtocol$ConnectionHandler.getGlobal()"], ["void", "org.apache.coyote.AbstractProtocol$ConnectionHandler.recycle()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.AbstractProtocol$ConnectionHandler.process(org.apache.tomcat.util.net.SocketWrapperBase<S>, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.AbstractProtocol$ConnectionHandler.release(org.apache.tomcat.util.net.SocketWrapperBase<S>)"], ["void", "org.apache.coyote.AbstractProtocol$ConnectionHandler.pause()"], ["org.apache.coyote.AbstractProtocol$RecycledProcessors", "org.apache.coyote.AbstractProtocol$RecycledProcessors(org.apache.coyote.AbstractProtocol$ConnectionHandler<?>)"], ["boolean", "org.apache.coyote.AbstractProtocol$RecycledProcessors.push(org.apache.coyote.Processor)"], ["org.apache.coyote.Processor", "org.apache.coyote.AbstractProtocol$RecycledProcessors.pop()"], ["synchronized", "org.apache.coyote.AbstractProtocol$RecycledProcessors.void clear()"], ["java.lang.Object", "org.apache.coyote.AbstractProtocol$RecycledProcessors.pop()"], ["boolean", "org.apache.coyote.AbstractProtocol$RecycledProcessors.push(java.lang.Object)"], ["org.apache.coyote.AbstractProtocol", "org.apache.coyote.AbstractProtocol(org.apache.tomcat.util.net.AbstractEndpoint<S, ?>)"], ["boolean", "org.apache.coyote.AbstractProtocol.setProperty(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.coyote.AbstractProtocol.getProperty(java.lang.String)"], ["void", "org.apache.coyote.AbstractProtocol.setAdapter(org.apache.coyote.Adapter)"], ["org.apache.coyote.Adapter", "org.apache.coyote.AbstractProtocol.getAdapter()"], ["int", "org.apache.coyote.AbstractProtocol.getProcessorCache()"], ["void", "org.apache.coyote.AbstractProtocol.setProcessorCache(int)"], ["java.lang.String", "org.apache.coyote.AbstractProtocol.getClientCertProvider()"], ["void", "org.apache.coyote.AbstractProtocol.setClientCertProvider(java.lang.String)"], ["int", "org.apache.coyote.AbstractProtocol.getMaxHeaderCount()"], ["void", "org.apache.coyote.AbstractProtocol.setMaxHeaderCount(int)"], ["boolean", "org.apache.coyote.AbstractProtocol.isAprRequired()"], ["boolean", "org.apache.coyote.AbstractProtocol.isSendfileSupported()"], ["java.util.concurrent.Executor", "org.apache.coyote.AbstractProtocol.getExecutor()"], ["void", "org.apache.coyote.AbstractProtocol.setExecutor(java.util.concurrent.Executor)"], ["java.util.concurrent.ScheduledExecutorService", "org.apache.coyote.AbstractProtocol.getUtilityExecutor()"], ["void", "org.apache.coyote.AbstractProtocol.setUtilityExecutor(java.util.concurrent.ScheduledExecutorService)"], ["int", "org.apache.coyote.AbstractProtocol.getMaxThreads()"], ["void", "org.apache.coyote.AbstractProtocol.setMaxThreads(int)"], ["int", "org.apache.coyote.AbstractProtocol.getMaxConnections()"], ["void", "org.apache.coyote.AbstractProtocol.setMaxConnections(int)"], ["int", "org.apache.coyote.AbstractProtocol.getMinSpareThreads()"], ["void", "org.apache.coyote.AbstractProtocol.setMinSpareThreads(int)"], ["int", "org.apache.coyote.AbstractProtocol.getThreadPriority()"], ["void", "org.apache.coyote.AbstractProtocol.setThreadPriority(int)"], ["int", "org.apache.coyote.AbstractProtocol.getAcceptCount()"], ["void", "org.apache.coyote.AbstractProtocol.setAcceptCount(int)"], ["boolean", "org.apache.coyote.AbstractProtocol.getTcpNoDelay()"], ["void", "org.apache.coyote.AbstractProtocol.setTcpNoDelay(boolean)"], ["int", "org.apache.coyote.AbstractProtocol.getConnectionLinger()"], ["void", "org.apache.coyote.AbstractProtocol.setConnectionLinger(int)"], ["int", "org.apache.coyote.AbstractProtocol.getKeepAliveTimeout()"], ["void", "org.apache.coyote.AbstractProtocol.setKeepAliveTimeout(int)"], ["java.net.InetAddress", "org.apache.coyote.AbstractProtocol.getAddress()"], ["void", "org.apache.coyote.AbstractProtocol.setAddress(java.net.InetAddress)"], ["int", "org.apache.coyote.AbstractProtocol.getPort()"], ["void", "org.apache.coyote.AbstractProtocol.setPort(int)"], ["int", "org.apache.coyote.AbstractProtocol.getPortOffset()"], ["void", "org.apache.coyote.AbstractProtocol.setPortOffset(int)"], ["int", "org.apache.coyote.AbstractProtocol.getPortWithOffset()"], ["int", "org.apache.coyote.AbstractProtocol.getLocalPort()"], ["int", "org.apache.coyote.AbstractProtocol.getConnectionTimeout()"], ["void", "org.apache.coyote.AbstractProtocol.setConnectionTimeout(int)"], ["long", "org.apache.coyote.AbstractProtocol.getConnectionCount()"], ["void", "org.apache.coyote.AbstractProtocol.setAcceptorThreadCount(int)"], ["int", "org.apache.coyote.AbstractProtocol.getAcceptorThreadCount()"], ["void", "org.apache.coyote.AbstractProtocol.setAcceptorThreadPriority(int)"], ["int", "org.apache.coyote.AbstractProtocol.getAcceptorThreadPriority()"], ["synchronized", "org.apache.coyote.AbstractProtocol.int getNameIndex()"], ["java.lang.String", "org.apache.coyote.AbstractProtocol.getName()"], ["void", "org.apache.coyote.AbstractProtocol.addWaitingProcessor(org.apache.coyote.Processor)"], ["void", "org.apache.coyote.AbstractProtocol.removeWaitingProcessor(org.apache.coyote.Processor)"], ["javax.management.ObjectName", "org.apache.coyote.AbstractProtocol.getObjectName()"], ["java.lang.String", "org.apache.coyote.AbstractProtocol.getDomain()"], ["javax.management.ObjectName", "org.apache.coyote.AbstractProtocol.preRegister(javax.management.MBeanServer, javax.management.ObjectName)"], ["void", "org.apache.coyote.AbstractProtocol.postRegister(java.lang.Boolean)"], ["void", "org.apache.coyote.AbstractProtocol.preDeregister()"], ["void", "org.apache.coyote.AbstractProtocol.postDeregister()"], ["void", "org.apache.coyote.AbstractProtocol.init()"], ["void", "org.apache.coyote.AbstractProtocol.start()"], ["void", "org.apache.coyote.AbstractProtocol.pause()"], ["boolean", "org.apache.coyote.AbstractProtocol.isPaused()"], ["void", "org.apache.coyote.AbstractProtocol.resume()"], ["void", "org.apache.coyote.AbstractProtocol.stop()"], ["void", "org.apache.coyote.AbstractProtocol.destroy()"], ["void", "org.apache.coyote.AbstractProtocol.closeServerSocketGraceful()"], ["org.apache.coyote.ActionCode[]", "org.apache.coyote.ActionCode.values()"], ["org.apache.coyote.ActionCode", "org.apache.coyote.ActionCode.valueOf(java.lang.String)"], ["org.apache.coyote.AsyncStateMachine$AsyncState[]", "org.apache.coyote.AsyncStateMachine$AsyncState.values()"], ["org.apache.coyote.AsyncStateMachine$AsyncState", "org.apache.coyote.AsyncStateMachine$AsyncState.valueOf(java.lang.String)"], ["org.apache.coyote.CloseNowException", "org.apache.coyote.CloseNowException()"], ["org.apache.coyote.CloseNowException", "org.apache.coyote.CloseNowException(java.lang.String, java.lang.Throwable)"], ["org.apache.coyote.CloseNowException", "org.apache.coyote.CloseNowException(java.lang.String)"], ["org.apache.coyote.CloseNowException", "org.apache.coyote.CloseNowException(java.lang.Throwable)"], ["org.apache.coyote.CompressionConfig", "org.apache.coyote.CompressionConfig()"], ["void", "org.apache.coyote.CompressionConfig.setCompression(java.lang.String)"], ["java.lang.String", "org.apache.coyote.CompressionConfig.getCompression()"], ["int", "org.apache.coyote.CompressionConfig.getCompressionLevel()"], ["java.lang.String", "org.apache.coyote.CompressionConfig.getNoCompressionUserAgents()"], ["java.util.regex.Pattern", "org.apache.coyote.CompressionConfig.getNoCompressionUserAgentsPattern()"], ["void", "org.apache.coyote.CompressionConfig.setNoCompressionUserAgents(java.lang.String)"], ["java.lang.String", "org.apache.coyote.CompressionConfig.getCompressibleMimeType()"], ["void", "org.apache.coyote.CompressionConfig.setCompressibleMimeType(java.lang.String)"], ["java.lang.String[]", "org.apache.coyote.CompressionConfig.getCompressibleMimeTypes()"], ["int", "org.apache.coyote.CompressionConfig.getCompressionMinSize()"], ["void", "org.apache.coyote.CompressionConfig.setCompressionMinSize(int)"], ["boolean", "org.apache.coyote.CompressionConfig.getNoCompressionStrongETag()"], ["void", "org.apache.coyote.CompressionConfig.setNoCompressionStrongETag(boolean)"], ["boolean", "org.apache.coyote.CompressionConfig.useCompression(org.apache.coyote.Request, org.apache.coyote.Response)"], ["org.apache.coyote.Constants", "org.apache.coyote.Constants()"], ["org.apache.coyote.ContainerThreadMarker", "org.apache.coyote.ContainerThreadMarker()"], ["boolean", "org.apache.coyote.ContainerThreadMarker.isContainerThread()"], ["void", "org.apache.coyote.ContainerThreadMarker.set()"], ["void", "org.apache.coyote.ContainerThreadMarker.clear()"], ["org.apache.coyote.ErrorState[]", "org.apache.coyote.ErrorState.values()"], ["org.apache.coyote.ErrorState", "org.apache.coyote.ErrorState.valueOf(java.lang.String)"], ["boolean", "org.apache.coyote.ErrorState.isError()"], ["org.apache.coyote.ErrorState", "org.apache.coyote.ErrorState.getMostSevere(org.apache.coyote.ErrorState)"], ["boolean", "org.apache.coyote.ErrorState.isIoAllowed()"], ["boolean", "org.apache.coyote.ErrorState.isConnectionIoAllowed()"], ["org.apache.coyote.ProtocolException", "org.apache.coyote.ProtocolException()"], ["org.apache.coyote.ProtocolException", "org.apache.coyote.ProtocolException(java.lang.String, java.lang.Throwable)"], ["org.apache.coyote.ProtocolException", "org.apache.coyote.ProtocolException(java.lang.String)"], ["org.apache.coyote.ProtocolException", "org.apache.coyote.ProtocolException(java.lang.Throwable)"], ["default", "org.apache.coyote.ProtocolHandler.int getDesiredBufferSize()"], ["org.apache.coyote.ProtocolHandler", "org.apache.coyote.ProtocolHandler.create(java.lang.String, boolean)"], ["org.apache.coyote.Request", "org.apache.coyote.Request()"], ["javax.servlet.ReadListener", "org.apache.coyote.Request.getReadListener()"], ["void", "org.apache.coyote.Request.setReadListener(javax.servlet.ReadListener)"], ["boolean", "org.apache.coyote.Request.sendAllDataReadEvent()"], ["org.apache.tomcat.util.http.MimeHeaders", "org.apache.coyote.Request.getMimeHeaders()"], ["boolean", "org.apache.coyote.Request.isTrailerFieldsReady()"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.coyote.Request.getTrailerFields()"], ["org.apache.tomcat.util.buf.UDecoder", "org.apache.coyote.Request.getURLDecoder()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.scheme()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.method()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.requestURI()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.decodedURI()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.queryString()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.protocol()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.serverName()"], ["int", "org.apache.coyote.Request.getServerPort()"], ["void", "org.apache.coyote.Request.setServerPort(int)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.remoteAddr()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.remoteHost()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.localName()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.localAddr()"], ["int", "org.apache.coyote.Request.getRemotePort()"], ["void", "org.apache.coyote.Request.setRemotePort(int)"], ["int", "org.apache.coyote.Request.getLocalPort()"], ["void", "org.apache.coyote.Request.setLocalPort(int)"], ["java.lang.String", "org.apache.coyote.Request.getCharacterEncoding()"], ["java.nio.charset.Charset", "org.apache.coyote.Request.getCharset()"], ["void", "org.apache.coyote.Request.setCharset(java.nio.charset.Charset)"], ["void", "org.apache.coyote.Request.setContentLength(long)"], ["int", "org.apache.coyote.Request.getContentLength()"], ["long", "org.apache.coyote.Request.getContentLengthLong()"], ["java.lang.String", "org.apache.coyote.Request.getContentType()"], ["void", "org.apache.coyote.Request.setContentType(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.contentType()"], ["void", "org.apache.coyote.Request.setContentType(org.apache.tomcat.util.buf.MessageBytes)"], ["java.lang.String", "org.apache.coyote.Request.getHeader(java.lang.String)"], ["void", "org.apache.coyote.Request.setExpectation(boolean)"], ["boolean", "org.apache.coyote.Request.hasExpectation()"], ["org.apache.coyote.Response", "org.apache.coyote.Request.getResponse()"], ["void", "org.apache.coyote.Request.setResponse(org.apache.coyote.Response)"], ["void", "org.apache.coyote.Request.action(org.apache.coyote.ActionCode, java.lang.Object)"], ["org.apache.tomcat.util.http.ServerCookies", "org.apache.coyote.Request.getCookies()"], ["org.apache.tomcat.util.http.Parameters", "org.apache.coyote.Request.getParameters()"], ["void", "org.apache.coyote.Request.addPathParameter(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.coyote.Request.getPathParameter(java.lang.String)"], ["void", "org.apache.coyote.Request.setAttribute(java.lang.String, java.lang.Object)"], ["java.util.HashMap<java.lang.String, java.lang.Object>", "org.apache.coyote.Request.getAttributes()"], ["java.lang.Object", "org.apache.coyote.Request.getAttribute(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.getRemoteUser()"], ["boolean", "org.apache.coyote.Request.getRemoteUserNeedsAuthorization()"], ["void", "org.apache.coyote.Request.setRemoteUserNeedsAuthorization(boolean)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.coyote.Request.getAuthType()"], ["int", "org.apache.coyote.Request.getAvailable()"], ["void", "org.apache.coyote.Request.setAvailable(int)"], ["boolean", "org.apache.coyote.Request.getSendfile()"], ["void", "org.apache.coyote.Request.setSendfile(boolean)"], ["boolean", "org.apache.coyote.Request.isFinished()"], ["boolean", "org.apache.coyote.Request.getSupportsRelativeRedirects()"], ["org.apache.coyote.InputBuffer", "org.apache.coyote.Request.getInputBuffer()"], ["void", "org.apache.coyote.Request.setInputBuffer(org.apache.coyote.InputBuffer)"], ["int", "org.apache.coyote.Request.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["java.lang.String", "org.apache.coyote.Request.toString()"], ["long", "org.apache.coyote.Request.getStartTime()"], ["void", "org.apache.coyote.Request.setStartTime(long)"], ["void", "org.apache.coyote.Request.setNote(int, java.lang.Object)"], ["java.lang.Object", "org.apache.coyote.Request.getNote(int)"], ["void", "org.apache.coyote.Request.recycle()"], ["void", "org.apache.coyote.Request.updateCounters()"], ["org.apache.coyote.RequestInfo", "org.apache.coyote.Request.getRequestProcessor()"], ["long", "org.apache.coyote.Request.getBytesRead()"], ["boolean", "org.apache.coyote.Request.isProcessing()"], ["org.apache.coyote.RequestGroupInfo", "org.apache.coyote.RequestGroupInfo()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void addRequestProcessor(org.apache.coyote.RequestInfo)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void removeRequestProcessor(org.apache.coyote.RequestInfo)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.long getMaxTime()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setMaxTime(long)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.long getProcessingTime()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setProcessingTime(long)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.int getRequestCount()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setRequestCount(int)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.int getErrorCount()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setErrorCount(int)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.long getBytesReceived()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setBytesReceived(long)"], ["synchronized", "org.apache.coyote.RequestGroupInfo.long getBytesSent()"], ["synchronized", "org.apache.coyote.RequestGroupInfo.void setBytesSent(long)"], ["void", "org.apache.coyote.RequestGroupInfo.resetCounters()"], ["org.apache.coyote.RequestInfo", "org.apache.coyote.RequestInfo(org.apache.coyote.Request)"], ["org.apache.coyote.RequestGroupInfo", "org.apache.coyote.RequestInfo.getGlobalProcessor()"], ["void", "org.apache.coyote.RequestInfo.setGlobalProcessor(org.apache.coyote.RequestGroupInfo)"], ["java.lang.String", "org.apache.coyote.RequestInfo.getMethod()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getCurrentUri()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getCurrentQueryString()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getProtocol()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getVirtualHost()"], ["int", "org.apache.coyote.RequestInfo.getServerPort()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getRemoteAddr()"], ["java.lang.String", "org.apache.coyote.RequestInfo.getRemoteAddrForwarded()"], ["int", "org.apache.coyote.RequestInfo.getContentLength()"], ["long", "org.apache.coyote.RequestInfo.getRequestBytesReceived()"], ["long", "org.apache.coyote.RequestInfo.getRequestBytesSent()"], ["long", "org.apache.coyote.RequestInfo.getRequestProcessingTime()"], ["int", "org.apache.coyote.RequestInfo.getStage()"], ["void", "org.apache.coyote.RequestInfo.setStage(int)"], ["long", "org.apache.coyote.RequestInfo.getBytesSent()"], ["void", "org.apache.coyote.RequestInfo.setBytesSent(long)"], ["long", "org.apache.coyote.RequestInfo.getBytesReceived()"], ["void", "org.apache.coyote.RequestInfo.setBytesReceived(long)"], ["long", "org.apache.coyote.RequestInfo.getProcessingTime()"], ["void", "org.apache.coyote.RequestInfo.setProcessingTime(long)"], ["long", "org.apache.coyote.RequestInfo.getMaxTime()"], ["void", "org.apache.coyote.RequestInfo.setMaxTime(long)"], ["java.lang.String", "org.apache.coyote.RequestInfo.getMaxRequestUri()"], ["void", "org.apache.coyote.RequestInfo.setMaxRequestUri(java.lang.String)"], ["int", "org.apache.coyote.RequestInfo.getRequestCount()"], ["void", "org.apache.coyote.RequestInfo.setRequestCount(int)"], ["int", "org.apache.coyote.RequestInfo.getErrorCount()"], ["void", "org.apache.coyote.RequestInfo.setErrorCount(int)"], ["java.lang.String", "org.apache.coyote.RequestInfo.getWorkerThreadName()"], ["javax.management.ObjectName", "org.apache.coyote.RequestInfo.getRpName()"], ["long", "org.apache.coyote.RequestInfo.getLastRequestProcessingTime()"], ["void", "org.apache.coyote.RequestInfo.setWorkerThreadName(java.lang.String)"], ["void", "org.apache.coyote.RequestInfo.setRpName(javax.management.ObjectName)"], ["void", "org.apache.coyote.RequestInfo.setLastRequestProcessingTime(long)"], ["org.apache.coyote.Response", "org.apache.coyote.Response()"], ["org.apache.coyote.Request", "org.apache.coyote.Response.getRequest()"], ["void", "org.apache.coyote.Response.setRequest(org.apache.coyote.Request)"], ["void", "org.apache.coyote.Response.setOutputBuffer(org.apache.coyote.OutputBuffer)"], ["org.apache.tomcat.util.http.MimeHeaders", "org.apache.coyote.Response.getMimeHeaders()"], ["void", "org.apache.coyote.Response.setNote(int, java.lang.Object)"], ["java.lang.Object", "org.apache.coyote.Response.getNote(int)"], ["void", "org.apache.coyote.Response.action(org.apache.coyote.ActionCode, java.lang.Object)"], ["int", "org.apache.coyote.Response.getStatus()"], ["void", "org.apache.coyote.Response.setStatus(int)"], ["java.lang.String", "org.apache.coyote.Response.getMessage()"], ["void", "org.apache.coyote.Response.setMessage(java.lang.String)"], ["boolean", "org.apache.coyote.Response.isCommitted()"], ["void", "org.apache.coyote.Response.setCommitted(boolean)"], ["long", "org.apache.coyote.Response.getCommitTime()"], ["void", "org.apache.coyote.Response.setErrorException(java.lang.Exception)"], ["java.lang.Exception", "org.apache.coyote.Response.getErrorException()"], ["boolean", "org.apache.coyote.Response.isExceptionPresent()"], ["boolean", "org.apache.coyote.Response.setError()"], ["boolean", "org.apache.coyote.Response.isError()"], ["boolean", "org.apache.coyote.Response.isErrorReportRequired()"], ["boolean", "org.apache.coyote.Response.setErrorReported()"], ["void", "org.apache.coyote.Response.reset()"], ["boolean", "org.apache.coyote.Response.containsHeader(java.lang.String)"], ["void", "org.apache.coyote.Response.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.coyote.Response.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.coyote.Response.addHeader(java.lang.String, java.lang.String, java.nio.charset.Charset)"], ["void", "org.apache.coyote.Response.setTrailerFields(java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>)"], ["java.util.function.Supplier<java.util.Map<java.lang.String, java.lang.String>>", "org.apache.coyote.Response.getTrailerFields()"], ["void", "org.apache.coyote.Response.sendHeaders()"], ["java.util.Locale", "org.apache.coyote.Response.getLocale()"], ["void", "org.apache.coyote.Response.setLocale(java.util.Locale)"], ["java.lang.String", "org.apache.coyote.Response.getContentLanguage()"], ["void", "org.apache.coyote.Response.setCharacterEncoding(java.lang.String)"], ["java.nio.charset.Charset", "org.apache.coyote.Response.getCharset()"], ["java.lang.String", "org.apache.coyote.Response.getCharacterEncoding()"], ["void", "org.apache.coyote.Response.setContentType(java.lang.String)"], ["void", "org.apache.coyote.Response.setContentTypeNoCharset(java.lang.String)"], ["java.lang.String", "org.apache.coyote.Response.getContentType()"], ["void", "org.apache.coyote.Response.setContentLength(long)"], ["int", "org.apache.coyote.Response.getContentLength()"], ["long", "org.apache.coyote.Response.getContentLengthLong()"], ["void", "org.apache.coyote.Response.doWrite(java.nio.ByteBuffer)"], ["void", "org.apache.coyote.Response.recycle()"], ["long", "org.apache.coyote.Response.getContentWritten()"], ["long", "org.apache.coyote.Response.getBytesWritten(boolean)"], ["javax.servlet.WriteListener", "org.apache.coyote.Response.getWriteListener()"], ["void", "org.apache.coyote.Response.setWriteListener(javax.servlet.WriteListener)"], ["boolean", "org.apache.coyote.Response.isReady()"], ["boolean", "org.apache.coyote.Response.checkRegisterForWrite()"], ["void", "org.apache.coyote.Response.onWritePossible()"], ["default", "org.apache.coyote.UpgradeProtocol.void setHttp11Protocol(org.apache.coyote.AbstractProtocol<?>)"], ["org.apache.coyote.UpgradeToken", "org.apache.coyote.UpgradeToken(javax.servlet.http.HttpUpgradeHandler, org.apache.tomcat.ContextBind, org.apache.tomcat.InstanceManager)"], ["org.apache.tomcat.ContextBind", "org.apache.coyote.UpgradeToken.getContextBind()"], ["javax.servlet.http.HttpUpgradeHandler", "org.apache.coyote.UpgradeToken.getHttpUpgradeHandler()"], ["org.apache.tomcat.InstanceManager", "org.apache.coyote.UpgradeToken.getInstanceManager()"], ["org.apache.coyote.ajp.AbstractAjpProtocol", "org.apache.coyote.ajp.AbstractAjpProtocol(org.apache.tomcat.util.net.AbstractEndpoint<S, ?>)"], ["boolean", "org.apache.coyote.ajp.AbstractAjpProtocol.getAjpFlush()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setAjpFlush(boolean)"], ["boolean", "org.apache.coyote.ajp.AbstractAjpProtocol.getTomcatAuthentication()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setTomcatAuthentication(boolean)"], ["boolean", "org.apache.coyote.ajp.AbstractAjpProtocol.getTomcatAuthorization()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setTomcatAuthorization(boolean)"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setSecret(java.lang.String)"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setRequiredSecret(java.lang.String)"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setSecretRequired(boolean)"], ["boolean", "org.apache.coyote.ajp.AbstractAjpProtocol.getSecretRequired()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setAllowedRequestAttributesPattern(java.lang.String)"], ["java.lang.String", "org.apache.coyote.ajp.AbstractAjpProtocol.getAllowedRequestAttributesPattern()"], ["int", "org.apache.coyote.ajp.AbstractAjpProtocol.getPacketSize()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.setPacketSize(int)"], ["int", "org.apache.coyote.ajp.AbstractAjpProtocol.getDesiredBufferSize()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig)"], ["org.apache.tomcat.util.net.SSLHostConfig[]", "org.apache.coyote.ajp.AbstractAjpProtocol.findSslHostConfigs()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.addUpgradeProtocol(org.apache.coyote.UpgradeProtocol)"], ["org.apache.coyote.UpgradeProtocol[]", "org.apache.coyote.ajp.AbstractAjpProtocol.findUpgradeProtocols()"], ["void", "org.apache.coyote.ajp.AbstractAjpProtocol.start()"], ["boolean", "org.apache.coyote.ajp.AjpAprProtocol.isAprRequired()"], ["org.apache.coyote.ajp.AjpAprProtocol", "org.apache.coyote.ajp.AjpAprProtocol()"], ["int", "org.apache.coyote.ajp.AjpAprProtocol.getPollTime()"], ["void", "org.apache.coyote.ajp.AjpAprProtocol.setPollTime(int)"], ["org.apache.coyote.ajp.AjpMessage", "org.apache.coyote.ajp.AjpMessage(int)"], ["void", "org.apache.coyote.ajp.AjpMessage.reset()"], ["void", "org.apache.coyote.ajp.AjpMessage.end()"], ["byte[]", "org.apache.coyote.ajp.AjpMessage.getBuffer()"], ["int", "org.apache.coyote.ajp.AjpMessage.getLen()"], ["void", "org.apache.coyote.ajp.AjpMessage.appendInt(int)"], ["void", "org.apache.coyote.ajp.AjpMessage.appendByte(int)"], ["void", "org.apache.coyote.ajp.AjpMessage.appendBytes(org.apache.tomcat.util.buf.MessageBytes)"], ["void", "org.apache.coyote.ajp.AjpMessage.appendByteChunk(org.apache.tomcat.util.buf.ByteChunk)"], ["void", "org.apache.coyote.ajp.AjpMessage.appendBytes(byte[], int, int)"], ["void", "org.apache.coyote.ajp.AjpMessage.appendBytes(java.nio.ByteBuffer)"], ["int", "org.apache.coyote.ajp.AjpMessage.getInt()"], ["int", "org.apache.coyote.ajp.AjpMessage.peekInt()"], ["byte", "org.apache.coyote.ajp.AjpMessage.getByte()"], ["void", "org.apache.coyote.ajp.AjpMessage.getBytes(org.apache.tomcat.util.buf.MessageBytes)"], ["void", "org.apache.coyote.ajp.AjpMessage.getBodyBytes(org.apache.tomcat.util.buf.MessageBytes)"], ["int", "org.apache.coyote.ajp.AjpMessage.getLongInt()"], ["int", "org.apache.coyote.ajp.AjpMessage.processHeader(boolean)"], ["org.apache.coyote.ajp.AjpNio2Protocol", "org.apache.coyote.ajp.AjpNio2Protocol()"], ["org.apache.coyote.ajp.AjpNioProtocol", "org.apache.coyote.ajp.AjpNioProtocol()"], ["int", "org.apache.coyote.ajp.AjpProcessor$SocketInputBuffer.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["int", "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer.getBytesWritten()"], ["org.apache.coyote.ajp.AjpProcessor", "org.apache.coyote.ajp.AjpProcessor(org.apache.coyote.ajp.AbstractAjpProtocol<?>, org.apache.coyote.Adapter)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.ajp.AjpProcessor.service(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["void", "org.apache.coyote.ajp.AjpProcessor.recycle()"], ["void", "org.apache.coyote.ajp.AjpProcessor.pause()"], ["org.apache.coyote.ajp.Constants", "org.apache.coyote.ajp.Constants()"], ["java.lang.String", "org.apache.coyote.ajp.Constants.getMethodForCode(int)"], ["java.lang.String", "org.apache.coyote.ajp.Constants.getHeaderForCode(int)"], ["java.lang.String", "org.apache.coyote.ajp.Constants.getResponseHeaderForCode(int)"], ["int", "org.apache.coyote.ajp.Constants.getResponseAjpIndex(java.lang.String)"], ["org.apache.coyote.http11.AbstractHttp11JsseProtocol", "org.apache.coyote.http11.AbstractHttp11JsseProtocol(org.apache.tomcat.util.net.AbstractJsseEndpoint<S, ?>)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11JsseProtocol.getSslImplementationName()"], ["void", "org.apache.coyote.http11.AbstractHttp11JsseProtocol.setSslImplementationName(java.lang.String)"], ["int", "org.apache.coyote.http11.AbstractHttp11JsseProtocol.getSniParseLimit()"], ["void", "org.apache.coyote.http11.AbstractHttp11JsseProtocol.setSniParseLimit(int)"], ["org.apache.coyote.http11.AbstractHttp11Protocol", "org.apache.coyote.http11.AbstractHttp11Protocol(org.apache.tomcat.util.net.AbstractEndpoint<S, ?>)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.init()"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getUseKeepAliveResponseHeader()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setUseKeepAliveResponseHeader(boolean)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getRelaxedPathChars()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setRelaxedPathChars(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getRelaxedQueryChars()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setRelaxedQueryChars(java.lang.String)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getAllowHostHeaderMismatch()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setAllowHostHeaderMismatch(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getRejectIllegalHeader()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setRejectIllegalHeader(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getRejectIllegalHeaderName()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setRejectIllegalHeaderName(boolean)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxSavePostSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxSavePostSize(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxHttpHeaderSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxHttpHeaderSize(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getConnectionUploadTimeout()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setConnectionUploadTimeout(int)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getDisableUploadTimeout()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setDisableUploadTimeout(boolean)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setCompression(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getCompression()"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getNoCompressionUserAgents()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setNoCompressionUserAgents(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getCompressibleMimeType()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setCompressibleMimeType(java.lang.String)"], ["java.lang.String[]", "org.apache.coyote.http11.AbstractHttp11Protocol.getCompressibleMimeTypes()"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getCompressionMinSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setCompressionMinSize(int)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getNoCompressionStrongETag()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setNoCompressionStrongETag(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.useCompression(org.apache.coyote.Request, org.apache.coyote.Response)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getRestrictedUserAgents()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setRestrictedUserAgents(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getServer()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setServer(java.lang.String)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getServerRemoveAppProvidedValues()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setServerRemoveAppProvidedValues(boolean)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxTrailerSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxTrailerSize(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxExtensionSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxExtensionSize(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxSwallowSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxSwallowSize(int)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getSecure()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSecure(boolean)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setAllowedTrailerHeaders(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getAllowedTrailerHeaders()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.addAllowedTrailerHeader(java.lang.String)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.removeAllowedTrailerHeader(java.lang.String)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.addUpgradeProtocol(org.apache.coyote.UpgradeProtocol)"], ["org.apache.coyote.UpgradeProtocol[]", "org.apache.coyote.http11.AbstractHttp11Protocol.findUpgradeProtocols()"], ["org.apache.coyote.UpgradeProtocol", "org.apache.coyote.http11.AbstractHttp11Protocol.getNegotiatedProtocol(java.lang.String)"], ["org.apache.coyote.UpgradeProtocol", "org.apache.coyote.http11.AbstractHttp11Protocol.getUpgradeProtocol(java.lang.String)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.isSSLEnabled()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLEnabled(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getUseSendfile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setUseSendfile(boolean)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getMaxKeepAliveRequests()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setMaxKeepAliveRequests(int)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getDefaultSSLHostConfigName()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setDefaultSSLHostConfigName(java.lang.String)"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig)"], ["org.apache.tomcat.util.net.SSLHostConfig[]", "org.apache.coyote.http11.AbstractHttp11Protocol.findSslHostConfigs()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.reloadSslHostConfigs()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.reloadSslHostConfig(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSslEnabledProtocols()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSslEnabledProtocols(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLProtocol()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLProtocol(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeystoreFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeystoreFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCertificateChainFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCertificateChainFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCertificateFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCertificateFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCertificateKeyFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCertificateKeyFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getAlgorithm()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getClientAuth()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setClientAuth(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLVerifyClient()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLVerifyClient(java.lang.String)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getTrustMaxCertLength()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTrustMaxCertLength(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLVerifyDepth()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLVerifyDepth(int)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getUseServerCipherSuitesOrder()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setUseServerCipherSuitesOrder(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLHonorCipherOrder()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLHonorCipherOrder(boolean)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getCiphers()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setCiphers(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCipherSuite()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCipherSuite(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeystorePass()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeystorePass(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeyPass()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeyPass(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLPassword()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLPassword(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getCrlFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setCrlFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCARevocationFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCARevocationFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCARevocationPath()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCARevocationPath(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeystoreType()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeystoreType(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeystoreProvider()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeystoreProvider(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getKeyAlias()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setKeyAlias(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTruststoreAlgorithm()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTruststoreAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTruststoreFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTruststoreFile(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTruststorePass()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTruststorePass(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTruststoreType()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTruststoreType(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTruststoreProvider()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTruststoreProvider(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSslProtocol()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSslProtocol(java.lang.String)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getSessionCacheSize()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSessionCacheSize(int)"], ["int", "org.apache.coyote.http11.AbstractHttp11Protocol.getSessionTimeout()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSessionTimeout(int)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCACertificatePath()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCACertificatePath(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLCACertificateFile()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLCACertificateFile(java.lang.String)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLDisableCompression()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLDisableCompression(boolean)"], ["boolean", "org.apache.coyote.http11.AbstractHttp11Protocol.getSSLDisableSessionTickets()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setSSLDisableSessionTickets(boolean)"], ["java.lang.String", "org.apache.coyote.http11.AbstractHttp11Protocol.getTrustManagerClassName()"], ["void", "org.apache.coyote.http11.AbstractHttp11Protocol.setTrustManagerClassName(java.lang.String)"], ["org.apache.coyote.http11.Constants", "org.apache.coyote.http11.Constants()"], ["org.apache.coyote.http11.HeadersTooLargeException", "org.apache.coyote.http11.HeadersTooLargeException()"], ["org.apache.coyote.http11.HeadersTooLargeException", "org.apache.coyote.http11.HeadersTooLargeException(java.lang.String, java.lang.Throwable)"], ["org.apache.coyote.http11.HeadersTooLargeException", "org.apache.coyote.http11.HeadersTooLargeException(java.lang.String)"], ["org.apache.coyote.http11.HeadersTooLargeException", "org.apache.coyote.http11.HeadersTooLargeException(java.lang.Throwable)"], ["org.apache.coyote.http11.Http11AprProtocol", "org.apache.coyote.http11.Http11AprProtocol()"], ["boolean", "org.apache.coyote.http11.Http11AprProtocol.isAprRequired()"], ["int", "org.apache.coyote.http11.Http11AprProtocol.getPollTime()"], ["void", "org.apache.coyote.http11.Http11AprProtocol.setPollTime(int)"], ["int", "org.apache.coyote.http11.Http11AprProtocol.getSendfileSize()"], ["void", "org.apache.coyote.http11.Http11AprProtocol.setSendfileSize(int)"], ["boolean", "org.apache.coyote.http11.Http11AprProtocol.getDeferAccept()"], ["void", "org.apache.coyote.http11.Http11AprProtocol.setDeferAccept(boolean)"], ["void", "org.apache.coyote.http11.Http11InputBuffer$HeaderParseData.recycle()"], ["org.apache.coyote.http11.Http11InputBuffer$HeaderParsePosition[]", "org.apache.coyote.http11.Http11InputBuffer$HeaderParsePosition.values()"], ["org.apache.coyote.http11.Http11InputBuffer$HeaderParsePosition", "org.apache.coyote.http11.Http11InputBuffer$HeaderParsePosition.valueOf(java.lang.String)"], ["org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus[]", "org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus.values()"], ["org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus", "org.apache.coyote.http11.Http11InputBuffer$HeaderParseStatus.valueOf(java.lang.String)"], ["int", "org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["org.apache.coyote.http11.Http11InputBuffer", "org.apache.coyote.http11.Http11InputBuffer(org.apache.coyote.Request, int, boolean, org.apache.tomcat.util.http.parser.HttpParser)"], ["int", "org.apache.coyote.http11.Http11InputBuffer.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.Http11InputBuffer.setByteBuffer(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.Http11InputBuffer.getByteBuffer()"], ["void", "org.apache.coyote.http11.Http11InputBuffer.expand(int)"], ["org.apache.coyote.http11.Http11Nio2Protocol", "org.apache.coyote.http11.Http11Nio2Protocol()"], ["org.apache.coyote.http11.Http11NioProtocol", "org.apache.coyote.http11.Http11NioProtocol()"], ["void", "org.apache.coyote.http11.Http11NioProtocol.setPollerThreadCount(int)"], ["int", "org.apache.coyote.http11.Http11NioProtocol.getPollerThreadCount()"], ["void", "org.apache.coyote.http11.Http11NioProtocol.setSelectorTimeout(long)"], ["long", "org.apache.coyote.http11.Http11NioProtocol.getSelectorTimeout()"], ["void", "org.apache.coyote.http11.Http11NioProtocol.setPollerThreadPriority(int)"], ["int", "org.apache.coyote.http11.Http11NioProtocol.getPollerThreadPriority()"], ["int", "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.getBytesWritten()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.end()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.addFilter(org.apache.coyote.http11.OutputFilter)"], ["org.apache.coyote.http11.OutputFilter[]", "org.apache.coyote.http11.Http11OutputBuffer.getFilters()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.addActiveFilter(org.apache.coyote.http11.OutputFilter)"], ["int", "org.apache.coyote.http11.Http11OutputBuffer.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.Http11OutputBuffer.getBytesWritten()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.flush()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.end()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.recycle()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.nextRequest()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.init(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.sendAck()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.sendStatus()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.sendHeader(org.apache.tomcat.util.buf.MessageBytes, org.apache.tomcat.util.buf.MessageBytes)"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.endHeaders()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.write(byte[])"], ["boolean", "org.apache.coyote.http11.Http11OutputBuffer.hasDataToWrite()"], ["void", "org.apache.coyote.http11.Http11OutputBuffer.registerWriteInterest()"], ["org.apache.coyote.http11.Http11Processor", "org.apache.coyote.http11.Http11Processor(org.apache.coyote.http11.AbstractHttp11Protocol<?>, org.apache.coyote.Adapter)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http11.Http11Processor.service(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["org.apache.coyote.UpgradeToken", "org.apache.coyote.http11.Http11Processor.getUpgradeToken()"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.Http11Processor.getLeftoverInput()"], ["boolean", "org.apache.coyote.http11.Http11Processor.isUpgrade()"], ["void", "org.apache.coyote.http11.Http11Processor.recycle()"], ["void", "org.apache.coyote.http11.Http11Processor.pause()"], ["org.apache.coyote.http11.filters.BufferedInputFilter", "org.apache.coyote.http11.filters.BufferedInputFilter()"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.setLimit(int)"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.setRequest(org.apache.coyote.Request)"], ["int", "org.apache.coyote.http11.filters.BufferedInputFilter.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.setBuffer(org.apache.coyote.InputBuffer)"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.recycle()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.coyote.http11.filters.BufferedInputFilter.getEncodingName()"], ["long", "org.apache.coyote.http11.filters.BufferedInputFilter.end()"], ["int", "org.apache.coyote.http11.filters.BufferedInputFilter.available()"], ["boolean", "org.apache.coyote.http11.filters.BufferedInputFilter.isFinished()"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.setByteBuffer(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.filters.BufferedInputFilter.getByteBuffer()"], ["void", "org.apache.coyote.http11.filters.BufferedInputFilter.expand(int)"], ["org.apache.coyote.http11.filters.ChunkedInputFilter", "org.apache.coyote.http11.filters.ChunkedInputFilter(int, java.util.Set<java.lang.String>, int, int)"], ["int", "org.apache.coyote.http11.filters.ChunkedInputFilter.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.filters.ChunkedInputFilter.setRequest(org.apache.coyote.Request)"], ["long", "org.apache.coyote.http11.filters.ChunkedInputFilter.end()"], ["int", "org.apache.coyote.http11.filters.ChunkedInputFilter.available()"], ["void", "org.apache.coyote.http11.filters.ChunkedInputFilter.setBuffer(org.apache.coyote.InputBuffer)"], ["void", "org.apache.coyote.http11.filters.ChunkedInputFilter.recycle()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.coyote.http11.filters.ChunkedInputFilter.getEncodingName()"], ["boolean", "org.apache.coyote.http11.filters.ChunkedInputFilter.isFinished()"], ["void", "org.apache.coyote.http11.filters.ChunkedInputFilter.setByteBuffer(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.filters.ChunkedInputFilter.getByteBuffer()"], ["void", "org.apache.coyote.http11.filters.ChunkedInputFilter.expand(int)"], ["org.apache.coyote.http11.filters.ChunkedOutputFilter", "org.apache.coyote.http11.filters.ChunkedOutputFilter()"], ["int", "org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.filters.ChunkedOutputFilter.getBytesWritten()"], ["void", "org.apache.coyote.http11.filters.ChunkedOutputFilter.setResponse(org.apache.coyote.Response)"], ["void", "org.apache.coyote.http11.filters.ChunkedOutputFilter.setBuffer(org.apache.coyote.http11.HttpOutputBuffer)"], ["void", "org.apache.coyote.http11.filters.ChunkedOutputFilter.flush()"], ["void", "org.apache.coyote.http11.filters.ChunkedOutputFilter.end()"], ["void", "org.apache.coyote.http11.filters.ChunkedOutputFilter.recycle()"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.write(int)"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.write(byte[], int, int)"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.flush()"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.close()"], ["org.apache.coyote.http11.filters.GzipOutputFilter", "org.apache.coyote.http11.filters.GzipOutputFilter()"], ["int", "org.apache.coyote.http11.filters.GzipOutputFilter.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.filters.GzipOutputFilter.getBytesWritten()"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter.flush()"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter.setResponse(org.apache.coyote.Response)"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter.setBuffer(org.apache.coyote.http11.HttpOutputBuffer)"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter.end()"], ["void", "org.apache.coyote.http11.filters.GzipOutputFilter.recycle()"], ["org.apache.coyote.http11.filters.IdentityInputFilter", "org.apache.coyote.http11.filters.IdentityInputFilter(int)"], ["int", "org.apache.coyote.http11.filters.IdentityInputFilter.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.filters.IdentityInputFilter.setRequest(org.apache.coyote.Request)"], ["long", "org.apache.coyote.http11.filters.IdentityInputFilter.end()"], ["int", "org.apache.coyote.http11.filters.IdentityInputFilter.available()"], ["void", "org.apache.coyote.http11.filters.IdentityInputFilter.setBuffer(org.apache.coyote.InputBuffer)"], ["void", "org.apache.coyote.http11.filters.IdentityInputFilter.recycle()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.coyote.http11.filters.IdentityInputFilter.getEncodingName()"], ["boolean", "org.apache.coyote.http11.filters.IdentityInputFilter.isFinished()"], ["void", "org.apache.coyote.http11.filters.IdentityInputFilter.setByteBuffer(java.nio.ByteBuffer)"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.filters.IdentityInputFilter.getByteBuffer()"], ["void", "org.apache.coyote.http11.filters.IdentityInputFilter.expand(int)"], ["org.apache.coyote.http11.filters.IdentityOutputFilter", "org.apache.coyote.http11.filters.IdentityOutputFilter()"], ["int", "org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.filters.IdentityOutputFilter.getBytesWritten()"], ["void", "org.apache.coyote.http11.filters.IdentityOutputFilter.setResponse(org.apache.coyote.Response)"], ["void", "org.apache.coyote.http11.filters.IdentityOutputFilter.setBuffer(org.apache.coyote.http11.HttpOutputBuffer)"], ["void", "org.apache.coyote.http11.filters.IdentityOutputFilter.flush()"], ["void", "org.apache.coyote.http11.filters.IdentityOutputFilter.end()"], ["void", "org.apache.coyote.http11.filters.IdentityOutputFilter.recycle()"], ["org.apache.coyote.http11.filters.SavedRequestInputFilter", "org.apache.coyote.http11.filters.SavedRequestInputFilter(org.apache.tomcat.util.buf.ByteChunk)"], ["int", "org.apache.coyote.http11.filters.SavedRequestInputFilter.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.filters.SavedRequestInputFilter.setRequest(org.apache.coyote.Request)"], ["void", "org.apache.coyote.http11.filters.SavedRequestInputFilter.recycle()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.coyote.http11.filters.SavedRequestInputFilter.getEncodingName()"], ["void", "org.apache.coyote.http11.filters.SavedRequestInputFilter.setBuffer(org.apache.coyote.InputBuffer)"], ["int", "org.apache.coyote.http11.filters.SavedRequestInputFilter.available()"], ["long", "org.apache.coyote.http11.filters.SavedRequestInputFilter.end()"], ["boolean", "org.apache.coyote.http11.filters.SavedRequestInputFilter.isFinished()"], ["org.apache.coyote.http11.filters.VoidInputFilter", "org.apache.coyote.http11.filters.VoidInputFilter()"], ["int", "org.apache.coyote.http11.filters.VoidInputFilter.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.coyote.http11.filters.VoidInputFilter.setRequest(org.apache.coyote.Request)"], ["void", "org.apache.coyote.http11.filters.VoidInputFilter.setBuffer(org.apache.coyote.InputBuffer)"], ["void", "org.apache.coyote.http11.filters.VoidInputFilter.recycle()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.coyote.http11.filters.VoidInputFilter.getEncodingName()"], ["long", "org.apache.coyote.http11.filters.VoidInputFilter.end()"], ["int", "org.apache.coyote.http11.filters.VoidInputFilter.available()"], ["boolean", "org.apache.coyote.http11.filters.VoidInputFilter.isFinished()"], ["org.apache.coyote.http11.filters.VoidOutputFilter", "org.apache.coyote.http11.filters.VoidOutputFilter()"], ["int", "org.apache.coyote.http11.filters.VoidOutputFilter.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http11.filters.VoidOutputFilter.getBytesWritten()"], ["void", "org.apache.coyote.http11.filters.VoidOutputFilter.setResponse(org.apache.coyote.Response)"], ["void", "org.apache.coyote.http11.filters.VoidOutputFilter.setBuffer(org.apache.coyote.http11.HttpOutputBuffer)"], ["void", "org.apache.coyote.http11.filters.VoidOutputFilter.flush()"], ["void", "org.apache.coyote.http11.filters.VoidOutputFilter.recycle()"], ["void", "org.apache.coyote.http11.filters.VoidOutputFilter.end()"], ["default", "org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler.boolean hasAsyncIO()"], ["org.apache.coyote.http11.upgrade.UpgradeProcessorBase", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase(org.apache.coyote.UpgradeToken)"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.isUpgrade()"], ["org.apache.coyote.UpgradeToken", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.getUpgradeToken()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.recycle()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.service(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.asyncPostProcess()"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.isAsync()"], ["org.apache.coyote.Request", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.getRequest()"], ["java.nio.ByteBuffer", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.getLeftoverInput()"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.checkAsyncTimeoutGeneration()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorBase.timeoutAsync(long)"], ["org.apache.coyote.http11.upgrade.UpgradeProcessorExternal", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.coyote.UpgradeToken)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.close()"], ["javax.servlet.ServletInputStream", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.getInputStream()"], ["javax.servlet.ServletOutputStream", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.getOutputStream()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.dispatch(org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.setSslSupport(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.pause()"], ["org.apache.coyote.http11.upgrade.UpgradeProcessorInternal", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.coyote.UpgradeToken)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.dispatch(org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.setSslSupport(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.pause()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.timeoutAsync(long)"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.hasAsyncIO()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.close()"], ["javax.servlet.ServletInputStream", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.getInputStream()"], ["javax.servlet.ServletOutputStream", "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.getOutputStream()"], ["org.apache.coyote.http11.upgrade.UpgradeServletInputStream", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream(org.apache.coyote.http11.upgrade.UpgradeProcessorBase, org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.isFinished()"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.isReady()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.setReadListener(javax.servlet.ReadListener)"], ["int", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.read()"], ["int", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.readLine(byte[], int, int)"], ["int", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.read(byte[], int, int)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletInputStream.close()"], ["org.apache.coyote.http11.upgrade.UpgradeServletOutputStream", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream(org.apache.coyote.http11.upgrade.UpgradeProcessorBase, org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["boolean", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.isReady()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.setWriteListener(javax.servlet.WriteListener)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.write(int)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.write(byte[], int, int)"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.flush()"], ["void", "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream.close()"], ["org.apache.coyote.http2.Constants", "org.apache.coyote.http2.Constants()"], ["org.apache.coyote.http2.FrameType[]", "org.apache.coyote.http2.FrameType.values()"], ["org.apache.coyote.http2.FrameType", "org.apache.coyote.http2.FrameType.valueOf(java.lang.String)"], ["org.apache.coyote.http2.HPackHuffman$HuffmanCode", "org.apache.coyote.http2.HPackHuffman$HuffmanCode(int, int)"], ["int", "org.apache.coyote.http2.HPackHuffman$HuffmanCode.getValue()"], ["int", "org.apache.coyote.http2.HPackHuffman$HuffmanCode.getLength()"], ["boolean", "org.apache.coyote.http2.HPackHuffman$HuffmanCode.equals(java.lang.Object)"], ["int", "org.apache.coyote.http2.HPackHuffman$HuffmanCode.hashCode()"], ["java.lang.String", "org.apache.coyote.http2.HPackHuffman$HuffmanCode.toString()"], ["org.apache.coyote.http2.HPackHuffman", "org.apache.coyote.http2.HPackHuffman()"], ["void", "org.apache.coyote.http2.HPackHuffman.decode(java.nio.ByteBuffer, int, java.lang.StringBuilder)"], ["boolean", "org.apache.coyote.http2.HPackHuffman.encode(java.nio.ByteBuffer, java.lang.String, boolean)"], ["void", "org.apache.coyote.http2.HeaderSink.emitHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.coyote.http2.HeaderSink.validateHeaders()"], ["void", "org.apache.coyote.http2.HeaderSink.setHeaderException(org.apache.coyote.http2.StreamException)"], ["boolean", "org.apache.coyote.http2.HpackEncoder$1.shouldUseIndexing(java.lang.String, java.lang.String)"], ["boolean", "org.apache.coyote.http2.HpackEncoder$1.shouldUseHuffman(java.lang.String, java.lang.String)"], ["boolean", "org.apache.coyote.http2.HpackEncoder$1.shouldUseHuffman(java.lang.String)"], ["org.apache.coyote.http2.HpackEncoder$State[]", "org.apache.coyote.http2.HpackEncoder$State.values()"], ["org.apache.coyote.http2.HpackEncoder$State", "org.apache.coyote.http2.HpackEncoder$State.valueOf(java.lang.String)"], ["void", "org.apache.coyote.http2.HpackEncoder.setMaxTableSize(int)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.coyote.http2.Http2AsyncParser$FrameCompletionHandler.callHandler(org.apache.tomcat.util.net.SocketWrapperBase$CompletionState, java.nio.ByteBuffer[], int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$FrameCompletionHandler.completed(java.lang.Long, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$FrameCompletionHandler.failed(java.lang.Throwable, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$FrameCompletionHandler.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$FrameCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.coyote.http2.Http2AsyncParser$PrefaceCompletionHandler.callHandler(org.apache.tomcat.util.net.SocketWrapperBase$CompletionState, java.nio.ByteBuffer[], int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$PrefaceCompletionHandler.completed(java.lang.Long, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncParser$PrefaceCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$1.completed(java.lang.Long, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$1.failed(java.lang.Throwable, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$1.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$1.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$2.completed(java.lang.Long, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$2.failed(java.lang.Throwable, java.lang.Void)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$2.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$2.completed(java.lang.Object, java.lang.Object)"], ["org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers(int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.startFrame()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.endFrame()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.endHeaders()"], ["byte[]", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.getHeader()"], ["java.nio.ByteBuffer", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.getPayload()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncHeaderFrameBuffers.expandPayload()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncPingManager.sendPing(boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$AsyncPingManager.receivePing(byte[], boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$SendfileCompletionHandler.completed(java.lang.Long, org.apache.coyote.http2.SendfileData)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$SendfileCompletionHandler.failed(java.lang.Throwable, org.apache.coyote.http2.SendfileData)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$SendfileCompletionHandler.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler$SendfileCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["org.apache.coyote.http2.Http2AsyncUpgradeHandler", "org.apache.coyote.http2.Http2AsyncUpgradeHandler(org.apache.coyote.http2.Http2Protocol, org.apache.coyote.Adapter, org.apache.coyote.Request)"], ["boolean", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.hasAsyncIO()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.settingsEnd(boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.swallowed(int, org.apache.coyote.http2.FrameType, int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.incrementWindowSize(int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.goaway(int, long, java.lang.String)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.pingReceive(byte[], boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.setting(org.apache.coyote.http2.Setting, long)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.reset(int, long)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.headersEnd(int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.headersContinue(int, boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.reprioritise(int, int, boolean, int)"], ["org.apache.coyote.http2.HpackDecoder$HeaderEmitter", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.headersStart(int, boolean)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.swallowedPadding(int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.receivedEndOfStream(int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.endRequestBodyFrame(int)"], ["java.nio.ByteBuffer", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.startRequestBodyFrame(int, int, boolean)"], ["org.apache.coyote.http2.HpackDecoder", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.getHpackDecoder()"], ["int", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.getMaxFrameSize()"], ["boolean", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.fill(boolean, byte[], int, int)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.destroy()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.pause()"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.timeoutAsync(long)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.setSslSupport(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.setSocketWrapper(org.apache.tomcat.util.net.SocketWrapperBase)"], ["void", "org.apache.coyote.http2.Http2AsyncUpgradeHandler.init(javax.servlet.http.WebConnection)"], ["org.apache.coyote.http2.Http2Error[]", "org.apache.coyote.http2.Http2Error.values()"], ["org.apache.coyote.http2.Http2Error", "org.apache.coyote.http2.Http2Error.valueOf(java.lang.String)"], ["void", "org.apache.coyote.http2.Http2OutputBuffer.addFilter(org.apache.coyote.http11.OutputFilter)"], ["org.apache.coyote.http2.Http2OutputBuffer", "org.apache.coyote.http2.Http2OutputBuffer(org.apache.coyote.Response, org.apache.coyote.http2.Stream$StreamOutputBuffer)"], ["int", "org.apache.coyote.http2.Http2OutputBuffer.doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http2.Http2OutputBuffer.getBytesWritten()"], ["void", "org.apache.coyote.http2.Http2OutputBuffer.end()"], ["void", "org.apache.coyote.http2.Http2OutputBuffer.flush()"], ["default", "org.apache.coyote.http2.Http2Parser$Input.boolean fill(boolean, byte[])"], ["default", "org.apache.coyote.http2.Http2Parser$Input.boolean fill(boolean, java.nio.ByteBuffer, int)"], ["org.apache.coyote.http2.Http2Protocol", "org.apache.coyote.http2.Http2Protocol()"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getHttpUpgradeName(boolean)"], ["byte[]", "org.apache.coyote.http2.Http2Protocol.getAlpnIdentifier()"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getAlpnName()"], ["org.apache.coyote.Processor", "org.apache.coyote.http2.Http2Protocol.getProcessor(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.coyote.Adapter)"], ["org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler", "org.apache.coyote.http2.Http2Protocol.getInternalUpgradeHandler(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.coyote.Adapter, org.apache.coyote.Request)"], ["boolean", "org.apache.coyote.http2.Http2Protocol.accept(org.apache.coyote.Request)"], ["long", "org.apache.coyote.http2.Http2Protocol.getReadTimeout()"], ["void", "org.apache.coyote.http2.Http2Protocol.setReadTimeout(long)"], ["long", "org.apache.coyote.http2.Http2Protocol.getWriteTimeout()"], ["void", "org.apache.coyote.http2.Http2Protocol.setWriteTimeout(long)"], ["long", "org.apache.coyote.http2.Http2Protocol.getKeepAliveTimeout()"], ["void", "org.apache.coyote.http2.Http2Protocol.setKeepAliveTimeout(long)"], ["long", "org.apache.coyote.http2.Http2Protocol.getStreamReadTimeout()"], ["void", "org.apache.coyote.http2.Http2Protocol.setStreamReadTimeout(long)"], ["long", "org.apache.coyote.http2.Http2Protocol.getStreamWriteTimeout()"], ["void", "org.apache.coyote.http2.Http2Protocol.setStreamWriteTimeout(long)"], ["long", "org.apache.coyote.http2.Http2Protocol.getMaxConcurrentStreams()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxConcurrentStreams(long)"], ["int", "org.apache.coyote.http2.Http2Protocol.getMaxConcurrentStreamExecution()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxConcurrentStreamExecution(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getInitialWindowSize()"], ["void", "org.apache.coyote.http2.Http2Protocol.setInitialWindowSize(int)"], ["boolean", "org.apache.coyote.http2.Http2Protocol.getUseSendfile()"], ["void", "org.apache.coyote.http2.Http2Protocol.setUseSendfile(boolean)"], ["void", "org.apache.coyote.http2.Http2Protocol.setAllowedTrailerHeaders(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getAllowedTrailerHeaders()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxHeaderCount(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getMaxHeaderCount()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxHeaderSize(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getMaxHeaderSize()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxTrailerCount(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getMaxTrailerCount()"], ["void", "org.apache.coyote.http2.Http2Protocol.setMaxTrailerSize(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getMaxTrailerSize()"], ["int", "org.apache.coyote.http2.Http2Protocol.getOverheadCountFactor()"], ["void", "org.apache.coyote.http2.Http2Protocol.setOverheadCountFactor(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getOverheadContinuationThreshold()"], ["void", "org.apache.coyote.http2.Http2Protocol.setOverheadContinuationThreshold(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getOverheadDataThreshold()"], ["void", "org.apache.coyote.http2.Http2Protocol.setOverheadDataThreshold(int)"], ["int", "org.apache.coyote.http2.Http2Protocol.getOverheadWindowUpdateThreshold()"], ["void", "org.apache.coyote.http2.Http2Protocol.setOverheadWindowUpdateThreshold(int)"], ["void", "org.apache.coyote.http2.Http2Protocol.setInitiatePingDisabled(boolean)"], ["boolean", "org.apache.coyote.http2.Http2Protocol.getInitiatePingDisabled()"], ["void", "org.apache.coyote.http2.Http2Protocol.setCompression(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getCompression()"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getNoCompressionUserAgents()"], ["void", "org.apache.coyote.http2.Http2Protocol.setNoCompressionUserAgents(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http2.Http2Protocol.getCompressibleMimeType()"], ["void", "org.apache.coyote.http2.Http2Protocol.setCompressibleMimeType(java.lang.String)"], ["java.lang.String[]", "org.apache.coyote.http2.Http2Protocol.getCompressibleMimeTypes()"], ["int", "org.apache.coyote.http2.Http2Protocol.getCompressionMinSize()"], ["void", "org.apache.coyote.http2.Http2Protocol.setCompressionMinSize(int)"], ["boolean", "org.apache.coyote.http2.Http2Protocol.getNoCompressionStrongETag()"], ["void", "org.apache.coyote.http2.Http2Protocol.setNoCompressionStrongETag(boolean)"], ["boolean", "org.apache.coyote.http2.Http2Protocol.useCompression(org.apache.coyote.Request, org.apache.coyote.Response)"], ["void", "org.apache.coyote.http2.Http2Protocol.setHttp11Protocol(org.apache.coyote.AbstractProtocol<?>)"], ["org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker()"], ["org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker(int)"], ["int", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker.getRemainingReservation()"], ["int", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker.getUnusedAllocation()"], ["boolean", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker.isNotifyInProgress()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker.useAllocation()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$BacklogTracker.startNotify()"], ["org.apache.coyote.http2.Http2UpgradeHandler$ConnectionState[]", "org.apache.coyote.http2.Http2UpgradeHandler$ConnectionState.values()"], ["org.apache.coyote.http2.Http2UpgradeHandler$ConnectionState", "org.apache.coyote.http2.Http2UpgradeHandler$ConnectionState.valueOf(java.lang.String)"], ["boolean", "org.apache.coyote.http2.Http2UpgradeHandler$ConnectionState.isNewStreamAllowed()"], ["org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers(org.apache.coyote.http2.Http2UpgradeHandler, int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.startFrame()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.endFrame()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.endHeaders()"], ["byte[]", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.getHeader()"], ["java.nio.ByteBuffer", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.getPayload()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$DefaultHeaderFrameBuffers.expandPayload()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$PingManager.sendPing(boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler$PingManager.receivePing(byte[], boolean)"], ["long", "org.apache.coyote.http2.Http2UpgradeHandler$PingManager.getRoundTripTimeNano()"], ["org.apache.coyote.http2.Http2UpgradeHandler$PingRecord", "org.apache.coyote.http2.Http2UpgradeHandler$PingRecord(int, long)"], ["int", "org.apache.coyote.http2.Http2UpgradeHandler$PingRecord.getSequence()"], ["long", "org.apache.coyote.http2.Http2UpgradeHandler$PingRecord.getSentNanoTime()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.init(javax.servlet.http.WebConnection)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.setSocketWrapper(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.setSslSupport(org.apache.tomcat.util.net.SSLSupport)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http2.Http2UpgradeHandler.upgradeDispatch(org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.timeoutAsync(long)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.pause()"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.destroy()"], ["boolean", "org.apache.coyote.http2.Http2UpgradeHandler.fill(boolean, byte[], int, int)"], ["int", "org.apache.coyote.http2.Http2UpgradeHandler.getMaxFrameSize()"], ["org.apache.coyote.http2.HpackDecoder", "org.apache.coyote.http2.Http2UpgradeHandler.getHpackDecoder()"], ["java.nio.ByteBuffer", "org.apache.coyote.http2.Http2UpgradeHandler.startRequestBodyFrame(int, int, boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.endRequestBodyFrame(int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.receivedEndOfStream(int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.swallowedPadding(int, int)"], ["org.apache.coyote.http2.HpackDecoder$HeaderEmitter", "org.apache.coyote.http2.Http2UpgradeHandler.headersStart(int, boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.reprioritise(int, int, boolean, int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.headersContinue(int, boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.headersEnd(int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.reset(int, long)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.setting(org.apache.coyote.http2.Setting, long)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.settingsEnd(boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.pingReceive(byte[], boolean)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.goaway(int, long, java.lang.String)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.incrementWindowSize(int, int)"], ["void", "org.apache.coyote.http2.Http2UpgradeHandler.swallowed(int, org.apache.coyote.http2.FrameType, int, int)"], ["org.apache.coyote.http2.Setting[]", "org.apache.coyote.http2.Setting.values()"], ["org.apache.coyote.http2.Setting", "org.apache.coyote.http2.Setting.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.coyote.http2.Setting.toString()"], ["org.apache.coyote.http2.Stream$PrivilegedPush", "org.apache.coyote.http2.Stream$PrivilegedPush(org.apache.coyote.http2.Http2UpgradeHandler, org.apache.coyote.Request, org.apache.coyote.http2.Stream)"], ["java.lang.Void", "org.apache.coyote.http2.Stream$PrivilegedPush.run()"], ["java.lang.Object", "org.apache.coyote.http2.Stream$PrivilegedPush.run()"], ["int", "org.apache.coyote.http2.Stream$StreamInputBuffer.doRead(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["synchronized", "org.apache.coyote.http2.Stream$StreamOutputBuffer.int doWrite(java.nio.ByteBuffer)"], ["long", "org.apache.coyote.http2.Stream$StreamOutputBuffer.getBytesWritten()"], ["void", "org.apache.coyote.http2.Stream$StreamOutputBuffer.end()"], ["void", "org.apache.coyote.http2.Stream$StreamOutputBuffer.flush()"], ["synchronized", "org.apache.coyote.http2.Stream$StreamOutputBuffer.boolean writeFromBuffer(java.nio.ByteBuffer, boolean)"], ["void", "org.apache.coyote.http2.Stream.emitHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.coyote.http2.Stream.setHeaderException(org.apache.coyote.http2.StreamException)"], ["void", "org.apache.coyote.http2.Stream.validateHeaders()"], ["void", "org.apache.coyote.http2.StreamProcessor.recycle()"], ["void", "org.apache.coyote.http2.StreamProcessor.pause()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.coyote.http2.StreamProcessor.service(org.apache.tomcat.util.net.SocketWrapperBase<?>)"], ["org.apache.coyote.http2.StreamRunnable", "org.apache.coyote.http2.StreamRunnable(org.apache.coyote.http2.StreamProcessor, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.coyote.http2.StreamRunnable.run()"], ["org.apache.coyote.http2.StreamStateMachine$State[]", "org.apache.coyote.http2.StreamStateMachine$State.values()"], ["org.apache.coyote.http2.StreamStateMachine$State", "org.apache.coyote.http2.StreamStateMachine$State.valueOf(java.lang.String)"], ["boolean", "org.apache.coyote.http2.StreamStateMachine$State.isActive()"], ["boolean", "org.apache.coyote.http2.StreamStateMachine$State.canRead()"], ["boolean", "org.apache.coyote.http2.StreamStateMachine$State.canWrite()"], ["boolean", "org.apache.coyote.http2.StreamStateMachine$State.canReset()"], ["boolean", "org.apache.coyote.http2.StreamStateMachine$State.isFrameTypePermitted(org.apache.coyote.http2.FrameType)"], ["synchronized", "org.apache.coyote.http2.StreamStateMachine.void sendReset()"], ["org.apache.juli.AsyncFileHandler$LogEntry", "org.apache.juli.AsyncFileHandler$LogEntry(java.util.logging.LogRecord, org.apache.juli.AsyncFileHandler)"], ["boolean", "org.apache.juli.AsyncFileHandler$LogEntry.flush()"], ["org.apache.juli.AsyncFileHandler$LoggerThread", "org.apache.juli.AsyncFileHandler$LoggerThread()"], ["void", "org.apache.juli.AsyncFileHandler$LoggerThread.run()"], ["org.apache.juli.AsyncFileHandler", "org.apache.juli.AsyncFileHandler()"], ["org.apache.juli.AsyncFileHandler", "org.apache.juli.AsyncFileHandler(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.juli.AsyncFileHandler", "org.apache.juli.AsyncFileHandler(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer)"], ["void", "org.apache.juli.AsyncFileHandler.close()"], ["void", "org.apache.juli.AsyncFileHandler.publish(java.util.logging.LogRecord)"], ["java.lang.Void", "org.apache.juli.ClassLoaderLogManager$2.run()"], ["java.lang.Object", "org.apache.juli.ClassLoaderLogManager$2.run()"], ["java.lang.Void", "org.apache.juli.ClassLoaderLogManager$3.run()"], ["java.lang.Object", "org.apache.juli.ClassLoaderLogManager$3.run()"], ["java.lang.Void", "org.apache.juli.ClassLoaderLogManager$4.run()"], ["java.lang.Object", "org.apache.juli.ClassLoaderLogManager$4.run()"], ["void", "org.apache.juli.ClassLoaderLogManager$Cleaner.run()"], ["org.apache.juli.ClassLoaderLogManager$RootLogger", "org.apache.juli.ClassLoaderLogManager$RootLogger()"], ["org.apache.juli.ClassLoaderLogManager", "org.apache.juli.ClassLoaderLogManager()"], ["boolean", "org.apache.juli.ClassLoaderLogManager.isUseShutdownHook()"], ["void", "org.apache.juli.ClassLoaderLogManager.setUseShutdownHook(boolean)"], ["synchronized", "org.apache.juli.ClassLoaderLogManager.boolean addLogger(java.util.logging.Logger)"], ["synchronized", "org.apache.juli.ClassLoaderLogManager.java.util.logging.Logger getLogger(java.lang.String)"], ["java.lang.String", "org.apache.juli.ClassLoaderLogManager.getProperty(java.lang.String)"], ["void", "org.apache.juli.ClassLoaderLogManager.readConfiguration()"], ["void", "org.apache.juli.ClassLoaderLogManager.readConfiguration(java.io.InputStream)"], ["void", "org.apache.juli.ClassLoaderLogManager.reset()"], ["synchronized", "org.apache.juli.ClassLoaderLogManager.void shutdown()"], ["org.apache.juli.DateFormatCache", "org.apache.juli.DateFormatCache(int, java.lang.String, org.apache.juli.DateFormatCache)"], ["java.lang.String", "org.apache.juli.DateFormatCache.getFormat(long)"], ["java.lang.String", "org.apache.juli.DateFormatCache.getTimeFormat()"], ["java.lang.Thread", "org.apache.juli.FileHandler$1.newThread(java.lang.Runnable)"], ["org.apache.juli.FileHandler", "org.apache.juli.FileHandler()"], ["org.apache.juli.FileHandler", "org.apache.juli.FileHandler(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.juli.FileHandler", "org.apache.juli.FileHandler(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer)"], ["org.apache.juli.FileHandler", "org.apache.juli.FileHandler(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.Integer)"], ["void", "org.apache.juli.FileHandler.publish(java.util.logging.LogRecord)"], ["void", "org.apache.juli.FileHandler.close()"], ["void", "org.apache.juli.FileHandler.flush()"], ["org.apache.juli.JdkLoggerFormatter", "org.apache.juli.JdkLoggerFormatter()"], ["java.lang.String", "org.apache.juli.JdkLoggerFormatter.format(java.util.logging.LogRecord)"], ["org.apache.juli.OneLineFormatter$IndentingPrintWriter", "org.apache.juli.OneLineFormatter$IndentingPrintWriter(java.io.Writer)"], ["void", "org.apache.juli.OneLineFormatter$IndentingPrintWriter.println(java.lang.Object)"], ["org.apache.juli.OneLineFormatter$MillisHandling[]", "org.apache.juli.OneLineFormatter$MillisHandling.values()"], ["org.apache.juli.OneLineFormatter$MillisHandling", "org.apache.juli.OneLineFormatter$MillisHandling.valueOf(java.lang.String)"], ["org.apache.juli.OneLineFormatter$ThreadNameCache", "org.apache.juli.OneLineFormatter$ThreadNameCache(int)"], ["org.apache.juli.OneLineFormatter", "org.apache.juli.OneLineFormatter()"], ["void", "org.apache.juli.OneLineFormatter.setTimeFormat(java.lang.String)"], ["java.lang.String", "org.apache.juli.OneLineFormatter.getTimeFormat()"], ["java.lang.String", "org.apache.juli.OneLineFormatter.format(java.util.logging.LogRecord)"], ["org.apache.juli.VerbatimFormatter", "org.apache.juli.VerbatimFormatter()"], ["java.lang.String", "org.apache.juli.VerbatimFormatter.format(java.util.logging.LogRecord)"], ["org.apache.juli.logging.DirectJDKLog", "org.apache.juli.logging.DirectJDKLog(java.lang.String)"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isErrorEnabled()"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isWarnEnabled()"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isInfoEnabled()"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isDebugEnabled()"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isFatalEnabled()"], ["boolean", "org.apache.juli.logging.DirectJDKLog.isTraceEnabled()"], ["void", "org.apache.juli.logging.DirectJDKLog.debug(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.debug(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.juli.logging.DirectJDKLog.trace(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.trace(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.juli.logging.DirectJDKLog.info(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.info(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.juli.logging.DirectJDKLog.warn(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.warn(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.juli.logging.DirectJDKLog.error(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.error(java.lang.Object, java.lang.Throwable)"], ["void", "org.apache.juli.logging.DirectJDKLog.fatal(java.lang.Object)"], ["void", "org.apache.juli.logging.DirectJDKLog.fatal(java.lang.Object, java.lang.Throwable)"], ["org.apache.juli.logging.LogConfigurationException", "org.apache.juli.logging.LogConfigurationException()"], ["org.apache.juli.logging.LogConfigurationException", "org.apache.juli.logging.LogConfigurationException(java.lang.String)"], ["org.apache.juli.logging.LogConfigurationException", "org.apache.juli.logging.LogConfigurationException(java.lang.Throwable)"], ["org.apache.juli.logging.LogConfigurationException", "org.apache.juli.logging.LogConfigurationException(java.lang.String, java.lang.Throwable)"], ["org.apache.juli.logging.Log", "org.apache.juli.logging.LogFactory.getInstance(java.lang.String)"], ["org.apache.juli.logging.Log", "org.apache.juli.logging.LogFactory.getInstance(java.lang.Class<?>)"], ["org.apache.juli.logging.LogFactory", "org.apache.juli.logging.LogFactory.getFactory()"], ["org.apache.juli.logging.Log", "org.apache.juli.logging.LogFactory.getLog(java.lang.Class<?>)"], ["org.apache.juli.logging.Log", "org.apache.juli.logging.LogFactory.getLog(java.lang.String)"], ["void", "org.apache.juli.logging.LogFactory.release(java.lang.ClassLoader)"], ["org.apache.naming.AbstractRef", "org.apache.naming.AbstractRef(java.lang.String)"], ["org.apache.naming.AbstractRef", "org.apache.naming.AbstractRef(java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.naming.AbstractRef.getFactoryClassName()"], ["java.lang.String", "org.apache.naming.AbstractRef.toString()"], ["org.apache.naming.ContextAccessController", "org.apache.naming.ContextAccessController()"], ["void", "org.apache.naming.ContextAccessController.setSecurityToken(java.lang.Object, java.lang.Object)"], ["void", "org.apache.naming.ContextAccessController.unsetSecurityToken(java.lang.Object, java.lang.Object)"], ["boolean", "org.apache.naming.ContextAccessController.checkSecurityToken(java.lang.Object, java.lang.Object)"], ["void", "org.apache.naming.ContextAccessController.setWritable(java.lang.Object, java.lang.Object)"], ["void", "org.apache.naming.ContextAccessController.setReadOnly(java.lang.Object)"], ["boolean", "org.apache.naming.ContextAccessController.isWritable(java.lang.Object)"], ["org.apache.naming.ContextBindings", "org.apache.naming.ContextBindings()"], ["void", "org.apache.naming.ContextBindings.bindContext(java.lang.Object, javax.naming.Context)"], ["void", "org.apache.naming.ContextBindings.bindContext(java.lang.Object, javax.naming.Context, java.lang.Object)"], ["void", "org.apache.naming.ContextBindings.unbindContext(java.lang.Object, java.lang.Object)"], ["void", "org.apache.naming.ContextBindings.bindThread(java.lang.Object, java.lang.Object)"], ["void", "org.apache.naming.ContextBindings.unbindThread(java.lang.Object, java.lang.Object)"], ["javax.naming.Context", "org.apache.naming.ContextBindings.getThread()"], ["boolean", "org.apache.naming.ContextBindings.isThreadBound()"], ["void", "org.apache.naming.ContextBindings.bindClassLoader(java.lang.Object, java.lang.Object, java.lang.ClassLoader)"], ["void", "org.apache.naming.ContextBindings.unbindClassLoader(java.lang.Object, java.lang.Object, java.lang.ClassLoader)"], ["javax.naming.Context", "org.apache.naming.ContextBindings.getClassLoader()"], ["boolean", "org.apache.naming.ContextBindings.isClassLoaderBound()"], ["org.apache.naming.EjbRef", "org.apache.naming.EjbRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.EjbRef", "org.apache.naming.EjbRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.HandlerRef", "org.apache.naming.HandlerRef(java.lang.String, java.lang.String)"], ["org.apache.naming.HandlerRef", "org.apache.naming.HandlerRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.LookupRef", "org.apache.naming.LookupRef(java.lang.String, java.lang.String)"], ["org.apache.naming.LookupRef", "org.apache.naming.LookupRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.NameParserImpl", "org.apache.naming.NameParserImpl()"], ["javax.naming.Name", "org.apache.naming.NameParserImpl.parse(java.lang.String)"], ["org.apache.naming.NamingContext", "org.apache.naming.NamingContext(java.util.Hashtable<java.lang.String, java.lang.Object>, java.lang.String)"], ["org.apache.naming.NamingContext", "org.apache.naming.NamingContext(java.util.Hashtable<java.lang.String, java.lang.Object>, java.lang.String, java.util.HashMap<java.lang.String, org.apache.naming.NamingEntry>)"], ["boolean", "org.apache.naming.NamingContext.getExceptionOnFailedWrite()"], ["void", "org.apache.naming.NamingContext.setExceptionOnFailedWrite(boolean)"], ["java.lang.Object", "org.apache.naming.NamingContext.lookup(javax.naming.Name)"], ["java.lang.Object", "org.apache.naming.NamingContext.lookup(java.lang.String)"], ["void", "org.apache.naming.NamingContext.bind(javax.naming.Name, java.lang.Object)"], ["void", "org.apache.naming.NamingContext.bind(java.lang.String, java.lang.Object)"], ["void", "org.apache.naming.NamingContext.rebind(javax.naming.Name, java.lang.Object)"], ["void", "org.apache.naming.NamingContext.rebind(java.lang.String, java.lang.Object)"], ["void", "org.apache.naming.NamingContext.unbind(javax.naming.Name)"], ["void", "org.apache.naming.NamingContext.unbind(java.lang.String)"], ["void", "org.apache.naming.NamingContext.rename(javax.naming.Name, javax.naming.Name)"], ["void", "org.apache.naming.NamingContext.rename(java.lang.String, java.lang.String)"], ["void", "org.apache.naming.NamingContext.destroySubcontext(javax.naming.Name)"], ["void", "org.apache.naming.NamingContext.destroySubcontext(java.lang.String)"], ["javax.naming.Context", "org.apache.naming.NamingContext.createSubcontext(javax.naming.Name)"], ["javax.naming.Context", "org.apache.naming.NamingContext.createSubcontext(java.lang.String)"], ["java.lang.Object", "org.apache.naming.NamingContext.lookupLink(javax.naming.Name)"], ["java.lang.Object", "org.apache.naming.NamingContext.lookupLink(java.lang.String)"], ["javax.naming.NameParser", "org.apache.naming.NamingContext.getNameParser(javax.naming.Name)"], ["javax.naming.NameParser", "org.apache.naming.NamingContext.getNameParser(java.lang.String)"], ["javax.naming.Name", "org.apache.naming.NamingContext.composeName(javax.naming.Name, javax.naming.Name)"], ["java.lang.String", "org.apache.naming.NamingContext.composeName(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.naming.NamingContext.addToEnvironment(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.naming.NamingContext.removeFromEnvironment(java.lang.String)"], ["java.util.Hashtable<?, ?>", "org.apache.naming.NamingContext.getEnvironment()"], ["void", "org.apache.naming.NamingContext.close()"], ["java.lang.String", "org.apache.naming.NamingContext.getNameInNamespace()"], ["org.apache.naming.NamingContextBindingsEnumeration", "org.apache.naming.NamingContextBindingsEnumeration(java.util.Iterator<org.apache.naming.NamingEntry>, javax.naming.Context)"], ["javax.naming.Binding", "org.apache.naming.NamingContextBindingsEnumeration.next()"], ["boolean", "org.apache.naming.NamingContextBindingsEnumeration.hasMore()"], ["void", "org.apache.naming.NamingContextBindingsEnumeration.close()"], ["boolean", "org.apache.naming.NamingContextBindingsEnumeration.hasMoreElements()"], ["javax.naming.Binding", "org.apache.naming.NamingContextBindingsEnumeration.nextElement()"], ["java.lang.Object", "org.apache.naming.NamingContextBindingsEnumeration.next()"], ["java.lang.Object", "org.apache.naming.NamingContextBindingsEnumeration.nextElement()"], ["org.apache.naming.NamingContextEnumeration", "org.apache.naming.NamingContextEnumeration(java.util.Iterator<org.apache.naming.NamingEntry>)"], ["javax.naming.NameClassPair", "org.apache.naming.NamingContextEnumeration.next()"], ["boolean", "org.apache.naming.NamingContextEnumeration.hasMore()"], ["void", "org.apache.naming.NamingContextEnumeration.close()"], ["boolean", "org.apache.naming.NamingContextEnumeration.hasMoreElements()"], ["javax.naming.NameClassPair", "org.apache.naming.NamingContextEnumeration.nextElement()"], ["java.lang.Object", "org.apache.naming.NamingContextEnumeration.next()"], ["java.lang.Object", "org.apache.naming.NamingContextEnumeration.nextElement()"], ["org.apache.naming.NamingEntry", "org.apache.naming.NamingEntry(java.lang.String, java.lang.Object, int)"], ["boolean", "org.apache.naming.NamingEntry.equals(java.lang.Object)"], ["int", "org.apache.naming.NamingEntry.hashCode()"], ["org.apache.naming.ResourceEnvRef", "org.apache.naming.ResourceEnvRef(java.lang.String)"], ["org.apache.naming.ResourceLinkRef", "org.apache.naming.ResourceLinkRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.ResourceRef", "org.apache.naming.ResourceRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)"], ["org.apache.naming.ResourceRef", "org.apache.naming.ResourceRef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String)"], ["org.apache.naming.SelectorContext", "org.apache.naming.SelectorContext(java.util.Hashtable<java.lang.String, java.lang.Object>)"], ["org.apache.naming.SelectorContext", "org.apache.naming.SelectorContext(java.util.Hashtable<java.lang.String, java.lang.Object>, boolean)"], ["java.lang.Object", "org.apache.naming.SelectorContext.lookup(javax.naming.Name)"], ["java.lang.Object", "org.apache.naming.SelectorContext.lookup(java.lang.String)"], ["void", "org.apache.naming.SelectorContext.bind(javax.naming.Name, java.lang.Object)"], ["void", "org.apache.naming.SelectorContext.bind(java.lang.String, java.lang.Object)"], ["void", "org.apache.naming.SelectorContext.rebind(javax.naming.Name, java.lang.Object)"], ["void", "org.apache.naming.SelectorContext.rebind(java.lang.String, java.lang.Object)"], ["void", "org.apache.naming.SelectorContext.unbind(javax.naming.Name)"], ["void", "org.apache.naming.SelectorContext.unbind(java.lang.String)"], ["void", "org.apache.naming.SelectorContext.rename(javax.naming.Name, javax.naming.Name)"], ["void", "org.apache.naming.SelectorContext.rename(java.lang.String, java.lang.String)"], ["void", "org.apache.naming.SelectorContext.destroySubcontext(javax.naming.Name)"], ["void", "org.apache.naming.SelectorContext.destroySubcontext(java.lang.String)"], ["javax.naming.Context", "org.apache.naming.SelectorContext.createSubcontext(javax.naming.Name)"], ["javax.naming.Context", "org.apache.naming.SelectorContext.createSubcontext(java.lang.String)"], ["java.lang.Object", "org.apache.naming.SelectorContext.lookupLink(javax.naming.Name)"], ["java.lang.Object", "org.apache.naming.SelectorContext.lookupLink(java.lang.String)"], ["javax.naming.NameParser", "org.apache.naming.SelectorContext.getNameParser(javax.naming.Name)"], ["javax.naming.NameParser", "org.apache.naming.SelectorContext.getNameParser(java.lang.String)"], ["javax.naming.Name", "org.apache.naming.SelectorContext.composeName(javax.naming.Name, javax.naming.Name)"], ["java.lang.String", "org.apache.naming.SelectorContext.composeName(java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.naming.SelectorContext.addToEnvironment(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.naming.SelectorContext.removeFromEnvironment(java.lang.String)"], ["java.util.Hashtable<?, ?>", "org.apache.naming.SelectorContext.getEnvironment()"], ["void", "org.apache.naming.SelectorContext.close()"], ["java.lang.String", "org.apache.naming.SelectorContext.getNameInNamespace()"], ["org.apache.naming.ServiceRef", "org.apache.naming.ServiceRef(java.lang.String, java.lang.String, java.lang.String[], java.lang.String, java.lang.String)"], ["org.apache.naming.ServiceRef", "org.apache.naming.ServiceRef(java.lang.String, java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.naming.HandlerRef", "org.apache.naming.ServiceRef.getHandler()"], ["int", "org.apache.naming.ServiceRef.getHandlersSize()"], ["void", "org.apache.naming.ServiceRef.addHandler(org.apache.naming.HandlerRef)"], ["java.lang.String", "org.apache.naming.StringManager.getString(java.lang.String)"], ["java.lang.String", "org.apache.naming.StringManager.getString(java.lang.String, java.lang.Object...)"], ["synchronized", "org.apache.naming.StringManager.org.apache.naming.StringManager getManager(java.lang.String)"], ["org.apache.naming.StringManager", "org.apache.naming.StringManager.getManager(java.lang.Class<?>)"], ["org.apache.naming.TransactionRef", "org.apache.naming.TransactionRef()"], ["org.apache.naming.TransactionRef", "org.apache.naming.TransactionRef(java.lang.String, java.lang.String)"], ["org.apache.naming.factory.BeanFactory", "org.apache.naming.factory.BeanFactory()"], ["java.lang.Object", "org.apache.naming.factory.BeanFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.Constants", "org.apache.naming.factory.Constants()"], ["org.apache.naming.factory.DataSourceLinkFactory$DataSourceHandler", "org.apache.naming.factory.DataSourceLinkFactory$DataSourceHandler(javax.sql.DataSource, java.lang.String, java.lang.String)"], ["java.lang.Object", "org.apache.naming.factory.DataSourceLinkFactory$DataSourceHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["java.lang.Object", "org.apache.naming.factory.DataSourceLinkFactory$DataSourceHandler.unwrap(java.lang.Class<?>)"], ["org.apache.naming.factory.DataSourceLinkFactory", "org.apache.naming.factory.DataSourceLinkFactory()"], ["void", "org.apache.naming.factory.DataSourceLinkFactory.setGlobalContext(javax.naming.Context)"], ["java.lang.Object", "org.apache.naming.factory.DataSourceLinkFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.EjbFactory", "org.apache.naming.factory.EjbFactory()"], ["org.apache.naming.factory.FactoryBase", "org.apache.naming.factory.FactoryBase()"], ["java.lang.Object", "org.apache.naming.factory.FactoryBase.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.LookupFactory", "org.apache.naming.factory.LookupFactory()"], ["java.lang.Object", "org.apache.naming.factory.LookupFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["javax.mail.Session", "org.apache.naming.factory.MailSessionFactory$1.run()"], ["java.lang.Object", "org.apache.naming.factory.MailSessionFactory$1.run()"], ["org.apache.naming.factory.MailSessionFactory", "org.apache.naming.factory.MailSessionFactory()"], ["java.lang.Object", "org.apache.naming.factory.MailSessionFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.OpenEjbFactory", "org.apache.naming.factory.OpenEjbFactory()"], ["java.lang.Object", "org.apache.naming.factory.OpenEjbFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.ResourceEnvFactory", "org.apache.naming.factory.ResourceEnvFactory()"], ["org.apache.naming.factory.ResourceFactory", "org.apache.naming.factory.ResourceFactory()"], ["org.apache.naming.factory.ResourceLinkFactory", "org.apache.naming.factory.ResourceLinkFactory()"], ["void", "org.apache.naming.factory.ResourceLinkFactory.setGlobalContext(javax.naming.Context)"], ["void", "org.apache.naming.factory.ResourceLinkFactory.registerGlobalResourceAccess(javax.naming.Context, java.lang.String, java.lang.String)"], ["void", "org.apache.naming.factory.ResourceLinkFactory.deregisterGlobalResourceAccess(javax.naming.Context, java.lang.String)"], ["void", "org.apache.naming.factory.ResourceLinkFactory.deregisterGlobalResourceAccess(javax.naming.Context)"], ["java.lang.Object", "org.apache.naming.factory.ResourceLinkFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["javax.mail.internet.MimePartDataSource", "org.apache.naming.factory.SendMailFactory$1.run()"], ["java.lang.Object", "org.apache.naming.factory.SendMailFactory$1.run()"], ["org.apache.naming.factory.SendMailFactory", "org.apache.naming.factory.SendMailFactory()"], ["java.lang.Object", "org.apache.naming.factory.SendMailFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.factory.TransactionFactory", "org.apache.naming.factory.TransactionFactory()"], ["org.apache.naming.factory.webservices.ServiceProxy", "org.apache.naming.factory.webservices.ServiceProxy(javax.xml.rpc.Service)"], ["java.lang.Object", "org.apache.naming.factory.webservices.ServiceProxy.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"], ["void", "org.apache.naming.factory.webservices.ServiceProxy.setPortComponentRef(java.util.Hashtable<java.lang.String, javax.xml.namespace.QName>)"], ["org.apache.naming.factory.webservices.ServiceRefFactory", "org.apache.naming.factory.webservices.ServiceRefFactory()"], ["java.lang.Object", "org.apache.naming.factory.webservices.ServiceRefFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["org.apache.naming.java.javaURLContextFactory", "org.apache.naming.java.javaURLContextFactory()"], ["java.lang.Object", "org.apache.naming.java.javaURLContextFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)"], ["javax.naming.Context", "org.apache.naming.java.javaURLContextFactory.getInitialContext(java.util.Hashtable<?, ?>)"], ["default", "org.apache.tomcat.InstanceManager.void backgroundProcess()"], ["org.apache.tomcat.InstanceManagerBindings", "org.apache.tomcat.InstanceManagerBindings()"], ["void", "org.apache.tomcat.InstanceManagerBindings.bind(java.lang.ClassLoader, org.apache.tomcat.InstanceManager)"], ["void", "org.apache.tomcat.InstanceManagerBindings.unbind(java.lang.ClassLoader)"], ["org.apache.tomcat.InstanceManager", "org.apache.tomcat.InstanceManagerBindings.get(java.lang.ClassLoader)"], ["default", "org.apache.tomcat.JarScanFilter.boolean isSkipAll()"], ["org.apache.tomcat.JarScanType[]", "org.apache.tomcat.JarScanType.values()"], ["org.apache.tomcat.JarScanType", "org.apache.tomcat.JarScanType.valueOf(java.lang.String)"], ["org.apache.tomcat.SimpleInstanceManager", "org.apache.tomcat.SimpleInstanceManager()"], ["java.lang.Object", "org.apache.tomcat.SimpleInstanceManager.newInstance(java.lang.Class<?>)"], ["java.lang.Object", "org.apache.tomcat.SimpleInstanceManager.newInstance(java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.SimpleInstanceManager.newInstance(java.lang.String, java.lang.ClassLoader)"], ["void", "org.apache.tomcat.SimpleInstanceManager.newInstance(java.lang.Object)"], ["void", "org.apache.tomcat.SimpleInstanceManager.destroyInstance(java.lang.Object)"], ["org.apache.tomcat.jni.Address", "org.apache.tomcat.jni.Address()"], ["native", "org.apache.tomcat.jni.Address.boolean fill(org.apache.tomcat.jni.Sockaddr, long)"], ["native", "org.apache.tomcat.jni.Address.org.apache.tomcat.jni.Sockaddr getInfo(long)"], ["native", "org.apache.tomcat.jni.Address.long info(java.lang.String, int, int, int, long)"], ["native", "org.apache.tomcat.jni.Address.java.lang.String getnameinfo(long, int)"], ["native", "org.apache.tomcat.jni.Address.java.lang.String getip(long)"], ["native", "org.apache.tomcat.jni.Address.int getservbyname(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Address.long get(int, long)"], ["native", "org.apache.tomcat.jni.Address.boolean equal(long, long)"], ["org.apache.tomcat.jni.Buffer", "org.apache.tomcat.jni.Buffer()"], ["native", "org.apache.tomcat.jni.Buffer.java.nio.ByteBuffer malloc(int)"], ["native", "org.apache.tomcat.jni.Buffer.java.nio.ByteBuffer calloc(int, int)"], ["native", "org.apache.tomcat.jni.Buffer.java.nio.ByteBuffer palloc(long, int)"], ["native", "org.apache.tomcat.jni.Buffer.java.nio.ByteBuffer pcalloc(long, int)"], ["native", "org.apache.tomcat.jni.Buffer.java.nio.ByteBuffer create(long, int)"], ["native", "org.apache.tomcat.jni.Buffer.void free(java.nio.ByteBuffer)"], ["native", "org.apache.tomcat.jni.Buffer.long address(java.nio.ByteBuffer)"], ["native", "org.apache.tomcat.jni.Buffer.long size(java.nio.ByteBuffer)"], ["org.apache.tomcat.jni.Directory", "org.apache.tomcat.jni.Directory()"], ["native", "org.apache.tomcat.jni.Directory.int make(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Directory.int makeRecursive(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Directory.int remove(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Directory.java.lang.String tempGet(long)"], ["native", "org.apache.tomcat.jni.Directory.long open(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Directory.int close(long)"], ["native", "org.apache.tomcat.jni.Directory.int rewind(long)"], ["native", "org.apache.tomcat.jni.Directory.int read(org.apache.tomcat.jni.FileInfo, int, long)"], ["int", "org.apache.tomcat.jni.Error.getError()"], ["java.lang.String", "org.apache.tomcat.jni.Error.getDescription()"], ["native", "org.apache.tomcat.jni.Error.int osError()"], ["native", "org.apache.tomcat.jni.Error.int netosError()"], ["native", "org.apache.tomcat.jni.Error.java.lang.String strerror(int)"], ["org.apache.tomcat.jni.File", "org.apache.tomcat.jni.File()"], ["native", "org.apache.tomcat.jni.File.long open(java.lang.String, int, int, long)"], ["native", "org.apache.tomcat.jni.File.int close(long)"], ["native", "org.apache.tomcat.jni.File.int flush(long)"], ["native", "org.apache.tomcat.jni.File.long mktemp(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.File.int remove(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.File.int rename(java.lang.String, java.lang.String, long)"], ["native", "org.apache.tomcat.jni.File.int copy(java.lang.String, java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.File.int append(java.lang.String, java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.File.int puts(byte[], long)"], ["native", "org.apache.tomcat.jni.File.long seek(long, int, long)"], ["native", "org.apache.tomcat.jni.File.int putc(byte, long)"], ["native", "org.apache.tomcat.jni.File.int ungetc(byte, long)"], ["native", "org.apache.tomcat.jni.File.int write(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.File.int writeb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.File.int writeFull(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.File.int writeFullb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.File.int writev(long, byte[][])"], ["native", "org.apache.tomcat.jni.File.int writevFull(long, byte[][])"], ["native", "org.apache.tomcat.jni.File.int read(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.File.int readb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.File.int readFull(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.File.int readFullb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.File.int gets(byte[], int, long)"], ["native", "org.apache.tomcat.jni.File.int getc(long)"], ["native", "org.apache.tomcat.jni.File.int eof(long)"], ["native", "org.apache.tomcat.jni.File.java.lang.String nameGet(long)"], ["native", "org.apache.tomcat.jni.File.int permsSet(java.lang.String, int)"], ["native", "org.apache.tomcat.jni.File.int attrsSet(java.lang.String, int, int, long)"], ["native", "org.apache.tomcat.jni.File.int mtimeSet(java.lang.String, long, long)"], ["native", "org.apache.tomcat.jni.File.int lock(long, int)"], ["native", "org.apache.tomcat.jni.File.int unlock(long)"], ["native", "org.apache.tomcat.jni.File.int flagsGet(long)"], ["native", "org.apache.tomcat.jni.File.int trunc(long, long)"], ["native", "org.apache.tomcat.jni.File.int pipeCreate(long[], long)"], ["native", "org.apache.tomcat.jni.File.long pipeTimeoutGet(long)"], ["native", "org.apache.tomcat.jni.File.int pipeTimeoutSet(long, long)"], ["native", "org.apache.tomcat.jni.File.long dup(long, long, long)"], ["native", "org.apache.tomcat.jni.File.int dup2(long, long, long)"], ["native", "org.apache.tomcat.jni.File.int stat(org.apache.tomcat.jni.FileInfo, java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.File.org.apache.tomcat.jni.FileInfo getStat(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.File.int infoGet(org.apache.tomcat.jni.FileInfo, int, long)"], ["native", "org.apache.tomcat.jni.File.org.apache.tomcat.jni.FileInfo getInfo(int, long)"], ["org.apache.tomcat.jni.FileInfo", "org.apache.tomcat.jni.FileInfo()"], ["org.apache.tomcat.jni.Global", "org.apache.tomcat.jni.Global()"], ["native", "org.apache.tomcat.jni.Global.long create(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Global.long childInit(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Global.int lock(long)"], ["native", "org.apache.tomcat.jni.Global.int trylock(long)"], ["native", "org.apache.tomcat.jni.Global.int unlock(long)"], ["native", "org.apache.tomcat.jni.Global.int destroy(long)"], ["native", "org.apache.tomcat.jni.Library.void terminate()"], ["native", "org.apache.tomcat.jni.Library.java.lang.String versionString()"], ["native", "org.apache.tomcat.jni.Library.java.lang.String aprVersionString()"], ["native", "org.apache.tomcat.jni.Library.long globalPool()"], ["synchronized", "org.apache.tomcat.jni.Library.boolean initialize(java.lang.String)"], ["void", "org.apache.tomcat.jni.Library.load(java.lang.String)"], ["void", "org.apache.tomcat.jni.Library.loadLibrary(java.lang.String)"], ["org.apache.tomcat.jni.LibraryNotFoundError", "org.apache.tomcat.jni.LibraryNotFoundError(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.jni.LibraryNotFoundError.getLibraryNames()"], ["org.apache.tomcat.jni.Local", "org.apache.tomcat.jni.Local()"], ["native", "org.apache.tomcat.jni.Local.long create(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Local.int bind(long, long)"], ["native", "org.apache.tomcat.jni.Local.int listen(long, int)"], ["native", "org.apache.tomcat.jni.Local.long accept(long)"], ["native", "org.apache.tomcat.jni.Local.int connect(long, long)"], ["org.apache.tomcat.jni.Lock", "org.apache.tomcat.jni.Lock()"], ["native", "org.apache.tomcat.jni.Lock.long create(java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Lock.long childInit(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Lock.int lock(long)"], ["native", "org.apache.tomcat.jni.Lock.int trylock(long)"], ["native", "org.apache.tomcat.jni.Lock.int unlock(long)"], ["native", "org.apache.tomcat.jni.Lock.int destroy(long)"], ["native", "org.apache.tomcat.jni.Lock.java.lang.String lockfile(long)"], ["native", "org.apache.tomcat.jni.Lock.java.lang.String name(long)"], ["native", "org.apache.tomcat.jni.Lock.java.lang.String defname()"], ["org.apache.tomcat.jni.Mmap", "org.apache.tomcat.jni.Mmap()"], ["native", "org.apache.tomcat.jni.Mmap.long create(long, long, long, int, long)"], ["native", "org.apache.tomcat.jni.Mmap.long dup(long, long)"], ["native", "org.apache.tomcat.jni.Mmap.int delete(long)"], ["native", "org.apache.tomcat.jni.Mmap.long offset(long, long)"], ["org.apache.tomcat.jni.Multicast", "org.apache.tomcat.jni.Multicast()"], ["native", "org.apache.tomcat.jni.Multicast.int join(long, long, long, long)"], ["native", "org.apache.tomcat.jni.Multicast.int leave(long, long, long, long)"], ["native", "org.apache.tomcat.jni.Multicast.int hops(long, int)"], ["native", "org.apache.tomcat.jni.Multicast.int loopback(long, boolean)"], ["native", "org.apache.tomcat.jni.Multicast.int ointerface(long, long)"], ["org.apache.tomcat.jni.OS", "org.apache.tomcat.jni.OS()"], ["native", "org.apache.tomcat.jni.OS.java.lang.String defaultEncoding(long)"], ["native", "org.apache.tomcat.jni.OS.java.lang.String localeEncoding(long)"], ["native", "org.apache.tomcat.jni.OS.int random(byte[], int)"], ["native", "org.apache.tomcat.jni.OS.int info(long[])"], ["native", "org.apache.tomcat.jni.OS.java.lang.String expand(java.lang.String)"], ["native", "org.apache.tomcat.jni.OS.void sysloginit(java.lang.String)"], ["native", "org.apache.tomcat.jni.OS.void syslog(int, java.lang.String)"], ["org.apache.tomcat.jni.Poll", "org.apache.tomcat.jni.Poll()"], ["native", "org.apache.tomcat.jni.Poll.long create(int, long, int, long)"], ["native", "org.apache.tomcat.jni.Poll.int destroy(long)"], ["native", "org.apache.tomcat.jni.Poll.int add(long, long, int)"], ["native", "org.apache.tomcat.jni.Poll.int addWithTimeout(long, long, int, long)"], ["native", "org.apache.tomcat.jni.Poll.int remove(long, long)"], ["native", "org.apache.tomcat.jni.Poll.int poll(long, long, long[], boolean)"], ["native", "org.apache.tomcat.jni.Poll.int maintain(long, long[], boolean)"], ["native", "org.apache.tomcat.jni.Poll.void setTtl(long, long)"], ["native", "org.apache.tomcat.jni.Poll.long getTtl(long)"], ["native", "org.apache.tomcat.jni.Poll.int pollset(long, long[])"], ["native", "org.apache.tomcat.jni.Poll.int interrupt(long)"], ["native", "org.apache.tomcat.jni.Poll.boolean wakeable(long)"], ["org.apache.tomcat.jni.Pool", "org.apache.tomcat.jni.Pool()"], ["native", "org.apache.tomcat.jni.Pool.long create(long)"], ["native", "org.apache.tomcat.jni.Pool.void clear(long)"], ["native", "org.apache.tomcat.jni.Pool.void destroy(long)"], ["native", "org.apache.tomcat.jni.Pool.long parentGet(long)"], ["native", "org.apache.tomcat.jni.Pool.boolean isAncestor(long, long)"], ["native", "org.apache.tomcat.jni.Pool.long cleanupRegister(long, java.lang.Object)"], ["native", "org.apache.tomcat.jni.Pool.void cleanupKill(long, long)"], ["native", "org.apache.tomcat.jni.Pool.void noteSubprocess(long, long, int)"], ["native", "org.apache.tomcat.jni.Pool.java.nio.ByteBuffer alloc(long, int)"], ["native", "org.apache.tomcat.jni.Pool.java.nio.ByteBuffer calloc(long, int)"], ["native", "org.apache.tomcat.jni.Pool.int dataSet(long, java.lang.String, java.lang.Object)"], ["native", "org.apache.tomcat.jni.Pool.java.lang.Object dataGet(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Pool.void cleanupForExec()"], ["org.apache.tomcat.jni.Proc", "org.apache.tomcat.jni.Proc()"], ["native", "org.apache.tomcat.jni.Proc.long alloc(long)"], ["native", "org.apache.tomcat.jni.Proc.int fork(long[], long)"], ["native", "org.apache.tomcat.jni.Proc.int create(long, java.lang.String, java.lang.String[], java.lang.String[], long, long)"], ["native", "org.apache.tomcat.jni.Proc.int wait(long, int[], int)"], ["native", "org.apache.tomcat.jni.Proc.int waitAllProcs(long, int[], int, long)"], ["native", "org.apache.tomcat.jni.Proc.int detach(int)"], ["native", "org.apache.tomcat.jni.Proc.int kill(long, int)"], ["org.apache.tomcat.jni.Procattr", "org.apache.tomcat.jni.Procattr()"], ["native", "org.apache.tomcat.jni.Procattr.long create(long)"], ["native", "org.apache.tomcat.jni.Procattr.int ioSet(long, int, int, int)"], ["native", "org.apache.tomcat.jni.Procattr.int childInSet(long, long, long)"], ["native", "org.apache.tomcat.jni.Procattr.int childOutSet(long, long, long)"], ["native", "org.apache.tomcat.jni.Procattr.int childErrSet(long, long, long)"], ["native", "org.apache.tomcat.jni.Procattr.int dirSet(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Procattr.int cmdtypeSet(long, int)"], ["native", "org.apache.tomcat.jni.Procattr.int detachSet(long, int)"], ["native", "org.apache.tomcat.jni.Procattr.int errorCheckSet(long, int)"], ["native", "org.apache.tomcat.jni.Procattr.int addrspaceSet(long, int)"], ["native", "org.apache.tomcat.jni.Procattr.void errfnSet(long, long, java.lang.Object)"], ["native", "org.apache.tomcat.jni.Procattr.int userSet(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.Procattr.int groupSet(long, java.lang.String)"], ["org.apache.tomcat.jni.Registry", "org.apache.tomcat.jni.Registry()"], ["native", "org.apache.tomcat.jni.Registry.long create(int, java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Registry.long open(int, java.lang.String, int, long)"], ["native", "org.apache.tomcat.jni.Registry.int close(long)"], ["native", "org.apache.tomcat.jni.Registry.int getType(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int getValueI(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.long getValueJ(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int getSize(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.java.lang.String getValueS(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.java.lang.String[] getValueA(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.byte[] getValueB(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int setValueI(long, java.lang.String, int)"], ["native", "org.apache.tomcat.jni.Registry.int setValueJ(long, java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Registry.int setValueS(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int setValueE(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int setValueA(long, java.lang.String, java.lang.String[])"], ["native", "org.apache.tomcat.jni.Registry.int setValueB(long, java.lang.String, byte[])"], ["native", "org.apache.tomcat.jni.Registry.java.lang.String[] enumKeys(long)"], ["native", "org.apache.tomcat.jni.Registry.java.lang.String[] enumValues(long)"], ["native", "org.apache.tomcat.jni.Registry.int deleteValue(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.Registry.int deleteKey(int, java.lang.String, boolean)"], ["org.apache.tomcat.jni.SSL", "org.apache.tomcat.jni.SSL()"], ["native", "org.apache.tomcat.jni.SSL.int version()"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String versionString()"], ["native", "org.apache.tomcat.jni.SSL.int initialize(java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.int fipsModeGet()"], ["native", "org.apache.tomcat.jni.SSL.int fipsModeSet(int)"], ["native", "org.apache.tomcat.jni.SSL.boolean randLoad(java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.boolean randSave(java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.boolean randMake(java.lang.String, int, boolean)"], ["native", "org.apache.tomcat.jni.SSL.void randSet(java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.long newBIO(long, org.apache.tomcat.jni.BIOCallback)"], ["native", "org.apache.tomcat.jni.SSL.int closeBIO(long)"], ["native", "org.apache.tomcat.jni.SSL.void setPasswordCallback(org.apache.tomcat.jni.PasswordCallback)"], ["native", "org.apache.tomcat.jni.SSL.void setPassword(java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getLastError()"], ["native", "org.apache.tomcat.jni.SSL.boolean hasOp(int)"], ["native", "org.apache.tomcat.jni.SSL.int getHandshakeCount(long)"], ["native", "org.apache.tomcat.jni.SSL.long newSSL(long, boolean)"], ["native", "org.apache.tomcat.jni.SSL.void setBIO(long, long, long)"], ["native", "org.apache.tomcat.jni.SSL.int getError(long, int)"], ["native", "org.apache.tomcat.jni.SSL.int pendingWrittenBytesInBIO(long)"], ["native", "org.apache.tomcat.jni.SSL.int pendingReadableBytesInSSL(long)"], ["native", "org.apache.tomcat.jni.SSL.int writeToBIO(long, long, int)"], ["native", "org.apache.tomcat.jni.SSL.int readFromBIO(long, long, int)"], ["native", "org.apache.tomcat.jni.SSL.int writeToSSL(long, long, int)"], ["native", "org.apache.tomcat.jni.SSL.int readFromSSL(long, long, int)"], ["native", "org.apache.tomcat.jni.SSL.int getShutdown(long)"], ["native", "org.apache.tomcat.jni.SSL.void setShutdown(long, int)"], ["native", "org.apache.tomcat.jni.SSL.void freeSSL(long)"], ["native", "org.apache.tomcat.jni.SSL.long makeNetworkBIO(long)"], ["native", "org.apache.tomcat.jni.SSL.void freeBIO(long)"], ["native", "org.apache.tomcat.jni.SSL.int shutdownSSL(long)"], ["native", "org.apache.tomcat.jni.SSL.int getLastErrorNumber()"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getCipherForSSL(long)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getVersion(long)"], ["native", "org.apache.tomcat.jni.SSL.int doHandshake(long)"], ["native", "org.apache.tomcat.jni.SSL.int renegotiate(long)"], ["native", "org.apache.tomcat.jni.SSL.int renegotiatePending(long)"], ["native", "org.apache.tomcat.jni.SSL.int verifyClientPostHandshake(long)"], ["native", "org.apache.tomcat.jni.SSL.int getPostHandshakeAuthInProgress(long)"], ["native", "org.apache.tomcat.jni.SSL.int isInInit(long)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getNextProtoNegotiated(long)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getAlpnSelected(long)"], ["native", "org.apache.tomcat.jni.SSL.byte[][] getPeerCertChain(long)"], ["native", "org.apache.tomcat.jni.SSL.byte[] getPeerCertificate(long)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String getErrorString(long)"], ["native", "org.apache.tomcat.jni.SSL.long getTime(long)"], ["native", "org.apache.tomcat.jni.SSL.void setVerify(long, int, int)"], ["native", "org.apache.tomcat.jni.SSL.void setOptions(long, int)"], ["native", "org.apache.tomcat.jni.SSL.int getOptions(long)"], ["native", "org.apache.tomcat.jni.SSL.java.lang.String[] getCiphers(long)"], ["native", "org.apache.tomcat.jni.SSL.boolean setCipherSuites(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSL.byte[] getSessionId(long)"], ["org.apache.tomcat.jni.SSLConf", "org.apache.tomcat.jni.SSLConf()"], ["native", "org.apache.tomcat.jni.SSLConf.long make(long, int)"], ["native", "org.apache.tomcat.jni.SSLConf.void free(long)"], ["native", "org.apache.tomcat.jni.SSLConf.int check(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLConf.void assign(long, long)"], ["native", "org.apache.tomcat.jni.SSLConf.int apply(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLConf.int finish(long)"], ["org.apache.tomcat.jni.SSLContext", "org.apache.tomcat.jni.SSLContext()"], ["native", "org.apache.tomcat.jni.SSLContext.long make(long, int, int)"], ["native", "org.apache.tomcat.jni.SSLContext.int free(long)"], ["native", "org.apache.tomcat.jni.SSLContext.void setContextId(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.void setBIO(long, long, int)"], ["native", "org.apache.tomcat.jni.SSLContext.void setOptions(long, int)"], ["native", "org.apache.tomcat.jni.SSLContext.int getOptions(long)"], ["native", "org.apache.tomcat.jni.SSLContext.void clearOptions(long, int)"], ["native", "org.apache.tomcat.jni.SSLContext.java.lang.String[] getCiphers(long)"], ["native", "org.apache.tomcat.jni.SSLContext.void setQuietShutdown(long, boolean)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCipherSuite(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCARevocation(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCertificateChainFile(long, java.lang.String, boolean)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCertificate(long, java.lang.String, java.lang.String, java.lang.String, int)"], ["native", "org.apache.tomcat.jni.SSLContext.long setSessionCacheSize(long, long)"], ["native", "org.apache.tomcat.jni.SSLContext.long getSessionCacheSize(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long setSessionCacheTimeout(long, long)"], ["native", "org.apache.tomcat.jni.SSLContext.long getSessionCacheTimeout(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long setSessionCacheMode(long, long)"], ["native", "org.apache.tomcat.jni.SSLContext.long getSessionCacheMode(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionAccept(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionAcceptGood(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionAcceptRenegotiate(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionCacheFull(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionCbHits(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionConnect(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionConnectGood(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionConnectRenegotiate(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionHits(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionMisses(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionNumber(long)"], ["native", "org.apache.tomcat.jni.SSLContext.long sessionTimeouts(long)"], ["native", "org.apache.tomcat.jni.SSLContext.void setSessionTicketKeys(long, byte[])"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCACertificate(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.void setRandom(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.void setShutdownType(long, int)"], ["native", "org.apache.tomcat.jni.SSLContext.void setVerify(long, int, int)"], ["native", "org.apache.tomcat.jni.SSLContext.int setALPN(long, byte[], int)"], ["long", "org.apache.tomcat.jni.SSLContext.sniCallBack(long, java.lang.String)"], ["void", "org.apache.tomcat.jni.SSLContext.registerDefault(java.lang.Long, org.apache.tomcat.jni.SSLContext$SNICallBack)"], ["void", "org.apache.tomcat.jni.SSLContext.unregisterDefault(java.lang.Long)"], ["native", "org.apache.tomcat.jni.SSLContext.void setCertVerifyCallback(long, org.apache.tomcat.jni.CertificateVerifier)"], ["void", "org.apache.tomcat.jni.SSLContext.setNextProtos(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.void setNpnProtos(long, java.lang.String[], int)"], ["native", "org.apache.tomcat.jni.SSLContext.void setAlpnProtos(long, java.lang.String[], int)"], ["native", "org.apache.tomcat.jni.SSLContext.void setTmpDH(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.void setTmpECDHByCurveName(long, java.lang.String)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setSessionIdContext(long, byte[])"], ["native", "org.apache.tomcat.jni.SSLContext.boolean setCertificateRaw(long, byte[], byte[], int)"], ["native", "org.apache.tomcat.jni.SSLContext.boolean addChainCertificateRaw(long, byte[])"], ["native", "org.apache.tomcat.jni.SSLContext.boolean addClientCACertificateRaw(long, byte[])"], ["org.apache.tomcat.jni.SSLSocket", "org.apache.tomcat.jni.SSLSocket()"], ["native", "org.apache.tomcat.jni.SSLSocket.int attach(long, long)"], ["native", "org.apache.tomcat.jni.SSLSocket.int handshake(long)"], ["native", "org.apache.tomcat.jni.SSLSocket.int renegotiate(long)"], ["native", "org.apache.tomcat.jni.SSLSocket.void setVerify(long, int, int)"], ["native", "org.apache.tomcat.jni.SSLSocket.byte[] getInfoB(long, int)"], ["native", "org.apache.tomcat.jni.SSLSocket.java.lang.String getInfoS(long, int)"], ["native", "org.apache.tomcat.jni.SSLSocket.int getInfoI(long, int)"], ["native", "org.apache.tomcat.jni.SSLSocket.int getALPN(long, byte[])"], ["org.apache.tomcat.jni.Shm", "org.apache.tomcat.jni.Shm()"], ["native", "org.apache.tomcat.jni.Shm.long create(long, java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Shm.int remove(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Shm.int destroy(long)"], ["native", "org.apache.tomcat.jni.Shm.long attach(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.Shm.int detach(long)"], ["native", "org.apache.tomcat.jni.Shm.long baseaddr(long)"], ["native", "org.apache.tomcat.jni.Shm.long size(long)"], ["native", "org.apache.tomcat.jni.Shm.java.nio.ByteBuffer buffer(long)"], ["org.apache.tomcat.jni.Sockaddr", "org.apache.tomcat.jni.Sockaddr()"], ["org.apache.tomcat.jni.Socket", "org.apache.tomcat.jni.Socket()"], ["native", "org.apache.tomcat.jni.Socket.long create(int, int, int, long)"], ["native", "org.apache.tomcat.jni.Socket.int shutdown(long, int)"], ["native", "org.apache.tomcat.jni.Socket.int close(long)"], ["native", "org.apache.tomcat.jni.Socket.void destroy(long)"], ["native", "org.apache.tomcat.jni.Socket.int bind(long, long)"], ["native", "org.apache.tomcat.jni.Socket.int listen(long, int)"], ["native", "org.apache.tomcat.jni.Socket.long acceptx(long, long)"], ["native", "org.apache.tomcat.jni.Socket.long accept(long)"], ["native", "org.apache.tomcat.jni.Socket.int acceptfilter(long, java.lang.String, java.lang.String)"], ["native", "org.apache.tomcat.jni.Socket.boolean atmark(long)"], ["native", "org.apache.tomcat.jni.Socket.int connect(long, long)"], ["native", "org.apache.tomcat.jni.Socket.int send(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.Socket.int sendb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int sendib(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int sendbb(long, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int sendibb(long, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int sendv(long, byte[][])"], ["native", "org.apache.tomcat.jni.Socket.int sendto(long, long, int, byte[], int, int)"], ["native", "org.apache.tomcat.jni.Socket.int recv(long, byte[], int, int)"], ["native", "org.apache.tomcat.jni.Socket.int recvt(long, byte[], int, int, long)"], ["native", "org.apache.tomcat.jni.Socket.int recvb(long, java.nio.ByteBuffer, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int recvbb(long, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int recvbt(long, java.nio.ByteBuffer, int, int, long)"], ["native", "org.apache.tomcat.jni.Socket.int recvbbt(long, int, int, long)"], ["native", "org.apache.tomcat.jni.Socket.int recvfrom(long, long, int, byte[], int, int)"], ["native", "org.apache.tomcat.jni.Socket.int optSet(long, int, int)"], ["native", "org.apache.tomcat.jni.Socket.int optGet(long, int)"], ["native", "org.apache.tomcat.jni.Socket.int timeoutSet(long, long)"], ["native", "org.apache.tomcat.jni.Socket.long timeoutGet(long)"], ["native", "org.apache.tomcat.jni.Socket.long sendfile(long, long, byte[][], byte[][], long, long, int)"], ["native", "org.apache.tomcat.jni.Socket.long sendfilen(long, long, long, long, int)"], ["native", "org.apache.tomcat.jni.Socket.long pool(long)"], ["native", "org.apache.tomcat.jni.Socket.void setsbb(long, java.nio.ByteBuffer)"], ["native", "org.apache.tomcat.jni.Socket.void setrbb(long, java.nio.ByteBuffer)"], ["native", "org.apache.tomcat.jni.Socket.int dataSet(long, java.lang.String, java.lang.Object)"], ["native", "org.apache.tomcat.jni.Socket.java.lang.Object dataGet(long, java.lang.String)"], ["org.apache.tomcat.jni.Status", "org.apache.tomcat.jni.Status()"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOSTAT(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOPOOL(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EBADDATE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINVALSOCK(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOPROC(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTIME(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENODIR(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOLOCK(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOPOLL(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOSOCKET(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTHREAD(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTHDKEY(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EGENERAL(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOSHMAVAIL(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EBADIP(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EBADMASK(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EDSOPEN(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EABSOLUTE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ERELATIVE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINCOMPLETE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EABOVEROOT(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EBADPATH(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EPATHWILD(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ESYMNOTFOUND(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EPROC_UNKNOWN(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTENOUGHENTROPY(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_INCHILD(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_INPARENT(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_DETACH(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_NOTDETACH(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_CHILD_DONE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_CHILD_NOTDONE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_TIMEUP(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_INCOMPLETE(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_BADCH(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_BADARG(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EOF(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_NOTFOUND(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ANONYMOUS(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_FILEBASED(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_KEYBASED(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINIT(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTIMPL(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EMISMATCH(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EBUSY(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EAGAIN(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ETIMEDOUT(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ECONNABORTED(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ECONNRESET(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINPROGRESS(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINTR(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_ENOTSOCK(int)"], ["boolean", "org.apache.tomcat.jni.Status.APR_STATUS_IS_EINVAL(int)"], ["org.apache.tomcat.jni.Stdlib", "org.apache.tomcat.jni.Stdlib()"], ["native", "org.apache.tomcat.jni.Stdlib.boolean memread(byte[], long, int)"], ["native", "org.apache.tomcat.jni.Stdlib.boolean memwrite(long, byte[], int)"], ["native", "org.apache.tomcat.jni.Stdlib.boolean memset(long, int, int)"], ["native", "org.apache.tomcat.jni.Stdlib.long malloc(int)"], ["native", "org.apache.tomcat.jni.Stdlib.long realloc(long, int)"], ["native", "org.apache.tomcat.jni.Stdlib.long calloc(int, int)"], ["native", "org.apache.tomcat.jni.Stdlib.void free(long)"], ["native", "org.apache.tomcat.jni.Stdlib.int getpid()"], ["native", "org.apache.tomcat.jni.Stdlib.int getppid()"], ["org.apache.tomcat.jni.Thread", "org.apache.tomcat.jni.Thread()"], ["native", "org.apache.tomcat.jni.Thread.long current()"], ["org.apache.tomcat.jni.Time", "org.apache.tomcat.jni.Time()"], ["long", "org.apache.tomcat.jni.Time.sec(long)"], ["long", "org.apache.tomcat.jni.Time.msec(long)"], ["native", "org.apache.tomcat.jni.Time.long now()"], ["native", "org.apache.tomcat.jni.Time.java.lang.String rfc822(long)"], ["native", "org.apache.tomcat.jni.Time.java.lang.String ctime(long)"], ["native", "org.apache.tomcat.jni.Time.void sleep(long)"], ["org.apache.tomcat.jni.User", "org.apache.tomcat.jni.User()"], ["native", "org.apache.tomcat.jni.User.long uidCurrent(long)"], ["native", "org.apache.tomcat.jni.User.long gidCurrent(long)"], ["native", "org.apache.tomcat.jni.User.long uid(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.User.long usergid(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.User.long gid(java.lang.String, long)"], ["native", "org.apache.tomcat.jni.User.java.lang.String username(long, long)"], ["native", "org.apache.tomcat.jni.User.java.lang.String groupname(long, long)"], ["native", "org.apache.tomcat.jni.User.int uidcompare(long, long)"], ["native", "org.apache.tomcat.jni.User.int gidcompare(long, long)"], ["native", "org.apache.tomcat.jni.User.java.lang.String homepath(java.lang.String, long)"], ["org.apache.tomcat.util.Diagnostics", "org.apache.tomcat.util.Diagnostics()"], ["boolean", "org.apache.tomcat.util.Diagnostics.isThreadContentionMonitoringEnabled()"], ["void", "org.apache.tomcat.util.Diagnostics.setThreadContentionMonitoringEnabled(boolean)"], ["boolean", "org.apache.tomcat.util.Diagnostics.isThreadCpuTimeEnabled()"], ["void", "org.apache.tomcat.util.Diagnostics.setThreadCpuTimeEnabled(boolean)"], ["void", "org.apache.tomcat.util.Diagnostics.resetPeakThreadCount()"], ["void", "org.apache.tomcat.util.Diagnostics.setVerboseClassLoading(boolean)"], ["void", "org.apache.tomcat.util.Diagnostics.setLoggerLevel(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.Diagnostics.setVerboseGarbageCollection(boolean)"], ["void", "org.apache.tomcat.util.Diagnostics.gc()"], ["void", "org.apache.tomcat.util.Diagnostics.resetPeakUsage(java.lang.String)"], ["boolean", "org.apache.tomcat.util.Diagnostics.setUsageThreshold(java.lang.String, long)"], ["boolean", "org.apache.tomcat.util.Diagnostics.setCollectionUsageThreshold(java.lang.String, long)"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.findDeadlock()"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getThreadDump()"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getThreadDump(java.util.Enumeration<java.util.Locale>)"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getThreadDump(org.apache.tomcat.util.res.StringManager)"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getVMInfo()"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getVMInfo(java.util.Enumeration<java.util.Locale>)"], ["java.lang.String", "org.apache.tomcat.util.Diagnostics.getVMInfo(org.apache.tomcat.util.res.StringManager)"], ["org.apache.tomcat.util.ExceptionUtils", "org.apache.tomcat.util.ExceptionUtils()"], ["void", "org.apache.tomcat.util.ExceptionUtils.handleThrowable(java.lang.Throwable)"], ["java.lang.Throwable", "org.apache.tomcat.util.ExceptionUtils.unwrapInvocationTargetException(java.lang.Throwable)"], ["void", "org.apache.tomcat.util.ExceptionUtils.preload()"], ["org.apache.tomcat.util.IntrospectionUtils", "org.apache.tomcat.util.IntrospectionUtils()"], ["boolean", "org.apache.tomcat.util.IntrospectionUtils.setProperty(java.lang.Object, java.lang.String, java.lang.String)"], ["boolean", "org.apache.tomcat.util.IntrospectionUtils.setProperty(java.lang.Object, java.lang.String, java.lang.String, boolean)"], ["boolean", "org.apache.tomcat.util.IntrospectionUtils.setProperty(java.lang.Object, java.lang.String, java.lang.String, boolean, java.lang.StringBuilder)"], ["java.lang.String", "org.apache.tomcat.util.IntrospectionUtils.escape(java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.IntrospectionUtils.getProperty(java.lang.Object, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.IntrospectionUtils.replaceProperties(java.lang.String, java.util.Hashtable<java.lang.Object, java.lang.Object>, org.apache.tomcat.util.IntrospectionUtils$PropertySource[])"], ["java.lang.String", "org.apache.tomcat.util.IntrospectionUtils.replaceProperties(java.lang.String, java.util.Hashtable<java.lang.Object, java.lang.Object>, org.apache.tomcat.util.IntrospectionUtils$PropertySource[], java.lang.ClassLoader)"], ["java.lang.String", "org.apache.tomcat.util.IntrospectionUtils.capitalize(java.lang.String)"], ["void", "org.apache.tomcat.util.IntrospectionUtils.clear()"], ["java.lang.reflect.Method[]", "org.apache.tomcat.util.IntrospectionUtils.findMethods(java.lang.Class<?>)"], ["java.lang.reflect.Method", "org.apache.tomcat.util.IntrospectionUtils.findMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])"], ["java.lang.Object", "org.apache.tomcat.util.IntrospectionUtils.callMethod1(java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.ClassLoader)"], ["java.lang.Object", "org.apache.tomcat.util.IntrospectionUtils.callMethodN(java.lang.Object, java.lang.String, java.lang.Object[], java.lang.Class<?>[])"], ["java.lang.Object", "org.apache.tomcat.util.IntrospectionUtils.convert(java.lang.String, java.lang.Class<?>)"], ["boolean", "org.apache.tomcat.util.IntrospectionUtils.isInstance(java.lang.Class<?>, java.lang.String)"], ["org.apache.tomcat.util.MultiThrowable", "org.apache.tomcat.util.MultiThrowable()"], ["void", "org.apache.tomcat.util.MultiThrowable.add(java.lang.Throwable)"], ["java.lang.Throwable", "org.apache.tomcat.util.MultiThrowable.getThrowable()"], ["int", "org.apache.tomcat.util.MultiThrowable.size()"], ["java.lang.String", "org.apache.tomcat.util.MultiThrowable.toString()"], ["org.apache.tomcat.util.bcel.Const", "org.apache.tomcat.util.bcel.Const()"], ["java.lang.String", "org.apache.tomcat.util.bcel.Const.getConstantName(int)"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.AnnotationElementValue.stringifyValue()"], ["org.apache.tomcat.util.bcel.classfile.AnnotationEntry", "org.apache.tomcat.util.bcel.classfile.AnnotationElementValue.getAnnotationEntry()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.AnnotationEntry.getAnnotationType()"], ["org.apache.tomcat.util.bcel.classfile.AnnotationEntry[]", "org.apache.tomcat.util.bcel.classfile.Annotations.getAnnotationEntries()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.ArrayElementValue.stringifyValue()"], ["org.apache.tomcat.util.bcel.classfile.ElementValue[]", "org.apache.tomcat.util.bcel.classfile.ArrayElementValue.getElementValuesArray()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.ClassElementValue.stringifyValue()"], ["org.apache.tomcat.util.bcel.classfile.ClassFormatException", "org.apache.tomcat.util.bcel.classfile.ClassFormatException()"], ["org.apache.tomcat.util.bcel.classfile.ClassFormatException", "org.apache.tomcat.util.bcel.classfile.ClassFormatException(java.lang.String)"], ["org.apache.tomcat.util.bcel.classfile.ClassParser", "org.apache.tomcat.util.bcel.classfile.ClassParser(java.io.InputStream)"], ["org.apache.tomcat.util.bcel.classfile.JavaClass", "org.apache.tomcat.util.bcel.classfile.ClassParser.parse()"], ["byte", "org.apache.tomcat.util.bcel.classfile.Constant.getTag()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.Constant.toString()"], ["int", "org.apache.tomcat.util.bcel.classfile.ConstantClass.getNameIndex()"], ["double", "org.apache.tomcat.util.bcel.classfile.ConstantDouble.getBytes()"], ["float", "org.apache.tomcat.util.bcel.classfile.ConstantFloat.getBytes()"], ["int", "org.apache.tomcat.util.bcel.classfile.ConstantInteger.getBytes()"], ["long", "org.apache.tomcat.util.bcel.classfile.ConstantLong.getBytes()"], ["org.apache.tomcat.util.bcel.classfile.Constant", "org.apache.tomcat.util.bcel.classfile.ConstantPool.getConstant(int)"], ["org.apache.tomcat.util.bcel.classfile.Constant", "org.apache.tomcat.util.bcel.classfile.ConstantPool.getConstant(int, byte)"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.ConstantUtf8.getBytes()"], ["org.apache.tomcat.util.bcel.classfile.ElementValue", "org.apache.tomcat.util.bcel.classfile.ElementValue.readElementValue(java.io.DataInput, org.apache.tomcat.util.bcel.classfile.ConstantPool)"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.ElementValuePair.getNameString()"], ["org.apache.tomcat.util.bcel.classfile.ElementValue", "org.apache.tomcat.util.bcel.classfile.ElementValuePair.getValue()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.EnumElementValue.stringifyValue()"], ["int", "org.apache.tomcat.util.bcel.classfile.JavaClass.getAccessFlags()"], ["org.apache.tomcat.util.bcel.classfile.AnnotationEntry[]", "org.apache.tomcat.util.bcel.classfile.JavaClass.getAnnotationEntries()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.JavaClass.getClassName()"], ["java.lang.String[]", "org.apache.tomcat.util.bcel.classfile.JavaClass.getInterfaceNames()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.JavaClass.getSuperclassName()"], ["int", "org.apache.tomcat.util.bcel.classfile.SimpleElementValue.getIndex()"], ["java.lang.String", "org.apache.tomcat.util.bcel.classfile.SimpleElementValue.stringifyValue()"], ["org.apache.tomcat.util.buf.AbstractChunk", "org.apache.tomcat.util.buf.AbstractChunk()"], ["void", "org.apache.tomcat.util.buf.AbstractChunk.setLimit(int)"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.getLimit()"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.getStart()"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.getEnd()"], ["void", "org.apache.tomcat.util.buf.AbstractChunk.setEnd(int)"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.getOffset()"], ["void", "org.apache.tomcat.util.buf.AbstractChunk.setOffset(int)"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.getLength()"], ["boolean", "org.apache.tomcat.util.buf.AbstractChunk.isNull()"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.indexOf(java.lang.String, int, int, int)"], ["void", "org.apache.tomcat.util.buf.AbstractChunk.recycle()"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.hashCode()"], ["int", "org.apache.tomcat.util.buf.AbstractChunk.hash()"], ["org.apache.tomcat.util.buf.Ascii", "org.apache.tomcat.util.buf.Ascii()"], ["int", "org.apache.tomcat.util.buf.Ascii.toLower(int)"], ["long", "org.apache.tomcat.util.buf.Ascii.parseLong(byte[], int, int)"], ["org.apache.tomcat.util.buf.Asn1Parser", "org.apache.tomcat.util.buf.Asn1Parser(byte[])"], ["void", "org.apache.tomcat.util.buf.Asn1Parser.parseTag(int)"], ["void", "org.apache.tomcat.util.buf.Asn1Parser.parseFullLength()"], ["int", "org.apache.tomcat.util.buf.Asn1Parser.parseLength()"], ["java.math.BigInteger", "org.apache.tomcat.util.buf.Asn1Parser.parseInt()"], ["void", "org.apache.tomcat.util.buf.Asn1Parser.parseBytes(byte[])"], ["org.apache.tomcat.util.buf.Asn1Writer", "org.apache.tomcat.util.buf.Asn1Writer()"], ["byte[]", "org.apache.tomcat.util.buf.Asn1Writer.writeSequence(byte[]...)"], ["byte[]", "org.apache.tomcat.util.buf.Asn1Writer.writeInteger(int)"], ["byte[]", "org.apache.tomcat.util.buf.Asn1Writer.writeOctetString(byte[])"], ["byte[]", "org.apache.tomcat.util.buf.Asn1Writer.writeTag(byte, byte[])"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.B2CConverter.getCharset(java.lang.String)"], ["org.apache.tomcat.util.buf.B2CConverter", "org.apache.tomcat.util.buf.B2CConverter(java.nio.charset.Charset)"], ["org.apache.tomcat.util.buf.B2CConverter", "org.apache.tomcat.util.buf.B2CConverter(java.nio.charset.Charset, boolean)"], ["void", "org.apache.tomcat.util.buf.B2CConverter.recycle()"], ["void", "org.apache.tomcat.util.buf.B2CConverter.convert(org.apache.tomcat.util.buf.ByteChunk, org.apache.tomcat.util.buf.CharChunk, boolean)"], ["void", "org.apache.tomcat.util.buf.B2CConverter.convert(java.nio.ByteBuffer, java.nio.CharBuffer, org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel, boolean)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.B2CConverter.getCharset()"], ["org.apache.tomcat.util.buf.ByteBufferHolder", "org.apache.tomcat.util.buf.ByteBufferHolder(java.nio.ByteBuffer, boolean)"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.buf.ByteBufferHolder.getBuf()"], ["boolean", "org.apache.tomcat.util.buf.ByteBufferHolder.isFlipped()"], ["boolean", "org.apache.tomcat.util.buf.ByteBufferHolder.flip()"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.buf.ByteBufferUtils.expand(java.nio.ByteBuffer, int)"], ["void", "org.apache.tomcat.util.buf.ByteBufferUtils.cleanDirectBuffer(java.nio.ByteBuffer)"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.tomcat.util.buf.ByteChunk()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.tomcat.util.buf.ByteChunk(int)"], ["java.lang.Object", "org.apache.tomcat.util.buf.ByteChunk.clone()"], ["void", "org.apache.tomcat.util.buf.ByteChunk.recycle()"], ["void", "org.apache.tomcat.util.buf.ByteChunk.allocate(int, int)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.setBytes(byte[], int, int)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.setCharset(java.nio.charset.Charset)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.ByteChunk.getCharset()"], ["byte[]", "org.apache.tomcat.util.buf.ByteChunk.getBytes()"], ["byte[]", "org.apache.tomcat.util.buf.ByteChunk.getBuffer()"], ["void", "org.apache.tomcat.util.buf.ByteChunk.setByteInputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.setByteOutputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteOutputChannel)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.append(byte)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.append(org.apache.tomcat.util.buf.ByteChunk)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.append(byte[], int, int)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.append(java.nio.ByteBuffer)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.substract()"], ["int", "org.apache.tomcat.util.buf.ByteChunk.subtract()"], ["byte", "org.apache.tomcat.util.buf.ByteChunk.substractB()"], ["byte", "org.apache.tomcat.util.buf.ByteChunk.subtractB()"], ["int", "org.apache.tomcat.util.buf.ByteChunk.substract(byte[], int, int)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.subtract(byte[], int, int)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.substract(java.nio.ByteBuffer)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.subtract(java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.buf.ByteChunk.flushBuffer()"], ["void", "org.apache.tomcat.util.buf.ByteChunk.makeSpace(int)"], ["java.lang.String", "org.apache.tomcat.util.buf.ByteChunk.toString()"], ["java.lang.String", "org.apache.tomcat.util.buf.ByteChunk.toStringInternal()"], ["long", "org.apache.tomcat.util.buf.ByteChunk.getLong()"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(java.lang.Object)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equalsIgnoreCase(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(org.apache.tomcat.util.buf.ByteChunk)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(byte[], int, int)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(org.apache.tomcat.util.buf.CharChunk)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.equals(char[], int, int)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.startsWith(java.lang.String, int)"], ["boolean", "org.apache.tomcat.util.buf.ByteChunk.startsWithIgnoreCase(java.lang.String, int)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.indexOf(char, int)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.indexOf(byte[], int, int, char)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.findByte(byte[], int, int, byte)"], ["int", "org.apache.tomcat.util.buf.ByteChunk.findBytes(byte[], int, int, byte[])"], ["byte[]", "org.apache.tomcat.util.buf.ByteChunk.convertToBytes(java.lang.String)"], ["org.apache.tomcat.util.buf.C2BConverter", "org.apache.tomcat.util.buf.C2BConverter(java.nio.charset.Charset)"], ["void", "org.apache.tomcat.util.buf.C2BConverter.recycle()"], ["boolean", "org.apache.tomcat.util.buf.C2BConverter.isUndeflow()"], ["void", "org.apache.tomcat.util.buf.C2BConverter.convert(org.apache.tomcat.util.buf.CharChunk, org.apache.tomcat.util.buf.ByteChunk)"], ["void", "org.apache.tomcat.util.buf.C2BConverter.convert(java.nio.CharBuffer, java.nio.ByteBuffer)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.C2BConverter.getCharset()"], ["org.apache.tomcat.util.buf.CharChunk", "org.apache.tomcat.util.buf.CharChunk()"], ["org.apache.tomcat.util.buf.CharChunk", "org.apache.tomcat.util.buf.CharChunk(int)"], ["java.lang.Object", "org.apache.tomcat.util.buf.CharChunk.clone()"], ["void", "org.apache.tomcat.util.buf.CharChunk.allocate(int, int)"], ["void", "org.apache.tomcat.util.buf.CharChunk.setChars(char[], int, int)"], ["char[]", "org.apache.tomcat.util.buf.CharChunk.getChars()"], ["char[]", "org.apache.tomcat.util.buf.CharChunk.getBuffer()"], ["void", "org.apache.tomcat.util.buf.CharChunk.setCharInputChannel(org.apache.tomcat.util.buf.CharChunk$CharInputChannel)"], ["void", "org.apache.tomcat.util.buf.CharChunk.setCharOutputChannel(org.apache.tomcat.util.buf.CharChunk$CharOutputChannel)"], ["void", "org.apache.tomcat.util.buf.CharChunk.append(char)"], ["void", "org.apache.tomcat.util.buf.CharChunk.append(org.apache.tomcat.util.buf.CharChunk)"], ["void", "org.apache.tomcat.util.buf.CharChunk.append(char[], int, int)"], ["void", "org.apache.tomcat.util.buf.CharChunk.append(java.lang.String)"], ["void", "org.apache.tomcat.util.buf.CharChunk.append(java.lang.String, int, int)"], ["int", "org.apache.tomcat.util.buf.CharChunk.substract()"], ["int", "org.apache.tomcat.util.buf.CharChunk.subtract()"], ["int", "org.apache.tomcat.util.buf.CharChunk.substract(char[], int, int)"], ["int", "org.apache.tomcat.util.buf.CharChunk.subtract(char[], int, int)"], ["void", "org.apache.tomcat.util.buf.CharChunk.flushBuffer()"], ["void", "org.apache.tomcat.util.buf.CharChunk.makeSpace(int)"], ["java.lang.String", "org.apache.tomcat.util.buf.CharChunk.toString()"], ["java.lang.String", "org.apache.tomcat.util.buf.CharChunk.toStringInternal()"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.equals(java.lang.Object)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.equals(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.equalsIgnoreCase(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.equals(org.apache.tomcat.util.buf.CharChunk)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.equals(char[], int, int)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.startsWith(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.startsWithIgnoreCase(java.lang.String, int)"], ["boolean", "org.apache.tomcat.util.buf.CharChunk.endsWith(java.lang.String)"], ["int", "org.apache.tomcat.util.buf.CharChunk.indexOf(char)"], ["int", "org.apache.tomcat.util.buf.CharChunk.indexOf(char, int)"], ["int", "org.apache.tomcat.util.buf.CharChunk.indexOf(char[], int, int, char)"], ["char", "org.apache.tomcat.util.buf.CharChunk.charAt(int)"], ["java.lang.CharSequence", "org.apache.tomcat.util.buf.CharChunk.subSequence(int, int)"], ["int", "org.apache.tomcat.util.buf.CharChunk.length()"], ["void", "org.apache.tomcat.util.buf.CharChunk.setOptimizedWrite(boolean)"], ["boolean", "org.apache.tomcat.util.buf.CharsetCache$DummyCharset.contains(java.nio.charset.Charset)"], ["java.nio.charset.CharsetDecoder", "org.apache.tomcat.util.buf.CharsetCache$DummyCharset.newDecoder()"], ["java.nio.charset.CharsetEncoder", "org.apache.tomcat.util.buf.CharsetCache$DummyCharset.newEncoder()"], ["org.apache.tomcat.util.buf.CharsetCache", "org.apache.tomcat.util.buf.CharsetCache()"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.CharsetCache.getCharset(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.CharsetUtil.isAsciiSuperset(java.nio.charset.Charset)"], ["org.apache.tomcat.util.buf.EncodedSolidusHandling[]", "org.apache.tomcat.util.buf.EncodedSolidusHandling.values()"], ["org.apache.tomcat.util.buf.EncodedSolidusHandling", "org.apache.tomcat.util.buf.EncodedSolidusHandling.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.buf.EncodedSolidusHandling.getValue()"], ["org.apache.tomcat.util.buf.EncodedSolidusHandling", "org.apache.tomcat.util.buf.EncodedSolidusHandling.fromString(java.lang.String)"], ["org.apache.tomcat.util.buf.HexUtils", "org.apache.tomcat.util.buf.HexUtils()"], ["int", "org.apache.tomcat.util.buf.HexUtils.getDec(int)"], ["byte", "org.apache.tomcat.util.buf.HexUtils.getHex(int)"], ["java.lang.String", "org.apache.tomcat.util.buf.HexUtils.toHexString(byte[])"], ["byte[]", "org.apache.tomcat.util.buf.HexUtils.fromHexString(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory.newInstance()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.buf.MessageBytes.newInstance()"], ["java.lang.Object", "org.apache.tomcat.util.buf.MessageBytes.clone()"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.isNull()"], ["void", "org.apache.tomcat.util.buf.MessageBytes.recycle()"], ["void", "org.apache.tomcat.util.buf.MessageBytes.setBytes(byte[], int, int)"], ["void", "org.apache.tomcat.util.buf.MessageBytes.setChars(char[], int, int)"], ["void", "org.apache.tomcat.util.buf.MessageBytes.setString(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.buf.MessageBytes.toString()"], ["int", "org.apache.tomcat.util.buf.MessageBytes.getType()"], ["org.apache.tomcat.util.buf.ByteChunk", "org.apache.tomcat.util.buf.MessageBytes.getByteChunk()"], ["org.apache.tomcat.util.buf.CharChunk", "org.apache.tomcat.util.buf.MessageBytes.getCharChunk()"], ["java.lang.String", "org.apache.tomcat.util.buf.MessageBytes.getString()"], ["java.nio.charset.Charset", "org.apache.tomcat.util.buf.MessageBytes.getCharset()"], ["void", "org.apache.tomcat.util.buf.MessageBytes.setCharset(java.nio.charset.Charset)"], ["void", "org.apache.tomcat.util.buf.MessageBytes.toBytes()"], ["void", "org.apache.tomcat.util.buf.MessageBytes.toChars()"], ["int", "org.apache.tomcat.util.buf.MessageBytes.getLength()"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.equals(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.equalsIgnoreCase(java.lang.String)"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.equals(java.lang.Object)"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.equals(org.apache.tomcat.util.buf.MessageBytes)"], ["boolean", "org.apache.tomcat.util.buf.MessageBytes.startsWithIgnoreCase(java.lang.String, int)"], ["int", "org.apache.tomcat.util.buf.MessageBytes.hashCode()"], ["int", "org.apache.tomcat.util.buf.MessageBytes.indexOf(java.lang.String, int)"], ["int", "org.apache.tomcat.util.buf.MessageBytes.indexOf(java.lang.String)"], ["int", "org.apache.tomcat.util.buf.MessageBytes.indexOfIgnoreCase(java.lang.String, int)"], ["void", "org.apache.tomcat.util.buf.MessageBytes.duplicate(org.apache.tomcat.util.buf.MessageBytes)"], ["void", "org.apache.tomcat.util.buf.MessageBytes.setLong(long)"], ["long", "org.apache.tomcat.util.buf.MessageBytes.getLong()"], ["java.lang.String", "org.apache.tomcat.util.buf.StringCache$ByteEntry.toString()"], ["int", "org.apache.tomcat.util.buf.StringCache$ByteEntry.hashCode()"], ["boolean", "org.apache.tomcat.util.buf.StringCache$ByteEntry.equals(java.lang.Object)"], ["java.lang.String", "org.apache.tomcat.util.buf.StringCache$CharEntry.toString()"], ["int", "org.apache.tomcat.util.buf.StringCache$CharEntry.hashCode()"], ["boolean", "org.apache.tomcat.util.buf.StringCache$CharEntry.equals(java.lang.Object)"], ["org.apache.tomcat.util.buf.StringCache", "org.apache.tomcat.util.buf.StringCache()"], ["int", "org.apache.tomcat.util.buf.StringCache.getCacheSize()"], ["void", "org.apache.tomcat.util.buf.StringCache.setCacheSize(int)"], ["boolean", "org.apache.tomcat.util.buf.StringCache.getByteEnabled()"], ["void", "org.apache.tomcat.util.buf.StringCache.setByteEnabled(boolean)"], ["boolean", "org.apache.tomcat.util.buf.StringCache.getCharEnabled()"], ["void", "org.apache.tomcat.util.buf.StringCache.setCharEnabled(boolean)"], ["int", "org.apache.tomcat.util.buf.StringCache.getTrainThreshold()"], ["void", "org.apache.tomcat.util.buf.StringCache.setTrainThreshold(int)"], ["int", "org.apache.tomcat.util.buf.StringCache.getAccessCount()"], ["int", "org.apache.tomcat.util.buf.StringCache.getHitCount()"], ["void", "org.apache.tomcat.util.buf.StringCache.reset()"], ["java.lang.String", "org.apache.tomcat.util.buf.StringCache.toString(org.apache.tomcat.util.buf.ByteChunk)"], ["java.lang.String", "org.apache.tomcat.util.buf.StringCache.toString(org.apache.tomcat.util.buf.CharChunk)"], ["java.lang.String", "org.apache.tomcat.util.buf.StringUtils.join(java.lang.String[])"], ["void", "org.apache.tomcat.util.buf.StringUtils.join(java.lang.String[], char, java.lang.StringBuilder)"], ["java.lang.String", "org.apache.tomcat.util.buf.StringUtils.join(java.util.Collection<java.lang.String>)"], ["java.lang.String", "org.apache.tomcat.util.buf.StringUtils.join(java.util.Collection<java.lang.String>, char)"], ["void", "org.apache.tomcat.util.buf.StringUtils.join(java.lang.Iterable<java.lang.String>, char, java.lang.StringBuilder)"], ["<T> void", "org.apache.tomcat.util.buf.StringUtils.join(T[], char, java.util.function.Function<T, java.lang.String>, java.lang.StringBuilder)"], ["<T> void", "org.apache.tomcat.util.buf.StringUtils.join(java.lang.Iterable<T>, char, java.util.function.Function<T, java.lang.String>, java.lang.StringBuilder)"], ["org.apache.tomcat.util.buf.UDecoder$DecodeException", "org.apache.tomcat.util.buf.UDecoder$DecodeException(java.lang.String)"], ["synchronized", "org.apache.tomcat.util.buf.UDecoder$DecodeException.java.lang.Throwable fillInStackTrace()"], ["org.apache.tomcat.util.buf.UDecoder", "org.apache.tomcat.util.buf.UDecoder()"], ["void", "org.apache.tomcat.util.buf.UDecoder.convert(org.apache.tomcat.util.buf.ByteChunk, boolean)"], ["void", "org.apache.tomcat.util.buf.UDecoder.convert(org.apache.tomcat.util.buf.ByteChunk, org.apache.tomcat.util.buf.EncodedSolidusHandling)"], ["void", "org.apache.tomcat.util.buf.UDecoder.convert(org.apache.tomcat.util.buf.CharChunk, boolean)"], ["void", "org.apache.tomcat.util.buf.UDecoder.convert(org.apache.tomcat.util.buf.MessageBytes, boolean)"], ["java.lang.String", "org.apache.tomcat.util.buf.UDecoder.convert(java.lang.String, boolean)"], ["java.lang.String", "org.apache.tomcat.util.buf.UDecoder.URLDecode(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.buf.UDecoder.URLDecode(java.lang.String, java.nio.charset.Charset)"], ["org.apache.tomcat.util.buf.UEncoder$SafeCharsSet[]", "org.apache.tomcat.util.buf.UEncoder$SafeCharsSet.values()"], ["org.apache.tomcat.util.buf.UEncoder$SafeCharsSet", "org.apache.tomcat.util.buf.UEncoder$SafeCharsSet.valueOf(java.lang.String)"], ["org.apache.tomcat.util.buf.UEncoder", "org.apache.tomcat.util.buf.UEncoder(org.apache.tomcat.util.buf.UEncoder$SafeCharsSet)"], ["org.apache.tomcat.util.buf.CharChunk", "org.apache.tomcat.util.buf.UEncoder.encodeURL(java.lang.String, int, int)"], ["boolean", "org.apache.tomcat.util.buf.UriUtil.hasScheme(java.lang.CharSequence)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.buildJarUrl(java.io.File)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.buildJarUrl(java.io.File, java.lang.String)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.buildJarUrl(java.lang.String)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.buildJarUrl(java.lang.String, java.lang.String)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.buildJarSafeUrl(java.io.File)"], ["java.net.URL", "org.apache.tomcat.util.buf.UriUtil.warToJar(java.net.URL)"], ["java.lang.String", "org.apache.tomcat.util.buf.UriUtil.getWarSeparator()"], ["org.apache.tomcat.util.buf.Utf8Decoder", "org.apache.tomcat.util.buf.Utf8Decoder()"], ["org.apache.tomcat.util.buf.Utf8Encoder", "org.apache.tomcat.util.buf.Utf8Encoder()"], ["org.apache.tomcat.util.codec.binary.Base64", "org.apache.tomcat.util.codec.binary.Base64()"], ["org.apache.tomcat.util.codec.binary.Base64", "org.apache.tomcat.util.codec.binary.Base64(boolean)"], ["org.apache.tomcat.util.codec.binary.Base64", "org.apache.tomcat.util.codec.binary.Base64(int)"], ["org.apache.tomcat.util.codec.binary.Base64", "org.apache.tomcat.util.codec.binary.Base64(int, byte[])"], ["org.apache.tomcat.util.codec.binary.Base64", "org.apache.tomcat.util.codec.binary.Base64(int, byte[], boolean)"], ["boolean", "org.apache.tomcat.util.codec.binary.Base64.isUrlSafe()"], ["boolean", "org.apache.tomcat.util.codec.binary.Base64.isBase64(byte)"], ["boolean", "org.apache.tomcat.util.codec.binary.Base64.isBase64(java.lang.String)"], ["boolean", "org.apache.tomcat.util.codec.binary.Base64.isBase64(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64(byte[])"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64String(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64URLSafe(byte[])"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64URLSafeString(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64Chunked(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64(byte[], boolean)"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64(byte[], boolean, boolean)"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeBase64(byte[], boolean, boolean, int)"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(java.lang.String)"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64URLSafe(java.lang.String)"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(byte[], int, int)"], ["java.math.BigInteger", "org.apache.tomcat.util.codec.binary.Base64.decodeInteger(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.Base64.encodeInteger(java.math.BigInteger)"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.BaseNCodec$Context.toString()"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.BaseNCodec.encodeToString(byte[])"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.BaseNCodec.encodeAsString(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.BaseNCodec.decode(java.lang.String)"], ["byte[]", "org.apache.tomcat.util.codec.binary.BaseNCodec.decode(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.BaseNCodec.decode(byte[], int, int)"], ["byte[]", "org.apache.tomcat.util.codec.binary.BaseNCodec.encode(byte[])"], ["byte[]", "org.apache.tomcat.util.codec.binary.BaseNCodec.encode(byte[], int, int)"], ["boolean", "org.apache.tomcat.util.codec.binary.BaseNCodec.isInAlphabet(byte[], boolean)"], ["boolean", "org.apache.tomcat.util.codec.binary.BaseNCodec.isInAlphabet(java.lang.String)"], ["long", "org.apache.tomcat.util.codec.binary.BaseNCodec.getEncodedLength(byte[])"], ["org.apache.tomcat.util.codec.binary.StringUtils", "org.apache.tomcat.util.codec.binary.StringUtils()"], ["byte[]", "org.apache.tomcat.util.codec.binary.StringUtils.getBytesUtf8(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.StringUtils.newStringUsAscii(byte[])"], ["java.lang.String", "org.apache.tomcat.util.codec.binary.StringUtils.newStringUtf8(byte[])"], ["org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl(java.lang.String, V)"], ["java.lang.String", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl.getKey()"], ["V", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl.getValue()"], ["V", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl.setValue(V)"], ["java.lang.Object", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryImpl.getKey()"], ["org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator(java.util.Iterator<java.util.Map$Entry<org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key, V>>)"], ["boolean", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator.hasNext()"], ["java.util.Map$Entry<java.lang.String, V>", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator.next()"], ["void", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator.remove()"], ["java.lang.Object", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntryIterator.next()"], ["org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntrySet", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntrySet(java.util.Set<java.util.Map$Entry<org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key, V>>)"], ["java.util.Iterator<java.util.Map$Entry<java.lang.String, V>>", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntrySet.iterator()"], ["int", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$EntrySet.size()"], ["java.lang.String", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key.getKey()"], ["int", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key.hashCode()"], ["boolean", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key.equals(java.lang.Object)"], ["org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap$Key.getInstance(java.lang.Object)"], ["org.apache.tomcat.util.collections.CaseInsensitiveKeyMap", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap()"], ["V", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.get(java.lang.Object)"], ["V", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.put(java.lang.String, V)"], ["void", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.putAll(java.util.Map<? extends java.lang.String, ? extends V>)"], ["boolean", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.containsKey(java.lang.Object)"], ["V", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.remove(java.lang.Object)"], ["java.util.Set<java.util.Map$Entry<java.lang.String, V>>", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.entrySet()"], ["java.lang.Object", "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap.put(java.lang.Object, java.lang.Object)"], ["org.apache.tomcat.util.collections.ConcurrentCache", "org.apache.tomcat.util.collections.ConcurrentCache(int)"], ["V", "org.apache.tomcat.util.collections.ConcurrentCache.get(K)"], ["void", "org.apache.tomcat.util.collections.ConcurrentCache.put(K, V)"], ["K", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1.getKey()"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1.getValue()"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1$1.setValue(V)"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1.hasNext()"], ["java.util.Map$Entry<K, V>", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1.next()"], ["void", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1.remove()"], ["java.lang.Object", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1$1.next()"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1.isEmpty()"], ["int", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1.size()"], ["java.util.Iterator<java.util.Map$Entry<K, V>>", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$1.iterator()"], ["org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key(java.lang.Object, java.lang.ref.ReferenceQueue<java.lang.Object>)"], ["int", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key.hashCode()"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key.equals(java.lang.Object)"], ["void", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key.ackDeath()"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap$Key.isDead()"], ["org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap()"], ["void", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.maintain()"], ["int", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.size()"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.isEmpty()"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.containsValue(java.lang.Object)"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.containsKey(java.lang.Object)"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.get(java.lang.Object)"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.put(K, V)"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.remove(java.lang.Object)"], ["void", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.clear()"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.putIfAbsent(K, V)"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.remove(java.lang.Object, java.lang.Object)"], ["boolean", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.replace(K, V, V)"], ["V", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.replace(K, V)"], ["java.util.Set<java.util.Map$Entry<K, V>>", "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap.entrySet()"], ["org.apache.tomcat.util.collections.SynchronizedQueue", "org.apache.tomcat.util.collections.SynchronizedQueue()"], ["org.apache.tomcat.util.collections.SynchronizedQueue", "org.apache.tomcat.util.collections.SynchronizedQueue(int)"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedQueue.boolean offer(T)"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedQueue.T poll()"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedQueue.int size()"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedQueue.void clear()"], ["org.apache.tomcat.util.collections.SynchronizedStack", "org.apache.tomcat.util.collections.SynchronizedStack()"], ["org.apache.tomcat.util.collections.SynchronizedStack", "org.apache.tomcat.util.collections.SynchronizedStack(int, int)"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedStack.boolean push(T)"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedStack.T pop()"], ["synchronized", "org.apache.tomcat.util.collections.SynchronizedStack.void clear()"], ["void", "org.apache.tomcat.util.compat.GraalCompat.disableCachingForJarUrlConnections()"], ["boolean", "org.apache.tomcat.util.compat.Jre9Compat.isInstanceOfInaccessibleObjectException(java.lang.Throwable)"], ["void", "org.apache.tomcat.util.compat.Jre9Compat.disableCachingForJarUrlConnections()"], ["void", "org.apache.tomcat.util.compat.Jre9Compat.addBootModulePath(java.util.Deque<java.net.URL>)"], ["java.util.jar.JarFile", "org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(java.io.File)"], ["boolean", "org.apache.tomcat.util.compat.Jre9Compat.jarFileIsMultiRelease(java.util.jar.JarFile)"], ["int", "org.apache.tomcat.util.compat.Jre9Compat.jarFileRuntimeMajorVersion()"], ["boolean", "org.apache.tomcat.util.compat.Jre9Compat.canAcccess(java.lang.Object, java.lang.reflect.AccessibleObject)"], ["boolean", "org.apache.tomcat.util.compat.Jre9Compat.isExported(java.lang.Class<?>)"], ["org.apache.tomcat.util.compat.JreCompat", "org.apache.tomcat.util.compat.JreCompat()"], ["org.apache.tomcat.util.compat.JreCompat", "org.apache.tomcat.util.compat.JreCompat.getInstance()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isGraalAvailable()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isAlpnSupported()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isJre9Available()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isJre11Available()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isInstanceOfInaccessibleObjectException(java.lang.Throwable)"], ["void", "org.apache.tomcat.util.compat.JreCompat.setApplicationProtocols(javax.net.ssl.SSLParameters, java.lang.String[])"], ["java.lang.String", "org.apache.tomcat.util.compat.JreCompat.getApplicationProtocol(javax.net.ssl.SSLEngine)"], ["void", "org.apache.tomcat.util.compat.JreCompat.disableCachingForJarUrlConnections()"], ["void", "org.apache.tomcat.util.compat.JreCompat.addBootModulePath(java.util.Deque<java.net.URL>)"], ["java.util.jar.JarFile", "org.apache.tomcat.util.compat.JreCompat.jarFileNewInstance(java.lang.String)"], ["java.util.jar.JarFile", "org.apache.tomcat.util.compat.JreCompat.jarFileNewInstance(java.io.File)"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.jarFileIsMultiRelease(java.util.jar.JarFile)"], ["int", "org.apache.tomcat.util.compat.JreCompat.jarFileRuntimeMajorVersion()"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.canAcccess(java.lang.Object, java.lang.reflect.AccessibleObject)"], ["boolean", "org.apache.tomcat.util.compat.JreCompat.isExported(java.lang.Class<?>)"], ["java.lang.String", "org.apache.tomcat.util.compat.JrePlatform$1.run()"], ["java.lang.Object", "org.apache.tomcat.util.compat.JrePlatform$1.run()"], ["org.apache.tomcat.util.compat.JrePlatform", "org.apache.tomcat.util.compat.JrePlatform()"], ["org.apache.tomcat.util.compat.JreVendor", "org.apache.tomcat.util.compat.JreVendor()"], ["org.apache.tomcat.util.compat.TLS", "org.apache.tomcat.util.compat.TLS()"], ["boolean", "org.apache.tomcat.util.compat.TLS.isTlsv13Available()"], ["org.apache.tomcat.util.descriptor.Constants", "org.apache.tomcat.util.descriptor.Constants()"], ["org.apache.tomcat.util.descriptor.DigesterFactory", "org.apache.tomcat.util.descriptor.DigesterFactory()"], ["org.apache.tomcat.util.digester.Digester", "org.apache.tomcat.util.descriptor.DigesterFactory.newDigester(boolean, boolean, org.apache.tomcat.util.digester.RuleSet, boolean)"], ["void", "org.apache.tomcat.util.descriptor.InputSourceUtil.close(org.xml.sax.InputSource)"], ["org.apache.tomcat.util.descriptor.LocalResolver", "org.apache.tomcat.util.descriptor.LocalResolver(java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, boolean)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(java.lang.String, java.lang.String)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.descriptor.LocalResolver.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.descriptor.LocalResolver.getExternalSubset(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.XmlErrorHandler", "org.apache.tomcat.util.descriptor.XmlErrorHandler()"], ["void", "org.apache.tomcat.util.descriptor.XmlErrorHandler.error(org.xml.sax.SAXParseException)"], ["void", "org.apache.tomcat.util.descriptor.XmlErrorHandler.fatalError(org.xml.sax.SAXParseException)"], ["void", "org.apache.tomcat.util.descriptor.XmlErrorHandler.warning(org.xml.sax.SAXParseException)"], ["void", "org.apache.tomcat.util.descriptor.XmlErrorHandler.logFindings(org.apache.juli.logging.Log, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser$TagPluginRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser", "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser(javax.servlet.ServletContext, boolean)"], ["void", "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser.parse(java.net.URL)"], ["void", "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser.addPlugin(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser.getPlugins()"], ["void", "org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet$1.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet$ElementNotAllowedRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet", "org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet()"], ["void", "org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.tomcat.util.descriptor.tld.TagFileXml", "org.apache.tomcat.util.descriptor.tld.TagFileXml()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getName()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getPath()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setPath(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setLargeIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagFileXml.getInfo()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagFileXml.setInfo(java.lang.String)"], ["org.apache.tomcat.util.descriptor.tld.TagXml", "org.apache.tomcat.util.descriptor.tld.TagXml()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getName()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getTagClass()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setTagClass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getTeiClass()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setTeiClass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getBodyContent()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setBodyContent(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setLargeIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TagXml.getInfo()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setInfo(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.tld.TagXml.hasDynamicAttributes()"], ["void", "org.apache.tomcat.util.descriptor.tld.TagXml.setDynamicAttributes(boolean)"], ["org.apache.tomcat.util.descriptor.tld.TaglibXml", "org.apache.tomcat.util.descriptor.tld.TaglibXml()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getTlibVersion()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setTlibVersion(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getJspVersion()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setJspVersion(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getShortName()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setShortName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getUri()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setUri(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getInfo()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setInfo(java.lang.String)"], ["org.apache.tomcat.util.descriptor.tld.ValidatorXml", "org.apache.tomcat.util.descriptor.tld.TaglibXml.getValidator()"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.setValidator(org.apache.tomcat.util.descriptor.tld.ValidatorXml)"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.addTag(org.apache.tomcat.util.descriptor.tld.TagXml)"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.addTagFile(org.apache.tomcat.util.descriptor.tld.TagFileXml)"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.addListener(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TaglibXml.addFunction(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.tld.TldParser", "org.apache.tomcat.util.descriptor.tld.TldParser(boolean, boolean, boolean)"], ["org.apache.tomcat.util.descriptor.tld.TldParser", "org.apache.tomcat.util.descriptor.tld.TldParser(boolean, boolean, org.apache.tomcat.util.digester.RuleSet, boolean)"], ["org.apache.tomcat.util.descriptor.tld.TaglibXml", "org.apache.tomcat.util.descriptor.tld.TldParser.parse(org.apache.tomcat.util.descriptor.tld.TldResourcePath)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldParser.setClassLoader(java.lang.ClassLoader)"], ["org.apache.tomcat.util.descriptor.tld.TldResourcePath", "org.apache.tomcat.util.descriptor.tld.TldResourcePath(java.net.URL, java.lang.String)"], ["org.apache.tomcat.util.descriptor.tld.TldResourcePath", "org.apache.tomcat.util.descriptor.tld.TldResourcePath(java.net.URL, java.lang.String, java.lang.String)"], ["java.net.URL", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.getUrl()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.getWebappPath()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.getEntryName()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.toExternalForm()"], ["java.io.InputStream", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.openStream()"], ["org.apache.tomcat.Jar", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.openJar()"], ["boolean", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.equals(java.lang.Object)"], ["int", "org.apache.tomcat.util.descriptor.tld.TldResourcePath.hashCode()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$1.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setName(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setRequired(boolean)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setType(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setRequestTime(boolean)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setFragment(boolean)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setDescription(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setDeferredValue()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setDeferredMethod()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setExpectedTypeName(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.setMethodSignature(java.lang.String)"], ["javax.servlet.jsp.tagext.TagAttributeInfo", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Attribute.toTagAttributeInfo()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$GenericBooleanRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$ScriptVariableRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$ScriptVariableRule.end(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$TagAttributeRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$TagAttributeRule.end(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setNameGiven(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setNameFromAttribute(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setClassName(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setDeclare(boolean)"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setScope(java.lang.String)"], ["javax.servlet.jsp.tagext.TagVariableInfo", "org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.toTagVariableInfo()"], ["org.apache.tomcat.util.descriptor.tld.TldRuleSet", "org.apache.tomcat.util.descriptor.tld.TldRuleSet()"], ["void", "org.apache.tomcat.util.descriptor.tld.TldRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["org.apache.tomcat.util.descriptor.tld.ValidatorXml", "org.apache.tomcat.util.descriptor.tld.ValidatorXml()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.tld.ValidatorXml.getValidatorClass()"], ["void", "org.apache.tomcat.util.descriptor.tld.ValidatorXml.setValidatorClass(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.tld.ValidatorXml.addInitParam(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.tld.ValidatorXml.getInitParams()"], ["org.apache.tomcat.util.descriptor.web.AbsoluteOrderingRule", "org.apache.tomcat.util.descriptor.web.AbsoluteOrderingRule(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.AbsoluteOrderingRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.ApplicationParameter", "org.apache.tomcat.util.descriptor.web.ApplicationParameter()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.getDescription()"], ["void", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.getName()"], ["void", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.setName(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.getOverride()"], ["void", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.setOverride(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.getValue()"], ["void", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.setValue(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ApplicationParameter.toString()"], ["org.apache.tomcat.util.descriptor.web.CallMethodMultiRule", "org.apache.tomcat.util.descriptor.web.CallMethodMultiRule(java.lang.String, int, int)"], ["void", "org.apache.tomcat.util.descriptor.web.CallMethodMultiRule.end(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.CallParamMultiRule", "org.apache.tomcat.util.descriptor.web.CallParamMultiRule(int)"], ["void", "org.apache.tomcat.util.descriptor.web.CallParamMultiRule.end(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.Constants", "org.apache.tomcat.util.descriptor.web.Constants()"], ["org.apache.tomcat.util.descriptor.web.ContextEjb", "org.apache.tomcat.util.descriptor.web.ContextEjb()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEjb.getHome()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextEjb.setHome(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEjb.getLink()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextEjb.setLink(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEjb.getRemote()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextEjb.setRemote(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEjb.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextEjb.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextEjb.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextEnvironment", "org.apache.tomcat.util.descriptor.web.ContextEnvironment()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.getOverride()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.setOverride(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.getValue()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.setValue(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextEnvironment.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextHandler", "org.apache.tomcat.util.descriptor.web.ContextHandler()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextHandler.getHandlerclass()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextHandler.setHandlerclass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextHandler.getNamespaceuri(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextHandler.addSoapHeaders(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextHandler.setProperty(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextHandler.getSoapRole(int)"], ["int", "org.apache.tomcat.util.descriptor.web.ContextHandler.getSoapRolesSize()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextHandler.addSoapRole(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextHandler.getPortName(int)"], ["int", "org.apache.tomcat.util.descriptor.web.ContextHandler.getPortNamesSize()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextHandler.addPortName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextHandler.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextHandler.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextHandler.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextLocalEjb", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.getHome()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.setHome(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.getLink()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.setLink(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.getLocal()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.setLocal(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextResource", "org.apache.tomcat.util.descriptor.web.ContextResource()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResource.getAuth()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResource.setAuth(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResource.getScope()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResource.setScope(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResource.getSingleton()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResource.setSingleton(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResource.getCloseMethod()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResource.setCloseMethod(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResource.getCloseMethodConfigured()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResource.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextResource.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResource.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef.getOverride()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef.setOverride(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextResourceLink", "org.apache.tomcat.util.descriptor.web.ContextResourceLink()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.getGlobal()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.setGlobal(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.getFactory()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.setFactory(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextResourceLink.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextService", "org.apache.tomcat.util.descriptor.web.ContextService()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getDisplayname()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setDisplayname(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setLargeIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getInterface()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setInterface(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getWsdlfile()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setWsdlfile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getJaxrpcmappingfile()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setJaxrpcmappingfile(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.ContextService.getServiceqname()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getServiceqname(int)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getServiceqnameNamespaceURI()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getServiceqnameLocalpart()"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setServiceqname(java.lang.String[])"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setServiceqname(java.lang.String, int)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setServiceqnameNamespaceURI(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.setServiceqnameLocalpart(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.getPortlink(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.addPortcomponent(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ContextHandler", "org.apache.tomcat.util.descriptor.web.ContextService.getHandler(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextService.addHandler(org.apache.tomcat.util.descriptor.web.ContextHandler)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextService.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.ContextService.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ContextService.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.ContextTransaction", "org.apache.tomcat.util.descriptor.web.ContextTransaction()"], ["java.lang.Object", "org.apache.tomcat.util.descriptor.web.ContextTransaction.getProperty(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextTransaction.setProperty(java.lang.String, java.lang.Object)"], ["void", "org.apache.tomcat.util.descriptor.web.ContextTransaction.removeProperty(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ContextTransaction.toString()"], ["org.apache.tomcat.util.descriptor.web.ErrorPage", "org.apache.tomcat.util.descriptor.web.ErrorPage()"], ["int", "org.apache.tomcat.util.descriptor.web.ErrorPage.getErrorCode()"], ["void", "org.apache.tomcat.util.descriptor.web.ErrorPage.setErrorCode(int)"], ["void", "org.apache.tomcat.util.descriptor.web.ErrorPage.setErrorCode(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ErrorPage.getExceptionType()"], ["void", "org.apache.tomcat.util.descriptor.web.ErrorPage.setExceptionType(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ErrorPage.getLocation()"], ["void", "org.apache.tomcat.util.descriptor.web.ErrorPage.setLocation(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ErrorPage.toString()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ErrorPage.getName()"], ["org.apache.tomcat.util.descriptor.web.FilterDef", "org.apache.tomcat.util.descriptor.web.FilterDef()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getDescription()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setDisplayName(java.lang.String)"], ["javax.servlet.Filter", "org.apache.tomcat.util.descriptor.web.FilterDef.getFilter()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setFilter(javax.servlet.Filter)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getFilterClass()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setFilterClass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getFilterName()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setFilterName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setLargeIcon(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.FilterDef.getParameterMap()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.getAsyncSupported()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.setAsyncSupported(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.FilterDef.addInitParameter(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterDef.toString()"], ["org.apache.tomcat.util.descriptor.web.FilterMap", "org.apache.tomcat.util.descriptor.web.FilterMap()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterMap.getFilterName()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterMap.setFilterName(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.FilterMap.getServletNames()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterMap.addServletName(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.FilterMap.getMatchAllUrlPatterns()"], ["boolean", "org.apache.tomcat.util.descriptor.web.FilterMap.getMatchAllServletNames()"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.FilterMap.getURLPatterns()"], ["void", "org.apache.tomcat.util.descriptor.web.FilterMap.addURLPattern(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.FilterMap.addURLPatternDecoded(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.FilterMap.setDispatcher(java.lang.String)"], ["int", "org.apache.tomcat.util.descriptor.web.FilterMap.getDispatcherMapping()"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.FilterMap.getDispatcherNames()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.FilterMap.toString()"], ["org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback(org.apache.tomcat.util.descriptor.web.WebXmlParser, boolean, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.scan(org.apache.tomcat.Jar, java.lang.String, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.scan(java.io.File, java.lang.String, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.scanWebInfClasses()"], ["boolean", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.isOk()"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.WebXml>", "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.getFragments()"], ["org.apache.tomcat.util.descriptor.web.IgnoreAnnotationsRule", "org.apache.tomcat.util.descriptor.web.IgnoreAnnotationsRule()"], ["void", "org.apache.tomcat.util.descriptor.web.IgnoreAnnotationsRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.InjectionTarget", "org.apache.tomcat.util.descriptor.web.InjectionTarget()"], ["org.apache.tomcat.util.descriptor.web.InjectionTarget", "org.apache.tomcat.util.descriptor.web.InjectionTarget(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.InjectionTarget.getTargetClass()"], ["void", "org.apache.tomcat.util.descriptor.web.InjectionTarget.setTargetClass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.InjectionTarget.getTargetName()"], ["void", "org.apache.tomcat.util.descriptor.web.InjectionTarget.setTargetName(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.JspConfigDescriptorImpl", "org.apache.tomcat.util.descriptor.web.JspConfigDescriptorImpl(java.util.Collection<javax.servlet.descriptor.JspPropertyGroupDescriptor>, java.util.Collection<javax.servlet.descriptor.TaglibDescriptor>)"], ["org.apache.tomcat.util.descriptor.web.JspPropertyGroup", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setDeferredSyntax(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getDeferredSyntax()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setElIgnored(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getElIgnored()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.addIncludeCoda(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.addIncludePrelude(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setIsXml(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getIsXml()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setPageEncoding(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getPageEncoding()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setScriptingInvalid(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getScriptingInvalid()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setTrimWhitespace(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getTrimWhitespace()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.addUrlPattern(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.addUrlPatternDecoded(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setDefaultContentType(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getDefaultContentType()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setBuffer(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getBuffer()"], ["void", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.setErrorOnUndeclaredNamespace(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getErrorOnUndeclaredNamespace()"], ["org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl(org.apache.tomcat.util.descriptor.web.JspPropertyGroup)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getBuffer()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getDefaultContentType()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getDeferredSyntaxAllowedAsLiteral()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getElIgnored()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getErrorOnUndeclaredNamespace()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getIsXml()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getPageEncoding()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getScriptingInvalid()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl.getTrimDirectiveWhitespaces()"], ["org.apache.tomcat.util.descriptor.web.LifecycleCallbackRule", "org.apache.tomcat.util.descriptor.web.LifecycleCallbackRule(java.lang.String, int, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.LifecycleCallbackRule.end(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.LoginConfig", "org.apache.tomcat.util.descriptor.web.LoginConfig()"], ["org.apache.tomcat.util.descriptor.web.LoginConfig", "org.apache.tomcat.util.descriptor.web.LoginConfig(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.LoginConfig.getAuthMethod()"], ["void", "org.apache.tomcat.util.descriptor.web.LoginConfig.setAuthMethod(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.LoginConfig.getErrorPage()"], ["void", "org.apache.tomcat.util.descriptor.web.LoginConfig.setErrorPage(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.LoginConfig.getLoginPage()"], ["void", "org.apache.tomcat.util.descriptor.web.LoginConfig.setLoginPage(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.LoginConfig.getRealmName()"], ["void", "org.apache.tomcat.util.descriptor.web.LoginConfig.setRealmName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.LoginConfig.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.LoginConfig.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.LoginConfig.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.MappedNameRule", "org.apache.tomcat.util.descriptor.web.MappedNameRule()"], ["void", "org.apache.tomcat.util.descriptor.web.MappedNameRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.MessageDestination", "org.apache.tomcat.util.descriptor.web.MessageDestination()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestination.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.web.MessageDestination.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestination.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.MessageDestination.setLargeIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestination.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.MessageDestination.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestination.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.MessageDestination.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.MessageDestination.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.MessageDestinationRef", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.getLink()"], ["void", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.setLink(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.getUsage()"], ["void", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.setUsage(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.toString()"], ["int", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.MultipartDef", "org.apache.tomcat.util.descriptor.web.MultipartDef()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MultipartDef.getLocation()"], ["void", "org.apache.tomcat.util.descriptor.web.MultipartDef.setLocation(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MultipartDef.getMaxFileSize()"], ["void", "org.apache.tomcat.util.descriptor.web.MultipartDef.setMaxFileSize(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MultipartDef.getMaxRequestSize()"], ["void", "org.apache.tomcat.util.descriptor.web.MultipartDef.setMaxRequestSize(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.MultipartDef.getFileSizeThreshold()"], ["void", "org.apache.tomcat.util.descriptor.web.MultipartDef.setFileSizeThreshold(java.lang.String)"], ["int", "org.apache.tomcat.util.descriptor.web.MultipartDef.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.MultipartDef.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.NameRule", "org.apache.tomcat.util.descriptor.web.NameRule()"], ["void", "org.apache.tomcat.util.descriptor.web.NameRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.web.NameRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.RelativeOrderingRule", "org.apache.tomcat.util.descriptor.web.RelativeOrderingRule(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.RelativeOrderingRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.ResourceBase", "org.apache.tomcat.util.descriptor.web.ResourceBase()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ResourceBase.getDescription()"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ResourceBase.getName()"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ResourceBase.getType()"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setType(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ResourceBase.getLookupName()"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setLookupName(java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.descriptor.web.ResourceBase.getProperty(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setProperty(java.lang.String, java.lang.Object)"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.removeProperty(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.addInjectionTarget(java.lang.String, java.lang.String)"], ["int", "org.apache.tomcat.util.descriptor.web.ResourceBase.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.ResourceBase.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.NamingResources", "org.apache.tomcat.util.descriptor.web.ResourceBase.getNamingResources()"], ["void", "org.apache.tomcat.util.descriptor.web.ResourceBase.setNamingResources(org.apache.tomcat.util.descriptor.web.NamingResources)"], ["org.apache.tomcat.util.descriptor.web.SecurityCollection", "org.apache.tomcat.util.descriptor.web.SecurityCollection()"], ["org.apache.tomcat.util.descriptor.web.SecurityCollection", "org.apache.tomcat.util.descriptor.web.SecurityCollection(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityCollection.getDescription()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityCollection.getName()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.setName(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityCollection.isFromDescriptor()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.setFromDescriptor(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.addMethod(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.addOmittedMethod(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.addPattern(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.addPatternDecoded(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityCollection.findMethod(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.SecurityCollection.findMethods()"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.SecurityCollection.findOmittedMethods()"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityCollection.findPattern(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.SecurityCollection.findPatterns()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.removeMethod(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.removeOmittedMethod(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityCollection.removePattern(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityCollection.toString()"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint", "org.apache.tomcat.util.descriptor.web.SecurityConstraint()"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.getAllRoles()"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.getAuthenticatedUsers()"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.getAuthConstraint()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.setAuthConstraint(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.getUserConstraint()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.setUserConstraint(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.treatAllAuthenticatedUsersAsApplicationRole()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.addAuthRole(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.setCharset(java.nio.charset.Charset)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.addCollection(org.apache.tomcat.util.descriptor.web.SecurityCollection)"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.findAuthRole(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.findAuthRoles()"], ["org.apache.tomcat.util.descriptor.web.SecurityCollection", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.findCollection(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.SecurityCollection[]", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.findCollections()"], ["boolean", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.included(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.removeAuthRole(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.removeCollection(org.apache.tomcat.util.descriptor.web.SecurityCollection)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.toString()"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint[]", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.createConstraints(javax.servlet.ServletSecurityElement, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.SecurityConstraint[]", "org.apache.tomcat.util.descriptor.web.SecurityConstraint.findUncoveredHttpMethods(org.apache.tomcat.util.descriptor.web.SecurityConstraint[], boolean, org.apache.juli.logging.Log)"], ["org.apache.tomcat.util.descriptor.web.SecurityRoleRef", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef.getName()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef.getLink()"], ["void", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef.setLink(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SecurityRoleRef.toString()"], ["org.apache.tomcat.util.descriptor.web.ServiceQnameRule", "org.apache.tomcat.util.descriptor.web.ServiceQnameRule()"], ["void", "org.apache.tomcat.util.descriptor.web.ServiceQnameRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.ServletDef", "org.apache.tomcat.util.descriptor.web.ServletDef()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getDescription()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getSmallIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setSmallIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getLargeIcon()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setLargeIcon(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getServletName()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setServletName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getServletClass()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setServletClass(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getJspFile()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setJspFile(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.ServletDef.getParameterMap()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.addInitParameter(java.lang.String, java.lang.String)"], ["java.lang.Integer", "org.apache.tomcat.util.descriptor.web.ServletDef.getLoadOnStartup()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setLoadOnStartup(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.ServletDef.getRunAs()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setRunAs(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.addSecurityRoleRef(org.apache.tomcat.util.descriptor.web.SecurityRoleRef)"], ["org.apache.tomcat.util.descriptor.web.MultipartDef", "org.apache.tomcat.util.descriptor.web.ServletDef.getMultipartDef()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setMultipartDef(org.apache.tomcat.util.descriptor.web.MultipartDef)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.ServletDef.getAsyncSupported()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setAsyncSupported(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.ServletDef.getEnabled()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setEnabled(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.ServletDef.isOverridable()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDef.setOverridable(boolean)"], ["org.apache.tomcat.util.descriptor.web.ServletDefCreateRule", "org.apache.tomcat.util.descriptor.web.ServletDefCreateRule()"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDefCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.descriptor.web.ServletDefCreateRule.end(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.SessionConfig", "org.apache.tomcat.util.descriptor.web.SessionConfig()"], ["java.lang.Integer", "org.apache.tomcat.util.descriptor.web.SessionConfig.getSessionTimeout()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setSessionTimeout(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieName()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieDomain()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieDomain(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookiePath()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookiePath(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieComment()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieComment(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieHttpOnly()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieHttpOnly(java.lang.String)"], ["java.lang.Boolean", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieSecure()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieSecure(java.lang.String)"], ["java.lang.Integer", "org.apache.tomcat.util.descriptor.web.SessionConfig.getCookieMaxAge()"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.setCookieMaxAge(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SessionConfig.addSessionTrackingMode(java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.SetAuthConstraintRule", "org.apache.tomcat.util.descriptor.web.SetAuthConstraintRule()"], ["void", "org.apache.tomcat.util.descriptor.web.SetAuthConstraintRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetDenyUncoveredHttpMethodsRule", "org.apache.tomcat.util.descriptor.web.SetDenyUncoveredHttpMethodsRule()"], ["void", "org.apache.tomcat.util.descriptor.web.SetDenyUncoveredHttpMethodsRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetDistributableRule", "org.apache.tomcat.util.descriptor.web.SetDistributableRule()"], ["void", "org.apache.tomcat.util.descriptor.web.SetDistributableRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetJspConfig", "org.apache.tomcat.util.descriptor.web.SetJspConfig()"], ["void", "org.apache.tomcat.util.descriptor.web.SetJspConfig.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetLoginConfig", "org.apache.tomcat.util.descriptor.web.SetLoginConfig()"], ["void", "org.apache.tomcat.util.descriptor.web.SetLoginConfig.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetOverrideRule", "org.apache.tomcat.util.descriptor.web.SetOverrideRule()"], ["void", "org.apache.tomcat.util.descriptor.web.SetOverrideRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetPublicIdRule", "org.apache.tomcat.util.descriptor.web.SetPublicIdRule(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.SetPublicIdRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SetSessionConfig", "org.apache.tomcat.util.descriptor.web.SetSessionConfig()"], ["void", "org.apache.tomcat.util.descriptor.web.SetSessionConfig.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.SoapHeaderRule", "org.apache.tomcat.util.descriptor.web.SoapHeaderRule()"], ["void", "org.apache.tomcat.util.descriptor.web.SoapHeaderRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl", "org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl.getTaglibLocation()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl.getTaglibURI()"], ["int", "org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl.hashCode()"], ["boolean", "org.apache.tomcat.util.descriptor.web.TaglibDescriptorImpl.equals(java.lang.Object)"], ["org.apache.tomcat.util.descriptor.web.TaglibLocationRule", "org.apache.tomcat.util.descriptor.web.TaglibLocationRule(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.TaglibLocationRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.VersionRule", "org.apache.tomcat.util.descriptor.web.VersionRule()"], ["void", "org.apache.tomcat.util.descriptor.web.VersionRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["org.apache.tomcat.util.descriptor.web.WebRuleSet", "org.apache.tomcat.util.descriptor.web.WebRuleSet()"], ["org.apache.tomcat.util.descriptor.web.WebRuleSet", "org.apache.tomcat.util.descriptor.web.WebRuleSet(boolean)"], ["org.apache.tomcat.util.descriptor.web.WebRuleSet", "org.apache.tomcat.util.descriptor.web.WebRuleSet(java.lang.String, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebRuleSet.addRuleInstances(org.apache.tomcat.util.digester.Digester)"], ["void", "org.apache.tomcat.util.descriptor.web.WebRuleSet.recycle()"], ["org.apache.tomcat.util.descriptor.web.WebXml", "org.apache.tomcat.util.descriptor.web.WebXml()"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.isOverridable()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setOverridable(boolean)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.isDuplicated()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setDuplicated(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.createAbsoluteOrdering()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addAbsoluteOrdering(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addAbsoluteOrderingOthers()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addAfterOrdering(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addAfterOrderingOthers()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addBeforeOrdering(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addBeforeOrderingOthers()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getVersion()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setVersion(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getPublicId()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setPublicId(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.isMetadataComplete()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setMetadataComplete(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getName()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setName(java.lang.String)"], ["int", "org.apache.tomcat.util.descriptor.web.WebXml.getMajorVersion()"], ["int", "org.apache.tomcat.util.descriptor.web.WebXml.getMinorVersion()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getDisplayName()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setDisplayName(java.lang.String)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.isDistributable()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setDistributable(boolean)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.getDenyUncoveredHttpMethods()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setDenyUncoveredHttpMethods(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addContextParam(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getContextParams()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addFilter(org.apache.tomcat.util.descriptor.web.FilterDef)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.FilterDef>", "org.apache.tomcat.util.descriptor.web.WebXml.getFilters()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addFilterMapping(org.apache.tomcat.util.descriptor.web.FilterMap)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addListener(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addServlet(org.apache.tomcat.util.descriptor.web.ServletDef)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ServletDef>", "org.apache.tomcat.util.descriptor.web.WebXml.getServlets()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addServletMapping(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addServletMappingDecoded(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getServletMappings()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setSessionConfig(org.apache.tomcat.util.descriptor.web.SessionConfig)"], ["org.apache.tomcat.util.descriptor.web.SessionConfig", "org.apache.tomcat.util.descriptor.web.WebXml.getSessionConfig()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addMimeMapping(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getMimeMappings()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setReplaceWelcomeFiles(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setAlwaysAddWelcomeFiles(boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addWelcomeFile(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ErrorPage>", "org.apache.tomcat.util.descriptor.web.WebXml.getErrorPages()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addTaglib(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getTaglibs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addJspPropertyGroup(org.apache.tomcat.util.descriptor.web.JspPropertyGroup)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addSecurityConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setLoginConfig(org.apache.tomcat.util.descriptor.web.LoginConfig)"], ["org.apache.tomcat.util.descriptor.web.LoginConfig", "org.apache.tomcat.util.descriptor.web.WebXml.getLoginConfig()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addSecurityRole(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addEnvEntry(org.apache.tomcat.util.descriptor.web.ContextEnvironment)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextEnvironment>", "org.apache.tomcat.util.descriptor.web.WebXml.getEnvEntries()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addEjbRef(org.apache.tomcat.util.descriptor.web.ContextEjb)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextEjb>", "org.apache.tomcat.util.descriptor.web.WebXml.getEjbRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addEjbLocalRef(org.apache.tomcat.util.descriptor.web.ContextLocalEjb)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextLocalEjb>", "org.apache.tomcat.util.descriptor.web.WebXml.getEjbLocalRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addServiceRef(org.apache.tomcat.util.descriptor.web.ContextService)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextService>", "org.apache.tomcat.util.descriptor.web.WebXml.getServiceRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addResourceRef(org.apache.tomcat.util.descriptor.web.ContextResource)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextResource>", "org.apache.tomcat.util.descriptor.web.WebXml.getResourceRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addResourceEnvRef(org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef>", "org.apache.tomcat.util.descriptor.web.WebXml.getResourceEnvRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addMessageDestinationRef(org.apache.tomcat.util.descriptor.web.MessageDestinationRef)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.MessageDestinationRef>", "org.apache.tomcat.util.descriptor.web.WebXml.getMessageDestinationRefs()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addMessageDestination(org.apache.tomcat.util.descriptor.web.MessageDestination)"], ["java.util.Map<java.lang.String, org.apache.tomcat.util.descriptor.web.MessageDestination>", "org.apache.tomcat.util.descriptor.web.WebXml.getMessageDestinations()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addLocaleEncodingMapping(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getLocaleEncodingMappings()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addPostConstructMethods(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getPostConstructMethods()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.addPreDestroyMethods(java.lang.String, java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.descriptor.web.WebXml.getPreDestroyMethods()"], ["javax.servlet.descriptor.JspConfigDescriptor", "org.apache.tomcat.util.descriptor.web.WebXml.getJspConfigDescriptor()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getRequestCharacterEncoding()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setRequestCharacterEncoding(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getResponseCharacterEncoding()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setResponseCharacterEncoding(java.lang.String)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setURL(java.net.URL)"], ["java.net.URL", "org.apache.tomcat.util.descriptor.web.WebXml.getURL()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setJarName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.getJarName()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setWebappJar(boolean)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.getWebappJar()"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.getDelegate()"], ["void", "org.apache.tomcat.util.descriptor.web.WebXml.setDelegate(boolean)"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.toString()"], ["java.lang.String", "org.apache.tomcat.util.descriptor.web.WebXml.toXml()"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXml.merge(java.util.Set<org.apache.tomcat.util.descriptor.web.WebXml>)"], ["org.apache.tomcat.util.descriptor.web.WebXmlParser", "org.apache.tomcat.util.descriptor.web.WebXmlParser(boolean, boolean, boolean)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXmlParser.parseWebXml(java.net.URL, org.apache.tomcat.util.descriptor.web.WebXml, boolean)"], ["boolean", "org.apache.tomcat.util.descriptor.web.WebXmlParser.parseWebXml(org.xml.sax.InputSource, org.apache.tomcat.util.descriptor.web.WebXml, boolean)"], ["void", "org.apache.tomcat.util.descriptor.web.WebXmlParser.setClassLoader(java.lang.ClassLoader)"], ["org.apache.tomcat.util.descriptor.web.XmlEncodingBase", "org.apache.tomcat.util.descriptor.web.XmlEncodingBase()"], ["void", "org.apache.tomcat.util.descriptor.web.XmlEncodingBase.setCharset(java.nio.charset.Charset)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.descriptor.web.XmlEncodingBase.getCharset()"], ["org.apache.tomcat.util.digester.AbstractObjectCreationFactory", "org.apache.tomcat.util.digester.AbstractObjectCreationFactory()"], ["org.apache.tomcat.util.digester.Digester", "org.apache.tomcat.util.digester.AbstractObjectCreationFactory.getDigester()"], ["void", "org.apache.tomcat.util.digester.AbstractObjectCreationFactory.setDigester(org.apache.tomcat.util.digester.Digester)"], ["org.apache.tomcat.util.digester.ArrayStack", "org.apache.tomcat.util.digester.ArrayStack()"], ["org.apache.tomcat.util.digester.ArrayStack", "org.apache.tomcat.util.digester.ArrayStack(int)"], ["boolean", "org.apache.tomcat.util.digester.ArrayStack.empty()"], ["E", "org.apache.tomcat.util.digester.ArrayStack.peek()"], ["E", "org.apache.tomcat.util.digester.ArrayStack.peek(int)"], ["E", "org.apache.tomcat.util.digester.ArrayStack.pop()"], ["E", "org.apache.tomcat.util.digester.ArrayStack.push(E)"], ["org.apache.tomcat.util.digester.CallMethodRule", "org.apache.tomcat.util.digester.CallMethodRule(java.lang.String, int)"], ["org.apache.tomcat.util.digester.CallMethodRule", "org.apache.tomcat.util.digester.CallMethodRule(int, java.lang.String, int)"], ["org.apache.tomcat.util.digester.CallMethodRule", "org.apache.tomcat.util.digester.CallMethodRule(java.lang.String)"], ["org.apache.tomcat.util.digester.CallMethodRule", "org.apache.tomcat.util.digester.CallMethodRule(int, java.lang.String, int, java.lang.Class<?>[])"], ["boolean", "org.apache.tomcat.util.digester.CallMethodRule.getUseExactMatch()"], ["void", "org.apache.tomcat.util.digester.CallMethodRule.setUseExactMatch(boolean)"], ["void", "org.apache.tomcat.util.digester.CallMethodRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.CallMethodRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.CallMethodRule.end(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.CallMethodRule.finish()"], ["java.lang.String", "org.apache.tomcat.util.digester.CallMethodRule.toString()"], ["org.apache.tomcat.util.digester.CallParamRule", "org.apache.tomcat.util.digester.CallParamRule(int)"], ["org.apache.tomcat.util.digester.CallParamRule", "org.apache.tomcat.util.digester.CallParamRule(int, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.CallParamRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.CallParamRule.body(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.CallParamRule.end(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.CallParamRule.toString()"], ["org.apache.tomcat.util.digester.Digester$EntityResolver2Wrapper", "org.apache.tomcat.util.digester.Digester$EntityResolver2Wrapper(org.xml.sax.ext.EntityResolver2, org.apache.tomcat.util.IntrospectionUtils$PropertySource[], java.lang.ClassLoader)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.digester.Digester$EntityResolver2Wrapper.getExternalSubset(java.lang.String, java.lang.String)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.digester.Digester$EntityResolver2Wrapper.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.digester.Digester$EntityResolverWrapper", "org.apache.tomcat.util.digester.Digester$EntityResolverWrapper(org.xml.sax.EntityResolver, org.apache.tomcat.util.IntrospectionUtils$PropertySource[], java.lang.ClassLoader)"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.digester.Digester$EntityResolverWrapper.resolveEntity(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.digester.Digester$EnvironmentPropertySource", "org.apache.tomcat.util.digester.Digester$EnvironmentPropertySource()"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester$SystemPropertySource.getProperty(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester$SystemPropertySource.getProperty(java.lang.String, java.lang.ClassLoader)"], ["void", "org.apache.tomcat.util.digester.Digester.setPropertySource(org.apache.tomcat.util.IntrospectionUtils$PropertySource)"], ["void", "org.apache.tomcat.util.digester.Digester.setPropertySource(org.apache.tomcat.util.IntrospectionUtils$PropertySource[])"], ["org.apache.tomcat.util.digester.Digester", "org.apache.tomcat.util.digester.Digester()"], ["void", "org.apache.tomcat.util.digester.Digester.replaceSystemProperties()"], ["void", "org.apache.tomcat.util.digester.Digester.startGeneratingCode()"], ["void", "org.apache.tomcat.util.digester.Digester.endGeneratingCode()"], ["java.lang.StringBuilder", "org.apache.tomcat.util.digester.Digester.getGeneratedCode()"], ["void", "org.apache.tomcat.util.digester.Digester.setKnown(java.lang.Object)"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester.toVariableName(java.lang.Object)"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester.findNamespaceURI(java.lang.String)"], ["java.lang.ClassLoader", "org.apache.tomcat.util.digester.Digester.getClassLoader()"], ["void", "org.apache.tomcat.util.digester.Digester.setClassLoader(java.lang.ClassLoader)"], ["int", "org.apache.tomcat.util.digester.Digester.getCount()"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester.getCurrentElementName()"], ["org.xml.sax.ErrorHandler", "org.apache.tomcat.util.digester.Digester.getErrorHandler()"], ["void", "org.apache.tomcat.util.digester.Digester.setErrorHandler(org.xml.sax.ErrorHandler)"], ["javax.xml.parsers.SAXParserFactory", "org.apache.tomcat.util.digester.Digester.getFactory()"], ["void", "org.apache.tomcat.util.digester.Digester.setFeature(java.lang.String, boolean)"], ["org.apache.juli.logging.Log", "org.apache.tomcat.util.digester.Digester.getLogger()"], ["void", "org.apache.tomcat.util.digester.Digester.setLogger(org.apache.juli.logging.Log)"], ["org.apache.juli.logging.Log", "org.apache.tomcat.util.digester.Digester.getSAXLogger()"], ["void", "org.apache.tomcat.util.digester.Digester.setSAXLogger(org.apache.juli.logging.Log)"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester.getMatch()"], ["boolean", "org.apache.tomcat.util.digester.Digester.getNamespaceAware()"], ["void", "org.apache.tomcat.util.digester.Digester.setNamespaceAware(boolean)"], ["void", "org.apache.tomcat.util.digester.Digester.setPublicId(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.Digester.getPublicId()"], ["javax.xml.parsers.SAXParser", "org.apache.tomcat.util.digester.Digester.getParser()"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.getProperty(java.lang.String)"], ["org.apache.tomcat.util.digester.Rules", "org.apache.tomcat.util.digester.Digester.getRules()"], ["void", "org.apache.tomcat.util.digester.Digester.setRules(org.apache.tomcat.util.digester.Rules)"], ["boolean", "org.apache.tomcat.util.digester.Digester.getUseContextClassLoader()"], ["void", "org.apache.tomcat.util.digester.Digester.setUseContextClassLoader(boolean)"], ["boolean", "org.apache.tomcat.util.digester.Digester.getValidating()"], ["void", "org.apache.tomcat.util.digester.Digester.setValidating(boolean)"], ["boolean", "org.apache.tomcat.util.digester.Digester.getRulesValidation()"], ["void", "org.apache.tomcat.util.digester.Digester.setRulesValidation(boolean)"], ["java.util.Map<java.lang.Class<?>, java.util.List<java.lang.String>>", "org.apache.tomcat.util.digester.Digester.getFakeAttributes()"], ["boolean", "org.apache.tomcat.util.digester.Digester.isFakeAttribute(java.lang.Object, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.setFakeAttributes(java.util.Map<java.lang.Class<?>, java.util.List<java.lang.String>>)"], ["org.xml.sax.XMLReader", "org.apache.tomcat.util.digester.Digester.getXMLReader()"], ["void", "org.apache.tomcat.util.digester.Digester.characters(char[], int, int)"], ["void", "org.apache.tomcat.util.digester.Digester.endDocument()"], ["void", "org.apache.tomcat.util.digester.Digester.endElement(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.endPrefixMapping(java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.ignorableWhitespace(char[], int, int)"], ["void", "org.apache.tomcat.util.digester.Digester.processingInstruction(java.lang.String, java.lang.String)"], ["org.xml.sax.Locator", "org.apache.tomcat.util.digester.Digester.getDocumentLocator()"], ["void", "org.apache.tomcat.util.digester.Digester.setDocumentLocator(org.xml.sax.Locator)"], ["void", "org.apache.tomcat.util.digester.Digester.skippedEntity(java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.startDocument()"], ["void", "org.apache.tomcat.util.digester.Digester.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.Digester.startPrefixMapping(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.notationDecl(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.setEntityResolver(org.xml.sax.EntityResolver)"], ["org.xml.sax.EntityResolver", "org.apache.tomcat.util.digester.Digester.getEntityResolver()"], ["org.xml.sax.InputSource", "org.apache.tomcat.util.digester.Digester.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.startDTD(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.error(org.xml.sax.SAXParseException)"], ["void", "org.apache.tomcat.util.digester.Digester.fatalError(org.xml.sax.SAXParseException)"], ["void", "org.apache.tomcat.util.digester.Digester.warning(org.xml.sax.SAXParseException)"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.parse(java.io.File)"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.parse(org.xml.sax.InputSource)"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.parse(java.io.InputStream)"], ["void", "org.apache.tomcat.util.digester.Digester.register(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addRule(java.lang.String, org.apache.tomcat.util.digester.Rule)"], ["void", "org.apache.tomcat.util.digester.Digester.addRuleSet(org.apache.tomcat.util.digester.RuleSet)"], ["void", "org.apache.tomcat.util.digester.Digester.addCallMethod(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addCallMethod(java.lang.String, java.lang.String, int)"], ["void", "org.apache.tomcat.util.digester.Digester.addCallParam(java.lang.String, int)"], ["void", "org.apache.tomcat.util.digester.Digester.addFactoryCreate(java.lang.String, org.apache.tomcat.util.digester.ObjectCreationFactory, boolean)"], ["void", "org.apache.tomcat.util.digester.Digester.addObjectCreate(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addObjectCreate(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addSetNext(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addSetProperties(java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Digester.addSetProperties(java.lang.String, java.lang.String[])"], ["void", "org.apache.tomcat.util.digester.Digester.clear()"], ["void", "org.apache.tomcat.util.digester.Digester.reset()"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.peek()"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.peek(int)"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.pop()"], ["void", "org.apache.tomcat.util.digester.Digester.push(java.lang.Object)"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.getRoot()"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.peekParams()"], ["java.lang.Object", "org.apache.tomcat.util.digester.Digester.popParams()"], ["void", "org.apache.tomcat.util.digester.Digester.pushParams(java.lang.Object)"], ["org.xml.sax.SAXException", "org.apache.tomcat.util.digester.Digester.createSAXException(java.lang.String, java.lang.Exception)"], ["org.xml.sax.SAXException", "org.apache.tomcat.util.digester.Digester.createSAXException(java.lang.Exception)"], ["org.xml.sax.SAXException", "org.apache.tomcat.util.digester.Digester.createSAXException(java.lang.String)"], ["org.apache.tomcat.util.digester.EnvironmentPropertySource", "org.apache.tomcat.util.digester.EnvironmentPropertySource()"], ["java.lang.String", "org.apache.tomcat.util.digester.EnvironmentPropertySource.getProperty(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.EnvironmentPropertySource.getProperty(java.lang.String, java.lang.ClassLoader)"], ["org.apache.tomcat.util.digester.FactoryCreateRule", "org.apache.tomcat.util.digester.FactoryCreateRule(org.apache.tomcat.util.digester.ObjectCreationFactory, boolean)"], ["void", "org.apache.tomcat.util.digester.FactoryCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.FactoryCreateRule.end(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.FactoryCreateRule.finish()"], ["java.lang.String", "org.apache.tomcat.util.digester.FactoryCreateRule.toString()"], ["org.apache.tomcat.util.digester.ObjectCreateRule", "org.apache.tomcat.util.digester.ObjectCreateRule(java.lang.String)"], ["org.apache.tomcat.util.digester.ObjectCreateRule", "org.apache.tomcat.util.digester.ObjectCreateRule(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.ObjectCreateRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.ObjectCreateRule.end(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.ObjectCreateRule.toString()"], ["org.apache.tomcat.util.digester.Rule", "org.apache.tomcat.util.digester.Rule()"], ["org.apache.tomcat.util.digester.Digester", "org.apache.tomcat.util.digester.Rule.getDigester()"], ["void", "org.apache.tomcat.util.digester.Rule.setDigester(org.apache.tomcat.util.digester.Digester)"], ["java.lang.String", "org.apache.tomcat.util.digester.Rule.getNamespaceURI()"], ["void", "org.apache.tomcat.util.digester.Rule.setNamespaceURI(java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Rule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["void", "org.apache.tomcat.util.digester.Rule.body(java.lang.String, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Rule.end(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.digester.Rule.finish()"], ["org.apache.tomcat.util.digester.RulesBase", "org.apache.tomcat.util.digester.RulesBase()"], ["org.apache.tomcat.util.digester.Digester", "org.apache.tomcat.util.digester.RulesBase.getDigester()"], ["void", "org.apache.tomcat.util.digester.RulesBase.setDigester(org.apache.tomcat.util.digester.Digester)"], ["void", "org.apache.tomcat.util.digester.RulesBase.add(java.lang.String, org.apache.tomcat.util.digester.Rule)"], ["void", "org.apache.tomcat.util.digester.RulesBase.clear()"], ["org.apache.tomcat.util.digester.SetNextRule", "org.apache.tomcat.util.digester.SetNextRule(java.lang.String, java.lang.String)"], ["boolean", "org.apache.tomcat.util.digester.SetNextRule.isExactMatch()"], ["void", "org.apache.tomcat.util.digester.SetNextRule.setExactMatch(boolean)"], ["void", "org.apache.tomcat.util.digester.SetNextRule.end(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.digester.SetNextRule.toString()"], ["org.apache.tomcat.util.digester.SetPropertiesRule", "org.apache.tomcat.util.digester.SetPropertiesRule()"], ["org.apache.tomcat.util.digester.SetPropertiesRule", "org.apache.tomcat.util.digester.SetPropertiesRule(java.lang.String[])"], ["void", "org.apache.tomcat.util.digester.SetPropertiesRule.begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)"], ["java.lang.String", "org.apache.tomcat.util.digester.SetPropertiesRule.toString()"], ["org.apache.tomcat.util.file.ConfigurationSource", "org.apache.tomcat.util.file.ConfigFileLoader.getSource()"], ["void", "org.apache.tomcat.util.file.ConfigFileLoader.setSource(org.apache.tomcat.util.file.ConfigurationSource)"], ["java.io.InputStream", "org.apache.tomcat.util.file.ConfigFileLoader.getInputStream(java.lang.String)"], ["java.net.URI", "org.apache.tomcat.util.file.ConfigFileLoader.getURI(java.lang.String)"], ["org.apache.tomcat.util.file.ConfigurationSource$Resource", "org.apache.tomcat.util.file.ConfigurationSource$1.getResource(java.lang.String)"], ["java.net.URI", "org.apache.tomcat.util.file.ConfigurationSource$1.getURI(java.lang.String)"], ["org.apache.tomcat.util.file.ConfigurationSource$Resource", "org.apache.tomcat.util.file.ConfigurationSource$Resource(java.io.InputStream, java.net.URI)"], ["java.io.InputStream", "org.apache.tomcat.util.file.ConfigurationSource$Resource.getInputStream()"], ["java.net.URI", "org.apache.tomcat.util.file.ConfigurationSource$Resource.getURI()"], ["long", "org.apache.tomcat.util.file.ConfigurationSource$Resource.getLastModified()"], ["void", "org.apache.tomcat.util.file.ConfigurationSource$Resource.close()"], ["default", "org.apache.tomcat.util.file.ConfigurationSource.org.apache.tomcat.util.file.ConfigurationSource$Resource getServerXml()"], ["default", "org.apache.tomcat.util.file.ConfigurationSource.org.apache.tomcat.util.file.ConfigurationSource$Resource getSharedWebXml()"], ["default", "org.apache.tomcat.util.file.ConfigurationSource.org.apache.tomcat.util.file.ConfigurationSource$Resource getConfResource(java.lang.String)"], ["org.apache.tomcat.util.file.Matcher", "org.apache.tomcat.util.file.Matcher()"], ["boolean", "org.apache.tomcat.util.file.Matcher.matchName(java.util.Set<java.lang.String>, java.lang.String)"], ["boolean", "org.apache.tomcat.util.file.Matcher.match(java.lang.String, java.lang.String, boolean)"], ["org.apache.tomcat.util.http.ConcurrentDateFormat", "org.apache.tomcat.util.http.ConcurrentDateFormat(java.lang.String, java.util.Locale, java.util.TimeZone)"], ["java.lang.String", "org.apache.tomcat.util.http.ConcurrentDateFormat.format(java.util.Date)"], ["java.util.Date", "org.apache.tomcat.util.http.ConcurrentDateFormat.parse(java.lang.String)"], ["default", "org.apache.tomcat.util.http.CookieProcessor.java.lang.String generateHeader(javax.servlet.http.Cookie, javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.CookieProcessorBase", "org.apache.tomcat.util.http.CookieProcessorBase()"], ["org.apache.tomcat.util.http.SameSiteCookies", "org.apache.tomcat.util.http.CookieProcessorBase.getSameSiteCookies()"], ["void", "org.apache.tomcat.util.http.CookieProcessorBase.setSameSiteCookies(java.lang.String)"], ["org.apache.tomcat.util.http.FastHttpDateFormat", "org.apache.tomcat.util.http.FastHttpDateFormat()"], ["java.lang.String", "org.apache.tomcat.util.http.FastHttpDateFormat.getCurrentDate()"], ["java.lang.String", "org.apache.tomcat.util.http.FastHttpDateFormat.formatDate(long, java.text.DateFormat)"], ["java.lang.String", "org.apache.tomcat.util.http.FastHttpDateFormat.formatDate(long)"], ["long", "org.apache.tomcat.util.http.FastHttpDateFormat.parseDate(java.lang.String, java.text.DateFormat[])"], ["long", "org.apache.tomcat.util.http.FastHttpDateFormat.parseDate(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.HeaderUtil.toPrintableString(byte[], int, int)"], ["org.apache.tomcat.util.http.LegacyCookieProcessor", "org.apache.tomcat.util.http.LegacyCookieProcessor()"], ["boolean", "org.apache.tomcat.util.http.LegacyCookieProcessor.getAllowEqualsInValue()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.setAllowEqualsInValue(boolean)"], ["boolean", "org.apache.tomcat.util.http.LegacyCookieProcessor.getAllowNameOnly()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.setAllowNameOnly(boolean)"], ["boolean", "org.apache.tomcat.util.http.LegacyCookieProcessor.getAllowHttpSepsInV0()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.setAllowHttpSepsInV0(boolean)"], ["boolean", "org.apache.tomcat.util.http.LegacyCookieProcessor.getForwardSlashIsSeparator()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.setForwardSlashIsSeparator(boolean)"], ["boolean", "org.apache.tomcat.util.http.LegacyCookieProcessor.getAlwaysAddExpires()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.setAlwaysAddExpires(boolean)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.http.LegacyCookieProcessor.getCharset()"], ["void", "org.apache.tomcat.util.http.LegacyCookieProcessor.parseCookieHeader(org.apache.tomcat.util.http.MimeHeaders, org.apache.tomcat.util.http.ServerCookies)"], ["java.lang.String", "org.apache.tomcat.util.http.LegacyCookieProcessor.generateHeader(javax.servlet.http.Cookie)"], ["java.lang.String", "org.apache.tomcat.util.http.LegacyCookieProcessor.generateHeader(javax.servlet.http.Cookie, javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.MimeHeaderField", "org.apache.tomcat.util.http.MimeHeaderField()"], ["void", "org.apache.tomcat.util.http.MimeHeaderField.recycle()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaderField.getName()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaderField.getValue()"], ["org.apache.tomcat.util.http.MimeHeaders", "org.apache.tomcat.util.http.MimeHeaders()"], ["void", "org.apache.tomcat.util.http.MimeHeaders.setLimit(int)"], ["void", "org.apache.tomcat.util.http.MimeHeaders.recycle()"], ["void", "org.apache.tomcat.util.http.MimeHeaders.clear()"], ["java.lang.String", "org.apache.tomcat.util.http.MimeHeaders.toString()"], ["void", "org.apache.tomcat.util.http.MimeHeaders.duplicate(org.apache.tomcat.util.http.MimeHeaders)"], ["int", "org.apache.tomcat.util.http.MimeHeaders.size()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.getName(int)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.getValue(int)"], ["int", "org.apache.tomcat.util.http.MimeHeaders.findHeader(java.lang.String, int)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.addValue(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.addValue(byte[], int, int)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.setValue(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.getValue(java.lang.String)"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.MimeHeaders.getUniqueValue(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.MimeHeaders.getHeader(java.lang.String)"], ["void", "org.apache.tomcat.util.http.MimeHeaders.removeHeader(java.lang.String)"], ["void", "org.apache.tomcat.util.http.MimeHeaders.removeHeader(int)"], ["org.apache.tomcat.util.http.NamesEnumerator", "org.apache.tomcat.util.http.NamesEnumerator(org.apache.tomcat.util.http.MimeHeaders)"], ["boolean", "org.apache.tomcat.util.http.NamesEnumerator.hasMoreElements()"], ["java.lang.String", "org.apache.tomcat.util.http.NamesEnumerator.nextElement()"], ["java.lang.Object", "org.apache.tomcat.util.http.NamesEnumerator.nextElement()"], ["org.apache.tomcat.util.http.Parameters$FailReason[]", "org.apache.tomcat.util.http.Parameters$FailReason.values()"], ["org.apache.tomcat.util.http.Parameters$FailReason", "org.apache.tomcat.util.http.Parameters$FailReason.valueOf(java.lang.String)"], ["org.apache.tomcat.util.http.Parameters", "org.apache.tomcat.util.http.Parameters()"], ["void", "org.apache.tomcat.util.http.Parameters.setQuery(org.apache.tomcat.util.buf.MessageBytes)"], ["void", "org.apache.tomcat.util.http.Parameters.setLimit(int)"], ["java.nio.charset.Charset", "org.apache.tomcat.util.http.Parameters.getCharset()"], ["void", "org.apache.tomcat.util.http.Parameters.setCharset(java.nio.charset.Charset)"], ["void", "org.apache.tomcat.util.http.Parameters.setQueryStringCharset(java.nio.charset.Charset)"], ["boolean", "org.apache.tomcat.util.http.Parameters.isParseFailed()"], ["org.apache.tomcat.util.http.Parameters$FailReason", "org.apache.tomcat.util.http.Parameters.getParseFailedReason()"], ["void", "org.apache.tomcat.util.http.Parameters.setParseFailedReason(org.apache.tomcat.util.http.Parameters$FailReason)"], ["void", "org.apache.tomcat.util.http.Parameters.recycle()"], ["java.lang.String[]", "org.apache.tomcat.util.http.Parameters.getParameterValues(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.Parameters.getParameter(java.lang.String)"], ["void", "org.apache.tomcat.util.http.Parameters.handleQueryParameters()"], ["void", "org.apache.tomcat.util.http.Parameters.addParameter(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.http.Parameters.setURLDecoder(org.apache.tomcat.util.buf.UDecoder)"], ["void", "org.apache.tomcat.util.http.Parameters.processParameters(byte[], int, int)"], ["void", "org.apache.tomcat.util.http.Parameters.processParameters(org.apache.tomcat.util.buf.MessageBytes, java.nio.charset.Charset)"], ["java.lang.String", "org.apache.tomcat.util.http.Parameters.toString()"], ["java.lang.String", "org.apache.tomcat.util.http.RequestUtil.normalize(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.RequestUtil.normalize(java.lang.String, boolean)"], ["boolean", "org.apache.tomcat.util.http.RequestUtil.isSameOrigin(javax.servlet.http.HttpServletRequest, java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.RequestUtil.isValidOrigin(java.lang.String)"], ["org.apache.tomcat.util.http.ResponseUtil$HeaderAdapter", "org.apache.tomcat.util.http.ResponseUtil$HeaderAdapter(org.apache.tomcat.util.http.MimeHeaders)"], ["void", "org.apache.tomcat.util.http.ResponseUtil$HeaderAdapter.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.http.ResponseUtil$HeaderAdapter.addHeader(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.http.ResponseUtil$ResponseAdapter", "org.apache.tomcat.util.http.ResponseUtil$ResponseAdapter(javax.servlet.http.HttpServletResponse)"], ["void", "org.apache.tomcat.util.http.ResponseUtil$ResponseAdapter.setHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.http.ResponseUtil$ResponseAdapter.addHeader(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.http.ResponseUtil.addVaryFieldName(org.apache.tomcat.util.http.MimeHeaders, java.lang.String)"], ["void", "org.apache.tomcat.util.http.ResponseUtil.addVaryFieldName(javax.servlet.http.HttpServletResponse, java.lang.String)"], ["org.apache.tomcat.util.http.Rfc6265CookieProcessor", "org.apache.tomcat.util.http.Rfc6265CookieProcessor()"], ["java.nio.charset.Charset", "org.apache.tomcat.util.http.Rfc6265CookieProcessor.getCharset()"], ["void", "org.apache.tomcat.util.http.Rfc6265CookieProcessor.parseCookieHeader(org.apache.tomcat.util.http.MimeHeaders, org.apache.tomcat.util.http.ServerCookies)"], ["java.lang.String", "org.apache.tomcat.util.http.Rfc6265CookieProcessor.generateHeader(javax.servlet.http.Cookie)"], ["java.lang.String", "org.apache.tomcat.util.http.Rfc6265CookieProcessor.generateHeader(javax.servlet.http.Cookie, javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.SameSiteCookies[]", "org.apache.tomcat.util.http.SameSiteCookies.values()"], ["org.apache.tomcat.util.http.SameSiteCookies", "org.apache.tomcat.util.http.SameSiteCookies.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.SameSiteCookies.getValue()"], ["org.apache.tomcat.util.http.SameSiteCookies", "org.apache.tomcat.util.http.SameSiteCookies.fromString(java.lang.String)"], ["org.apache.tomcat.util.http.ServerCookie", "org.apache.tomcat.util.http.ServerCookie()"], ["void", "org.apache.tomcat.util.http.ServerCookie.recycle()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.ServerCookie.getComment()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.ServerCookie.getDomain()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.ServerCookie.getPath()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.ServerCookie.getName()"], ["org.apache.tomcat.util.buf.MessageBytes", "org.apache.tomcat.util.http.ServerCookie.getValue()"], ["int", "org.apache.tomcat.util.http.ServerCookie.getVersion()"], ["void", "org.apache.tomcat.util.http.ServerCookie.setVersion(int)"], ["java.lang.String", "org.apache.tomcat.util.http.ServerCookie.toString()"], ["org.apache.tomcat.util.http.ServerCookies", "org.apache.tomcat.util.http.ServerCookies(int)"], ["org.apache.tomcat.util.http.ServerCookie", "org.apache.tomcat.util.http.ServerCookies.addCookie()"], ["org.apache.tomcat.util.http.ServerCookie", "org.apache.tomcat.util.http.ServerCookies.getCookie(int)"], ["int", "org.apache.tomcat.util.http.ServerCookies.getCookieCount()"], ["void", "org.apache.tomcat.util.http.ServerCookies.setLimit(int)"], ["void", "org.apache.tomcat.util.http.ServerCookies.recycle()"], ["boolean", "org.apache.tomcat.util.http.ValuesEnumerator.hasMoreElements()"], ["java.lang.String", "org.apache.tomcat.util.http.ValuesEnumerator.nextElement()"], ["java.lang.Object", "org.apache.tomcat.util.http.ValuesEnumerator.nextElement()"], ["org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream()"], ["org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream(int)"], ["void", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.write(byte[], int, int)"], ["synchronized", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.void write(int)"], ["synchronized", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.int write(java.io.InputStream)"], ["void", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.close()"], ["synchronized", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.void writeTo(java.io.OutputStream)"], ["synchronized", "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream.byte[] toByteArray()"], ["org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream", "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream(int, java.io.File)"], ["boolean", "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream.isInMemory()"], ["byte[]", "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream.getData()"], ["java.io.File", "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream.getFile()"], ["void", "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream.close()"], ["org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException", "org.apache.tomcat.util.http.fileupload.FileItemStream$ItemSkippedException()"], ["org.apache.tomcat.util.http.fileupload.FileUpload", "org.apache.tomcat.util.http.fileupload.FileUpload()"], ["org.apache.tomcat.util.http.fileupload.FileUpload", "org.apache.tomcat.util.http.fileupload.FileUpload(org.apache.tomcat.util.http.fileupload.FileItemFactory)"], ["org.apache.tomcat.util.http.fileupload.FileItemFactory", "org.apache.tomcat.util.http.fileupload.FileUpload.getFileItemFactory()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUpload.setFileItemFactory(org.apache.tomcat.util.http.fileupload.FileItemFactory)"], ["org.apache.tomcat.util.http.fileupload.FileUploadBase", "org.apache.tomcat.util.http.fileupload.FileUploadBase()"], ["boolean", "org.apache.tomcat.util.http.fileupload.FileUploadBase.isMultipartContent(org.apache.tomcat.util.http.fileupload.RequestContext)"], ["long", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getSizeMax()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUploadBase.setSizeMax(long)"], ["long", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getFileSizeMax()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUploadBase.setFileSizeMax(long)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getHeaderEncoding()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUploadBase.setHeaderEncoding(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.FileItemIterator", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)"], ["java.util.Map<java.lang.String, java.util.List<org.apache.tomcat.util.http.fileupload.FileItem>>", "org.apache.tomcat.util.http.fileupload.FileUploadBase.parseParameterMap(org.apache.tomcat.util.http.fileupload.RequestContext)"], ["byte[]", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getBoundary(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getFileName(org.apache.tomcat.util.http.fileupload.FileItemHeaders)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getFieldName(org.apache.tomcat.util.http.fileupload.FileItemHeaders)"], ["org.apache.tomcat.util.http.fileupload.FileItemHeaders", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getParsedHeaders(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.ProgressListener", "org.apache.tomcat.util.http.fileupload.FileUploadBase.getProgressListener()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUploadBase.setProgressListener(org.apache.tomcat.util.http.fileupload.ProgressListener)"], ["org.apache.tomcat.util.http.fileupload.FileUploadException", "org.apache.tomcat.util.http.fileupload.FileUploadException()"], ["org.apache.tomcat.util.http.fileupload.FileUploadException", "org.apache.tomcat.util.http.fileupload.FileUploadException(java.lang.String, java.lang.Throwable)"], ["org.apache.tomcat.util.http.fileupload.FileUploadException", "org.apache.tomcat.util.http.fileupload.FileUploadException(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.FileUploadException", "org.apache.tomcat.util.http.fileupload.FileUploadException(java.lang.Throwable)"], ["org.apache.tomcat.util.http.fileupload.FileUtils", "org.apache.tomcat.util.http.fileupload.FileUtils()"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.deleteDirectory(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.cleanDirectory(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.forceDelete(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.forceDeleteOnExit(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.forceMkdir(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.FileUtils.forceMkdirParent(java.io.File)"], ["boolean", "org.apache.tomcat.util.http.fileupload.FileUtils.isSymlink(java.io.File)"], ["org.apache.tomcat.util.http.fileupload.IOUtils", "org.apache.tomcat.util.http.fileupload.IOUtils()"], ["void", "org.apache.tomcat.util.http.fileupload.IOUtils.closeQuietly(java.io.Closeable)"], ["int", "org.apache.tomcat.util.http.fileupload.IOUtils.copy(java.io.InputStream, java.io.OutputStream)"], ["long", "org.apache.tomcat.util.http.fileupload.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)"], ["int", "org.apache.tomcat.util.http.fileupload.IOUtils.read(java.io.InputStream, byte[], int, int)"], ["void", "org.apache.tomcat.util.http.fileupload.IOUtils.readFully(java.io.InputStream, byte[], int, int)"], ["void", "org.apache.tomcat.util.http.fileupload.IOUtils.readFully(java.io.InputStream, byte[])"], ["org.apache.tomcat.util.http.fileupload.InvalidFileNameException", "org.apache.tomcat.util.http.fileupload.InvalidFileNameException(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.InvalidFileNameException.getName()"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException", "org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException()"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException", "org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException(java.lang.String)"], ["long", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.getBytesRead()"], ["int", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.available()"], ["int", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.read()"], ["int", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.read(byte[], int, int)"], ["void", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.close()"], ["void", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.close(boolean)"], ["long", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.skip(long)"], ["boolean", "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.isClosed()"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException", "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException()"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException", "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier", "org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier(org.apache.tomcat.util.http.fileupload.ProgressListener, long)"], ["void", "org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier.noteItem()"], ["org.apache.tomcat.util.http.fileupload.MultipartStream", "org.apache.tomcat.util.http.fileupload.MultipartStream(java.io.InputStream, byte[], int, org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier)"], ["org.apache.tomcat.util.http.fileupload.MultipartStream", "org.apache.tomcat.util.http.fileupload.MultipartStream(java.io.InputStream, byte[], org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.MultipartStream.getHeaderEncoding()"], ["void", "org.apache.tomcat.util.http.fileupload.MultipartStream.setHeaderEncoding(java.lang.String)"], ["byte", "org.apache.tomcat.util.http.fileupload.MultipartStream.readByte()"], ["boolean", "org.apache.tomcat.util.http.fileupload.MultipartStream.readBoundary()"], ["void", "org.apache.tomcat.util.http.fileupload.MultipartStream.setBoundary(byte[])"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.MultipartStream.readHeaders()"], ["int", "org.apache.tomcat.util.http.fileupload.MultipartStream.readBodyData(java.io.OutputStream)"], ["org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream", "org.apache.tomcat.util.http.fileupload.MultipartStream.newInputStream()"], ["int", "org.apache.tomcat.util.http.fileupload.MultipartStream.discardBodyData()"], ["boolean", "org.apache.tomcat.util.http.fileupload.MultipartStream.skipPreamble()"], ["boolean", "org.apache.tomcat.util.http.fileupload.MultipartStream.arrayequals(byte[], byte[], int)"], ["org.apache.tomcat.util.http.fileupload.ParameterParser", "org.apache.tomcat.util.http.fileupload.ParameterParser()"], ["boolean", "org.apache.tomcat.util.http.fileupload.ParameterParser.isLowerCaseNames()"], ["void", "org.apache.tomcat.util.http.fileupload.ParameterParser.setLowerCaseNames(boolean)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.http.fileupload.ParameterParser.parse(java.lang.String, char[])"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.http.fileupload.ParameterParser.parse(java.lang.String, char)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.http.fileupload.ParameterParser.parse(char[], char)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.http.fileupload.ParameterParser.parse(char[], int, int, char)"], ["org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream(int)"], ["void", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.write(int)"], ["void", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.write(byte[])"], ["void", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.write(byte[], int, int)"], ["void", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.flush()"], ["void", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.close()"], ["boolean", "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream.isThresholdExceeded()"], ["org.apache.tomcat.util.http.fileupload.disk.DiskFileItem", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.io.File)"], ["java.io.InputStream", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getInputStream()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getContentType()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getCharSet()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getName()"], ["boolean", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.isInMemory()"], ["long", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getSize()"], ["byte[]", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.get()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getString(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getString()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.write(java.io.File)"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getFieldName()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.setFieldName(java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.isFormField()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.setFormField(boolean)"], ["java.io.OutputStream", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getOutputStream()"], ["java.io.File", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getStoreLocation()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.toString()"], ["org.apache.tomcat.util.http.fileupload.FileItemHeaders", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getHeaders()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.setHeaders(org.apache.tomcat.util.http.fileupload.FileItemHeaders)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getDefaultCharset()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.setDefaultCharset(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory()"], ["org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory(int, java.io.File)"], ["java.io.File", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.getRepository()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.setRepository(java.io.File)"], ["int", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.getSizeThreshold()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.setSizeThreshold(int)"], ["org.apache.tomcat.util.http.fileupload.FileItem", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.createItem(java.lang.String, java.lang.String, boolean, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.getDefaultCharset()"], ["void", "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory.setDefaultCharset(java.lang.String)"], ["long", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getSizeMax()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.setSizeMax(long)"], ["long", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getFileSizeMax()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.setFileSizeMax(long)"], ["org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl(org.apache.tomcat.util.http.fileupload.FileUploadBase, org.apache.tomcat.util.http.fileupload.RequestContext)"], ["org.apache.tomcat.util.http.fileupload.MultipartStream", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getMultiPartStream()"], ["boolean", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.hasNext()"], ["org.apache.tomcat.util.http.fileupload.FileItemStream", "org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.next()"], ["org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl(org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl, java.lang.String, java.lang.String, java.lang.String, boolean, long)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.getContentType()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.getFieldName()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.getName()"], ["boolean", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.isFormField()"], ["java.io.InputStream", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.openStream()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.close()"], ["org.apache.tomcat.util.http.fileupload.FileItemHeaders", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.getHeaders()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl.setHeaders(org.apache.tomcat.util.http.fileupload.FileItemHeaders)"], ["org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException", "org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException(java.lang.String, long, long)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException.getFileName()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException.setFileName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException.getFieldName()"], ["void", "org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException.setFieldName(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.impl.FileUploadIOException", "org.apache.tomcat.util.http.fileupload.impl.FileUploadIOException(org.apache.tomcat.util.http.fileupload.FileUploadException)"], ["java.lang.Throwable", "org.apache.tomcat.util.http.fileupload.impl.FileUploadIOException.getCause()"], ["org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException", "org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException(java.lang.String, java.io.IOException)"], ["java.lang.Throwable", "org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException.getCause()"], ["org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException", "org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException()"], ["org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException", "org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException", "org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException(java.lang.String, java.lang.Throwable)"], ["long", "org.apache.tomcat.util.http.fileupload.impl.SizeException.getActualSize()"], ["long", "org.apache.tomcat.util.http.fileupload.impl.SizeException.getPermittedSize()"], ["org.apache.tomcat.util.http.fileupload.impl.SizeLimitExceededException", "org.apache.tomcat.util.http.fileupload.impl.SizeLimitExceededException(java.lang.String, long, long)"], ["boolean", "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload.isMultipartContent(javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload", "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload()"], ["org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload", "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload(org.apache.tomcat.util.http.fileupload.FileItemFactory)"], ["java.util.Map<java.lang.String, java.util.List<org.apache.tomcat.util.http.fileupload.FileItem>>", "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload.parseParameterMap(javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.fileupload.FileItemIterator", "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload.getItemIterator(javax.servlet.http.HttpServletRequest)"], ["org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext(javax.servlet.http.HttpServletRequest)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext.getCharacterEncoding()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext.getContentType()"], ["long", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext.contentLength()"], ["java.io.InputStream", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext.getInputStream()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext.toString()"], ["org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl", "org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl()"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl.getHeader(java.lang.String)"], ["synchronized", "org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl.void addHeader(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.util.LimitedInputStream", "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream(java.io.InputStream, long)"], ["int", "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read()"], ["int", "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(byte[], int, int)"], ["boolean", "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.isClosed()"], ["void", "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.close()"], ["long", "org.apache.tomcat.util.http.fileupload.util.Streams.copy(java.io.InputStream, java.io.OutputStream, boolean)"], ["long", "org.apache.tomcat.util.http.fileupload.util.Streams.copy(java.io.InputStream, java.io.OutputStream, boolean, byte[])"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.util.Streams.asString(java.io.InputStream)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.util.Streams.asString(java.io.InputStream, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.util.Streams.checkFileName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility.decodeText(java.lang.String)"], ["org.apache.tomcat.util.http.fileupload.util.mime.ParseException", "org.apache.tomcat.util.http.fileupload.util.mime.ParseException(java.lang.String)"], ["int", "org.apache.tomcat.util.http.fileupload.util.mime.QuotedPrintableDecoder.decode(byte[], java.io.OutputStream)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.AcceptEncoding.getEncoding()"], ["double", "org.apache.tomcat.util.http.parser.AcceptEncoding.getQuality()"], ["java.util.Locale", "org.apache.tomcat.util.http.parser.AcceptLanguage.getLocale()"], ["double", "org.apache.tomcat.util.http.parser.AcceptLanguage.getQuality()"], ["org.apache.tomcat.util.http.parser.Authorization$FieldType[]", "org.apache.tomcat.util.http.parser.Authorization$FieldType.values()"], ["org.apache.tomcat.util.http.parser.Authorization$FieldType", "org.apache.tomcat.util.http.parser.Authorization$FieldType.valueOf(java.lang.String)"], ["java.util.Map<java.lang.String, java.lang.String>", "org.apache.tomcat.util.http.parser.Authorization.parseAuthorizationDigest(java.io.StringReader)"], ["org.apache.tomcat.util.http.parser.ContentRange", "org.apache.tomcat.util.http.parser.ContentRange(java.lang.String, long, long, long)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.ContentRange.getUnits()"], ["long", "org.apache.tomcat.util.http.parser.ContentRange.getStart()"], ["long", "org.apache.tomcat.util.http.parser.ContentRange.getEnd()"], ["long", "org.apache.tomcat.util.http.parser.ContentRange.getLength()"], ["org.apache.tomcat.util.http.parser.ContentRange", "org.apache.tomcat.util.http.parser.ContentRange.parse(java.io.StringReader)"], ["org.apache.tomcat.util.http.parser.Cookie$ByteBuffer", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer(byte[], int, int)"], ["int", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.position()"], ["void", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.position(int)"], ["int", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.limit()"], ["int", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.remaining()"], ["boolean", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.hasRemaining()"], ["byte", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.get()"], ["byte", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.peek()"], ["void", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.rewind()"], ["byte[]", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.array()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.Cookie$ByteBuffer.toString()"], ["void", "org.apache.tomcat.util.http.parser.Cookie.parseCookie(byte[], int, int, org.apache.tomcat.util.http.ServerCookies)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.Cookie.unescapeCookieValueRfc2109(java.lang.String)"], ["org.apache.tomcat.util.http.parser.Host$MessageBytesReader", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader(org.apache.tomcat.util.buf.MessageBytes)"], ["int", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.read(char[], int, int)"], ["void", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.close()"], ["int", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.read()"], ["boolean", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.markSupported()"], ["void", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.mark(int)"], ["void", "org.apache.tomcat.util.http.parser.Host$MessageBytesReader.reset()"], ["int", "org.apache.tomcat.util.http.parser.Host.parse(org.apache.tomcat.util.buf.MessageBytes)"], ["int", "org.apache.tomcat.util.http.parser.Host.parse(java.lang.String)"], ["org.apache.tomcat.util.http.parser.HttpParser$DomainParseState[]", "org.apache.tomcat.util.http.parser.HttpParser$DomainParseState.values()"], ["org.apache.tomcat.util.http.parser.HttpParser$DomainParseState", "org.apache.tomcat.util.http.parser.HttpParser$DomainParseState.valueOf(java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser$DomainParseState.mayContinue()"], ["org.apache.tomcat.util.http.parser.HttpParser$DomainParseState", "org.apache.tomcat.util.http.parser.HttpParser$DomainParseState.next(int)"], ["org.apache.tomcat.util.http.parser.HttpParser", "org.apache.tomcat.util.http.parser.HttpParser(java.lang.String, java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isNotRequestTargetRelaxed(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isAbsolutePathRelaxed(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isQueryRelaxed(int)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.HttpParser.unquote(java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isToken(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isHex(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isNotRequestTarget(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isHttpProtocol(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isAlpha(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isNumeric(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isUserInfo(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isAbsolutePath(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isQuery(int)"], ["boolean", "org.apache.tomcat.util.http.parser.HttpParser.isControl(int)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.getType()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.getSubtype()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.getCharset()"], ["int", "org.apache.tomcat.util.http.parser.MediaType.getParameterCount()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.getParameterValue(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.toString()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.MediaType.toStringNoCharset()"], ["org.apache.tomcat.util.http.parser.MediaType", "org.apache.tomcat.util.http.parser.MediaType.parseMediaType(java.io.StringReader)"], ["org.apache.tomcat.util.http.parser.MediaTypeCache", "org.apache.tomcat.util.http.parser.MediaTypeCache(int)"], ["java.lang.String[]", "org.apache.tomcat.util.http.parser.MediaTypeCache.parse(java.lang.String)"], ["org.apache.tomcat.util.http.parser.Ranges$Entry", "org.apache.tomcat.util.http.parser.Ranges$Entry(long, long)"], ["long", "org.apache.tomcat.util.http.parser.Ranges$Entry.getStart()"], ["long", "org.apache.tomcat.util.http.parser.Ranges$Entry.getEnd()"], ["java.lang.String", "org.apache.tomcat.util.http.parser.Ranges.getUnits()"], ["org.apache.tomcat.util.http.parser.Ranges", "org.apache.tomcat.util.http.parser.Ranges.parse(java.io.StringReader)"], ["org.apache.tomcat.util.http.parser.SkipResult[]", "org.apache.tomcat.util.http.parser.SkipResult.values()"], ["org.apache.tomcat.util.http.parser.SkipResult", "org.apache.tomcat.util.http.parser.SkipResult.valueOf(java.lang.String)"], ["boolean", "org.apache.tomcat.util.http.parser.TokenList.parseTokenList(java.util.Enumeration<java.lang.String>, java.util.Collection<java.lang.String>)"], ["boolean", "org.apache.tomcat.util.http.parser.TokenList.parseTokenList(java.io.Reader, java.util.Collection<java.lang.String>)"], ["void", "org.apache.tomcat.util.http.parser.Vary.parseVary(java.io.StringReader, java.util.Set<java.lang.String>)"], ["org.apache.tomcat.util.json.JSONParser", "org.apache.tomcat.util.json.JSONParser(java.lang.String)"], ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>", "org.apache.tomcat.util.json.JSONParser.parseObject()"], ["java.lang.Object", "org.apache.tomcat.util.json.JSONParser.parse()"], ["void", "org.apache.tomcat.util.json.JSONParser.setNativeNumbers(boolean)"], ["boolean", "org.apache.tomcat.util.json.JSONParser.getNativeNumbers()"], ["boolean", "org.apache.tomcat.util.json.JSONParser.ensureEOF()"], ["java.lang.Object", "org.apache.tomcat.util.json.JSONParser.anything()"], ["java.lang.String", "org.apache.tomcat.util.json.JSONParser.objectKey()"], ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>", "org.apache.tomcat.util.json.JSONParser.object()"], ["java.lang.Object", "org.apache.tomcat.util.json.JSONParser.value()"], ["java.lang.Object", "org.apache.tomcat.util.json.JSONParser.nullValue()"], ["java.lang.Boolean", "org.apache.tomcat.util.json.JSONParser.booleanValue()"], ["java.lang.Number", "org.apache.tomcat.util.json.JSONParser.number()"], ["java.lang.String", "org.apache.tomcat.util.json.JSONParser.string()"], ["java.lang.String", "org.apache.tomcat.util.json.JSONParser.doubleQuoteString()"], ["java.lang.String", "org.apache.tomcat.util.json.JSONParser.singleQuoteString()"], ["java.lang.String", "org.apache.tomcat.util.json.JSONParser.symbol()"], ["org.apache.tomcat.util.json.JSONParser", "org.apache.tomcat.util.json.JSONParser(java.io.InputStream)"], ["org.apache.tomcat.util.json.JSONParser", "org.apache.tomcat.util.json.JSONParser(java.io.InputStream, java.lang.String)"], ["void", "org.apache.tomcat.util.json.JSONParser.ReInit(java.io.InputStream)"], ["void", "org.apache.tomcat.util.json.JSONParser.ReInit(java.io.InputStream, java.lang.String)"], ["org.apache.tomcat.util.json.JSONParser", "org.apache.tomcat.util.json.JSONParser(java.io.Reader)"], ["void", "org.apache.tomcat.util.json.JSONParser.ReInit(java.io.Reader)"], ["org.apache.tomcat.util.json.JSONParser", "org.apache.tomcat.util.json.JSONParser(org.apache.tomcat.util.json.JSONParserTokenManager)"], ["void", "org.apache.tomcat.util.json.JSONParser.ReInit(org.apache.tomcat.util.json.JSONParserTokenManager)"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.JSONParser.getNextToken()"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.JSONParser.getToken(int)"], ["org.apache.tomcat.util.json.ParseException", "org.apache.tomcat.util.json.JSONParser.generateParseException()"], ["boolean", "org.apache.tomcat.util.json.JSONParser.trace_enabled()"], ["void", "org.apache.tomcat.util.json.JSONParser.enable_tracing()"], ["void", "org.apache.tomcat.util.json.JSONParser.disable_tracing()"], ["void", "org.apache.tomcat.util.json.JSONParserTokenManager.setDebugStream(java.io.PrintStream)"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.JSONParserTokenManager.getNextToken()"], ["org.apache.tomcat.util.json.JSONParserTokenManager", "org.apache.tomcat.util.json.JSONParserTokenManager(org.apache.tomcat.util.json.JavaCharStream)"], ["org.apache.tomcat.util.json.JSONParserTokenManager", "org.apache.tomcat.util.json.JSONParserTokenManager(org.apache.tomcat.util.json.JavaCharStream, int)"], ["void", "org.apache.tomcat.util.json.JSONParserTokenManager.ReInit(org.apache.tomcat.util.json.JavaCharStream)"], ["void", "org.apache.tomcat.util.json.JSONParserTokenManager.ReInit(org.apache.tomcat.util.json.JavaCharStream, int)"], ["void", "org.apache.tomcat.util.json.JSONParserTokenManager.SwitchTo(int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.setTabSize(int)"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getTabSize()"], ["char", "org.apache.tomcat.util.json.JavaCharStream.BeginToken()"], ["char", "org.apache.tomcat.util.json.JavaCharStream.readChar()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getColumn()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getLine()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getEndColumn()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getEndLine()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getBeginColumn()"], ["int", "org.apache.tomcat.util.json.JavaCharStream.getBeginLine()"], ["void", "org.apache.tomcat.util.json.JavaCharStream.backup(int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.Reader, int, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.Reader, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.Reader)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.Reader, int, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.Reader, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.Reader)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream, java.lang.String, int, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream, int, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream, java.lang.String, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream, int, int)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream, java.lang.String)"], ["org.apache.tomcat.util.json.JavaCharStream", "org.apache.tomcat.util.json.JavaCharStream(java.io.InputStream)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream, java.lang.String, int, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream, int, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream, java.lang.String, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream, int, int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream, java.lang.String)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.ReInit(java.io.InputStream)"], ["java.lang.String", "org.apache.tomcat.util.json.JavaCharStream.GetImage()"], ["char[]", "org.apache.tomcat.util.json.JavaCharStream.GetSuffix(int)"], ["void", "org.apache.tomcat.util.json.JavaCharStream.Done()"], ["void", "org.apache.tomcat.util.json.JavaCharStream.adjustBeginLineColumn(int, int)"], ["org.apache.tomcat.util.json.ParseException", "org.apache.tomcat.util.json.ParseException(org.apache.tomcat.util.json.Token, int[][], java.lang.String[])"], ["org.apache.tomcat.util.json.ParseException", "org.apache.tomcat.util.json.ParseException()"], ["org.apache.tomcat.util.json.ParseException", "org.apache.tomcat.util.json.ParseException(java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.json.Token.getValue()"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.Token()"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.Token(int)"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.Token(int, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.json.Token.toString()"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.Token.newToken(int, java.lang.String)"], ["org.apache.tomcat.util.json.Token", "org.apache.tomcat.util.json.Token.newToken(int)"], ["java.lang.String", "org.apache.tomcat.util.json.TokenMgrError.getMessage()"], ["org.apache.tomcat.util.json.TokenMgrError", "org.apache.tomcat.util.json.TokenMgrError()"], ["org.apache.tomcat.util.json.TokenMgrError", "org.apache.tomcat.util.json.TokenMgrError(java.lang.String, int)"], ["org.apache.tomcat.util.json.TokenMgrError", "org.apache.tomcat.util.json.TokenMgrError(boolean, int, int, int, java.lang.String, int, int)"], ["org.apache.tomcat.util.log.SystemLogHandler", "org.apache.tomcat.util.log.SystemLogHandler(java.io.PrintStream)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.startCapture()"], ["java.lang.String", "org.apache.tomcat.util.log.SystemLogHandler.stopCapture()"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.flush()"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.close()"], ["boolean", "org.apache.tomcat.util.log.SystemLogHandler.checkError()"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.write(int)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.write(byte[])"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.write(byte[], int, int)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(boolean)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(char)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(int)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(long)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(float)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(double)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(char[])"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(java.lang.String)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.print(java.lang.Object)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println()"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(boolean)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(char)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(int)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(long)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(float)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(double)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(char[])"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(java.lang.String)"], ["void", "org.apache.tomcat.util.log.SystemLogHandler.println(java.lang.Object)"], ["org.apache.tomcat.util.log.UserDataHelper$Config[]", "org.apache.tomcat.util.log.UserDataHelper$Config.values()"], ["org.apache.tomcat.util.log.UserDataHelper$Config", "org.apache.tomcat.util.log.UserDataHelper$Config.valueOf(java.lang.String)"], ["org.apache.tomcat.util.log.UserDataHelper$Mode[]", "org.apache.tomcat.util.log.UserDataHelper$Mode.values()"], ["org.apache.tomcat.util.log.UserDataHelper$Mode", "org.apache.tomcat.util.log.UserDataHelper$Mode.valueOf(java.lang.String)"], ["org.apache.tomcat.util.log.UserDataHelper", "org.apache.tomcat.util.log.UserDataHelper(org.apache.juli.logging.Log)"], ["org.apache.tomcat.util.log.UserDataHelper$Mode", "org.apache.tomcat.util.log.UserDataHelper.getNextMode()"], ["org.apache.tomcat.util.modeler.AttributeInfo", "org.apache.tomcat.util.modeler.AttributeInfo()"], ["java.lang.String", "org.apache.tomcat.util.modeler.AttributeInfo.getDisplayName()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setDisplayName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.AttributeInfo.getGetMethod()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setGetMethod(java.lang.String)"], ["boolean", "org.apache.tomcat.util.modeler.AttributeInfo.isIs()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setIs(boolean)"], ["boolean", "org.apache.tomcat.util.modeler.AttributeInfo.isReadable()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setReadable(boolean)"], ["java.lang.String", "org.apache.tomcat.util.modeler.AttributeInfo.getSetMethod()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setSetMethod(java.lang.String)"], ["boolean", "org.apache.tomcat.util.modeler.AttributeInfo.isWriteable()"], ["void", "org.apache.tomcat.util.modeler.AttributeInfo.setWriteable(boolean)"], ["org.apache.tomcat.util.modeler.BaseAttributeFilter", "org.apache.tomcat.util.modeler.BaseAttributeFilter(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.BaseAttributeFilter.addAttribute(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.BaseAttributeFilter.clear()"], ["java.lang.String[]", "org.apache.tomcat.util.modeler.BaseAttributeFilter.getNames()"], ["boolean", "org.apache.tomcat.util.modeler.BaseAttributeFilter.isNotificationEnabled(javax.management.Notification)"], ["void", "org.apache.tomcat.util.modeler.BaseAttributeFilter.removeAttribute(java.lang.String)"], ["org.apache.tomcat.util.modeler.BaseModelMBean", "org.apache.tomcat.util.modeler.BaseModelMBean()"], ["java.lang.Object", "org.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(java.lang.String)"], ["javax.management.AttributeList", "org.apache.tomcat.util.modeler.BaseModelMBean.getAttributes(java.lang.String[])"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.setManagedBean(org.apache.tomcat.util.modeler.ManagedBean)"], ["javax.management.MBeanInfo", "org.apache.tomcat.util.modeler.BaseModelMBean.getMBeanInfo()"], ["java.lang.Object", "org.apache.tomcat.util.modeler.BaseModelMBean.invoke(java.lang.String, java.lang.Object[], java.lang.String[])"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.setAttribute(javax.management.Attribute)"], ["java.lang.String", "org.apache.tomcat.util.modeler.BaseModelMBean.toString()"], ["javax.management.AttributeList", "org.apache.tomcat.util.modeler.BaseModelMBean.setAttributes(javax.management.AttributeList)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.BaseModelMBean.getManagedResource()"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.setManagedResource(java.lang.Object, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.addAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String, java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.removeAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.sendAttributeChangeNotification(javax.management.AttributeChangeNotification)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.sendAttributeChangeNotification(javax.management.Attribute, javax.management.Attribute)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.sendNotification(javax.management.Notification)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.sendNotification(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["javax.management.MBeanNotificationInfo[]", "org.apache.tomcat.util.modeler.BaseModelMBean.getNotificationInfo()"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.removeNotificationListener(javax.management.NotificationListener)"], ["java.lang.String", "org.apache.tomcat.util.modeler.BaseModelMBean.getModelerType()"], ["java.lang.String", "org.apache.tomcat.util.modeler.BaseModelMBean.getClassName()"], ["javax.management.ObjectName", "org.apache.tomcat.util.modeler.BaseModelMBean.getJmxName()"], ["java.lang.String", "org.apache.tomcat.util.modeler.BaseModelMBean.getObjectName()"], ["javax.management.ObjectName", "org.apache.tomcat.util.modeler.BaseModelMBean.preRegister(javax.management.MBeanServer, javax.management.ObjectName)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.postRegister(java.lang.Boolean)"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.preDeregister()"], ["void", "org.apache.tomcat.util.modeler.BaseModelMBean.postDeregister()"], ["org.apache.tomcat.util.modeler.BaseNotificationBroadcaster", "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster()"], ["void", "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["javax.management.MBeanNotificationInfo[]", "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster.getNotificationInfo()"], ["void", "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster.removeNotificationListener(javax.management.NotificationListener)"], ["void", "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster.sendNotification(javax.management.Notification)"], ["org.apache.tomcat.util.modeler.BaseNotificationBroadcasterEntry", "org.apache.tomcat.util.modeler.BaseNotificationBroadcasterEntry(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["org.apache.tomcat.util.modeler.FeatureInfo", "org.apache.tomcat.util.modeler.FeatureInfo()"], ["java.lang.String", "org.apache.tomcat.util.modeler.FeatureInfo.getDescription()"], ["void", "org.apache.tomcat.util.modeler.FeatureInfo.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.FeatureInfo.getName()"], ["void", "org.apache.tomcat.util.modeler.FeatureInfo.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.FeatureInfo.getType()"], ["void", "org.apache.tomcat.util.modeler.FeatureInfo.setType(java.lang.String)"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.ManagedBean()"], ["org.apache.tomcat.util.modeler.AttributeInfo[]", "org.apache.tomcat.util.modeler.ManagedBean.getAttributes()"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getClassName()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setClassName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getDescription()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setDescription(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getDomain()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setDomain(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getGroup()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setGroup(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getName()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setName(java.lang.String)"], ["org.apache.tomcat.util.modeler.NotificationInfo[]", "org.apache.tomcat.util.modeler.ManagedBean.getNotifications()"], ["org.apache.tomcat.util.modeler.OperationInfo[]", "org.apache.tomcat.util.modeler.ManagedBean.getOperations()"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.getType()"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.setType(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.addAttribute(org.apache.tomcat.util.modeler.AttributeInfo)"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.addNotification(org.apache.tomcat.util.modeler.NotificationInfo)"], ["void", "org.apache.tomcat.util.modeler.ManagedBean.addOperation(org.apache.tomcat.util.modeler.OperationInfo)"], ["javax.management.DynamicMBean", "org.apache.tomcat.util.modeler.ManagedBean.createMBean(java.lang.Object)"], ["java.lang.String", "org.apache.tomcat.util.modeler.ManagedBean.toString()"], ["java.lang.reflect.Method", "org.apache.tomcat.util.modeler.ManagedBean.getSetter(java.lang.String, org.apache.tomcat.util.modeler.BaseModelMBean, java.lang.Object)"], ["java.lang.reflect.Method", "org.apache.tomcat.util.modeler.ManagedBean.getInvoke(java.lang.String, java.lang.Object[], java.lang.String[], org.apache.tomcat.util.modeler.BaseModelMBean, java.lang.Object)"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.createMBean(java.lang.String, javax.management.ObjectName)"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName)"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.createMBean(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[])"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, java.lang.Object[], java.lang.String[])"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.registerMBean(java.lang.Object, javax.management.ObjectName)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.unregisterMBean(javax.management.ObjectName)"], ["javax.management.ObjectInstance", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getObjectInstance(javax.management.ObjectName)"], ["boolean", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.isRegistered(javax.management.ObjectName)"], ["java.lang.Integer", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getMBeanCount()"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getAttribute(javax.management.ObjectName, java.lang.String)"], ["javax.management.AttributeList", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getAttributes(javax.management.ObjectName, java.lang.String[])"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.setAttribute(javax.management.ObjectName, javax.management.Attribute)"], ["javax.management.AttributeList", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.setAttributes(javax.management.ObjectName, javax.management.AttributeList)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.invoke(javax.management.ObjectName, java.lang.String, java.lang.Object[], java.lang.String[])"], ["java.lang.String", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getDefaultDomain()"], ["java.lang.String[]", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getDomains()"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.addNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.addNotificationListener(javax.management.ObjectName, javax.management.ObjectName, javax.management.NotificationFilter, java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.removeNotificationListener(javax.management.ObjectName, javax.management.ObjectName)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.removeNotificationListener(javax.management.ObjectName, javax.management.ObjectName, javax.management.NotificationFilter, java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.removeNotificationListener(javax.management.ObjectName, javax.management.NotificationListener)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.removeNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)"], ["javax.management.MBeanInfo", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getMBeanInfo(javax.management.ObjectName)"], ["boolean", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.isInstanceOf(javax.management.ObjectName, java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.instantiate(java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.instantiate(java.lang.String, javax.management.ObjectName)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.instantiate(java.lang.String, java.lang.Object[], java.lang.String[])"], ["java.lang.Object", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[])"], ["java.io.ObjectInputStream", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.deserialize(javax.management.ObjectName, byte[])"], ["java.io.ObjectInputStream", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.deserialize(java.lang.String, byte[])"], ["java.io.ObjectInputStream", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.deserialize(java.lang.String, javax.management.ObjectName, byte[])"], ["java.lang.ClassLoader", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getClassLoaderFor(javax.management.ObjectName)"], ["java.lang.ClassLoader", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getClassLoader(javax.management.ObjectName)"], ["javax.management.loading.ClassLoaderRepository", "org.apache.tomcat.util.modeler.NoDescriptorRegistry$NoJmxMBeanServer.getClassLoaderRepository()"], ["org.apache.tomcat.util.modeler.NoDescriptorRegistry", "org.apache.tomcat.util.modeler.NoDescriptorRegistry()"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.registerComponent(java.lang.Object, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.unregisterComponent(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.invoke(java.util.List<javax.management.ObjectName>, java.lang.String, boolean)"], ["int", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.getId(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.addManagedBean(org.apache.tomcat.util.modeler.ManagedBean)"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.findManagedBean(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.getType(javax.management.ObjectName, java.lang.String)"], ["javax.management.MBeanOperationInfo", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.getMethodInfo(javax.management.ObjectName, java.lang.String)"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.findManagedBean(java.lang.Object, java.lang.Class<?>, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.loadDescriptors(java.lang.String, java.lang.ClassLoader)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.registerComponent(java.lang.Object, javax.management.ObjectName, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.unregisterComponent(javax.management.ObjectName)"], ["javax.management.MBeanServer", "org.apache.tomcat.util.modeler.NoDescriptorRegistry.getMBeanServer()"], ["org.apache.tomcat.util.modeler.NotificationInfo", "org.apache.tomcat.util.modeler.NotificationInfo()"], ["void", "org.apache.tomcat.util.modeler.NotificationInfo.setDescription(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.NotificationInfo.setName(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.modeler.NotificationInfo.getNotifTypes()"], ["void", "org.apache.tomcat.util.modeler.NotificationInfo.addNotifType(java.lang.String)"], ["javax.management.MBeanNotificationInfo", "org.apache.tomcat.util.modeler.NotificationInfo.createNotificationInfo()"], ["java.lang.String", "org.apache.tomcat.util.modeler.NotificationInfo.toString()"], ["org.apache.tomcat.util.modeler.OperationInfo", "org.apache.tomcat.util.modeler.OperationInfo()"], ["java.lang.String", "org.apache.tomcat.util.modeler.OperationInfo.getImpact()"], ["void", "org.apache.tomcat.util.modeler.OperationInfo.setImpact(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.OperationInfo.getRole()"], ["void", "org.apache.tomcat.util.modeler.OperationInfo.setRole(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.OperationInfo.getReturnType()"], ["void", "org.apache.tomcat.util.modeler.OperationInfo.setReturnType(java.lang.String)"], ["org.apache.tomcat.util.modeler.ParameterInfo[]", "org.apache.tomcat.util.modeler.OperationInfo.getSignature()"], ["void", "org.apache.tomcat.util.modeler.OperationInfo.addParameter(org.apache.tomcat.util.modeler.ParameterInfo)"], ["org.apache.tomcat.util.modeler.ParameterInfo", "org.apache.tomcat.util.modeler.ParameterInfo()"], ["javax.management.MBeanParameterInfo", "org.apache.tomcat.util.modeler.ParameterInfo.createParameterInfo()"], ["synchronized", "org.apache.tomcat.util.modeler.Registry.org.apache.tomcat.util.modeler.Registry getRegistry(java.lang.Object, java.lang.Object)"], ["synchronized", "org.apache.tomcat.util.modeler.Registry.void disableRegistry()"], ["void", "org.apache.tomcat.util.modeler.Registry.stop()"], ["void", "org.apache.tomcat.util.modeler.Registry.registerComponent(java.lang.Object, java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.Registry.unregisterComponent(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.Registry.invoke(java.util.List<javax.management.ObjectName>, java.lang.String, boolean)"], ["synchronized", "org.apache.tomcat.util.modeler.Registry.int getId(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.Registry.addManagedBean(org.apache.tomcat.util.modeler.ManagedBean)"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.Registry.findManagedBean(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.modeler.Registry.getType(javax.management.ObjectName, java.lang.String)"], ["javax.management.MBeanOperationInfo", "org.apache.tomcat.util.modeler.Registry.getMethodInfo(javax.management.ObjectName, java.lang.String)"], ["javax.management.MBeanOperationInfo", "org.apache.tomcat.util.modeler.Registry.getMethodInfo(javax.management.ObjectName, java.lang.String, int)"], ["void", "org.apache.tomcat.util.modeler.Registry.unregisterComponent(javax.management.ObjectName)"], ["javax.management.MBeanServer", "org.apache.tomcat.util.modeler.Registry.getMBeanServer()"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.Registry.findManagedBean(java.lang.Object, java.lang.Class<?>, java.lang.String)"], ["java.lang.Object", "org.apache.tomcat.util.modeler.Registry.convertValue(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.Registry.registerComponent(java.lang.Object, javax.management.ObjectName, java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.Registry.loadDescriptors(java.lang.String, java.lang.ClassLoader)"], ["javax.management.ObjectName", "org.apache.tomcat.util.modeler.Registry.preRegister(javax.management.MBeanServer, javax.management.ObjectName)"], ["void", "org.apache.tomcat.util.modeler.Registry.postRegister(java.lang.Boolean)"], ["void", "org.apache.tomcat.util.modeler.Registry.preDeregister()"], ["void", "org.apache.tomcat.util.modeler.Registry.postDeregister()"], ["boolean", "org.apache.tomcat.util.modeler.Util.objectNameValueNeedsQuote(java.lang.String)"], ["org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource()"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.setRegistry(org.apache.tomcat.util.modeler.Registry)"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.setSource(java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.execute()"], ["org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource()"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.setRegistry(org.apache.tomcat.util.modeler.Registry)"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.setType(java.lang.String)"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.setSource(java.lang.Object)"], ["void", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.execute()"], ["org.apache.tomcat.util.modeler.ManagedBean", "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.createManagedBean(org.apache.tomcat.util.modeler.Registry, java.lang.String, java.lang.Class<?>, java.lang.String)"], ["org.apache.tomcat.util.modeler.modules.ModelerSource", "org.apache.tomcat.util.modeler.modules.ModelerSource()"], ["org.apache.tomcat.util.net.AbstractEndpoint$BindState[]", "org.apache.tomcat.util.net.AbstractEndpoint$BindState.values()"], ["org.apache.tomcat.util.net.AbstractEndpoint$BindState", "org.apache.tomcat.util.net.AbstractEndpoint$BindState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState[]", "org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState.values()"], ["org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState", "org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.AbstractEndpoint", "org.apache.tomcat.util.net.AbstractEndpoint()"], ["long", "org.apache.tomcat.util.net.AbstractEndpoint.toTimeout(long)"], ["org.apache.tomcat.util.net.SocketProperties", "org.apache.tomcat.util.net.AbstractEndpoint.getSocketProperties()"], ["java.lang.String", "org.apache.tomcat.util.net.AbstractEndpoint.getDefaultSSLHostConfigName()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setDefaultSSLHostConfigName(java.lang.String)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig, boolean)"], ["org.apache.tomcat.util.net.SSLHostConfig", "org.apache.tomcat.util.net.AbstractEndpoint.removeSslHostConfig(java.lang.String)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.reloadSslHostConfig(java.lang.String)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.reloadSslHostConfigs()"], ["org.apache.tomcat.util.net.SSLHostConfig[]", "org.apache.tomcat.util.net.AbstractEndpoint.findSslHostConfigs()"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.getUseSendfile()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setUseSendfile(boolean)"], ["long", "org.apache.tomcat.util.net.AbstractEndpoint.getExecutorTerminationTimeoutMillis()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setExecutorTerminationTimeoutMillis(long)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setAcceptorThreadCount(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getAcceptorThreadCount()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setAcceptorThreadPriority(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getAcceptorThreadPriority()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setMaxConnections(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getMaxConnections()"], ["long", "org.apache.tomcat.util.net.AbstractEndpoint.getConnectionCount()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setExecutor(java.util.concurrent.Executor)"], ["java.util.concurrent.Executor", "org.apache.tomcat.util.net.AbstractEndpoint.getExecutor()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setUtilityExecutor(java.util.concurrent.ScheduledExecutorService)"], ["java.util.concurrent.ScheduledExecutorService", "org.apache.tomcat.util.net.AbstractEndpoint.getUtilityExecutor()"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getPort()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setPort(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getPortOffset()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setPortOffset(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getPortWithOffset()"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"], ["java.net.InetAddress", "org.apache.tomcat.util.net.AbstractEndpoint.getAddress()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setAddress(java.net.InetAddress)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setAcceptCount(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getAcceptCount()"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.getBindOnInit()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setBindOnInit(boolean)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getKeepAliveTimeout()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setKeepAliveTimeout(int)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.getTcpNoDelay()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setTcpNoDelay(boolean)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getConnectionLinger()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setConnectionLinger(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getConnectionTimeout()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setConnectionTimeout(int)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.isSSLEnabled()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setSSLEnabled(boolean)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setMinSpareThreads(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getMinSpareThreads()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setMaxThreads(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getMaxThreads()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setThreadPriority(int)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getThreadPriority()"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getMaxKeepAliveRequests()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setMaxKeepAliveRequests(int)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.AbstractEndpoint.getName()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setDomain(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.AbstractEndpoint.getDomain()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setDaemon(boolean)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.getDaemon()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setUseAsyncIO(boolean)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.getUseAsyncIO()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.addNegotiatedProtocol(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.hasNegotiableProtocols()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setHandler(org.apache.tomcat.util.net.AbstractEndpoint$Handler<S>)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.tomcat.util.net.AbstractEndpoint.getAttribute(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.setProperty(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.AbstractEndpoint.getProperty(java.lang.String)"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getCurrentThreadCount()"], ["int", "org.apache.tomcat.util.net.AbstractEndpoint.getCurrentThreadsBusy()"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.isRunning()"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.isPaused()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.createExecutor()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.shutdownExecutor()"], ["boolean", "org.apache.tomcat.util.net.AbstractEndpoint.processSocket(org.apache.tomcat.util.net.SocketWrapperBase<S>, org.apache.tomcat.util.net.SocketEvent, boolean)"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.init()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.start()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.pause()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.resume()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.stop()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.destroy()"], ["void", "org.apache.tomcat.util.net.AbstractEndpoint.closeServerSocketGraceful()"], ["org.apache.tomcat.util.net.AbstractJsseEndpoint", "org.apache.tomcat.util.net.AbstractJsseEndpoint()"], ["java.lang.String", "org.apache.tomcat.util.net.AbstractJsseEndpoint.getSslImplementationName()"], ["void", "org.apache.tomcat.util.net.AbstractJsseEndpoint.setSslImplementationName(java.lang.String)"], ["org.apache.tomcat.util.net.SSLImplementation", "org.apache.tomcat.util.net.AbstractJsseEndpoint.getSslImplementation()"], ["int", "org.apache.tomcat.util.net.AbstractJsseEndpoint.getSniParseLimit()"], ["void", "org.apache.tomcat.util.net.AbstractJsseEndpoint.setSniParseLimit(int)"], ["boolean", "org.apache.tomcat.util.net.AbstractJsseEndpoint.isAlpnSupported()"], ["void", "org.apache.tomcat.util.net.AbstractJsseEndpoint.unbind()"], ["org.apache.tomcat.util.net.Acceptor$AcceptorState[]", "org.apache.tomcat.util.net.Acceptor$AcceptorState.values()"], ["org.apache.tomcat.util.net.Acceptor$AcceptorState", "org.apache.tomcat.util.net.Acceptor$AcceptorState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.Acceptor", "org.apache.tomcat.util.net.Acceptor(org.apache.tomcat.util.net.AbstractEndpoint<?, U>)"], ["org.apache.tomcat.util.net.Acceptor$AcceptorState", "org.apache.tomcat.util.net.Acceptor.getState()"], ["void", "org.apache.tomcat.util.net.Acceptor.run()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper$AprOperationState.run()"], ["org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper(java.lang.Long, org.apache.tomcat.util.net.AprEndpoint)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getBlockingStatus()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.setBlockingStatus(boolean)"], ["java.util.concurrent.locks.Lock", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getBlockingStatusReadLock()"], ["java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getBlockingStatusWriteLock()"], ["int", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.read(boolean, byte[], int, int)"], ["int", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.read(boolean, java.nio.ByteBuffer)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.isReadyForRead()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.registerReadInterest()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.registerWriteInterest()"], ["org.apache.tomcat.util.net.SendfileDataBase", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.createSendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.processSendfile(org.apache.tomcat.util.net.SendfileDataBase)"], ["org.apache.tomcat.util.net.SSLSupport", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getSslSupport(java.lang.String)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.doClientAuth(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["org.apache.tomcat.util.net.AprEndpoint$Poller", "org.apache.tomcat.util.net.AprEndpoint$Poller(org.apache.tomcat.util.net.AprEndpoint)"], ["int", "org.apache.tomcat.util.net.AprEndpoint$Poller.getConnectionCount()"], ["java.lang.String", "org.apache.tomcat.util.net.AprEndpoint$Poller.toString()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$Poller.run()"], ["org.apache.tomcat.util.net.AprEndpoint$Sendfile", "org.apache.tomcat.util.net.AprEndpoint$Sendfile(org.apache.tomcat.util.net.AprEndpoint)"], ["int", "org.apache.tomcat.util.net.AprEndpoint$Sendfile.getSendfileCount()"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.AprEndpoint$Sendfile.add(org.apache.tomcat.util.net.AprEndpoint$SendfileData)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$Sendfile.run()"], ["org.apache.tomcat.util.net.AprEndpoint$SendfileData", "org.apache.tomcat.util.net.AprEndpoint$SendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.AprEndpoint$SocketInfo", "org.apache.tomcat.util.net.AprEndpoint$SocketInfo()"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$SocketInfo.read()"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$SocketInfo.write()"], ["int", "org.apache.tomcat.util.net.AprEndpoint$SocketInfo.merge(int, int)"], ["java.lang.String", "org.apache.tomcat.util.net.AprEndpoint$SocketInfo.toString()"], ["org.apache.tomcat.util.net.AprEndpoint$SocketList", "org.apache.tomcat.util.net.AprEndpoint$SocketList(int)"], ["int", "org.apache.tomcat.util.net.AprEndpoint$SocketList.size()"], ["org.apache.tomcat.util.net.AprEndpoint$SocketInfo", "org.apache.tomcat.util.net.AprEndpoint$SocketList.get()"], ["void", "org.apache.tomcat.util.net.AprEndpoint$SocketList.clear()"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$SocketList.add(long, long, int)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint$SocketList.remove(long)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$SocketList.duplicate(org.apache.tomcat.util.net.AprEndpoint$SocketList)"], ["org.apache.tomcat.util.net.AprEndpoint$SocketProcessor", "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor(org.apache.tomcat.util.net.SocketWrapperBase<java.lang.Long>, org.apache.tomcat.util.net.SocketEvent)"], ["org.apache.tomcat.util.net.AprEndpoint$SocketTimeouts", "org.apache.tomcat.util.net.AprEndpoint$SocketTimeouts(int)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$SocketTimeouts.add(long, long)"], ["long", "org.apache.tomcat.util.net.AprEndpoint$SocketTimeouts.remove(long)"], ["long", "org.apache.tomcat.util.net.AprEndpoint$SocketTimeouts.check(long)"], ["org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor", "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor(org.apache.tomcat.util.net.SocketWrapperBase<java.lang.Long>)"], ["void", "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor.run()"], ["org.apache.tomcat.util.net.AprEndpoint", "org.apache.tomcat.util.net.AprEndpoint()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setDeferAccept(boolean)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint.getDeferAccept()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setIpv6v6only(boolean)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint.getIpv6v6only()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setSendfileSize(int)"], ["int", "org.apache.tomcat.util.net.AprEndpoint.getSendfileSize()"], ["int", "org.apache.tomcat.util.net.AprEndpoint.getPollTime()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setPollTime(int)"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setUseSendfile(boolean)"], ["org.apache.tomcat.util.net.AprEndpoint$Poller", "org.apache.tomcat.util.net.AprEndpoint.getPoller()"], ["org.apache.tomcat.util.net.AprEndpoint$Sendfile", "org.apache.tomcat.util.net.AprEndpoint.getSendfile()"], ["java.net.InetSocketAddress", "org.apache.tomcat.util.net.AprEndpoint.getLocalAddress()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.setMaxConnections(int)"], ["int", "org.apache.tomcat.util.net.AprEndpoint.getKeepAliveCount()"], ["int", "org.apache.tomcat.util.net.AprEndpoint.getSendfileCount()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.bind()"], ["long", "org.apache.tomcat.util.net.AprEndpoint.getSslContext(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.AprEndpoint.isAlpnSupported()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.startInternal()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.stopInternal()"], ["void", "org.apache.tomcat.util.net.AprEndpoint.unbind()"], ["org.apache.tomcat.util.net.AprSSLSupport", "org.apache.tomcat.util.net.AprSSLSupport(org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.AprSSLSupport.getCipherSuite()"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.AprSSLSupport.getPeerCertificateChain()"], ["java.lang.Integer", "org.apache.tomcat.util.net.AprSSLSupport.getKeySize()"], ["java.lang.String", "org.apache.tomcat.util.net.AprSSLSupport.getSessionId()"], ["java.lang.String", "org.apache.tomcat.util.net.AprSSLSupport.getProtocol()"], ["org.apache.tomcat.util.net.Constants", "org.apache.tomcat.util.net.Constants()"], ["org.apache.tomcat.util.net.ContainerThreadMarker", "org.apache.tomcat.util.net.ContainerThreadMarker()"], ["boolean", "org.apache.tomcat.util.net.ContainerThreadMarker.isContainerThread()"], ["void", "org.apache.tomcat.util.net.ContainerThreadMarker.set()"], ["void", "org.apache.tomcat.util.net.ContainerThreadMarker.clear()"], ["org.apache.tomcat.util.net.DispatchType[]", "org.apache.tomcat.util.net.DispatchType.values()"], ["org.apache.tomcat.util.net.DispatchType", "org.apache.tomcat.util.net.DispatchType.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SocketEvent", "org.apache.tomcat.util.net.DispatchType.getSocketStatus()"], ["org.apache.tomcat.util.net.IPv6Utils", "org.apache.tomcat.util.net.IPv6Utils()"], ["java.lang.String", "org.apache.tomcat.util.net.IPv6Utils.canonize(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$1.cancel(boolean)"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$1.isCancelled()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$1.isDone()"], ["java.lang.Boolean", "org.apache.tomcat.util.net.Nio2Channel$1.get()"], ["java.lang.Boolean", "org.apache.tomcat.util.net.Nio2Channel$1.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.Nio2Channel$1.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.Nio2Channel$1.get()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$2.cancel(boolean)"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$2.isCancelled()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$2.isDone()"], ["java.lang.Integer", "org.apache.tomcat.util.net.Nio2Channel$2.get()"], ["java.lang.Integer", "org.apache.tomcat.util.net.Nio2Channel$2.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.Nio2Channel$2.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.Nio2Channel$2.get()"], ["void", "org.apache.tomcat.util.net.Nio2Channel$3.close()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel$3.isOpen()"], ["void", "org.apache.tomcat.util.net.Nio2Channel$3.reset(java.nio.channels.AsynchronousSocketChannel, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.Nio2Channel$3.free()"], ["void", "org.apache.tomcat.util.net.Nio2Channel$3.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel$3.read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel$3.read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel$3.write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel$3.write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["java.lang.String", "org.apache.tomcat.util.net.Nio2Channel$3.toString()"], ["org.apache.tomcat.util.net.Nio2Channel", "org.apache.tomcat.util.net.Nio2Channel(org.apache.tomcat.util.net.SocketBufferHandler)"], ["void", "org.apache.tomcat.util.net.Nio2Channel.reset(java.nio.channels.AsynchronousSocketChannel, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.Nio2Channel.free()"], ["void", "org.apache.tomcat.util.net.Nio2Channel.close()"], ["void", "org.apache.tomcat.util.net.Nio2Channel.close(boolean)"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel.isOpen()"], ["org.apache.tomcat.util.net.SocketBufferHandler", "org.apache.tomcat.util.net.Nio2Channel.getBufHandler()"], ["java.nio.channels.AsynchronousSocketChannel", "org.apache.tomcat.util.net.Nio2Channel.getIOChannel()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel.isClosing()"], ["boolean", "org.apache.tomcat.util.net.Nio2Channel.isHandshakeComplete()"], ["int", "org.apache.tomcat.util.net.Nio2Channel.handshake()"], ["java.lang.String", "org.apache.tomcat.util.net.Nio2Channel.toString()"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.write(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.Nio2Channel.write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["void", "org.apache.tomcat.util.net.Nio2Channel.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$1.run()"], ["org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor(org.apache.tomcat.util.net.AbstractEndpoint<?, java.nio.channels.AsynchronousSocketChannel>)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.run()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(java.nio.channels.AsynchronousSocketChannel, java.lang.Void)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.failed(java.lang.Throwable, java.lang.Void)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1.completed(java.lang.Integer, org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1.failed(java.lang.Throwable, org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$1.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2.completed(java.lang.Integer, java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2.failed(java.lang.Throwable, java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$2.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3.completed(java.lang.Integer, java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3.failed(java.lang.Throwable, java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$3.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.completed(java.lang.Long, java.nio.ByteBuffer[])"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.failed(java.lang.Throwable, java.nio.ByteBuffer[])"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState$1.completed(java.lang.Long, java.nio.ByteBuffer[])"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState$1.failed(java.lang.Throwable, java.nio.ByteBuffer[])"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState$1.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState$1.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState.run()"], ["org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper(org.apache.tomcat.util.net.Nio2Channel, org.apache.tomcat.util.net.Nio2Endpoint)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.setSendfileData(org.apache.tomcat.util.net.Nio2Endpoint$SendfileData)"], ["org.apache.tomcat.util.net.Nio2Endpoint$SendfileData", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.getSendfileData()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.isReadyForRead()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.isReadyForWrite()"], ["int", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.read(boolean, byte[], int, int)"], ["int", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.read(boolean, java.nio.ByteBuffer)"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.hasAsyncIO()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.needSemaphores()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.hasPerOperationTimeout()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.hasDataToRead()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.hasDataToWrite()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.isReadPending()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.isWritePending()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.awaitReadComplete(long, java.util.concurrent.TimeUnit)"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.awaitWriteComplete(long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.registerReadInterest()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.registerWriteInterest()"], ["org.apache.tomcat.util.net.SendfileDataBase", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.createSendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.processSendfile(org.apache.tomcat.util.net.SendfileDataBase)"], ["org.apache.tomcat.util.net.SSLSupport", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.getSslSupport(java.lang.String)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.doClientAuth(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["org.apache.tomcat.util.net.Nio2Endpoint$SendfileData", "org.apache.tomcat.util.net.Nio2Endpoint$SendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor", "org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor(org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>, org.apache.tomcat.util.net.SocketEvent)"], ["org.apache.tomcat.util.net.Nio2Endpoint", "org.apache.tomcat.util.net.Nio2Endpoint()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint.getDeferAccept()"], ["int", "org.apache.tomcat.util.net.Nio2Endpoint.getKeepAliveCount()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.bind()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.startInternal()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.resume()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.stopInternal()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.unbind()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.shutdownExecutor()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.startInline()"], ["void", "org.apache.tomcat.util.net.Nio2Endpoint.endInline()"], ["boolean", "org.apache.tomcat.util.net.Nio2Endpoint.isInline()"], ["org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableAdd", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableAdd(org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller, java.nio.channels.SocketChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int, org.apache.tomcat.util.net.NioBlockingSelector$KeyReference)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableAdd.run()"], ["org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableCancel", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableCancel(java.nio.channels.SelectionKey)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableCancel.run()"], ["org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableRemove", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableRemove(org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller, java.nio.channels.SocketChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableRemove.run()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.disable()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.cancelKey(java.nio.channels.SelectionKey)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.wakeup()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.cancel(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.add(org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int, org.apache.tomcat.util.net.NioBlockingSelector$KeyReference)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.remove(org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int)"], ["boolean", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.events()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.run()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.countDown(java.util.concurrent.CountDownLatch)"], ["org.apache.tomcat.util.net.NioBlockingSelector$KeyReference", "org.apache.tomcat.util.net.NioBlockingSelector$KeyReference()"], ["org.apache.tomcat.util.net.NioBlockingSelector", "org.apache.tomcat.util.net.NioBlockingSelector()"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector.open(java.lang.String, java.nio.channels.Selector)"], ["void", "org.apache.tomcat.util.net.NioBlockingSelector.close()"], ["int", "org.apache.tomcat.util.net.NioBlockingSelector.write(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, long)"], ["int", "org.apache.tomcat.util.net.NioBlockingSelector.read(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, long)"], ["void", "org.apache.tomcat.util.net.NioChannel$1.close()"], ["boolean", "org.apache.tomcat.util.net.NioChannel$1.isOpen()"], ["void", "org.apache.tomcat.util.net.NioChannel$1.reset(java.nio.channels.SocketChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)"], ["void", "org.apache.tomcat.util.net.NioChannel$1.free()"], ["void", "org.apache.tomcat.util.net.NioChannel$1.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["int", "org.apache.tomcat.util.net.NioChannel$1.read(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.NioChannel$1.read(java.nio.ByteBuffer[], int, int)"], ["int", "org.apache.tomcat.util.net.NioChannel$1.write(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.NioChannel$1.write(java.nio.ByteBuffer[], int, int)"], ["java.lang.String", "org.apache.tomcat.util.net.NioChannel$1.toString()"], ["org.apache.tomcat.util.net.NioChannel", "org.apache.tomcat.util.net.NioChannel(org.apache.tomcat.util.net.SocketBufferHandler)"], ["void", "org.apache.tomcat.util.net.NioChannel.reset(java.nio.channels.SocketChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)"], ["void", "org.apache.tomcat.util.net.NioChannel.free()"], ["boolean", "org.apache.tomcat.util.net.NioChannel.flush(boolean, java.nio.channels.Selector, long)"], ["void", "org.apache.tomcat.util.net.NioChannel.close()"], ["void", "org.apache.tomcat.util.net.NioChannel.close(boolean)"], ["boolean", "org.apache.tomcat.util.net.NioChannel.isOpen()"], ["int", "org.apache.tomcat.util.net.NioChannel.write(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.NioChannel.write(java.nio.ByteBuffer[])"], ["long", "org.apache.tomcat.util.net.NioChannel.write(java.nio.ByteBuffer[], int, int)"], ["int", "org.apache.tomcat.util.net.NioChannel.read(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.NioChannel.read(java.nio.ByteBuffer[])"], ["long", "org.apache.tomcat.util.net.NioChannel.read(java.nio.ByteBuffer[], int, int)"], ["org.apache.tomcat.util.net.SocketBufferHandler", "org.apache.tomcat.util.net.NioChannel.getBufHandler()"], ["java.nio.channels.SocketChannel", "org.apache.tomcat.util.net.NioChannel.getIOChannel()"], ["boolean", "org.apache.tomcat.util.net.NioChannel.isClosing()"], ["boolean", "org.apache.tomcat.util.net.NioChannel.isHandshakeComplete()"], ["int", "org.apache.tomcat.util.net.NioChannel.handshake(boolean, boolean)"], ["java.lang.String", "org.apache.tomcat.util.net.NioChannel.toString()"], ["int", "org.apache.tomcat.util.net.NioChannel.getOutboundRemaining()"], ["boolean", "org.apache.tomcat.util.net.NioChannel.flushOutbound()"], ["void", "org.apache.tomcat.util.net.NioChannel.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run()"], ["org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper(org.apache.tomcat.util.net.NioChannel, org.apache.tomcat.util.net.NioEndpoint)"], ["org.apache.tomcat.util.net.NioEndpoint$Poller", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getPoller()"], ["int", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.interestOps()"], ["int", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.interestOps(int)"], ["java.util.concurrent.CountDownLatch", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getReadLatch()"], ["java.util.concurrent.CountDownLatch", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getWriteLatch()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.resetReadLatch()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.resetWriteLatch()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.startReadLatch(int)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.startWriteLatch(int)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.awaitReadLatch(long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.awaitWriteLatch(long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.setSendfileData(org.apache.tomcat.util.net.NioEndpoint$SendfileData)"], ["org.apache.tomcat.util.net.NioEndpoint$SendfileData", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getSendfileData()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.updateLastWrite()"], ["long", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getLastWrite()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.updateLastRead()"], ["long", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getLastRead()"], ["boolean", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.isReadyForRead()"], ["int", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(boolean, byte[], int, int)"], ["int", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(boolean, java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.registerReadInterest()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.registerWriteInterest()"], ["org.apache.tomcat.util.net.SendfileDataBase", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.createSendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.processSendfile(org.apache.tomcat.util.net.SendfileDataBase)"], ["org.apache.tomcat.util.net.SSLSupport", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getSslSupport(java.lang.String)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doClientAuth(org.apache.tomcat.util.net.SSLSupport)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler)"], ["org.apache.tomcat.util.net.NioEndpoint$Poller", "org.apache.tomcat.util.net.NioEndpoint$Poller(org.apache.tomcat.util.net.NioEndpoint)"], ["int", "org.apache.tomcat.util.net.NioEndpoint$Poller.getKeyCount()"], ["java.nio.channels.Selector", "org.apache.tomcat.util.net.NioEndpoint$Poller.getSelector()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$Poller.add(org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, int)"], ["boolean", "org.apache.tomcat.util.net.NioEndpoint$Poller.events()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$Poller.register(org.apache.tomcat.util.net.NioChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$Poller.cancelledKey(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.NioChannel>)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$Poller.run()"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.NioEndpoint$Poller.processSendfile(java.nio.channels.SelectionKey, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper, boolean)"], ["org.apache.tomcat.util.net.NioEndpoint$PollerEvent", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent(org.apache.tomcat.util.net.NioChannel, int)"], ["void", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent.reset(org.apache.tomcat.util.net.NioChannel, int)"], ["org.apache.tomcat.util.net.NioChannel", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent.getSocket()"], ["int", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent.getInterestOps()"], ["void", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent.reset()"], ["java.lang.String", "org.apache.tomcat.util.net.NioEndpoint$PollerEvent.toString()"], ["org.apache.tomcat.util.net.NioEndpoint$SendfileData", "org.apache.tomcat.util.net.NioEndpoint$SendfileData(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.NioEndpoint$SocketProcessor", "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor(org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.NioChannel>, org.apache.tomcat.util.net.SocketEvent)"], ["org.apache.tomcat.util.net.NioEndpoint", "org.apache.tomcat.util.net.NioEndpoint()"], ["boolean", "org.apache.tomcat.util.net.NioEndpoint.setProperty(java.lang.String, java.lang.String)"], ["void", "org.apache.tomcat.util.net.NioEndpoint.setUseInheritedChannel(boolean)"], ["boolean", "org.apache.tomcat.util.net.NioEndpoint.getUseInheritedChannel()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.setPollerThreadPriority(int)"], ["int", "org.apache.tomcat.util.net.NioEndpoint.getPollerThreadPriority()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.setPollerThreadCount(int)"], ["int", "org.apache.tomcat.util.net.NioEndpoint.getPollerThreadCount()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.setSelectorTimeout(long)"], ["long", "org.apache.tomcat.util.net.NioEndpoint.getSelectorTimeout()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.setSelectorPool(org.apache.tomcat.util.net.NioSelectorPool)"], ["boolean", "org.apache.tomcat.util.net.NioEndpoint.getDeferAccept()"], ["int", "org.apache.tomcat.util.net.NioEndpoint.getKeepAliveCount()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.bind()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.startInternal()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.stopInternal()"], ["void", "org.apache.tomcat.util.net.NioEndpoint.unbind()"], ["org.apache.tomcat.util.net.NioSelectorPool", "org.apache.tomcat.util.net.NioSelectorPool()"], ["java.nio.channels.Selector", "org.apache.tomcat.util.net.NioSelectorPool.get()"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.put(java.nio.channels.Selector)"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.close()"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.open(java.lang.String)"], ["int", "org.apache.tomcat.util.net.NioSelectorPool.write(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, java.nio.channels.Selector, long)"], ["int", "org.apache.tomcat.util.net.NioSelectorPool.read(java.nio.ByteBuffer, org.apache.tomcat.util.net.NioChannel, java.nio.channels.Selector, long)"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.setMaxSelectors(int)"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.setMaxSpareSelectors(int)"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.setEnabled(boolean)"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.setSharedSelectorTimeout(long)"], ["int", "org.apache.tomcat.util.net.NioSelectorPool.getMaxSelectors()"], ["int", "org.apache.tomcat.util.net.NioSelectorPool.getMaxSpareSelectors()"], ["boolean", "org.apache.tomcat.util.net.NioSelectorPool.isEnabled()"], ["long", "org.apache.tomcat.util.net.NioSelectorPool.getSharedSelectorTimeout()"], ["java.util.concurrent.atomic.AtomicInteger", "org.apache.tomcat.util.net.NioSelectorPool.getSpare()"], ["boolean", "org.apache.tomcat.util.net.NioSelectorPool.isShared()"], ["void", "org.apache.tomcat.util.net.NioSelectorPool.setShared(boolean)"], ["org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification[]", "org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification.values()"], ["org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification", "org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification", "org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification.fromString(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfig$Type[]", "org.apache.tomcat.util.net.SSLHostConfig$Type.values()"], ["org.apache.tomcat.util.net.SSLHostConfig$Type", "org.apache.tomcat.util.net.SSLHostConfig$Type.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfig", "org.apache.tomcat.util.net.SSLHostConfig()"], ["java.lang.Long", "org.apache.tomcat.util.net.SSLHostConfig.getOpenSslConfContext()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setOpenSslConfContext(java.lang.Long)"], ["java.lang.Long", "org.apache.tomcat.util.net.SSLHostConfig.getOpenSslContext()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setOpenSslContext(java.lang.Long)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getConfigType()"], ["java.lang.String[]", "org.apache.tomcat.util.net.SSLHostConfig.getEnabledProtocols()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setEnabledProtocols(java.lang.String[])"], ["java.lang.String[]", "org.apache.tomcat.util.net.SSLHostConfig.getEnabledCiphers()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setEnabledCiphers(java.lang.String[])"], ["javax.management.ObjectName", "org.apache.tomcat.util.net.SSLHostConfig.getObjectName()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setObjectName(javax.management.ObjectName)"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.addCertificate(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["org.apache.tomcat.util.net.openssl.OpenSSLConf", "org.apache.tomcat.util.net.SSLHostConfig.getOpenSslConf()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setOpenSslConf(org.apache.tomcat.util.net.openssl.OpenSSLConf)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeyPassword()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeyPassword(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateRevocationListFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateRevocationListFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateVerification(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfig$CertificateVerification", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateVerification()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateVerificationAsString(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateVerificationAsString()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateVerificationDepth(int)"], ["int", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateVerificationDepth()"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.isCertificateVerificationDepthConfigured()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCiphers(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCiphers()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setHonorCipherOrder(boolean)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.getHonorCipherOrder()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setHostName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getHostName()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setProtocols(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setSessionCacheSize(int)"], ["int", "org.apache.tomcat.util.net.SSLHostConfig.getSessionCacheSize()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setSessionTimeout(int)"], ["int", "org.apache.tomcat.util.net.SSLHostConfig.getSessionTimeout()"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeyAlias()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeyAlias(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeystoreFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeystoreFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeystorePassword()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeystorePassword(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeystoreProvider()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeystoreProvider(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeystoreType()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeystoreType(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setKeyManagerAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getKeyManagerAlgorithm()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setRevocationEnabled(boolean)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.getRevocationEnabled()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setSslProtocol(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTrustManagerClassName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTrustManagerClassName()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTruststoreAlgorithm(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTruststoreAlgorithm()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTruststoreFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTruststoreFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTruststorePassword(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTruststorePassword()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTruststoreProvider(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTruststoreProvider()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTruststoreType(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getTruststoreType()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setTrustStore(java.security.KeyStore)"], ["java.security.KeyStore", "org.apache.tomcat.util.net.SSLHostConfig.getTruststore()"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateChainFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateChainFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateKeyFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateKeyFile(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCertificateRevocationListPath(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCertificateRevocationListPath()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCaCertificateFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCaCertificateFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setCaCertificatePath(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.getCaCertificatePath()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setDisableCompression(boolean)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.getDisableCompression()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setDisableSessionTickets(boolean)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.getDisableSessionTickets()"], ["void", "org.apache.tomcat.util.net.SSLHostConfig.setInsecureRenegotiation(boolean)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfig.getInsecureRenegotiation()"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfig.adjustRelativePath(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate$StoreType[]", "org.apache.tomcat.util.net.SSLHostConfigCertificate$StoreType.values()"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate$StoreType", "org.apache.tomcat.util.net.SSLHostConfigCertificate$StoreType.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate$Type[]", "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type.values()"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate$Type", "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type.valueOf(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type.isCompatibleWith(org.apache.tomcat.util.net.openssl.ciphers.Authentication)"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate", "org.apache.tomcat.util.net.SSLHostConfigCertificate()"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate", "org.apache.tomcat.util.net.SSLHostConfigCertificate(org.apache.tomcat.util.net.SSLHostConfig, org.apache.tomcat.util.net.SSLHostConfigCertificate$Type)"], ["org.apache.tomcat.util.net.SSLContext", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getSslContext()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setSslContext(org.apache.tomcat.util.net.SSLContext)"], ["org.apache.tomcat.util.net.SSLHostConfig", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getSSLHostConfig()"], ["javax.management.ObjectName", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getObjectName()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setObjectName(javax.management.ObjectName)"], ["org.apache.tomcat.util.net.SSLHostConfigCertificate$Type", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getType()"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeyPassword()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeyPassword(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeyAlias(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeyAlias()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystoreFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystoreFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystorePassword(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystorePassword()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystoreProvider(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystoreProvider()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystoreType(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystoreType()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystore(java.security.KeyStore)"], ["java.security.KeyStore", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystore()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeyManager(javax.net.ssl.X509KeyManager)"], ["javax.net.ssl.X509KeyManager", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeyManager()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateChainFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateChainFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateFile()"], ["void", "org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeyFile(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeyFile()"], ["org.apache.tomcat.util.net.SSLImplementation", "org.apache.tomcat.util.net.SSLImplementation()"], ["org.apache.tomcat.util.net.SSLImplementation", "org.apache.tomcat.util.net.SSLImplementation.getInstance(java.lang.String)"], ["default", "org.apache.tomcat.util.net.SSLSupport.java.security.cert.X509Certificate[] getLocalCertificateChain()"], ["org.apache.tomcat.util.net.SSLContext", "org.apache.tomcat.util.net.SSLUtilBase.createSSLContext(java.util.List<java.lang.String>)"], ["void", "org.apache.tomcat.util.net.SSLUtilBase.configureSessionContext(javax.net.ssl.SSLSessionContext)"], ["javax.net.ssl.KeyManager[]", "org.apache.tomcat.util.net.SSLUtilBase.getKeyManagers()"], ["java.lang.String[]", "org.apache.tomcat.util.net.SSLUtilBase.getEnabledProtocols()"], ["java.lang.String[]", "org.apache.tomcat.util.net.SSLUtilBase.getEnabledCiphers()"], ["javax.net.ssl.TrustManager[]", "org.apache.tomcat.util.net.SSLUtilBase.getTrustManagers()"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$1.completed(java.lang.Integer, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$1.failed(java.lang.Throwable, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$1.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$2.completed(java.lang.Integer, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$2.failed(java.lang.Throwable, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$2.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$3.completed(java.lang.Integer, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$3.failed(java.lang.Throwable, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$3.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$4.completed(java.lang.Integer, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$4.failed(java.lang.Throwable, A)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$4.completed(java.lang.Object, java.lang.Object)"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.cancel(boolean)"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.isCancelled()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.isDone()"], ["java.lang.Boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.get()"], ["java.lang.Boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureFlush.get()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.cancel(boolean)"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.isCancelled()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.isDone()"], ["java.lang.Integer", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.get()"], ["java.lang.Integer", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.get()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.cancel(boolean)"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.isCancelled()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.isDone()"], ["java.lang.Integer", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.get()"], ["java.lang.Integer", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.get(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.net.SecureNio2Channel$FutureWrite.get()"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler.completed(java.lang.Integer, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler.failed(java.lang.Throwable, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeReadCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler.completed(java.lang.Integer, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler.failed(java.lang.Throwable, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel$HandshakeWriteCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["org.apache.tomcat.util.net.SecureNio2Channel$OverflowState[]", "org.apache.tomcat.util.net.SecureNio2Channel$OverflowState.values()"], ["org.apache.tomcat.util.net.SecureNio2Channel$OverflowState", "org.apache.tomcat.util.net.SecureNio2Channel$OverflowState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SecureNio2Channel", "org.apache.tomcat.util.net.SecureNio2Channel(org.apache.tomcat.util.net.SocketBufferHandler, org.apache.tomcat.util.net.Nio2Endpoint)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel.reset(java.nio.channels.AsynchronousSocketChannel, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>)"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel.free()"], ["int", "org.apache.tomcat.util.net.SecureNio2Channel.handshake()"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel.rehandshake()"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel.close()"], ["void", "org.apache.tomcat.util.net.SecureNio2Channel.close(boolean)"], ["<A> void", "org.apache.tomcat.util.net.SecureNio2Channel.read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.SecureNio2Channel.read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.SecureNio2Channel.write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>)"], ["<A> void", "org.apache.tomcat.util.net.SecureNio2Channel.write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel.isHandshakeComplete()"], ["boolean", "org.apache.tomcat.util.net.SecureNio2Channel.isClosing()"], ["javax.net.ssl.SSLEngine", "org.apache.tomcat.util.net.SecureNio2Channel.getSslEngine()"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.net.SecureNio2Channel.getEmptyBuf()"], ["org.apache.tomcat.util.net.SecureNioChannel$OverflowState[]", "org.apache.tomcat.util.net.SecureNioChannel$OverflowState.values()"], ["org.apache.tomcat.util.net.SecureNioChannel$OverflowState", "org.apache.tomcat.util.net.SecureNioChannel$OverflowState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SecureNioChannel", "org.apache.tomcat.util.net.SecureNioChannel(org.apache.tomcat.util.net.SocketBufferHandler, org.apache.tomcat.util.net.NioSelectorPool, org.apache.tomcat.util.net.NioEndpoint)"], ["void", "org.apache.tomcat.util.net.SecureNioChannel.reset(java.nio.channels.SocketChannel, org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)"], ["void", "org.apache.tomcat.util.net.SecureNioChannel.free()"], ["boolean", "org.apache.tomcat.util.net.SecureNioChannel.flush(boolean, java.nio.channels.Selector, long)"], ["int", "org.apache.tomcat.util.net.SecureNioChannel.handshake(boolean, boolean)"], ["void", "org.apache.tomcat.util.net.SecureNioChannel.rehandshake(long)"], ["void", "org.apache.tomcat.util.net.SecureNioChannel.close()"], ["void", "org.apache.tomcat.util.net.SecureNioChannel.close(boolean)"], ["int", "org.apache.tomcat.util.net.SecureNioChannel.read(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.SecureNioChannel.read(java.nio.ByteBuffer[], int, int)"], ["int", "org.apache.tomcat.util.net.SecureNioChannel.write(java.nio.ByteBuffer)"], ["long", "org.apache.tomcat.util.net.SecureNioChannel.write(java.nio.ByteBuffer[], int, int)"], ["int", "org.apache.tomcat.util.net.SecureNioChannel.getOutboundRemaining()"], ["boolean", "org.apache.tomcat.util.net.SecureNioChannel.flushOutbound()"], ["boolean", "org.apache.tomcat.util.net.SecureNioChannel.isHandshakeComplete()"], ["boolean", "org.apache.tomcat.util.net.SecureNioChannel.isClosing()"], ["javax.net.ssl.SSLEngine", "org.apache.tomcat.util.net.SecureNioChannel.getSslEngine()"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.net.SecureNioChannel.getEmptyBuf()"], ["org.apache.tomcat.util.net.SendfileDataBase", "org.apache.tomcat.util.net.SendfileDataBase(java.lang.String, long, long)"], ["org.apache.tomcat.util.net.SendfileKeepAliveState[]", "org.apache.tomcat.util.net.SendfileKeepAliveState.values()"], ["org.apache.tomcat.util.net.SendfileKeepAliveState", "org.apache.tomcat.util.net.SendfileKeepAliveState.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SendfileState[]", "org.apache.tomcat.util.net.SendfileState.values()"], ["org.apache.tomcat.util.net.SendfileState", "org.apache.tomcat.util.net.SendfileState.valueOf(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler$1.expand(int)"], ["org.apache.tomcat.util.net.SocketBufferHandler", "org.apache.tomcat.util.net.SocketBufferHandler(int, int, boolean)"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.configureReadBufferForWrite()"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.configureReadBufferForRead()"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.net.SocketBufferHandler.getReadBuffer()"], ["boolean", "org.apache.tomcat.util.net.SocketBufferHandler.isReadBufferEmpty()"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.unReadReadBuffer(java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.configureWriteBufferForWrite()"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.configureWriteBufferForRead()"], ["boolean", "org.apache.tomcat.util.net.SocketBufferHandler.isWriteBufferWritable()"], ["java.nio.ByteBuffer", "org.apache.tomcat.util.net.SocketBufferHandler.getWriteBuffer()"], ["boolean", "org.apache.tomcat.util.net.SocketBufferHandler.isWriteBufferEmpty()"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.reset()"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.expand(int)"], ["void", "org.apache.tomcat.util.net.SocketBufferHandler.free()"], ["org.apache.tomcat.util.net.SocketEvent[]", "org.apache.tomcat.util.net.SocketEvent.values()"], ["org.apache.tomcat.util.net.SocketEvent", "org.apache.tomcat.util.net.SocketEvent.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SocketProcessorBase", "org.apache.tomcat.util.net.SocketProcessorBase(org.apache.tomcat.util.net.SocketWrapperBase<S>, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.tomcat.util.net.SocketProcessorBase.reset(org.apache.tomcat.util.net.SocketWrapperBase<S>, org.apache.tomcat.util.net.SocketEvent)"], ["void", "org.apache.tomcat.util.net.SocketProcessorBase.run()"], ["org.apache.tomcat.util.net.SocketProperties", "org.apache.tomcat.util.net.SocketProperties()"], ["void", "org.apache.tomcat.util.net.SocketProperties.setProperties(java.net.Socket)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setProperties(java.net.ServerSocket)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setProperties(java.nio.channels.AsynchronousSocketChannel)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setProperties(java.nio.channels.AsynchronousServerSocketChannel)"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getDirectBuffer()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getDirectSslBuffer()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getOoBInline()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getPerformanceBandwidth()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getPerformanceConnectionTime()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getPerformanceLatency()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getRxBufSize()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getSoKeepAlive()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getSoLingerOn()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getSoLingerTime()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getSoReuseAddress()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getSoTimeout()"], ["boolean", "org.apache.tomcat.util.net.SocketProperties.getTcpNoDelay()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getTxBufSize()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getBufferPool()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getBufferPoolSize()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getEventCache()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getAppReadBufSize()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getAppWriteBufSize()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getProcessorCache()"], ["long", "org.apache.tomcat.util.net.SocketProperties.getTimeoutInterval()"], ["int", "org.apache.tomcat.util.net.SocketProperties.getDirectBufferPool()"], ["void", "org.apache.tomcat.util.net.SocketProperties.setPerformanceConnectionTime(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setTxBufSize(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setTcpNoDelay(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setSoTimeout(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setSoReuseAddress(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setSoLingerTime(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setSoKeepAlive(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setRxBufSize(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setPerformanceLatency(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setPerformanceBandwidth(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setOoBInline(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setDirectBuffer(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setDirectSslBuffer(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setSoLingerOn(boolean)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setBufferPool(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setBufferPoolSize(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setEventCache(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setAppReadBufSize(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setAppWriteBufSize(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setProcessorCache(int)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setTimeoutInterval(long)"], ["void", "org.apache.tomcat.util.net.SocketProperties.setDirectBufferPool(int)"], ["int", "org.apache.tomcat.util.net.SocketProperties.getUnlockTimeout()"], ["void", "org.apache.tomcat.util.net.SocketProperties.setUnlockTimeout(int)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.tomcat.util.net.SocketWrapperBase$1.callHandler(org.apache.tomcat.util.net.SocketWrapperBase$CompletionState, java.nio.ByteBuffer[], int, int)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.tomcat.util.net.SocketWrapperBase$2.callHandler(org.apache.tomcat.util.net.SocketWrapperBase$CompletionState, java.nio.ByteBuffer[], int, int)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.tomcat.util.net.SocketWrapperBase$3.callHandler(org.apache.tomcat.util.net.SocketWrapperBase$CompletionState, java.nio.ByteBuffer[], int, int)"], ["org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode[]", "org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode.values()"], ["org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode", "org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall[]", "org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall.values()"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall", "org.apache.tomcat.util.net.SocketWrapperBase$CompletionHandlerCall.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionState[]", "org.apache.tomcat.util.net.SocketWrapperBase$CompletionState.values()"], ["org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase$CompletionState.valueOf(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase$VectoredIOCompletionHandler.completed(java.lang.Long, org.apache.tomcat.util.net.SocketWrapperBase<E>.OperationState<A>)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase$VectoredIOCompletionHandler.failed(java.lang.Throwable, org.apache.tomcat.util.net.SocketWrapperBase<E>.OperationState<A>)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase$VectoredIOCompletionHandler.failed(java.lang.Throwable, java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase$VectoredIOCompletionHandler.completed(java.lang.Object, java.lang.Object)"], ["org.apache.tomcat.util.net.SocketWrapperBase", "org.apache.tomcat.util.net.SocketWrapperBase(E, org.apache.tomcat.util.net.AbstractEndpoint<E, ?>)"], ["E", "org.apache.tomcat.util.net.SocketWrapperBase.getSocket()"], ["java.lang.Object", "org.apache.tomcat.util.net.SocketWrapperBase.getCurrentProcessor()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setCurrentProcessor(java.lang.Object)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.execute(java.lang.Runnable)"], ["java.io.IOException", "org.apache.tomcat.util.net.SocketWrapperBase.getError()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setError(java.io.IOException)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.checkError()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isUpgraded()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setUpgraded(boolean)"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isSecure()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setSecure(boolean)"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.getNegotiatedProtocol()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setNegotiatedProtocol(java.lang.String)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setReadTimeout(long)"], ["long", "org.apache.tomcat.util.net.SocketWrapperBase.getReadTimeout()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setWriteTimeout(long)"], ["long", "org.apache.tomcat.util.net.SocketWrapperBase.getWriteTimeout()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.setKeepAliveLeft(int)"], ["int", "org.apache.tomcat.util.net.SocketWrapperBase.decrementKeepAlive()"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.getRemoteHost()"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.getRemoteAddr()"], ["int", "org.apache.tomcat.util.net.SocketWrapperBase.getRemotePort()"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.getLocalName()"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.getLocalAddr()"], ["int", "org.apache.tomcat.util.net.SocketWrapperBase.getLocalPort()"], ["org.apache.tomcat.util.net.SocketBufferHandler", "org.apache.tomcat.util.net.SocketWrapperBase.getSocketBufferHandler()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.hasDataToRead()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.hasDataToWrite()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isReadyForWrite()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.canWrite()"], ["java.lang.String", "org.apache.tomcat.util.net.SocketWrapperBase.toString()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.unRead(java.nio.ByteBuffer)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.close()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isClosed()"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.write(boolean, byte[], int, int)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.write(boolean, java.nio.ByteBuffer)"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.flush(boolean)"], ["void", "org.apache.tomcat.util.net.SocketWrapperBase.processSocket(org.apache.tomcat.util.net.SocketEvent, boolean)"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.hasAsyncIO()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.needSemaphores()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.hasPerOperationTimeout()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isReadPending()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.isWritePending()"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.awaitReadComplete(long, java.util.concurrent.TimeUnit)"], ["boolean", "org.apache.tomcat.util.net.SocketWrapperBase.awaitWriteComplete(long, java.util.concurrent.TimeUnit)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.read(long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.read(org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.read(java.nio.ByteBuffer[], int, int, org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.write(long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.write(org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...)"], ["<A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState", "org.apache.tomcat.util.net.SocketWrapperBase.write(java.nio.ByteBuffer[], int, int, org.apache.tomcat.util.net.SocketWrapperBase$BlockingMode, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>)"], ["org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult[]", "org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult.values()"], ["org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult", "org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.TLSClientHelloExtractor", "org.apache.tomcat.util.net.TLSClientHelloExtractor(java.nio.ByteBuffer)"], ["org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult", "org.apache.tomcat.util.net.TLSClientHelloExtractor.getResult()"], ["java.lang.String", "org.apache.tomcat.util.net.TLSClientHelloExtractor.getSNIValue()"], ["org.apache.tomcat.util.net.WriteBuffer", "org.apache.tomcat.util.net.WriteBuffer(int)"], ["void", "org.apache.tomcat.util.net.WriteBuffer.add(java.nio.ByteBuffer)"], ["boolean", "org.apache.tomcat.util.net.WriteBuffer.isEmpty()"], ["boolean", "org.apache.tomcat.util.net.WriteBuffer.write(org.apache.tomcat.util.net.WriteBuffer$Sink, boolean)"], ["org.apache.tomcat.util.net.jsse.JSSEImplementation", "org.apache.tomcat.util.net.jsse.JSSEImplementation()"], ["org.apache.tomcat.util.net.SSLSupport", "org.apache.tomcat.util.net.jsse.JSSEImplementation.getSSLSupport(javax.net.ssl.SSLSession)"], ["org.apache.tomcat.util.net.SSLUtil", "org.apache.tomcat.util.net.jsse.JSSEImplementation.getSSLUtil(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["boolean", "org.apache.tomcat.util.net.jsse.JSSEImplementation.isAlpnSupported()"], ["org.apache.tomcat.util.net.jsse.JSSEKeyManager", "org.apache.tomcat.util.net.jsse.JSSEKeyManager(javax.net.ssl.X509KeyManager, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.getCertificateChain(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.getClientAliases(java.lang.String, java.security.Principal[])"], ["java.lang.String[]", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.getServerAliases(java.lang.String, java.security.Principal[])"], ["java.security.PrivateKey", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.getPrivateKey(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSEKeyManager.chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)"], ["void", "org.apache.tomcat.util.net.jsse.JSSESSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)"], ["void", "org.apache.tomcat.util.net.jsse.JSSESSLContext.destroy()"], ["javax.net.ssl.SSLSessionContext", "org.apache.tomcat.util.net.jsse.JSSESSLContext.getServerSessionContext()"], ["javax.net.ssl.SSLEngine", "org.apache.tomcat.util.net.jsse.JSSESSLContext.createSSLEngine()"], ["javax.net.ssl.SSLServerSocketFactory", "org.apache.tomcat.util.net.jsse.JSSESSLContext.getServerSocketFactory()"], ["javax.net.ssl.SSLParameters", "org.apache.tomcat.util.net.jsse.JSSESSLContext.getSupportedSSLParameters()"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.jsse.JSSESSLContext.getCertificateChain(java.lang.String)"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.jsse.JSSESSLContext.getAcceptedIssuers()"], ["org.apache.tomcat.util.net.jsse.JSSESupport", "org.apache.tomcat.util.net.jsse.JSSESupport(javax.net.ssl.SSLSession)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSESupport.getCipherSuite()"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.jsse.JSSESupport.getLocalCertificateChain()"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.jsse.JSSESupport.getPeerCertificateChain()"], ["java.lang.Integer", "org.apache.tomcat.util.net.jsse.JSSESupport.getKeySize()"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSESupport.getSessionId()"], ["void", "org.apache.tomcat.util.net.jsse.JSSESupport.setSession(javax.net.ssl.SSLSession)"], ["void", "org.apache.tomcat.util.net.jsse.JSSESupport.invalidateSession()"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.JSSESupport.getProtocol()"], ["org.apache.tomcat.util.net.jsse.JSSEUtil", "org.apache.tomcat.util.net.jsse.JSSEUtil(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["org.apache.tomcat.util.net.jsse.JSSEUtil", "org.apache.tomcat.util.net.jsse.JSSEUtil(org.apache.tomcat.util.net.SSLHostConfigCertificate, boolean)"], ["org.apache.tomcat.util.net.SSLContext", "org.apache.tomcat.util.net.jsse.JSSEUtil.createSSLContextInternal(java.util.List<java.lang.String>)"], ["org.apache.tomcat.util.net.jsse.PEMFile$Format[]", "org.apache.tomcat.util.net.jsse.PEMFile$Format.values()"], ["org.apache.tomcat.util.net.jsse.PEMFile$Format", "org.apache.tomcat.util.net.jsse.PEMFile$Format.valueOf(java.lang.String)"], ["java.security.cert.X509Certificate", "org.apache.tomcat.util.net.jsse.PEMFile$Part.toCertificate()"], ["java.security.PrivateKey", "org.apache.tomcat.util.net.jsse.PEMFile$Part.toPrivateKey(java.lang.String, java.lang.String, org.apache.tomcat.util.net.jsse.PEMFile$Format)"], ["java.lang.String", "org.apache.tomcat.util.net.jsse.PEMFile.toPEM(java.security.cert.X509Certificate)"], ["java.security.PrivateKey", "org.apache.tomcat.util.net.jsse.PEMFile.getPrivateKey()"], ["org.apache.tomcat.util.net.jsse.PEMFile", "org.apache.tomcat.util.net.jsse.PEMFile(java.lang.String)"], ["org.apache.tomcat.util.net.jsse.PEMFile", "org.apache.tomcat.util.net.jsse.PEMFile(java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.net.jsse.PEMFile", "org.apache.tomcat.util.net.jsse.PEMFile(java.lang.String, java.lang.String, java.lang.String)"], ["org.apache.tomcat.util.net.openssl.OpenSSLConf", "org.apache.tomcat.util.net.openssl.OpenSSLConf()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLConf.addCmd(org.apache.tomcat.util.net.openssl.OpenSSLConfCmd)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLConf.check(long)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLConf.apply(long, long)"], ["org.apache.tomcat.util.net.openssl.OpenSSLConfCmd", "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd.getName()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd.setName(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd.getValue()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd.setValue(java.lang.String)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLContext$1.verify(long, byte[][], java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getEnabledProtocol()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLContext.setEnabledProtocol(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.OpenSSLContext", "org.apache.tomcat.util.net.openssl.OpenSSLContext(org.apache.tomcat.util.net.SSLHostConfigCertificate, java.util.List<java.lang.String>)"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLContext.void destroy()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLContext.void init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLContext.addCertificate(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["javax.net.ssl.SSLSessionContext", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getServerSessionContext()"], ["javax.net.ssl.SSLEngine", "org.apache.tomcat.util.net.openssl.OpenSSLContext.createSSLEngine()"], ["javax.net.ssl.SSLServerSocketFactory", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getServerSocketFactory()"], ["javax.net.ssl.SSLParameters", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getSupportedSSLParameters()"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getCertificateChain(java.lang.String)"], ["java.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.openssl.OpenSSLContext.getAcceptedIssuers()"], ["org.apache.tomcat.util.net.openssl.OpenSSLEngine$Accepted[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$Accepted.values()"], ["org.apache.tomcat.util.net.openssl.OpenSSLEngine$Accepted", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$Accepted.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.OpenSSLEngine$ClientAuthMode[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$ClientAuthMode.values()"], ["org.apache.tomcat.util.net.openssl.OpenSSLEngine$ClientAuthMode", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$ClientAuthMode.valueOf(java.lang.String)"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getId()"], ["javax.net.ssl.SSLSessionContext", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getSessionContext()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getCreationTime()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getLastAccessedTime()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.invalidate()"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.isValid()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.putValue(java.lang.String, java.lang.Object)"], ["java.lang.Object", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getValue(java.lang.String)"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.removeValue(java.lang.String)"], ["java.lang.String[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getValueNames()"], ["java.security.cert.Certificate[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPeerCertificates()"], ["java.security.cert.Certificate[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getLocalCertificates()"], ["javax.security.cert.X509Certificate[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPeerCertificateChain()"], ["java.security.Principal", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPeerPrincipal()"], ["java.security.Principal", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getLocalPrincipal()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getCipherSuite()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getProtocol()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPeerHost()"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPeerPort()"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getPacketBufferSize()"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getApplicationBufferSize()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getNegotiatedProtocol()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void shutdown()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)"], ["java.lang.Runnable", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getDelegatedTask()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void closeInbound()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.boolean isInboundDone()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void closeOutbound()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.boolean isOutboundDone()"], ["java.lang.String[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getSupportedCipherSuites()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.java.lang.String[] getEnabledCipherSuites()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void setEnabledCipherSuites(java.lang.String[])"], ["java.lang.String[]", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getSupportedProtocols()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.java.lang.String[] getEnabledProtocols()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void setEnabledProtocols(java.lang.String[])"], ["javax.net.ssl.SSLSession", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getSession()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.void beginHandshake()"], ["synchronized", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.setUseClientMode(boolean)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getUseClientMode()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.setNeedClientAuth(boolean)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getNeedClientAuth()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.setWantClientAuth(boolean)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getWantClientAuth()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.setEnableSessionCreation(boolean)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLEngine.getEnableSessionCreation()"], ["org.apache.tomcat.util.net.openssl.OpenSSLImplementation", "org.apache.tomcat.util.net.openssl.OpenSSLImplementation()"], ["org.apache.tomcat.util.net.SSLSupport", "org.apache.tomcat.util.net.openssl.OpenSSLImplementation.getSSLSupport(javax.net.ssl.SSLSession)"], ["org.apache.tomcat.util.net.SSLUtil", "org.apache.tomcat.util.net.openssl.OpenSSLImplementation.getSSLUtil(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLImplementation.isAlpnSupported()"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext$EmptyEnumeration.hasMoreElements()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext$EmptyEnumeration.nextElement()"], ["java.lang.Object", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext$EmptyEnumeration.nextElement()"], ["javax.net.ssl.SSLSession", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.getSession(byte[])"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.setTicketKeys(byte[])"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.setSessionCacheEnabled(boolean)"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.isSessionCacheEnabled()"], ["org.apache.tomcat.util.net.openssl.OpenSSLSessionStats", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.stats()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.setSessionTimeout(int)"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.getSessionTimeout()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.setSessionCacheSize(int)"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.getSessionCacheSize()"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext.setSessionIdContext(byte[])"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.number()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.connect()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.connectGood()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.connectRenegotiate()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.accept()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.acceptGood()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.acceptRenegotiate()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.hits()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.cbHits()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.misses()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.timeouts()"], ["long", "org.apache.tomcat.util.net.openssl.OpenSSLSessionStats.cacheFull()"], ["org.apache.tomcat.util.net.openssl.OpenSSLUtil", "org.apache.tomcat.util.net.openssl.OpenSSLUtil(org.apache.tomcat.util.net.SSLHostConfigCertificate)"], ["org.apache.tomcat.util.net.SSLContext", "org.apache.tomcat.util.net.openssl.OpenSSLUtil.createSSLContextInternal(java.util.List<java.lang.String>)"], ["javax.net.ssl.X509KeyManager", "org.apache.tomcat.util.net.openssl.OpenSSLUtil.chooseKeyManager(javax.net.ssl.KeyManager[])"], ["javax.net.ssl.KeyManager[]", "org.apache.tomcat.util.net.openssl.OpenSSLUtil.getKeyManagers()"], ["org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate(byte[])"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.checkValidity()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.checkValidity(java.util.Date)"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getVersion()"], ["java.math.BigInteger", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSerialNumber()"], ["java.security.Principal", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getIssuerDN()"], ["java.security.Principal", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSubjectDN()"], ["java.util.Date", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getNotBefore()"], ["java.util.Date", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getNotAfter()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getTBSCertificate()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSignature()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSigAlgName()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSigAlgOID()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSigAlgParams()"], ["boolean[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getIssuerUniqueID()"], ["boolean[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getSubjectUniqueID()"], ["boolean[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getKeyUsage()"], ["int", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getBasicConstraints()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getEncoded()"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.verify(java.security.PublicKey)"], ["void", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.verify(java.security.PublicKey, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.toString()"], ["java.security.PublicKey", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getPublicKey()"], ["boolean", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.hasUnsupportedCriticalExtension()"], ["byte[]", "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate.getExtensionValue(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.Authentication[]", "org.apache.tomcat.util.net.openssl.ciphers.Authentication.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.Authentication", "org.apache.tomcat.util.net.openssl.ciphers.Authentication.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.Cipher[]", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.Cipher", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.valueOf(java.lang.String)"], ["int", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getId()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getOpenSSLAlias()"], ["org.apache.tomcat.util.net.openssl.ciphers.KeyExchange", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getKx()"], ["org.apache.tomcat.util.net.openssl.ciphers.Authentication", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getAu()"], ["org.apache.tomcat.util.net.openssl.ciphers.Encryption", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getEnc()"], ["org.apache.tomcat.util.net.openssl.ciphers.MessageDigest", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getMac()"], ["org.apache.tomcat.util.net.openssl.ciphers.Protocol", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getProtocol()"], ["boolean", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.isExport()"], ["org.apache.tomcat.util.net.openssl.ciphers.EncryptionLevel", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getLevel()"], ["boolean", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.isFipsCompatible()"], ["int", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getStrength_bits()"], ["int", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.getAlg_bits()"], ["org.apache.tomcat.util.net.openssl.ciphers.Cipher", "org.apache.tomcat.util.net.openssl.ciphers.Cipher.valueOf(int)"], ["org.apache.tomcat.util.net.openssl.ciphers.Encryption[]", "org.apache.tomcat.util.net.openssl.ciphers.Encryption.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.Encryption", "org.apache.tomcat.util.net.openssl.ciphers.Encryption.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.EncryptionLevel[]", "org.apache.tomcat.util.net.openssl.ciphers.EncryptionLevel.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.EncryptionLevel", "org.apache.tomcat.util.net.openssl.ciphers.EncryptionLevel.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.KeyExchange[]", "org.apache.tomcat.util.net.openssl.ciphers.KeyExchange.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.KeyExchange", "org.apache.tomcat.util.net.openssl.ciphers.KeyExchange.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.MessageDigest[]", "org.apache.tomcat.util.net.openssl.ciphers.MessageDigest.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.MessageDigest", "org.apache.tomcat.util.net.openssl.ciphers.MessageDigest.valueOf(java.lang.String)"], ["org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser", "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser()"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser.jsseToOpenSSL(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser.openSSLToJsse(java.lang.String)"], ["void", "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser.usage()"], ["void", "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser.main(java.lang.String[])"], ["org.apache.tomcat.util.net.openssl.ciphers.Protocol[]", "org.apache.tomcat.util.net.openssl.ciphers.Protocol.values()"], ["org.apache.tomcat.util.net.openssl.ciphers.Protocol", "org.apache.tomcat.util.net.openssl.ciphers.Protocol.valueOf(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.res.StringManager.getString(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.res.StringManager.getString(java.lang.String, java.lang.Object...)"], ["java.util.Locale", "org.apache.tomcat.util.res.StringManager.getLocale()"], ["org.apache.tomcat.util.res.StringManager", "org.apache.tomcat.util.res.StringManager.getManager(java.lang.Class<?>)"], ["org.apache.tomcat.util.res.StringManager", "org.apache.tomcat.util.res.StringManager.getManager(java.lang.String)"], ["synchronized", "org.apache.tomcat.util.res.StringManager.org.apache.tomcat.util.res.StringManager getManager(java.lang.String, java.util.Locale)"], ["org.apache.tomcat.util.res.StringManager", "org.apache.tomcat.util.res.StringManager.getManager(java.lang.String, java.util.Enumeration<java.util.Locale>)"], ["org.apache.tomcat.util.scan.AbstractInputStreamJar", "org.apache.tomcat.util.scan.AbstractInputStreamJar(java.net.URL)"], ["java.net.URL", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getJarFileURL()"], ["void", "org.apache.tomcat.util.scan.AbstractInputStreamJar.nextEntry()"], ["java.lang.String", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getEntryName()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getEntryInputStream()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getInputStream(java.lang.String)"], ["long", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getLastModified(java.lang.String)"], ["boolean", "org.apache.tomcat.util.scan.AbstractInputStreamJar.exists(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getURL(java.lang.String)"], ["java.util.jar.Manifest", "org.apache.tomcat.util.scan.AbstractInputStreamJar.getManifest()"], ["void", "org.apache.tomcat.util.scan.AbstractInputStreamJar.reset()"], ["org.apache.tomcat.util.scan.Constants", "org.apache.tomcat.util.scan.Constants()"], ["org.apache.tomcat.Jar", "org.apache.tomcat.util.scan.JarFactory.newInstance(java.net.URL)"], ["java.net.URL", "org.apache.tomcat.util.scan.JarFactory.getJarEntryURL(java.net.URL, java.lang.String)"], ["org.apache.tomcat.util.scan.JarFileUrlJar", "org.apache.tomcat.util.scan.JarFileUrlJar(java.net.URL, boolean)"], ["java.net.URL", "org.apache.tomcat.util.scan.JarFileUrlJar.getJarFileURL()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.JarFileUrlJar.getInputStream(java.lang.String)"], ["long", "org.apache.tomcat.util.scan.JarFileUrlJar.getLastModified(java.lang.String)"], ["boolean", "org.apache.tomcat.util.scan.JarFileUrlJar.exists(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.scan.JarFileUrlJar.getURL(java.lang.String)"], ["void", "org.apache.tomcat.util.scan.JarFileUrlJar.close()"], ["void", "org.apache.tomcat.util.scan.JarFileUrlJar.nextEntry()"], ["java.lang.String", "org.apache.tomcat.util.scan.JarFileUrlJar.getEntryName()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.JarFileUrlJar.getEntryInputStream()"], ["java.util.jar.Manifest", "org.apache.tomcat.util.scan.JarFileUrlJar.getManifest()"], ["void", "org.apache.tomcat.util.scan.JarFileUrlJar.reset()"], ["org.apache.tomcat.util.scan.JarFileUrlNestedJar", "org.apache.tomcat.util.scan.JarFileUrlNestedJar(java.net.URL)"], ["void", "org.apache.tomcat.util.scan.JarFileUrlNestedJar.close()"], ["org.apache.tomcat.util.scan.NonClosingJarInputStream", "org.apache.tomcat.util.scan.NonClosingJarInputStream(java.io.InputStream, boolean)"], ["org.apache.tomcat.util.scan.NonClosingJarInputStream", "org.apache.tomcat.util.scan.NonClosingJarInputStream(java.io.InputStream)"], ["void", "org.apache.tomcat.util.scan.NonClosingJarInputStream.close()"], ["void", "org.apache.tomcat.util.scan.NonClosingJarInputStream.reallyClose()"], ["org.apache.tomcat.util.scan.ReferenceCountedJar", "org.apache.tomcat.util.scan.ReferenceCountedJar(java.net.URL)"], ["synchronized", "org.apache.tomcat.util.scan.ReferenceCountedJar.void close()"], ["java.net.URL", "org.apache.tomcat.util.scan.ReferenceCountedJar.getJarFileURL()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.ReferenceCountedJar.getInputStream(java.lang.String)"], ["long", "org.apache.tomcat.util.scan.ReferenceCountedJar.getLastModified(java.lang.String)"], ["boolean", "org.apache.tomcat.util.scan.ReferenceCountedJar.exists(java.lang.String)"], ["void", "org.apache.tomcat.util.scan.ReferenceCountedJar.nextEntry()"], ["java.lang.String", "org.apache.tomcat.util.scan.ReferenceCountedJar.getEntryName()"], ["java.io.InputStream", "org.apache.tomcat.util.scan.ReferenceCountedJar.getEntryInputStream()"], ["java.lang.String", "org.apache.tomcat.util.scan.ReferenceCountedJar.getURL(java.lang.String)"], ["java.util.jar.Manifest", "org.apache.tomcat.util.scan.ReferenceCountedJar.getManifest()"], ["void", "org.apache.tomcat.util.scan.ReferenceCountedJar.reset()"], ["org.apache.tomcat.util.scan.StandardJarScanFilter", "org.apache.tomcat.util.scan.StandardJarScanFilter()"], ["java.lang.String", "org.apache.tomcat.util.scan.StandardJarScanFilter.getTldSkip()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setTldSkip(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.scan.StandardJarScanFilter.getTldScan()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setTldScan(java.lang.String)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanFilter.isSkipAll()"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanFilter.isDefaultTldScan()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setDefaultTldScan(boolean)"], ["java.lang.String", "org.apache.tomcat.util.scan.StandardJarScanFilter.getPluggabilitySkip()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setPluggabilitySkip(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.scan.StandardJarScanFilter.getPluggabilityScan()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setPluggabilityScan(java.lang.String)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanFilter.isDefaultPluggabilityScan()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanFilter.setDefaultPluggabilityScan(boolean)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanFilter.check(org.apache.tomcat.JarScanType, java.lang.String)"], ["org.apache.tomcat.util.scan.StandardJarScanner$ClassPathEntry", "org.apache.tomcat.util.scan.StandardJarScanner$ClassPathEntry(java.net.URL)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner$ClassPathEntry.isJar()"], ["java.lang.String", "org.apache.tomcat.util.scan.StandardJarScanner$ClassPathEntry.getName()"], ["org.apache.tomcat.util.scan.StandardJarScanner", "org.apache.tomcat.util.scan.StandardJarScanner()"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner.isScanClassPath()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setScanClassPath(boolean)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner.isScanManifest()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setScanManifest(boolean)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner.isScanAllFiles()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setScanAllFiles(boolean)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner.isScanAllDirectories()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setScanAllDirectories(boolean)"], ["boolean", "org.apache.tomcat.util.scan.StandardJarScanner.isScanBootstrapClassPath()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setScanBootstrapClassPath(boolean)"], ["org.apache.tomcat.JarScanFilter", "org.apache.tomcat.util.scan.StandardJarScanner.getJarScanFilter()"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.setJarScanFilter(org.apache.tomcat.JarScanFilter)"], ["void", "org.apache.tomcat.util.scan.StandardJarScanner.scan(org.apache.tomcat.JarScanType, javax.servlet.ServletContext, org.apache.tomcat.JarScannerCallback)"], ["org.apache.tomcat.util.scan.UrlJar", "org.apache.tomcat.util.scan.UrlJar(java.net.URL)"], ["void", "org.apache.tomcat.util.scan.UrlJar.close()"], ["byte[]", "org.apache.tomcat.util.security.ConcurrentMessageDigest.digestMD5(byte[]...)"], ["byte[]", "org.apache.tomcat.util.security.ConcurrentMessageDigest.digestSHA1(byte[]...)"], ["byte[]", "org.apache.tomcat.util.security.ConcurrentMessageDigest.digest(java.lang.String, byte[]...)"], ["byte[]", "org.apache.tomcat.util.security.ConcurrentMessageDigest.digest(java.lang.String, int, byte[]...)"], ["void", "org.apache.tomcat.util.security.ConcurrentMessageDigest.init(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.security.Escape.htmlElementContent(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.security.Escape.htmlElementContent(java.lang.Object)"], ["java.lang.String", "org.apache.tomcat.util.security.Escape.xml(java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.security.Escape.xml(java.lang.String, java.lang.String)"], ["java.lang.String", "org.apache.tomcat.util.security.Escape.xml(java.lang.String, boolean, java.lang.String)"], ["void", "org.apache.tomcat.util.security.KeyStoreUtil.load(java.security.KeyStore, java.io.InputStream, char[])"], ["java.lang.String", "org.apache.tomcat.util.security.MD5Encoder.encode(byte[])"], ["org.apache.tomcat.util.security.PrivilegedGetTccl", "org.apache.tomcat.util.security.PrivilegedGetTccl()"], ["java.lang.ClassLoader", "org.apache.tomcat.util.security.PrivilegedGetTccl.run()"], ["java.lang.Object", "org.apache.tomcat.util.security.PrivilegedGetTccl.run()"], ["org.apache.tomcat.util.security.PrivilegedSetTccl", "org.apache.tomcat.util.security.PrivilegedSetTccl(java.lang.ClassLoader)"], ["org.apache.tomcat.util.security.PrivilegedSetTccl", "org.apache.tomcat.util.security.PrivilegedSetTccl(java.lang.Thread, java.lang.ClassLoader)"], ["java.lang.Void", "org.apache.tomcat.util.security.PrivilegedSetTccl.run()"], ["java.lang.Object", "org.apache.tomcat.util.security.PrivilegedSetTccl.run()"], ["org.apache.tomcat.util.threads.Constants", "org.apache.tomcat.util.threads.Constants()"], ["org.apache.tomcat.util.threads.InlineExecutorService", "org.apache.tomcat.util.threads.InlineExecutorService()"], ["void", "org.apache.tomcat.util.threads.InlineExecutorService.shutdown()"], ["boolean", "org.apache.tomcat.util.threads.InlineExecutorService.isShutdown()"], ["boolean", "org.apache.tomcat.util.threads.InlineExecutorService.isTerminated()"], ["boolean", "org.apache.tomcat.util.threads.InlineExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.threads.InlineExecutorService.execute(java.lang.Runnable)"], ["org.apache.tomcat.util.threads.LimitLatch$Sync", "org.apache.tomcat.util.threads.LimitLatch$Sync(org.apache.tomcat.util.threads.LimitLatch)"], ["org.apache.tomcat.util.threads.LimitLatch", "org.apache.tomcat.util.threads.LimitLatch(long)"], ["long", "org.apache.tomcat.util.threads.LimitLatch.getCount()"], ["long", "org.apache.tomcat.util.threads.LimitLatch.getLimit()"], ["void", "org.apache.tomcat.util.threads.LimitLatch.setLimit(long)"], ["void", "org.apache.tomcat.util.threads.LimitLatch.countUpOrAwait()"], ["long", "org.apache.tomcat.util.threads.LimitLatch.countDown()"], ["boolean", "org.apache.tomcat.util.threads.LimitLatch.releaseAll()"], ["void", "org.apache.tomcat.util.threads.LimitLatch.reset()"], ["boolean", "org.apache.tomcat.util.threads.LimitLatch.hasQueuedThreads()"], ["org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor(java.util.concurrent.ScheduledExecutorService)"], ["void", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.shutdown()"], ["boolean", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.isShutdown()"], ["boolean", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.isTerminated()"], ["boolean", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.awaitTermination(long, java.util.concurrent.TimeUnit)"], ["<T> java.util.concurrent.Future<T>", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.submit(java.util.concurrent.Callable<T>)"], ["<T> java.util.concurrent.Future<T>", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.submit(java.lang.Runnable, T)"], ["<T> java.util.List<java.util.concurrent.Future<T>>", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>)"], ["<T> java.util.List<java.util.concurrent.Future<T>>", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit)"], ["<T> T", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>)"], ["<T> T", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.execute(java.lang.Runnable)"], ["<V> java.util.concurrent.ScheduledFuture<V>", "org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor.schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit)"], ["org.apache.tomcat.util.threads.StopPooledThreadException", "org.apache.tomcat.util.threads.StopPooledThreadException(java.lang.String)"], ["org.apache.tomcat.util.threads.TaskQueue", "org.apache.tomcat.util.threads.TaskQueue()"], ["org.apache.tomcat.util.threads.TaskQueue", "org.apache.tomcat.util.threads.TaskQueue(int)"], ["org.apache.tomcat.util.threads.TaskQueue", "org.apache.tomcat.util.threads.TaskQueue(java.util.Collection<? extends java.lang.Runnable>)"], ["void", "org.apache.tomcat.util.threads.TaskQueue.setParent(org.apache.tomcat.util.threads.ThreadPoolExecutor)"], ["boolean", "org.apache.tomcat.util.threads.TaskQueue.force(java.lang.Runnable)"], ["boolean", "org.apache.tomcat.util.threads.TaskQueue.force(java.lang.Runnable, long, java.util.concurrent.TimeUnit)"], ["boolean", "org.apache.tomcat.util.threads.TaskQueue.offer(java.lang.Runnable)"], ["java.lang.Runnable", "org.apache.tomcat.util.threads.TaskQueue.poll(long, java.util.concurrent.TimeUnit)"], ["java.lang.Runnable", "org.apache.tomcat.util.threads.TaskQueue.take()"], ["int", "org.apache.tomcat.util.threads.TaskQueue.remainingCapacity()"], ["void", "org.apache.tomcat.util.threads.TaskQueue.setForcedRemainingCapacity(java.lang.Integer)"], ["java.lang.Object", "org.apache.tomcat.util.threads.TaskQueue.poll(long, java.util.concurrent.TimeUnit)"], ["java.lang.Object", "org.apache.tomcat.util.threads.TaskQueue.take()"], ["boolean", "org.apache.tomcat.util.threads.TaskQueue.offer(java.lang.Object)"], ["void", "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run()"], ["org.apache.tomcat.util.threads.TaskThread", "org.apache.tomcat.util.threads.TaskThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String)"], ["org.apache.tomcat.util.threads.TaskThread", "org.apache.tomcat.util.threads.TaskThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long)"], ["long", "org.apache.tomcat.util.threads.TaskThread.getCreationTime()"], ["org.apache.tomcat.util.threads.TaskThreadFactory", "org.apache.tomcat.util.threads.TaskThreadFactory(java.lang.String, boolean, int)"], ["java.lang.Thread", "org.apache.tomcat.util.threads.TaskThreadFactory.newThread(java.lang.Runnable)"], ["void", "org.apache.tomcat.util.threads.ThreadPoolExecutor$RejectHandler.rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)"], ["org.apache.tomcat.util.threads.ThreadPoolExecutor", "org.apache.tomcat.util.threads.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.RejectedExecutionHandler)"], ["org.apache.tomcat.util.threads.ThreadPoolExecutor", "org.apache.tomcat.util.threads.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"], ["org.apache.tomcat.util.threads.ThreadPoolExecutor", "org.apache.tomcat.util.threads.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory)"], ["org.apache.tomcat.util.threads.ThreadPoolExecutor", "org.apache.tomcat.util.threads.ThreadPoolExecutor(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue<java.lang.Runnable>)"], ["long", "org.apache.tomcat.util.threads.ThreadPoolExecutor.getThreadRenewalDelay()"], ["void", "org.apache.tomcat.util.threads.ThreadPoolExecutor.setThreadRenewalDelay(long)"], ["int", "org.apache.tomcat.util.threads.ThreadPoolExecutor.getSubmittedCount()"], ["void", "org.apache.tomcat.util.threads.ThreadPoolExecutor.execute(java.lang.Runnable)"], ["void", "org.apache.tomcat.util.threads.ThreadPoolExecutor.execute(java.lang.Runnable, long, java.util.concurrent.TimeUnit)"], ["void", "org.apache.tomcat.util.threads.ThreadPoolExecutor.contextStopping()"]]}