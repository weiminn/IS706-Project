{"spring-r2dbc-5.3.18.jar": [["reactor.core.publisher.Mono<T>", "org.springframework.r2dbc.core.DefaultFetchSpec.one()", "public reactor.core.publisher.Mono<T> one()"], ["reactor.core.publisher.Mono<T>", "org.springframework.r2dbc.core.DefaultFetchSpec.first()", "public reactor.core.publisher.Mono<T> first()"], ["reactor.core.publisher.Flux<T>", "org.springframework.r2dbc.core.DefaultFetchSpec.all()", "public reactor.core.publisher.Flux<T> all()"], ["reactor.core.publisher.Mono<java.lang.Integer>", "org.springframework.r2dbc.core.DefaultFetchSpec.rowsUpdated()", "public reactor.core.publisher.Mono<java.lang.Integer> rowsUpdated()"], ["java.lang.String", "org.springframework.r2dbc.core.ParsedSql.toString()", "public java.lang.String toString()"], ["default", "org.springframework.r2dbc.core.QueryOperation.java.lang.String get()", "public default java.lang.String get()"], ["default", "org.springframework.r2dbc.core.QueryOperation.java.lang.Object get()", "public default java.lang.Object get()"], ["org.springframework.r2dbc.core.ParsedSql", "org.springframework.r2dbc.core.NamedParameterUtils.parseSqlStatement(java.lang.String)", "public static org.springframework.r2dbc.core.ParsedSql parseSqlStatement(java.lang.String)"], ["org.springframework.r2dbc.core.PreparedOperation<java.lang.String>", "org.springframework.r2dbc.core.NamedParameterUtils.substituteNamedParameters(org.springframework.r2dbc.core.ParsedSql, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)", "public static org.springframework.r2dbc.core.PreparedOperation<java.lang.String> substituteNamedParameters(org.springframework.r2dbc.core.ParsedSql, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)"], ["org.springframework.r2dbc.core.PreparedOperation<java.lang.String>", "org.springframework.r2dbc.core.NamedParameterUtils.substituteNamedParameters(java.lang.String, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)", "public static org.springframework.r2dbc.core.PreparedOperation<java.lang.String> substituteNamedParameters(java.lang.String, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)"], ["org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bind(int, java.lang.Object)", "public org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec bind(int, java.lang.Object)"], ["org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bindNull(int, java.lang.Class<?>)", "public org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec bindNull(int, java.lang.Class<?>)"], ["org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bind(java.lang.String, java.lang.Object)", "public org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec bind(java.lang.String, java.lang.Object)"], ["org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bindNull(java.lang.String, java.lang.Class<?>)", "public org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec bindNull(java.lang.String, java.lang.Class<?>)"], ["org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.filter(org.springframework.r2dbc.core.StatementFilterFunction)", "public org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec filter(org.springframework.r2dbc.core.StatementFilterFunction)"], ["<R> org.springframework.r2dbc.core.FetchSpec<R>", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.map(java.util.function.BiFunction<io.r2dbc.spi.Row, io.r2dbc.spi.RowMetadata, R>)", "public <R> org.springframework.r2dbc.core.FetchSpec<R> map(java.util.function.BiFunction<io.r2dbc.spi.Row, io.r2dbc.spi.RowMetadata, R>)"], ["org.springframework.r2dbc.core.FetchSpec<java.util.Map<java.lang.String, java.lang.Object>>", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.fetch()", "public org.springframework.r2dbc.core.FetchSpec<java.util.Map<java.lang.String, java.lang.Object>> fetch()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.then()", "public reactor.core.publisher.Mono<java.lang.Void> then()"], ["org.springframework.r2dbc.core.RowsFetchSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.map(java.util.function.BiFunction)", "public org.springframework.r2dbc.core.RowsFetchSpec map(java.util.function.BiFunction)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.filter(org.springframework.r2dbc.core.StatementFilterFunction)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec filter(org.springframework.r2dbc.core.StatementFilterFunction)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bindNull(java.lang.String, java.lang.Class)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bindNull(java.lang.String, java.lang.Class)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bind(java.lang.String, java.lang.Object)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bind(java.lang.String, java.lang.Object)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bindNull(int, java.lang.Class)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bindNull(int, java.lang.Class)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient$DefaultGenericExecuteSpec.bind(int, java.lang.Object)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bind(int, java.lang.Object)"], ["org.springframework.r2dbc.core.binding.MutableBindings", "org.springframework.r2dbc.core.binding.MutableBindings(org.springframework.r2dbc.core.binding.BindMarkers)", "public org.springframework.r2dbc.core.binding.MutableBindings(org.springframework.r2dbc.core.binding.BindMarkers)"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.MutableBindings.nextMarker()", "public org.springframework.r2dbc.core.binding.BindMarker nextMarker()"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.MutableBindings.nextMarker(java.lang.String)", "public org.springframework.r2dbc.core.binding.BindMarker nextMarker(java.lang.String)"], ["org.springframework.r2dbc.core.binding.MutableBindings", "org.springframework.r2dbc.core.binding.MutableBindings.bind(org.springframework.r2dbc.core.binding.BindMarker, java.lang.Object)", "public org.springframework.r2dbc.core.binding.MutableBindings bind(org.springframework.r2dbc.core.binding.BindMarker, java.lang.Object)"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.MutableBindings.bind(java.lang.Object)", "public org.springframework.r2dbc.core.binding.BindMarker bind(java.lang.Object)"], ["org.springframework.r2dbc.core.binding.MutableBindings", "org.springframework.r2dbc.core.binding.MutableBindings.bindNull(org.springframework.r2dbc.core.binding.BindMarker, java.lang.Class<?>)", "public org.springframework.r2dbc.core.binding.MutableBindings bindNull(org.springframework.r2dbc.core.binding.BindMarker, java.lang.Class<?>)"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.MutableBindings.bindNull(java.lang.Class<?>)", "public org.springframework.r2dbc.core.binding.BindMarker bindNull(java.lang.Class<?>)"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.NamedBindMarkers.next()", "public org.springframework.r2dbc.core.binding.BindMarker next()"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.NamedBindMarkers.next(java.lang.String)", "public org.springframework.r2dbc.core.binding.BindMarker next(java.lang.String)"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.resolve(io.r2dbc.spi.ConnectionFactory)", "public static org.springframework.r2dbc.core.binding.BindMarkersFactory resolve(io.r2dbc.spi.ConnectionFactory)"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider.getBindMarkers(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.core.binding.BindMarkersFactory getBindMarkers(io.r2dbc.spi.ConnectionFactory)"], ["boolean", "org.springframework.r2dbc.core.binding.Bindings$ValueBinding.hasValue()", "public boolean hasValue()"], ["java.lang.Object", "org.springframework.r2dbc.core.binding.Bindings$ValueBinding.getValue()", "public java.lang.Object getValue()"], ["void", "org.springframework.r2dbc.core.binding.Bindings$ValueBinding.apply(org.springframework.r2dbc.core.binding.BindTarget)", "public void apply(org.springframework.r2dbc.core.binding.BindTarget)"], ["boolean", "org.springframework.r2dbc.core.binding.Bindings$NullBinding.hasValue()", "public boolean hasValue()"], ["java.lang.Object", "org.springframework.r2dbc.core.binding.Bindings$NullBinding.getValue()", "public java.lang.Object getValue()"], ["java.lang.Class<?>", "org.springframework.r2dbc.core.binding.Bindings$NullBinding.getValueType()", "public java.lang.Class<?> getValueType()"], ["void", "org.springframework.r2dbc.core.binding.Bindings$NullBinding.apply(org.springframework.r2dbc.core.binding.BindTarget)", "public void apply(org.springframework.r2dbc.core.binding.BindTarget)"], ["java.lang.String", "org.springframework.r2dbc.core.binding.NamedBindMarkers$NamedBindMarker.getPlaceholder()", "public java.lang.String getPlaceholder()"], ["void", "org.springframework.r2dbc.core.binding.NamedBindMarkers$NamedBindMarker.bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Object)", "public void bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Object)"], ["void", "org.springframework.r2dbc.core.binding.NamedBindMarkers$NamedBindMarker.bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Class<?>)", "public void bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Class<?>)"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.AnonymousBindMarkers.next()", "public org.springframework.r2dbc.core.binding.BindMarker next()"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.Bindings$Binding.getBindMarker()", "public org.springframework.r2dbc.core.binding.BindMarker getBindMarker()"], ["boolean", "org.springframework.r2dbc.core.binding.Bindings$Binding.isNull()", "public boolean isNull()"], ["org.springframework.r2dbc.core.binding.BindMarker", "org.springframework.r2dbc.core.binding.IndexedBindMarkers.next()", "public org.springframework.r2dbc.core.binding.BindMarker next()"], ["org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$NoBindMarkersFactoryException", "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$NoBindMarkersFactoryException(java.lang.String)", "public org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$NoBindMarkersFactoryException(java.lang.String)"], ["default", "org.springframework.r2dbc.core.binding.BindMarkers.org.springframework.r2dbc.core.binding.BindMarker next(java.lang.String)", "public default org.springframework.r2dbc.core.binding.BindMarker next(java.lang.String)"], ["default", "org.springframework.r2dbc.core.binding.BindMarkersFactory.boolean identifiablePlaceholders()", "public default boolean identifiablePlaceholders()"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactory.indexed(java.lang.String, int)", "public static org.springframework.r2dbc.core.binding.BindMarkersFactory indexed(java.lang.String, int)"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactory.anonymous(java.lang.String)", "public static org.springframework.r2dbc.core.binding.BindMarkersFactory anonymous(java.lang.String)"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactory.named(java.lang.String, java.lang.String, int)", "public static org.springframework.r2dbc.core.binding.BindMarkersFactory named(java.lang.String, java.lang.String, int)"], ["org.springframework.r2dbc.core.binding.BindMarkersFactory", "org.springframework.r2dbc.core.binding.BindMarkersFactory.named(java.lang.String, java.lang.String, int, java.util.function.Function<java.lang.String, java.lang.String>)", "public static org.springframework.r2dbc.core.binding.BindMarkersFactory named(java.lang.String, java.lang.String, int, java.util.function.Function<java.lang.String, java.lang.String>)"], ["org.springframework.r2dbc.core.binding.Bindings", "org.springframework.r2dbc.core.binding.Bindings()", "public org.springframework.r2dbc.core.binding.Bindings()"], ["org.springframework.r2dbc.core.binding.Bindings", "org.springframework.r2dbc.core.binding.Bindings(java.util.Collection<org.springframework.r2dbc.core.binding.Bindings$Binding>)", "public org.springframework.r2dbc.core.binding.Bindings(java.util.Collection<org.springframework.r2dbc.core.binding.Bindings$Binding>)"], ["org.springframework.r2dbc.core.binding.Bindings", "org.springframework.r2dbc.core.binding.Bindings.and(org.springframework.r2dbc.core.binding.Bindings)", "public org.springframework.r2dbc.core.binding.Bindings and(org.springframework.r2dbc.core.binding.Bindings)"], ["void", "org.springframework.r2dbc.core.binding.Bindings.apply(org.springframework.r2dbc.core.binding.BindTarget)", "public void apply(org.springframework.r2dbc.core.binding.BindTarget)"], ["void", "org.springframework.r2dbc.core.binding.Bindings.forEach(java.util.function.Consumer<? super org.springframework.r2dbc.core.binding.Bindings$Binding>)", "public void forEach(java.util.function.Consumer<? super org.springframework.r2dbc.core.binding.Bindings$Binding>)"], ["java.util.Iterator<org.springframework.r2dbc.core.binding.Bindings$Binding>", "org.springframework.r2dbc.core.binding.Bindings.iterator()", "public java.util.Iterator<org.springframework.r2dbc.core.binding.Bindings$Binding> iterator()"], ["java.util.Spliterator<org.springframework.r2dbc.core.binding.Bindings$Binding>", "org.springframework.r2dbc.core.binding.Bindings.spliterator()", "public java.util.Spliterator<org.springframework.r2dbc.core.binding.Bindings$Binding> spliterator()"], ["org.springframework.r2dbc.core.binding.Bindings", "org.springframework.r2dbc.core.binding.Bindings.empty()", "public static org.springframework.r2dbc.core.binding.Bindings empty()"], ["org.springframework.r2dbc.core.binding.Bindings", "org.springframework.r2dbc.core.binding.Bindings.merge(org.springframework.r2dbc.core.binding.Bindings, org.springframework.r2dbc.core.binding.Bindings)", "public static org.springframework.r2dbc.core.binding.Bindings merge(org.springframework.r2dbc.core.binding.Bindings, org.springframework.r2dbc.core.binding.Bindings)"], ["org.springframework.r2dbc.core.binding.BindMarkers", "org.springframework.r2dbc.core.binding.BindMarkersFactory$1.create()", "public org.springframework.r2dbc.core.binding.BindMarkers create()"], ["boolean", "org.springframework.r2dbc.core.binding.BindMarkersFactory$1.identifiablePlaceholders()", "public boolean identifiablePlaceholders()"], ["java.lang.String", "org.springframework.r2dbc.core.binding.IndexedBindMarkers$IndexedBindMarker.getPlaceholder()", "public java.lang.String getPlaceholder()"], ["void", "org.springframework.r2dbc.core.binding.IndexedBindMarkers$IndexedBindMarker.bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Object)", "public void bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Object)"], ["void", "org.springframework.r2dbc.core.binding.IndexedBindMarkers$IndexedBindMarker.bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Class<?>)", "public void bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.Class<?>)"], ["int", "org.springframework.r2dbc.core.binding.IndexedBindMarkers$IndexedBindMarker.getIndex()", "public int getIndex()"], ["org.springframework.r2dbc.core.Parameter", "org.springframework.r2dbc.core.Parameter.from(java.lang.Object)", "public static org.springframework.r2dbc.core.Parameter from(java.lang.Object)"], ["org.springframework.r2dbc.core.Parameter", "org.springframework.r2dbc.core.Parameter.fromOrEmpty(java.lang.Object, java.lang.Class<?>)", "public static org.springframework.r2dbc.core.Parameter fromOrEmpty(java.lang.Object, java.lang.Class<?>)"], ["org.springframework.r2dbc.core.Parameter", "org.springframework.r2dbc.core.Parameter.empty(java.lang.Class<?>)", "public static org.springframework.r2dbc.core.Parameter empty(java.lang.Class<?>)"], ["java.lang.Object", "org.springframework.r2dbc.core.Parameter.getValue()", "public java.lang.Object getValue()"], ["java.lang.Class<?>", "org.springframework.r2dbc.core.Parameter.getType()", "public java.lang.Class<?> getType()"], ["boolean", "org.springframework.r2dbc.core.Parameter.hasValue()", "public boolean hasValue()"], ["boolean", "org.springframework.r2dbc.core.Parameter.isEmpty()", "public boolean isEmpty()"], ["boolean", "org.springframework.r2dbc.core.Parameter.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.springframework.r2dbc.core.Parameter.hashCode()", "public int hashCode()"], ["java.lang.String", "org.springframework.r2dbc.core.Parameter.toString()", "public java.lang.String toString()"], ["boolean", "org.springframework.r2dbc.core.MapBindParameterSource.hasValue(java.lang.String)", "public boolean hasValue(java.lang.String)"], ["java.lang.Class<?>", "org.springframework.r2dbc.core.MapBindParameterSource.getType(java.lang.String)", "public java.lang.Class<?> getType(java.lang.String)"], ["java.lang.Object", "org.springframework.r2dbc.core.MapBindParameterSource.getValue(java.lang.String)", "public java.lang.Object getValue(java.lang.String) throws java.lang.IllegalArgumentException"], ["java.lang.Iterable<java.lang.String>", "org.springframework.r2dbc.core.MapBindParameterSource.getParameterNames()", "public java.lang.Iterable<java.lang.String> getParameterNames()"], ["java.lang.Object", "org.springframework.r2dbc.core.DefaultDatabaseClient$CloseSuppressingInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])", "public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable"], ["void", "org.springframework.r2dbc.core.DefaultDatabaseClient$StatementWrapper.bind(java.lang.String, java.lang.Object)", "public void bind(java.lang.String, java.lang.Object)"], ["void", "org.springframework.r2dbc.core.DefaultDatabaseClient$StatementWrapper.bind(int, java.lang.Object)", "public void bind(int, java.lang.Object)"], ["void", "org.springframework.r2dbc.core.DefaultDatabaseClient$StatementWrapper.bindNull(java.lang.String, java.lang.Class<?>)", "public void bindNull(java.lang.String, java.lang.Class<?>)"], ["void", "org.springframework.r2dbc.core.DefaultDatabaseClient$StatementWrapper.bindNull(int, java.lang.Class<?>)", "public void bindNull(int, java.lang.Class<?>)"], ["boolean", "org.springframework.r2dbc.core.NamedParameterUtils$ParameterHolder.equals(java.lang.Object)", "public boolean equals(java.lang.Object)"], ["int", "org.springframework.r2dbc.core.NamedParameterUtils$ParameterHolder.hashCode()", "public int hashCode()"], ["default", "org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec.org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec filter(java.util.function.Function<? super io.r2dbc.spi.Statement, ? extends io.r2dbc.spi.Statement>)", "public default org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec filter(java.util.function.Function<? super io.r2dbc.spi.Statement, ? extends io.r2dbc.spi.Statement>)"], ["<R> org.springframework.r2dbc.core.RowsFetchSpec<R>", "org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec.map(java.util.function.Function<io.r2dbc.spi.Row, R>)", "public default <R> org.springframework.r2dbc.core.RowsFetchSpec<R> map(java.util.function.Function<io.r2dbc.spi.Row, R>)"], ["org.springframework.r2dbc.core.ColumnMapRowMapper", "org.springframework.r2dbc.core.ColumnMapRowMapper()", "public org.springframework.r2dbc.core.ColumnMapRowMapper()"], ["java.util.Map<java.lang.String, java.lang.Object>", "org.springframework.r2dbc.core.ColumnMapRowMapper.apply(io.r2dbc.spi.Row, io.r2dbc.spi.RowMetadata)", "public java.util.Map<java.lang.String, java.lang.Object> apply(io.r2dbc.spi.Row, io.r2dbc.spi.RowMetadata)"], ["java.lang.Object", "org.springframework.r2dbc.core.ColumnMapRowMapper.apply(java.lang.Object, java.lang.Object)", "public java.lang.Object apply(java.lang.Object, java.lang.Object)"], ["org.springframework.r2dbc.core.PreparedOperation<java.lang.String>", "org.springframework.r2dbc.core.NamedParameterExpander.expand(java.lang.String, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)", "public org.springframework.r2dbc.core.PreparedOperation<java.lang.String> expand(java.lang.String, org.springframework.r2dbc.core.binding.BindMarkersFactory, org.springframework.r2dbc.core.BindParameterSource)"], ["java.util.List<java.lang.String>", "org.springframework.r2dbc.core.NamedParameterExpander.getParameterNames(java.lang.String)", "public java.util.List<java.lang.String> getParameterNames(java.lang.String)"], ["R", "org.springframework.r2dbc.core.ConnectionFunction.apply(io.r2dbc.spi.Connection)", "public R apply(io.r2dbc.spi.Connection)"], ["java.lang.String", "org.springframework.r2dbc.core.ConnectionFunction.getSql()", "public java.lang.String getSql()"], ["java.lang.Object", "org.springframework.r2dbc.core.ConnectionFunction.apply(java.lang.Object)", "public java.lang.Object apply(java.lang.Object)"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.bindMarkers(org.springframework.r2dbc.core.binding.BindMarkersFactory)", "public org.springframework.r2dbc.core.DatabaseClient$Builder bindMarkers(org.springframework.r2dbc.core.binding.BindMarkersFactory)"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.connectionFactory(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.core.DatabaseClient$Builder connectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.executeFunction(org.springframework.r2dbc.core.ExecuteFunction)", "public org.springframework.r2dbc.core.DatabaseClient$Builder executeFunction(org.springframework.r2dbc.core.ExecuteFunction)"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.namedParameters(boolean)", "public org.springframework.r2dbc.core.DatabaseClient$Builder namedParameters(boolean)"], ["org.springframework.r2dbc.core.DatabaseClient", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.build()", "public org.springframework.r2dbc.core.DatabaseClient build()"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DefaultDatabaseClientBuilder.apply(java.util.function.Consumer<org.springframework.r2dbc.core.DatabaseClient$Builder>)", "public org.springframework.r2dbc.core.DatabaseClient$Builder apply(java.util.function.Consumer<org.springframework.r2dbc.core.DatabaseClient$Builder>)"], ["java.lang.Class<?>", "org.springframework.r2dbc.core.BindParameterSource.getType(java.lang.String)", "public default java.lang.Class<?> getType(java.lang.String)"], ["default", "org.springframework.r2dbc.core.StatementFilterFunction.org.springframework.r2dbc.core.StatementFilterFunction andThen(org.springframework.r2dbc.core.StatementFilterFunction)", "public default org.springframework.r2dbc.core.StatementFilterFunction andThen(org.springframework.r2dbc.core.StatementFilterFunction)"], ["void", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.String, java.lang.Object)", "public void bind(org.springframework.r2dbc.core.binding.BindTarget, java.lang.String, java.lang.Object)"], ["void", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.String, java.lang.Class<?>)", "public void bindNull(org.springframework.r2dbc.core.binding.BindTarget, java.lang.String, java.lang.Class<?>)"], ["java.lang.String", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.getSource()", "public java.lang.String getSource()"], ["void", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.bindTo(org.springframework.r2dbc.core.binding.BindTarget)", "public void bindTo(org.springframework.r2dbc.core.binding.BindTarget)"], ["java.lang.String", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.toQuery()", "public java.lang.String toQuery()"], ["java.lang.Object", "org.springframework.r2dbc.core.NamedParameterUtils$ExpandedQuery.getSource()", "public java.lang.Object getSource()"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.core.DefaultDatabaseClient.getConnectionFactory()", "public io.r2dbc.spi.ConnectionFactory getConnectionFactory()"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient.sql(java.lang.String)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec sql(java.lang.String)"], ["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DefaultDatabaseClient.sql(java.util.function.Supplier<java.lang.String>)", "public org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec sql(java.util.function.Supplier<java.lang.String>)"], ["<T> reactor.core.publisher.Mono<T>", "org.springframework.r2dbc.core.DefaultDatabaseClient.inConnection(java.util.function.Function<io.r2dbc.spi.Connection, reactor.core.publisher.Mono<T>>)", "public <T> reactor.core.publisher.Mono<T> inConnection(java.util.function.Function<io.r2dbc.spi.Connection, reactor.core.publisher.Mono<T>>) throws org.springframework.dao.DataAccessException"], ["<T> reactor.core.publisher.Flux<T>", "org.springframework.r2dbc.core.DefaultDatabaseClient.inConnectionMany(java.util.function.Function<io.r2dbc.spi.Connection, reactor.core.publisher.Flux<T>>)", "public <T> reactor.core.publisher.Flux<T> inConnectionMany(java.util.function.Function<io.r2dbc.spi.Connection, reactor.core.publisher.Flux<T>>) throws org.springframework.dao.DataAccessException"], ["org.springframework.r2dbc.core.DatabaseClient", "org.springframework.r2dbc.core.DatabaseClient.create(io.r2dbc.spi.ConnectionFactory)", "public static org.springframework.r2dbc.core.DatabaseClient create(io.r2dbc.spi.ConnectionFactory)"], ["org.springframework.r2dbc.core.DatabaseClient$Builder", "org.springframework.r2dbc.core.DatabaseClient.builder()", "public static org.springframework.r2dbc.core.DatabaseClient$Builder builder()"], ["org.springframework.r2dbc.UncategorizedR2dbcException", "org.springframework.r2dbc.UncategorizedR2dbcException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)", "public org.springframework.r2dbc.UncategorizedR2dbcException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)"], ["io.r2dbc.spi.R2dbcException", "org.springframework.r2dbc.UncategorizedR2dbcException.getR2dbcException()", "public io.r2dbc.spi.R2dbcException getR2dbcException()"], ["java.lang.String", "org.springframework.r2dbc.UncategorizedR2dbcException.getSql()", "public java.lang.String getSql()"], ["org.springframework.r2dbc.BadSqlGrammarException", "org.springframework.r2dbc.BadSqlGrammarException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)", "public org.springframework.r2dbc.BadSqlGrammarException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)"], ["io.r2dbc.spi.R2dbcException", "org.springframework.r2dbc.BadSqlGrammarException.getR2dbcException()", "public io.r2dbc.spi.R2dbcException getR2dbcException()"], ["java.lang.String", "org.springframework.r2dbc.BadSqlGrammarException.getSql()", "public java.lang.String getSql()"], ["org.springframework.r2dbc.connection.R2dbcTransactionManager", "org.springframework.r2dbc.connection.R2dbcTransactionManager()", "public org.springframework.r2dbc.connection.R2dbcTransactionManager()"], ["org.springframework.r2dbc.connection.R2dbcTransactionManager", "org.springframework.r2dbc.connection.R2dbcTransactionManager(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.R2dbcTransactionManager(io.r2dbc.spi.ConnectionFactory)"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager.setConnectionFactory(io.r2dbc.spi.ConnectionFactory)", "public void setConnectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.R2dbcTransactionManager.getConnectionFactory()", "public io.r2dbc.spi.ConnectionFactory getConnectionFactory()"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager.setEnforceReadOnly(boolean)", "public void setEnforceReadOnly(boolean)"], ["boolean", "org.springframework.r2dbc.connection.R2dbcTransactionManager.isEnforceReadOnly()", "public boolean isEnforceReadOnly()"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager.afterPropertiesSet()", "public void afterPropertiesSet()"], ["java.lang.Object", "org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy$TransactionAwareInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])", "public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable"], ["org.reactivestreams.Publisher<? extends io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.SingleConnectionFactory$1.create()", "public org.reactivestreams.Publisher<? extends io.r2dbc.spi.Connection> create()"], ["io.r2dbc.spi.ConnectionFactoryMetadata", "org.springframework.r2dbc.connection.SingleConnectionFactory$1.getMetadata()", "public io.r2dbc.spi.ConnectionFactoryMetadata getMetadata()"], ["org.springframework.r2dbc.connection.ConnectionHolder", "org.springframework.r2dbc.connection.ConnectionHolder(io.r2dbc.spi.Connection)", "public org.springframework.r2dbc.connection.ConnectionHolder(io.r2dbc.spi.Connection)"], ["org.springframework.r2dbc.connection.ConnectionHolder", "org.springframework.r2dbc.connection.ConnectionHolder(io.r2dbc.spi.Connection, boolean)", "public org.springframework.r2dbc.connection.ConnectionHolder(io.r2dbc.spi.Connection, boolean)"], ["io.r2dbc.spi.Connection", "org.springframework.r2dbc.connection.ConnectionHolder.getConnection()", "public io.r2dbc.spi.Connection getConnection()"], ["void", "org.springframework.r2dbc.connection.ConnectionHolder.released()", "public void released()"], ["void", "org.springframework.r2dbc.connection.ConnectionHolder.clear()", "public void clear()"], ["org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy", "org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy(io.r2dbc.spi.ConnectionFactory)"], ["reactor.core.publisher.Mono<io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy.create()", "public reactor.core.publisher.Mono<io.r2dbc.spi.Connection> create()"], ["org.reactivestreams.Publisher", "org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy.create()", "public org.reactivestreams.Publisher create()"], ["java.lang.Object", "org.springframework.r2dbc.connection.SingleConnectionFactory$CloseSuppressingInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])", "public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable"], ["org.springframework.r2dbc.connection.DelegatingConnectionFactory", "org.springframework.r2dbc.connection.DelegatingConnectionFactory(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.DelegatingConnectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.getTargetConnectionFactory()", "public io.r2dbc.spi.ConnectionFactory getTargetConnectionFactory()"], ["reactor.core.publisher.Mono<? extends io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.create()", "public reactor.core.publisher.Mono<? extends io.r2dbc.spi.Connection> create()"], ["io.r2dbc.spi.ConnectionFactoryMetadata", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.getMetadata()", "public io.r2dbc.spi.ConnectionFactoryMetadata getMetadata()"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.unwrap()", "public io.r2dbc.spi.ConnectionFactory unwrap()"], ["org.reactivestreams.Publisher", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.create()", "public org.reactivestreams.Publisher create()"], ["java.lang.Object", "org.springframework.r2dbc.connection.DelegatingConnectionFactory.unwrap()", "public java.lang.Object unwrap()"], ["org.springframework.r2dbc.connection.SingleConnectionFactory", "org.springframework.r2dbc.connection.SingleConnectionFactory(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.SingleConnectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["org.springframework.r2dbc.connection.SingleConnectionFactory", "org.springframework.r2dbc.connection.SingleConnectionFactory(java.lang.String, boolean)", "public org.springframework.r2dbc.connection.SingleConnectionFactory(java.lang.String, boolean)"], ["org.springframework.r2dbc.connection.SingleConnectionFactory", "org.springframework.r2dbc.connection.SingleConnectionFactory(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactoryMetadata, boolean)", "public org.springframework.r2dbc.connection.SingleConnectionFactory(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactoryMetadata, boolean)"], ["void", "org.springframework.r2dbc.connection.SingleConnectionFactory.setSuppressClose(boolean)", "public void setSuppressClose(boolean)"], ["void", "org.springframework.r2dbc.connection.SingleConnectionFactory.setAutoCommit(boolean)", "public void setAutoCommit(boolean)"], ["reactor.core.publisher.Mono<? extends io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.SingleConnectionFactory.create()", "public reactor.core.publisher.Mono<? extends io.r2dbc.spi.Connection> create()"], ["void", "org.springframework.r2dbc.connection.SingleConnectionFactory.destroy()", "public void destroy()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.SingleConnectionFactory.resetConnection()", "public reactor.core.publisher.Mono<java.lang.Void> resetConnection()"], ["org.reactivestreams.Publisher", "org.springframework.r2dbc.connection.SingleConnectionFactory.create()", "public org.reactivestreams.Publisher create()"], ["int", "org.springframework.r2dbc.connection.ConnectionFactoryUtils$ConnectionSynchronization.getOrder()", "public int getOrder()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils$ConnectionSynchronization.suspend()", "public reactor.core.publisher.Mono<java.lang.Void> suspend()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils$ConnectionSynchronization.resume()", "public reactor.core.publisher.Mono<java.lang.Void> resume()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils$ConnectionSynchronization.beforeCompletion()", "public reactor.core.publisher.Mono<java.lang.Void> beforeCompletion()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils$ConnectionSynchronization.afterCompletion(int)", "public reactor.core.publisher.Mono<java.lang.Void> afterCompletion(int)"], ["org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup()", "public org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup()"], ["org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup(java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory>)", "public org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup(java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory>)"], ["org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup(java.lang.String, io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup(java.lang.String, io.r2dbc.spi.ConnectionFactory)"], ["void", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup.setConnectionFactories(java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory>)", "public void setConnectionFactories(java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory>)"], ["java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory>", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup.getConnectionFactories()", "public java.util.Map<java.lang.String, io.r2dbc.spi.ConnectionFactory> getConnectionFactories()"], ["void", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup.addConnectionFactory(java.lang.String, io.r2dbc.spi.ConnectionFactory)", "public void addConnectionFactory(java.lang.String, io.r2dbc.spi.ConnectionFactory)"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup.getConnectionFactory(java.lang.String)", "public io.r2dbc.spi.ConnectionFactory getConnectionFactory(java.lang.String) throws org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException"], ["org.springframework.r2dbc.connection.lookup.SingleConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.SingleConnectionFactoryLookup(io.r2dbc.spi.ConnectionFactory)", "public org.springframework.r2dbc.connection.lookup.SingleConnectionFactoryLookup(io.r2dbc.spi.ConnectionFactory)"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.lookup.SingleConnectionFactoryLookup.getConnectionFactory(java.lang.String)", "public io.r2dbc.spi.ConnectionFactory getConnectionFactory(java.lang.String) throws org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException"], ["org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory()", "public org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory()"], ["void", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.setTargetConnectionFactories(java.util.Map<?, ?>)", "public void setTargetConnectionFactories(java.util.Map<?, ?>)"], ["void", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.setDefaultTargetConnectionFactory(java.lang.Object)", "public void setDefaultTargetConnectionFactory(java.lang.Object)"], ["void", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.setLenientFallback(boolean)", "public void setLenientFallback(boolean)"], ["void", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.setConnectionFactoryLookup(org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookup)", "public void setConnectionFactoryLookup(org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookup)"], ["void", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.afterPropertiesSet()", "public void afterPropertiesSet()"], ["reactor.core.publisher.Mono<io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.create()", "public reactor.core.publisher.Mono<io.r2dbc.spi.Connection> create()"], ["io.r2dbc.spi.ConnectionFactoryMetadata", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.getMetadata()", "public io.r2dbc.spi.ConnectionFactoryMetadata getMetadata()"], ["org.reactivestreams.Publisher", "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory.create()", "public org.reactivestreams.Publisher create()"], ["org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup()", "public org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup()"], ["org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup", "org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup(org.springframework.beans.factory.BeanFactory)", "public org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup(org.springframework.beans.factory.BeanFactory)"], ["void", "org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup.setBeanFactory(org.springframework.beans.factory.BeanFactory)", "public void setBeanFactory(org.springframework.beans.factory.BeanFactory)"], ["io.r2dbc.spi.ConnectionFactory", "org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup.getConnectionFactory(java.lang.String)", "public io.r2dbc.spi.ConnectionFactory getConnectionFactory(java.lang.String) throws org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException"], ["org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException", "org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException(java.lang.String)", "public org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException(java.lang.String)"], ["org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException", "org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException(java.lang.String, java.lang.Throwable)", "public org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException(java.lang.String, java.lang.Throwable)"], ["org.springframework.r2dbc.connection.ConnectionFactoryUtils", "org.springframework.r2dbc.connection.ConnectionFactoryUtils()", "public org.springframework.r2dbc.connection.ConnectionFactoryUtils()"], ["reactor.core.publisher.Mono<io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.getConnection(io.r2dbc.spi.ConnectionFactory)", "public static reactor.core.publisher.Mono<io.r2dbc.spi.Connection> getConnection(io.r2dbc.spi.ConnectionFactory)"], ["reactor.core.publisher.Mono<io.r2dbc.spi.Connection>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.doGetConnection(io.r2dbc.spi.ConnectionFactory)", "public static reactor.core.publisher.Mono<io.r2dbc.spi.Connection> doGetConnection(io.r2dbc.spi.ConnectionFactory)"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.releaseConnection(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactory)", "public static reactor.core.publisher.Mono<java.lang.Void> releaseConnection(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactory)"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.doReleaseConnection(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactory)", "public static reactor.core.publisher.Mono<java.lang.Void> doReleaseConnection(io.r2dbc.spi.Connection, io.r2dbc.spi.ConnectionFactory)"], ["reactor.core.publisher.Mono<io.r2dbc.spi.ConnectionFactory>", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.currentConnectionFactory(io.r2dbc.spi.ConnectionFactory)", "public static reactor.core.publisher.Mono<io.r2dbc.spi.ConnectionFactory> currentConnectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["org.springframework.dao.DataAccessException", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)", "public static org.springframework.dao.DataAccessException convertR2dbcException(java.lang.String, java.lang.String, io.r2dbc.spi.R2dbcException)"], ["io.r2dbc.spi.Connection", "org.springframework.r2dbc.connection.ConnectionFactoryUtils.getTargetConnection(io.r2dbc.spi.Connection)", "public static io.r2dbc.spi.Connection getTargetConnection(io.r2dbc.spi.Connection)"], ["org.springframework.r2dbc.connection.init.CompositeDatabasePopulator", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator()", "public org.springframework.r2dbc.connection.init.CompositeDatabasePopulator()"], ["org.springframework.r2dbc.connection.init.CompositeDatabasePopulator", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator(java.util.Collection<org.springframework.r2dbc.connection.init.DatabasePopulator>)", "public org.springframework.r2dbc.connection.init.CompositeDatabasePopulator(java.util.Collection<org.springframework.r2dbc.connection.init.DatabasePopulator>)"], ["org.springframework.r2dbc.connection.init.CompositeDatabasePopulator", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator(org.springframework.r2dbc.connection.init.DatabasePopulator...)", "public org.springframework.r2dbc.connection.init.CompositeDatabasePopulator(org.springframework.r2dbc.connection.init.DatabasePopulator...)"], ["void", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator.setPopulators(org.springframework.r2dbc.connection.init.DatabasePopulator...)", "public void setPopulators(org.springframework.r2dbc.connection.init.DatabasePopulator...)"], ["void", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator.addPopulators(org.springframework.r2dbc.connection.init.DatabasePopulator...)", "public void addPopulators(org.springframework.r2dbc.connection.init.DatabasePopulator...)"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator.populate(io.r2dbc.spi.Connection)", "public reactor.core.publisher.Mono<java.lang.Void> populate(io.r2dbc.spi.Connection) throws org.springframework.r2dbc.connection.init.ScriptException"], ["org.springframework.r2dbc.connection.init.ScriptParseException", "org.springframework.r2dbc.connection.init.ScriptParseException(java.lang.String, org.springframework.core.io.support.EncodedResource)", "public org.springframework.r2dbc.connection.init.ScriptParseException(java.lang.String, org.springframework.core.io.support.EncodedResource)"], ["org.springframework.r2dbc.connection.init.ScriptParseException", "org.springframework.r2dbc.connection.init.ScriptParseException(java.lang.String, org.springframework.core.io.support.EncodedResource, java.lang.Throwable)", "public org.springframework.r2dbc.connection.init.ScriptParseException(java.lang.String, org.springframework.core.io.support.EncodedResource, java.lang.Throwable)"], ["org.springframework.r2dbc.connection.init.ResourceDatabasePopulator", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator()", "public org.springframework.r2dbc.connection.init.ResourceDatabasePopulator()"], ["org.springframework.r2dbc.connection.init.ResourceDatabasePopulator", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator(org.springframework.core.io.Resource...)", "public org.springframework.r2dbc.connection.init.ResourceDatabasePopulator(org.springframework.core.io.Resource...)"], ["org.springframework.r2dbc.connection.init.ResourceDatabasePopulator", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator(boolean, boolean, java.lang.String, org.springframework.core.io.Resource...)", "public org.springframework.r2dbc.connection.init.ResourceDatabasePopulator(boolean, boolean, java.lang.String, org.springframework.core.io.Resource...)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.addScript(org.springframework.core.io.Resource)", "public void addScript(org.springframework.core.io.Resource)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.addScripts(org.springframework.core.io.Resource...)", "public void addScripts(org.springframework.core.io.Resource...)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setScripts(org.springframework.core.io.Resource...)", "public void setScripts(org.springframework.core.io.Resource...)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setSqlScriptEncoding(java.lang.String)", "public void setSqlScriptEncoding(java.lang.String)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setSqlScriptEncoding(java.nio.charset.Charset)", "public void setSqlScriptEncoding(java.nio.charset.Charset)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setSeparator(java.lang.String)", "public void setSeparator(java.lang.String)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setCommentPrefix(java.lang.String)", "public void setCommentPrefix(java.lang.String)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setCommentPrefixes(java.lang.String...)", "public void setCommentPrefixes(java.lang.String...)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setBlockCommentStartDelimiter(java.lang.String)", "public void setBlockCommentStartDelimiter(java.lang.String)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setBlockCommentEndDelimiter(java.lang.String)", "public void setBlockCommentEndDelimiter(java.lang.String)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setContinueOnError(boolean)", "public void setContinueOnError(boolean)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setIgnoreFailedDrops(boolean)", "public void setIgnoreFailedDrops(boolean)"], ["void", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.setDataBufferFactory(org.springframework.core.io.buffer.DataBufferFactory)", "public void setDataBufferFactory(org.springframework.core.io.buffer.DataBufferFactory)"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator.populate(io.r2dbc.spi.Connection)", "public reactor.core.publisher.Mono<java.lang.Void> populate(io.r2dbc.spi.Connection) throws org.springframework.r2dbc.connection.init.ScriptException"], ["org.springframework.r2dbc.connection.init.ScriptException", "org.springframework.r2dbc.connection.init.ScriptException(java.lang.String)", "public org.springframework.r2dbc.connection.init.ScriptException(java.lang.String)"], ["org.springframework.r2dbc.connection.init.ScriptException", "org.springframework.r2dbc.connection.init.ScriptException(java.lang.String, java.lang.Throwable)", "public org.springframework.r2dbc.connection.init.ScriptException(java.lang.String, java.lang.Throwable)"], ["org.springframework.r2dbc.connection.init.UncategorizedScriptException", "org.springframework.r2dbc.connection.init.UncategorizedScriptException(java.lang.String)", "public org.springframework.r2dbc.connection.init.UncategorizedScriptException(java.lang.String)"], ["org.springframework.r2dbc.connection.init.UncategorizedScriptException", "org.springframework.r2dbc.connection.init.UncategorizedScriptException(java.lang.String, java.lang.Throwable)", "public org.springframework.r2dbc.connection.init.UncategorizedScriptException(java.lang.String, java.lang.Throwable)"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.DatabasePopulator.populate(io.r2dbc.spi.ConnectionFactory)", "public default reactor.core.publisher.Mono<java.lang.Void> populate(io.r2dbc.spi.ConnectionFactory) throws org.springframework.dao.DataAccessException"], ["org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer()", "public org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer()"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.setConnectionFactory(io.r2dbc.spi.ConnectionFactory)", "public void setConnectionFactory(io.r2dbc.spi.ConnectionFactory)"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.setDatabasePopulator(org.springframework.r2dbc.connection.init.DatabasePopulator)", "public void setDatabasePopulator(org.springframework.r2dbc.connection.init.DatabasePopulator)"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.setDatabaseCleaner(org.springframework.r2dbc.connection.init.DatabasePopulator)", "public void setDatabaseCleaner(org.springframework.r2dbc.connection.init.DatabasePopulator)"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.setEnabled(boolean)", "public void setEnabled(boolean)"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.afterPropertiesSet()", "public void afterPropertiesSet()"], ["void", "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer.destroy()", "public void destroy()"], ["org.springframework.r2dbc.connection.init.CannotReadScriptException", "org.springframework.r2dbc.connection.init.CannotReadScriptException(org.springframework.core.io.support.EncodedResource, java.lang.Throwable)", "public org.springframework.r2dbc.connection.init.CannotReadScriptException(org.springframework.core.io.support.EncodedResource, java.lang.Throwable)"], ["org.springframework.r2dbc.connection.init.ScriptUtils", "org.springframework.r2dbc.connection.init.ScriptUtils()", "public org.springframework.r2dbc.connection.init.ScriptUtils()"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.ScriptUtils.executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.Resource)", "public static reactor.core.publisher.Mono<java.lang.Void> executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.Resource) throws org.springframework.r2dbc.connection.init.ScriptException"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.ScriptUtils.executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource)", "public static reactor.core.publisher.Mono<java.lang.Void> executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource) throws org.springframework.r2dbc.connection.init.ScriptException"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.ScriptUtils.executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource, org.springframework.core.io.buffer.DataBufferFactory, boolean, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String)", "public static reactor.core.publisher.Mono<java.lang.Void> executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource, org.springframework.core.io.buffer.DataBufferFactory, boolean, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.springframework.r2dbc.connection.init.ScriptException"], ["reactor.core.publisher.Mono<java.lang.Void>", "org.springframework.r2dbc.connection.init.ScriptUtils.executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource, org.springframework.core.io.buffer.DataBufferFactory, boolean, boolean, java.lang.String[], java.lang.String, java.lang.String, java.lang.String)", "public static reactor.core.publisher.Mono<java.lang.Void> executeSqlScript(io.r2dbc.spi.Connection, org.springframework.core.io.support.EncodedResource, org.springframework.core.io.buffer.DataBufferFactory, boolean, boolean, java.lang.String[], java.lang.String, java.lang.String, java.lang.String) throws org.springframework.r2dbc.connection.init.ScriptException"], ["org.springframework.r2dbc.connection.init.ScriptStatementFailedException", "org.springframework.r2dbc.connection.init.ScriptStatementFailedException(java.lang.String, int, org.springframework.core.io.support.EncodedResource, java.lang.Throwable)", "public org.springframework.r2dbc.connection.init.ScriptStatementFailedException(java.lang.String, int, org.springframework.core.io.support.EncodedResource, java.lang.Throwable)"], ["java.lang.String", "org.springframework.r2dbc.connection.init.ScriptStatementFailedException.buildErrorMessage(java.lang.String, int, org.springframework.core.io.support.EncodedResource)", "public static java.lang.String buildErrorMessage(java.lang.String, int, org.springframework.core.io.support.EncodedResource)"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.setConnectionHolder(org.springframework.r2dbc.connection.ConnectionHolder)", "public void setConnectionHolder(org.springframework.r2dbc.connection.ConnectionHolder)"], ["org.springframework.r2dbc.connection.ConnectionHolder", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.getConnectionHolder()", "public org.springframework.r2dbc.connection.ConnectionHolder getConnectionHolder()"], ["boolean", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.hasConnectionHolder()", "public boolean hasConnectionHolder()"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.setPreviousIsolationLevel(io.r2dbc.spi.IsolationLevel)", "public void setPreviousIsolationLevel(io.r2dbc.spi.IsolationLevel)"], ["io.r2dbc.spi.IsolationLevel", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.getPreviousIsolationLevel()", "public io.r2dbc.spi.IsolationLevel getPreviousIsolationLevel()"], ["void", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.setMustRestoreAutoCommit(boolean)", "public void setMustRestoreAutoCommit(boolean)"], ["boolean", "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject.isMustRestoreAutoCommit()", "public boolean isMustRestoreAutoCommit()"], ["<T> java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt.awaitOne(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)", "public static final <T> java.lang.Object awaitOne(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)"], ["<T> java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt.awaitOneOrNull(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)", "public static final <T> java.lang.Object awaitOneOrNull(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)"], ["<T> java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt.awaitSingle(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)", "public static final <T> java.lang.Object awaitSingle(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)"], ["<T> java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt.awaitSingleOrNull(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)", "public static final <T> java.lang.Object awaitSingleOrNull(org.springframework.r2dbc.core.RowsFetchSpec<T>, kotlin.coroutines.Continuation<? super T>)"], ["<T> kotlinx.coroutines.flow.Flow<T>", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt.flow(org.springframework.r2dbc.core.RowsFetchSpec<T>)", "public static final <T> kotlinx.coroutines.flow.Flow<T> flow(org.springframework.r2dbc.core.RowsFetchSpec<T>)"], ["java.lang.Object", "org.springframework.r2dbc.core.UpdatedRowsFetchSpecExtensionsKt.awaitRowsUpdated(org.springframework.r2dbc.core.UpdatedRowsFetchSpec, kotlin.coroutines.Continuation<? super java.lang.Integer>)", "public static final java.lang.Object awaitRowsUpdated(org.springframework.r2dbc.core.UpdatedRowsFetchSpec, kotlin.coroutines.Continuation<? super java.lang.Integer>)"], ["java.lang.Object", "org.springframework.r2dbc.core.DatabaseClientExtensionsKt.await(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, kotlin.coroutines.Continuation<? super kotlin.Unit>)", "public static final java.lang.Object await(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, kotlin.coroutines.Continuation<? super kotlin.Unit>)"], ["<T> org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DatabaseClientExtensionsKt.bind(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, int, T)", "public static final <T> org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bind(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, int, T)"], ["<T> org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec", "org.springframework.r2dbc.core.DatabaseClientExtensionsKt.bind(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, java.lang.String, T)", "public static final <T> org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec bind(org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec, java.lang.String, T)"], ["java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt$awaitOne$1.invokeSuspend(java.lang.Object)", "public final java.lang.Object invokeSuspend(java.lang.Object)"], ["java.lang.Object", "org.springframework.r2dbc.core.UpdatedRowsFetchSpecExtensionsKt$awaitRowsUpdated$1.invokeSuspend(java.lang.Object)", "public final java.lang.Object invokeSuspend(java.lang.Object)"], ["java.lang.Object", "org.springframework.r2dbc.core.RowsFetchSpecExtensionsKt$awaitSingle$1.invokeSuspend(java.lang.Object)", "public final java.lang.Object invokeSuspend(java.lang.Object)"]]}